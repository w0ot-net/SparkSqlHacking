package org.apache.parquet.column.values.bitpacking;

import java.nio.ByteBuffer;

public abstract class ByteBitPackingForLongLE {
   private static final BytePackerForLong[] packers = new BytePackerForLong[65];
   public static final BytePackerForLongFactory factory;

   static {
      packers[0] = new Packer0();
      packers[1] = new Packer1();
      packers[2] = new Packer2();
      packers[3] = new Packer3();
      packers[4] = new Packer4();
      packers[5] = new Packer5();
      packers[6] = new Packer6();
      packers[7] = new Packer7();
      packers[8] = new Packer8();
      packers[9] = new Packer9();
      packers[10] = new Packer10();
      packers[11] = new Packer11();
      packers[12] = new Packer12();
      packers[13] = new Packer13();
      packers[14] = new Packer14();
      packers[15] = new Packer15();
      packers[16] = new Packer16();
      packers[17] = new Packer17();
      packers[18] = new Packer18();
      packers[19] = new Packer19();
      packers[20] = new Packer20();
      packers[21] = new Packer21();
      packers[22] = new Packer22();
      packers[23] = new Packer23();
      packers[24] = new Packer24();
      packers[25] = new Packer25();
      packers[26] = new Packer26();
      packers[27] = new Packer27();
      packers[28] = new Packer28();
      packers[29] = new Packer29();
      packers[30] = new Packer30();
      packers[31] = new Packer31();
      packers[32] = new Packer32();
      packers[33] = new Packer33();
      packers[34] = new Packer34();
      packers[35] = new Packer35();
      packers[36] = new Packer36();
      packers[37] = new Packer37();
      packers[38] = new Packer38();
      packers[39] = new Packer39();
      packers[40] = new Packer40();
      packers[41] = new Packer41();
      packers[42] = new Packer42();
      packers[43] = new Packer43();
      packers[44] = new Packer44();
      packers[45] = new Packer45();
      packers[46] = new Packer46();
      packers[47] = new Packer47();
      packers[48] = new Packer48();
      packers[49] = new Packer49();
      packers[50] = new Packer50();
      packers[51] = new Packer51();
      packers[52] = new Packer52();
      packers[53] = new Packer53();
      packers[54] = new Packer54();
      packers[55] = new Packer55();
      packers[56] = new Packer56();
      packers[57] = new Packer57();
      packers[58] = new Packer58();
      packers[59] = new Packer59();
      packers[60] = new Packer60();
      packers[61] = new Packer61();
      packers[62] = new Packer62();
      packers[63] = new Packer63();
      packers[64] = new Packer64();
      factory = new BytePackerForLongFactory() {
         public BytePackerForLong newBytePackerForLong(int bitWidth) {
            return ByteBitPackingForLongLE.packers[bitWidth];
         }
      };
   }

   private static final class Packer0 extends BytePackerForLong {
      private Packer0() {
         super(0);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
      }
   }

   private static final class Packer1 extends BytePackerForLong {
      private Packer1() {
         super(1);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 1L | (in[1 + inPos] & 1L) << 1 | (in[2 + inPos] & 1L) << 2 | (in[3 + inPos] & 1L) << 3 | (in[4 + inPos] & 1L) << 4 | (in[5 + inPos] & 1L) << 5 | (in[6 + inPos] & 1L) << 6 | (in[7 + inPos] & 1L) << 7) & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 1L | (in[1 + inPos] & 1L) << 1 | (in[2 + inPos] & 1L) << 2 | (in[3 + inPos] & 1L) << 3 | (in[4 + inPos] & 1L) << 4 | (in[5 + inPos] & 1L) << 5 | (in[6 + inPos] & 1L) << 6 | (in[7 + inPos] & 1L) << 7) & 255L));
         out[1 + outPos] = (byte)((int)((in[8 + inPos] & 1L | (in[9 + inPos] & 1L) << 1 | (in[10 + inPos] & 1L) << 2 | (in[11 + inPos] & 1L) << 3 | (in[12 + inPos] & 1L) << 4 | (in[13 + inPos] & 1L) << 5 | (in[14 + inPos] & 1L) << 6 | (in[15 + inPos] & 1L) << 7) & 255L));
         out[2 + outPos] = (byte)((int)((in[16 + inPos] & 1L | (in[17 + inPos] & 1L) << 1 | (in[18 + inPos] & 1L) << 2 | (in[19 + inPos] & 1L) << 3 | (in[20 + inPos] & 1L) << 4 | (in[21 + inPos] & 1L) << 5 | (in[22 + inPos] & 1L) << 6 | (in[23 + inPos] & 1L) << 7) & 255L));
         out[3 + outPos] = (byte)((int)((in[24 + inPos] & 1L | (in[25 + inPos] & 1L) << 1 | (in[26 + inPos] & 1L) << 2 | (in[27 + inPos] & 1L) << 3 | (in[28 + inPos] & 1L) << 4 | (in[29 + inPos] & 1L) << 5 | (in[30 + inPos] & 1L) << 6 | (in[31 + inPos] & 1L) << 7) & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 1L;
         out[1 + outPos] = (long)in[0 + inPos] >> 1 & 1L;
         out[2 + outPos] = (long)in[0 + inPos] >> 2 & 1L;
         out[3 + outPos] = (long)in[0 + inPos] >> 3 & 1L;
         out[4 + outPos] = (long)in[0 + inPos] >> 4 & 1L;
         out[5 + outPos] = (long)in[0 + inPos] >> 5 & 1L;
         out[6 + outPos] = (long)in[0 + inPos] >> 6 & 1L;
         out[7 + outPos] = (long)in[0 + inPos] >> 7 & 1L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 1L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 1 & 1L;
         out[2 + outPos] = (long)in.get(0 + inPos) >> 2 & 1L;
         out[3 + outPos] = (long)in.get(0 + inPos) >> 3 & 1L;
         out[4 + outPos] = (long)in.get(0 + inPos) >> 4 & 1L;
         out[5 + outPos] = (long)in.get(0 + inPos) >> 5 & 1L;
         out[6 + outPos] = (long)in.get(0 + inPos) >> 6 & 1L;
         out[7 + outPos] = (long)in.get(0 + inPos) >> 7 & 1L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 1L;
         out[1 + outPos] = (long)in[0 + inPos] >> 1 & 1L;
         out[2 + outPos] = (long)in[0 + inPos] >> 2 & 1L;
         out[3 + outPos] = (long)in[0 + inPos] >> 3 & 1L;
         out[4 + outPos] = (long)in[0 + inPos] >> 4 & 1L;
         out[5 + outPos] = (long)in[0 + inPos] >> 5 & 1L;
         out[6 + outPos] = (long)in[0 + inPos] >> 6 & 1L;
         out[7 + outPos] = (long)in[0 + inPos] >> 7 & 1L;
         out[8 + outPos] = (long)in[1 + inPos] & 1L;
         out[9 + outPos] = (long)in[1 + inPos] >> 1 & 1L;
         out[10 + outPos] = (long)in[1 + inPos] >> 2 & 1L;
         out[11 + outPos] = (long)in[1 + inPos] >> 3 & 1L;
         out[12 + outPos] = (long)in[1 + inPos] >> 4 & 1L;
         out[13 + outPos] = (long)in[1 + inPos] >> 5 & 1L;
         out[14 + outPos] = (long)in[1 + inPos] >> 6 & 1L;
         out[15 + outPos] = (long)in[1 + inPos] >> 7 & 1L;
         out[16 + outPos] = (long)in[2 + inPos] & 1L;
         out[17 + outPos] = (long)in[2 + inPos] >> 1 & 1L;
         out[18 + outPos] = (long)in[2 + inPos] >> 2 & 1L;
         out[19 + outPos] = (long)in[2 + inPos] >> 3 & 1L;
         out[20 + outPos] = (long)in[2 + inPos] >> 4 & 1L;
         out[21 + outPos] = (long)in[2 + inPos] >> 5 & 1L;
         out[22 + outPos] = (long)in[2 + inPos] >> 6 & 1L;
         out[23 + outPos] = (long)in[2 + inPos] >> 7 & 1L;
         out[24 + outPos] = (long)in[3 + inPos] & 1L;
         out[25 + outPos] = (long)in[3 + inPos] >> 1 & 1L;
         out[26 + outPos] = (long)in[3 + inPos] >> 2 & 1L;
         out[27 + outPos] = (long)in[3 + inPos] >> 3 & 1L;
         out[28 + outPos] = (long)in[3 + inPos] >> 4 & 1L;
         out[29 + outPos] = (long)in[3 + inPos] >> 5 & 1L;
         out[30 + outPos] = (long)in[3 + inPos] >> 6 & 1L;
         out[31 + outPos] = (long)in[3 + inPos] >> 7 & 1L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 1L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 1 & 1L;
         out[2 + outPos] = (long)in.get(0 + inPos) >> 2 & 1L;
         out[3 + outPos] = (long)in.get(0 + inPos) >> 3 & 1L;
         out[4 + outPos] = (long)in.get(0 + inPos) >> 4 & 1L;
         out[5 + outPos] = (long)in.get(0 + inPos) >> 5 & 1L;
         out[6 + outPos] = (long)in.get(0 + inPos) >> 6 & 1L;
         out[7 + outPos] = (long)in.get(0 + inPos) >> 7 & 1L;
         out[8 + outPos] = (long)in.get(1 + inPos) & 1L;
         out[9 + outPos] = (long)in.get(1 + inPos) >> 1 & 1L;
         out[10 + outPos] = (long)in.get(1 + inPos) >> 2 & 1L;
         out[11 + outPos] = (long)in.get(1 + inPos) >> 3 & 1L;
         out[12 + outPos] = (long)in.get(1 + inPos) >> 4 & 1L;
         out[13 + outPos] = (long)in.get(1 + inPos) >> 5 & 1L;
         out[14 + outPos] = (long)in.get(1 + inPos) >> 6 & 1L;
         out[15 + outPos] = (long)in.get(1 + inPos) >> 7 & 1L;
         out[16 + outPos] = (long)in.get(2 + inPos) & 1L;
         out[17 + outPos] = (long)in.get(2 + inPos) >> 1 & 1L;
         out[18 + outPos] = (long)in.get(2 + inPos) >> 2 & 1L;
         out[19 + outPos] = (long)in.get(2 + inPos) >> 3 & 1L;
         out[20 + outPos] = (long)in.get(2 + inPos) >> 4 & 1L;
         out[21 + outPos] = (long)in.get(2 + inPos) >> 5 & 1L;
         out[22 + outPos] = (long)in.get(2 + inPos) >> 6 & 1L;
         out[23 + outPos] = (long)in.get(2 + inPos) >> 7 & 1L;
         out[24 + outPos] = (long)in.get(3 + inPos) & 1L;
         out[25 + outPos] = (long)in.get(3 + inPos) >> 1 & 1L;
         out[26 + outPos] = (long)in.get(3 + inPos) >> 2 & 1L;
         out[27 + outPos] = (long)in.get(3 + inPos) >> 3 & 1L;
         out[28 + outPos] = (long)in.get(3 + inPos) >> 4 & 1L;
         out[29 + outPos] = (long)in.get(3 + inPos) >> 5 & 1L;
         out[30 + outPos] = (long)in.get(3 + inPos) >> 6 & 1L;
         out[31 + outPos] = (long)in.get(3 + inPos) >> 7 & 1L;
      }
   }

   private static final class Packer2 extends BytePackerForLong {
      private Packer2() {
         super(2);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 3L | (in[1 + inPos] & 3L) << 2 | (in[2 + inPos] & 3L) << 4 | (in[3 + inPos] & 3L) << 6) & 255L));
         out[1 + outPos] = (byte)((int)((in[4 + inPos] & 3L | (in[5 + inPos] & 3L) << 2 | (in[6 + inPos] & 3L) << 4 | (in[7 + inPos] & 3L) << 6) & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 3L | (in[1 + inPos] & 3L) << 2 | (in[2 + inPos] & 3L) << 4 | (in[3 + inPos] & 3L) << 6) & 255L));
         out[1 + outPos] = (byte)((int)((in[4 + inPos] & 3L | (in[5 + inPos] & 3L) << 2 | (in[6 + inPos] & 3L) << 4 | (in[7 + inPos] & 3L) << 6) & 255L));
         out[2 + outPos] = (byte)((int)((in[8 + inPos] & 3L | (in[9 + inPos] & 3L) << 2 | (in[10 + inPos] & 3L) << 4 | (in[11 + inPos] & 3L) << 6) & 255L));
         out[3 + outPos] = (byte)((int)((in[12 + inPos] & 3L | (in[13 + inPos] & 3L) << 2 | (in[14 + inPos] & 3L) << 4 | (in[15 + inPos] & 3L) << 6) & 255L));
         out[4 + outPos] = (byte)((int)((in[16 + inPos] & 3L | (in[17 + inPos] & 3L) << 2 | (in[18 + inPos] & 3L) << 4 | (in[19 + inPos] & 3L) << 6) & 255L));
         out[5 + outPos] = (byte)((int)((in[20 + inPos] & 3L | (in[21 + inPos] & 3L) << 2 | (in[22 + inPos] & 3L) << 4 | (in[23 + inPos] & 3L) << 6) & 255L));
         out[6 + outPos] = (byte)((int)((in[24 + inPos] & 3L | (in[25 + inPos] & 3L) << 2 | (in[26 + inPos] & 3L) << 4 | (in[27 + inPos] & 3L) << 6) & 255L));
         out[7 + outPos] = (byte)((int)((in[28 + inPos] & 3L | (in[29 + inPos] & 3L) << 2 | (in[30 + inPos] & 3L) << 4 | (in[31 + inPos] & 3L) << 6) & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 3L;
         out[1 + outPos] = (long)in[0 + inPos] >> 2 & 3L;
         out[2 + outPos] = (long)in[0 + inPos] >> 4 & 3L;
         out[3 + outPos] = (long)in[0 + inPos] >> 6 & 3L;
         out[4 + outPos] = (long)in[1 + inPos] & 3L;
         out[5 + outPos] = (long)in[1 + inPos] >> 2 & 3L;
         out[6 + outPos] = (long)in[1 + inPos] >> 4 & 3L;
         out[7 + outPos] = (long)in[1 + inPos] >> 6 & 3L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 3L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 2 & 3L;
         out[2 + outPos] = (long)in.get(0 + inPos) >> 4 & 3L;
         out[3 + outPos] = (long)in.get(0 + inPos) >> 6 & 3L;
         out[4 + outPos] = (long)in.get(1 + inPos) & 3L;
         out[5 + outPos] = (long)in.get(1 + inPos) >> 2 & 3L;
         out[6 + outPos] = (long)in.get(1 + inPos) >> 4 & 3L;
         out[7 + outPos] = (long)in.get(1 + inPos) >> 6 & 3L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 3L;
         out[1 + outPos] = (long)in[0 + inPos] >> 2 & 3L;
         out[2 + outPos] = (long)in[0 + inPos] >> 4 & 3L;
         out[3 + outPos] = (long)in[0 + inPos] >> 6 & 3L;
         out[4 + outPos] = (long)in[1 + inPos] & 3L;
         out[5 + outPos] = (long)in[1 + inPos] >> 2 & 3L;
         out[6 + outPos] = (long)in[1 + inPos] >> 4 & 3L;
         out[7 + outPos] = (long)in[1 + inPos] >> 6 & 3L;
         out[8 + outPos] = (long)in[2 + inPos] & 3L;
         out[9 + outPos] = (long)in[2 + inPos] >> 2 & 3L;
         out[10 + outPos] = (long)in[2 + inPos] >> 4 & 3L;
         out[11 + outPos] = (long)in[2 + inPos] >> 6 & 3L;
         out[12 + outPos] = (long)in[3 + inPos] & 3L;
         out[13 + outPos] = (long)in[3 + inPos] >> 2 & 3L;
         out[14 + outPos] = (long)in[3 + inPos] >> 4 & 3L;
         out[15 + outPos] = (long)in[3 + inPos] >> 6 & 3L;
         out[16 + outPos] = (long)in[4 + inPos] & 3L;
         out[17 + outPos] = (long)in[4 + inPos] >> 2 & 3L;
         out[18 + outPos] = (long)in[4 + inPos] >> 4 & 3L;
         out[19 + outPos] = (long)in[4 + inPos] >> 6 & 3L;
         out[20 + outPos] = (long)in[5 + inPos] & 3L;
         out[21 + outPos] = (long)in[5 + inPos] >> 2 & 3L;
         out[22 + outPos] = (long)in[5 + inPos] >> 4 & 3L;
         out[23 + outPos] = (long)in[5 + inPos] >> 6 & 3L;
         out[24 + outPos] = (long)in[6 + inPos] & 3L;
         out[25 + outPos] = (long)in[6 + inPos] >> 2 & 3L;
         out[26 + outPos] = (long)in[6 + inPos] >> 4 & 3L;
         out[27 + outPos] = (long)in[6 + inPos] >> 6 & 3L;
         out[28 + outPos] = (long)in[7 + inPos] & 3L;
         out[29 + outPos] = (long)in[7 + inPos] >> 2 & 3L;
         out[30 + outPos] = (long)in[7 + inPos] >> 4 & 3L;
         out[31 + outPos] = (long)in[7 + inPos] >> 6 & 3L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 3L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 2 & 3L;
         out[2 + outPos] = (long)in.get(0 + inPos) >> 4 & 3L;
         out[3 + outPos] = (long)in.get(0 + inPos) >> 6 & 3L;
         out[4 + outPos] = (long)in.get(1 + inPos) & 3L;
         out[5 + outPos] = (long)in.get(1 + inPos) >> 2 & 3L;
         out[6 + outPos] = (long)in.get(1 + inPos) >> 4 & 3L;
         out[7 + outPos] = (long)in.get(1 + inPos) >> 6 & 3L;
         out[8 + outPos] = (long)in.get(2 + inPos) & 3L;
         out[9 + outPos] = (long)in.get(2 + inPos) >> 2 & 3L;
         out[10 + outPos] = (long)in.get(2 + inPos) >> 4 & 3L;
         out[11 + outPos] = (long)in.get(2 + inPos) >> 6 & 3L;
         out[12 + outPos] = (long)in.get(3 + inPos) & 3L;
         out[13 + outPos] = (long)in.get(3 + inPos) >> 2 & 3L;
         out[14 + outPos] = (long)in.get(3 + inPos) >> 4 & 3L;
         out[15 + outPos] = (long)in.get(3 + inPos) >> 6 & 3L;
         out[16 + outPos] = (long)in.get(4 + inPos) & 3L;
         out[17 + outPos] = (long)in.get(4 + inPos) >> 2 & 3L;
         out[18 + outPos] = (long)in.get(4 + inPos) >> 4 & 3L;
         out[19 + outPos] = (long)in.get(4 + inPos) >> 6 & 3L;
         out[20 + outPos] = (long)in.get(5 + inPos) & 3L;
         out[21 + outPos] = (long)in.get(5 + inPos) >> 2 & 3L;
         out[22 + outPos] = (long)in.get(5 + inPos) >> 4 & 3L;
         out[23 + outPos] = (long)in.get(5 + inPos) >> 6 & 3L;
         out[24 + outPos] = (long)in.get(6 + inPos) & 3L;
         out[25 + outPos] = (long)in.get(6 + inPos) >> 2 & 3L;
         out[26 + outPos] = (long)in.get(6 + inPos) >> 4 & 3L;
         out[27 + outPos] = (long)in.get(6 + inPos) >> 6 & 3L;
         out[28 + outPos] = (long)in.get(7 + inPos) & 3L;
         out[29 + outPos] = (long)in.get(7 + inPos) >> 2 & 3L;
         out[30 + outPos] = (long)in.get(7 + inPos) >> 4 & 3L;
         out[31 + outPos] = (long)in.get(7 + inPos) >> 6 & 3L;
      }
   }

   private static final class Packer3 extends BytePackerForLong {
      private Packer3() {
         super(3);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 7L | (in[1 + inPos] & 7L) << 3 | (in[2 + inPos] & 7L) << 6) & 255L));
         out[1 + outPos] = (byte)((int)(((in[2 + inPos] & 7L) >>> 2 | (in[3 + inPos] & 7L) << 1 | (in[4 + inPos] & 7L) << 4 | (in[5 + inPos] & 7L) << 7) & 255L));
         out[2 + outPos] = (byte)((int)(((in[5 + inPos] & 7L) >>> 1 | (in[6 + inPos] & 7L) << 2 | (in[7 + inPos] & 7L) << 5) & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 7L | (in[1 + inPos] & 7L) << 3 | (in[2 + inPos] & 7L) << 6) & 255L));
         out[1 + outPos] = (byte)((int)(((in[2 + inPos] & 7L) >>> 2 | (in[3 + inPos] & 7L) << 1 | (in[4 + inPos] & 7L) << 4 | (in[5 + inPos] & 7L) << 7) & 255L));
         out[2 + outPos] = (byte)((int)(((in[5 + inPos] & 7L) >>> 1 | (in[6 + inPos] & 7L) << 2 | (in[7 + inPos] & 7L) << 5) & 255L));
         out[3 + outPos] = (byte)((int)((in[8 + inPos] & 7L | (in[9 + inPos] & 7L) << 3 | (in[10 + inPos] & 7L) << 6) & 255L));
         out[4 + outPos] = (byte)((int)(((in[10 + inPos] & 7L) >>> 2 | (in[11 + inPos] & 7L) << 1 | (in[12 + inPos] & 7L) << 4 | (in[13 + inPos] & 7L) << 7) & 255L));
         out[5 + outPos] = (byte)((int)(((in[13 + inPos] & 7L) >>> 1 | (in[14 + inPos] & 7L) << 2 | (in[15 + inPos] & 7L) << 5) & 255L));
         out[6 + outPos] = (byte)((int)((in[16 + inPos] & 7L | (in[17 + inPos] & 7L) << 3 | (in[18 + inPos] & 7L) << 6) & 255L));
         out[7 + outPos] = (byte)((int)(((in[18 + inPos] & 7L) >>> 2 | (in[19 + inPos] & 7L) << 1 | (in[20 + inPos] & 7L) << 4 | (in[21 + inPos] & 7L) << 7) & 255L));
         out[8 + outPos] = (byte)((int)(((in[21 + inPos] & 7L) >>> 1 | (in[22 + inPos] & 7L) << 2 | (in[23 + inPos] & 7L) << 5) & 255L));
         out[9 + outPos] = (byte)((int)((in[24 + inPos] & 7L | (in[25 + inPos] & 7L) << 3 | (in[26 + inPos] & 7L) << 6) & 255L));
         out[10 + outPos] = (byte)((int)(((in[26 + inPos] & 7L) >>> 2 | (in[27 + inPos] & 7L) << 1 | (in[28 + inPos] & 7L) << 4 | (in[29 + inPos] & 7L) << 7) & 255L));
         out[11 + outPos] = (byte)((int)(((in[29 + inPos] & 7L) >>> 1 | (in[30 + inPos] & 7L) << 2 | (in[31 + inPos] & 7L) << 5) & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 7L;
         out[1 + outPos] = (long)in[0 + inPos] >> 3 & 7L;
         out[2 + outPos] = (long)in[0 + inPos] >> 6 & 3L | (long)in[1 + inPos] << 2 & 7L;
         out[3 + outPos] = (long)in[1 + inPos] >> 1 & 7L;
         out[4 + outPos] = (long)in[1 + inPos] >> 4 & 7L;
         out[5 + outPos] = (long)in[1 + inPos] >> 7 & 1L | (long)in[2 + inPos] << 1 & 7L;
         out[6 + outPos] = (long)in[2 + inPos] >> 2 & 7L;
         out[7 + outPos] = (long)in[2 + inPos] >> 5 & 7L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 7L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 3 & 7L;
         out[2 + outPos] = (long)in.get(0 + inPos) >> 6 & 3L | (long)in.get(1 + inPos) << 2 & 7L;
         out[3 + outPos] = (long)in.get(1 + inPos) >> 1 & 7L;
         out[4 + outPos] = (long)in.get(1 + inPos) >> 4 & 7L;
         out[5 + outPos] = (long)in.get(1 + inPos) >> 7 & 1L | (long)in.get(2 + inPos) << 1 & 7L;
         out[6 + outPos] = (long)in.get(2 + inPos) >> 2 & 7L;
         out[7 + outPos] = (long)in.get(2 + inPos) >> 5 & 7L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 7L;
         out[1 + outPos] = (long)in[0 + inPos] >> 3 & 7L;
         out[2 + outPos] = (long)in[0 + inPos] >> 6 & 3L | (long)in[1 + inPos] << 2 & 7L;
         out[3 + outPos] = (long)in[1 + inPos] >> 1 & 7L;
         out[4 + outPos] = (long)in[1 + inPos] >> 4 & 7L;
         out[5 + outPos] = (long)in[1 + inPos] >> 7 & 1L | (long)in[2 + inPos] << 1 & 7L;
         out[6 + outPos] = (long)in[2 + inPos] >> 2 & 7L;
         out[7 + outPos] = (long)in[2 + inPos] >> 5 & 7L;
         out[8 + outPos] = (long)in[3 + inPos] & 7L;
         out[9 + outPos] = (long)in[3 + inPos] >> 3 & 7L;
         out[10 + outPos] = (long)in[3 + inPos] >> 6 & 3L | (long)in[4 + inPos] << 2 & 7L;
         out[11 + outPos] = (long)in[4 + inPos] >> 1 & 7L;
         out[12 + outPos] = (long)in[4 + inPos] >> 4 & 7L;
         out[13 + outPos] = (long)in[4 + inPos] >> 7 & 1L | (long)in[5 + inPos] << 1 & 7L;
         out[14 + outPos] = (long)in[5 + inPos] >> 2 & 7L;
         out[15 + outPos] = (long)in[5 + inPos] >> 5 & 7L;
         out[16 + outPos] = (long)in[6 + inPos] & 7L;
         out[17 + outPos] = (long)in[6 + inPos] >> 3 & 7L;
         out[18 + outPos] = (long)in[6 + inPos] >> 6 & 3L | (long)in[7 + inPos] << 2 & 7L;
         out[19 + outPos] = (long)in[7 + inPos] >> 1 & 7L;
         out[20 + outPos] = (long)in[7 + inPos] >> 4 & 7L;
         out[21 + outPos] = (long)in[7 + inPos] >> 7 & 1L | (long)in[8 + inPos] << 1 & 7L;
         out[22 + outPos] = (long)in[8 + inPos] >> 2 & 7L;
         out[23 + outPos] = (long)in[8 + inPos] >> 5 & 7L;
         out[24 + outPos] = (long)in[9 + inPos] & 7L;
         out[25 + outPos] = (long)in[9 + inPos] >> 3 & 7L;
         out[26 + outPos] = (long)in[9 + inPos] >> 6 & 3L | (long)in[10 + inPos] << 2 & 7L;
         out[27 + outPos] = (long)in[10 + inPos] >> 1 & 7L;
         out[28 + outPos] = (long)in[10 + inPos] >> 4 & 7L;
         out[29 + outPos] = (long)in[10 + inPos] >> 7 & 1L | (long)in[11 + inPos] << 1 & 7L;
         out[30 + outPos] = (long)in[11 + inPos] >> 2 & 7L;
         out[31 + outPos] = (long)in[11 + inPos] >> 5 & 7L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 7L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 3 & 7L;
         out[2 + outPos] = (long)in.get(0 + inPos) >> 6 & 3L | (long)in.get(1 + inPos) << 2 & 7L;
         out[3 + outPos] = (long)in.get(1 + inPos) >> 1 & 7L;
         out[4 + outPos] = (long)in.get(1 + inPos) >> 4 & 7L;
         out[5 + outPos] = (long)in.get(1 + inPos) >> 7 & 1L | (long)in.get(2 + inPos) << 1 & 7L;
         out[6 + outPos] = (long)in.get(2 + inPos) >> 2 & 7L;
         out[7 + outPos] = (long)in.get(2 + inPos) >> 5 & 7L;
         out[8 + outPos] = (long)in.get(3 + inPos) & 7L;
         out[9 + outPos] = (long)in.get(3 + inPos) >> 3 & 7L;
         out[10 + outPos] = (long)in.get(3 + inPos) >> 6 & 3L | (long)in.get(4 + inPos) << 2 & 7L;
         out[11 + outPos] = (long)in.get(4 + inPos) >> 1 & 7L;
         out[12 + outPos] = (long)in.get(4 + inPos) >> 4 & 7L;
         out[13 + outPos] = (long)in.get(4 + inPos) >> 7 & 1L | (long)in.get(5 + inPos) << 1 & 7L;
         out[14 + outPos] = (long)in.get(5 + inPos) >> 2 & 7L;
         out[15 + outPos] = (long)in.get(5 + inPos) >> 5 & 7L;
         out[16 + outPos] = (long)in.get(6 + inPos) & 7L;
         out[17 + outPos] = (long)in.get(6 + inPos) >> 3 & 7L;
         out[18 + outPos] = (long)in.get(6 + inPos) >> 6 & 3L | (long)in.get(7 + inPos) << 2 & 7L;
         out[19 + outPos] = (long)in.get(7 + inPos) >> 1 & 7L;
         out[20 + outPos] = (long)in.get(7 + inPos) >> 4 & 7L;
         out[21 + outPos] = (long)in.get(7 + inPos) >> 7 & 1L | (long)in.get(8 + inPos) << 1 & 7L;
         out[22 + outPos] = (long)in.get(8 + inPos) >> 2 & 7L;
         out[23 + outPos] = (long)in.get(8 + inPos) >> 5 & 7L;
         out[24 + outPos] = (long)in.get(9 + inPos) & 7L;
         out[25 + outPos] = (long)in.get(9 + inPos) >> 3 & 7L;
         out[26 + outPos] = (long)in.get(9 + inPos) >> 6 & 3L | (long)in.get(10 + inPos) << 2 & 7L;
         out[27 + outPos] = (long)in.get(10 + inPos) >> 1 & 7L;
         out[28 + outPos] = (long)in.get(10 + inPos) >> 4 & 7L;
         out[29 + outPos] = (long)in.get(10 + inPos) >> 7 & 1L | (long)in.get(11 + inPos) << 1 & 7L;
         out[30 + outPos] = (long)in.get(11 + inPos) >> 2 & 7L;
         out[31 + outPos] = (long)in.get(11 + inPos) >> 5 & 7L;
      }
   }

   private static final class Packer4 extends BytePackerForLong {
      private Packer4() {
         super(4);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 15L | (in[1 + inPos] & 15L) << 4) & 255L));
         out[1 + outPos] = (byte)((int)((in[2 + inPos] & 15L | (in[3 + inPos] & 15L) << 4) & 255L));
         out[2 + outPos] = (byte)((int)((in[4 + inPos] & 15L | (in[5 + inPos] & 15L) << 4) & 255L));
         out[3 + outPos] = (byte)((int)((in[6 + inPos] & 15L | (in[7 + inPos] & 15L) << 4) & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 15L | (in[1 + inPos] & 15L) << 4) & 255L));
         out[1 + outPos] = (byte)((int)((in[2 + inPos] & 15L | (in[3 + inPos] & 15L) << 4) & 255L));
         out[2 + outPos] = (byte)((int)((in[4 + inPos] & 15L | (in[5 + inPos] & 15L) << 4) & 255L));
         out[3 + outPos] = (byte)((int)((in[6 + inPos] & 15L | (in[7 + inPos] & 15L) << 4) & 255L));
         out[4 + outPos] = (byte)((int)((in[8 + inPos] & 15L | (in[9 + inPos] & 15L) << 4) & 255L));
         out[5 + outPos] = (byte)((int)((in[10 + inPos] & 15L | (in[11 + inPos] & 15L) << 4) & 255L));
         out[6 + outPos] = (byte)((int)((in[12 + inPos] & 15L | (in[13 + inPos] & 15L) << 4) & 255L));
         out[7 + outPos] = (byte)((int)((in[14 + inPos] & 15L | (in[15 + inPos] & 15L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)((in[16 + inPos] & 15L | (in[17 + inPos] & 15L) << 4) & 255L));
         out[9 + outPos] = (byte)((int)((in[18 + inPos] & 15L | (in[19 + inPos] & 15L) << 4) & 255L));
         out[10 + outPos] = (byte)((int)((in[20 + inPos] & 15L | (in[21 + inPos] & 15L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)((in[22 + inPos] & 15L | (in[23 + inPos] & 15L) << 4) & 255L));
         out[12 + outPos] = (byte)((int)((in[24 + inPos] & 15L | (in[25 + inPos] & 15L) << 4) & 255L));
         out[13 + outPos] = (byte)((int)((in[26 + inPos] & 15L | (in[27 + inPos] & 15L) << 4) & 255L));
         out[14 + outPos] = (byte)((int)((in[28 + inPos] & 15L | (in[29 + inPos] & 15L) << 4) & 255L));
         out[15 + outPos] = (byte)((int)((in[30 + inPos] & 15L | (in[31 + inPos] & 15L) << 4) & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 15L;
         out[1 + outPos] = (long)in[0 + inPos] >> 4 & 15L;
         out[2 + outPos] = (long)in[1 + inPos] & 15L;
         out[3 + outPos] = (long)in[1 + inPos] >> 4 & 15L;
         out[4 + outPos] = (long)in[2 + inPos] & 15L;
         out[5 + outPos] = (long)in[2 + inPos] >> 4 & 15L;
         out[6 + outPos] = (long)in[3 + inPos] & 15L;
         out[7 + outPos] = (long)in[3 + inPos] >> 4 & 15L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 15L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 4 & 15L;
         out[2 + outPos] = (long)in.get(1 + inPos) & 15L;
         out[3 + outPos] = (long)in.get(1 + inPos) >> 4 & 15L;
         out[4 + outPos] = (long)in.get(2 + inPos) & 15L;
         out[5 + outPos] = (long)in.get(2 + inPos) >> 4 & 15L;
         out[6 + outPos] = (long)in.get(3 + inPos) & 15L;
         out[7 + outPos] = (long)in.get(3 + inPos) >> 4 & 15L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 15L;
         out[1 + outPos] = (long)in[0 + inPos] >> 4 & 15L;
         out[2 + outPos] = (long)in[1 + inPos] & 15L;
         out[3 + outPos] = (long)in[1 + inPos] >> 4 & 15L;
         out[4 + outPos] = (long)in[2 + inPos] & 15L;
         out[5 + outPos] = (long)in[2 + inPos] >> 4 & 15L;
         out[6 + outPos] = (long)in[3 + inPos] & 15L;
         out[7 + outPos] = (long)in[3 + inPos] >> 4 & 15L;
         out[8 + outPos] = (long)in[4 + inPos] & 15L;
         out[9 + outPos] = (long)in[4 + inPos] >> 4 & 15L;
         out[10 + outPos] = (long)in[5 + inPos] & 15L;
         out[11 + outPos] = (long)in[5 + inPos] >> 4 & 15L;
         out[12 + outPos] = (long)in[6 + inPos] & 15L;
         out[13 + outPos] = (long)in[6 + inPos] >> 4 & 15L;
         out[14 + outPos] = (long)in[7 + inPos] & 15L;
         out[15 + outPos] = (long)in[7 + inPos] >> 4 & 15L;
         out[16 + outPos] = (long)in[8 + inPos] & 15L;
         out[17 + outPos] = (long)in[8 + inPos] >> 4 & 15L;
         out[18 + outPos] = (long)in[9 + inPos] & 15L;
         out[19 + outPos] = (long)in[9 + inPos] >> 4 & 15L;
         out[20 + outPos] = (long)in[10 + inPos] & 15L;
         out[21 + outPos] = (long)in[10 + inPos] >> 4 & 15L;
         out[22 + outPos] = (long)in[11 + inPos] & 15L;
         out[23 + outPos] = (long)in[11 + inPos] >> 4 & 15L;
         out[24 + outPos] = (long)in[12 + inPos] & 15L;
         out[25 + outPos] = (long)in[12 + inPos] >> 4 & 15L;
         out[26 + outPos] = (long)in[13 + inPos] & 15L;
         out[27 + outPos] = (long)in[13 + inPos] >> 4 & 15L;
         out[28 + outPos] = (long)in[14 + inPos] & 15L;
         out[29 + outPos] = (long)in[14 + inPos] >> 4 & 15L;
         out[30 + outPos] = (long)in[15 + inPos] & 15L;
         out[31 + outPos] = (long)in[15 + inPos] >> 4 & 15L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 15L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 4 & 15L;
         out[2 + outPos] = (long)in.get(1 + inPos) & 15L;
         out[3 + outPos] = (long)in.get(1 + inPos) >> 4 & 15L;
         out[4 + outPos] = (long)in.get(2 + inPos) & 15L;
         out[5 + outPos] = (long)in.get(2 + inPos) >> 4 & 15L;
         out[6 + outPos] = (long)in.get(3 + inPos) & 15L;
         out[7 + outPos] = (long)in.get(3 + inPos) >> 4 & 15L;
         out[8 + outPos] = (long)in.get(4 + inPos) & 15L;
         out[9 + outPos] = (long)in.get(4 + inPos) >> 4 & 15L;
         out[10 + outPos] = (long)in.get(5 + inPos) & 15L;
         out[11 + outPos] = (long)in.get(5 + inPos) >> 4 & 15L;
         out[12 + outPos] = (long)in.get(6 + inPos) & 15L;
         out[13 + outPos] = (long)in.get(6 + inPos) >> 4 & 15L;
         out[14 + outPos] = (long)in.get(7 + inPos) & 15L;
         out[15 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L;
         out[16 + outPos] = (long)in.get(8 + inPos) & 15L;
         out[17 + outPos] = (long)in.get(8 + inPos) >> 4 & 15L;
         out[18 + outPos] = (long)in.get(9 + inPos) & 15L;
         out[19 + outPos] = (long)in.get(9 + inPos) >> 4 & 15L;
         out[20 + outPos] = (long)in.get(10 + inPos) & 15L;
         out[21 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L;
         out[22 + outPos] = (long)in.get(11 + inPos) & 15L;
         out[23 + outPos] = (long)in.get(11 + inPos) >> 4 & 15L;
         out[24 + outPos] = (long)in.get(12 + inPos) & 15L;
         out[25 + outPos] = (long)in.get(12 + inPos) >> 4 & 15L;
         out[26 + outPos] = (long)in.get(13 + inPos) & 15L;
         out[27 + outPos] = (long)in.get(13 + inPos) >> 4 & 15L;
         out[28 + outPos] = (long)in.get(14 + inPos) & 15L;
         out[29 + outPos] = (long)in.get(14 + inPos) >> 4 & 15L;
         out[30 + outPos] = (long)in.get(15 + inPos) & 15L;
         out[31 + outPos] = (long)in.get(15 + inPos) >> 4 & 15L;
      }
   }

   private static final class Packer5 extends BytePackerForLong {
      private Packer5() {
         super(5);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 31L | (in[1 + inPos] & 31L) << 5) & 255L));
         out[1 + outPos] = (byte)((int)(((in[1 + inPos] & 31L) >>> 3 | (in[2 + inPos] & 31L) << 2 | (in[3 + inPos] & 31L) << 7) & 255L));
         out[2 + outPos] = (byte)((int)(((in[3 + inPos] & 31L) >>> 1 | (in[4 + inPos] & 31L) << 4) & 255L));
         out[3 + outPos] = (byte)((int)(((in[4 + inPos] & 31L) >>> 4 | (in[5 + inPos] & 31L) << 1 | (in[6 + inPos] & 31L) << 6) & 255L));
         out[4 + outPos] = (byte)((int)(((in[6 + inPos] & 31L) >>> 2 | (in[7 + inPos] & 31L) << 3) & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 31L | (in[1 + inPos] & 31L) << 5) & 255L));
         out[1 + outPos] = (byte)((int)(((in[1 + inPos] & 31L) >>> 3 | (in[2 + inPos] & 31L) << 2 | (in[3 + inPos] & 31L) << 7) & 255L));
         out[2 + outPos] = (byte)((int)(((in[3 + inPos] & 31L) >>> 1 | (in[4 + inPos] & 31L) << 4) & 255L));
         out[3 + outPos] = (byte)((int)(((in[4 + inPos] & 31L) >>> 4 | (in[5 + inPos] & 31L) << 1 | (in[6 + inPos] & 31L) << 6) & 255L));
         out[4 + outPos] = (byte)((int)(((in[6 + inPos] & 31L) >>> 2 | (in[7 + inPos] & 31L) << 3) & 255L));
         out[5 + outPos] = (byte)((int)((in[8 + inPos] & 31L | (in[9 + inPos] & 31L) << 5) & 255L));
         out[6 + outPos] = (byte)((int)(((in[9 + inPos] & 31L) >>> 3 | (in[10 + inPos] & 31L) << 2 | (in[11 + inPos] & 31L) << 7) & 255L));
         out[7 + outPos] = (byte)((int)(((in[11 + inPos] & 31L) >>> 1 | (in[12 + inPos] & 31L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)(((in[12 + inPos] & 31L) >>> 4 | (in[13 + inPos] & 31L) << 1 | (in[14 + inPos] & 31L) << 6) & 255L));
         out[9 + outPos] = (byte)((int)(((in[14 + inPos] & 31L) >>> 2 | (in[15 + inPos] & 31L) << 3) & 255L));
         out[10 + outPos] = (byte)((int)((in[16 + inPos] & 31L | (in[17 + inPos] & 31L) << 5) & 255L));
         out[11 + outPos] = (byte)((int)(((in[17 + inPos] & 31L) >>> 3 | (in[18 + inPos] & 31L) << 2 | (in[19 + inPos] & 31L) << 7) & 255L));
         out[12 + outPos] = (byte)((int)(((in[19 + inPos] & 31L) >>> 1 | (in[20 + inPos] & 31L) << 4) & 255L));
         out[13 + outPos] = (byte)((int)(((in[20 + inPos] & 31L) >>> 4 | (in[21 + inPos] & 31L) << 1 | (in[22 + inPos] & 31L) << 6) & 255L));
         out[14 + outPos] = (byte)((int)(((in[22 + inPos] & 31L) >>> 2 | (in[23 + inPos] & 31L) << 3) & 255L));
         out[15 + outPos] = (byte)((int)((in[24 + inPos] & 31L | (in[25 + inPos] & 31L) << 5) & 255L));
         out[16 + outPos] = (byte)((int)(((in[25 + inPos] & 31L) >>> 3 | (in[26 + inPos] & 31L) << 2 | (in[27 + inPos] & 31L) << 7) & 255L));
         out[17 + outPos] = (byte)((int)(((in[27 + inPos] & 31L) >>> 1 | (in[28 + inPos] & 31L) << 4) & 255L));
         out[18 + outPos] = (byte)((int)(((in[28 + inPos] & 31L) >>> 4 | (in[29 + inPos] & 31L) << 1 | (in[30 + inPos] & 31L) << 6) & 255L));
         out[19 + outPos] = (byte)((int)(((in[30 + inPos] & 31L) >>> 2 | (in[31 + inPos] & 31L) << 3) & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 31L;
         out[1 + outPos] = (long)in[0 + inPos] >> 5 & 7L | (long)in[1 + inPos] << 3 & 31L;
         out[2 + outPos] = (long)in[1 + inPos] >> 2 & 31L;
         out[3 + outPos] = (long)in[1 + inPos] >> 7 & 1L | (long)in[2 + inPos] << 1 & 31L;
         out[4 + outPos] = (long)in[2 + inPos] >> 4 & 15L | (long)in[3 + inPos] << 4 & 31L;
         out[5 + outPos] = (long)in[3 + inPos] >> 1 & 31L;
         out[6 + outPos] = (long)in[3 + inPos] >> 6 & 3L | (long)in[4 + inPos] << 2 & 31L;
         out[7 + outPos] = (long)in[4 + inPos] >> 3 & 31L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 31L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 5 & 7L | (long)in.get(1 + inPos) << 3 & 31L;
         out[2 + outPos] = (long)in.get(1 + inPos) >> 2 & 31L;
         out[3 + outPos] = (long)in.get(1 + inPos) >> 7 & 1L | (long)in.get(2 + inPos) << 1 & 31L;
         out[4 + outPos] = (long)in.get(2 + inPos) >> 4 & 15L | (long)in.get(3 + inPos) << 4 & 31L;
         out[5 + outPos] = (long)in.get(3 + inPos) >> 1 & 31L;
         out[6 + outPos] = (long)in.get(3 + inPos) >> 6 & 3L | (long)in.get(4 + inPos) << 2 & 31L;
         out[7 + outPos] = (long)in.get(4 + inPos) >> 3 & 31L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 31L;
         out[1 + outPos] = (long)in[0 + inPos] >> 5 & 7L | (long)in[1 + inPos] << 3 & 31L;
         out[2 + outPos] = (long)in[1 + inPos] >> 2 & 31L;
         out[3 + outPos] = (long)in[1 + inPos] >> 7 & 1L | (long)in[2 + inPos] << 1 & 31L;
         out[4 + outPos] = (long)in[2 + inPos] >> 4 & 15L | (long)in[3 + inPos] << 4 & 31L;
         out[5 + outPos] = (long)in[3 + inPos] >> 1 & 31L;
         out[6 + outPos] = (long)in[3 + inPos] >> 6 & 3L | (long)in[4 + inPos] << 2 & 31L;
         out[7 + outPos] = (long)in[4 + inPos] >> 3 & 31L;
         out[8 + outPos] = (long)in[5 + inPos] & 31L;
         out[9 + outPos] = (long)in[5 + inPos] >> 5 & 7L | (long)in[6 + inPos] << 3 & 31L;
         out[10 + outPos] = (long)in[6 + inPos] >> 2 & 31L;
         out[11 + outPos] = (long)in[6 + inPos] >> 7 & 1L | (long)in[7 + inPos] << 1 & 31L;
         out[12 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 31L;
         out[13 + outPos] = (long)in[8 + inPos] >> 1 & 31L;
         out[14 + outPos] = (long)in[8 + inPos] >> 6 & 3L | (long)in[9 + inPos] << 2 & 31L;
         out[15 + outPos] = (long)in[9 + inPos] >> 3 & 31L;
         out[16 + outPos] = (long)in[10 + inPos] & 31L;
         out[17 + outPos] = (long)in[10 + inPos] >> 5 & 7L | (long)in[11 + inPos] << 3 & 31L;
         out[18 + outPos] = (long)in[11 + inPos] >> 2 & 31L;
         out[19 + outPos] = (long)in[11 + inPos] >> 7 & 1L | (long)in[12 + inPos] << 1 & 31L;
         out[20 + outPos] = (long)in[12 + inPos] >> 4 & 15L | (long)in[13 + inPos] << 4 & 31L;
         out[21 + outPos] = (long)in[13 + inPos] >> 1 & 31L;
         out[22 + outPos] = (long)in[13 + inPos] >> 6 & 3L | (long)in[14 + inPos] << 2 & 31L;
         out[23 + outPos] = (long)in[14 + inPos] >> 3 & 31L;
         out[24 + outPos] = (long)in[15 + inPos] & 31L;
         out[25 + outPos] = (long)in[15 + inPos] >> 5 & 7L | (long)in[16 + inPos] << 3 & 31L;
         out[26 + outPos] = (long)in[16 + inPos] >> 2 & 31L;
         out[27 + outPos] = (long)in[16 + inPos] >> 7 & 1L | (long)in[17 + inPos] << 1 & 31L;
         out[28 + outPos] = (long)in[17 + inPos] >> 4 & 15L | (long)in[18 + inPos] << 4 & 31L;
         out[29 + outPos] = (long)in[18 + inPos] >> 1 & 31L;
         out[30 + outPos] = (long)in[18 + inPos] >> 6 & 3L | (long)in[19 + inPos] << 2 & 31L;
         out[31 + outPos] = (long)in[19 + inPos] >> 3 & 31L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 31L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 5 & 7L | (long)in.get(1 + inPos) << 3 & 31L;
         out[2 + outPos] = (long)in.get(1 + inPos) >> 2 & 31L;
         out[3 + outPos] = (long)in.get(1 + inPos) >> 7 & 1L | (long)in.get(2 + inPos) << 1 & 31L;
         out[4 + outPos] = (long)in.get(2 + inPos) >> 4 & 15L | (long)in.get(3 + inPos) << 4 & 31L;
         out[5 + outPos] = (long)in.get(3 + inPos) >> 1 & 31L;
         out[6 + outPos] = (long)in.get(3 + inPos) >> 6 & 3L | (long)in.get(4 + inPos) << 2 & 31L;
         out[7 + outPos] = (long)in.get(4 + inPos) >> 3 & 31L;
         out[8 + outPos] = (long)in.get(5 + inPos) & 31L;
         out[9 + outPos] = (long)in.get(5 + inPos) >> 5 & 7L | (long)in.get(6 + inPos) << 3 & 31L;
         out[10 + outPos] = (long)in.get(6 + inPos) >> 2 & 31L;
         out[11 + outPos] = (long)in.get(6 + inPos) >> 7 & 1L | (long)in.get(7 + inPos) << 1 & 31L;
         out[12 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 31L;
         out[13 + outPos] = (long)in.get(8 + inPos) >> 1 & 31L;
         out[14 + outPos] = (long)in.get(8 + inPos) >> 6 & 3L | (long)in.get(9 + inPos) << 2 & 31L;
         out[15 + outPos] = (long)in.get(9 + inPos) >> 3 & 31L;
         out[16 + outPos] = (long)in.get(10 + inPos) & 31L;
         out[17 + outPos] = (long)in.get(10 + inPos) >> 5 & 7L | (long)in.get(11 + inPos) << 3 & 31L;
         out[18 + outPos] = (long)in.get(11 + inPos) >> 2 & 31L;
         out[19 + outPos] = (long)in.get(11 + inPos) >> 7 & 1L | (long)in.get(12 + inPos) << 1 & 31L;
         out[20 + outPos] = (long)in.get(12 + inPos) >> 4 & 15L | (long)in.get(13 + inPos) << 4 & 31L;
         out[21 + outPos] = (long)in.get(13 + inPos) >> 1 & 31L;
         out[22 + outPos] = (long)in.get(13 + inPos) >> 6 & 3L | (long)in.get(14 + inPos) << 2 & 31L;
         out[23 + outPos] = (long)in.get(14 + inPos) >> 3 & 31L;
         out[24 + outPos] = (long)in.get(15 + inPos) & 31L;
         out[25 + outPos] = (long)in.get(15 + inPos) >> 5 & 7L | (long)in.get(16 + inPos) << 3 & 31L;
         out[26 + outPos] = (long)in.get(16 + inPos) >> 2 & 31L;
         out[27 + outPos] = (long)in.get(16 + inPos) >> 7 & 1L | (long)in.get(17 + inPos) << 1 & 31L;
         out[28 + outPos] = (long)in.get(17 + inPos) >> 4 & 15L | (long)in.get(18 + inPos) << 4 & 31L;
         out[29 + outPos] = (long)in.get(18 + inPos) >> 1 & 31L;
         out[30 + outPos] = (long)in.get(18 + inPos) >> 6 & 3L | (long)in.get(19 + inPos) << 2 & 31L;
         out[31 + outPos] = (long)in.get(19 + inPos) >> 3 & 31L;
      }
   }

   private static final class Packer6 extends BytePackerForLong {
      private Packer6() {
         super(6);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 63L | (in[1 + inPos] & 63L) << 6) & 255L));
         out[1 + outPos] = (byte)((int)(((in[1 + inPos] & 63L) >>> 2 | (in[2 + inPos] & 63L) << 4) & 255L));
         out[2 + outPos] = (byte)((int)(((in[2 + inPos] & 63L) >>> 4 | (in[3 + inPos] & 63L) << 2) & 255L));
         out[3 + outPos] = (byte)((int)((in[4 + inPos] & 63L | (in[5 + inPos] & 63L) << 6) & 255L));
         out[4 + outPos] = (byte)((int)(((in[5 + inPos] & 63L) >>> 2 | (in[6 + inPos] & 63L) << 4) & 255L));
         out[5 + outPos] = (byte)((int)(((in[6 + inPos] & 63L) >>> 4 | (in[7 + inPos] & 63L) << 2) & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 63L | (in[1 + inPos] & 63L) << 6) & 255L));
         out[1 + outPos] = (byte)((int)(((in[1 + inPos] & 63L) >>> 2 | (in[2 + inPos] & 63L) << 4) & 255L));
         out[2 + outPos] = (byte)((int)(((in[2 + inPos] & 63L) >>> 4 | (in[3 + inPos] & 63L) << 2) & 255L));
         out[3 + outPos] = (byte)((int)((in[4 + inPos] & 63L | (in[5 + inPos] & 63L) << 6) & 255L));
         out[4 + outPos] = (byte)((int)(((in[5 + inPos] & 63L) >>> 2 | (in[6 + inPos] & 63L) << 4) & 255L));
         out[5 + outPos] = (byte)((int)(((in[6 + inPos] & 63L) >>> 4 | (in[7 + inPos] & 63L) << 2) & 255L));
         out[6 + outPos] = (byte)((int)((in[8 + inPos] & 63L | (in[9 + inPos] & 63L) << 6) & 255L));
         out[7 + outPos] = (byte)((int)(((in[9 + inPos] & 63L) >>> 2 | (in[10 + inPos] & 63L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)(((in[10 + inPos] & 63L) >>> 4 | (in[11 + inPos] & 63L) << 2) & 255L));
         out[9 + outPos] = (byte)((int)((in[12 + inPos] & 63L | (in[13 + inPos] & 63L) << 6) & 255L));
         out[10 + outPos] = (byte)((int)(((in[13 + inPos] & 63L) >>> 2 | (in[14 + inPos] & 63L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)(((in[14 + inPos] & 63L) >>> 4 | (in[15 + inPos] & 63L) << 2) & 255L));
         out[12 + outPos] = (byte)((int)((in[16 + inPos] & 63L | (in[17 + inPos] & 63L) << 6) & 255L));
         out[13 + outPos] = (byte)((int)(((in[17 + inPos] & 63L) >>> 2 | (in[18 + inPos] & 63L) << 4) & 255L));
         out[14 + outPos] = (byte)((int)(((in[18 + inPos] & 63L) >>> 4 | (in[19 + inPos] & 63L) << 2) & 255L));
         out[15 + outPos] = (byte)((int)((in[20 + inPos] & 63L | (in[21 + inPos] & 63L) << 6) & 255L));
         out[16 + outPos] = (byte)((int)(((in[21 + inPos] & 63L) >>> 2 | (in[22 + inPos] & 63L) << 4) & 255L));
         out[17 + outPos] = (byte)((int)(((in[22 + inPos] & 63L) >>> 4 | (in[23 + inPos] & 63L) << 2) & 255L));
         out[18 + outPos] = (byte)((int)((in[24 + inPos] & 63L | (in[25 + inPos] & 63L) << 6) & 255L));
         out[19 + outPos] = (byte)((int)(((in[25 + inPos] & 63L) >>> 2 | (in[26 + inPos] & 63L) << 4) & 255L));
         out[20 + outPos] = (byte)((int)(((in[26 + inPos] & 63L) >>> 4 | (in[27 + inPos] & 63L) << 2) & 255L));
         out[21 + outPos] = (byte)((int)((in[28 + inPos] & 63L | (in[29 + inPos] & 63L) << 6) & 255L));
         out[22 + outPos] = (byte)((int)(((in[29 + inPos] & 63L) >>> 2 | (in[30 + inPos] & 63L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)(((in[30 + inPos] & 63L) >>> 4 | (in[31 + inPos] & 63L) << 2) & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 63L;
         out[1 + outPos] = (long)in[0 + inPos] >> 6 & 3L | (long)in[1 + inPos] << 2 & 63L;
         out[2 + outPos] = (long)in[1 + inPos] >> 4 & 15L | (long)in[2 + inPos] << 4 & 63L;
         out[3 + outPos] = (long)in[2 + inPos] >> 2 & 63L;
         out[4 + outPos] = (long)in[3 + inPos] & 63L;
         out[5 + outPos] = (long)in[3 + inPos] >> 6 & 3L | (long)in[4 + inPos] << 2 & 63L;
         out[6 + outPos] = (long)in[4 + inPos] >> 4 & 15L | (long)in[5 + inPos] << 4 & 63L;
         out[7 + outPos] = (long)in[5 + inPos] >> 2 & 63L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 63L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 6 & 3L | (long)in.get(1 + inPos) << 2 & 63L;
         out[2 + outPos] = (long)in.get(1 + inPos) >> 4 & 15L | (long)in.get(2 + inPos) << 4 & 63L;
         out[3 + outPos] = (long)in.get(2 + inPos) >> 2 & 63L;
         out[4 + outPos] = (long)in.get(3 + inPos) & 63L;
         out[5 + outPos] = (long)in.get(3 + inPos) >> 6 & 3L | (long)in.get(4 + inPos) << 2 & 63L;
         out[6 + outPos] = (long)in.get(4 + inPos) >> 4 & 15L | (long)in.get(5 + inPos) << 4 & 63L;
         out[7 + outPos] = (long)in.get(5 + inPos) >> 2 & 63L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 63L;
         out[1 + outPos] = (long)in[0 + inPos] >> 6 & 3L | (long)in[1 + inPos] << 2 & 63L;
         out[2 + outPos] = (long)in[1 + inPos] >> 4 & 15L | (long)in[2 + inPos] << 4 & 63L;
         out[3 + outPos] = (long)in[2 + inPos] >> 2 & 63L;
         out[4 + outPos] = (long)in[3 + inPos] & 63L;
         out[5 + outPos] = (long)in[3 + inPos] >> 6 & 3L | (long)in[4 + inPos] << 2 & 63L;
         out[6 + outPos] = (long)in[4 + inPos] >> 4 & 15L | (long)in[5 + inPos] << 4 & 63L;
         out[7 + outPos] = (long)in[5 + inPos] >> 2 & 63L;
         out[8 + outPos] = (long)in[6 + inPos] & 63L;
         out[9 + outPos] = (long)in[6 + inPos] >> 6 & 3L | (long)in[7 + inPos] << 2 & 63L;
         out[10 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 63L;
         out[11 + outPos] = (long)in[8 + inPos] >> 2 & 63L;
         out[12 + outPos] = (long)in[9 + inPos] & 63L;
         out[13 + outPos] = (long)in[9 + inPos] >> 6 & 3L | (long)in[10 + inPos] << 2 & 63L;
         out[14 + outPos] = (long)in[10 + inPos] >> 4 & 15L | (long)in[11 + inPos] << 4 & 63L;
         out[15 + outPos] = (long)in[11 + inPos] >> 2 & 63L;
         out[16 + outPos] = (long)in[12 + inPos] & 63L;
         out[17 + outPos] = (long)in[12 + inPos] >> 6 & 3L | (long)in[13 + inPos] << 2 & 63L;
         out[18 + outPos] = (long)in[13 + inPos] >> 4 & 15L | (long)in[14 + inPos] << 4 & 63L;
         out[19 + outPos] = (long)in[14 + inPos] >> 2 & 63L;
         out[20 + outPos] = (long)in[15 + inPos] & 63L;
         out[21 + outPos] = (long)in[15 + inPos] >> 6 & 3L | (long)in[16 + inPos] << 2 & 63L;
         out[22 + outPos] = (long)in[16 + inPos] >> 4 & 15L | (long)in[17 + inPos] << 4 & 63L;
         out[23 + outPos] = (long)in[17 + inPos] >> 2 & 63L;
         out[24 + outPos] = (long)in[18 + inPos] & 63L;
         out[25 + outPos] = (long)in[18 + inPos] >> 6 & 3L | (long)in[19 + inPos] << 2 & 63L;
         out[26 + outPos] = (long)in[19 + inPos] >> 4 & 15L | (long)in[20 + inPos] << 4 & 63L;
         out[27 + outPos] = (long)in[20 + inPos] >> 2 & 63L;
         out[28 + outPos] = (long)in[21 + inPos] & 63L;
         out[29 + outPos] = (long)in[21 + inPos] >> 6 & 3L | (long)in[22 + inPos] << 2 & 63L;
         out[30 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 63L;
         out[31 + outPos] = (long)in[23 + inPos] >> 2 & 63L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 63L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 6 & 3L | (long)in.get(1 + inPos) << 2 & 63L;
         out[2 + outPos] = (long)in.get(1 + inPos) >> 4 & 15L | (long)in.get(2 + inPos) << 4 & 63L;
         out[3 + outPos] = (long)in.get(2 + inPos) >> 2 & 63L;
         out[4 + outPos] = (long)in.get(3 + inPos) & 63L;
         out[5 + outPos] = (long)in.get(3 + inPos) >> 6 & 3L | (long)in.get(4 + inPos) << 2 & 63L;
         out[6 + outPos] = (long)in.get(4 + inPos) >> 4 & 15L | (long)in.get(5 + inPos) << 4 & 63L;
         out[7 + outPos] = (long)in.get(5 + inPos) >> 2 & 63L;
         out[8 + outPos] = (long)in.get(6 + inPos) & 63L;
         out[9 + outPos] = (long)in.get(6 + inPos) >> 6 & 3L | (long)in.get(7 + inPos) << 2 & 63L;
         out[10 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 63L;
         out[11 + outPos] = (long)in.get(8 + inPos) >> 2 & 63L;
         out[12 + outPos] = (long)in.get(9 + inPos) & 63L;
         out[13 + outPos] = (long)in.get(9 + inPos) >> 6 & 3L | (long)in.get(10 + inPos) << 2 & 63L;
         out[14 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L | (long)in.get(11 + inPos) << 4 & 63L;
         out[15 + outPos] = (long)in.get(11 + inPos) >> 2 & 63L;
         out[16 + outPos] = (long)in.get(12 + inPos) & 63L;
         out[17 + outPos] = (long)in.get(12 + inPos) >> 6 & 3L | (long)in.get(13 + inPos) << 2 & 63L;
         out[18 + outPos] = (long)in.get(13 + inPos) >> 4 & 15L | (long)in.get(14 + inPos) << 4 & 63L;
         out[19 + outPos] = (long)in.get(14 + inPos) >> 2 & 63L;
         out[20 + outPos] = (long)in.get(15 + inPos) & 63L;
         out[21 + outPos] = (long)in.get(15 + inPos) >> 6 & 3L | (long)in.get(16 + inPos) << 2 & 63L;
         out[22 + outPos] = (long)in.get(16 + inPos) >> 4 & 15L | (long)in.get(17 + inPos) << 4 & 63L;
         out[23 + outPos] = (long)in.get(17 + inPos) >> 2 & 63L;
         out[24 + outPos] = (long)in.get(18 + inPos) & 63L;
         out[25 + outPos] = (long)in.get(18 + inPos) >> 6 & 3L | (long)in.get(19 + inPos) << 2 & 63L;
         out[26 + outPos] = (long)in.get(19 + inPos) >> 4 & 15L | (long)in.get(20 + inPos) << 4 & 63L;
         out[27 + outPos] = (long)in.get(20 + inPos) >> 2 & 63L;
         out[28 + outPos] = (long)in.get(21 + inPos) & 63L;
         out[29 + outPos] = (long)in.get(21 + inPos) >> 6 & 3L | (long)in.get(22 + inPos) << 2 & 63L;
         out[30 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 63L;
         out[31 + outPos] = (long)in.get(23 + inPos) >> 2 & 63L;
      }
   }

   private static final class Packer7 extends BytePackerForLong {
      private Packer7() {
         super(7);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 127L | (in[1 + inPos] & 127L) << 7) & 255L));
         out[1 + outPos] = (byte)((int)(((in[1 + inPos] & 127L) >>> 1 | (in[2 + inPos] & 127L) << 6) & 255L));
         out[2 + outPos] = (byte)((int)(((in[2 + inPos] & 127L) >>> 2 | (in[3 + inPos] & 127L) << 5) & 255L));
         out[3 + outPos] = (byte)((int)(((in[3 + inPos] & 127L) >>> 3 | (in[4 + inPos] & 127L) << 4) & 255L));
         out[4 + outPos] = (byte)((int)(((in[4 + inPos] & 127L) >>> 4 | (in[5 + inPos] & 127L) << 3) & 255L));
         out[5 + outPos] = (byte)((int)(((in[5 + inPos] & 127L) >>> 5 | (in[6 + inPos] & 127L) << 2) & 255L));
         out[6 + outPos] = (byte)((int)(((in[6 + inPos] & 127L) >>> 6 | (in[7 + inPos] & 127L) << 1) & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)((in[0 + inPos] & 127L | (in[1 + inPos] & 127L) << 7) & 255L));
         out[1 + outPos] = (byte)((int)(((in[1 + inPos] & 127L) >>> 1 | (in[2 + inPos] & 127L) << 6) & 255L));
         out[2 + outPos] = (byte)((int)(((in[2 + inPos] & 127L) >>> 2 | (in[3 + inPos] & 127L) << 5) & 255L));
         out[3 + outPos] = (byte)((int)(((in[3 + inPos] & 127L) >>> 3 | (in[4 + inPos] & 127L) << 4) & 255L));
         out[4 + outPos] = (byte)((int)(((in[4 + inPos] & 127L) >>> 4 | (in[5 + inPos] & 127L) << 3) & 255L));
         out[5 + outPos] = (byte)((int)(((in[5 + inPos] & 127L) >>> 5 | (in[6 + inPos] & 127L) << 2) & 255L));
         out[6 + outPos] = (byte)((int)(((in[6 + inPos] & 127L) >>> 6 | (in[7 + inPos] & 127L) << 1) & 255L));
         out[7 + outPos] = (byte)((int)((in[8 + inPos] & 127L | (in[9 + inPos] & 127L) << 7) & 255L));
         out[8 + outPos] = (byte)((int)(((in[9 + inPos] & 127L) >>> 1 | (in[10 + inPos] & 127L) << 6) & 255L));
         out[9 + outPos] = (byte)((int)(((in[10 + inPos] & 127L) >>> 2 | (in[11 + inPos] & 127L) << 5) & 255L));
         out[10 + outPos] = (byte)((int)(((in[11 + inPos] & 127L) >>> 3 | (in[12 + inPos] & 127L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)(((in[12 + inPos] & 127L) >>> 4 | (in[13 + inPos] & 127L) << 3) & 255L));
         out[12 + outPos] = (byte)((int)(((in[13 + inPos] & 127L) >>> 5 | (in[14 + inPos] & 127L) << 2) & 255L));
         out[13 + outPos] = (byte)((int)(((in[14 + inPos] & 127L) >>> 6 | (in[15 + inPos] & 127L) << 1) & 255L));
         out[14 + outPos] = (byte)((int)((in[16 + inPos] & 127L | (in[17 + inPos] & 127L) << 7) & 255L));
         out[15 + outPos] = (byte)((int)(((in[17 + inPos] & 127L) >>> 1 | (in[18 + inPos] & 127L) << 6) & 255L));
         out[16 + outPos] = (byte)((int)(((in[18 + inPos] & 127L) >>> 2 | (in[19 + inPos] & 127L) << 5) & 255L));
         out[17 + outPos] = (byte)((int)(((in[19 + inPos] & 127L) >>> 3 | (in[20 + inPos] & 127L) << 4) & 255L));
         out[18 + outPos] = (byte)((int)(((in[20 + inPos] & 127L) >>> 4 | (in[21 + inPos] & 127L) << 3) & 255L));
         out[19 + outPos] = (byte)((int)(((in[21 + inPos] & 127L) >>> 5 | (in[22 + inPos] & 127L) << 2) & 255L));
         out[20 + outPos] = (byte)((int)(((in[22 + inPos] & 127L) >>> 6 | (in[23 + inPos] & 127L) << 1) & 255L));
         out[21 + outPos] = (byte)((int)((in[24 + inPos] & 127L | (in[25 + inPos] & 127L) << 7) & 255L));
         out[22 + outPos] = (byte)((int)(((in[25 + inPos] & 127L) >>> 1 | (in[26 + inPos] & 127L) << 6) & 255L));
         out[23 + outPos] = (byte)((int)(((in[26 + inPos] & 127L) >>> 2 | (in[27 + inPos] & 127L) << 5) & 255L));
         out[24 + outPos] = (byte)((int)(((in[27 + inPos] & 127L) >>> 3 | (in[28 + inPos] & 127L) << 4) & 255L));
         out[25 + outPos] = (byte)((int)(((in[28 + inPos] & 127L) >>> 4 | (in[29 + inPos] & 127L) << 3) & 255L));
         out[26 + outPos] = (byte)((int)(((in[29 + inPos] & 127L) >>> 5 | (in[30 + inPos] & 127L) << 2) & 255L));
         out[27 + outPos] = (byte)((int)(((in[30 + inPos] & 127L) >>> 6 | (in[31 + inPos] & 127L) << 1) & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 127L;
         out[1 + outPos] = (long)in[0 + inPos] >> 7 & 1L | (long)in[1 + inPos] << 1 & 127L;
         out[2 + outPos] = (long)in[1 + inPos] >> 6 & 3L | (long)in[2 + inPos] << 2 & 127L;
         out[3 + outPos] = (long)in[2 + inPos] >> 5 & 7L | (long)in[3 + inPos] << 3 & 127L;
         out[4 + outPos] = (long)in[3 + inPos] >> 4 & 15L | (long)in[4 + inPos] << 4 & 127L;
         out[5 + outPos] = (long)in[4 + inPos] >> 3 & 31L | (long)in[5 + inPos] << 5 & 127L;
         out[6 + outPos] = (long)in[5 + inPos] >> 2 & 63L | (long)in[6 + inPos] << 6 & 127L;
         out[7 + outPos] = (long)in[6 + inPos] >> 1 & 127L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 127L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 7 & 1L | (long)in.get(1 + inPos) << 1 & 127L;
         out[2 + outPos] = (long)in.get(1 + inPos) >> 6 & 3L | (long)in.get(2 + inPos) << 2 & 127L;
         out[3 + outPos] = (long)in.get(2 + inPos) >> 5 & 7L | (long)in.get(3 + inPos) << 3 & 127L;
         out[4 + outPos] = (long)in.get(3 + inPos) >> 4 & 15L | (long)in.get(4 + inPos) << 4 & 127L;
         out[5 + outPos] = (long)in.get(4 + inPos) >> 3 & 31L | (long)in.get(5 + inPos) << 5 & 127L;
         out[6 + outPos] = (long)in.get(5 + inPos) >> 2 & 63L | (long)in.get(6 + inPos) << 6 & 127L;
         out[7 + outPos] = (long)in.get(6 + inPos) >> 1 & 127L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 127L;
         out[1 + outPos] = (long)in[0 + inPos] >> 7 & 1L | (long)in[1 + inPos] << 1 & 127L;
         out[2 + outPos] = (long)in[1 + inPos] >> 6 & 3L | (long)in[2 + inPos] << 2 & 127L;
         out[3 + outPos] = (long)in[2 + inPos] >> 5 & 7L | (long)in[3 + inPos] << 3 & 127L;
         out[4 + outPos] = (long)in[3 + inPos] >> 4 & 15L | (long)in[4 + inPos] << 4 & 127L;
         out[5 + outPos] = (long)in[4 + inPos] >> 3 & 31L | (long)in[5 + inPos] << 5 & 127L;
         out[6 + outPos] = (long)in[5 + inPos] >> 2 & 63L | (long)in[6 + inPos] << 6 & 127L;
         out[7 + outPos] = (long)in[6 + inPos] >> 1 & 127L;
         out[8 + outPos] = (long)in[7 + inPos] & 127L;
         out[9 + outPos] = (long)in[7 + inPos] >> 7 & 1L | (long)in[8 + inPos] << 1 & 127L;
         out[10 + outPos] = (long)in[8 + inPos] >> 6 & 3L | (long)in[9 + inPos] << 2 & 127L;
         out[11 + outPos] = (long)in[9 + inPos] >> 5 & 7L | (long)in[10 + inPos] << 3 & 127L;
         out[12 + outPos] = (long)in[10 + inPos] >> 4 & 15L | (long)in[11 + inPos] << 4 & 127L;
         out[13 + outPos] = (long)in[11 + inPos] >> 3 & 31L | (long)in[12 + inPos] << 5 & 127L;
         out[14 + outPos] = (long)in[12 + inPos] >> 2 & 63L | (long)in[13 + inPos] << 6 & 127L;
         out[15 + outPos] = (long)in[13 + inPos] >> 1 & 127L;
         out[16 + outPos] = (long)in[14 + inPos] & 127L;
         out[17 + outPos] = (long)in[14 + inPos] >> 7 & 1L | (long)in[15 + inPos] << 1 & 127L;
         out[18 + outPos] = (long)in[15 + inPos] >> 6 & 3L | (long)in[16 + inPos] << 2 & 127L;
         out[19 + outPos] = (long)in[16 + inPos] >> 5 & 7L | (long)in[17 + inPos] << 3 & 127L;
         out[20 + outPos] = (long)in[17 + inPos] >> 4 & 15L | (long)in[18 + inPos] << 4 & 127L;
         out[21 + outPos] = (long)in[18 + inPos] >> 3 & 31L | (long)in[19 + inPos] << 5 & 127L;
         out[22 + outPos] = (long)in[19 + inPos] >> 2 & 63L | (long)in[20 + inPos] << 6 & 127L;
         out[23 + outPos] = (long)in[20 + inPos] >> 1 & 127L;
         out[24 + outPos] = (long)in[21 + inPos] & 127L;
         out[25 + outPos] = (long)in[21 + inPos] >> 7 & 1L | (long)in[22 + inPos] << 1 & 127L;
         out[26 + outPos] = (long)in[22 + inPos] >> 6 & 3L | (long)in[23 + inPos] << 2 & 127L;
         out[27 + outPos] = (long)in[23 + inPos] >> 5 & 7L | (long)in[24 + inPos] << 3 & 127L;
         out[28 + outPos] = (long)in[24 + inPos] >> 4 & 15L | (long)in[25 + inPos] << 4 & 127L;
         out[29 + outPos] = (long)in[25 + inPos] >> 3 & 31L | (long)in[26 + inPos] << 5 & 127L;
         out[30 + outPos] = (long)in[26 + inPos] >> 2 & 63L | (long)in[27 + inPos] << 6 & 127L;
         out[31 + outPos] = (long)in[27 + inPos] >> 1 & 127L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 127L;
         out[1 + outPos] = (long)in.get(0 + inPos) >> 7 & 1L | (long)in.get(1 + inPos) << 1 & 127L;
         out[2 + outPos] = (long)in.get(1 + inPos) >> 6 & 3L | (long)in.get(2 + inPos) << 2 & 127L;
         out[3 + outPos] = (long)in.get(2 + inPos) >> 5 & 7L | (long)in.get(3 + inPos) << 3 & 127L;
         out[4 + outPos] = (long)in.get(3 + inPos) >> 4 & 15L | (long)in.get(4 + inPos) << 4 & 127L;
         out[5 + outPos] = (long)in.get(4 + inPos) >> 3 & 31L | (long)in.get(5 + inPos) << 5 & 127L;
         out[6 + outPos] = (long)in.get(5 + inPos) >> 2 & 63L | (long)in.get(6 + inPos) << 6 & 127L;
         out[7 + outPos] = (long)in.get(6 + inPos) >> 1 & 127L;
         out[8 + outPos] = (long)in.get(7 + inPos) & 127L;
         out[9 + outPos] = (long)in.get(7 + inPos) >> 7 & 1L | (long)in.get(8 + inPos) << 1 & 127L;
         out[10 + outPos] = (long)in.get(8 + inPos) >> 6 & 3L | (long)in.get(9 + inPos) << 2 & 127L;
         out[11 + outPos] = (long)in.get(9 + inPos) >> 5 & 7L | (long)in.get(10 + inPos) << 3 & 127L;
         out[12 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L | (long)in.get(11 + inPos) << 4 & 127L;
         out[13 + outPos] = (long)in.get(11 + inPos) >> 3 & 31L | (long)in.get(12 + inPos) << 5 & 127L;
         out[14 + outPos] = (long)in.get(12 + inPos) >> 2 & 63L | (long)in.get(13 + inPos) << 6 & 127L;
         out[15 + outPos] = (long)in.get(13 + inPos) >> 1 & 127L;
         out[16 + outPos] = (long)in.get(14 + inPos) & 127L;
         out[17 + outPos] = (long)in.get(14 + inPos) >> 7 & 1L | (long)in.get(15 + inPos) << 1 & 127L;
         out[18 + outPos] = (long)in.get(15 + inPos) >> 6 & 3L | (long)in.get(16 + inPos) << 2 & 127L;
         out[19 + outPos] = (long)in.get(16 + inPos) >> 5 & 7L | (long)in.get(17 + inPos) << 3 & 127L;
         out[20 + outPos] = (long)in.get(17 + inPos) >> 4 & 15L | (long)in.get(18 + inPos) << 4 & 127L;
         out[21 + outPos] = (long)in.get(18 + inPos) >> 3 & 31L | (long)in.get(19 + inPos) << 5 & 127L;
         out[22 + outPos] = (long)in.get(19 + inPos) >> 2 & 63L | (long)in.get(20 + inPos) << 6 & 127L;
         out[23 + outPos] = (long)in.get(20 + inPos) >> 1 & 127L;
         out[24 + outPos] = (long)in.get(21 + inPos) & 127L;
         out[25 + outPos] = (long)in.get(21 + inPos) >> 7 & 1L | (long)in.get(22 + inPos) << 1 & 127L;
         out[26 + outPos] = (long)in.get(22 + inPos) >> 6 & 3L | (long)in.get(23 + inPos) << 2 & 127L;
         out[27 + outPos] = (long)in.get(23 + inPos) >> 5 & 7L | (long)in.get(24 + inPos) << 3 & 127L;
         out[28 + outPos] = (long)in.get(24 + inPos) >> 4 & 15L | (long)in.get(25 + inPos) << 4 & 127L;
         out[29 + outPos] = (long)in.get(25 + inPos) >> 3 & 31L | (long)in.get(26 + inPos) << 5 & 127L;
         out[30 + outPos] = (long)in.get(26 + inPos) >> 2 & 63L | (long)in.get(27 + inPos) << 6 & 127L;
         out[31 + outPos] = (long)in.get(27 + inPos) >> 1 & 127L;
      }
   }

   private static final class Packer8 extends BytePackerForLong {
      private Packer8() {
         super(8);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 255L & 255L));
         out[1 + outPos] = (byte)((int)(in[1 + inPos] & 255L & 255L));
         out[2 + outPos] = (byte)((int)(in[2 + inPos] & 255L & 255L));
         out[3 + outPos] = (byte)((int)(in[3 + inPos] & 255L & 255L));
         out[4 + outPos] = (byte)((int)(in[4 + inPos] & 255L & 255L));
         out[5 + outPos] = (byte)((int)(in[5 + inPos] & 255L & 255L));
         out[6 + outPos] = (byte)((int)(in[6 + inPos] & 255L & 255L));
         out[7 + outPos] = (byte)((int)(in[7 + inPos] & 255L & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 255L & 255L));
         out[1 + outPos] = (byte)((int)(in[1 + inPos] & 255L & 255L));
         out[2 + outPos] = (byte)((int)(in[2 + inPos] & 255L & 255L));
         out[3 + outPos] = (byte)((int)(in[3 + inPos] & 255L & 255L));
         out[4 + outPos] = (byte)((int)(in[4 + inPos] & 255L & 255L));
         out[5 + outPos] = (byte)((int)(in[5 + inPos] & 255L & 255L));
         out[6 + outPos] = (byte)((int)(in[6 + inPos] & 255L & 255L));
         out[7 + outPos] = (byte)((int)(in[7 + inPos] & 255L & 255L));
         out[8 + outPos] = (byte)((int)(in[8 + inPos] & 255L & 255L));
         out[9 + outPos] = (byte)((int)(in[9 + inPos] & 255L & 255L));
         out[10 + outPos] = (byte)((int)(in[10 + inPos] & 255L & 255L));
         out[11 + outPos] = (byte)((int)(in[11 + inPos] & 255L & 255L));
         out[12 + outPos] = (byte)((int)(in[12 + inPos] & 255L & 255L));
         out[13 + outPos] = (byte)((int)(in[13 + inPos] & 255L & 255L));
         out[14 + outPos] = (byte)((int)(in[14 + inPos] & 255L & 255L));
         out[15 + outPos] = (byte)((int)(in[15 + inPos] & 255L & 255L));
         out[16 + outPos] = (byte)((int)(in[16 + inPos] & 255L & 255L));
         out[17 + outPos] = (byte)((int)(in[17 + inPos] & 255L & 255L));
         out[18 + outPos] = (byte)((int)(in[18 + inPos] & 255L & 255L));
         out[19 + outPos] = (byte)((int)(in[19 + inPos] & 255L & 255L));
         out[20 + outPos] = (byte)((int)(in[20 + inPos] & 255L & 255L));
         out[21 + outPos] = (byte)((int)(in[21 + inPos] & 255L & 255L));
         out[22 + outPos] = (byte)((int)(in[22 + inPos] & 255L & 255L));
         out[23 + outPos] = (byte)((int)(in[23 + inPos] & 255L & 255L));
         out[24 + outPos] = (byte)((int)(in[24 + inPos] & 255L & 255L));
         out[25 + outPos] = (byte)((int)(in[25 + inPos] & 255L & 255L));
         out[26 + outPos] = (byte)((int)(in[26 + inPos] & 255L & 255L));
         out[27 + outPos] = (byte)((int)(in[27 + inPos] & 255L & 255L));
         out[28 + outPos] = (byte)((int)(in[28 + inPos] & 255L & 255L));
         out[29 + outPos] = (byte)((int)(in[29 + inPos] & 255L & 255L));
         out[30 + outPos] = (byte)((int)(in[30 + inPos] & 255L & 255L));
         out[31 + outPos] = (byte)((int)(in[31 + inPos] & 255L & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L;
         out[1 + outPos] = (long)in[1 + inPos] & 255L;
         out[2 + outPos] = (long)in[2 + inPos] & 255L;
         out[3 + outPos] = (long)in[3 + inPos] & 255L;
         out[4 + outPos] = (long)in[4 + inPos] & 255L;
         out[5 + outPos] = (long)in[5 + inPos] & 255L;
         out[6 + outPos] = (long)in[6 + inPos] & 255L;
         out[7 + outPos] = (long)in[7 + inPos] & 255L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L;
         out[1 + outPos] = (long)in.get(1 + inPos) & 255L;
         out[2 + outPos] = (long)in.get(2 + inPos) & 255L;
         out[3 + outPos] = (long)in.get(3 + inPos) & 255L;
         out[4 + outPos] = (long)in.get(4 + inPos) & 255L;
         out[5 + outPos] = (long)in.get(5 + inPos) & 255L;
         out[6 + outPos] = (long)in.get(6 + inPos) & 255L;
         out[7 + outPos] = (long)in.get(7 + inPos) & 255L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L;
         out[1 + outPos] = (long)in[1 + inPos] & 255L;
         out[2 + outPos] = (long)in[2 + inPos] & 255L;
         out[3 + outPos] = (long)in[3 + inPos] & 255L;
         out[4 + outPos] = (long)in[4 + inPos] & 255L;
         out[5 + outPos] = (long)in[5 + inPos] & 255L;
         out[6 + outPos] = (long)in[6 + inPos] & 255L;
         out[7 + outPos] = (long)in[7 + inPos] & 255L;
         out[8 + outPos] = (long)in[8 + inPos] & 255L;
         out[9 + outPos] = (long)in[9 + inPos] & 255L;
         out[10 + outPos] = (long)in[10 + inPos] & 255L;
         out[11 + outPos] = (long)in[11 + inPos] & 255L;
         out[12 + outPos] = (long)in[12 + inPos] & 255L;
         out[13 + outPos] = (long)in[13 + inPos] & 255L;
         out[14 + outPos] = (long)in[14 + inPos] & 255L;
         out[15 + outPos] = (long)in[15 + inPos] & 255L;
         out[16 + outPos] = (long)in[16 + inPos] & 255L;
         out[17 + outPos] = (long)in[17 + inPos] & 255L;
         out[18 + outPos] = (long)in[18 + inPos] & 255L;
         out[19 + outPos] = (long)in[19 + inPos] & 255L;
         out[20 + outPos] = (long)in[20 + inPos] & 255L;
         out[21 + outPos] = (long)in[21 + inPos] & 255L;
         out[22 + outPos] = (long)in[22 + inPos] & 255L;
         out[23 + outPos] = (long)in[23 + inPos] & 255L;
         out[24 + outPos] = (long)in[24 + inPos] & 255L;
         out[25 + outPos] = (long)in[25 + inPos] & 255L;
         out[26 + outPos] = (long)in[26 + inPos] & 255L;
         out[27 + outPos] = (long)in[27 + inPos] & 255L;
         out[28 + outPos] = (long)in[28 + inPos] & 255L;
         out[29 + outPos] = (long)in[29 + inPos] & 255L;
         out[30 + outPos] = (long)in[30 + inPos] & 255L;
         out[31 + outPos] = (long)in[31 + inPos] & 255L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L;
         out[1 + outPos] = (long)in.get(1 + inPos) & 255L;
         out[2 + outPos] = (long)in.get(2 + inPos) & 255L;
         out[3 + outPos] = (long)in.get(3 + inPos) & 255L;
         out[4 + outPos] = (long)in.get(4 + inPos) & 255L;
         out[5 + outPos] = (long)in.get(5 + inPos) & 255L;
         out[6 + outPos] = (long)in.get(6 + inPos) & 255L;
         out[7 + outPos] = (long)in.get(7 + inPos) & 255L;
         out[8 + outPos] = (long)in.get(8 + inPos) & 255L;
         out[9 + outPos] = (long)in.get(9 + inPos) & 255L;
         out[10 + outPos] = (long)in.get(10 + inPos) & 255L;
         out[11 + outPos] = (long)in.get(11 + inPos) & 255L;
         out[12 + outPos] = (long)in.get(12 + inPos) & 255L;
         out[13 + outPos] = (long)in.get(13 + inPos) & 255L;
         out[14 + outPos] = (long)in.get(14 + inPos) & 255L;
         out[15 + outPos] = (long)in.get(15 + inPos) & 255L;
         out[16 + outPos] = (long)in.get(16 + inPos) & 255L;
         out[17 + outPos] = (long)in.get(17 + inPos) & 255L;
         out[18 + outPos] = (long)in.get(18 + inPos) & 255L;
         out[19 + outPos] = (long)in.get(19 + inPos) & 255L;
         out[20 + outPos] = (long)in.get(20 + inPos) & 255L;
         out[21 + outPos] = (long)in.get(21 + inPos) & 255L;
         out[22 + outPos] = (long)in.get(22 + inPos) & 255L;
         out[23 + outPos] = (long)in.get(23 + inPos) & 255L;
         out[24 + outPos] = (long)in.get(24 + inPos) & 255L;
         out[25 + outPos] = (long)in.get(25 + inPos) & 255L;
         out[26 + outPos] = (long)in.get(26 + inPos) & 255L;
         out[27 + outPos] = (long)in.get(27 + inPos) & 255L;
         out[28 + outPos] = (long)in.get(28 + inPos) & 255L;
         out[29 + outPos] = (long)in.get(29 + inPos) & 255L;
         out[30 + outPos] = (long)in.get(30 + inPos) & 255L;
         out[31 + outPos] = (long)in.get(31 + inPos) & 255L;
      }
   }

   private static final class Packer9 extends BytePackerForLong {
      private Packer9() {
         super(9);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 511L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 511L) >>> 8 | (in[1 + inPos] & 511L) << 1) & 255L));
         out[2 + outPos] = (byte)((int)(((in[1 + inPos] & 511L) >>> 7 | (in[2 + inPos] & 511L) << 2) & 255L));
         out[3 + outPos] = (byte)((int)(((in[2 + inPos] & 511L) >>> 6 | (in[3 + inPos] & 511L) << 3) & 255L));
         out[4 + outPos] = (byte)((int)(((in[3 + inPos] & 511L) >>> 5 | (in[4 + inPos] & 511L) << 4) & 255L));
         out[5 + outPos] = (byte)((int)(((in[4 + inPos] & 511L) >>> 4 | (in[5 + inPos] & 511L) << 5) & 255L));
         out[6 + outPos] = (byte)((int)(((in[5 + inPos] & 511L) >>> 3 | (in[6 + inPos] & 511L) << 6) & 255L));
         out[7 + outPos] = (byte)((int)(((in[6 + inPos] & 511L) >>> 2 | (in[7 + inPos] & 511L) << 7) & 255L));
         out[8 + outPos] = (byte)((int)((in[7 + inPos] & 511L) >>> 1 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 511L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 511L) >>> 8 | (in[1 + inPos] & 511L) << 1) & 255L));
         out[2 + outPos] = (byte)((int)(((in[1 + inPos] & 511L) >>> 7 | (in[2 + inPos] & 511L) << 2) & 255L));
         out[3 + outPos] = (byte)((int)(((in[2 + inPos] & 511L) >>> 6 | (in[3 + inPos] & 511L) << 3) & 255L));
         out[4 + outPos] = (byte)((int)(((in[3 + inPos] & 511L) >>> 5 | (in[4 + inPos] & 511L) << 4) & 255L));
         out[5 + outPos] = (byte)((int)(((in[4 + inPos] & 511L) >>> 4 | (in[5 + inPos] & 511L) << 5) & 255L));
         out[6 + outPos] = (byte)((int)(((in[5 + inPos] & 511L) >>> 3 | (in[6 + inPos] & 511L) << 6) & 255L));
         out[7 + outPos] = (byte)((int)(((in[6 + inPos] & 511L) >>> 2 | (in[7 + inPos] & 511L) << 7) & 255L));
         out[8 + outPos] = (byte)((int)((in[7 + inPos] & 511L) >>> 1 & 255L));
         out[9 + outPos] = (byte)((int)(in[8 + inPos] & 511L & 255L));
         out[10 + outPos] = (byte)((int)(((in[8 + inPos] & 511L) >>> 8 | (in[9 + inPos] & 511L) << 1) & 255L));
         out[11 + outPos] = (byte)((int)(((in[9 + inPos] & 511L) >>> 7 | (in[10 + inPos] & 511L) << 2) & 255L));
         out[12 + outPos] = (byte)((int)(((in[10 + inPos] & 511L) >>> 6 | (in[11 + inPos] & 511L) << 3) & 255L));
         out[13 + outPos] = (byte)((int)(((in[11 + inPos] & 511L) >>> 5 | (in[12 + inPos] & 511L) << 4) & 255L));
         out[14 + outPos] = (byte)((int)(((in[12 + inPos] & 511L) >>> 4 | (in[13 + inPos] & 511L) << 5) & 255L));
         out[15 + outPos] = (byte)((int)(((in[13 + inPos] & 511L) >>> 3 | (in[14 + inPos] & 511L) << 6) & 255L));
         out[16 + outPos] = (byte)((int)(((in[14 + inPos] & 511L) >>> 2 | (in[15 + inPos] & 511L) << 7) & 255L));
         out[17 + outPos] = (byte)((int)((in[15 + inPos] & 511L) >>> 1 & 255L));
         out[18 + outPos] = (byte)((int)(in[16 + inPos] & 511L & 255L));
         out[19 + outPos] = (byte)((int)(((in[16 + inPos] & 511L) >>> 8 | (in[17 + inPos] & 511L) << 1) & 255L));
         out[20 + outPos] = (byte)((int)(((in[17 + inPos] & 511L) >>> 7 | (in[18 + inPos] & 511L) << 2) & 255L));
         out[21 + outPos] = (byte)((int)(((in[18 + inPos] & 511L) >>> 6 | (in[19 + inPos] & 511L) << 3) & 255L));
         out[22 + outPos] = (byte)((int)(((in[19 + inPos] & 511L) >>> 5 | (in[20 + inPos] & 511L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)(((in[20 + inPos] & 511L) >>> 4 | (in[21 + inPos] & 511L) << 5) & 255L));
         out[24 + outPos] = (byte)((int)(((in[21 + inPos] & 511L) >>> 3 | (in[22 + inPos] & 511L) << 6) & 255L));
         out[25 + outPos] = (byte)((int)(((in[22 + inPos] & 511L) >>> 2 | (in[23 + inPos] & 511L) << 7) & 255L));
         out[26 + outPos] = (byte)((int)((in[23 + inPos] & 511L) >>> 1 & 255L));
         out[27 + outPos] = (byte)((int)(in[24 + inPos] & 511L & 255L));
         out[28 + outPos] = (byte)((int)(((in[24 + inPos] & 511L) >>> 8 | (in[25 + inPos] & 511L) << 1) & 255L));
         out[29 + outPos] = (byte)((int)(((in[25 + inPos] & 511L) >>> 7 | (in[26 + inPos] & 511L) << 2) & 255L));
         out[30 + outPos] = (byte)((int)(((in[26 + inPos] & 511L) >>> 6 | (in[27 + inPos] & 511L) << 3) & 255L));
         out[31 + outPos] = (byte)((int)(((in[27 + inPos] & 511L) >>> 5 | (in[28 + inPos] & 511L) << 4) & 255L));
         out[32 + outPos] = (byte)((int)(((in[28 + inPos] & 511L) >>> 4 | (in[29 + inPos] & 511L) << 5) & 255L));
         out[33 + outPos] = (byte)((int)(((in[29 + inPos] & 511L) >>> 3 | (in[30 + inPos] & 511L) << 6) & 255L));
         out[34 + outPos] = (byte)((int)(((in[30 + inPos] & 511L) >>> 2 | (in[31 + inPos] & 511L) << 7) & 255L));
         out[35 + outPos] = (byte)((int)((in[31 + inPos] & 511L) >>> 1 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 511L;
         out[1 + outPos] = (long)in[1 + inPos] >> 1 & 127L | (long)in[2 + inPos] << 7 & 511L;
         out[2 + outPos] = (long)in[2 + inPos] >> 2 & 63L | (long)in[3 + inPos] << 6 & 511L;
         out[3 + outPos] = (long)in[3 + inPos] >> 3 & 31L | (long)in[4 + inPos] << 5 & 511L;
         out[4 + outPos] = (long)in[4 + inPos] >> 4 & 15L | (long)in[5 + inPos] << 4 & 511L;
         out[5 + outPos] = (long)in[5 + inPos] >> 5 & 7L | (long)in[6 + inPos] << 3 & 511L;
         out[6 + outPos] = (long)in[6 + inPos] >> 6 & 3L | (long)in[7 + inPos] << 2 & 511L;
         out[7 + outPos] = (long)in[7 + inPos] >> 7 & 1L | (long)in[8 + inPos] << 1 & 511L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 511L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 1 & 127L | (long)in.get(2 + inPos) << 7 & 511L;
         out[2 + outPos] = (long)in.get(2 + inPos) >> 2 & 63L | (long)in.get(3 + inPos) << 6 & 511L;
         out[3 + outPos] = (long)in.get(3 + inPos) >> 3 & 31L | (long)in.get(4 + inPos) << 5 & 511L;
         out[4 + outPos] = (long)in.get(4 + inPos) >> 4 & 15L | (long)in.get(5 + inPos) << 4 & 511L;
         out[5 + outPos] = (long)in.get(5 + inPos) >> 5 & 7L | (long)in.get(6 + inPos) << 3 & 511L;
         out[6 + outPos] = (long)in.get(6 + inPos) >> 6 & 3L | (long)in.get(7 + inPos) << 2 & 511L;
         out[7 + outPos] = (long)in.get(7 + inPos) >> 7 & 1L | (long)in.get(8 + inPos) << 1 & 511L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 511L;
         out[1 + outPos] = (long)in[1 + inPos] >> 1 & 127L | (long)in[2 + inPos] << 7 & 511L;
         out[2 + outPos] = (long)in[2 + inPos] >> 2 & 63L | (long)in[3 + inPos] << 6 & 511L;
         out[3 + outPos] = (long)in[3 + inPos] >> 3 & 31L | (long)in[4 + inPos] << 5 & 511L;
         out[4 + outPos] = (long)in[4 + inPos] >> 4 & 15L | (long)in[5 + inPos] << 4 & 511L;
         out[5 + outPos] = (long)in[5 + inPos] >> 5 & 7L | (long)in[6 + inPos] << 3 & 511L;
         out[6 + outPos] = (long)in[6 + inPos] >> 6 & 3L | (long)in[7 + inPos] << 2 & 511L;
         out[7 + outPos] = (long)in[7 + inPos] >> 7 & 1L | (long)in[8 + inPos] << 1 & 511L;
         out[8 + outPos] = (long)in[9 + inPos] & 255L | (long)in[10 + inPos] << 8 & 511L;
         out[9 + outPos] = (long)in[10 + inPos] >> 1 & 127L | (long)in[11 + inPos] << 7 & 511L;
         out[10 + outPos] = (long)in[11 + inPos] >> 2 & 63L | (long)in[12 + inPos] << 6 & 511L;
         out[11 + outPos] = (long)in[12 + inPos] >> 3 & 31L | (long)in[13 + inPos] << 5 & 511L;
         out[12 + outPos] = (long)in[13 + inPos] >> 4 & 15L | (long)in[14 + inPos] << 4 & 511L;
         out[13 + outPos] = (long)in[14 + inPos] >> 5 & 7L | (long)in[15 + inPos] << 3 & 511L;
         out[14 + outPos] = (long)in[15 + inPos] >> 6 & 3L | (long)in[16 + inPos] << 2 & 511L;
         out[15 + outPos] = (long)in[16 + inPos] >> 7 & 1L | (long)in[17 + inPos] << 1 & 511L;
         out[16 + outPos] = (long)in[18 + inPos] & 255L | (long)in[19 + inPos] << 8 & 511L;
         out[17 + outPos] = (long)in[19 + inPos] >> 1 & 127L | (long)in[20 + inPos] << 7 & 511L;
         out[18 + outPos] = (long)in[20 + inPos] >> 2 & 63L | (long)in[21 + inPos] << 6 & 511L;
         out[19 + outPos] = (long)in[21 + inPos] >> 3 & 31L | (long)in[22 + inPos] << 5 & 511L;
         out[20 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 511L;
         out[21 + outPos] = (long)in[23 + inPos] >> 5 & 7L | (long)in[24 + inPos] << 3 & 511L;
         out[22 + outPos] = (long)in[24 + inPos] >> 6 & 3L | (long)in[25 + inPos] << 2 & 511L;
         out[23 + outPos] = (long)in[25 + inPos] >> 7 & 1L | (long)in[26 + inPos] << 1 & 511L;
         out[24 + outPos] = (long)in[27 + inPos] & 255L | (long)in[28 + inPos] << 8 & 511L;
         out[25 + outPos] = (long)in[28 + inPos] >> 1 & 127L | (long)in[29 + inPos] << 7 & 511L;
         out[26 + outPos] = (long)in[29 + inPos] >> 2 & 63L | (long)in[30 + inPos] << 6 & 511L;
         out[27 + outPos] = (long)in[30 + inPos] >> 3 & 31L | (long)in[31 + inPos] << 5 & 511L;
         out[28 + outPos] = (long)in[31 + inPos] >> 4 & 15L | (long)in[32 + inPos] << 4 & 511L;
         out[29 + outPos] = (long)in[32 + inPos] >> 5 & 7L | (long)in[33 + inPos] << 3 & 511L;
         out[30 + outPos] = (long)in[33 + inPos] >> 6 & 3L | (long)in[34 + inPos] << 2 & 511L;
         out[31 + outPos] = (long)in[34 + inPos] >> 7 & 1L | (long)in[35 + inPos] << 1 & 511L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 511L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 1 & 127L | (long)in.get(2 + inPos) << 7 & 511L;
         out[2 + outPos] = (long)in.get(2 + inPos) >> 2 & 63L | (long)in.get(3 + inPos) << 6 & 511L;
         out[3 + outPos] = (long)in.get(3 + inPos) >> 3 & 31L | (long)in.get(4 + inPos) << 5 & 511L;
         out[4 + outPos] = (long)in.get(4 + inPos) >> 4 & 15L | (long)in.get(5 + inPos) << 4 & 511L;
         out[5 + outPos] = (long)in.get(5 + inPos) >> 5 & 7L | (long)in.get(6 + inPos) << 3 & 511L;
         out[6 + outPos] = (long)in.get(6 + inPos) >> 6 & 3L | (long)in.get(7 + inPos) << 2 & 511L;
         out[7 + outPos] = (long)in.get(7 + inPos) >> 7 & 1L | (long)in.get(8 + inPos) << 1 & 511L;
         out[8 + outPos] = (long)in.get(9 + inPos) & 255L | (long)in.get(10 + inPos) << 8 & 511L;
         out[9 + outPos] = (long)in.get(10 + inPos) >> 1 & 127L | (long)in.get(11 + inPos) << 7 & 511L;
         out[10 + outPos] = (long)in.get(11 + inPos) >> 2 & 63L | (long)in.get(12 + inPos) << 6 & 511L;
         out[11 + outPos] = (long)in.get(12 + inPos) >> 3 & 31L | (long)in.get(13 + inPos) << 5 & 511L;
         out[12 + outPos] = (long)in.get(13 + inPos) >> 4 & 15L | (long)in.get(14 + inPos) << 4 & 511L;
         out[13 + outPos] = (long)in.get(14 + inPos) >> 5 & 7L | (long)in.get(15 + inPos) << 3 & 511L;
         out[14 + outPos] = (long)in.get(15 + inPos) >> 6 & 3L | (long)in.get(16 + inPos) << 2 & 511L;
         out[15 + outPos] = (long)in.get(16 + inPos) >> 7 & 1L | (long)in.get(17 + inPos) << 1 & 511L;
         out[16 + outPos] = (long)in.get(18 + inPos) & 255L | (long)in.get(19 + inPos) << 8 & 511L;
         out[17 + outPos] = (long)in.get(19 + inPos) >> 1 & 127L | (long)in.get(20 + inPos) << 7 & 511L;
         out[18 + outPos] = (long)in.get(20 + inPos) >> 2 & 63L | (long)in.get(21 + inPos) << 6 & 511L;
         out[19 + outPos] = (long)in.get(21 + inPos) >> 3 & 31L | (long)in.get(22 + inPos) << 5 & 511L;
         out[20 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 511L;
         out[21 + outPos] = (long)in.get(23 + inPos) >> 5 & 7L | (long)in.get(24 + inPos) << 3 & 511L;
         out[22 + outPos] = (long)in.get(24 + inPos) >> 6 & 3L | (long)in.get(25 + inPos) << 2 & 511L;
         out[23 + outPos] = (long)in.get(25 + inPos) >> 7 & 1L | (long)in.get(26 + inPos) << 1 & 511L;
         out[24 + outPos] = (long)in.get(27 + inPos) & 255L | (long)in.get(28 + inPos) << 8 & 511L;
         out[25 + outPos] = (long)in.get(28 + inPos) >> 1 & 127L | (long)in.get(29 + inPos) << 7 & 511L;
         out[26 + outPos] = (long)in.get(29 + inPos) >> 2 & 63L | (long)in.get(30 + inPos) << 6 & 511L;
         out[27 + outPos] = (long)in.get(30 + inPos) >> 3 & 31L | (long)in.get(31 + inPos) << 5 & 511L;
         out[28 + outPos] = (long)in.get(31 + inPos) >> 4 & 15L | (long)in.get(32 + inPos) << 4 & 511L;
         out[29 + outPos] = (long)in.get(32 + inPos) >> 5 & 7L | (long)in.get(33 + inPos) << 3 & 511L;
         out[30 + outPos] = (long)in.get(33 + inPos) >> 6 & 3L | (long)in.get(34 + inPos) << 2 & 511L;
         out[31 + outPos] = (long)in.get(34 + inPos) >> 7 & 1L | (long)in.get(35 + inPos) << 1 & 511L;
      }
   }

   private static final class Packer10 extends BytePackerForLong {
      private Packer10() {
         super(10);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 1023L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 1023L) >>> 8 | (in[1 + inPos] & 1023L) << 2) & 255L));
         out[2 + outPos] = (byte)((int)(((in[1 + inPos] & 1023L) >>> 6 | (in[2 + inPos] & 1023L) << 4) & 255L));
         out[3 + outPos] = (byte)((int)(((in[2 + inPos] & 1023L) >>> 4 | (in[3 + inPos] & 1023L) << 6) & 255L));
         out[4 + outPos] = (byte)((int)((in[3 + inPos] & 1023L) >>> 2 & 255L));
         out[5 + outPos] = (byte)((int)(in[4 + inPos] & 1023L & 255L));
         out[6 + outPos] = (byte)((int)(((in[4 + inPos] & 1023L) >>> 8 | (in[5 + inPos] & 1023L) << 2) & 255L));
         out[7 + outPos] = (byte)((int)(((in[5 + inPos] & 1023L) >>> 6 | (in[6 + inPos] & 1023L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)(((in[6 + inPos] & 1023L) >>> 4 | (in[7 + inPos] & 1023L) << 6) & 255L));
         out[9 + outPos] = (byte)((int)((in[7 + inPos] & 1023L) >>> 2 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 1023L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 1023L) >>> 8 | (in[1 + inPos] & 1023L) << 2) & 255L));
         out[2 + outPos] = (byte)((int)(((in[1 + inPos] & 1023L) >>> 6 | (in[2 + inPos] & 1023L) << 4) & 255L));
         out[3 + outPos] = (byte)((int)(((in[2 + inPos] & 1023L) >>> 4 | (in[3 + inPos] & 1023L) << 6) & 255L));
         out[4 + outPos] = (byte)((int)((in[3 + inPos] & 1023L) >>> 2 & 255L));
         out[5 + outPos] = (byte)((int)(in[4 + inPos] & 1023L & 255L));
         out[6 + outPos] = (byte)((int)(((in[4 + inPos] & 1023L) >>> 8 | (in[5 + inPos] & 1023L) << 2) & 255L));
         out[7 + outPos] = (byte)((int)(((in[5 + inPos] & 1023L) >>> 6 | (in[6 + inPos] & 1023L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)(((in[6 + inPos] & 1023L) >>> 4 | (in[7 + inPos] & 1023L) << 6) & 255L));
         out[9 + outPos] = (byte)((int)((in[7 + inPos] & 1023L) >>> 2 & 255L));
         out[10 + outPos] = (byte)((int)(in[8 + inPos] & 1023L & 255L));
         out[11 + outPos] = (byte)((int)(((in[8 + inPos] & 1023L) >>> 8 | (in[9 + inPos] & 1023L) << 2) & 255L));
         out[12 + outPos] = (byte)((int)(((in[9 + inPos] & 1023L) >>> 6 | (in[10 + inPos] & 1023L) << 4) & 255L));
         out[13 + outPos] = (byte)((int)(((in[10 + inPos] & 1023L) >>> 4 | (in[11 + inPos] & 1023L) << 6) & 255L));
         out[14 + outPos] = (byte)((int)((in[11 + inPos] & 1023L) >>> 2 & 255L));
         out[15 + outPos] = (byte)((int)(in[12 + inPos] & 1023L & 255L));
         out[16 + outPos] = (byte)((int)(((in[12 + inPos] & 1023L) >>> 8 | (in[13 + inPos] & 1023L) << 2) & 255L));
         out[17 + outPos] = (byte)((int)(((in[13 + inPos] & 1023L) >>> 6 | (in[14 + inPos] & 1023L) << 4) & 255L));
         out[18 + outPos] = (byte)((int)(((in[14 + inPos] & 1023L) >>> 4 | (in[15 + inPos] & 1023L) << 6) & 255L));
         out[19 + outPos] = (byte)((int)((in[15 + inPos] & 1023L) >>> 2 & 255L));
         out[20 + outPos] = (byte)((int)(in[16 + inPos] & 1023L & 255L));
         out[21 + outPos] = (byte)((int)(((in[16 + inPos] & 1023L) >>> 8 | (in[17 + inPos] & 1023L) << 2) & 255L));
         out[22 + outPos] = (byte)((int)(((in[17 + inPos] & 1023L) >>> 6 | (in[18 + inPos] & 1023L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)(((in[18 + inPos] & 1023L) >>> 4 | (in[19 + inPos] & 1023L) << 6) & 255L));
         out[24 + outPos] = (byte)((int)((in[19 + inPos] & 1023L) >>> 2 & 255L));
         out[25 + outPos] = (byte)((int)(in[20 + inPos] & 1023L & 255L));
         out[26 + outPos] = (byte)((int)(((in[20 + inPos] & 1023L) >>> 8 | (in[21 + inPos] & 1023L) << 2) & 255L));
         out[27 + outPos] = (byte)((int)(((in[21 + inPos] & 1023L) >>> 6 | (in[22 + inPos] & 1023L) << 4) & 255L));
         out[28 + outPos] = (byte)((int)(((in[22 + inPos] & 1023L) >>> 4 | (in[23 + inPos] & 1023L) << 6) & 255L));
         out[29 + outPos] = (byte)((int)((in[23 + inPos] & 1023L) >>> 2 & 255L));
         out[30 + outPos] = (byte)((int)(in[24 + inPos] & 1023L & 255L));
         out[31 + outPos] = (byte)((int)(((in[24 + inPos] & 1023L) >>> 8 | (in[25 + inPos] & 1023L) << 2) & 255L));
         out[32 + outPos] = (byte)((int)(((in[25 + inPos] & 1023L) >>> 6 | (in[26 + inPos] & 1023L) << 4) & 255L));
         out[33 + outPos] = (byte)((int)(((in[26 + inPos] & 1023L) >>> 4 | (in[27 + inPos] & 1023L) << 6) & 255L));
         out[34 + outPos] = (byte)((int)((in[27 + inPos] & 1023L) >>> 2 & 255L));
         out[35 + outPos] = (byte)((int)(in[28 + inPos] & 1023L & 255L));
         out[36 + outPos] = (byte)((int)(((in[28 + inPos] & 1023L) >>> 8 | (in[29 + inPos] & 1023L) << 2) & 255L));
         out[37 + outPos] = (byte)((int)(((in[29 + inPos] & 1023L) >>> 6 | (in[30 + inPos] & 1023L) << 4) & 255L));
         out[38 + outPos] = (byte)((int)(((in[30 + inPos] & 1023L) >>> 4 | (in[31 + inPos] & 1023L) << 6) & 255L));
         out[39 + outPos] = (byte)((int)((in[31 + inPos] & 1023L) >>> 2 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 1023L;
         out[1 + outPos] = (long)in[1 + inPos] >> 2 & 63L | (long)in[2 + inPos] << 6 & 1023L;
         out[2 + outPos] = (long)in[2 + inPos] >> 4 & 15L | (long)in[3 + inPos] << 4 & 1023L;
         out[3 + outPos] = (long)in[3 + inPos] >> 6 & 3L | (long)in[4 + inPos] << 2 & 1023L;
         out[4 + outPos] = (long)in[5 + inPos] & 255L | (long)in[6 + inPos] << 8 & 1023L;
         out[5 + outPos] = (long)in[6 + inPos] >> 2 & 63L | (long)in[7 + inPos] << 6 & 1023L;
         out[6 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 1023L;
         out[7 + outPos] = (long)in[8 + inPos] >> 6 & 3L | (long)in[9 + inPos] << 2 & 1023L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 1023L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 2 & 63L | (long)in.get(2 + inPos) << 6 & 1023L;
         out[2 + outPos] = (long)in.get(2 + inPos) >> 4 & 15L | (long)in.get(3 + inPos) << 4 & 1023L;
         out[3 + outPos] = (long)in.get(3 + inPos) >> 6 & 3L | (long)in.get(4 + inPos) << 2 & 1023L;
         out[4 + outPos] = (long)in.get(5 + inPos) & 255L | (long)in.get(6 + inPos) << 8 & 1023L;
         out[5 + outPos] = (long)in.get(6 + inPos) >> 2 & 63L | (long)in.get(7 + inPos) << 6 & 1023L;
         out[6 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 1023L;
         out[7 + outPos] = (long)in.get(8 + inPos) >> 6 & 3L | (long)in.get(9 + inPos) << 2 & 1023L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 1023L;
         out[1 + outPos] = (long)in[1 + inPos] >> 2 & 63L | (long)in[2 + inPos] << 6 & 1023L;
         out[2 + outPos] = (long)in[2 + inPos] >> 4 & 15L | (long)in[3 + inPos] << 4 & 1023L;
         out[3 + outPos] = (long)in[3 + inPos] >> 6 & 3L | (long)in[4 + inPos] << 2 & 1023L;
         out[4 + outPos] = (long)in[5 + inPos] & 255L | (long)in[6 + inPos] << 8 & 1023L;
         out[5 + outPos] = (long)in[6 + inPos] >> 2 & 63L | (long)in[7 + inPos] << 6 & 1023L;
         out[6 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 1023L;
         out[7 + outPos] = (long)in[8 + inPos] >> 6 & 3L | (long)in[9 + inPos] << 2 & 1023L;
         out[8 + outPos] = (long)in[10 + inPos] & 255L | (long)in[11 + inPos] << 8 & 1023L;
         out[9 + outPos] = (long)in[11 + inPos] >> 2 & 63L | (long)in[12 + inPos] << 6 & 1023L;
         out[10 + outPos] = (long)in[12 + inPos] >> 4 & 15L | (long)in[13 + inPos] << 4 & 1023L;
         out[11 + outPos] = (long)in[13 + inPos] >> 6 & 3L | (long)in[14 + inPos] << 2 & 1023L;
         out[12 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 1023L;
         out[13 + outPos] = (long)in[16 + inPos] >> 2 & 63L | (long)in[17 + inPos] << 6 & 1023L;
         out[14 + outPos] = (long)in[17 + inPos] >> 4 & 15L | (long)in[18 + inPos] << 4 & 1023L;
         out[15 + outPos] = (long)in[18 + inPos] >> 6 & 3L | (long)in[19 + inPos] << 2 & 1023L;
         out[16 + outPos] = (long)in[20 + inPos] & 255L | (long)in[21 + inPos] << 8 & 1023L;
         out[17 + outPos] = (long)in[21 + inPos] >> 2 & 63L | (long)in[22 + inPos] << 6 & 1023L;
         out[18 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 1023L;
         out[19 + outPos] = (long)in[23 + inPos] >> 6 & 3L | (long)in[24 + inPos] << 2 & 1023L;
         out[20 + outPos] = (long)in[25 + inPos] & 255L | (long)in[26 + inPos] << 8 & 1023L;
         out[21 + outPos] = (long)in[26 + inPos] >> 2 & 63L | (long)in[27 + inPos] << 6 & 1023L;
         out[22 + outPos] = (long)in[27 + inPos] >> 4 & 15L | (long)in[28 + inPos] << 4 & 1023L;
         out[23 + outPos] = (long)in[28 + inPos] >> 6 & 3L | (long)in[29 + inPos] << 2 & 1023L;
         out[24 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 1023L;
         out[25 + outPos] = (long)in[31 + inPos] >> 2 & 63L | (long)in[32 + inPos] << 6 & 1023L;
         out[26 + outPos] = (long)in[32 + inPos] >> 4 & 15L | (long)in[33 + inPos] << 4 & 1023L;
         out[27 + outPos] = (long)in[33 + inPos] >> 6 & 3L | (long)in[34 + inPos] << 2 & 1023L;
         out[28 + outPos] = (long)in[35 + inPos] & 255L | (long)in[36 + inPos] << 8 & 1023L;
         out[29 + outPos] = (long)in[36 + inPos] >> 2 & 63L | (long)in[37 + inPos] << 6 & 1023L;
         out[30 + outPos] = (long)in[37 + inPos] >> 4 & 15L | (long)in[38 + inPos] << 4 & 1023L;
         out[31 + outPos] = (long)in[38 + inPos] >> 6 & 3L | (long)in[39 + inPos] << 2 & 1023L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 1023L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 2 & 63L | (long)in.get(2 + inPos) << 6 & 1023L;
         out[2 + outPos] = (long)in.get(2 + inPos) >> 4 & 15L | (long)in.get(3 + inPos) << 4 & 1023L;
         out[3 + outPos] = (long)in.get(3 + inPos) >> 6 & 3L | (long)in.get(4 + inPos) << 2 & 1023L;
         out[4 + outPos] = (long)in.get(5 + inPos) & 255L | (long)in.get(6 + inPos) << 8 & 1023L;
         out[5 + outPos] = (long)in.get(6 + inPos) >> 2 & 63L | (long)in.get(7 + inPos) << 6 & 1023L;
         out[6 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 1023L;
         out[7 + outPos] = (long)in.get(8 + inPos) >> 6 & 3L | (long)in.get(9 + inPos) << 2 & 1023L;
         out[8 + outPos] = (long)in.get(10 + inPos) & 255L | (long)in.get(11 + inPos) << 8 & 1023L;
         out[9 + outPos] = (long)in.get(11 + inPos) >> 2 & 63L | (long)in.get(12 + inPos) << 6 & 1023L;
         out[10 + outPos] = (long)in.get(12 + inPos) >> 4 & 15L | (long)in.get(13 + inPos) << 4 & 1023L;
         out[11 + outPos] = (long)in.get(13 + inPos) >> 6 & 3L | (long)in.get(14 + inPos) << 2 & 1023L;
         out[12 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 1023L;
         out[13 + outPos] = (long)in.get(16 + inPos) >> 2 & 63L | (long)in.get(17 + inPos) << 6 & 1023L;
         out[14 + outPos] = (long)in.get(17 + inPos) >> 4 & 15L | (long)in.get(18 + inPos) << 4 & 1023L;
         out[15 + outPos] = (long)in.get(18 + inPos) >> 6 & 3L | (long)in.get(19 + inPos) << 2 & 1023L;
         out[16 + outPos] = (long)in.get(20 + inPos) & 255L | (long)in.get(21 + inPos) << 8 & 1023L;
         out[17 + outPos] = (long)in.get(21 + inPos) >> 2 & 63L | (long)in.get(22 + inPos) << 6 & 1023L;
         out[18 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 1023L;
         out[19 + outPos] = (long)in.get(23 + inPos) >> 6 & 3L | (long)in.get(24 + inPos) << 2 & 1023L;
         out[20 + outPos] = (long)in.get(25 + inPos) & 255L | (long)in.get(26 + inPos) << 8 & 1023L;
         out[21 + outPos] = (long)in.get(26 + inPos) >> 2 & 63L | (long)in.get(27 + inPos) << 6 & 1023L;
         out[22 + outPos] = (long)in.get(27 + inPos) >> 4 & 15L | (long)in.get(28 + inPos) << 4 & 1023L;
         out[23 + outPos] = (long)in.get(28 + inPos) >> 6 & 3L | (long)in.get(29 + inPos) << 2 & 1023L;
         out[24 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 1023L;
         out[25 + outPos] = (long)in.get(31 + inPos) >> 2 & 63L | (long)in.get(32 + inPos) << 6 & 1023L;
         out[26 + outPos] = (long)in.get(32 + inPos) >> 4 & 15L | (long)in.get(33 + inPos) << 4 & 1023L;
         out[27 + outPos] = (long)in.get(33 + inPos) >> 6 & 3L | (long)in.get(34 + inPos) << 2 & 1023L;
         out[28 + outPos] = (long)in.get(35 + inPos) & 255L | (long)in.get(36 + inPos) << 8 & 1023L;
         out[29 + outPos] = (long)in.get(36 + inPos) >> 2 & 63L | (long)in.get(37 + inPos) << 6 & 1023L;
         out[30 + outPos] = (long)in.get(37 + inPos) >> 4 & 15L | (long)in.get(38 + inPos) << 4 & 1023L;
         out[31 + outPos] = (long)in.get(38 + inPos) >> 6 & 3L | (long)in.get(39 + inPos) << 2 & 1023L;
      }
   }

   private static final class Packer11 extends BytePackerForLong {
      private Packer11() {
         super(11);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 2047L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 2047L) >>> 8 | (in[1 + inPos] & 2047L) << 3) & 255L));
         out[2 + outPos] = (byte)((int)(((in[1 + inPos] & 2047L) >>> 5 | (in[2 + inPos] & 2047L) << 6) & 255L));
         out[3 + outPos] = (byte)((int)((in[2 + inPos] & 2047L) >>> 2 & 255L));
         out[4 + outPos] = (byte)((int)(((in[2 + inPos] & 2047L) >>> 10 | (in[3 + inPos] & 2047L) << 1) & 255L));
         out[5 + outPos] = (byte)((int)(((in[3 + inPos] & 2047L) >>> 7 | (in[4 + inPos] & 2047L) << 4) & 255L));
         out[6 + outPos] = (byte)((int)(((in[4 + inPos] & 2047L) >>> 4 | (in[5 + inPos] & 2047L) << 7) & 255L));
         out[7 + outPos] = (byte)((int)((in[5 + inPos] & 2047L) >>> 1 & 255L));
         out[8 + outPos] = (byte)((int)(((in[5 + inPos] & 2047L) >>> 9 | (in[6 + inPos] & 2047L) << 2) & 255L));
         out[9 + outPos] = (byte)((int)(((in[6 + inPos] & 2047L) >>> 6 | (in[7 + inPos] & 2047L) << 5) & 255L));
         out[10 + outPos] = (byte)((int)((in[7 + inPos] & 2047L) >>> 3 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 2047L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 2047L) >>> 8 | (in[1 + inPos] & 2047L) << 3) & 255L));
         out[2 + outPos] = (byte)((int)(((in[1 + inPos] & 2047L) >>> 5 | (in[2 + inPos] & 2047L) << 6) & 255L));
         out[3 + outPos] = (byte)((int)((in[2 + inPos] & 2047L) >>> 2 & 255L));
         out[4 + outPos] = (byte)((int)(((in[2 + inPos] & 2047L) >>> 10 | (in[3 + inPos] & 2047L) << 1) & 255L));
         out[5 + outPos] = (byte)((int)(((in[3 + inPos] & 2047L) >>> 7 | (in[4 + inPos] & 2047L) << 4) & 255L));
         out[6 + outPos] = (byte)((int)(((in[4 + inPos] & 2047L) >>> 4 | (in[5 + inPos] & 2047L) << 7) & 255L));
         out[7 + outPos] = (byte)((int)((in[5 + inPos] & 2047L) >>> 1 & 255L));
         out[8 + outPos] = (byte)((int)(((in[5 + inPos] & 2047L) >>> 9 | (in[6 + inPos] & 2047L) << 2) & 255L));
         out[9 + outPos] = (byte)((int)(((in[6 + inPos] & 2047L) >>> 6 | (in[7 + inPos] & 2047L) << 5) & 255L));
         out[10 + outPos] = (byte)((int)((in[7 + inPos] & 2047L) >>> 3 & 255L));
         out[11 + outPos] = (byte)((int)(in[8 + inPos] & 2047L & 255L));
         out[12 + outPos] = (byte)((int)(((in[8 + inPos] & 2047L) >>> 8 | (in[9 + inPos] & 2047L) << 3) & 255L));
         out[13 + outPos] = (byte)((int)(((in[9 + inPos] & 2047L) >>> 5 | (in[10 + inPos] & 2047L) << 6) & 255L));
         out[14 + outPos] = (byte)((int)((in[10 + inPos] & 2047L) >>> 2 & 255L));
         out[15 + outPos] = (byte)((int)(((in[10 + inPos] & 2047L) >>> 10 | (in[11 + inPos] & 2047L) << 1) & 255L));
         out[16 + outPos] = (byte)((int)(((in[11 + inPos] & 2047L) >>> 7 | (in[12 + inPos] & 2047L) << 4) & 255L));
         out[17 + outPos] = (byte)((int)(((in[12 + inPos] & 2047L) >>> 4 | (in[13 + inPos] & 2047L) << 7) & 255L));
         out[18 + outPos] = (byte)((int)((in[13 + inPos] & 2047L) >>> 1 & 255L));
         out[19 + outPos] = (byte)((int)(((in[13 + inPos] & 2047L) >>> 9 | (in[14 + inPos] & 2047L) << 2) & 255L));
         out[20 + outPos] = (byte)((int)(((in[14 + inPos] & 2047L) >>> 6 | (in[15 + inPos] & 2047L) << 5) & 255L));
         out[21 + outPos] = (byte)((int)((in[15 + inPos] & 2047L) >>> 3 & 255L));
         out[22 + outPos] = (byte)((int)(in[16 + inPos] & 2047L & 255L));
         out[23 + outPos] = (byte)((int)(((in[16 + inPos] & 2047L) >>> 8 | (in[17 + inPos] & 2047L) << 3) & 255L));
         out[24 + outPos] = (byte)((int)(((in[17 + inPos] & 2047L) >>> 5 | (in[18 + inPos] & 2047L) << 6) & 255L));
         out[25 + outPos] = (byte)((int)((in[18 + inPos] & 2047L) >>> 2 & 255L));
         out[26 + outPos] = (byte)((int)(((in[18 + inPos] & 2047L) >>> 10 | (in[19 + inPos] & 2047L) << 1) & 255L));
         out[27 + outPos] = (byte)((int)(((in[19 + inPos] & 2047L) >>> 7 | (in[20 + inPos] & 2047L) << 4) & 255L));
         out[28 + outPos] = (byte)((int)(((in[20 + inPos] & 2047L) >>> 4 | (in[21 + inPos] & 2047L) << 7) & 255L));
         out[29 + outPos] = (byte)((int)((in[21 + inPos] & 2047L) >>> 1 & 255L));
         out[30 + outPos] = (byte)((int)(((in[21 + inPos] & 2047L) >>> 9 | (in[22 + inPos] & 2047L) << 2) & 255L));
         out[31 + outPos] = (byte)((int)(((in[22 + inPos] & 2047L) >>> 6 | (in[23 + inPos] & 2047L) << 5) & 255L));
         out[32 + outPos] = (byte)((int)((in[23 + inPos] & 2047L) >>> 3 & 255L));
         out[33 + outPos] = (byte)((int)(in[24 + inPos] & 2047L & 255L));
         out[34 + outPos] = (byte)((int)(((in[24 + inPos] & 2047L) >>> 8 | (in[25 + inPos] & 2047L) << 3) & 255L));
         out[35 + outPos] = (byte)((int)(((in[25 + inPos] & 2047L) >>> 5 | (in[26 + inPos] & 2047L) << 6) & 255L));
         out[36 + outPos] = (byte)((int)((in[26 + inPos] & 2047L) >>> 2 & 255L));
         out[37 + outPos] = (byte)((int)(((in[26 + inPos] & 2047L) >>> 10 | (in[27 + inPos] & 2047L) << 1) & 255L));
         out[38 + outPos] = (byte)((int)(((in[27 + inPos] & 2047L) >>> 7 | (in[28 + inPos] & 2047L) << 4) & 255L));
         out[39 + outPos] = (byte)((int)(((in[28 + inPos] & 2047L) >>> 4 | (in[29 + inPos] & 2047L) << 7) & 255L));
         out[40 + outPos] = (byte)((int)((in[29 + inPos] & 2047L) >>> 1 & 255L));
         out[41 + outPos] = (byte)((int)(((in[29 + inPos] & 2047L) >>> 9 | (in[30 + inPos] & 2047L) << 2) & 255L));
         out[42 + outPos] = (byte)((int)(((in[30 + inPos] & 2047L) >>> 6 | (in[31 + inPos] & 2047L) << 5) & 255L));
         out[43 + outPos] = (byte)((int)((in[31 + inPos] & 2047L) >>> 3 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 2047L;
         out[1 + outPos] = (long)in[1 + inPos] >> 3 & 31L | (long)in[2 + inPos] << 5 & 2047L;
         out[2 + outPos] = (long)in[2 + inPos] >> 6 & 3L | (long)in[3 + inPos] << 2 & 1023L | (long)in[4 + inPos] << 10 & 2047L;
         out[3 + outPos] = (long)in[4 + inPos] >> 1 & 127L | (long)in[5 + inPos] << 7 & 2047L;
         out[4 + outPos] = (long)in[5 + inPos] >> 4 & 15L | (long)in[6 + inPos] << 4 & 2047L;
         out[5 + outPos] = (long)in[6 + inPos] >> 7 & 1L | (long)in[7 + inPos] << 1 & 511L | (long)in[8 + inPos] << 9 & 2047L;
         out[6 + outPos] = (long)in[8 + inPos] >> 2 & 63L | (long)in[9 + inPos] << 6 & 2047L;
         out[7 + outPos] = (long)in[9 + inPos] >> 5 & 7L | (long)in[10 + inPos] << 3 & 2047L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 2047L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 3 & 31L | (long)in.get(2 + inPos) << 5 & 2047L;
         out[2 + outPos] = (long)in.get(2 + inPos) >> 6 & 3L | (long)in.get(3 + inPos) << 2 & 1023L | (long)in.get(4 + inPos) << 10 & 2047L;
         out[3 + outPos] = (long)in.get(4 + inPos) >> 1 & 127L | (long)in.get(5 + inPos) << 7 & 2047L;
         out[4 + outPos] = (long)in.get(5 + inPos) >> 4 & 15L | (long)in.get(6 + inPos) << 4 & 2047L;
         out[5 + outPos] = (long)in.get(6 + inPos) >> 7 & 1L | (long)in.get(7 + inPos) << 1 & 511L | (long)in.get(8 + inPos) << 9 & 2047L;
         out[6 + outPos] = (long)in.get(8 + inPos) >> 2 & 63L | (long)in.get(9 + inPos) << 6 & 2047L;
         out[7 + outPos] = (long)in.get(9 + inPos) >> 5 & 7L | (long)in.get(10 + inPos) << 3 & 2047L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 2047L;
         out[1 + outPos] = (long)in[1 + inPos] >> 3 & 31L | (long)in[2 + inPos] << 5 & 2047L;
         out[2 + outPos] = (long)in[2 + inPos] >> 6 & 3L | (long)in[3 + inPos] << 2 & 1023L | (long)in[4 + inPos] << 10 & 2047L;
         out[3 + outPos] = (long)in[4 + inPos] >> 1 & 127L | (long)in[5 + inPos] << 7 & 2047L;
         out[4 + outPos] = (long)in[5 + inPos] >> 4 & 15L | (long)in[6 + inPos] << 4 & 2047L;
         out[5 + outPos] = (long)in[6 + inPos] >> 7 & 1L | (long)in[7 + inPos] << 1 & 511L | (long)in[8 + inPos] << 9 & 2047L;
         out[6 + outPos] = (long)in[8 + inPos] >> 2 & 63L | (long)in[9 + inPos] << 6 & 2047L;
         out[7 + outPos] = (long)in[9 + inPos] >> 5 & 7L | (long)in[10 + inPos] << 3 & 2047L;
         out[8 + outPos] = (long)in[11 + inPos] & 255L | (long)in[12 + inPos] << 8 & 2047L;
         out[9 + outPos] = (long)in[12 + inPos] >> 3 & 31L | (long)in[13 + inPos] << 5 & 2047L;
         out[10 + outPos] = (long)in[13 + inPos] >> 6 & 3L | (long)in[14 + inPos] << 2 & 1023L | (long)in[15 + inPos] << 10 & 2047L;
         out[11 + outPos] = (long)in[15 + inPos] >> 1 & 127L | (long)in[16 + inPos] << 7 & 2047L;
         out[12 + outPos] = (long)in[16 + inPos] >> 4 & 15L | (long)in[17 + inPos] << 4 & 2047L;
         out[13 + outPos] = (long)in[17 + inPos] >> 7 & 1L | (long)in[18 + inPos] << 1 & 511L | (long)in[19 + inPos] << 9 & 2047L;
         out[14 + outPos] = (long)in[19 + inPos] >> 2 & 63L | (long)in[20 + inPos] << 6 & 2047L;
         out[15 + outPos] = (long)in[20 + inPos] >> 5 & 7L | (long)in[21 + inPos] << 3 & 2047L;
         out[16 + outPos] = (long)in[22 + inPos] & 255L | (long)in[23 + inPos] << 8 & 2047L;
         out[17 + outPos] = (long)in[23 + inPos] >> 3 & 31L | (long)in[24 + inPos] << 5 & 2047L;
         out[18 + outPos] = (long)in[24 + inPos] >> 6 & 3L | (long)in[25 + inPos] << 2 & 1023L | (long)in[26 + inPos] << 10 & 2047L;
         out[19 + outPos] = (long)in[26 + inPos] >> 1 & 127L | (long)in[27 + inPos] << 7 & 2047L;
         out[20 + outPos] = (long)in[27 + inPos] >> 4 & 15L | (long)in[28 + inPos] << 4 & 2047L;
         out[21 + outPos] = (long)in[28 + inPos] >> 7 & 1L | (long)in[29 + inPos] << 1 & 511L | (long)in[30 + inPos] << 9 & 2047L;
         out[22 + outPos] = (long)in[30 + inPos] >> 2 & 63L | (long)in[31 + inPos] << 6 & 2047L;
         out[23 + outPos] = (long)in[31 + inPos] >> 5 & 7L | (long)in[32 + inPos] << 3 & 2047L;
         out[24 + outPos] = (long)in[33 + inPos] & 255L | (long)in[34 + inPos] << 8 & 2047L;
         out[25 + outPos] = (long)in[34 + inPos] >> 3 & 31L | (long)in[35 + inPos] << 5 & 2047L;
         out[26 + outPos] = (long)in[35 + inPos] >> 6 & 3L | (long)in[36 + inPos] << 2 & 1023L | (long)in[37 + inPos] << 10 & 2047L;
         out[27 + outPos] = (long)in[37 + inPos] >> 1 & 127L | (long)in[38 + inPos] << 7 & 2047L;
         out[28 + outPos] = (long)in[38 + inPos] >> 4 & 15L | (long)in[39 + inPos] << 4 & 2047L;
         out[29 + outPos] = (long)in[39 + inPos] >> 7 & 1L | (long)in[40 + inPos] << 1 & 511L | (long)in[41 + inPos] << 9 & 2047L;
         out[30 + outPos] = (long)in[41 + inPos] >> 2 & 63L | (long)in[42 + inPos] << 6 & 2047L;
         out[31 + outPos] = (long)in[42 + inPos] >> 5 & 7L | (long)in[43 + inPos] << 3 & 2047L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 2047L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 3 & 31L | (long)in.get(2 + inPos) << 5 & 2047L;
         out[2 + outPos] = (long)in.get(2 + inPos) >> 6 & 3L | (long)in.get(3 + inPos) << 2 & 1023L | (long)in.get(4 + inPos) << 10 & 2047L;
         out[3 + outPos] = (long)in.get(4 + inPos) >> 1 & 127L | (long)in.get(5 + inPos) << 7 & 2047L;
         out[4 + outPos] = (long)in.get(5 + inPos) >> 4 & 15L | (long)in.get(6 + inPos) << 4 & 2047L;
         out[5 + outPos] = (long)in.get(6 + inPos) >> 7 & 1L | (long)in.get(7 + inPos) << 1 & 511L | (long)in.get(8 + inPos) << 9 & 2047L;
         out[6 + outPos] = (long)in.get(8 + inPos) >> 2 & 63L | (long)in.get(9 + inPos) << 6 & 2047L;
         out[7 + outPos] = (long)in.get(9 + inPos) >> 5 & 7L | (long)in.get(10 + inPos) << 3 & 2047L;
         out[8 + outPos] = (long)in.get(11 + inPos) & 255L | (long)in.get(12 + inPos) << 8 & 2047L;
         out[9 + outPos] = (long)in.get(12 + inPos) >> 3 & 31L | (long)in.get(13 + inPos) << 5 & 2047L;
         out[10 + outPos] = (long)in.get(13 + inPos) >> 6 & 3L | (long)in.get(14 + inPos) << 2 & 1023L | (long)in.get(15 + inPos) << 10 & 2047L;
         out[11 + outPos] = (long)in.get(15 + inPos) >> 1 & 127L | (long)in.get(16 + inPos) << 7 & 2047L;
         out[12 + outPos] = (long)in.get(16 + inPos) >> 4 & 15L | (long)in.get(17 + inPos) << 4 & 2047L;
         out[13 + outPos] = (long)in.get(17 + inPos) >> 7 & 1L | (long)in.get(18 + inPos) << 1 & 511L | (long)in.get(19 + inPos) << 9 & 2047L;
         out[14 + outPos] = (long)in.get(19 + inPos) >> 2 & 63L | (long)in.get(20 + inPos) << 6 & 2047L;
         out[15 + outPos] = (long)in.get(20 + inPos) >> 5 & 7L | (long)in.get(21 + inPos) << 3 & 2047L;
         out[16 + outPos] = (long)in.get(22 + inPos) & 255L | (long)in.get(23 + inPos) << 8 & 2047L;
         out[17 + outPos] = (long)in.get(23 + inPos) >> 3 & 31L | (long)in.get(24 + inPos) << 5 & 2047L;
         out[18 + outPos] = (long)in.get(24 + inPos) >> 6 & 3L | (long)in.get(25 + inPos) << 2 & 1023L | (long)in.get(26 + inPos) << 10 & 2047L;
         out[19 + outPos] = (long)in.get(26 + inPos) >> 1 & 127L | (long)in.get(27 + inPos) << 7 & 2047L;
         out[20 + outPos] = (long)in.get(27 + inPos) >> 4 & 15L | (long)in.get(28 + inPos) << 4 & 2047L;
         out[21 + outPos] = (long)in.get(28 + inPos) >> 7 & 1L | (long)in.get(29 + inPos) << 1 & 511L | (long)in.get(30 + inPos) << 9 & 2047L;
         out[22 + outPos] = (long)in.get(30 + inPos) >> 2 & 63L | (long)in.get(31 + inPos) << 6 & 2047L;
         out[23 + outPos] = (long)in.get(31 + inPos) >> 5 & 7L | (long)in.get(32 + inPos) << 3 & 2047L;
         out[24 + outPos] = (long)in.get(33 + inPos) & 255L | (long)in.get(34 + inPos) << 8 & 2047L;
         out[25 + outPos] = (long)in.get(34 + inPos) >> 3 & 31L | (long)in.get(35 + inPos) << 5 & 2047L;
         out[26 + outPos] = (long)in.get(35 + inPos) >> 6 & 3L | (long)in.get(36 + inPos) << 2 & 1023L | (long)in.get(37 + inPos) << 10 & 2047L;
         out[27 + outPos] = (long)in.get(37 + inPos) >> 1 & 127L | (long)in.get(38 + inPos) << 7 & 2047L;
         out[28 + outPos] = (long)in.get(38 + inPos) >> 4 & 15L | (long)in.get(39 + inPos) << 4 & 2047L;
         out[29 + outPos] = (long)in.get(39 + inPos) >> 7 & 1L | (long)in.get(40 + inPos) << 1 & 511L | (long)in.get(41 + inPos) << 9 & 2047L;
         out[30 + outPos] = (long)in.get(41 + inPos) >> 2 & 63L | (long)in.get(42 + inPos) << 6 & 2047L;
         out[31 + outPos] = (long)in.get(42 + inPos) >> 5 & 7L | (long)in.get(43 + inPos) << 3 & 2047L;
      }
   }

   private static final class Packer12 extends BytePackerForLong {
      private Packer12() {
         super(12);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 4095L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 4095L) >>> 8 | (in[1 + inPos] & 4095L) << 4) & 255L));
         out[2 + outPos] = (byte)((int)((in[1 + inPos] & 4095L) >>> 4 & 255L));
         out[3 + outPos] = (byte)((int)(in[2 + inPos] & 4095L & 255L));
         out[4 + outPos] = (byte)((int)(((in[2 + inPos] & 4095L) >>> 8 | (in[3 + inPos] & 4095L) << 4) & 255L));
         out[5 + outPos] = (byte)((int)((in[3 + inPos] & 4095L) >>> 4 & 255L));
         out[6 + outPos] = (byte)((int)(in[4 + inPos] & 4095L & 255L));
         out[7 + outPos] = (byte)((int)(((in[4 + inPos] & 4095L) >>> 8 | (in[5 + inPos] & 4095L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)((in[5 + inPos] & 4095L) >>> 4 & 255L));
         out[9 + outPos] = (byte)((int)(in[6 + inPos] & 4095L & 255L));
         out[10 + outPos] = (byte)((int)(((in[6 + inPos] & 4095L) >>> 8 | (in[7 + inPos] & 4095L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)((in[7 + inPos] & 4095L) >>> 4 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 4095L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 4095L) >>> 8 | (in[1 + inPos] & 4095L) << 4) & 255L));
         out[2 + outPos] = (byte)((int)((in[1 + inPos] & 4095L) >>> 4 & 255L));
         out[3 + outPos] = (byte)((int)(in[2 + inPos] & 4095L & 255L));
         out[4 + outPos] = (byte)((int)(((in[2 + inPos] & 4095L) >>> 8 | (in[3 + inPos] & 4095L) << 4) & 255L));
         out[5 + outPos] = (byte)((int)((in[3 + inPos] & 4095L) >>> 4 & 255L));
         out[6 + outPos] = (byte)((int)(in[4 + inPos] & 4095L & 255L));
         out[7 + outPos] = (byte)((int)(((in[4 + inPos] & 4095L) >>> 8 | (in[5 + inPos] & 4095L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)((in[5 + inPos] & 4095L) >>> 4 & 255L));
         out[9 + outPos] = (byte)((int)(in[6 + inPos] & 4095L & 255L));
         out[10 + outPos] = (byte)((int)(((in[6 + inPos] & 4095L) >>> 8 | (in[7 + inPos] & 4095L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)((in[7 + inPos] & 4095L) >>> 4 & 255L));
         out[12 + outPos] = (byte)((int)(in[8 + inPos] & 4095L & 255L));
         out[13 + outPos] = (byte)((int)(((in[8 + inPos] & 4095L) >>> 8 | (in[9 + inPos] & 4095L) << 4) & 255L));
         out[14 + outPos] = (byte)((int)((in[9 + inPos] & 4095L) >>> 4 & 255L));
         out[15 + outPos] = (byte)((int)(in[10 + inPos] & 4095L & 255L));
         out[16 + outPos] = (byte)((int)(((in[10 + inPos] & 4095L) >>> 8 | (in[11 + inPos] & 4095L) << 4) & 255L));
         out[17 + outPos] = (byte)((int)((in[11 + inPos] & 4095L) >>> 4 & 255L));
         out[18 + outPos] = (byte)((int)(in[12 + inPos] & 4095L & 255L));
         out[19 + outPos] = (byte)((int)(((in[12 + inPos] & 4095L) >>> 8 | (in[13 + inPos] & 4095L) << 4) & 255L));
         out[20 + outPos] = (byte)((int)((in[13 + inPos] & 4095L) >>> 4 & 255L));
         out[21 + outPos] = (byte)((int)(in[14 + inPos] & 4095L & 255L));
         out[22 + outPos] = (byte)((int)(((in[14 + inPos] & 4095L) >>> 8 | (in[15 + inPos] & 4095L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)((in[15 + inPos] & 4095L) >>> 4 & 255L));
         out[24 + outPos] = (byte)((int)(in[16 + inPos] & 4095L & 255L));
         out[25 + outPos] = (byte)((int)(((in[16 + inPos] & 4095L) >>> 8 | (in[17 + inPos] & 4095L) << 4) & 255L));
         out[26 + outPos] = (byte)((int)((in[17 + inPos] & 4095L) >>> 4 & 255L));
         out[27 + outPos] = (byte)((int)(in[18 + inPos] & 4095L & 255L));
         out[28 + outPos] = (byte)((int)(((in[18 + inPos] & 4095L) >>> 8 | (in[19 + inPos] & 4095L) << 4) & 255L));
         out[29 + outPos] = (byte)((int)((in[19 + inPos] & 4095L) >>> 4 & 255L));
         out[30 + outPos] = (byte)((int)(in[20 + inPos] & 4095L & 255L));
         out[31 + outPos] = (byte)((int)(((in[20 + inPos] & 4095L) >>> 8 | (in[21 + inPos] & 4095L) << 4) & 255L));
         out[32 + outPos] = (byte)((int)((in[21 + inPos] & 4095L) >>> 4 & 255L));
         out[33 + outPos] = (byte)((int)(in[22 + inPos] & 4095L & 255L));
         out[34 + outPos] = (byte)((int)(((in[22 + inPos] & 4095L) >>> 8 | (in[23 + inPos] & 4095L) << 4) & 255L));
         out[35 + outPos] = (byte)((int)((in[23 + inPos] & 4095L) >>> 4 & 255L));
         out[36 + outPos] = (byte)((int)(in[24 + inPos] & 4095L & 255L));
         out[37 + outPos] = (byte)((int)(((in[24 + inPos] & 4095L) >>> 8 | (in[25 + inPos] & 4095L) << 4) & 255L));
         out[38 + outPos] = (byte)((int)((in[25 + inPos] & 4095L) >>> 4 & 255L));
         out[39 + outPos] = (byte)((int)(in[26 + inPos] & 4095L & 255L));
         out[40 + outPos] = (byte)((int)(((in[26 + inPos] & 4095L) >>> 8 | (in[27 + inPos] & 4095L) << 4) & 255L));
         out[41 + outPos] = (byte)((int)((in[27 + inPos] & 4095L) >>> 4 & 255L));
         out[42 + outPos] = (byte)((int)(in[28 + inPos] & 4095L & 255L));
         out[43 + outPos] = (byte)((int)(((in[28 + inPos] & 4095L) >>> 8 | (in[29 + inPos] & 4095L) << 4) & 255L));
         out[44 + outPos] = (byte)((int)((in[29 + inPos] & 4095L) >>> 4 & 255L));
         out[45 + outPos] = (byte)((int)(in[30 + inPos] & 4095L & 255L));
         out[46 + outPos] = (byte)((int)(((in[30 + inPos] & 4095L) >>> 8 | (in[31 + inPos] & 4095L) << 4) & 255L));
         out[47 + outPos] = (byte)((int)((in[31 + inPos] & 4095L) >>> 4 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 4095L;
         out[1 + outPos] = (long)in[1 + inPos] >> 4 & 15L | (long)in[2 + inPos] << 4 & 4095L;
         out[2 + outPos] = (long)in[3 + inPos] & 255L | (long)in[4 + inPos] << 8 & 4095L;
         out[3 + outPos] = (long)in[4 + inPos] >> 4 & 15L | (long)in[5 + inPos] << 4 & 4095L;
         out[4 + outPos] = (long)in[6 + inPos] & 255L | (long)in[7 + inPos] << 8 & 4095L;
         out[5 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 4095L;
         out[6 + outPos] = (long)in[9 + inPos] & 255L | (long)in[10 + inPos] << 8 & 4095L;
         out[7 + outPos] = (long)in[10 + inPos] >> 4 & 15L | (long)in[11 + inPos] << 4 & 4095L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 4095L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 4 & 15L | (long)in.get(2 + inPos) << 4 & 4095L;
         out[2 + outPos] = (long)in.get(3 + inPos) & 255L | (long)in.get(4 + inPos) << 8 & 4095L;
         out[3 + outPos] = (long)in.get(4 + inPos) >> 4 & 15L | (long)in.get(5 + inPos) << 4 & 4095L;
         out[4 + outPos] = (long)in.get(6 + inPos) & 255L | (long)in.get(7 + inPos) << 8 & 4095L;
         out[5 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 4095L;
         out[6 + outPos] = (long)in.get(9 + inPos) & 255L | (long)in.get(10 + inPos) << 8 & 4095L;
         out[7 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L | (long)in.get(11 + inPos) << 4 & 4095L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 4095L;
         out[1 + outPos] = (long)in[1 + inPos] >> 4 & 15L | (long)in[2 + inPos] << 4 & 4095L;
         out[2 + outPos] = (long)in[3 + inPos] & 255L | (long)in[4 + inPos] << 8 & 4095L;
         out[3 + outPos] = (long)in[4 + inPos] >> 4 & 15L | (long)in[5 + inPos] << 4 & 4095L;
         out[4 + outPos] = (long)in[6 + inPos] & 255L | (long)in[7 + inPos] << 8 & 4095L;
         out[5 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 4095L;
         out[6 + outPos] = (long)in[9 + inPos] & 255L | (long)in[10 + inPos] << 8 & 4095L;
         out[7 + outPos] = (long)in[10 + inPos] >> 4 & 15L | (long)in[11 + inPos] << 4 & 4095L;
         out[8 + outPos] = (long)in[12 + inPos] & 255L | (long)in[13 + inPos] << 8 & 4095L;
         out[9 + outPos] = (long)in[13 + inPos] >> 4 & 15L | (long)in[14 + inPos] << 4 & 4095L;
         out[10 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 4095L;
         out[11 + outPos] = (long)in[16 + inPos] >> 4 & 15L | (long)in[17 + inPos] << 4 & 4095L;
         out[12 + outPos] = (long)in[18 + inPos] & 255L | (long)in[19 + inPos] << 8 & 4095L;
         out[13 + outPos] = (long)in[19 + inPos] >> 4 & 15L | (long)in[20 + inPos] << 4 & 4095L;
         out[14 + outPos] = (long)in[21 + inPos] & 255L | (long)in[22 + inPos] << 8 & 4095L;
         out[15 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 4095L;
         out[16 + outPos] = (long)in[24 + inPos] & 255L | (long)in[25 + inPos] << 8 & 4095L;
         out[17 + outPos] = (long)in[25 + inPos] >> 4 & 15L | (long)in[26 + inPos] << 4 & 4095L;
         out[18 + outPos] = (long)in[27 + inPos] & 255L | (long)in[28 + inPos] << 8 & 4095L;
         out[19 + outPos] = (long)in[28 + inPos] >> 4 & 15L | (long)in[29 + inPos] << 4 & 4095L;
         out[20 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 4095L;
         out[21 + outPos] = (long)in[31 + inPos] >> 4 & 15L | (long)in[32 + inPos] << 4 & 4095L;
         out[22 + outPos] = (long)in[33 + inPos] & 255L | (long)in[34 + inPos] << 8 & 4095L;
         out[23 + outPos] = (long)in[34 + inPos] >> 4 & 15L | (long)in[35 + inPos] << 4 & 4095L;
         out[24 + outPos] = (long)in[36 + inPos] & 255L | (long)in[37 + inPos] << 8 & 4095L;
         out[25 + outPos] = (long)in[37 + inPos] >> 4 & 15L | (long)in[38 + inPos] << 4 & 4095L;
         out[26 + outPos] = (long)in[39 + inPos] & 255L | (long)in[40 + inPos] << 8 & 4095L;
         out[27 + outPos] = (long)in[40 + inPos] >> 4 & 15L | (long)in[41 + inPos] << 4 & 4095L;
         out[28 + outPos] = (long)in[42 + inPos] & 255L | (long)in[43 + inPos] << 8 & 4095L;
         out[29 + outPos] = (long)in[43 + inPos] >> 4 & 15L | (long)in[44 + inPos] << 4 & 4095L;
         out[30 + outPos] = (long)in[45 + inPos] & 255L | (long)in[46 + inPos] << 8 & 4095L;
         out[31 + outPos] = (long)in[46 + inPos] >> 4 & 15L | (long)in[47 + inPos] << 4 & 4095L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 4095L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 4 & 15L | (long)in.get(2 + inPos) << 4 & 4095L;
         out[2 + outPos] = (long)in.get(3 + inPos) & 255L | (long)in.get(4 + inPos) << 8 & 4095L;
         out[3 + outPos] = (long)in.get(4 + inPos) >> 4 & 15L | (long)in.get(5 + inPos) << 4 & 4095L;
         out[4 + outPos] = (long)in.get(6 + inPos) & 255L | (long)in.get(7 + inPos) << 8 & 4095L;
         out[5 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 4095L;
         out[6 + outPos] = (long)in.get(9 + inPos) & 255L | (long)in.get(10 + inPos) << 8 & 4095L;
         out[7 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L | (long)in.get(11 + inPos) << 4 & 4095L;
         out[8 + outPos] = (long)in.get(12 + inPos) & 255L | (long)in.get(13 + inPos) << 8 & 4095L;
         out[9 + outPos] = (long)in.get(13 + inPos) >> 4 & 15L | (long)in.get(14 + inPos) << 4 & 4095L;
         out[10 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 4095L;
         out[11 + outPos] = (long)in.get(16 + inPos) >> 4 & 15L | (long)in.get(17 + inPos) << 4 & 4095L;
         out[12 + outPos] = (long)in.get(18 + inPos) & 255L | (long)in.get(19 + inPos) << 8 & 4095L;
         out[13 + outPos] = (long)in.get(19 + inPos) >> 4 & 15L | (long)in.get(20 + inPos) << 4 & 4095L;
         out[14 + outPos] = (long)in.get(21 + inPos) & 255L | (long)in.get(22 + inPos) << 8 & 4095L;
         out[15 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 4095L;
         out[16 + outPos] = (long)in.get(24 + inPos) & 255L | (long)in.get(25 + inPos) << 8 & 4095L;
         out[17 + outPos] = (long)in.get(25 + inPos) >> 4 & 15L | (long)in.get(26 + inPos) << 4 & 4095L;
         out[18 + outPos] = (long)in.get(27 + inPos) & 255L | (long)in.get(28 + inPos) << 8 & 4095L;
         out[19 + outPos] = (long)in.get(28 + inPos) >> 4 & 15L | (long)in.get(29 + inPos) << 4 & 4095L;
         out[20 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 4095L;
         out[21 + outPos] = (long)in.get(31 + inPos) >> 4 & 15L | (long)in.get(32 + inPos) << 4 & 4095L;
         out[22 + outPos] = (long)in.get(33 + inPos) & 255L | (long)in.get(34 + inPos) << 8 & 4095L;
         out[23 + outPos] = (long)in.get(34 + inPos) >> 4 & 15L | (long)in.get(35 + inPos) << 4 & 4095L;
         out[24 + outPos] = (long)in.get(36 + inPos) & 255L | (long)in.get(37 + inPos) << 8 & 4095L;
         out[25 + outPos] = (long)in.get(37 + inPos) >> 4 & 15L | (long)in.get(38 + inPos) << 4 & 4095L;
         out[26 + outPos] = (long)in.get(39 + inPos) & 255L | (long)in.get(40 + inPos) << 8 & 4095L;
         out[27 + outPos] = (long)in.get(40 + inPos) >> 4 & 15L | (long)in.get(41 + inPos) << 4 & 4095L;
         out[28 + outPos] = (long)in.get(42 + inPos) & 255L | (long)in.get(43 + inPos) << 8 & 4095L;
         out[29 + outPos] = (long)in.get(43 + inPos) >> 4 & 15L | (long)in.get(44 + inPos) << 4 & 4095L;
         out[30 + outPos] = (long)in.get(45 + inPos) & 255L | (long)in.get(46 + inPos) << 8 & 4095L;
         out[31 + outPos] = (long)in.get(46 + inPos) >> 4 & 15L | (long)in.get(47 + inPos) << 4 & 4095L;
      }
   }

   private static final class Packer13 extends BytePackerForLong {
      private Packer13() {
         super(13);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 8191L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 8191L) >>> 8 | (in[1 + inPos] & 8191L) << 5) & 255L));
         out[2 + outPos] = (byte)((int)((in[1 + inPos] & 8191L) >>> 3 & 255L));
         out[3 + outPos] = (byte)((int)(((in[1 + inPos] & 8191L) >>> 11 | (in[2 + inPos] & 8191L) << 2) & 255L));
         out[4 + outPos] = (byte)((int)(((in[2 + inPos] & 8191L) >>> 6 | (in[3 + inPos] & 8191L) << 7) & 255L));
         out[5 + outPos] = (byte)((int)((in[3 + inPos] & 8191L) >>> 1 & 255L));
         out[6 + outPos] = (byte)((int)(((in[3 + inPos] & 8191L) >>> 9 | (in[4 + inPos] & 8191L) << 4) & 255L));
         out[7 + outPos] = (byte)((int)((in[4 + inPos] & 8191L) >>> 4 & 255L));
         out[8 + outPos] = (byte)((int)(((in[4 + inPos] & 8191L) >>> 12 | (in[5 + inPos] & 8191L) << 1) & 255L));
         out[9 + outPos] = (byte)((int)(((in[5 + inPos] & 8191L) >>> 7 | (in[6 + inPos] & 8191L) << 6) & 255L));
         out[10 + outPos] = (byte)((int)((in[6 + inPos] & 8191L) >>> 2 & 255L));
         out[11 + outPos] = (byte)((int)(((in[6 + inPos] & 8191L) >>> 10 | (in[7 + inPos] & 8191L) << 3) & 255L));
         out[12 + outPos] = (byte)((int)((in[7 + inPos] & 8191L) >>> 5 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 8191L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 8191L) >>> 8 | (in[1 + inPos] & 8191L) << 5) & 255L));
         out[2 + outPos] = (byte)((int)((in[1 + inPos] & 8191L) >>> 3 & 255L));
         out[3 + outPos] = (byte)((int)(((in[1 + inPos] & 8191L) >>> 11 | (in[2 + inPos] & 8191L) << 2) & 255L));
         out[4 + outPos] = (byte)((int)(((in[2 + inPos] & 8191L) >>> 6 | (in[3 + inPos] & 8191L) << 7) & 255L));
         out[5 + outPos] = (byte)((int)((in[3 + inPos] & 8191L) >>> 1 & 255L));
         out[6 + outPos] = (byte)((int)(((in[3 + inPos] & 8191L) >>> 9 | (in[4 + inPos] & 8191L) << 4) & 255L));
         out[7 + outPos] = (byte)((int)((in[4 + inPos] & 8191L) >>> 4 & 255L));
         out[8 + outPos] = (byte)((int)(((in[4 + inPos] & 8191L) >>> 12 | (in[5 + inPos] & 8191L) << 1) & 255L));
         out[9 + outPos] = (byte)((int)(((in[5 + inPos] & 8191L) >>> 7 | (in[6 + inPos] & 8191L) << 6) & 255L));
         out[10 + outPos] = (byte)((int)((in[6 + inPos] & 8191L) >>> 2 & 255L));
         out[11 + outPos] = (byte)((int)(((in[6 + inPos] & 8191L) >>> 10 | (in[7 + inPos] & 8191L) << 3) & 255L));
         out[12 + outPos] = (byte)((int)((in[7 + inPos] & 8191L) >>> 5 & 255L));
         out[13 + outPos] = (byte)((int)(in[8 + inPos] & 8191L & 255L));
         out[14 + outPos] = (byte)((int)(((in[8 + inPos] & 8191L) >>> 8 | (in[9 + inPos] & 8191L) << 5) & 255L));
         out[15 + outPos] = (byte)((int)((in[9 + inPos] & 8191L) >>> 3 & 255L));
         out[16 + outPos] = (byte)((int)(((in[9 + inPos] & 8191L) >>> 11 | (in[10 + inPos] & 8191L) << 2) & 255L));
         out[17 + outPos] = (byte)((int)(((in[10 + inPos] & 8191L) >>> 6 | (in[11 + inPos] & 8191L) << 7) & 255L));
         out[18 + outPos] = (byte)((int)((in[11 + inPos] & 8191L) >>> 1 & 255L));
         out[19 + outPos] = (byte)((int)(((in[11 + inPos] & 8191L) >>> 9 | (in[12 + inPos] & 8191L) << 4) & 255L));
         out[20 + outPos] = (byte)((int)((in[12 + inPos] & 8191L) >>> 4 & 255L));
         out[21 + outPos] = (byte)((int)(((in[12 + inPos] & 8191L) >>> 12 | (in[13 + inPos] & 8191L) << 1) & 255L));
         out[22 + outPos] = (byte)((int)(((in[13 + inPos] & 8191L) >>> 7 | (in[14 + inPos] & 8191L) << 6) & 255L));
         out[23 + outPos] = (byte)((int)((in[14 + inPos] & 8191L) >>> 2 & 255L));
         out[24 + outPos] = (byte)((int)(((in[14 + inPos] & 8191L) >>> 10 | (in[15 + inPos] & 8191L) << 3) & 255L));
         out[25 + outPos] = (byte)((int)((in[15 + inPos] & 8191L) >>> 5 & 255L));
         out[26 + outPos] = (byte)((int)(in[16 + inPos] & 8191L & 255L));
         out[27 + outPos] = (byte)((int)(((in[16 + inPos] & 8191L) >>> 8 | (in[17 + inPos] & 8191L) << 5) & 255L));
         out[28 + outPos] = (byte)((int)((in[17 + inPos] & 8191L) >>> 3 & 255L));
         out[29 + outPos] = (byte)((int)(((in[17 + inPos] & 8191L) >>> 11 | (in[18 + inPos] & 8191L) << 2) & 255L));
         out[30 + outPos] = (byte)((int)(((in[18 + inPos] & 8191L) >>> 6 | (in[19 + inPos] & 8191L) << 7) & 255L));
         out[31 + outPos] = (byte)((int)((in[19 + inPos] & 8191L) >>> 1 & 255L));
         out[32 + outPos] = (byte)((int)(((in[19 + inPos] & 8191L) >>> 9 | (in[20 + inPos] & 8191L) << 4) & 255L));
         out[33 + outPos] = (byte)((int)((in[20 + inPos] & 8191L) >>> 4 & 255L));
         out[34 + outPos] = (byte)((int)(((in[20 + inPos] & 8191L) >>> 12 | (in[21 + inPos] & 8191L) << 1) & 255L));
         out[35 + outPos] = (byte)((int)(((in[21 + inPos] & 8191L) >>> 7 | (in[22 + inPos] & 8191L) << 6) & 255L));
         out[36 + outPos] = (byte)((int)((in[22 + inPos] & 8191L) >>> 2 & 255L));
         out[37 + outPos] = (byte)((int)(((in[22 + inPos] & 8191L) >>> 10 | (in[23 + inPos] & 8191L) << 3) & 255L));
         out[38 + outPos] = (byte)((int)((in[23 + inPos] & 8191L) >>> 5 & 255L));
         out[39 + outPos] = (byte)((int)(in[24 + inPos] & 8191L & 255L));
         out[40 + outPos] = (byte)((int)(((in[24 + inPos] & 8191L) >>> 8 | (in[25 + inPos] & 8191L) << 5) & 255L));
         out[41 + outPos] = (byte)((int)((in[25 + inPos] & 8191L) >>> 3 & 255L));
         out[42 + outPos] = (byte)((int)(((in[25 + inPos] & 8191L) >>> 11 | (in[26 + inPos] & 8191L) << 2) & 255L));
         out[43 + outPos] = (byte)((int)(((in[26 + inPos] & 8191L) >>> 6 | (in[27 + inPos] & 8191L) << 7) & 255L));
         out[44 + outPos] = (byte)((int)((in[27 + inPos] & 8191L) >>> 1 & 255L));
         out[45 + outPos] = (byte)((int)(((in[27 + inPos] & 8191L) >>> 9 | (in[28 + inPos] & 8191L) << 4) & 255L));
         out[46 + outPos] = (byte)((int)((in[28 + inPos] & 8191L) >>> 4 & 255L));
         out[47 + outPos] = (byte)((int)(((in[28 + inPos] & 8191L) >>> 12 | (in[29 + inPos] & 8191L) << 1) & 255L));
         out[48 + outPos] = (byte)((int)(((in[29 + inPos] & 8191L) >>> 7 | (in[30 + inPos] & 8191L) << 6) & 255L));
         out[49 + outPos] = (byte)((int)((in[30 + inPos] & 8191L) >>> 2 & 255L));
         out[50 + outPos] = (byte)((int)(((in[30 + inPos] & 8191L) >>> 10 | (in[31 + inPos] & 8191L) << 3) & 255L));
         out[51 + outPos] = (byte)((int)((in[31 + inPos] & 8191L) >>> 5 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 8191L;
         out[1 + outPos] = (long)in[1 + inPos] >> 5 & 7L | (long)in[2 + inPos] << 3 & 2047L | (long)in[3 + inPos] << 11 & 8191L;
         out[2 + outPos] = (long)in[3 + inPos] >> 2 & 63L | (long)in[4 + inPos] << 6 & 8191L;
         out[3 + outPos] = (long)in[4 + inPos] >> 7 & 1L | (long)in[5 + inPos] << 1 & 511L | (long)in[6 + inPos] << 9 & 8191L;
         out[4 + outPos] = (long)in[6 + inPos] >> 4 & 15L | (long)in[7 + inPos] << 4 & 4095L | (long)in[8 + inPos] << 12 & 8191L;
         out[5 + outPos] = (long)in[8 + inPos] >> 1 & 127L | (long)in[9 + inPos] << 7 & 8191L;
         out[6 + outPos] = (long)in[9 + inPos] >> 6 & 3L | (long)in[10 + inPos] << 2 & 1023L | (long)in[11 + inPos] << 10 & 8191L;
         out[7 + outPos] = (long)in[11 + inPos] >> 3 & 31L | (long)in[12 + inPos] << 5 & 8191L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 8191L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 5 & 7L | (long)in.get(2 + inPos) << 3 & 2047L | (long)in.get(3 + inPos) << 11 & 8191L;
         out[2 + outPos] = (long)in.get(3 + inPos) >> 2 & 63L | (long)in.get(4 + inPos) << 6 & 8191L;
         out[3 + outPos] = (long)in.get(4 + inPos) >> 7 & 1L | (long)in.get(5 + inPos) << 1 & 511L | (long)in.get(6 + inPos) << 9 & 8191L;
         out[4 + outPos] = (long)in.get(6 + inPos) >> 4 & 15L | (long)in.get(7 + inPos) << 4 & 4095L | (long)in.get(8 + inPos) << 12 & 8191L;
         out[5 + outPos] = (long)in.get(8 + inPos) >> 1 & 127L | (long)in.get(9 + inPos) << 7 & 8191L;
         out[6 + outPos] = (long)in.get(9 + inPos) >> 6 & 3L | (long)in.get(10 + inPos) << 2 & 1023L | (long)in.get(11 + inPos) << 10 & 8191L;
         out[7 + outPos] = (long)in.get(11 + inPos) >> 3 & 31L | (long)in.get(12 + inPos) << 5 & 8191L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 8191L;
         out[1 + outPos] = (long)in[1 + inPos] >> 5 & 7L | (long)in[2 + inPos] << 3 & 2047L | (long)in[3 + inPos] << 11 & 8191L;
         out[2 + outPos] = (long)in[3 + inPos] >> 2 & 63L | (long)in[4 + inPos] << 6 & 8191L;
         out[3 + outPos] = (long)in[4 + inPos] >> 7 & 1L | (long)in[5 + inPos] << 1 & 511L | (long)in[6 + inPos] << 9 & 8191L;
         out[4 + outPos] = (long)in[6 + inPos] >> 4 & 15L | (long)in[7 + inPos] << 4 & 4095L | (long)in[8 + inPos] << 12 & 8191L;
         out[5 + outPos] = (long)in[8 + inPos] >> 1 & 127L | (long)in[9 + inPos] << 7 & 8191L;
         out[6 + outPos] = (long)in[9 + inPos] >> 6 & 3L | (long)in[10 + inPos] << 2 & 1023L | (long)in[11 + inPos] << 10 & 8191L;
         out[7 + outPos] = (long)in[11 + inPos] >> 3 & 31L | (long)in[12 + inPos] << 5 & 8191L;
         out[8 + outPos] = (long)in[13 + inPos] & 255L | (long)in[14 + inPos] << 8 & 8191L;
         out[9 + outPos] = (long)in[14 + inPos] >> 5 & 7L | (long)in[15 + inPos] << 3 & 2047L | (long)in[16 + inPos] << 11 & 8191L;
         out[10 + outPos] = (long)in[16 + inPos] >> 2 & 63L | (long)in[17 + inPos] << 6 & 8191L;
         out[11 + outPos] = (long)in[17 + inPos] >> 7 & 1L | (long)in[18 + inPos] << 1 & 511L | (long)in[19 + inPos] << 9 & 8191L;
         out[12 + outPos] = (long)in[19 + inPos] >> 4 & 15L | (long)in[20 + inPos] << 4 & 4095L | (long)in[21 + inPos] << 12 & 8191L;
         out[13 + outPos] = (long)in[21 + inPos] >> 1 & 127L | (long)in[22 + inPos] << 7 & 8191L;
         out[14 + outPos] = (long)in[22 + inPos] >> 6 & 3L | (long)in[23 + inPos] << 2 & 1023L | (long)in[24 + inPos] << 10 & 8191L;
         out[15 + outPos] = (long)in[24 + inPos] >> 3 & 31L | (long)in[25 + inPos] << 5 & 8191L;
         out[16 + outPos] = (long)in[26 + inPos] & 255L | (long)in[27 + inPos] << 8 & 8191L;
         out[17 + outPos] = (long)in[27 + inPos] >> 5 & 7L | (long)in[28 + inPos] << 3 & 2047L | (long)in[29 + inPos] << 11 & 8191L;
         out[18 + outPos] = (long)in[29 + inPos] >> 2 & 63L | (long)in[30 + inPos] << 6 & 8191L;
         out[19 + outPos] = (long)in[30 + inPos] >> 7 & 1L | (long)in[31 + inPos] << 1 & 511L | (long)in[32 + inPos] << 9 & 8191L;
         out[20 + outPos] = (long)in[32 + inPos] >> 4 & 15L | (long)in[33 + inPos] << 4 & 4095L | (long)in[34 + inPos] << 12 & 8191L;
         out[21 + outPos] = (long)in[34 + inPos] >> 1 & 127L | (long)in[35 + inPos] << 7 & 8191L;
         out[22 + outPos] = (long)in[35 + inPos] >> 6 & 3L | (long)in[36 + inPos] << 2 & 1023L | (long)in[37 + inPos] << 10 & 8191L;
         out[23 + outPos] = (long)in[37 + inPos] >> 3 & 31L | (long)in[38 + inPos] << 5 & 8191L;
         out[24 + outPos] = (long)in[39 + inPos] & 255L | (long)in[40 + inPos] << 8 & 8191L;
         out[25 + outPos] = (long)in[40 + inPos] >> 5 & 7L | (long)in[41 + inPos] << 3 & 2047L | (long)in[42 + inPos] << 11 & 8191L;
         out[26 + outPos] = (long)in[42 + inPos] >> 2 & 63L | (long)in[43 + inPos] << 6 & 8191L;
         out[27 + outPos] = (long)in[43 + inPos] >> 7 & 1L | (long)in[44 + inPos] << 1 & 511L | (long)in[45 + inPos] << 9 & 8191L;
         out[28 + outPos] = (long)in[45 + inPos] >> 4 & 15L | (long)in[46 + inPos] << 4 & 4095L | (long)in[47 + inPos] << 12 & 8191L;
         out[29 + outPos] = (long)in[47 + inPos] >> 1 & 127L | (long)in[48 + inPos] << 7 & 8191L;
         out[30 + outPos] = (long)in[48 + inPos] >> 6 & 3L | (long)in[49 + inPos] << 2 & 1023L | (long)in[50 + inPos] << 10 & 8191L;
         out[31 + outPos] = (long)in[50 + inPos] >> 3 & 31L | (long)in[51 + inPos] << 5 & 8191L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 8191L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 5 & 7L | (long)in.get(2 + inPos) << 3 & 2047L | (long)in.get(3 + inPos) << 11 & 8191L;
         out[2 + outPos] = (long)in.get(3 + inPos) >> 2 & 63L | (long)in.get(4 + inPos) << 6 & 8191L;
         out[3 + outPos] = (long)in.get(4 + inPos) >> 7 & 1L | (long)in.get(5 + inPos) << 1 & 511L | (long)in.get(6 + inPos) << 9 & 8191L;
         out[4 + outPos] = (long)in.get(6 + inPos) >> 4 & 15L | (long)in.get(7 + inPos) << 4 & 4095L | (long)in.get(8 + inPos) << 12 & 8191L;
         out[5 + outPos] = (long)in.get(8 + inPos) >> 1 & 127L | (long)in.get(9 + inPos) << 7 & 8191L;
         out[6 + outPos] = (long)in.get(9 + inPos) >> 6 & 3L | (long)in.get(10 + inPos) << 2 & 1023L | (long)in.get(11 + inPos) << 10 & 8191L;
         out[7 + outPos] = (long)in.get(11 + inPos) >> 3 & 31L | (long)in.get(12 + inPos) << 5 & 8191L;
         out[8 + outPos] = (long)in.get(13 + inPos) & 255L | (long)in.get(14 + inPos) << 8 & 8191L;
         out[9 + outPos] = (long)in.get(14 + inPos) >> 5 & 7L | (long)in.get(15 + inPos) << 3 & 2047L | (long)in.get(16 + inPos) << 11 & 8191L;
         out[10 + outPos] = (long)in.get(16 + inPos) >> 2 & 63L | (long)in.get(17 + inPos) << 6 & 8191L;
         out[11 + outPos] = (long)in.get(17 + inPos) >> 7 & 1L | (long)in.get(18 + inPos) << 1 & 511L | (long)in.get(19 + inPos) << 9 & 8191L;
         out[12 + outPos] = (long)in.get(19 + inPos) >> 4 & 15L | (long)in.get(20 + inPos) << 4 & 4095L | (long)in.get(21 + inPos) << 12 & 8191L;
         out[13 + outPos] = (long)in.get(21 + inPos) >> 1 & 127L | (long)in.get(22 + inPos) << 7 & 8191L;
         out[14 + outPos] = (long)in.get(22 + inPos) >> 6 & 3L | (long)in.get(23 + inPos) << 2 & 1023L | (long)in.get(24 + inPos) << 10 & 8191L;
         out[15 + outPos] = (long)in.get(24 + inPos) >> 3 & 31L | (long)in.get(25 + inPos) << 5 & 8191L;
         out[16 + outPos] = (long)in.get(26 + inPos) & 255L | (long)in.get(27 + inPos) << 8 & 8191L;
         out[17 + outPos] = (long)in.get(27 + inPos) >> 5 & 7L | (long)in.get(28 + inPos) << 3 & 2047L | (long)in.get(29 + inPos) << 11 & 8191L;
         out[18 + outPos] = (long)in.get(29 + inPos) >> 2 & 63L | (long)in.get(30 + inPos) << 6 & 8191L;
         out[19 + outPos] = (long)in.get(30 + inPos) >> 7 & 1L | (long)in.get(31 + inPos) << 1 & 511L | (long)in.get(32 + inPos) << 9 & 8191L;
         out[20 + outPos] = (long)in.get(32 + inPos) >> 4 & 15L | (long)in.get(33 + inPos) << 4 & 4095L | (long)in.get(34 + inPos) << 12 & 8191L;
         out[21 + outPos] = (long)in.get(34 + inPos) >> 1 & 127L | (long)in.get(35 + inPos) << 7 & 8191L;
         out[22 + outPos] = (long)in.get(35 + inPos) >> 6 & 3L | (long)in.get(36 + inPos) << 2 & 1023L | (long)in.get(37 + inPos) << 10 & 8191L;
         out[23 + outPos] = (long)in.get(37 + inPos) >> 3 & 31L | (long)in.get(38 + inPos) << 5 & 8191L;
         out[24 + outPos] = (long)in.get(39 + inPos) & 255L | (long)in.get(40 + inPos) << 8 & 8191L;
         out[25 + outPos] = (long)in.get(40 + inPos) >> 5 & 7L | (long)in.get(41 + inPos) << 3 & 2047L | (long)in.get(42 + inPos) << 11 & 8191L;
         out[26 + outPos] = (long)in.get(42 + inPos) >> 2 & 63L | (long)in.get(43 + inPos) << 6 & 8191L;
         out[27 + outPos] = (long)in.get(43 + inPos) >> 7 & 1L | (long)in.get(44 + inPos) << 1 & 511L | (long)in.get(45 + inPos) << 9 & 8191L;
         out[28 + outPos] = (long)in.get(45 + inPos) >> 4 & 15L | (long)in.get(46 + inPos) << 4 & 4095L | (long)in.get(47 + inPos) << 12 & 8191L;
         out[29 + outPos] = (long)in.get(47 + inPos) >> 1 & 127L | (long)in.get(48 + inPos) << 7 & 8191L;
         out[30 + outPos] = (long)in.get(48 + inPos) >> 6 & 3L | (long)in.get(49 + inPos) << 2 & 1023L | (long)in.get(50 + inPos) << 10 & 8191L;
         out[31 + outPos] = (long)in.get(50 + inPos) >> 3 & 31L | (long)in.get(51 + inPos) << 5 & 8191L;
      }
   }

   private static final class Packer14 extends BytePackerForLong {
      private Packer14() {
         super(14);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 16383L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 16383L) >>> 8 | (in[1 + inPos] & 16383L) << 6) & 255L));
         out[2 + outPos] = (byte)((int)((in[1 + inPos] & 16383L) >>> 2 & 255L));
         out[3 + outPos] = (byte)((int)(((in[1 + inPos] & 16383L) >>> 10 | (in[2 + inPos] & 16383L) << 4) & 255L));
         out[4 + outPos] = (byte)((int)((in[2 + inPos] & 16383L) >>> 4 & 255L));
         out[5 + outPos] = (byte)((int)(((in[2 + inPos] & 16383L) >>> 12 | (in[3 + inPos] & 16383L) << 2) & 255L));
         out[6 + outPos] = (byte)((int)((in[3 + inPos] & 16383L) >>> 6 & 255L));
         out[7 + outPos] = (byte)((int)(in[4 + inPos] & 16383L & 255L));
         out[8 + outPos] = (byte)((int)(((in[4 + inPos] & 16383L) >>> 8 | (in[5 + inPos] & 16383L) << 6) & 255L));
         out[9 + outPos] = (byte)((int)((in[5 + inPos] & 16383L) >>> 2 & 255L));
         out[10 + outPos] = (byte)((int)(((in[5 + inPos] & 16383L) >>> 10 | (in[6 + inPos] & 16383L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)((in[6 + inPos] & 16383L) >>> 4 & 255L));
         out[12 + outPos] = (byte)((int)(((in[6 + inPos] & 16383L) >>> 12 | (in[7 + inPos] & 16383L) << 2) & 255L));
         out[13 + outPos] = (byte)((int)((in[7 + inPos] & 16383L) >>> 6 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 16383L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 16383L) >>> 8 | (in[1 + inPos] & 16383L) << 6) & 255L));
         out[2 + outPos] = (byte)((int)((in[1 + inPos] & 16383L) >>> 2 & 255L));
         out[3 + outPos] = (byte)((int)(((in[1 + inPos] & 16383L) >>> 10 | (in[2 + inPos] & 16383L) << 4) & 255L));
         out[4 + outPos] = (byte)((int)((in[2 + inPos] & 16383L) >>> 4 & 255L));
         out[5 + outPos] = (byte)((int)(((in[2 + inPos] & 16383L) >>> 12 | (in[3 + inPos] & 16383L) << 2) & 255L));
         out[6 + outPos] = (byte)((int)((in[3 + inPos] & 16383L) >>> 6 & 255L));
         out[7 + outPos] = (byte)((int)(in[4 + inPos] & 16383L & 255L));
         out[8 + outPos] = (byte)((int)(((in[4 + inPos] & 16383L) >>> 8 | (in[5 + inPos] & 16383L) << 6) & 255L));
         out[9 + outPos] = (byte)((int)((in[5 + inPos] & 16383L) >>> 2 & 255L));
         out[10 + outPos] = (byte)((int)(((in[5 + inPos] & 16383L) >>> 10 | (in[6 + inPos] & 16383L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)((in[6 + inPos] & 16383L) >>> 4 & 255L));
         out[12 + outPos] = (byte)((int)(((in[6 + inPos] & 16383L) >>> 12 | (in[7 + inPos] & 16383L) << 2) & 255L));
         out[13 + outPos] = (byte)((int)((in[7 + inPos] & 16383L) >>> 6 & 255L));
         out[14 + outPos] = (byte)((int)(in[8 + inPos] & 16383L & 255L));
         out[15 + outPos] = (byte)((int)(((in[8 + inPos] & 16383L) >>> 8 | (in[9 + inPos] & 16383L) << 6) & 255L));
         out[16 + outPos] = (byte)((int)((in[9 + inPos] & 16383L) >>> 2 & 255L));
         out[17 + outPos] = (byte)((int)(((in[9 + inPos] & 16383L) >>> 10 | (in[10 + inPos] & 16383L) << 4) & 255L));
         out[18 + outPos] = (byte)((int)((in[10 + inPos] & 16383L) >>> 4 & 255L));
         out[19 + outPos] = (byte)((int)(((in[10 + inPos] & 16383L) >>> 12 | (in[11 + inPos] & 16383L) << 2) & 255L));
         out[20 + outPos] = (byte)((int)((in[11 + inPos] & 16383L) >>> 6 & 255L));
         out[21 + outPos] = (byte)((int)(in[12 + inPos] & 16383L & 255L));
         out[22 + outPos] = (byte)((int)(((in[12 + inPos] & 16383L) >>> 8 | (in[13 + inPos] & 16383L) << 6) & 255L));
         out[23 + outPos] = (byte)((int)((in[13 + inPos] & 16383L) >>> 2 & 255L));
         out[24 + outPos] = (byte)((int)(((in[13 + inPos] & 16383L) >>> 10 | (in[14 + inPos] & 16383L) << 4) & 255L));
         out[25 + outPos] = (byte)((int)((in[14 + inPos] & 16383L) >>> 4 & 255L));
         out[26 + outPos] = (byte)((int)(((in[14 + inPos] & 16383L) >>> 12 | (in[15 + inPos] & 16383L) << 2) & 255L));
         out[27 + outPos] = (byte)((int)((in[15 + inPos] & 16383L) >>> 6 & 255L));
         out[28 + outPos] = (byte)((int)(in[16 + inPos] & 16383L & 255L));
         out[29 + outPos] = (byte)((int)(((in[16 + inPos] & 16383L) >>> 8 | (in[17 + inPos] & 16383L) << 6) & 255L));
         out[30 + outPos] = (byte)((int)((in[17 + inPos] & 16383L) >>> 2 & 255L));
         out[31 + outPos] = (byte)((int)(((in[17 + inPos] & 16383L) >>> 10 | (in[18 + inPos] & 16383L) << 4) & 255L));
         out[32 + outPos] = (byte)((int)((in[18 + inPos] & 16383L) >>> 4 & 255L));
         out[33 + outPos] = (byte)((int)(((in[18 + inPos] & 16383L) >>> 12 | (in[19 + inPos] & 16383L) << 2) & 255L));
         out[34 + outPos] = (byte)((int)((in[19 + inPos] & 16383L) >>> 6 & 255L));
         out[35 + outPos] = (byte)((int)(in[20 + inPos] & 16383L & 255L));
         out[36 + outPos] = (byte)((int)(((in[20 + inPos] & 16383L) >>> 8 | (in[21 + inPos] & 16383L) << 6) & 255L));
         out[37 + outPos] = (byte)((int)((in[21 + inPos] & 16383L) >>> 2 & 255L));
         out[38 + outPos] = (byte)((int)(((in[21 + inPos] & 16383L) >>> 10 | (in[22 + inPos] & 16383L) << 4) & 255L));
         out[39 + outPos] = (byte)((int)((in[22 + inPos] & 16383L) >>> 4 & 255L));
         out[40 + outPos] = (byte)((int)(((in[22 + inPos] & 16383L) >>> 12 | (in[23 + inPos] & 16383L) << 2) & 255L));
         out[41 + outPos] = (byte)((int)((in[23 + inPos] & 16383L) >>> 6 & 255L));
         out[42 + outPos] = (byte)((int)(in[24 + inPos] & 16383L & 255L));
         out[43 + outPos] = (byte)((int)(((in[24 + inPos] & 16383L) >>> 8 | (in[25 + inPos] & 16383L) << 6) & 255L));
         out[44 + outPos] = (byte)((int)((in[25 + inPos] & 16383L) >>> 2 & 255L));
         out[45 + outPos] = (byte)((int)(((in[25 + inPos] & 16383L) >>> 10 | (in[26 + inPos] & 16383L) << 4) & 255L));
         out[46 + outPos] = (byte)((int)((in[26 + inPos] & 16383L) >>> 4 & 255L));
         out[47 + outPos] = (byte)((int)(((in[26 + inPos] & 16383L) >>> 12 | (in[27 + inPos] & 16383L) << 2) & 255L));
         out[48 + outPos] = (byte)((int)((in[27 + inPos] & 16383L) >>> 6 & 255L));
         out[49 + outPos] = (byte)((int)(in[28 + inPos] & 16383L & 255L));
         out[50 + outPos] = (byte)((int)(((in[28 + inPos] & 16383L) >>> 8 | (in[29 + inPos] & 16383L) << 6) & 255L));
         out[51 + outPos] = (byte)((int)((in[29 + inPos] & 16383L) >>> 2 & 255L));
         out[52 + outPos] = (byte)((int)(((in[29 + inPos] & 16383L) >>> 10 | (in[30 + inPos] & 16383L) << 4) & 255L));
         out[53 + outPos] = (byte)((int)((in[30 + inPos] & 16383L) >>> 4 & 255L));
         out[54 + outPos] = (byte)((int)(((in[30 + inPos] & 16383L) >>> 12 | (in[31 + inPos] & 16383L) << 2) & 255L));
         out[55 + outPos] = (byte)((int)((in[31 + inPos] & 16383L) >>> 6 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 16383L;
         out[1 + outPos] = (long)in[1 + inPos] >> 6 & 3L | (long)in[2 + inPos] << 2 & 1023L | (long)in[3 + inPos] << 10 & 16383L;
         out[2 + outPos] = (long)in[3 + inPos] >> 4 & 15L | (long)in[4 + inPos] << 4 & 4095L | (long)in[5 + inPos] << 12 & 16383L;
         out[3 + outPos] = (long)in[5 + inPos] >> 2 & 63L | (long)in[6 + inPos] << 6 & 16383L;
         out[4 + outPos] = (long)in[7 + inPos] & 255L | (long)in[8 + inPos] << 8 & 16383L;
         out[5 + outPos] = (long)in[8 + inPos] >> 6 & 3L | (long)in[9 + inPos] << 2 & 1023L | (long)in[10 + inPos] << 10 & 16383L;
         out[6 + outPos] = (long)in[10 + inPos] >> 4 & 15L | (long)in[11 + inPos] << 4 & 4095L | (long)in[12 + inPos] << 12 & 16383L;
         out[7 + outPos] = (long)in[12 + inPos] >> 2 & 63L | (long)in[13 + inPos] << 6 & 16383L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 16383L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 6 & 3L | (long)in.get(2 + inPos) << 2 & 1023L | (long)in.get(3 + inPos) << 10 & 16383L;
         out[2 + outPos] = (long)in.get(3 + inPos) >> 4 & 15L | (long)in.get(4 + inPos) << 4 & 4095L | (long)in.get(5 + inPos) << 12 & 16383L;
         out[3 + outPos] = (long)in.get(5 + inPos) >> 2 & 63L | (long)in.get(6 + inPos) << 6 & 16383L;
         out[4 + outPos] = (long)in.get(7 + inPos) & 255L | (long)in.get(8 + inPos) << 8 & 16383L;
         out[5 + outPos] = (long)in.get(8 + inPos) >> 6 & 3L | (long)in.get(9 + inPos) << 2 & 1023L | (long)in.get(10 + inPos) << 10 & 16383L;
         out[6 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L | (long)in.get(11 + inPos) << 4 & 4095L | (long)in.get(12 + inPos) << 12 & 16383L;
         out[7 + outPos] = (long)in.get(12 + inPos) >> 2 & 63L | (long)in.get(13 + inPos) << 6 & 16383L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 16383L;
         out[1 + outPos] = (long)in[1 + inPos] >> 6 & 3L | (long)in[2 + inPos] << 2 & 1023L | (long)in[3 + inPos] << 10 & 16383L;
         out[2 + outPos] = (long)in[3 + inPos] >> 4 & 15L | (long)in[4 + inPos] << 4 & 4095L | (long)in[5 + inPos] << 12 & 16383L;
         out[3 + outPos] = (long)in[5 + inPos] >> 2 & 63L | (long)in[6 + inPos] << 6 & 16383L;
         out[4 + outPos] = (long)in[7 + inPos] & 255L | (long)in[8 + inPos] << 8 & 16383L;
         out[5 + outPos] = (long)in[8 + inPos] >> 6 & 3L | (long)in[9 + inPos] << 2 & 1023L | (long)in[10 + inPos] << 10 & 16383L;
         out[6 + outPos] = (long)in[10 + inPos] >> 4 & 15L | (long)in[11 + inPos] << 4 & 4095L | (long)in[12 + inPos] << 12 & 16383L;
         out[7 + outPos] = (long)in[12 + inPos] >> 2 & 63L | (long)in[13 + inPos] << 6 & 16383L;
         out[8 + outPos] = (long)in[14 + inPos] & 255L | (long)in[15 + inPos] << 8 & 16383L;
         out[9 + outPos] = (long)in[15 + inPos] >> 6 & 3L | (long)in[16 + inPos] << 2 & 1023L | (long)in[17 + inPos] << 10 & 16383L;
         out[10 + outPos] = (long)in[17 + inPos] >> 4 & 15L | (long)in[18 + inPos] << 4 & 4095L | (long)in[19 + inPos] << 12 & 16383L;
         out[11 + outPos] = (long)in[19 + inPos] >> 2 & 63L | (long)in[20 + inPos] << 6 & 16383L;
         out[12 + outPos] = (long)in[21 + inPos] & 255L | (long)in[22 + inPos] << 8 & 16383L;
         out[13 + outPos] = (long)in[22 + inPos] >> 6 & 3L | (long)in[23 + inPos] << 2 & 1023L | (long)in[24 + inPos] << 10 & 16383L;
         out[14 + outPos] = (long)in[24 + inPos] >> 4 & 15L | (long)in[25 + inPos] << 4 & 4095L | (long)in[26 + inPos] << 12 & 16383L;
         out[15 + outPos] = (long)in[26 + inPos] >> 2 & 63L | (long)in[27 + inPos] << 6 & 16383L;
         out[16 + outPos] = (long)in[28 + inPos] & 255L | (long)in[29 + inPos] << 8 & 16383L;
         out[17 + outPos] = (long)in[29 + inPos] >> 6 & 3L | (long)in[30 + inPos] << 2 & 1023L | (long)in[31 + inPos] << 10 & 16383L;
         out[18 + outPos] = (long)in[31 + inPos] >> 4 & 15L | (long)in[32 + inPos] << 4 & 4095L | (long)in[33 + inPos] << 12 & 16383L;
         out[19 + outPos] = (long)in[33 + inPos] >> 2 & 63L | (long)in[34 + inPos] << 6 & 16383L;
         out[20 + outPos] = (long)in[35 + inPos] & 255L | (long)in[36 + inPos] << 8 & 16383L;
         out[21 + outPos] = (long)in[36 + inPos] >> 6 & 3L | (long)in[37 + inPos] << 2 & 1023L | (long)in[38 + inPos] << 10 & 16383L;
         out[22 + outPos] = (long)in[38 + inPos] >> 4 & 15L | (long)in[39 + inPos] << 4 & 4095L | (long)in[40 + inPos] << 12 & 16383L;
         out[23 + outPos] = (long)in[40 + inPos] >> 2 & 63L | (long)in[41 + inPos] << 6 & 16383L;
         out[24 + outPos] = (long)in[42 + inPos] & 255L | (long)in[43 + inPos] << 8 & 16383L;
         out[25 + outPos] = (long)in[43 + inPos] >> 6 & 3L | (long)in[44 + inPos] << 2 & 1023L | (long)in[45 + inPos] << 10 & 16383L;
         out[26 + outPos] = (long)in[45 + inPos] >> 4 & 15L | (long)in[46 + inPos] << 4 & 4095L | (long)in[47 + inPos] << 12 & 16383L;
         out[27 + outPos] = (long)in[47 + inPos] >> 2 & 63L | (long)in[48 + inPos] << 6 & 16383L;
         out[28 + outPos] = (long)in[49 + inPos] & 255L | (long)in[50 + inPos] << 8 & 16383L;
         out[29 + outPos] = (long)in[50 + inPos] >> 6 & 3L | (long)in[51 + inPos] << 2 & 1023L | (long)in[52 + inPos] << 10 & 16383L;
         out[30 + outPos] = (long)in[52 + inPos] >> 4 & 15L | (long)in[53 + inPos] << 4 & 4095L | (long)in[54 + inPos] << 12 & 16383L;
         out[31 + outPos] = (long)in[54 + inPos] >> 2 & 63L | (long)in[55 + inPos] << 6 & 16383L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 16383L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 6 & 3L | (long)in.get(2 + inPos) << 2 & 1023L | (long)in.get(3 + inPos) << 10 & 16383L;
         out[2 + outPos] = (long)in.get(3 + inPos) >> 4 & 15L | (long)in.get(4 + inPos) << 4 & 4095L | (long)in.get(5 + inPos) << 12 & 16383L;
         out[3 + outPos] = (long)in.get(5 + inPos) >> 2 & 63L | (long)in.get(6 + inPos) << 6 & 16383L;
         out[4 + outPos] = (long)in.get(7 + inPos) & 255L | (long)in.get(8 + inPos) << 8 & 16383L;
         out[5 + outPos] = (long)in.get(8 + inPos) >> 6 & 3L | (long)in.get(9 + inPos) << 2 & 1023L | (long)in.get(10 + inPos) << 10 & 16383L;
         out[6 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L | (long)in.get(11 + inPos) << 4 & 4095L | (long)in.get(12 + inPos) << 12 & 16383L;
         out[7 + outPos] = (long)in.get(12 + inPos) >> 2 & 63L | (long)in.get(13 + inPos) << 6 & 16383L;
         out[8 + outPos] = (long)in.get(14 + inPos) & 255L | (long)in.get(15 + inPos) << 8 & 16383L;
         out[9 + outPos] = (long)in.get(15 + inPos) >> 6 & 3L | (long)in.get(16 + inPos) << 2 & 1023L | (long)in.get(17 + inPos) << 10 & 16383L;
         out[10 + outPos] = (long)in.get(17 + inPos) >> 4 & 15L | (long)in.get(18 + inPos) << 4 & 4095L | (long)in.get(19 + inPos) << 12 & 16383L;
         out[11 + outPos] = (long)in.get(19 + inPos) >> 2 & 63L | (long)in.get(20 + inPos) << 6 & 16383L;
         out[12 + outPos] = (long)in.get(21 + inPos) & 255L | (long)in.get(22 + inPos) << 8 & 16383L;
         out[13 + outPos] = (long)in.get(22 + inPos) >> 6 & 3L | (long)in.get(23 + inPos) << 2 & 1023L | (long)in.get(24 + inPos) << 10 & 16383L;
         out[14 + outPos] = (long)in.get(24 + inPos) >> 4 & 15L | (long)in.get(25 + inPos) << 4 & 4095L | (long)in.get(26 + inPos) << 12 & 16383L;
         out[15 + outPos] = (long)in.get(26 + inPos) >> 2 & 63L | (long)in.get(27 + inPos) << 6 & 16383L;
         out[16 + outPos] = (long)in.get(28 + inPos) & 255L | (long)in.get(29 + inPos) << 8 & 16383L;
         out[17 + outPos] = (long)in.get(29 + inPos) >> 6 & 3L | (long)in.get(30 + inPos) << 2 & 1023L | (long)in.get(31 + inPos) << 10 & 16383L;
         out[18 + outPos] = (long)in.get(31 + inPos) >> 4 & 15L | (long)in.get(32 + inPos) << 4 & 4095L | (long)in.get(33 + inPos) << 12 & 16383L;
         out[19 + outPos] = (long)in.get(33 + inPos) >> 2 & 63L | (long)in.get(34 + inPos) << 6 & 16383L;
         out[20 + outPos] = (long)in.get(35 + inPos) & 255L | (long)in.get(36 + inPos) << 8 & 16383L;
         out[21 + outPos] = (long)in.get(36 + inPos) >> 6 & 3L | (long)in.get(37 + inPos) << 2 & 1023L | (long)in.get(38 + inPos) << 10 & 16383L;
         out[22 + outPos] = (long)in.get(38 + inPos) >> 4 & 15L | (long)in.get(39 + inPos) << 4 & 4095L | (long)in.get(40 + inPos) << 12 & 16383L;
         out[23 + outPos] = (long)in.get(40 + inPos) >> 2 & 63L | (long)in.get(41 + inPos) << 6 & 16383L;
         out[24 + outPos] = (long)in.get(42 + inPos) & 255L | (long)in.get(43 + inPos) << 8 & 16383L;
         out[25 + outPos] = (long)in.get(43 + inPos) >> 6 & 3L | (long)in.get(44 + inPos) << 2 & 1023L | (long)in.get(45 + inPos) << 10 & 16383L;
         out[26 + outPos] = (long)in.get(45 + inPos) >> 4 & 15L | (long)in.get(46 + inPos) << 4 & 4095L | (long)in.get(47 + inPos) << 12 & 16383L;
         out[27 + outPos] = (long)in.get(47 + inPos) >> 2 & 63L | (long)in.get(48 + inPos) << 6 & 16383L;
         out[28 + outPos] = (long)in.get(49 + inPos) & 255L | (long)in.get(50 + inPos) << 8 & 16383L;
         out[29 + outPos] = (long)in.get(50 + inPos) >> 6 & 3L | (long)in.get(51 + inPos) << 2 & 1023L | (long)in.get(52 + inPos) << 10 & 16383L;
         out[30 + outPos] = (long)in.get(52 + inPos) >> 4 & 15L | (long)in.get(53 + inPos) << 4 & 4095L | (long)in.get(54 + inPos) << 12 & 16383L;
         out[31 + outPos] = (long)in.get(54 + inPos) >> 2 & 63L | (long)in.get(55 + inPos) << 6 & 16383L;
      }
   }

   private static final class Packer15 extends BytePackerForLong {
      private Packer15() {
         super(15);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 32767L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 32767L) >>> 8 | (in[1 + inPos] & 32767L) << 7) & 255L));
         out[2 + outPos] = (byte)((int)((in[1 + inPos] & 32767L) >>> 1 & 255L));
         out[3 + outPos] = (byte)((int)(((in[1 + inPos] & 32767L) >>> 9 | (in[2 + inPos] & 32767L) << 6) & 255L));
         out[4 + outPos] = (byte)((int)((in[2 + inPos] & 32767L) >>> 2 & 255L));
         out[5 + outPos] = (byte)((int)(((in[2 + inPos] & 32767L) >>> 10 | (in[3 + inPos] & 32767L) << 5) & 255L));
         out[6 + outPos] = (byte)((int)((in[3 + inPos] & 32767L) >>> 3 & 255L));
         out[7 + outPos] = (byte)((int)(((in[3 + inPos] & 32767L) >>> 11 | (in[4 + inPos] & 32767L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)((in[4 + inPos] & 32767L) >>> 4 & 255L));
         out[9 + outPos] = (byte)((int)(((in[4 + inPos] & 32767L) >>> 12 | (in[5 + inPos] & 32767L) << 3) & 255L));
         out[10 + outPos] = (byte)((int)((in[5 + inPos] & 32767L) >>> 5 & 255L));
         out[11 + outPos] = (byte)((int)(((in[5 + inPos] & 32767L) >>> 13 | (in[6 + inPos] & 32767L) << 2) & 255L));
         out[12 + outPos] = (byte)((int)((in[6 + inPos] & 32767L) >>> 6 & 255L));
         out[13 + outPos] = (byte)((int)(((in[6 + inPos] & 32767L) >>> 14 | (in[7 + inPos] & 32767L) << 1) & 255L));
         out[14 + outPos] = (byte)((int)((in[7 + inPos] & 32767L) >>> 7 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 32767L & 255L));
         out[1 + outPos] = (byte)((int)(((in[0 + inPos] & 32767L) >>> 8 | (in[1 + inPos] & 32767L) << 7) & 255L));
         out[2 + outPos] = (byte)((int)((in[1 + inPos] & 32767L) >>> 1 & 255L));
         out[3 + outPos] = (byte)((int)(((in[1 + inPos] & 32767L) >>> 9 | (in[2 + inPos] & 32767L) << 6) & 255L));
         out[4 + outPos] = (byte)((int)((in[2 + inPos] & 32767L) >>> 2 & 255L));
         out[5 + outPos] = (byte)((int)(((in[2 + inPos] & 32767L) >>> 10 | (in[3 + inPos] & 32767L) << 5) & 255L));
         out[6 + outPos] = (byte)((int)((in[3 + inPos] & 32767L) >>> 3 & 255L));
         out[7 + outPos] = (byte)((int)(((in[3 + inPos] & 32767L) >>> 11 | (in[4 + inPos] & 32767L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)((in[4 + inPos] & 32767L) >>> 4 & 255L));
         out[9 + outPos] = (byte)((int)(((in[4 + inPos] & 32767L) >>> 12 | (in[5 + inPos] & 32767L) << 3) & 255L));
         out[10 + outPos] = (byte)((int)((in[5 + inPos] & 32767L) >>> 5 & 255L));
         out[11 + outPos] = (byte)((int)(((in[5 + inPos] & 32767L) >>> 13 | (in[6 + inPos] & 32767L) << 2) & 255L));
         out[12 + outPos] = (byte)((int)((in[6 + inPos] & 32767L) >>> 6 & 255L));
         out[13 + outPos] = (byte)((int)(((in[6 + inPos] & 32767L) >>> 14 | (in[7 + inPos] & 32767L) << 1) & 255L));
         out[14 + outPos] = (byte)((int)((in[7 + inPos] & 32767L) >>> 7 & 255L));
         out[15 + outPos] = (byte)((int)(in[8 + inPos] & 32767L & 255L));
         out[16 + outPos] = (byte)((int)(((in[8 + inPos] & 32767L) >>> 8 | (in[9 + inPos] & 32767L) << 7) & 255L));
         out[17 + outPos] = (byte)((int)((in[9 + inPos] & 32767L) >>> 1 & 255L));
         out[18 + outPos] = (byte)((int)(((in[9 + inPos] & 32767L) >>> 9 | (in[10 + inPos] & 32767L) << 6) & 255L));
         out[19 + outPos] = (byte)((int)((in[10 + inPos] & 32767L) >>> 2 & 255L));
         out[20 + outPos] = (byte)((int)(((in[10 + inPos] & 32767L) >>> 10 | (in[11 + inPos] & 32767L) << 5) & 255L));
         out[21 + outPos] = (byte)((int)((in[11 + inPos] & 32767L) >>> 3 & 255L));
         out[22 + outPos] = (byte)((int)(((in[11 + inPos] & 32767L) >>> 11 | (in[12 + inPos] & 32767L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)((in[12 + inPos] & 32767L) >>> 4 & 255L));
         out[24 + outPos] = (byte)((int)(((in[12 + inPos] & 32767L) >>> 12 | (in[13 + inPos] & 32767L) << 3) & 255L));
         out[25 + outPos] = (byte)((int)((in[13 + inPos] & 32767L) >>> 5 & 255L));
         out[26 + outPos] = (byte)((int)(((in[13 + inPos] & 32767L) >>> 13 | (in[14 + inPos] & 32767L) << 2) & 255L));
         out[27 + outPos] = (byte)((int)((in[14 + inPos] & 32767L) >>> 6 & 255L));
         out[28 + outPos] = (byte)((int)(((in[14 + inPos] & 32767L) >>> 14 | (in[15 + inPos] & 32767L) << 1) & 255L));
         out[29 + outPos] = (byte)((int)((in[15 + inPos] & 32767L) >>> 7 & 255L));
         out[30 + outPos] = (byte)((int)(in[16 + inPos] & 32767L & 255L));
         out[31 + outPos] = (byte)((int)(((in[16 + inPos] & 32767L) >>> 8 | (in[17 + inPos] & 32767L) << 7) & 255L));
         out[32 + outPos] = (byte)((int)((in[17 + inPos] & 32767L) >>> 1 & 255L));
         out[33 + outPos] = (byte)((int)(((in[17 + inPos] & 32767L) >>> 9 | (in[18 + inPos] & 32767L) << 6) & 255L));
         out[34 + outPos] = (byte)((int)((in[18 + inPos] & 32767L) >>> 2 & 255L));
         out[35 + outPos] = (byte)((int)(((in[18 + inPos] & 32767L) >>> 10 | (in[19 + inPos] & 32767L) << 5) & 255L));
         out[36 + outPos] = (byte)((int)((in[19 + inPos] & 32767L) >>> 3 & 255L));
         out[37 + outPos] = (byte)((int)(((in[19 + inPos] & 32767L) >>> 11 | (in[20 + inPos] & 32767L) << 4) & 255L));
         out[38 + outPos] = (byte)((int)((in[20 + inPos] & 32767L) >>> 4 & 255L));
         out[39 + outPos] = (byte)((int)(((in[20 + inPos] & 32767L) >>> 12 | (in[21 + inPos] & 32767L) << 3) & 255L));
         out[40 + outPos] = (byte)((int)((in[21 + inPos] & 32767L) >>> 5 & 255L));
         out[41 + outPos] = (byte)((int)(((in[21 + inPos] & 32767L) >>> 13 | (in[22 + inPos] & 32767L) << 2) & 255L));
         out[42 + outPos] = (byte)((int)((in[22 + inPos] & 32767L) >>> 6 & 255L));
         out[43 + outPos] = (byte)((int)(((in[22 + inPos] & 32767L) >>> 14 | (in[23 + inPos] & 32767L) << 1) & 255L));
         out[44 + outPos] = (byte)((int)((in[23 + inPos] & 32767L) >>> 7 & 255L));
         out[45 + outPos] = (byte)((int)(in[24 + inPos] & 32767L & 255L));
         out[46 + outPos] = (byte)((int)(((in[24 + inPos] & 32767L) >>> 8 | (in[25 + inPos] & 32767L) << 7) & 255L));
         out[47 + outPos] = (byte)((int)((in[25 + inPos] & 32767L) >>> 1 & 255L));
         out[48 + outPos] = (byte)((int)(((in[25 + inPos] & 32767L) >>> 9 | (in[26 + inPos] & 32767L) << 6) & 255L));
         out[49 + outPos] = (byte)((int)((in[26 + inPos] & 32767L) >>> 2 & 255L));
         out[50 + outPos] = (byte)((int)(((in[26 + inPos] & 32767L) >>> 10 | (in[27 + inPos] & 32767L) << 5) & 255L));
         out[51 + outPos] = (byte)((int)((in[27 + inPos] & 32767L) >>> 3 & 255L));
         out[52 + outPos] = (byte)((int)(((in[27 + inPos] & 32767L) >>> 11 | (in[28 + inPos] & 32767L) << 4) & 255L));
         out[53 + outPos] = (byte)((int)((in[28 + inPos] & 32767L) >>> 4 & 255L));
         out[54 + outPos] = (byte)((int)(((in[28 + inPos] & 32767L) >>> 12 | (in[29 + inPos] & 32767L) << 3) & 255L));
         out[55 + outPos] = (byte)((int)((in[29 + inPos] & 32767L) >>> 5 & 255L));
         out[56 + outPos] = (byte)((int)(((in[29 + inPos] & 32767L) >>> 13 | (in[30 + inPos] & 32767L) << 2) & 255L));
         out[57 + outPos] = (byte)((int)((in[30 + inPos] & 32767L) >>> 6 & 255L));
         out[58 + outPos] = (byte)((int)(((in[30 + inPos] & 32767L) >>> 14 | (in[31 + inPos] & 32767L) << 1) & 255L));
         out[59 + outPos] = (byte)((int)((in[31 + inPos] & 32767L) >>> 7 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 32767L;
         out[1 + outPos] = (long)in[1 + inPos] >> 7 & 1L | (long)in[2 + inPos] << 1 & 511L | (long)in[3 + inPos] << 9 & 32767L;
         out[2 + outPos] = (long)in[3 + inPos] >> 6 & 3L | (long)in[4 + inPos] << 2 & 1023L | (long)in[5 + inPos] << 10 & 32767L;
         out[3 + outPos] = (long)in[5 + inPos] >> 5 & 7L | (long)in[6 + inPos] << 3 & 2047L | (long)in[7 + inPos] << 11 & 32767L;
         out[4 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 4095L | (long)in[9 + inPos] << 12 & 32767L;
         out[5 + outPos] = (long)in[9 + inPos] >> 3 & 31L | (long)in[10 + inPos] << 5 & 8191L | (long)in[11 + inPos] << 13 & 32767L;
         out[6 + outPos] = (long)in[11 + inPos] >> 2 & 63L | (long)in[12 + inPos] << 6 & 16383L | (long)in[13 + inPos] << 14 & 32767L;
         out[7 + outPos] = (long)in[13 + inPos] >> 1 & 127L | (long)in[14 + inPos] << 7 & 32767L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 32767L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 7 & 1L | (long)in.get(2 + inPos) << 1 & 511L | (long)in.get(3 + inPos) << 9 & 32767L;
         out[2 + outPos] = (long)in.get(3 + inPos) >> 6 & 3L | (long)in.get(4 + inPos) << 2 & 1023L | (long)in.get(5 + inPos) << 10 & 32767L;
         out[3 + outPos] = (long)in.get(5 + inPos) >> 5 & 7L | (long)in.get(6 + inPos) << 3 & 2047L | (long)in.get(7 + inPos) << 11 & 32767L;
         out[4 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 4095L | (long)in.get(9 + inPos) << 12 & 32767L;
         out[5 + outPos] = (long)in.get(9 + inPos) >> 3 & 31L | (long)in.get(10 + inPos) << 5 & 8191L | (long)in.get(11 + inPos) << 13 & 32767L;
         out[6 + outPos] = (long)in.get(11 + inPos) >> 2 & 63L | (long)in.get(12 + inPos) << 6 & 16383L | (long)in.get(13 + inPos) << 14 & 32767L;
         out[7 + outPos] = (long)in.get(13 + inPos) >> 1 & 127L | (long)in.get(14 + inPos) << 7 & 32767L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 32767L;
         out[1 + outPos] = (long)in[1 + inPos] >> 7 & 1L | (long)in[2 + inPos] << 1 & 511L | (long)in[3 + inPos] << 9 & 32767L;
         out[2 + outPos] = (long)in[3 + inPos] >> 6 & 3L | (long)in[4 + inPos] << 2 & 1023L | (long)in[5 + inPos] << 10 & 32767L;
         out[3 + outPos] = (long)in[5 + inPos] >> 5 & 7L | (long)in[6 + inPos] << 3 & 2047L | (long)in[7 + inPos] << 11 & 32767L;
         out[4 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 4095L | (long)in[9 + inPos] << 12 & 32767L;
         out[5 + outPos] = (long)in[9 + inPos] >> 3 & 31L | (long)in[10 + inPos] << 5 & 8191L | (long)in[11 + inPos] << 13 & 32767L;
         out[6 + outPos] = (long)in[11 + inPos] >> 2 & 63L | (long)in[12 + inPos] << 6 & 16383L | (long)in[13 + inPos] << 14 & 32767L;
         out[7 + outPos] = (long)in[13 + inPos] >> 1 & 127L | (long)in[14 + inPos] << 7 & 32767L;
         out[8 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 32767L;
         out[9 + outPos] = (long)in[16 + inPos] >> 7 & 1L | (long)in[17 + inPos] << 1 & 511L | (long)in[18 + inPos] << 9 & 32767L;
         out[10 + outPos] = (long)in[18 + inPos] >> 6 & 3L | (long)in[19 + inPos] << 2 & 1023L | (long)in[20 + inPos] << 10 & 32767L;
         out[11 + outPos] = (long)in[20 + inPos] >> 5 & 7L | (long)in[21 + inPos] << 3 & 2047L | (long)in[22 + inPos] << 11 & 32767L;
         out[12 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 4095L | (long)in[24 + inPos] << 12 & 32767L;
         out[13 + outPos] = (long)in[24 + inPos] >> 3 & 31L | (long)in[25 + inPos] << 5 & 8191L | (long)in[26 + inPos] << 13 & 32767L;
         out[14 + outPos] = (long)in[26 + inPos] >> 2 & 63L | (long)in[27 + inPos] << 6 & 16383L | (long)in[28 + inPos] << 14 & 32767L;
         out[15 + outPos] = (long)in[28 + inPos] >> 1 & 127L | (long)in[29 + inPos] << 7 & 32767L;
         out[16 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 32767L;
         out[17 + outPos] = (long)in[31 + inPos] >> 7 & 1L | (long)in[32 + inPos] << 1 & 511L | (long)in[33 + inPos] << 9 & 32767L;
         out[18 + outPos] = (long)in[33 + inPos] >> 6 & 3L | (long)in[34 + inPos] << 2 & 1023L | (long)in[35 + inPos] << 10 & 32767L;
         out[19 + outPos] = (long)in[35 + inPos] >> 5 & 7L | (long)in[36 + inPos] << 3 & 2047L | (long)in[37 + inPos] << 11 & 32767L;
         out[20 + outPos] = (long)in[37 + inPos] >> 4 & 15L | (long)in[38 + inPos] << 4 & 4095L | (long)in[39 + inPos] << 12 & 32767L;
         out[21 + outPos] = (long)in[39 + inPos] >> 3 & 31L | (long)in[40 + inPos] << 5 & 8191L | (long)in[41 + inPos] << 13 & 32767L;
         out[22 + outPos] = (long)in[41 + inPos] >> 2 & 63L | (long)in[42 + inPos] << 6 & 16383L | (long)in[43 + inPos] << 14 & 32767L;
         out[23 + outPos] = (long)in[43 + inPos] >> 1 & 127L | (long)in[44 + inPos] << 7 & 32767L;
         out[24 + outPos] = (long)in[45 + inPos] & 255L | (long)in[46 + inPos] << 8 & 32767L;
         out[25 + outPos] = (long)in[46 + inPos] >> 7 & 1L | (long)in[47 + inPos] << 1 & 511L | (long)in[48 + inPos] << 9 & 32767L;
         out[26 + outPos] = (long)in[48 + inPos] >> 6 & 3L | (long)in[49 + inPos] << 2 & 1023L | (long)in[50 + inPos] << 10 & 32767L;
         out[27 + outPos] = (long)in[50 + inPos] >> 5 & 7L | (long)in[51 + inPos] << 3 & 2047L | (long)in[52 + inPos] << 11 & 32767L;
         out[28 + outPos] = (long)in[52 + inPos] >> 4 & 15L | (long)in[53 + inPos] << 4 & 4095L | (long)in[54 + inPos] << 12 & 32767L;
         out[29 + outPos] = (long)in[54 + inPos] >> 3 & 31L | (long)in[55 + inPos] << 5 & 8191L | (long)in[56 + inPos] << 13 & 32767L;
         out[30 + outPos] = (long)in[56 + inPos] >> 2 & 63L | (long)in[57 + inPos] << 6 & 16383L | (long)in[58 + inPos] << 14 & 32767L;
         out[31 + outPos] = (long)in[58 + inPos] >> 1 & 127L | (long)in[59 + inPos] << 7 & 32767L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 32767L;
         out[1 + outPos] = (long)in.get(1 + inPos) >> 7 & 1L | (long)in.get(2 + inPos) << 1 & 511L | (long)in.get(3 + inPos) << 9 & 32767L;
         out[2 + outPos] = (long)in.get(3 + inPos) >> 6 & 3L | (long)in.get(4 + inPos) << 2 & 1023L | (long)in.get(5 + inPos) << 10 & 32767L;
         out[3 + outPos] = (long)in.get(5 + inPos) >> 5 & 7L | (long)in.get(6 + inPos) << 3 & 2047L | (long)in.get(7 + inPos) << 11 & 32767L;
         out[4 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 4095L | (long)in.get(9 + inPos) << 12 & 32767L;
         out[5 + outPos] = (long)in.get(9 + inPos) >> 3 & 31L | (long)in.get(10 + inPos) << 5 & 8191L | (long)in.get(11 + inPos) << 13 & 32767L;
         out[6 + outPos] = (long)in.get(11 + inPos) >> 2 & 63L | (long)in.get(12 + inPos) << 6 & 16383L | (long)in.get(13 + inPos) << 14 & 32767L;
         out[7 + outPos] = (long)in.get(13 + inPos) >> 1 & 127L | (long)in.get(14 + inPos) << 7 & 32767L;
         out[8 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 32767L;
         out[9 + outPos] = (long)in.get(16 + inPos) >> 7 & 1L | (long)in.get(17 + inPos) << 1 & 511L | (long)in.get(18 + inPos) << 9 & 32767L;
         out[10 + outPos] = (long)in.get(18 + inPos) >> 6 & 3L | (long)in.get(19 + inPos) << 2 & 1023L | (long)in.get(20 + inPos) << 10 & 32767L;
         out[11 + outPos] = (long)in.get(20 + inPos) >> 5 & 7L | (long)in.get(21 + inPos) << 3 & 2047L | (long)in.get(22 + inPos) << 11 & 32767L;
         out[12 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 4095L | (long)in.get(24 + inPos) << 12 & 32767L;
         out[13 + outPos] = (long)in.get(24 + inPos) >> 3 & 31L | (long)in.get(25 + inPos) << 5 & 8191L | (long)in.get(26 + inPos) << 13 & 32767L;
         out[14 + outPos] = (long)in.get(26 + inPos) >> 2 & 63L | (long)in.get(27 + inPos) << 6 & 16383L | (long)in.get(28 + inPos) << 14 & 32767L;
         out[15 + outPos] = (long)in.get(28 + inPos) >> 1 & 127L | (long)in.get(29 + inPos) << 7 & 32767L;
         out[16 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 32767L;
         out[17 + outPos] = (long)in.get(31 + inPos) >> 7 & 1L | (long)in.get(32 + inPos) << 1 & 511L | (long)in.get(33 + inPos) << 9 & 32767L;
         out[18 + outPos] = (long)in.get(33 + inPos) >> 6 & 3L | (long)in.get(34 + inPos) << 2 & 1023L | (long)in.get(35 + inPos) << 10 & 32767L;
         out[19 + outPos] = (long)in.get(35 + inPos) >> 5 & 7L | (long)in.get(36 + inPos) << 3 & 2047L | (long)in.get(37 + inPos) << 11 & 32767L;
         out[20 + outPos] = (long)in.get(37 + inPos) >> 4 & 15L | (long)in.get(38 + inPos) << 4 & 4095L | (long)in.get(39 + inPos) << 12 & 32767L;
         out[21 + outPos] = (long)in.get(39 + inPos) >> 3 & 31L | (long)in.get(40 + inPos) << 5 & 8191L | (long)in.get(41 + inPos) << 13 & 32767L;
         out[22 + outPos] = (long)in.get(41 + inPos) >> 2 & 63L | (long)in.get(42 + inPos) << 6 & 16383L | (long)in.get(43 + inPos) << 14 & 32767L;
         out[23 + outPos] = (long)in.get(43 + inPos) >> 1 & 127L | (long)in.get(44 + inPos) << 7 & 32767L;
         out[24 + outPos] = (long)in.get(45 + inPos) & 255L | (long)in.get(46 + inPos) << 8 & 32767L;
         out[25 + outPos] = (long)in.get(46 + inPos) >> 7 & 1L | (long)in.get(47 + inPos) << 1 & 511L | (long)in.get(48 + inPos) << 9 & 32767L;
         out[26 + outPos] = (long)in.get(48 + inPos) >> 6 & 3L | (long)in.get(49 + inPos) << 2 & 1023L | (long)in.get(50 + inPos) << 10 & 32767L;
         out[27 + outPos] = (long)in.get(50 + inPos) >> 5 & 7L | (long)in.get(51 + inPos) << 3 & 2047L | (long)in.get(52 + inPos) << 11 & 32767L;
         out[28 + outPos] = (long)in.get(52 + inPos) >> 4 & 15L | (long)in.get(53 + inPos) << 4 & 4095L | (long)in.get(54 + inPos) << 12 & 32767L;
         out[29 + outPos] = (long)in.get(54 + inPos) >> 3 & 31L | (long)in.get(55 + inPos) << 5 & 8191L | (long)in.get(56 + inPos) << 13 & 32767L;
         out[30 + outPos] = (long)in.get(56 + inPos) >> 2 & 63L | (long)in.get(57 + inPos) << 6 & 16383L | (long)in.get(58 + inPos) << 14 & 32767L;
         out[31 + outPos] = (long)in.get(58 + inPos) >> 1 & 127L | (long)in.get(59 + inPos) << 7 & 32767L;
      }
   }

   private static final class Packer16 extends BytePackerForLong {
      private Packer16() {
         super(16);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 65535L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 65535L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(in[1 + inPos] & 65535L & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 65535L) >>> 8 & 255L));
         out[4 + outPos] = (byte)((int)(in[2 + inPos] & 65535L & 255L));
         out[5 + outPos] = (byte)((int)((in[2 + inPos] & 65535L) >>> 8 & 255L));
         out[6 + outPos] = (byte)((int)(in[3 + inPos] & 65535L & 255L));
         out[7 + outPos] = (byte)((int)((in[3 + inPos] & 65535L) >>> 8 & 255L));
         out[8 + outPos] = (byte)((int)(in[4 + inPos] & 65535L & 255L));
         out[9 + outPos] = (byte)((int)((in[4 + inPos] & 65535L) >>> 8 & 255L));
         out[10 + outPos] = (byte)((int)(in[5 + inPos] & 65535L & 255L));
         out[11 + outPos] = (byte)((int)((in[5 + inPos] & 65535L) >>> 8 & 255L));
         out[12 + outPos] = (byte)((int)(in[6 + inPos] & 65535L & 255L));
         out[13 + outPos] = (byte)((int)((in[6 + inPos] & 65535L) >>> 8 & 255L));
         out[14 + outPos] = (byte)((int)(in[7 + inPos] & 65535L & 255L));
         out[15 + outPos] = (byte)((int)((in[7 + inPos] & 65535L) >>> 8 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 65535L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 65535L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(in[1 + inPos] & 65535L & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 65535L) >>> 8 & 255L));
         out[4 + outPos] = (byte)((int)(in[2 + inPos] & 65535L & 255L));
         out[5 + outPos] = (byte)((int)((in[2 + inPos] & 65535L) >>> 8 & 255L));
         out[6 + outPos] = (byte)((int)(in[3 + inPos] & 65535L & 255L));
         out[7 + outPos] = (byte)((int)((in[3 + inPos] & 65535L) >>> 8 & 255L));
         out[8 + outPos] = (byte)((int)(in[4 + inPos] & 65535L & 255L));
         out[9 + outPos] = (byte)((int)((in[4 + inPos] & 65535L) >>> 8 & 255L));
         out[10 + outPos] = (byte)((int)(in[5 + inPos] & 65535L & 255L));
         out[11 + outPos] = (byte)((int)((in[5 + inPos] & 65535L) >>> 8 & 255L));
         out[12 + outPos] = (byte)((int)(in[6 + inPos] & 65535L & 255L));
         out[13 + outPos] = (byte)((int)((in[6 + inPos] & 65535L) >>> 8 & 255L));
         out[14 + outPos] = (byte)((int)(in[7 + inPos] & 65535L & 255L));
         out[15 + outPos] = (byte)((int)((in[7 + inPos] & 65535L) >>> 8 & 255L));
         out[16 + outPos] = (byte)((int)(in[8 + inPos] & 65535L & 255L));
         out[17 + outPos] = (byte)((int)((in[8 + inPos] & 65535L) >>> 8 & 255L));
         out[18 + outPos] = (byte)((int)(in[9 + inPos] & 65535L & 255L));
         out[19 + outPos] = (byte)((int)((in[9 + inPos] & 65535L) >>> 8 & 255L));
         out[20 + outPos] = (byte)((int)(in[10 + inPos] & 65535L & 255L));
         out[21 + outPos] = (byte)((int)((in[10 + inPos] & 65535L) >>> 8 & 255L));
         out[22 + outPos] = (byte)((int)(in[11 + inPos] & 65535L & 255L));
         out[23 + outPos] = (byte)((int)((in[11 + inPos] & 65535L) >>> 8 & 255L));
         out[24 + outPos] = (byte)((int)(in[12 + inPos] & 65535L & 255L));
         out[25 + outPos] = (byte)((int)((in[12 + inPos] & 65535L) >>> 8 & 255L));
         out[26 + outPos] = (byte)((int)(in[13 + inPos] & 65535L & 255L));
         out[27 + outPos] = (byte)((int)((in[13 + inPos] & 65535L) >>> 8 & 255L));
         out[28 + outPos] = (byte)((int)(in[14 + inPos] & 65535L & 255L));
         out[29 + outPos] = (byte)((int)((in[14 + inPos] & 65535L) >>> 8 & 255L));
         out[30 + outPos] = (byte)((int)(in[15 + inPos] & 65535L & 255L));
         out[31 + outPos] = (byte)((int)((in[15 + inPos] & 65535L) >>> 8 & 255L));
         out[32 + outPos] = (byte)((int)(in[16 + inPos] & 65535L & 255L));
         out[33 + outPos] = (byte)((int)((in[16 + inPos] & 65535L) >>> 8 & 255L));
         out[34 + outPos] = (byte)((int)(in[17 + inPos] & 65535L & 255L));
         out[35 + outPos] = (byte)((int)((in[17 + inPos] & 65535L) >>> 8 & 255L));
         out[36 + outPos] = (byte)((int)(in[18 + inPos] & 65535L & 255L));
         out[37 + outPos] = (byte)((int)((in[18 + inPos] & 65535L) >>> 8 & 255L));
         out[38 + outPos] = (byte)((int)(in[19 + inPos] & 65535L & 255L));
         out[39 + outPos] = (byte)((int)((in[19 + inPos] & 65535L) >>> 8 & 255L));
         out[40 + outPos] = (byte)((int)(in[20 + inPos] & 65535L & 255L));
         out[41 + outPos] = (byte)((int)((in[20 + inPos] & 65535L) >>> 8 & 255L));
         out[42 + outPos] = (byte)((int)(in[21 + inPos] & 65535L & 255L));
         out[43 + outPos] = (byte)((int)((in[21 + inPos] & 65535L) >>> 8 & 255L));
         out[44 + outPos] = (byte)((int)(in[22 + inPos] & 65535L & 255L));
         out[45 + outPos] = (byte)((int)((in[22 + inPos] & 65535L) >>> 8 & 255L));
         out[46 + outPos] = (byte)((int)(in[23 + inPos] & 65535L & 255L));
         out[47 + outPos] = (byte)((int)((in[23 + inPos] & 65535L) >>> 8 & 255L));
         out[48 + outPos] = (byte)((int)(in[24 + inPos] & 65535L & 255L));
         out[49 + outPos] = (byte)((int)((in[24 + inPos] & 65535L) >>> 8 & 255L));
         out[50 + outPos] = (byte)((int)(in[25 + inPos] & 65535L & 255L));
         out[51 + outPos] = (byte)((int)((in[25 + inPos] & 65535L) >>> 8 & 255L));
         out[52 + outPos] = (byte)((int)(in[26 + inPos] & 65535L & 255L));
         out[53 + outPos] = (byte)((int)((in[26 + inPos] & 65535L) >>> 8 & 255L));
         out[54 + outPos] = (byte)((int)(in[27 + inPos] & 65535L & 255L));
         out[55 + outPos] = (byte)((int)((in[27 + inPos] & 65535L) >>> 8 & 255L));
         out[56 + outPos] = (byte)((int)(in[28 + inPos] & 65535L & 255L));
         out[57 + outPos] = (byte)((int)((in[28 + inPos] & 65535L) >>> 8 & 255L));
         out[58 + outPos] = (byte)((int)(in[29 + inPos] & 65535L & 255L));
         out[59 + outPos] = (byte)((int)((in[29 + inPos] & 65535L) >>> 8 & 255L));
         out[60 + outPos] = (byte)((int)(in[30 + inPos] & 65535L & 255L));
         out[61 + outPos] = (byte)((int)((in[30 + inPos] & 65535L) >>> 8 & 255L));
         out[62 + outPos] = (byte)((int)(in[31 + inPos] & 65535L & 255L));
         out[63 + outPos] = (byte)((int)((in[31 + inPos] & 65535L) >>> 8 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L;
         out[1 + outPos] = (long)in[2 + inPos] & 255L | (long)in[3 + inPos] << 8 & 65535L;
         out[2 + outPos] = (long)in[4 + inPos] & 255L | (long)in[5 + inPos] << 8 & 65535L;
         out[3 + outPos] = (long)in[6 + inPos] & 255L | (long)in[7 + inPos] << 8 & 65535L;
         out[4 + outPos] = (long)in[8 + inPos] & 255L | (long)in[9 + inPos] << 8 & 65535L;
         out[5 + outPos] = (long)in[10 + inPos] & 255L | (long)in[11 + inPos] << 8 & 65535L;
         out[6 + outPos] = (long)in[12 + inPos] & 255L | (long)in[13 + inPos] << 8 & 65535L;
         out[7 + outPos] = (long)in[14 + inPos] & 255L | (long)in[15 + inPos] << 8 & 65535L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L;
         out[1 + outPos] = (long)in.get(2 + inPos) & 255L | (long)in.get(3 + inPos) << 8 & 65535L;
         out[2 + outPos] = (long)in.get(4 + inPos) & 255L | (long)in.get(5 + inPos) << 8 & 65535L;
         out[3 + outPos] = (long)in.get(6 + inPos) & 255L | (long)in.get(7 + inPos) << 8 & 65535L;
         out[4 + outPos] = (long)in.get(8 + inPos) & 255L | (long)in.get(9 + inPos) << 8 & 65535L;
         out[5 + outPos] = (long)in.get(10 + inPos) & 255L | (long)in.get(11 + inPos) << 8 & 65535L;
         out[6 + outPos] = (long)in.get(12 + inPos) & 255L | (long)in.get(13 + inPos) << 8 & 65535L;
         out[7 + outPos] = (long)in.get(14 + inPos) & 255L | (long)in.get(15 + inPos) << 8 & 65535L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L;
         out[1 + outPos] = (long)in[2 + inPos] & 255L | (long)in[3 + inPos] << 8 & 65535L;
         out[2 + outPos] = (long)in[4 + inPos] & 255L | (long)in[5 + inPos] << 8 & 65535L;
         out[3 + outPos] = (long)in[6 + inPos] & 255L | (long)in[7 + inPos] << 8 & 65535L;
         out[4 + outPos] = (long)in[8 + inPos] & 255L | (long)in[9 + inPos] << 8 & 65535L;
         out[5 + outPos] = (long)in[10 + inPos] & 255L | (long)in[11 + inPos] << 8 & 65535L;
         out[6 + outPos] = (long)in[12 + inPos] & 255L | (long)in[13 + inPos] << 8 & 65535L;
         out[7 + outPos] = (long)in[14 + inPos] & 255L | (long)in[15 + inPos] << 8 & 65535L;
         out[8 + outPos] = (long)in[16 + inPos] & 255L | (long)in[17 + inPos] << 8 & 65535L;
         out[9 + outPos] = (long)in[18 + inPos] & 255L | (long)in[19 + inPos] << 8 & 65535L;
         out[10 + outPos] = (long)in[20 + inPos] & 255L | (long)in[21 + inPos] << 8 & 65535L;
         out[11 + outPos] = (long)in[22 + inPos] & 255L | (long)in[23 + inPos] << 8 & 65535L;
         out[12 + outPos] = (long)in[24 + inPos] & 255L | (long)in[25 + inPos] << 8 & 65535L;
         out[13 + outPos] = (long)in[26 + inPos] & 255L | (long)in[27 + inPos] << 8 & 65535L;
         out[14 + outPos] = (long)in[28 + inPos] & 255L | (long)in[29 + inPos] << 8 & 65535L;
         out[15 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 65535L;
         out[16 + outPos] = (long)in[32 + inPos] & 255L | (long)in[33 + inPos] << 8 & 65535L;
         out[17 + outPos] = (long)in[34 + inPos] & 255L | (long)in[35 + inPos] << 8 & 65535L;
         out[18 + outPos] = (long)in[36 + inPos] & 255L | (long)in[37 + inPos] << 8 & 65535L;
         out[19 + outPos] = (long)in[38 + inPos] & 255L | (long)in[39 + inPos] << 8 & 65535L;
         out[20 + outPos] = (long)in[40 + inPos] & 255L | (long)in[41 + inPos] << 8 & 65535L;
         out[21 + outPos] = (long)in[42 + inPos] & 255L | (long)in[43 + inPos] << 8 & 65535L;
         out[22 + outPos] = (long)in[44 + inPos] & 255L | (long)in[45 + inPos] << 8 & 65535L;
         out[23 + outPos] = (long)in[46 + inPos] & 255L | (long)in[47 + inPos] << 8 & 65535L;
         out[24 + outPos] = (long)in[48 + inPos] & 255L | (long)in[49 + inPos] << 8 & 65535L;
         out[25 + outPos] = (long)in[50 + inPos] & 255L | (long)in[51 + inPos] << 8 & 65535L;
         out[26 + outPos] = (long)in[52 + inPos] & 255L | (long)in[53 + inPos] << 8 & 65535L;
         out[27 + outPos] = (long)in[54 + inPos] & 255L | (long)in[55 + inPos] << 8 & 65535L;
         out[28 + outPos] = (long)in[56 + inPos] & 255L | (long)in[57 + inPos] << 8 & 65535L;
         out[29 + outPos] = (long)in[58 + inPos] & 255L | (long)in[59 + inPos] << 8 & 65535L;
         out[30 + outPos] = (long)in[60 + inPos] & 255L | (long)in[61 + inPos] << 8 & 65535L;
         out[31 + outPos] = (long)in[62 + inPos] & 255L | (long)in[63 + inPos] << 8 & 65535L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L;
         out[1 + outPos] = (long)in.get(2 + inPos) & 255L | (long)in.get(3 + inPos) << 8 & 65535L;
         out[2 + outPos] = (long)in.get(4 + inPos) & 255L | (long)in.get(5 + inPos) << 8 & 65535L;
         out[3 + outPos] = (long)in.get(6 + inPos) & 255L | (long)in.get(7 + inPos) << 8 & 65535L;
         out[4 + outPos] = (long)in.get(8 + inPos) & 255L | (long)in.get(9 + inPos) << 8 & 65535L;
         out[5 + outPos] = (long)in.get(10 + inPos) & 255L | (long)in.get(11 + inPos) << 8 & 65535L;
         out[6 + outPos] = (long)in.get(12 + inPos) & 255L | (long)in.get(13 + inPos) << 8 & 65535L;
         out[7 + outPos] = (long)in.get(14 + inPos) & 255L | (long)in.get(15 + inPos) << 8 & 65535L;
         out[8 + outPos] = (long)in.get(16 + inPos) & 255L | (long)in.get(17 + inPos) << 8 & 65535L;
         out[9 + outPos] = (long)in.get(18 + inPos) & 255L | (long)in.get(19 + inPos) << 8 & 65535L;
         out[10 + outPos] = (long)in.get(20 + inPos) & 255L | (long)in.get(21 + inPos) << 8 & 65535L;
         out[11 + outPos] = (long)in.get(22 + inPos) & 255L | (long)in.get(23 + inPos) << 8 & 65535L;
         out[12 + outPos] = (long)in.get(24 + inPos) & 255L | (long)in.get(25 + inPos) << 8 & 65535L;
         out[13 + outPos] = (long)in.get(26 + inPos) & 255L | (long)in.get(27 + inPos) << 8 & 65535L;
         out[14 + outPos] = (long)in.get(28 + inPos) & 255L | (long)in.get(29 + inPos) << 8 & 65535L;
         out[15 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 65535L;
         out[16 + outPos] = (long)in.get(32 + inPos) & 255L | (long)in.get(33 + inPos) << 8 & 65535L;
         out[17 + outPos] = (long)in.get(34 + inPos) & 255L | (long)in.get(35 + inPos) << 8 & 65535L;
         out[18 + outPos] = (long)in.get(36 + inPos) & 255L | (long)in.get(37 + inPos) << 8 & 65535L;
         out[19 + outPos] = (long)in.get(38 + inPos) & 255L | (long)in.get(39 + inPos) << 8 & 65535L;
         out[20 + outPos] = (long)in.get(40 + inPos) & 255L | (long)in.get(41 + inPos) << 8 & 65535L;
         out[21 + outPos] = (long)in.get(42 + inPos) & 255L | (long)in.get(43 + inPos) << 8 & 65535L;
         out[22 + outPos] = (long)in.get(44 + inPos) & 255L | (long)in.get(45 + inPos) << 8 & 65535L;
         out[23 + outPos] = (long)in.get(46 + inPos) & 255L | (long)in.get(47 + inPos) << 8 & 65535L;
         out[24 + outPos] = (long)in.get(48 + inPos) & 255L | (long)in.get(49 + inPos) << 8 & 65535L;
         out[25 + outPos] = (long)in.get(50 + inPos) & 255L | (long)in.get(51 + inPos) << 8 & 65535L;
         out[26 + outPos] = (long)in.get(52 + inPos) & 255L | (long)in.get(53 + inPos) << 8 & 65535L;
         out[27 + outPos] = (long)in.get(54 + inPos) & 255L | (long)in.get(55 + inPos) << 8 & 65535L;
         out[28 + outPos] = (long)in.get(56 + inPos) & 255L | (long)in.get(57 + inPos) << 8 & 65535L;
         out[29 + outPos] = (long)in.get(58 + inPos) & 255L | (long)in.get(59 + inPos) << 8 & 65535L;
         out[30 + outPos] = (long)in.get(60 + inPos) & 255L | (long)in.get(61 + inPos) << 8 & 65535L;
         out[31 + outPos] = (long)in.get(62 + inPos) & 255L | (long)in.get(63 + inPos) << 8 & 65535L;
      }
   }

   private static final class Packer17 extends BytePackerForLong {
      private Packer17() {
         super(17);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 131071L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 131071L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 131071L) >>> 16 | (in[1 + inPos] & 131071L) << 1) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 131071L) >>> 7 & 255L));
         out[4 + outPos] = (byte)((int)(((in[1 + inPos] & 131071L) >>> 15 | (in[2 + inPos] & 131071L) << 2) & 255L));
         out[5 + outPos] = (byte)((int)((in[2 + inPos] & 131071L) >>> 6 & 255L));
         out[6 + outPos] = (byte)((int)(((in[2 + inPos] & 131071L) >>> 14 | (in[3 + inPos] & 131071L) << 3) & 255L));
         out[7 + outPos] = (byte)((int)((in[3 + inPos] & 131071L) >>> 5 & 255L));
         out[8 + outPos] = (byte)((int)(((in[3 + inPos] & 131071L) >>> 13 | (in[4 + inPos] & 131071L) << 4) & 255L));
         out[9 + outPos] = (byte)((int)((in[4 + inPos] & 131071L) >>> 4 & 255L));
         out[10 + outPos] = (byte)((int)(((in[4 + inPos] & 131071L) >>> 12 | (in[5 + inPos] & 131071L) << 5) & 255L));
         out[11 + outPos] = (byte)((int)((in[5 + inPos] & 131071L) >>> 3 & 255L));
         out[12 + outPos] = (byte)((int)(((in[5 + inPos] & 131071L) >>> 11 | (in[6 + inPos] & 131071L) << 6) & 255L));
         out[13 + outPos] = (byte)((int)((in[6 + inPos] & 131071L) >>> 2 & 255L));
         out[14 + outPos] = (byte)((int)(((in[6 + inPos] & 131071L) >>> 10 | (in[7 + inPos] & 131071L) << 7) & 255L));
         out[15 + outPos] = (byte)((int)((in[7 + inPos] & 131071L) >>> 1 & 255L));
         out[16 + outPos] = (byte)((int)((in[7 + inPos] & 131071L) >>> 9 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 131071L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 131071L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 131071L) >>> 16 | (in[1 + inPos] & 131071L) << 1) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 131071L) >>> 7 & 255L));
         out[4 + outPos] = (byte)((int)(((in[1 + inPos] & 131071L) >>> 15 | (in[2 + inPos] & 131071L) << 2) & 255L));
         out[5 + outPos] = (byte)((int)((in[2 + inPos] & 131071L) >>> 6 & 255L));
         out[6 + outPos] = (byte)((int)(((in[2 + inPos] & 131071L) >>> 14 | (in[3 + inPos] & 131071L) << 3) & 255L));
         out[7 + outPos] = (byte)((int)((in[3 + inPos] & 131071L) >>> 5 & 255L));
         out[8 + outPos] = (byte)((int)(((in[3 + inPos] & 131071L) >>> 13 | (in[4 + inPos] & 131071L) << 4) & 255L));
         out[9 + outPos] = (byte)((int)((in[4 + inPos] & 131071L) >>> 4 & 255L));
         out[10 + outPos] = (byte)((int)(((in[4 + inPos] & 131071L) >>> 12 | (in[5 + inPos] & 131071L) << 5) & 255L));
         out[11 + outPos] = (byte)((int)((in[5 + inPos] & 131071L) >>> 3 & 255L));
         out[12 + outPos] = (byte)((int)(((in[5 + inPos] & 131071L) >>> 11 | (in[6 + inPos] & 131071L) << 6) & 255L));
         out[13 + outPos] = (byte)((int)((in[6 + inPos] & 131071L) >>> 2 & 255L));
         out[14 + outPos] = (byte)((int)(((in[6 + inPos] & 131071L) >>> 10 | (in[7 + inPos] & 131071L) << 7) & 255L));
         out[15 + outPos] = (byte)((int)((in[7 + inPos] & 131071L) >>> 1 & 255L));
         out[16 + outPos] = (byte)((int)((in[7 + inPos] & 131071L) >>> 9 & 255L));
         out[17 + outPos] = (byte)((int)(in[8 + inPos] & 131071L & 255L));
         out[18 + outPos] = (byte)((int)((in[8 + inPos] & 131071L) >>> 8 & 255L));
         out[19 + outPos] = (byte)((int)(((in[8 + inPos] & 131071L) >>> 16 | (in[9 + inPos] & 131071L) << 1) & 255L));
         out[20 + outPos] = (byte)((int)((in[9 + inPos] & 131071L) >>> 7 & 255L));
         out[21 + outPos] = (byte)((int)(((in[9 + inPos] & 131071L) >>> 15 | (in[10 + inPos] & 131071L) << 2) & 255L));
         out[22 + outPos] = (byte)((int)((in[10 + inPos] & 131071L) >>> 6 & 255L));
         out[23 + outPos] = (byte)((int)(((in[10 + inPos] & 131071L) >>> 14 | (in[11 + inPos] & 131071L) << 3) & 255L));
         out[24 + outPos] = (byte)((int)((in[11 + inPos] & 131071L) >>> 5 & 255L));
         out[25 + outPos] = (byte)((int)(((in[11 + inPos] & 131071L) >>> 13 | (in[12 + inPos] & 131071L) << 4) & 255L));
         out[26 + outPos] = (byte)((int)((in[12 + inPos] & 131071L) >>> 4 & 255L));
         out[27 + outPos] = (byte)((int)(((in[12 + inPos] & 131071L) >>> 12 | (in[13 + inPos] & 131071L) << 5) & 255L));
         out[28 + outPos] = (byte)((int)((in[13 + inPos] & 131071L) >>> 3 & 255L));
         out[29 + outPos] = (byte)((int)(((in[13 + inPos] & 131071L) >>> 11 | (in[14 + inPos] & 131071L) << 6) & 255L));
         out[30 + outPos] = (byte)((int)((in[14 + inPos] & 131071L) >>> 2 & 255L));
         out[31 + outPos] = (byte)((int)(((in[14 + inPos] & 131071L) >>> 10 | (in[15 + inPos] & 131071L) << 7) & 255L));
         out[32 + outPos] = (byte)((int)((in[15 + inPos] & 131071L) >>> 1 & 255L));
         out[33 + outPos] = (byte)((int)((in[15 + inPos] & 131071L) >>> 9 & 255L));
         out[34 + outPos] = (byte)((int)(in[16 + inPos] & 131071L & 255L));
         out[35 + outPos] = (byte)((int)((in[16 + inPos] & 131071L) >>> 8 & 255L));
         out[36 + outPos] = (byte)((int)(((in[16 + inPos] & 131071L) >>> 16 | (in[17 + inPos] & 131071L) << 1) & 255L));
         out[37 + outPos] = (byte)((int)((in[17 + inPos] & 131071L) >>> 7 & 255L));
         out[38 + outPos] = (byte)((int)(((in[17 + inPos] & 131071L) >>> 15 | (in[18 + inPos] & 131071L) << 2) & 255L));
         out[39 + outPos] = (byte)((int)((in[18 + inPos] & 131071L) >>> 6 & 255L));
         out[40 + outPos] = (byte)((int)(((in[18 + inPos] & 131071L) >>> 14 | (in[19 + inPos] & 131071L) << 3) & 255L));
         out[41 + outPos] = (byte)((int)((in[19 + inPos] & 131071L) >>> 5 & 255L));
         out[42 + outPos] = (byte)((int)(((in[19 + inPos] & 131071L) >>> 13 | (in[20 + inPos] & 131071L) << 4) & 255L));
         out[43 + outPos] = (byte)((int)((in[20 + inPos] & 131071L) >>> 4 & 255L));
         out[44 + outPos] = (byte)((int)(((in[20 + inPos] & 131071L) >>> 12 | (in[21 + inPos] & 131071L) << 5) & 255L));
         out[45 + outPos] = (byte)((int)((in[21 + inPos] & 131071L) >>> 3 & 255L));
         out[46 + outPos] = (byte)((int)(((in[21 + inPos] & 131071L) >>> 11 | (in[22 + inPos] & 131071L) << 6) & 255L));
         out[47 + outPos] = (byte)((int)((in[22 + inPos] & 131071L) >>> 2 & 255L));
         out[48 + outPos] = (byte)((int)(((in[22 + inPos] & 131071L) >>> 10 | (in[23 + inPos] & 131071L) << 7) & 255L));
         out[49 + outPos] = (byte)((int)((in[23 + inPos] & 131071L) >>> 1 & 255L));
         out[50 + outPos] = (byte)((int)((in[23 + inPos] & 131071L) >>> 9 & 255L));
         out[51 + outPos] = (byte)((int)(in[24 + inPos] & 131071L & 255L));
         out[52 + outPos] = (byte)((int)((in[24 + inPos] & 131071L) >>> 8 & 255L));
         out[53 + outPos] = (byte)((int)(((in[24 + inPos] & 131071L) >>> 16 | (in[25 + inPos] & 131071L) << 1) & 255L));
         out[54 + outPos] = (byte)((int)((in[25 + inPos] & 131071L) >>> 7 & 255L));
         out[55 + outPos] = (byte)((int)(((in[25 + inPos] & 131071L) >>> 15 | (in[26 + inPos] & 131071L) << 2) & 255L));
         out[56 + outPos] = (byte)((int)((in[26 + inPos] & 131071L) >>> 6 & 255L));
         out[57 + outPos] = (byte)((int)(((in[26 + inPos] & 131071L) >>> 14 | (in[27 + inPos] & 131071L) << 3) & 255L));
         out[58 + outPos] = (byte)((int)((in[27 + inPos] & 131071L) >>> 5 & 255L));
         out[59 + outPos] = (byte)((int)(((in[27 + inPos] & 131071L) >>> 13 | (in[28 + inPos] & 131071L) << 4) & 255L));
         out[60 + outPos] = (byte)((int)((in[28 + inPos] & 131071L) >>> 4 & 255L));
         out[61 + outPos] = (byte)((int)(((in[28 + inPos] & 131071L) >>> 12 | (in[29 + inPos] & 131071L) << 5) & 255L));
         out[62 + outPos] = (byte)((int)((in[29 + inPos] & 131071L) >>> 3 & 255L));
         out[63 + outPos] = (byte)((int)(((in[29 + inPos] & 131071L) >>> 11 | (in[30 + inPos] & 131071L) << 6) & 255L));
         out[64 + outPos] = (byte)((int)((in[30 + inPos] & 131071L) >>> 2 & 255L));
         out[65 + outPos] = (byte)((int)(((in[30 + inPos] & 131071L) >>> 10 | (in[31 + inPos] & 131071L) << 7) & 255L));
         out[66 + outPos] = (byte)((int)((in[31 + inPos] & 131071L) >>> 1 & 255L));
         out[67 + outPos] = (byte)((int)((in[31 + inPos] & 131071L) >>> 9 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 131071L;
         out[1 + outPos] = (long)in[2 + inPos] >> 1 & 127L | (long)in[3 + inPos] << 7 & 32767L | (long)in[4 + inPos] << 15 & 131071L;
         out[2 + outPos] = (long)in[4 + inPos] >> 2 & 63L | (long)in[5 + inPos] << 6 & 16383L | (long)in[6 + inPos] << 14 & 131071L;
         out[3 + outPos] = (long)in[6 + inPos] >> 3 & 31L | (long)in[7 + inPos] << 5 & 8191L | (long)in[8 + inPos] << 13 & 131071L;
         out[4 + outPos] = (long)in[8 + inPos] >> 4 & 15L | (long)in[9 + inPos] << 4 & 4095L | (long)in[10 + inPos] << 12 & 131071L;
         out[5 + outPos] = (long)in[10 + inPos] >> 5 & 7L | (long)in[11 + inPos] << 3 & 2047L | (long)in[12 + inPos] << 11 & 131071L;
         out[6 + outPos] = (long)in[12 + inPos] >> 6 & 3L | (long)in[13 + inPos] << 2 & 1023L | (long)in[14 + inPos] << 10 & 131071L;
         out[7 + outPos] = (long)in[14 + inPos] >> 7 & 1L | (long)in[15 + inPos] << 1 & 511L | (long)in[16 + inPos] << 9 & 131071L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 131071L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 1 & 127L | (long)in.get(3 + inPos) << 7 & 32767L | (long)in.get(4 + inPos) << 15 & 131071L;
         out[2 + outPos] = (long)in.get(4 + inPos) >> 2 & 63L | (long)in.get(5 + inPos) << 6 & 16383L | (long)in.get(6 + inPos) << 14 & 131071L;
         out[3 + outPos] = (long)in.get(6 + inPos) >> 3 & 31L | (long)in.get(7 + inPos) << 5 & 8191L | (long)in.get(8 + inPos) << 13 & 131071L;
         out[4 + outPos] = (long)in.get(8 + inPos) >> 4 & 15L | (long)in.get(9 + inPos) << 4 & 4095L | (long)in.get(10 + inPos) << 12 & 131071L;
         out[5 + outPos] = (long)in.get(10 + inPos) >> 5 & 7L | (long)in.get(11 + inPos) << 3 & 2047L | (long)in.get(12 + inPos) << 11 & 131071L;
         out[6 + outPos] = (long)in.get(12 + inPos) >> 6 & 3L | (long)in.get(13 + inPos) << 2 & 1023L | (long)in.get(14 + inPos) << 10 & 131071L;
         out[7 + outPos] = (long)in.get(14 + inPos) >> 7 & 1L | (long)in.get(15 + inPos) << 1 & 511L | (long)in.get(16 + inPos) << 9 & 131071L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 131071L;
         out[1 + outPos] = (long)in[2 + inPos] >> 1 & 127L | (long)in[3 + inPos] << 7 & 32767L | (long)in[4 + inPos] << 15 & 131071L;
         out[2 + outPos] = (long)in[4 + inPos] >> 2 & 63L | (long)in[5 + inPos] << 6 & 16383L | (long)in[6 + inPos] << 14 & 131071L;
         out[3 + outPos] = (long)in[6 + inPos] >> 3 & 31L | (long)in[7 + inPos] << 5 & 8191L | (long)in[8 + inPos] << 13 & 131071L;
         out[4 + outPos] = (long)in[8 + inPos] >> 4 & 15L | (long)in[9 + inPos] << 4 & 4095L | (long)in[10 + inPos] << 12 & 131071L;
         out[5 + outPos] = (long)in[10 + inPos] >> 5 & 7L | (long)in[11 + inPos] << 3 & 2047L | (long)in[12 + inPos] << 11 & 131071L;
         out[6 + outPos] = (long)in[12 + inPos] >> 6 & 3L | (long)in[13 + inPos] << 2 & 1023L | (long)in[14 + inPos] << 10 & 131071L;
         out[7 + outPos] = (long)in[14 + inPos] >> 7 & 1L | (long)in[15 + inPos] << 1 & 511L | (long)in[16 + inPos] << 9 & 131071L;
         out[8 + outPos] = (long)in[17 + inPos] & 255L | (long)in[18 + inPos] << 8 & 65535L | (long)in[19 + inPos] << 16 & 131071L;
         out[9 + outPos] = (long)in[19 + inPos] >> 1 & 127L | (long)in[20 + inPos] << 7 & 32767L | (long)in[21 + inPos] << 15 & 131071L;
         out[10 + outPos] = (long)in[21 + inPos] >> 2 & 63L | (long)in[22 + inPos] << 6 & 16383L | (long)in[23 + inPos] << 14 & 131071L;
         out[11 + outPos] = (long)in[23 + inPos] >> 3 & 31L | (long)in[24 + inPos] << 5 & 8191L | (long)in[25 + inPos] << 13 & 131071L;
         out[12 + outPos] = (long)in[25 + inPos] >> 4 & 15L | (long)in[26 + inPos] << 4 & 4095L | (long)in[27 + inPos] << 12 & 131071L;
         out[13 + outPos] = (long)in[27 + inPos] >> 5 & 7L | (long)in[28 + inPos] << 3 & 2047L | (long)in[29 + inPos] << 11 & 131071L;
         out[14 + outPos] = (long)in[29 + inPos] >> 6 & 3L | (long)in[30 + inPos] << 2 & 1023L | (long)in[31 + inPos] << 10 & 131071L;
         out[15 + outPos] = (long)in[31 + inPos] >> 7 & 1L | (long)in[32 + inPos] << 1 & 511L | (long)in[33 + inPos] << 9 & 131071L;
         out[16 + outPos] = (long)in[34 + inPos] & 255L | (long)in[35 + inPos] << 8 & 65535L | (long)in[36 + inPos] << 16 & 131071L;
         out[17 + outPos] = (long)in[36 + inPos] >> 1 & 127L | (long)in[37 + inPos] << 7 & 32767L | (long)in[38 + inPos] << 15 & 131071L;
         out[18 + outPos] = (long)in[38 + inPos] >> 2 & 63L | (long)in[39 + inPos] << 6 & 16383L | (long)in[40 + inPos] << 14 & 131071L;
         out[19 + outPos] = (long)in[40 + inPos] >> 3 & 31L | (long)in[41 + inPos] << 5 & 8191L | (long)in[42 + inPos] << 13 & 131071L;
         out[20 + outPos] = (long)in[42 + inPos] >> 4 & 15L | (long)in[43 + inPos] << 4 & 4095L | (long)in[44 + inPos] << 12 & 131071L;
         out[21 + outPos] = (long)in[44 + inPos] >> 5 & 7L | (long)in[45 + inPos] << 3 & 2047L | (long)in[46 + inPos] << 11 & 131071L;
         out[22 + outPos] = (long)in[46 + inPos] >> 6 & 3L | (long)in[47 + inPos] << 2 & 1023L | (long)in[48 + inPos] << 10 & 131071L;
         out[23 + outPos] = (long)in[48 + inPos] >> 7 & 1L | (long)in[49 + inPos] << 1 & 511L | (long)in[50 + inPos] << 9 & 131071L;
         out[24 + outPos] = (long)in[51 + inPos] & 255L | (long)in[52 + inPos] << 8 & 65535L | (long)in[53 + inPos] << 16 & 131071L;
         out[25 + outPos] = (long)in[53 + inPos] >> 1 & 127L | (long)in[54 + inPos] << 7 & 32767L | (long)in[55 + inPos] << 15 & 131071L;
         out[26 + outPos] = (long)in[55 + inPos] >> 2 & 63L | (long)in[56 + inPos] << 6 & 16383L | (long)in[57 + inPos] << 14 & 131071L;
         out[27 + outPos] = (long)in[57 + inPos] >> 3 & 31L | (long)in[58 + inPos] << 5 & 8191L | (long)in[59 + inPos] << 13 & 131071L;
         out[28 + outPos] = (long)in[59 + inPos] >> 4 & 15L | (long)in[60 + inPos] << 4 & 4095L | (long)in[61 + inPos] << 12 & 131071L;
         out[29 + outPos] = (long)in[61 + inPos] >> 5 & 7L | (long)in[62 + inPos] << 3 & 2047L | (long)in[63 + inPos] << 11 & 131071L;
         out[30 + outPos] = (long)in[63 + inPos] >> 6 & 3L | (long)in[64 + inPos] << 2 & 1023L | (long)in[65 + inPos] << 10 & 131071L;
         out[31 + outPos] = (long)in[65 + inPos] >> 7 & 1L | (long)in[66 + inPos] << 1 & 511L | (long)in[67 + inPos] << 9 & 131071L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 131071L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 1 & 127L | (long)in.get(3 + inPos) << 7 & 32767L | (long)in.get(4 + inPos) << 15 & 131071L;
         out[2 + outPos] = (long)in.get(4 + inPos) >> 2 & 63L | (long)in.get(5 + inPos) << 6 & 16383L | (long)in.get(6 + inPos) << 14 & 131071L;
         out[3 + outPos] = (long)in.get(6 + inPos) >> 3 & 31L | (long)in.get(7 + inPos) << 5 & 8191L | (long)in.get(8 + inPos) << 13 & 131071L;
         out[4 + outPos] = (long)in.get(8 + inPos) >> 4 & 15L | (long)in.get(9 + inPos) << 4 & 4095L | (long)in.get(10 + inPos) << 12 & 131071L;
         out[5 + outPos] = (long)in.get(10 + inPos) >> 5 & 7L | (long)in.get(11 + inPos) << 3 & 2047L | (long)in.get(12 + inPos) << 11 & 131071L;
         out[6 + outPos] = (long)in.get(12 + inPos) >> 6 & 3L | (long)in.get(13 + inPos) << 2 & 1023L | (long)in.get(14 + inPos) << 10 & 131071L;
         out[7 + outPos] = (long)in.get(14 + inPos) >> 7 & 1L | (long)in.get(15 + inPos) << 1 & 511L | (long)in.get(16 + inPos) << 9 & 131071L;
         out[8 + outPos] = (long)in.get(17 + inPos) & 255L | (long)in.get(18 + inPos) << 8 & 65535L | (long)in.get(19 + inPos) << 16 & 131071L;
         out[9 + outPos] = (long)in.get(19 + inPos) >> 1 & 127L | (long)in.get(20 + inPos) << 7 & 32767L | (long)in.get(21 + inPos) << 15 & 131071L;
         out[10 + outPos] = (long)in.get(21 + inPos) >> 2 & 63L | (long)in.get(22 + inPos) << 6 & 16383L | (long)in.get(23 + inPos) << 14 & 131071L;
         out[11 + outPos] = (long)in.get(23 + inPos) >> 3 & 31L | (long)in.get(24 + inPos) << 5 & 8191L | (long)in.get(25 + inPos) << 13 & 131071L;
         out[12 + outPos] = (long)in.get(25 + inPos) >> 4 & 15L | (long)in.get(26 + inPos) << 4 & 4095L | (long)in.get(27 + inPos) << 12 & 131071L;
         out[13 + outPos] = (long)in.get(27 + inPos) >> 5 & 7L | (long)in.get(28 + inPos) << 3 & 2047L | (long)in.get(29 + inPos) << 11 & 131071L;
         out[14 + outPos] = (long)in.get(29 + inPos) >> 6 & 3L | (long)in.get(30 + inPos) << 2 & 1023L | (long)in.get(31 + inPos) << 10 & 131071L;
         out[15 + outPos] = (long)in.get(31 + inPos) >> 7 & 1L | (long)in.get(32 + inPos) << 1 & 511L | (long)in.get(33 + inPos) << 9 & 131071L;
         out[16 + outPos] = (long)in.get(34 + inPos) & 255L | (long)in.get(35 + inPos) << 8 & 65535L | (long)in.get(36 + inPos) << 16 & 131071L;
         out[17 + outPos] = (long)in.get(36 + inPos) >> 1 & 127L | (long)in.get(37 + inPos) << 7 & 32767L | (long)in.get(38 + inPos) << 15 & 131071L;
         out[18 + outPos] = (long)in.get(38 + inPos) >> 2 & 63L | (long)in.get(39 + inPos) << 6 & 16383L | (long)in.get(40 + inPos) << 14 & 131071L;
         out[19 + outPos] = (long)in.get(40 + inPos) >> 3 & 31L | (long)in.get(41 + inPos) << 5 & 8191L | (long)in.get(42 + inPos) << 13 & 131071L;
         out[20 + outPos] = (long)in.get(42 + inPos) >> 4 & 15L | (long)in.get(43 + inPos) << 4 & 4095L | (long)in.get(44 + inPos) << 12 & 131071L;
         out[21 + outPos] = (long)in.get(44 + inPos) >> 5 & 7L | (long)in.get(45 + inPos) << 3 & 2047L | (long)in.get(46 + inPos) << 11 & 131071L;
         out[22 + outPos] = (long)in.get(46 + inPos) >> 6 & 3L | (long)in.get(47 + inPos) << 2 & 1023L | (long)in.get(48 + inPos) << 10 & 131071L;
         out[23 + outPos] = (long)in.get(48 + inPos) >> 7 & 1L | (long)in.get(49 + inPos) << 1 & 511L | (long)in.get(50 + inPos) << 9 & 131071L;
         out[24 + outPos] = (long)in.get(51 + inPos) & 255L | (long)in.get(52 + inPos) << 8 & 65535L | (long)in.get(53 + inPos) << 16 & 131071L;
         out[25 + outPos] = (long)in.get(53 + inPos) >> 1 & 127L | (long)in.get(54 + inPos) << 7 & 32767L | (long)in.get(55 + inPos) << 15 & 131071L;
         out[26 + outPos] = (long)in.get(55 + inPos) >> 2 & 63L | (long)in.get(56 + inPos) << 6 & 16383L | (long)in.get(57 + inPos) << 14 & 131071L;
         out[27 + outPos] = (long)in.get(57 + inPos) >> 3 & 31L | (long)in.get(58 + inPos) << 5 & 8191L | (long)in.get(59 + inPos) << 13 & 131071L;
         out[28 + outPos] = (long)in.get(59 + inPos) >> 4 & 15L | (long)in.get(60 + inPos) << 4 & 4095L | (long)in.get(61 + inPos) << 12 & 131071L;
         out[29 + outPos] = (long)in.get(61 + inPos) >> 5 & 7L | (long)in.get(62 + inPos) << 3 & 2047L | (long)in.get(63 + inPos) << 11 & 131071L;
         out[30 + outPos] = (long)in.get(63 + inPos) >> 6 & 3L | (long)in.get(64 + inPos) << 2 & 1023L | (long)in.get(65 + inPos) << 10 & 131071L;
         out[31 + outPos] = (long)in.get(65 + inPos) >> 7 & 1L | (long)in.get(66 + inPos) << 1 & 511L | (long)in.get(67 + inPos) << 9 & 131071L;
      }
   }

   private static final class Packer18 extends BytePackerForLong {
      private Packer18() {
         super(18);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 262143L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 262143L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 262143L) >>> 16 | (in[1 + inPos] & 262143L) << 2) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 262143L) >>> 6 & 255L));
         out[4 + outPos] = (byte)((int)(((in[1 + inPos] & 262143L) >>> 14 | (in[2 + inPos] & 262143L) << 4) & 255L));
         out[5 + outPos] = (byte)((int)((in[2 + inPos] & 262143L) >>> 4 & 255L));
         out[6 + outPos] = (byte)((int)(((in[2 + inPos] & 262143L) >>> 12 | (in[3 + inPos] & 262143L) << 6) & 255L));
         out[7 + outPos] = (byte)((int)((in[3 + inPos] & 262143L) >>> 2 & 255L));
         out[8 + outPos] = (byte)((int)((in[3 + inPos] & 262143L) >>> 10 & 255L));
         out[9 + outPos] = (byte)((int)(in[4 + inPos] & 262143L & 255L));
         out[10 + outPos] = (byte)((int)((in[4 + inPos] & 262143L) >>> 8 & 255L));
         out[11 + outPos] = (byte)((int)(((in[4 + inPos] & 262143L) >>> 16 | (in[5 + inPos] & 262143L) << 2) & 255L));
         out[12 + outPos] = (byte)((int)((in[5 + inPos] & 262143L) >>> 6 & 255L));
         out[13 + outPos] = (byte)((int)(((in[5 + inPos] & 262143L) >>> 14 | (in[6 + inPos] & 262143L) << 4) & 255L));
         out[14 + outPos] = (byte)((int)((in[6 + inPos] & 262143L) >>> 4 & 255L));
         out[15 + outPos] = (byte)((int)(((in[6 + inPos] & 262143L) >>> 12 | (in[7 + inPos] & 262143L) << 6) & 255L));
         out[16 + outPos] = (byte)((int)((in[7 + inPos] & 262143L) >>> 2 & 255L));
         out[17 + outPos] = (byte)((int)((in[7 + inPos] & 262143L) >>> 10 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 262143L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 262143L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 262143L) >>> 16 | (in[1 + inPos] & 262143L) << 2) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 262143L) >>> 6 & 255L));
         out[4 + outPos] = (byte)((int)(((in[1 + inPos] & 262143L) >>> 14 | (in[2 + inPos] & 262143L) << 4) & 255L));
         out[5 + outPos] = (byte)((int)((in[2 + inPos] & 262143L) >>> 4 & 255L));
         out[6 + outPos] = (byte)((int)(((in[2 + inPos] & 262143L) >>> 12 | (in[3 + inPos] & 262143L) << 6) & 255L));
         out[7 + outPos] = (byte)((int)((in[3 + inPos] & 262143L) >>> 2 & 255L));
         out[8 + outPos] = (byte)((int)((in[3 + inPos] & 262143L) >>> 10 & 255L));
         out[9 + outPos] = (byte)((int)(in[4 + inPos] & 262143L & 255L));
         out[10 + outPos] = (byte)((int)((in[4 + inPos] & 262143L) >>> 8 & 255L));
         out[11 + outPos] = (byte)((int)(((in[4 + inPos] & 262143L) >>> 16 | (in[5 + inPos] & 262143L) << 2) & 255L));
         out[12 + outPos] = (byte)((int)((in[5 + inPos] & 262143L) >>> 6 & 255L));
         out[13 + outPos] = (byte)((int)(((in[5 + inPos] & 262143L) >>> 14 | (in[6 + inPos] & 262143L) << 4) & 255L));
         out[14 + outPos] = (byte)((int)((in[6 + inPos] & 262143L) >>> 4 & 255L));
         out[15 + outPos] = (byte)((int)(((in[6 + inPos] & 262143L) >>> 12 | (in[7 + inPos] & 262143L) << 6) & 255L));
         out[16 + outPos] = (byte)((int)((in[7 + inPos] & 262143L) >>> 2 & 255L));
         out[17 + outPos] = (byte)((int)((in[7 + inPos] & 262143L) >>> 10 & 255L));
         out[18 + outPos] = (byte)((int)(in[8 + inPos] & 262143L & 255L));
         out[19 + outPos] = (byte)((int)((in[8 + inPos] & 262143L) >>> 8 & 255L));
         out[20 + outPos] = (byte)((int)(((in[8 + inPos] & 262143L) >>> 16 | (in[9 + inPos] & 262143L) << 2) & 255L));
         out[21 + outPos] = (byte)((int)((in[9 + inPos] & 262143L) >>> 6 & 255L));
         out[22 + outPos] = (byte)((int)(((in[9 + inPos] & 262143L) >>> 14 | (in[10 + inPos] & 262143L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)((in[10 + inPos] & 262143L) >>> 4 & 255L));
         out[24 + outPos] = (byte)((int)(((in[10 + inPos] & 262143L) >>> 12 | (in[11 + inPos] & 262143L) << 6) & 255L));
         out[25 + outPos] = (byte)((int)((in[11 + inPos] & 262143L) >>> 2 & 255L));
         out[26 + outPos] = (byte)((int)((in[11 + inPos] & 262143L) >>> 10 & 255L));
         out[27 + outPos] = (byte)((int)(in[12 + inPos] & 262143L & 255L));
         out[28 + outPos] = (byte)((int)((in[12 + inPos] & 262143L) >>> 8 & 255L));
         out[29 + outPos] = (byte)((int)(((in[12 + inPos] & 262143L) >>> 16 | (in[13 + inPos] & 262143L) << 2) & 255L));
         out[30 + outPos] = (byte)((int)((in[13 + inPos] & 262143L) >>> 6 & 255L));
         out[31 + outPos] = (byte)((int)(((in[13 + inPos] & 262143L) >>> 14 | (in[14 + inPos] & 262143L) << 4) & 255L));
         out[32 + outPos] = (byte)((int)((in[14 + inPos] & 262143L) >>> 4 & 255L));
         out[33 + outPos] = (byte)((int)(((in[14 + inPos] & 262143L) >>> 12 | (in[15 + inPos] & 262143L) << 6) & 255L));
         out[34 + outPos] = (byte)((int)((in[15 + inPos] & 262143L) >>> 2 & 255L));
         out[35 + outPos] = (byte)((int)((in[15 + inPos] & 262143L) >>> 10 & 255L));
         out[36 + outPos] = (byte)((int)(in[16 + inPos] & 262143L & 255L));
         out[37 + outPos] = (byte)((int)((in[16 + inPos] & 262143L) >>> 8 & 255L));
         out[38 + outPos] = (byte)((int)(((in[16 + inPos] & 262143L) >>> 16 | (in[17 + inPos] & 262143L) << 2) & 255L));
         out[39 + outPos] = (byte)((int)((in[17 + inPos] & 262143L) >>> 6 & 255L));
         out[40 + outPos] = (byte)((int)(((in[17 + inPos] & 262143L) >>> 14 | (in[18 + inPos] & 262143L) << 4) & 255L));
         out[41 + outPos] = (byte)((int)((in[18 + inPos] & 262143L) >>> 4 & 255L));
         out[42 + outPos] = (byte)((int)(((in[18 + inPos] & 262143L) >>> 12 | (in[19 + inPos] & 262143L) << 6) & 255L));
         out[43 + outPos] = (byte)((int)((in[19 + inPos] & 262143L) >>> 2 & 255L));
         out[44 + outPos] = (byte)((int)((in[19 + inPos] & 262143L) >>> 10 & 255L));
         out[45 + outPos] = (byte)((int)(in[20 + inPos] & 262143L & 255L));
         out[46 + outPos] = (byte)((int)((in[20 + inPos] & 262143L) >>> 8 & 255L));
         out[47 + outPos] = (byte)((int)(((in[20 + inPos] & 262143L) >>> 16 | (in[21 + inPos] & 262143L) << 2) & 255L));
         out[48 + outPos] = (byte)((int)((in[21 + inPos] & 262143L) >>> 6 & 255L));
         out[49 + outPos] = (byte)((int)(((in[21 + inPos] & 262143L) >>> 14 | (in[22 + inPos] & 262143L) << 4) & 255L));
         out[50 + outPos] = (byte)((int)((in[22 + inPos] & 262143L) >>> 4 & 255L));
         out[51 + outPos] = (byte)((int)(((in[22 + inPos] & 262143L) >>> 12 | (in[23 + inPos] & 262143L) << 6) & 255L));
         out[52 + outPos] = (byte)((int)((in[23 + inPos] & 262143L) >>> 2 & 255L));
         out[53 + outPos] = (byte)((int)((in[23 + inPos] & 262143L) >>> 10 & 255L));
         out[54 + outPos] = (byte)((int)(in[24 + inPos] & 262143L & 255L));
         out[55 + outPos] = (byte)((int)((in[24 + inPos] & 262143L) >>> 8 & 255L));
         out[56 + outPos] = (byte)((int)(((in[24 + inPos] & 262143L) >>> 16 | (in[25 + inPos] & 262143L) << 2) & 255L));
         out[57 + outPos] = (byte)((int)((in[25 + inPos] & 262143L) >>> 6 & 255L));
         out[58 + outPos] = (byte)((int)(((in[25 + inPos] & 262143L) >>> 14 | (in[26 + inPos] & 262143L) << 4) & 255L));
         out[59 + outPos] = (byte)((int)((in[26 + inPos] & 262143L) >>> 4 & 255L));
         out[60 + outPos] = (byte)((int)(((in[26 + inPos] & 262143L) >>> 12 | (in[27 + inPos] & 262143L) << 6) & 255L));
         out[61 + outPos] = (byte)((int)((in[27 + inPos] & 262143L) >>> 2 & 255L));
         out[62 + outPos] = (byte)((int)((in[27 + inPos] & 262143L) >>> 10 & 255L));
         out[63 + outPos] = (byte)((int)(in[28 + inPos] & 262143L & 255L));
         out[64 + outPos] = (byte)((int)((in[28 + inPos] & 262143L) >>> 8 & 255L));
         out[65 + outPos] = (byte)((int)(((in[28 + inPos] & 262143L) >>> 16 | (in[29 + inPos] & 262143L) << 2) & 255L));
         out[66 + outPos] = (byte)((int)((in[29 + inPos] & 262143L) >>> 6 & 255L));
         out[67 + outPos] = (byte)((int)(((in[29 + inPos] & 262143L) >>> 14 | (in[30 + inPos] & 262143L) << 4) & 255L));
         out[68 + outPos] = (byte)((int)((in[30 + inPos] & 262143L) >>> 4 & 255L));
         out[69 + outPos] = (byte)((int)(((in[30 + inPos] & 262143L) >>> 12 | (in[31 + inPos] & 262143L) << 6) & 255L));
         out[70 + outPos] = (byte)((int)((in[31 + inPos] & 262143L) >>> 2 & 255L));
         out[71 + outPos] = (byte)((int)((in[31 + inPos] & 262143L) >>> 10 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 262143L;
         out[1 + outPos] = (long)in[2 + inPos] >> 2 & 63L | (long)in[3 + inPos] << 6 & 16383L | (long)in[4 + inPos] << 14 & 262143L;
         out[2 + outPos] = (long)in[4 + inPos] >> 4 & 15L | (long)in[5 + inPos] << 4 & 4095L | (long)in[6 + inPos] << 12 & 262143L;
         out[3 + outPos] = (long)in[6 + inPos] >> 6 & 3L | (long)in[7 + inPos] << 2 & 1023L | (long)in[8 + inPos] << 10 & 262143L;
         out[4 + outPos] = (long)in[9 + inPos] & 255L | (long)in[10 + inPos] << 8 & 65535L | (long)in[11 + inPos] << 16 & 262143L;
         out[5 + outPos] = (long)in[11 + inPos] >> 2 & 63L | (long)in[12 + inPos] << 6 & 16383L | (long)in[13 + inPos] << 14 & 262143L;
         out[6 + outPos] = (long)in[13 + inPos] >> 4 & 15L | (long)in[14 + inPos] << 4 & 4095L | (long)in[15 + inPos] << 12 & 262143L;
         out[7 + outPos] = (long)in[15 + inPos] >> 6 & 3L | (long)in[16 + inPos] << 2 & 1023L | (long)in[17 + inPos] << 10 & 262143L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 262143L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 2 & 63L | (long)in.get(3 + inPos) << 6 & 16383L | (long)in.get(4 + inPos) << 14 & 262143L;
         out[2 + outPos] = (long)in.get(4 + inPos) >> 4 & 15L | (long)in.get(5 + inPos) << 4 & 4095L | (long)in.get(6 + inPos) << 12 & 262143L;
         out[3 + outPos] = (long)in.get(6 + inPos) >> 6 & 3L | (long)in.get(7 + inPos) << 2 & 1023L | (long)in.get(8 + inPos) << 10 & 262143L;
         out[4 + outPos] = (long)in.get(9 + inPos) & 255L | (long)in.get(10 + inPos) << 8 & 65535L | (long)in.get(11 + inPos) << 16 & 262143L;
         out[5 + outPos] = (long)in.get(11 + inPos) >> 2 & 63L | (long)in.get(12 + inPos) << 6 & 16383L | (long)in.get(13 + inPos) << 14 & 262143L;
         out[6 + outPos] = (long)in.get(13 + inPos) >> 4 & 15L | (long)in.get(14 + inPos) << 4 & 4095L | (long)in.get(15 + inPos) << 12 & 262143L;
         out[7 + outPos] = (long)in.get(15 + inPos) >> 6 & 3L | (long)in.get(16 + inPos) << 2 & 1023L | (long)in.get(17 + inPos) << 10 & 262143L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 262143L;
         out[1 + outPos] = (long)in[2 + inPos] >> 2 & 63L | (long)in[3 + inPos] << 6 & 16383L | (long)in[4 + inPos] << 14 & 262143L;
         out[2 + outPos] = (long)in[4 + inPos] >> 4 & 15L | (long)in[5 + inPos] << 4 & 4095L | (long)in[6 + inPos] << 12 & 262143L;
         out[3 + outPos] = (long)in[6 + inPos] >> 6 & 3L | (long)in[7 + inPos] << 2 & 1023L | (long)in[8 + inPos] << 10 & 262143L;
         out[4 + outPos] = (long)in[9 + inPos] & 255L | (long)in[10 + inPos] << 8 & 65535L | (long)in[11 + inPos] << 16 & 262143L;
         out[5 + outPos] = (long)in[11 + inPos] >> 2 & 63L | (long)in[12 + inPos] << 6 & 16383L | (long)in[13 + inPos] << 14 & 262143L;
         out[6 + outPos] = (long)in[13 + inPos] >> 4 & 15L | (long)in[14 + inPos] << 4 & 4095L | (long)in[15 + inPos] << 12 & 262143L;
         out[7 + outPos] = (long)in[15 + inPos] >> 6 & 3L | (long)in[16 + inPos] << 2 & 1023L | (long)in[17 + inPos] << 10 & 262143L;
         out[8 + outPos] = (long)in[18 + inPos] & 255L | (long)in[19 + inPos] << 8 & 65535L | (long)in[20 + inPos] << 16 & 262143L;
         out[9 + outPos] = (long)in[20 + inPos] >> 2 & 63L | (long)in[21 + inPos] << 6 & 16383L | (long)in[22 + inPos] << 14 & 262143L;
         out[10 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 4095L | (long)in[24 + inPos] << 12 & 262143L;
         out[11 + outPos] = (long)in[24 + inPos] >> 6 & 3L | (long)in[25 + inPos] << 2 & 1023L | (long)in[26 + inPos] << 10 & 262143L;
         out[12 + outPos] = (long)in[27 + inPos] & 255L | (long)in[28 + inPos] << 8 & 65535L | (long)in[29 + inPos] << 16 & 262143L;
         out[13 + outPos] = (long)in[29 + inPos] >> 2 & 63L | (long)in[30 + inPos] << 6 & 16383L | (long)in[31 + inPos] << 14 & 262143L;
         out[14 + outPos] = (long)in[31 + inPos] >> 4 & 15L | (long)in[32 + inPos] << 4 & 4095L | (long)in[33 + inPos] << 12 & 262143L;
         out[15 + outPos] = (long)in[33 + inPos] >> 6 & 3L | (long)in[34 + inPos] << 2 & 1023L | (long)in[35 + inPos] << 10 & 262143L;
         out[16 + outPos] = (long)in[36 + inPos] & 255L | (long)in[37 + inPos] << 8 & 65535L | (long)in[38 + inPos] << 16 & 262143L;
         out[17 + outPos] = (long)in[38 + inPos] >> 2 & 63L | (long)in[39 + inPos] << 6 & 16383L | (long)in[40 + inPos] << 14 & 262143L;
         out[18 + outPos] = (long)in[40 + inPos] >> 4 & 15L | (long)in[41 + inPos] << 4 & 4095L | (long)in[42 + inPos] << 12 & 262143L;
         out[19 + outPos] = (long)in[42 + inPos] >> 6 & 3L | (long)in[43 + inPos] << 2 & 1023L | (long)in[44 + inPos] << 10 & 262143L;
         out[20 + outPos] = (long)in[45 + inPos] & 255L | (long)in[46 + inPos] << 8 & 65535L | (long)in[47 + inPos] << 16 & 262143L;
         out[21 + outPos] = (long)in[47 + inPos] >> 2 & 63L | (long)in[48 + inPos] << 6 & 16383L | (long)in[49 + inPos] << 14 & 262143L;
         out[22 + outPos] = (long)in[49 + inPos] >> 4 & 15L | (long)in[50 + inPos] << 4 & 4095L | (long)in[51 + inPos] << 12 & 262143L;
         out[23 + outPos] = (long)in[51 + inPos] >> 6 & 3L | (long)in[52 + inPos] << 2 & 1023L | (long)in[53 + inPos] << 10 & 262143L;
         out[24 + outPos] = (long)in[54 + inPos] & 255L | (long)in[55 + inPos] << 8 & 65535L | (long)in[56 + inPos] << 16 & 262143L;
         out[25 + outPos] = (long)in[56 + inPos] >> 2 & 63L | (long)in[57 + inPos] << 6 & 16383L | (long)in[58 + inPos] << 14 & 262143L;
         out[26 + outPos] = (long)in[58 + inPos] >> 4 & 15L | (long)in[59 + inPos] << 4 & 4095L | (long)in[60 + inPos] << 12 & 262143L;
         out[27 + outPos] = (long)in[60 + inPos] >> 6 & 3L | (long)in[61 + inPos] << 2 & 1023L | (long)in[62 + inPos] << 10 & 262143L;
         out[28 + outPos] = (long)in[63 + inPos] & 255L | (long)in[64 + inPos] << 8 & 65535L | (long)in[65 + inPos] << 16 & 262143L;
         out[29 + outPos] = (long)in[65 + inPos] >> 2 & 63L | (long)in[66 + inPos] << 6 & 16383L | (long)in[67 + inPos] << 14 & 262143L;
         out[30 + outPos] = (long)in[67 + inPos] >> 4 & 15L | (long)in[68 + inPos] << 4 & 4095L | (long)in[69 + inPos] << 12 & 262143L;
         out[31 + outPos] = (long)in[69 + inPos] >> 6 & 3L | (long)in[70 + inPos] << 2 & 1023L | (long)in[71 + inPos] << 10 & 262143L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 262143L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 2 & 63L | (long)in.get(3 + inPos) << 6 & 16383L | (long)in.get(4 + inPos) << 14 & 262143L;
         out[2 + outPos] = (long)in.get(4 + inPos) >> 4 & 15L | (long)in.get(5 + inPos) << 4 & 4095L | (long)in.get(6 + inPos) << 12 & 262143L;
         out[3 + outPos] = (long)in.get(6 + inPos) >> 6 & 3L | (long)in.get(7 + inPos) << 2 & 1023L | (long)in.get(8 + inPos) << 10 & 262143L;
         out[4 + outPos] = (long)in.get(9 + inPos) & 255L | (long)in.get(10 + inPos) << 8 & 65535L | (long)in.get(11 + inPos) << 16 & 262143L;
         out[5 + outPos] = (long)in.get(11 + inPos) >> 2 & 63L | (long)in.get(12 + inPos) << 6 & 16383L | (long)in.get(13 + inPos) << 14 & 262143L;
         out[6 + outPos] = (long)in.get(13 + inPos) >> 4 & 15L | (long)in.get(14 + inPos) << 4 & 4095L | (long)in.get(15 + inPos) << 12 & 262143L;
         out[7 + outPos] = (long)in.get(15 + inPos) >> 6 & 3L | (long)in.get(16 + inPos) << 2 & 1023L | (long)in.get(17 + inPos) << 10 & 262143L;
         out[8 + outPos] = (long)in.get(18 + inPos) & 255L | (long)in.get(19 + inPos) << 8 & 65535L | (long)in.get(20 + inPos) << 16 & 262143L;
         out[9 + outPos] = (long)in.get(20 + inPos) >> 2 & 63L | (long)in.get(21 + inPos) << 6 & 16383L | (long)in.get(22 + inPos) << 14 & 262143L;
         out[10 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 4095L | (long)in.get(24 + inPos) << 12 & 262143L;
         out[11 + outPos] = (long)in.get(24 + inPos) >> 6 & 3L | (long)in.get(25 + inPos) << 2 & 1023L | (long)in.get(26 + inPos) << 10 & 262143L;
         out[12 + outPos] = (long)in.get(27 + inPos) & 255L | (long)in.get(28 + inPos) << 8 & 65535L | (long)in.get(29 + inPos) << 16 & 262143L;
         out[13 + outPos] = (long)in.get(29 + inPos) >> 2 & 63L | (long)in.get(30 + inPos) << 6 & 16383L | (long)in.get(31 + inPos) << 14 & 262143L;
         out[14 + outPos] = (long)in.get(31 + inPos) >> 4 & 15L | (long)in.get(32 + inPos) << 4 & 4095L | (long)in.get(33 + inPos) << 12 & 262143L;
         out[15 + outPos] = (long)in.get(33 + inPos) >> 6 & 3L | (long)in.get(34 + inPos) << 2 & 1023L | (long)in.get(35 + inPos) << 10 & 262143L;
         out[16 + outPos] = (long)in.get(36 + inPos) & 255L | (long)in.get(37 + inPos) << 8 & 65535L | (long)in.get(38 + inPos) << 16 & 262143L;
         out[17 + outPos] = (long)in.get(38 + inPos) >> 2 & 63L | (long)in.get(39 + inPos) << 6 & 16383L | (long)in.get(40 + inPos) << 14 & 262143L;
         out[18 + outPos] = (long)in.get(40 + inPos) >> 4 & 15L | (long)in.get(41 + inPos) << 4 & 4095L | (long)in.get(42 + inPos) << 12 & 262143L;
         out[19 + outPos] = (long)in.get(42 + inPos) >> 6 & 3L | (long)in.get(43 + inPos) << 2 & 1023L | (long)in.get(44 + inPos) << 10 & 262143L;
         out[20 + outPos] = (long)in.get(45 + inPos) & 255L | (long)in.get(46 + inPos) << 8 & 65535L | (long)in.get(47 + inPos) << 16 & 262143L;
         out[21 + outPos] = (long)in.get(47 + inPos) >> 2 & 63L | (long)in.get(48 + inPos) << 6 & 16383L | (long)in.get(49 + inPos) << 14 & 262143L;
         out[22 + outPos] = (long)in.get(49 + inPos) >> 4 & 15L | (long)in.get(50 + inPos) << 4 & 4095L | (long)in.get(51 + inPos) << 12 & 262143L;
         out[23 + outPos] = (long)in.get(51 + inPos) >> 6 & 3L | (long)in.get(52 + inPos) << 2 & 1023L | (long)in.get(53 + inPos) << 10 & 262143L;
         out[24 + outPos] = (long)in.get(54 + inPos) & 255L | (long)in.get(55 + inPos) << 8 & 65535L | (long)in.get(56 + inPos) << 16 & 262143L;
         out[25 + outPos] = (long)in.get(56 + inPos) >> 2 & 63L | (long)in.get(57 + inPos) << 6 & 16383L | (long)in.get(58 + inPos) << 14 & 262143L;
         out[26 + outPos] = (long)in.get(58 + inPos) >> 4 & 15L | (long)in.get(59 + inPos) << 4 & 4095L | (long)in.get(60 + inPos) << 12 & 262143L;
         out[27 + outPos] = (long)in.get(60 + inPos) >> 6 & 3L | (long)in.get(61 + inPos) << 2 & 1023L | (long)in.get(62 + inPos) << 10 & 262143L;
         out[28 + outPos] = (long)in.get(63 + inPos) & 255L | (long)in.get(64 + inPos) << 8 & 65535L | (long)in.get(65 + inPos) << 16 & 262143L;
         out[29 + outPos] = (long)in.get(65 + inPos) >> 2 & 63L | (long)in.get(66 + inPos) << 6 & 16383L | (long)in.get(67 + inPos) << 14 & 262143L;
         out[30 + outPos] = (long)in.get(67 + inPos) >> 4 & 15L | (long)in.get(68 + inPos) << 4 & 4095L | (long)in.get(69 + inPos) << 12 & 262143L;
         out[31 + outPos] = (long)in.get(69 + inPos) >> 6 & 3L | (long)in.get(70 + inPos) << 2 & 1023L | (long)in.get(71 + inPos) << 10 & 262143L;
      }
   }

   private static final class Packer19 extends BytePackerForLong {
      private Packer19() {
         super(19);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 524287L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 524287L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 524287L) >>> 16 | (in[1 + inPos] & 524287L) << 3) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 524287L) >>> 5 & 255L));
         out[4 + outPos] = (byte)((int)(((in[1 + inPos] & 524287L) >>> 13 | (in[2 + inPos] & 524287L) << 6) & 255L));
         out[5 + outPos] = (byte)((int)((in[2 + inPos] & 524287L) >>> 2 & 255L));
         out[6 + outPos] = (byte)((int)((in[2 + inPos] & 524287L) >>> 10 & 255L));
         out[7 + outPos] = (byte)((int)(((in[2 + inPos] & 524287L) >>> 18 | (in[3 + inPos] & 524287L) << 1) & 255L));
         out[8 + outPos] = (byte)((int)((in[3 + inPos] & 524287L) >>> 7 & 255L));
         out[9 + outPos] = (byte)((int)(((in[3 + inPos] & 524287L) >>> 15 | (in[4 + inPos] & 524287L) << 4) & 255L));
         out[10 + outPos] = (byte)((int)((in[4 + inPos] & 524287L) >>> 4 & 255L));
         out[11 + outPos] = (byte)((int)(((in[4 + inPos] & 524287L) >>> 12 | (in[5 + inPos] & 524287L) << 7) & 255L));
         out[12 + outPos] = (byte)((int)((in[5 + inPos] & 524287L) >>> 1 & 255L));
         out[13 + outPos] = (byte)((int)((in[5 + inPos] & 524287L) >>> 9 & 255L));
         out[14 + outPos] = (byte)((int)(((in[5 + inPos] & 524287L) >>> 17 | (in[6 + inPos] & 524287L) << 2) & 255L));
         out[15 + outPos] = (byte)((int)((in[6 + inPos] & 524287L) >>> 6 & 255L));
         out[16 + outPos] = (byte)((int)(((in[6 + inPos] & 524287L) >>> 14 | (in[7 + inPos] & 524287L) << 5) & 255L));
         out[17 + outPos] = (byte)((int)((in[7 + inPos] & 524287L) >>> 3 & 255L));
         out[18 + outPos] = (byte)((int)((in[7 + inPos] & 524287L) >>> 11 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 524287L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 524287L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 524287L) >>> 16 | (in[1 + inPos] & 524287L) << 3) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 524287L) >>> 5 & 255L));
         out[4 + outPos] = (byte)((int)(((in[1 + inPos] & 524287L) >>> 13 | (in[2 + inPos] & 524287L) << 6) & 255L));
         out[5 + outPos] = (byte)((int)((in[2 + inPos] & 524287L) >>> 2 & 255L));
         out[6 + outPos] = (byte)((int)((in[2 + inPos] & 524287L) >>> 10 & 255L));
         out[7 + outPos] = (byte)((int)(((in[2 + inPos] & 524287L) >>> 18 | (in[3 + inPos] & 524287L) << 1) & 255L));
         out[8 + outPos] = (byte)((int)((in[3 + inPos] & 524287L) >>> 7 & 255L));
         out[9 + outPos] = (byte)((int)(((in[3 + inPos] & 524287L) >>> 15 | (in[4 + inPos] & 524287L) << 4) & 255L));
         out[10 + outPos] = (byte)((int)((in[4 + inPos] & 524287L) >>> 4 & 255L));
         out[11 + outPos] = (byte)((int)(((in[4 + inPos] & 524287L) >>> 12 | (in[5 + inPos] & 524287L) << 7) & 255L));
         out[12 + outPos] = (byte)((int)((in[5 + inPos] & 524287L) >>> 1 & 255L));
         out[13 + outPos] = (byte)((int)((in[5 + inPos] & 524287L) >>> 9 & 255L));
         out[14 + outPos] = (byte)((int)(((in[5 + inPos] & 524287L) >>> 17 | (in[6 + inPos] & 524287L) << 2) & 255L));
         out[15 + outPos] = (byte)((int)((in[6 + inPos] & 524287L) >>> 6 & 255L));
         out[16 + outPos] = (byte)((int)(((in[6 + inPos] & 524287L) >>> 14 | (in[7 + inPos] & 524287L) << 5) & 255L));
         out[17 + outPos] = (byte)((int)((in[7 + inPos] & 524287L) >>> 3 & 255L));
         out[18 + outPos] = (byte)((int)((in[7 + inPos] & 524287L) >>> 11 & 255L));
         out[19 + outPos] = (byte)((int)(in[8 + inPos] & 524287L & 255L));
         out[20 + outPos] = (byte)((int)((in[8 + inPos] & 524287L) >>> 8 & 255L));
         out[21 + outPos] = (byte)((int)(((in[8 + inPos] & 524287L) >>> 16 | (in[9 + inPos] & 524287L) << 3) & 255L));
         out[22 + outPos] = (byte)((int)((in[9 + inPos] & 524287L) >>> 5 & 255L));
         out[23 + outPos] = (byte)((int)(((in[9 + inPos] & 524287L) >>> 13 | (in[10 + inPos] & 524287L) << 6) & 255L));
         out[24 + outPos] = (byte)((int)((in[10 + inPos] & 524287L) >>> 2 & 255L));
         out[25 + outPos] = (byte)((int)((in[10 + inPos] & 524287L) >>> 10 & 255L));
         out[26 + outPos] = (byte)((int)(((in[10 + inPos] & 524287L) >>> 18 | (in[11 + inPos] & 524287L) << 1) & 255L));
         out[27 + outPos] = (byte)((int)((in[11 + inPos] & 524287L) >>> 7 & 255L));
         out[28 + outPos] = (byte)((int)(((in[11 + inPos] & 524287L) >>> 15 | (in[12 + inPos] & 524287L) << 4) & 255L));
         out[29 + outPos] = (byte)((int)((in[12 + inPos] & 524287L) >>> 4 & 255L));
         out[30 + outPos] = (byte)((int)(((in[12 + inPos] & 524287L) >>> 12 | (in[13 + inPos] & 524287L) << 7) & 255L));
         out[31 + outPos] = (byte)((int)((in[13 + inPos] & 524287L) >>> 1 & 255L));
         out[32 + outPos] = (byte)((int)((in[13 + inPos] & 524287L) >>> 9 & 255L));
         out[33 + outPos] = (byte)((int)(((in[13 + inPos] & 524287L) >>> 17 | (in[14 + inPos] & 524287L) << 2) & 255L));
         out[34 + outPos] = (byte)((int)((in[14 + inPos] & 524287L) >>> 6 & 255L));
         out[35 + outPos] = (byte)((int)(((in[14 + inPos] & 524287L) >>> 14 | (in[15 + inPos] & 524287L) << 5) & 255L));
         out[36 + outPos] = (byte)((int)((in[15 + inPos] & 524287L) >>> 3 & 255L));
         out[37 + outPos] = (byte)((int)((in[15 + inPos] & 524287L) >>> 11 & 255L));
         out[38 + outPos] = (byte)((int)(in[16 + inPos] & 524287L & 255L));
         out[39 + outPos] = (byte)((int)((in[16 + inPos] & 524287L) >>> 8 & 255L));
         out[40 + outPos] = (byte)((int)(((in[16 + inPos] & 524287L) >>> 16 | (in[17 + inPos] & 524287L) << 3) & 255L));
         out[41 + outPos] = (byte)((int)((in[17 + inPos] & 524287L) >>> 5 & 255L));
         out[42 + outPos] = (byte)((int)(((in[17 + inPos] & 524287L) >>> 13 | (in[18 + inPos] & 524287L) << 6) & 255L));
         out[43 + outPos] = (byte)((int)((in[18 + inPos] & 524287L) >>> 2 & 255L));
         out[44 + outPos] = (byte)((int)((in[18 + inPos] & 524287L) >>> 10 & 255L));
         out[45 + outPos] = (byte)((int)(((in[18 + inPos] & 524287L) >>> 18 | (in[19 + inPos] & 524287L) << 1) & 255L));
         out[46 + outPos] = (byte)((int)((in[19 + inPos] & 524287L) >>> 7 & 255L));
         out[47 + outPos] = (byte)((int)(((in[19 + inPos] & 524287L) >>> 15 | (in[20 + inPos] & 524287L) << 4) & 255L));
         out[48 + outPos] = (byte)((int)((in[20 + inPos] & 524287L) >>> 4 & 255L));
         out[49 + outPos] = (byte)((int)(((in[20 + inPos] & 524287L) >>> 12 | (in[21 + inPos] & 524287L) << 7) & 255L));
         out[50 + outPos] = (byte)((int)((in[21 + inPos] & 524287L) >>> 1 & 255L));
         out[51 + outPos] = (byte)((int)((in[21 + inPos] & 524287L) >>> 9 & 255L));
         out[52 + outPos] = (byte)((int)(((in[21 + inPos] & 524287L) >>> 17 | (in[22 + inPos] & 524287L) << 2) & 255L));
         out[53 + outPos] = (byte)((int)((in[22 + inPos] & 524287L) >>> 6 & 255L));
         out[54 + outPos] = (byte)((int)(((in[22 + inPos] & 524287L) >>> 14 | (in[23 + inPos] & 524287L) << 5) & 255L));
         out[55 + outPos] = (byte)((int)((in[23 + inPos] & 524287L) >>> 3 & 255L));
         out[56 + outPos] = (byte)((int)((in[23 + inPos] & 524287L) >>> 11 & 255L));
         out[57 + outPos] = (byte)((int)(in[24 + inPos] & 524287L & 255L));
         out[58 + outPos] = (byte)((int)((in[24 + inPos] & 524287L) >>> 8 & 255L));
         out[59 + outPos] = (byte)((int)(((in[24 + inPos] & 524287L) >>> 16 | (in[25 + inPos] & 524287L) << 3) & 255L));
         out[60 + outPos] = (byte)((int)((in[25 + inPos] & 524287L) >>> 5 & 255L));
         out[61 + outPos] = (byte)((int)(((in[25 + inPos] & 524287L) >>> 13 | (in[26 + inPos] & 524287L) << 6) & 255L));
         out[62 + outPos] = (byte)((int)((in[26 + inPos] & 524287L) >>> 2 & 255L));
         out[63 + outPos] = (byte)((int)((in[26 + inPos] & 524287L) >>> 10 & 255L));
         out[64 + outPos] = (byte)((int)(((in[26 + inPos] & 524287L) >>> 18 | (in[27 + inPos] & 524287L) << 1) & 255L));
         out[65 + outPos] = (byte)((int)((in[27 + inPos] & 524287L) >>> 7 & 255L));
         out[66 + outPos] = (byte)((int)(((in[27 + inPos] & 524287L) >>> 15 | (in[28 + inPos] & 524287L) << 4) & 255L));
         out[67 + outPos] = (byte)((int)((in[28 + inPos] & 524287L) >>> 4 & 255L));
         out[68 + outPos] = (byte)((int)(((in[28 + inPos] & 524287L) >>> 12 | (in[29 + inPos] & 524287L) << 7) & 255L));
         out[69 + outPos] = (byte)((int)((in[29 + inPos] & 524287L) >>> 1 & 255L));
         out[70 + outPos] = (byte)((int)((in[29 + inPos] & 524287L) >>> 9 & 255L));
         out[71 + outPos] = (byte)((int)(((in[29 + inPos] & 524287L) >>> 17 | (in[30 + inPos] & 524287L) << 2) & 255L));
         out[72 + outPos] = (byte)((int)((in[30 + inPos] & 524287L) >>> 6 & 255L));
         out[73 + outPos] = (byte)((int)(((in[30 + inPos] & 524287L) >>> 14 | (in[31 + inPos] & 524287L) << 5) & 255L));
         out[74 + outPos] = (byte)((int)((in[31 + inPos] & 524287L) >>> 3 & 255L));
         out[75 + outPos] = (byte)((int)((in[31 + inPos] & 524287L) >>> 11 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 524287L;
         out[1 + outPos] = (long)in[2 + inPos] >> 3 & 31L | (long)in[3 + inPos] << 5 & 8191L | (long)in[4 + inPos] << 13 & 524287L;
         out[2 + outPos] = (long)in[4 + inPos] >> 6 & 3L | (long)in[5 + inPos] << 2 & 1023L | (long)in[6 + inPos] << 10 & 262143L | (long)in[7 + inPos] << 18 & 524287L;
         out[3 + outPos] = (long)in[7 + inPos] >> 1 & 127L | (long)in[8 + inPos] << 7 & 32767L | (long)in[9 + inPos] << 15 & 524287L;
         out[4 + outPos] = (long)in[9 + inPos] >> 4 & 15L | (long)in[10 + inPos] << 4 & 4095L | (long)in[11 + inPos] << 12 & 524287L;
         out[5 + outPos] = (long)in[11 + inPos] >> 7 & 1L | (long)in[12 + inPos] << 1 & 511L | (long)in[13 + inPos] << 9 & 131071L | (long)in[14 + inPos] << 17 & 524287L;
         out[6 + outPos] = (long)in[14 + inPos] >> 2 & 63L | (long)in[15 + inPos] << 6 & 16383L | (long)in[16 + inPos] << 14 & 524287L;
         out[7 + outPos] = (long)in[16 + inPos] >> 5 & 7L | (long)in[17 + inPos] << 3 & 2047L | (long)in[18 + inPos] << 11 & 524287L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 524287L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 3 & 31L | (long)in.get(3 + inPos) << 5 & 8191L | (long)in.get(4 + inPos) << 13 & 524287L;
         out[2 + outPos] = (long)in.get(4 + inPos) >> 6 & 3L | (long)in.get(5 + inPos) << 2 & 1023L | (long)in.get(6 + inPos) << 10 & 262143L | (long)in.get(7 + inPos) << 18 & 524287L;
         out[3 + outPos] = (long)in.get(7 + inPos) >> 1 & 127L | (long)in.get(8 + inPos) << 7 & 32767L | (long)in.get(9 + inPos) << 15 & 524287L;
         out[4 + outPos] = (long)in.get(9 + inPos) >> 4 & 15L | (long)in.get(10 + inPos) << 4 & 4095L | (long)in.get(11 + inPos) << 12 & 524287L;
         out[5 + outPos] = (long)in.get(11 + inPos) >> 7 & 1L | (long)in.get(12 + inPos) << 1 & 511L | (long)in.get(13 + inPos) << 9 & 131071L | (long)in.get(14 + inPos) << 17 & 524287L;
         out[6 + outPos] = (long)in.get(14 + inPos) >> 2 & 63L | (long)in.get(15 + inPos) << 6 & 16383L | (long)in.get(16 + inPos) << 14 & 524287L;
         out[7 + outPos] = (long)in.get(16 + inPos) >> 5 & 7L | (long)in.get(17 + inPos) << 3 & 2047L | (long)in.get(18 + inPos) << 11 & 524287L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 524287L;
         out[1 + outPos] = (long)in[2 + inPos] >> 3 & 31L | (long)in[3 + inPos] << 5 & 8191L | (long)in[4 + inPos] << 13 & 524287L;
         out[2 + outPos] = (long)in[4 + inPos] >> 6 & 3L | (long)in[5 + inPos] << 2 & 1023L | (long)in[6 + inPos] << 10 & 262143L | (long)in[7 + inPos] << 18 & 524287L;
         out[3 + outPos] = (long)in[7 + inPos] >> 1 & 127L | (long)in[8 + inPos] << 7 & 32767L | (long)in[9 + inPos] << 15 & 524287L;
         out[4 + outPos] = (long)in[9 + inPos] >> 4 & 15L | (long)in[10 + inPos] << 4 & 4095L | (long)in[11 + inPos] << 12 & 524287L;
         out[5 + outPos] = (long)in[11 + inPos] >> 7 & 1L | (long)in[12 + inPos] << 1 & 511L | (long)in[13 + inPos] << 9 & 131071L | (long)in[14 + inPos] << 17 & 524287L;
         out[6 + outPos] = (long)in[14 + inPos] >> 2 & 63L | (long)in[15 + inPos] << 6 & 16383L | (long)in[16 + inPos] << 14 & 524287L;
         out[7 + outPos] = (long)in[16 + inPos] >> 5 & 7L | (long)in[17 + inPos] << 3 & 2047L | (long)in[18 + inPos] << 11 & 524287L;
         out[8 + outPos] = (long)in[19 + inPos] & 255L | (long)in[20 + inPos] << 8 & 65535L | (long)in[21 + inPos] << 16 & 524287L;
         out[9 + outPos] = (long)in[21 + inPos] >> 3 & 31L | (long)in[22 + inPos] << 5 & 8191L | (long)in[23 + inPos] << 13 & 524287L;
         out[10 + outPos] = (long)in[23 + inPos] >> 6 & 3L | (long)in[24 + inPos] << 2 & 1023L | (long)in[25 + inPos] << 10 & 262143L | (long)in[26 + inPos] << 18 & 524287L;
         out[11 + outPos] = (long)in[26 + inPos] >> 1 & 127L | (long)in[27 + inPos] << 7 & 32767L | (long)in[28 + inPos] << 15 & 524287L;
         out[12 + outPos] = (long)in[28 + inPos] >> 4 & 15L | (long)in[29 + inPos] << 4 & 4095L | (long)in[30 + inPos] << 12 & 524287L;
         out[13 + outPos] = (long)in[30 + inPos] >> 7 & 1L | (long)in[31 + inPos] << 1 & 511L | (long)in[32 + inPos] << 9 & 131071L | (long)in[33 + inPos] << 17 & 524287L;
         out[14 + outPos] = (long)in[33 + inPos] >> 2 & 63L | (long)in[34 + inPos] << 6 & 16383L | (long)in[35 + inPos] << 14 & 524287L;
         out[15 + outPos] = (long)in[35 + inPos] >> 5 & 7L | (long)in[36 + inPos] << 3 & 2047L | (long)in[37 + inPos] << 11 & 524287L;
         out[16 + outPos] = (long)in[38 + inPos] & 255L | (long)in[39 + inPos] << 8 & 65535L | (long)in[40 + inPos] << 16 & 524287L;
         out[17 + outPos] = (long)in[40 + inPos] >> 3 & 31L | (long)in[41 + inPos] << 5 & 8191L | (long)in[42 + inPos] << 13 & 524287L;
         out[18 + outPos] = (long)in[42 + inPos] >> 6 & 3L | (long)in[43 + inPos] << 2 & 1023L | (long)in[44 + inPos] << 10 & 262143L | (long)in[45 + inPos] << 18 & 524287L;
         out[19 + outPos] = (long)in[45 + inPos] >> 1 & 127L | (long)in[46 + inPos] << 7 & 32767L | (long)in[47 + inPos] << 15 & 524287L;
         out[20 + outPos] = (long)in[47 + inPos] >> 4 & 15L | (long)in[48 + inPos] << 4 & 4095L | (long)in[49 + inPos] << 12 & 524287L;
         out[21 + outPos] = (long)in[49 + inPos] >> 7 & 1L | (long)in[50 + inPos] << 1 & 511L | (long)in[51 + inPos] << 9 & 131071L | (long)in[52 + inPos] << 17 & 524287L;
         out[22 + outPos] = (long)in[52 + inPos] >> 2 & 63L | (long)in[53 + inPos] << 6 & 16383L | (long)in[54 + inPos] << 14 & 524287L;
         out[23 + outPos] = (long)in[54 + inPos] >> 5 & 7L | (long)in[55 + inPos] << 3 & 2047L | (long)in[56 + inPos] << 11 & 524287L;
         out[24 + outPos] = (long)in[57 + inPos] & 255L | (long)in[58 + inPos] << 8 & 65535L | (long)in[59 + inPos] << 16 & 524287L;
         out[25 + outPos] = (long)in[59 + inPos] >> 3 & 31L | (long)in[60 + inPos] << 5 & 8191L | (long)in[61 + inPos] << 13 & 524287L;
         out[26 + outPos] = (long)in[61 + inPos] >> 6 & 3L | (long)in[62 + inPos] << 2 & 1023L | (long)in[63 + inPos] << 10 & 262143L | (long)in[64 + inPos] << 18 & 524287L;
         out[27 + outPos] = (long)in[64 + inPos] >> 1 & 127L | (long)in[65 + inPos] << 7 & 32767L | (long)in[66 + inPos] << 15 & 524287L;
         out[28 + outPos] = (long)in[66 + inPos] >> 4 & 15L | (long)in[67 + inPos] << 4 & 4095L | (long)in[68 + inPos] << 12 & 524287L;
         out[29 + outPos] = (long)in[68 + inPos] >> 7 & 1L | (long)in[69 + inPos] << 1 & 511L | (long)in[70 + inPos] << 9 & 131071L | (long)in[71 + inPos] << 17 & 524287L;
         out[30 + outPos] = (long)in[71 + inPos] >> 2 & 63L | (long)in[72 + inPos] << 6 & 16383L | (long)in[73 + inPos] << 14 & 524287L;
         out[31 + outPos] = (long)in[73 + inPos] >> 5 & 7L | (long)in[74 + inPos] << 3 & 2047L | (long)in[75 + inPos] << 11 & 524287L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 524287L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 3 & 31L | (long)in.get(3 + inPos) << 5 & 8191L | (long)in.get(4 + inPos) << 13 & 524287L;
         out[2 + outPos] = (long)in.get(4 + inPos) >> 6 & 3L | (long)in.get(5 + inPos) << 2 & 1023L | (long)in.get(6 + inPos) << 10 & 262143L | (long)in.get(7 + inPos) << 18 & 524287L;
         out[3 + outPos] = (long)in.get(7 + inPos) >> 1 & 127L | (long)in.get(8 + inPos) << 7 & 32767L | (long)in.get(9 + inPos) << 15 & 524287L;
         out[4 + outPos] = (long)in.get(9 + inPos) >> 4 & 15L | (long)in.get(10 + inPos) << 4 & 4095L | (long)in.get(11 + inPos) << 12 & 524287L;
         out[5 + outPos] = (long)in.get(11 + inPos) >> 7 & 1L | (long)in.get(12 + inPos) << 1 & 511L | (long)in.get(13 + inPos) << 9 & 131071L | (long)in.get(14 + inPos) << 17 & 524287L;
         out[6 + outPos] = (long)in.get(14 + inPos) >> 2 & 63L | (long)in.get(15 + inPos) << 6 & 16383L | (long)in.get(16 + inPos) << 14 & 524287L;
         out[7 + outPos] = (long)in.get(16 + inPos) >> 5 & 7L | (long)in.get(17 + inPos) << 3 & 2047L | (long)in.get(18 + inPos) << 11 & 524287L;
         out[8 + outPos] = (long)in.get(19 + inPos) & 255L | (long)in.get(20 + inPos) << 8 & 65535L | (long)in.get(21 + inPos) << 16 & 524287L;
         out[9 + outPos] = (long)in.get(21 + inPos) >> 3 & 31L | (long)in.get(22 + inPos) << 5 & 8191L | (long)in.get(23 + inPos) << 13 & 524287L;
         out[10 + outPos] = (long)in.get(23 + inPos) >> 6 & 3L | (long)in.get(24 + inPos) << 2 & 1023L | (long)in.get(25 + inPos) << 10 & 262143L | (long)in.get(26 + inPos) << 18 & 524287L;
         out[11 + outPos] = (long)in.get(26 + inPos) >> 1 & 127L | (long)in.get(27 + inPos) << 7 & 32767L | (long)in.get(28 + inPos) << 15 & 524287L;
         out[12 + outPos] = (long)in.get(28 + inPos) >> 4 & 15L | (long)in.get(29 + inPos) << 4 & 4095L | (long)in.get(30 + inPos) << 12 & 524287L;
         out[13 + outPos] = (long)in.get(30 + inPos) >> 7 & 1L | (long)in.get(31 + inPos) << 1 & 511L | (long)in.get(32 + inPos) << 9 & 131071L | (long)in.get(33 + inPos) << 17 & 524287L;
         out[14 + outPos] = (long)in.get(33 + inPos) >> 2 & 63L | (long)in.get(34 + inPos) << 6 & 16383L | (long)in.get(35 + inPos) << 14 & 524287L;
         out[15 + outPos] = (long)in.get(35 + inPos) >> 5 & 7L | (long)in.get(36 + inPos) << 3 & 2047L | (long)in.get(37 + inPos) << 11 & 524287L;
         out[16 + outPos] = (long)in.get(38 + inPos) & 255L | (long)in.get(39 + inPos) << 8 & 65535L | (long)in.get(40 + inPos) << 16 & 524287L;
         out[17 + outPos] = (long)in.get(40 + inPos) >> 3 & 31L | (long)in.get(41 + inPos) << 5 & 8191L | (long)in.get(42 + inPos) << 13 & 524287L;
         out[18 + outPos] = (long)in.get(42 + inPos) >> 6 & 3L | (long)in.get(43 + inPos) << 2 & 1023L | (long)in.get(44 + inPos) << 10 & 262143L | (long)in.get(45 + inPos) << 18 & 524287L;
         out[19 + outPos] = (long)in.get(45 + inPos) >> 1 & 127L | (long)in.get(46 + inPos) << 7 & 32767L | (long)in.get(47 + inPos) << 15 & 524287L;
         out[20 + outPos] = (long)in.get(47 + inPos) >> 4 & 15L | (long)in.get(48 + inPos) << 4 & 4095L | (long)in.get(49 + inPos) << 12 & 524287L;
         out[21 + outPos] = (long)in.get(49 + inPos) >> 7 & 1L | (long)in.get(50 + inPos) << 1 & 511L | (long)in.get(51 + inPos) << 9 & 131071L | (long)in.get(52 + inPos) << 17 & 524287L;
         out[22 + outPos] = (long)in.get(52 + inPos) >> 2 & 63L | (long)in.get(53 + inPos) << 6 & 16383L | (long)in.get(54 + inPos) << 14 & 524287L;
         out[23 + outPos] = (long)in.get(54 + inPos) >> 5 & 7L | (long)in.get(55 + inPos) << 3 & 2047L | (long)in.get(56 + inPos) << 11 & 524287L;
         out[24 + outPos] = (long)in.get(57 + inPos) & 255L | (long)in.get(58 + inPos) << 8 & 65535L | (long)in.get(59 + inPos) << 16 & 524287L;
         out[25 + outPos] = (long)in.get(59 + inPos) >> 3 & 31L | (long)in.get(60 + inPos) << 5 & 8191L | (long)in.get(61 + inPos) << 13 & 524287L;
         out[26 + outPos] = (long)in.get(61 + inPos) >> 6 & 3L | (long)in.get(62 + inPos) << 2 & 1023L | (long)in.get(63 + inPos) << 10 & 262143L | (long)in.get(64 + inPos) << 18 & 524287L;
         out[27 + outPos] = (long)in.get(64 + inPos) >> 1 & 127L | (long)in.get(65 + inPos) << 7 & 32767L | (long)in.get(66 + inPos) << 15 & 524287L;
         out[28 + outPos] = (long)in.get(66 + inPos) >> 4 & 15L | (long)in.get(67 + inPos) << 4 & 4095L | (long)in.get(68 + inPos) << 12 & 524287L;
         out[29 + outPos] = (long)in.get(68 + inPos) >> 7 & 1L | (long)in.get(69 + inPos) << 1 & 511L | (long)in.get(70 + inPos) << 9 & 131071L | (long)in.get(71 + inPos) << 17 & 524287L;
         out[30 + outPos] = (long)in.get(71 + inPos) >> 2 & 63L | (long)in.get(72 + inPos) << 6 & 16383L | (long)in.get(73 + inPos) << 14 & 524287L;
         out[31 + outPos] = (long)in.get(73 + inPos) >> 5 & 7L | (long)in.get(74 + inPos) << 3 & 2047L | (long)in.get(75 + inPos) << 11 & 524287L;
      }
   }

   private static final class Packer20 extends BytePackerForLong {
      private Packer20() {
         super(20);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 1048575L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 1048575L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 1048575L) >>> 16 | (in[1 + inPos] & 1048575L) << 4) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 1048575L) >>> 4 & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 1048575L) >>> 12 & 255L));
         out[5 + outPos] = (byte)((int)(in[2 + inPos] & 1048575L & 255L));
         out[6 + outPos] = (byte)((int)((in[2 + inPos] & 1048575L) >>> 8 & 255L));
         out[7 + outPos] = (byte)((int)(((in[2 + inPos] & 1048575L) >>> 16 | (in[3 + inPos] & 1048575L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)((in[3 + inPos] & 1048575L) >>> 4 & 255L));
         out[9 + outPos] = (byte)((int)((in[3 + inPos] & 1048575L) >>> 12 & 255L));
         out[10 + outPos] = (byte)((int)(in[4 + inPos] & 1048575L & 255L));
         out[11 + outPos] = (byte)((int)((in[4 + inPos] & 1048575L) >>> 8 & 255L));
         out[12 + outPos] = (byte)((int)(((in[4 + inPos] & 1048575L) >>> 16 | (in[5 + inPos] & 1048575L) << 4) & 255L));
         out[13 + outPos] = (byte)((int)((in[5 + inPos] & 1048575L) >>> 4 & 255L));
         out[14 + outPos] = (byte)((int)((in[5 + inPos] & 1048575L) >>> 12 & 255L));
         out[15 + outPos] = (byte)((int)(in[6 + inPos] & 1048575L & 255L));
         out[16 + outPos] = (byte)((int)((in[6 + inPos] & 1048575L) >>> 8 & 255L));
         out[17 + outPos] = (byte)((int)(((in[6 + inPos] & 1048575L) >>> 16 | (in[7 + inPos] & 1048575L) << 4) & 255L));
         out[18 + outPos] = (byte)((int)((in[7 + inPos] & 1048575L) >>> 4 & 255L));
         out[19 + outPos] = (byte)((int)((in[7 + inPos] & 1048575L) >>> 12 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 1048575L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 1048575L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 1048575L) >>> 16 | (in[1 + inPos] & 1048575L) << 4) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 1048575L) >>> 4 & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 1048575L) >>> 12 & 255L));
         out[5 + outPos] = (byte)((int)(in[2 + inPos] & 1048575L & 255L));
         out[6 + outPos] = (byte)((int)((in[2 + inPos] & 1048575L) >>> 8 & 255L));
         out[7 + outPos] = (byte)((int)(((in[2 + inPos] & 1048575L) >>> 16 | (in[3 + inPos] & 1048575L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)((in[3 + inPos] & 1048575L) >>> 4 & 255L));
         out[9 + outPos] = (byte)((int)((in[3 + inPos] & 1048575L) >>> 12 & 255L));
         out[10 + outPos] = (byte)((int)(in[4 + inPos] & 1048575L & 255L));
         out[11 + outPos] = (byte)((int)((in[4 + inPos] & 1048575L) >>> 8 & 255L));
         out[12 + outPos] = (byte)((int)(((in[4 + inPos] & 1048575L) >>> 16 | (in[5 + inPos] & 1048575L) << 4) & 255L));
         out[13 + outPos] = (byte)((int)((in[5 + inPos] & 1048575L) >>> 4 & 255L));
         out[14 + outPos] = (byte)((int)((in[5 + inPos] & 1048575L) >>> 12 & 255L));
         out[15 + outPos] = (byte)((int)(in[6 + inPos] & 1048575L & 255L));
         out[16 + outPos] = (byte)((int)((in[6 + inPos] & 1048575L) >>> 8 & 255L));
         out[17 + outPos] = (byte)((int)(((in[6 + inPos] & 1048575L) >>> 16 | (in[7 + inPos] & 1048575L) << 4) & 255L));
         out[18 + outPos] = (byte)((int)((in[7 + inPos] & 1048575L) >>> 4 & 255L));
         out[19 + outPos] = (byte)((int)((in[7 + inPos] & 1048575L) >>> 12 & 255L));
         out[20 + outPos] = (byte)((int)(in[8 + inPos] & 1048575L & 255L));
         out[21 + outPos] = (byte)((int)((in[8 + inPos] & 1048575L) >>> 8 & 255L));
         out[22 + outPos] = (byte)((int)(((in[8 + inPos] & 1048575L) >>> 16 | (in[9 + inPos] & 1048575L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)((in[9 + inPos] & 1048575L) >>> 4 & 255L));
         out[24 + outPos] = (byte)((int)((in[9 + inPos] & 1048575L) >>> 12 & 255L));
         out[25 + outPos] = (byte)((int)(in[10 + inPos] & 1048575L & 255L));
         out[26 + outPos] = (byte)((int)((in[10 + inPos] & 1048575L) >>> 8 & 255L));
         out[27 + outPos] = (byte)((int)(((in[10 + inPos] & 1048575L) >>> 16 | (in[11 + inPos] & 1048575L) << 4) & 255L));
         out[28 + outPos] = (byte)((int)((in[11 + inPos] & 1048575L) >>> 4 & 255L));
         out[29 + outPos] = (byte)((int)((in[11 + inPos] & 1048575L) >>> 12 & 255L));
         out[30 + outPos] = (byte)((int)(in[12 + inPos] & 1048575L & 255L));
         out[31 + outPos] = (byte)((int)((in[12 + inPos] & 1048575L) >>> 8 & 255L));
         out[32 + outPos] = (byte)((int)(((in[12 + inPos] & 1048575L) >>> 16 | (in[13 + inPos] & 1048575L) << 4) & 255L));
         out[33 + outPos] = (byte)((int)((in[13 + inPos] & 1048575L) >>> 4 & 255L));
         out[34 + outPos] = (byte)((int)((in[13 + inPos] & 1048575L) >>> 12 & 255L));
         out[35 + outPos] = (byte)((int)(in[14 + inPos] & 1048575L & 255L));
         out[36 + outPos] = (byte)((int)((in[14 + inPos] & 1048575L) >>> 8 & 255L));
         out[37 + outPos] = (byte)((int)(((in[14 + inPos] & 1048575L) >>> 16 | (in[15 + inPos] & 1048575L) << 4) & 255L));
         out[38 + outPos] = (byte)((int)((in[15 + inPos] & 1048575L) >>> 4 & 255L));
         out[39 + outPos] = (byte)((int)((in[15 + inPos] & 1048575L) >>> 12 & 255L));
         out[40 + outPos] = (byte)((int)(in[16 + inPos] & 1048575L & 255L));
         out[41 + outPos] = (byte)((int)((in[16 + inPos] & 1048575L) >>> 8 & 255L));
         out[42 + outPos] = (byte)((int)(((in[16 + inPos] & 1048575L) >>> 16 | (in[17 + inPos] & 1048575L) << 4) & 255L));
         out[43 + outPos] = (byte)((int)((in[17 + inPos] & 1048575L) >>> 4 & 255L));
         out[44 + outPos] = (byte)((int)((in[17 + inPos] & 1048575L) >>> 12 & 255L));
         out[45 + outPos] = (byte)((int)(in[18 + inPos] & 1048575L & 255L));
         out[46 + outPos] = (byte)((int)((in[18 + inPos] & 1048575L) >>> 8 & 255L));
         out[47 + outPos] = (byte)((int)(((in[18 + inPos] & 1048575L) >>> 16 | (in[19 + inPos] & 1048575L) << 4) & 255L));
         out[48 + outPos] = (byte)((int)((in[19 + inPos] & 1048575L) >>> 4 & 255L));
         out[49 + outPos] = (byte)((int)((in[19 + inPos] & 1048575L) >>> 12 & 255L));
         out[50 + outPos] = (byte)((int)(in[20 + inPos] & 1048575L & 255L));
         out[51 + outPos] = (byte)((int)((in[20 + inPos] & 1048575L) >>> 8 & 255L));
         out[52 + outPos] = (byte)((int)(((in[20 + inPos] & 1048575L) >>> 16 | (in[21 + inPos] & 1048575L) << 4) & 255L));
         out[53 + outPos] = (byte)((int)((in[21 + inPos] & 1048575L) >>> 4 & 255L));
         out[54 + outPos] = (byte)((int)((in[21 + inPos] & 1048575L) >>> 12 & 255L));
         out[55 + outPos] = (byte)((int)(in[22 + inPos] & 1048575L & 255L));
         out[56 + outPos] = (byte)((int)((in[22 + inPos] & 1048575L) >>> 8 & 255L));
         out[57 + outPos] = (byte)((int)(((in[22 + inPos] & 1048575L) >>> 16 | (in[23 + inPos] & 1048575L) << 4) & 255L));
         out[58 + outPos] = (byte)((int)((in[23 + inPos] & 1048575L) >>> 4 & 255L));
         out[59 + outPos] = (byte)((int)((in[23 + inPos] & 1048575L) >>> 12 & 255L));
         out[60 + outPos] = (byte)((int)(in[24 + inPos] & 1048575L & 255L));
         out[61 + outPos] = (byte)((int)((in[24 + inPos] & 1048575L) >>> 8 & 255L));
         out[62 + outPos] = (byte)((int)(((in[24 + inPos] & 1048575L) >>> 16 | (in[25 + inPos] & 1048575L) << 4) & 255L));
         out[63 + outPos] = (byte)((int)((in[25 + inPos] & 1048575L) >>> 4 & 255L));
         out[64 + outPos] = (byte)((int)((in[25 + inPos] & 1048575L) >>> 12 & 255L));
         out[65 + outPos] = (byte)((int)(in[26 + inPos] & 1048575L & 255L));
         out[66 + outPos] = (byte)((int)((in[26 + inPos] & 1048575L) >>> 8 & 255L));
         out[67 + outPos] = (byte)((int)(((in[26 + inPos] & 1048575L) >>> 16 | (in[27 + inPos] & 1048575L) << 4) & 255L));
         out[68 + outPos] = (byte)((int)((in[27 + inPos] & 1048575L) >>> 4 & 255L));
         out[69 + outPos] = (byte)((int)((in[27 + inPos] & 1048575L) >>> 12 & 255L));
         out[70 + outPos] = (byte)((int)(in[28 + inPos] & 1048575L & 255L));
         out[71 + outPos] = (byte)((int)((in[28 + inPos] & 1048575L) >>> 8 & 255L));
         out[72 + outPos] = (byte)((int)(((in[28 + inPos] & 1048575L) >>> 16 | (in[29 + inPos] & 1048575L) << 4) & 255L));
         out[73 + outPos] = (byte)((int)((in[29 + inPos] & 1048575L) >>> 4 & 255L));
         out[74 + outPos] = (byte)((int)((in[29 + inPos] & 1048575L) >>> 12 & 255L));
         out[75 + outPos] = (byte)((int)(in[30 + inPos] & 1048575L & 255L));
         out[76 + outPos] = (byte)((int)((in[30 + inPos] & 1048575L) >>> 8 & 255L));
         out[77 + outPos] = (byte)((int)(((in[30 + inPos] & 1048575L) >>> 16 | (in[31 + inPos] & 1048575L) << 4) & 255L));
         out[78 + outPos] = (byte)((int)((in[31 + inPos] & 1048575L) >>> 4 & 255L));
         out[79 + outPos] = (byte)((int)((in[31 + inPos] & 1048575L) >>> 12 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 1048575L;
         out[1 + outPos] = (long)in[2 + inPos] >> 4 & 15L | (long)in[3 + inPos] << 4 & 4095L | (long)in[4 + inPos] << 12 & 1048575L;
         out[2 + outPos] = (long)in[5 + inPos] & 255L | (long)in[6 + inPos] << 8 & 65535L | (long)in[7 + inPos] << 16 & 1048575L;
         out[3 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 4095L | (long)in[9 + inPos] << 12 & 1048575L;
         out[4 + outPos] = (long)in[10 + inPos] & 255L | (long)in[11 + inPos] << 8 & 65535L | (long)in[12 + inPos] << 16 & 1048575L;
         out[5 + outPos] = (long)in[12 + inPos] >> 4 & 15L | (long)in[13 + inPos] << 4 & 4095L | (long)in[14 + inPos] << 12 & 1048575L;
         out[6 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 65535L | (long)in[17 + inPos] << 16 & 1048575L;
         out[7 + outPos] = (long)in[17 + inPos] >> 4 & 15L | (long)in[18 + inPos] << 4 & 4095L | (long)in[19 + inPos] << 12 & 1048575L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 1048575L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 4 & 15L | (long)in.get(3 + inPos) << 4 & 4095L | (long)in.get(4 + inPos) << 12 & 1048575L;
         out[2 + outPos] = (long)in.get(5 + inPos) & 255L | (long)in.get(6 + inPos) << 8 & 65535L | (long)in.get(7 + inPos) << 16 & 1048575L;
         out[3 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 4095L | (long)in.get(9 + inPos) << 12 & 1048575L;
         out[4 + outPos] = (long)in.get(10 + inPos) & 255L | (long)in.get(11 + inPos) << 8 & 65535L | (long)in.get(12 + inPos) << 16 & 1048575L;
         out[5 + outPos] = (long)in.get(12 + inPos) >> 4 & 15L | (long)in.get(13 + inPos) << 4 & 4095L | (long)in.get(14 + inPos) << 12 & 1048575L;
         out[6 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 65535L | (long)in.get(17 + inPos) << 16 & 1048575L;
         out[7 + outPos] = (long)in.get(17 + inPos) >> 4 & 15L | (long)in.get(18 + inPos) << 4 & 4095L | (long)in.get(19 + inPos) << 12 & 1048575L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 1048575L;
         out[1 + outPos] = (long)in[2 + inPos] >> 4 & 15L | (long)in[3 + inPos] << 4 & 4095L | (long)in[4 + inPos] << 12 & 1048575L;
         out[2 + outPos] = (long)in[5 + inPos] & 255L | (long)in[6 + inPos] << 8 & 65535L | (long)in[7 + inPos] << 16 & 1048575L;
         out[3 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 4095L | (long)in[9 + inPos] << 12 & 1048575L;
         out[4 + outPos] = (long)in[10 + inPos] & 255L | (long)in[11 + inPos] << 8 & 65535L | (long)in[12 + inPos] << 16 & 1048575L;
         out[5 + outPos] = (long)in[12 + inPos] >> 4 & 15L | (long)in[13 + inPos] << 4 & 4095L | (long)in[14 + inPos] << 12 & 1048575L;
         out[6 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 65535L | (long)in[17 + inPos] << 16 & 1048575L;
         out[7 + outPos] = (long)in[17 + inPos] >> 4 & 15L | (long)in[18 + inPos] << 4 & 4095L | (long)in[19 + inPos] << 12 & 1048575L;
         out[8 + outPos] = (long)in[20 + inPos] & 255L | (long)in[21 + inPos] << 8 & 65535L | (long)in[22 + inPos] << 16 & 1048575L;
         out[9 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 4095L | (long)in[24 + inPos] << 12 & 1048575L;
         out[10 + outPos] = (long)in[25 + inPos] & 255L | (long)in[26 + inPos] << 8 & 65535L | (long)in[27 + inPos] << 16 & 1048575L;
         out[11 + outPos] = (long)in[27 + inPos] >> 4 & 15L | (long)in[28 + inPos] << 4 & 4095L | (long)in[29 + inPos] << 12 & 1048575L;
         out[12 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 65535L | (long)in[32 + inPos] << 16 & 1048575L;
         out[13 + outPos] = (long)in[32 + inPos] >> 4 & 15L | (long)in[33 + inPos] << 4 & 4095L | (long)in[34 + inPos] << 12 & 1048575L;
         out[14 + outPos] = (long)in[35 + inPos] & 255L | (long)in[36 + inPos] << 8 & 65535L | (long)in[37 + inPos] << 16 & 1048575L;
         out[15 + outPos] = (long)in[37 + inPos] >> 4 & 15L | (long)in[38 + inPos] << 4 & 4095L | (long)in[39 + inPos] << 12 & 1048575L;
         out[16 + outPos] = (long)in[40 + inPos] & 255L | (long)in[41 + inPos] << 8 & 65535L | (long)in[42 + inPos] << 16 & 1048575L;
         out[17 + outPos] = (long)in[42 + inPos] >> 4 & 15L | (long)in[43 + inPos] << 4 & 4095L | (long)in[44 + inPos] << 12 & 1048575L;
         out[18 + outPos] = (long)in[45 + inPos] & 255L | (long)in[46 + inPos] << 8 & 65535L | (long)in[47 + inPos] << 16 & 1048575L;
         out[19 + outPos] = (long)in[47 + inPos] >> 4 & 15L | (long)in[48 + inPos] << 4 & 4095L | (long)in[49 + inPos] << 12 & 1048575L;
         out[20 + outPos] = (long)in[50 + inPos] & 255L | (long)in[51 + inPos] << 8 & 65535L | (long)in[52 + inPos] << 16 & 1048575L;
         out[21 + outPos] = (long)in[52 + inPos] >> 4 & 15L | (long)in[53 + inPos] << 4 & 4095L | (long)in[54 + inPos] << 12 & 1048575L;
         out[22 + outPos] = (long)in[55 + inPos] & 255L | (long)in[56 + inPos] << 8 & 65535L | (long)in[57 + inPos] << 16 & 1048575L;
         out[23 + outPos] = (long)in[57 + inPos] >> 4 & 15L | (long)in[58 + inPos] << 4 & 4095L | (long)in[59 + inPos] << 12 & 1048575L;
         out[24 + outPos] = (long)in[60 + inPos] & 255L | (long)in[61 + inPos] << 8 & 65535L | (long)in[62 + inPos] << 16 & 1048575L;
         out[25 + outPos] = (long)in[62 + inPos] >> 4 & 15L | (long)in[63 + inPos] << 4 & 4095L | (long)in[64 + inPos] << 12 & 1048575L;
         out[26 + outPos] = (long)in[65 + inPos] & 255L | (long)in[66 + inPos] << 8 & 65535L | (long)in[67 + inPos] << 16 & 1048575L;
         out[27 + outPos] = (long)in[67 + inPos] >> 4 & 15L | (long)in[68 + inPos] << 4 & 4095L | (long)in[69 + inPos] << 12 & 1048575L;
         out[28 + outPos] = (long)in[70 + inPos] & 255L | (long)in[71 + inPos] << 8 & 65535L | (long)in[72 + inPos] << 16 & 1048575L;
         out[29 + outPos] = (long)in[72 + inPos] >> 4 & 15L | (long)in[73 + inPos] << 4 & 4095L | (long)in[74 + inPos] << 12 & 1048575L;
         out[30 + outPos] = (long)in[75 + inPos] & 255L | (long)in[76 + inPos] << 8 & 65535L | (long)in[77 + inPos] << 16 & 1048575L;
         out[31 + outPos] = (long)in[77 + inPos] >> 4 & 15L | (long)in[78 + inPos] << 4 & 4095L | (long)in[79 + inPos] << 12 & 1048575L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 1048575L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 4 & 15L | (long)in.get(3 + inPos) << 4 & 4095L | (long)in.get(4 + inPos) << 12 & 1048575L;
         out[2 + outPos] = (long)in.get(5 + inPos) & 255L | (long)in.get(6 + inPos) << 8 & 65535L | (long)in.get(7 + inPos) << 16 & 1048575L;
         out[3 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 4095L | (long)in.get(9 + inPos) << 12 & 1048575L;
         out[4 + outPos] = (long)in.get(10 + inPos) & 255L | (long)in.get(11 + inPos) << 8 & 65535L | (long)in.get(12 + inPos) << 16 & 1048575L;
         out[5 + outPos] = (long)in.get(12 + inPos) >> 4 & 15L | (long)in.get(13 + inPos) << 4 & 4095L | (long)in.get(14 + inPos) << 12 & 1048575L;
         out[6 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 65535L | (long)in.get(17 + inPos) << 16 & 1048575L;
         out[7 + outPos] = (long)in.get(17 + inPos) >> 4 & 15L | (long)in.get(18 + inPos) << 4 & 4095L | (long)in.get(19 + inPos) << 12 & 1048575L;
         out[8 + outPos] = (long)in.get(20 + inPos) & 255L | (long)in.get(21 + inPos) << 8 & 65535L | (long)in.get(22 + inPos) << 16 & 1048575L;
         out[9 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 4095L | (long)in.get(24 + inPos) << 12 & 1048575L;
         out[10 + outPos] = (long)in.get(25 + inPos) & 255L | (long)in.get(26 + inPos) << 8 & 65535L | (long)in.get(27 + inPos) << 16 & 1048575L;
         out[11 + outPos] = (long)in.get(27 + inPos) >> 4 & 15L | (long)in.get(28 + inPos) << 4 & 4095L | (long)in.get(29 + inPos) << 12 & 1048575L;
         out[12 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 65535L | (long)in.get(32 + inPos) << 16 & 1048575L;
         out[13 + outPos] = (long)in.get(32 + inPos) >> 4 & 15L | (long)in.get(33 + inPos) << 4 & 4095L | (long)in.get(34 + inPos) << 12 & 1048575L;
         out[14 + outPos] = (long)in.get(35 + inPos) & 255L | (long)in.get(36 + inPos) << 8 & 65535L | (long)in.get(37 + inPos) << 16 & 1048575L;
         out[15 + outPos] = (long)in.get(37 + inPos) >> 4 & 15L | (long)in.get(38 + inPos) << 4 & 4095L | (long)in.get(39 + inPos) << 12 & 1048575L;
         out[16 + outPos] = (long)in.get(40 + inPos) & 255L | (long)in.get(41 + inPos) << 8 & 65535L | (long)in.get(42 + inPos) << 16 & 1048575L;
         out[17 + outPos] = (long)in.get(42 + inPos) >> 4 & 15L | (long)in.get(43 + inPos) << 4 & 4095L | (long)in.get(44 + inPos) << 12 & 1048575L;
         out[18 + outPos] = (long)in.get(45 + inPos) & 255L | (long)in.get(46 + inPos) << 8 & 65535L | (long)in.get(47 + inPos) << 16 & 1048575L;
         out[19 + outPos] = (long)in.get(47 + inPos) >> 4 & 15L | (long)in.get(48 + inPos) << 4 & 4095L | (long)in.get(49 + inPos) << 12 & 1048575L;
         out[20 + outPos] = (long)in.get(50 + inPos) & 255L | (long)in.get(51 + inPos) << 8 & 65535L | (long)in.get(52 + inPos) << 16 & 1048575L;
         out[21 + outPos] = (long)in.get(52 + inPos) >> 4 & 15L | (long)in.get(53 + inPos) << 4 & 4095L | (long)in.get(54 + inPos) << 12 & 1048575L;
         out[22 + outPos] = (long)in.get(55 + inPos) & 255L | (long)in.get(56 + inPos) << 8 & 65535L | (long)in.get(57 + inPos) << 16 & 1048575L;
         out[23 + outPos] = (long)in.get(57 + inPos) >> 4 & 15L | (long)in.get(58 + inPos) << 4 & 4095L | (long)in.get(59 + inPos) << 12 & 1048575L;
         out[24 + outPos] = (long)in.get(60 + inPos) & 255L | (long)in.get(61 + inPos) << 8 & 65535L | (long)in.get(62 + inPos) << 16 & 1048575L;
         out[25 + outPos] = (long)in.get(62 + inPos) >> 4 & 15L | (long)in.get(63 + inPos) << 4 & 4095L | (long)in.get(64 + inPos) << 12 & 1048575L;
         out[26 + outPos] = (long)in.get(65 + inPos) & 255L | (long)in.get(66 + inPos) << 8 & 65535L | (long)in.get(67 + inPos) << 16 & 1048575L;
         out[27 + outPos] = (long)in.get(67 + inPos) >> 4 & 15L | (long)in.get(68 + inPos) << 4 & 4095L | (long)in.get(69 + inPos) << 12 & 1048575L;
         out[28 + outPos] = (long)in.get(70 + inPos) & 255L | (long)in.get(71 + inPos) << 8 & 65535L | (long)in.get(72 + inPos) << 16 & 1048575L;
         out[29 + outPos] = (long)in.get(72 + inPos) >> 4 & 15L | (long)in.get(73 + inPos) << 4 & 4095L | (long)in.get(74 + inPos) << 12 & 1048575L;
         out[30 + outPos] = (long)in.get(75 + inPos) & 255L | (long)in.get(76 + inPos) << 8 & 65535L | (long)in.get(77 + inPos) << 16 & 1048575L;
         out[31 + outPos] = (long)in.get(77 + inPos) >> 4 & 15L | (long)in.get(78 + inPos) << 4 & 4095L | (long)in.get(79 + inPos) << 12 & 1048575L;
      }
   }

   private static final class Packer21 extends BytePackerForLong {
      private Packer21() {
         super(21);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 2097151L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 2097151L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 2097151L) >>> 16 | (in[1 + inPos] & 2097151L) << 5) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 2097151L) >>> 3 & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 2097151L) >>> 11 & 255L));
         out[5 + outPos] = (byte)((int)(((in[1 + inPos] & 2097151L) >>> 19 | (in[2 + inPos] & 2097151L) << 2) & 255L));
         out[6 + outPos] = (byte)((int)((in[2 + inPos] & 2097151L) >>> 6 & 255L));
         out[7 + outPos] = (byte)((int)(((in[2 + inPos] & 2097151L) >>> 14 | (in[3 + inPos] & 2097151L) << 7) & 255L));
         out[8 + outPos] = (byte)((int)((in[3 + inPos] & 2097151L) >>> 1 & 255L));
         out[9 + outPos] = (byte)((int)((in[3 + inPos] & 2097151L) >>> 9 & 255L));
         out[10 + outPos] = (byte)((int)(((in[3 + inPos] & 2097151L) >>> 17 | (in[4 + inPos] & 2097151L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)((in[4 + inPos] & 2097151L) >>> 4 & 255L));
         out[12 + outPos] = (byte)((int)((in[4 + inPos] & 2097151L) >>> 12 & 255L));
         out[13 + outPos] = (byte)((int)(((in[4 + inPos] & 2097151L) >>> 20 | (in[5 + inPos] & 2097151L) << 1) & 255L));
         out[14 + outPos] = (byte)((int)((in[5 + inPos] & 2097151L) >>> 7 & 255L));
         out[15 + outPos] = (byte)((int)(((in[5 + inPos] & 2097151L) >>> 15 | (in[6 + inPos] & 2097151L) << 6) & 255L));
         out[16 + outPos] = (byte)((int)((in[6 + inPos] & 2097151L) >>> 2 & 255L));
         out[17 + outPos] = (byte)((int)((in[6 + inPos] & 2097151L) >>> 10 & 255L));
         out[18 + outPos] = (byte)((int)(((in[6 + inPos] & 2097151L) >>> 18 | (in[7 + inPos] & 2097151L) << 3) & 255L));
         out[19 + outPos] = (byte)((int)((in[7 + inPos] & 2097151L) >>> 5 & 255L));
         out[20 + outPos] = (byte)((int)((in[7 + inPos] & 2097151L) >>> 13 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 2097151L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 2097151L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 2097151L) >>> 16 | (in[1 + inPos] & 2097151L) << 5) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 2097151L) >>> 3 & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 2097151L) >>> 11 & 255L));
         out[5 + outPos] = (byte)((int)(((in[1 + inPos] & 2097151L) >>> 19 | (in[2 + inPos] & 2097151L) << 2) & 255L));
         out[6 + outPos] = (byte)((int)((in[2 + inPos] & 2097151L) >>> 6 & 255L));
         out[7 + outPos] = (byte)((int)(((in[2 + inPos] & 2097151L) >>> 14 | (in[3 + inPos] & 2097151L) << 7) & 255L));
         out[8 + outPos] = (byte)((int)((in[3 + inPos] & 2097151L) >>> 1 & 255L));
         out[9 + outPos] = (byte)((int)((in[3 + inPos] & 2097151L) >>> 9 & 255L));
         out[10 + outPos] = (byte)((int)(((in[3 + inPos] & 2097151L) >>> 17 | (in[4 + inPos] & 2097151L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)((in[4 + inPos] & 2097151L) >>> 4 & 255L));
         out[12 + outPos] = (byte)((int)((in[4 + inPos] & 2097151L) >>> 12 & 255L));
         out[13 + outPos] = (byte)((int)(((in[4 + inPos] & 2097151L) >>> 20 | (in[5 + inPos] & 2097151L) << 1) & 255L));
         out[14 + outPos] = (byte)((int)((in[5 + inPos] & 2097151L) >>> 7 & 255L));
         out[15 + outPos] = (byte)((int)(((in[5 + inPos] & 2097151L) >>> 15 | (in[6 + inPos] & 2097151L) << 6) & 255L));
         out[16 + outPos] = (byte)((int)((in[6 + inPos] & 2097151L) >>> 2 & 255L));
         out[17 + outPos] = (byte)((int)((in[6 + inPos] & 2097151L) >>> 10 & 255L));
         out[18 + outPos] = (byte)((int)(((in[6 + inPos] & 2097151L) >>> 18 | (in[7 + inPos] & 2097151L) << 3) & 255L));
         out[19 + outPos] = (byte)((int)((in[7 + inPos] & 2097151L) >>> 5 & 255L));
         out[20 + outPos] = (byte)((int)((in[7 + inPos] & 2097151L) >>> 13 & 255L));
         out[21 + outPos] = (byte)((int)(in[8 + inPos] & 2097151L & 255L));
         out[22 + outPos] = (byte)((int)((in[8 + inPos] & 2097151L) >>> 8 & 255L));
         out[23 + outPos] = (byte)((int)(((in[8 + inPos] & 2097151L) >>> 16 | (in[9 + inPos] & 2097151L) << 5) & 255L));
         out[24 + outPos] = (byte)((int)((in[9 + inPos] & 2097151L) >>> 3 & 255L));
         out[25 + outPos] = (byte)((int)((in[9 + inPos] & 2097151L) >>> 11 & 255L));
         out[26 + outPos] = (byte)((int)(((in[9 + inPos] & 2097151L) >>> 19 | (in[10 + inPos] & 2097151L) << 2) & 255L));
         out[27 + outPos] = (byte)((int)((in[10 + inPos] & 2097151L) >>> 6 & 255L));
         out[28 + outPos] = (byte)((int)(((in[10 + inPos] & 2097151L) >>> 14 | (in[11 + inPos] & 2097151L) << 7) & 255L));
         out[29 + outPos] = (byte)((int)((in[11 + inPos] & 2097151L) >>> 1 & 255L));
         out[30 + outPos] = (byte)((int)((in[11 + inPos] & 2097151L) >>> 9 & 255L));
         out[31 + outPos] = (byte)((int)(((in[11 + inPos] & 2097151L) >>> 17 | (in[12 + inPos] & 2097151L) << 4) & 255L));
         out[32 + outPos] = (byte)((int)((in[12 + inPos] & 2097151L) >>> 4 & 255L));
         out[33 + outPos] = (byte)((int)((in[12 + inPos] & 2097151L) >>> 12 & 255L));
         out[34 + outPos] = (byte)((int)(((in[12 + inPos] & 2097151L) >>> 20 | (in[13 + inPos] & 2097151L) << 1) & 255L));
         out[35 + outPos] = (byte)((int)((in[13 + inPos] & 2097151L) >>> 7 & 255L));
         out[36 + outPos] = (byte)((int)(((in[13 + inPos] & 2097151L) >>> 15 | (in[14 + inPos] & 2097151L) << 6) & 255L));
         out[37 + outPos] = (byte)((int)((in[14 + inPos] & 2097151L) >>> 2 & 255L));
         out[38 + outPos] = (byte)((int)((in[14 + inPos] & 2097151L) >>> 10 & 255L));
         out[39 + outPos] = (byte)((int)(((in[14 + inPos] & 2097151L) >>> 18 | (in[15 + inPos] & 2097151L) << 3) & 255L));
         out[40 + outPos] = (byte)((int)((in[15 + inPos] & 2097151L) >>> 5 & 255L));
         out[41 + outPos] = (byte)((int)((in[15 + inPos] & 2097151L) >>> 13 & 255L));
         out[42 + outPos] = (byte)((int)(in[16 + inPos] & 2097151L & 255L));
         out[43 + outPos] = (byte)((int)((in[16 + inPos] & 2097151L) >>> 8 & 255L));
         out[44 + outPos] = (byte)((int)(((in[16 + inPos] & 2097151L) >>> 16 | (in[17 + inPos] & 2097151L) << 5) & 255L));
         out[45 + outPos] = (byte)((int)((in[17 + inPos] & 2097151L) >>> 3 & 255L));
         out[46 + outPos] = (byte)((int)((in[17 + inPos] & 2097151L) >>> 11 & 255L));
         out[47 + outPos] = (byte)((int)(((in[17 + inPos] & 2097151L) >>> 19 | (in[18 + inPos] & 2097151L) << 2) & 255L));
         out[48 + outPos] = (byte)((int)((in[18 + inPos] & 2097151L) >>> 6 & 255L));
         out[49 + outPos] = (byte)((int)(((in[18 + inPos] & 2097151L) >>> 14 | (in[19 + inPos] & 2097151L) << 7) & 255L));
         out[50 + outPos] = (byte)((int)((in[19 + inPos] & 2097151L) >>> 1 & 255L));
         out[51 + outPos] = (byte)((int)((in[19 + inPos] & 2097151L) >>> 9 & 255L));
         out[52 + outPos] = (byte)((int)(((in[19 + inPos] & 2097151L) >>> 17 | (in[20 + inPos] & 2097151L) << 4) & 255L));
         out[53 + outPos] = (byte)((int)((in[20 + inPos] & 2097151L) >>> 4 & 255L));
         out[54 + outPos] = (byte)((int)((in[20 + inPos] & 2097151L) >>> 12 & 255L));
         out[55 + outPos] = (byte)((int)(((in[20 + inPos] & 2097151L) >>> 20 | (in[21 + inPos] & 2097151L) << 1) & 255L));
         out[56 + outPos] = (byte)((int)((in[21 + inPos] & 2097151L) >>> 7 & 255L));
         out[57 + outPos] = (byte)((int)(((in[21 + inPos] & 2097151L) >>> 15 | (in[22 + inPos] & 2097151L) << 6) & 255L));
         out[58 + outPos] = (byte)((int)((in[22 + inPos] & 2097151L) >>> 2 & 255L));
         out[59 + outPos] = (byte)((int)((in[22 + inPos] & 2097151L) >>> 10 & 255L));
         out[60 + outPos] = (byte)((int)(((in[22 + inPos] & 2097151L) >>> 18 | (in[23 + inPos] & 2097151L) << 3) & 255L));
         out[61 + outPos] = (byte)((int)((in[23 + inPos] & 2097151L) >>> 5 & 255L));
         out[62 + outPos] = (byte)((int)((in[23 + inPos] & 2097151L) >>> 13 & 255L));
         out[63 + outPos] = (byte)((int)(in[24 + inPos] & 2097151L & 255L));
         out[64 + outPos] = (byte)((int)((in[24 + inPos] & 2097151L) >>> 8 & 255L));
         out[65 + outPos] = (byte)((int)(((in[24 + inPos] & 2097151L) >>> 16 | (in[25 + inPos] & 2097151L) << 5) & 255L));
         out[66 + outPos] = (byte)((int)((in[25 + inPos] & 2097151L) >>> 3 & 255L));
         out[67 + outPos] = (byte)((int)((in[25 + inPos] & 2097151L) >>> 11 & 255L));
         out[68 + outPos] = (byte)((int)(((in[25 + inPos] & 2097151L) >>> 19 | (in[26 + inPos] & 2097151L) << 2) & 255L));
         out[69 + outPos] = (byte)((int)((in[26 + inPos] & 2097151L) >>> 6 & 255L));
         out[70 + outPos] = (byte)((int)(((in[26 + inPos] & 2097151L) >>> 14 | (in[27 + inPos] & 2097151L) << 7) & 255L));
         out[71 + outPos] = (byte)((int)((in[27 + inPos] & 2097151L) >>> 1 & 255L));
         out[72 + outPos] = (byte)((int)((in[27 + inPos] & 2097151L) >>> 9 & 255L));
         out[73 + outPos] = (byte)((int)(((in[27 + inPos] & 2097151L) >>> 17 | (in[28 + inPos] & 2097151L) << 4) & 255L));
         out[74 + outPos] = (byte)((int)((in[28 + inPos] & 2097151L) >>> 4 & 255L));
         out[75 + outPos] = (byte)((int)((in[28 + inPos] & 2097151L) >>> 12 & 255L));
         out[76 + outPos] = (byte)((int)(((in[28 + inPos] & 2097151L) >>> 20 | (in[29 + inPos] & 2097151L) << 1) & 255L));
         out[77 + outPos] = (byte)((int)((in[29 + inPos] & 2097151L) >>> 7 & 255L));
         out[78 + outPos] = (byte)((int)(((in[29 + inPos] & 2097151L) >>> 15 | (in[30 + inPos] & 2097151L) << 6) & 255L));
         out[79 + outPos] = (byte)((int)((in[30 + inPos] & 2097151L) >>> 2 & 255L));
         out[80 + outPos] = (byte)((int)((in[30 + inPos] & 2097151L) >>> 10 & 255L));
         out[81 + outPos] = (byte)((int)(((in[30 + inPos] & 2097151L) >>> 18 | (in[31 + inPos] & 2097151L) << 3) & 255L));
         out[82 + outPos] = (byte)((int)((in[31 + inPos] & 2097151L) >>> 5 & 255L));
         out[83 + outPos] = (byte)((int)((in[31 + inPos] & 2097151L) >>> 13 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 2097151L;
         out[1 + outPos] = (long)in[2 + inPos] >> 5 & 7L | (long)in[3 + inPos] << 3 & 2047L | (long)in[4 + inPos] << 11 & 524287L | (long)in[5 + inPos] << 19 & 2097151L;
         out[2 + outPos] = (long)in[5 + inPos] >> 2 & 63L | (long)in[6 + inPos] << 6 & 16383L | (long)in[7 + inPos] << 14 & 2097151L;
         out[3 + outPos] = (long)in[7 + inPos] >> 7 & 1L | (long)in[8 + inPos] << 1 & 511L | (long)in[9 + inPos] << 9 & 131071L | (long)in[10 + inPos] << 17 & 2097151L;
         out[4 + outPos] = (long)in[10 + inPos] >> 4 & 15L | (long)in[11 + inPos] << 4 & 4095L | (long)in[12 + inPos] << 12 & 1048575L | (long)in[13 + inPos] << 20 & 2097151L;
         out[5 + outPos] = (long)in[13 + inPos] >> 1 & 127L | (long)in[14 + inPos] << 7 & 32767L | (long)in[15 + inPos] << 15 & 2097151L;
         out[6 + outPos] = (long)in[15 + inPos] >> 6 & 3L | (long)in[16 + inPos] << 2 & 1023L | (long)in[17 + inPos] << 10 & 262143L | (long)in[18 + inPos] << 18 & 2097151L;
         out[7 + outPos] = (long)in[18 + inPos] >> 3 & 31L | (long)in[19 + inPos] << 5 & 8191L | (long)in[20 + inPos] << 13 & 2097151L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 2097151L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 5 & 7L | (long)in.get(3 + inPos) << 3 & 2047L | (long)in.get(4 + inPos) << 11 & 524287L | (long)in.get(5 + inPos) << 19 & 2097151L;
         out[2 + outPos] = (long)in.get(5 + inPos) >> 2 & 63L | (long)in.get(6 + inPos) << 6 & 16383L | (long)in.get(7 + inPos) << 14 & 2097151L;
         out[3 + outPos] = (long)in.get(7 + inPos) >> 7 & 1L | (long)in.get(8 + inPos) << 1 & 511L | (long)in.get(9 + inPos) << 9 & 131071L | (long)in.get(10 + inPos) << 17 & 2097151L;
         out[4 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L | (long)in.get(11 + inPos) << 4 & 4095L | (long)in.get(12 + inPos) << 12 & 1048575L | (long)in.get(13 + inPos) << 20 & 2097151L;
         out[5 + outPos] = (long)in.get(13 + inPos) >> 1 & 127L | (long)in.get(14 + inPos) << 7 & 32767L | (long)in.get(15 + inPos) << 15 & 2097151L;
         out[6 + outPos] = (long)in.get(15 + inPos) >> 6 & 3L | (long)in.get(16 + inPos) << 2 & 1023L | (long)in.get(17 + inPos) << 10 & 262143L | (long)in.get(18 + inPos) << 18 & 2097151L;
         out[7 + outPos] = (long)in.get(18 + inPos) >> 3 & 31L | (long)in.get(19 + inPos) << 5 & 8191L | (long)in.get(20 + inPos) << 13 & 2097151L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 2097151L;
         out[1 + outPos] = (long)in[2 + inPos] >> 5 & 7L | (long)in[3 + inPos] << 3 & 2047L | (long)in[4 + inPos] << 11 & 524287L | (long)in[5 + inPos] << 19 & 2097151L;
         out[2 + outPos] = (long)in[5 + inPos] >> 2 & 63L | (long)in[6 + inPos] << 6 & 16383L | (long)in[7 + inPos] << 14 & 2097151L;
         out[3 + outPos] = (long)in[7 + inPos] >> 7 & 1L | (long)in[8 + inPos] << 1 & 511L | (long)in[9 + inPos] << 9 & 131071L | (long)in[10 + inPos] << 17 & 2097151L;
         out[4 + outPos] = (long)in[10 + inPos] >> 4 & 15L | (long)in[11 + inPos] << 4 & 4095L | (long)in[12 + inPos] << 12 & 1048575L | (long)in[13 + inPos] << 20 & 2097151L;
         out[5 + outPos] = (long)in[13 + inPos] >> 1 & 127L | (long)in[14 + inPos] << 7 & 32767L | (long)in[15 + inPos] << 15 & 2097151L;
         out[6 + outPos] = (long)in[15 + inPos] >> 6 & 3L | (long)in[16 + inPos] << 2 & 1023L | (long)in[17 + inPos] << 10 & 262143L | (long)in[18 + inPos] << 18 & 2097151L;
         out[7 + outPos] = (long)in[18 + inPos] >> 3 & 31L | (long)in[19 + inPos] << 5 & 8191L | (long)in[20 + inPos] << 13 & 2097151L;
         out[8 + outPos] = (long)in[21 + inPos] & 255L | (long)in[22 + inPos] << 8 & 65535L | (long)in[23 + inPos] << 16 & 2097151L;
         out[9 + outPos] = (long)in[23 + inPos] >> 5 & 7L | (long)in[24 + inPos] << 3 & 2047L | (long)in[25 + inPos] << 11 & 524287L | (long)in[26 + inPos] << 19 & 2097151L;
         out[10 + outPos] = (long)in[26 + inPos] >> 2 & 63L | (long)in[27 + inPos] << 6 & 16383L | (long)in[28 + inPos] << 14 & 2097151L;
         out[11 + outPos] = (long)in[28 + inPos] >> 7 & 1L | (long)in[29 + inPos] << 1 & 511L | (long)in[30 + inPos] << 9 & 131071L | (long)in[31 + inPos] << 17 & 2097151L;
         out[12 + outPos] = (long)in[31 + inPos] >> 4 & 15L | (long)in[32 + inPos] << 4 & 4095L | (long)in[33 + inPos] << 12 & 1048575L | (long)in[34 + inPos] << 20 & 2097151L;
         out[13 + outPos] = (long)in[34 + inPos] >> 1 & 127L | (long)in[35 + inPos] << 7 & 32767L | (long)in[36 + inPos] << 15 & 2097151L;
         out[14 + outPos] = (long)in[36 + inPos] >> 6 & 3L | (long)in[37 + inPos] << 2 & 1023L | (long)in[38 + inPos] << 10 & 262143L | (long)in[39 + inPos] << 18 & 2097151L;
         out[15 + outPos] = (long)in[39 + inPos] >> 3 & 31L | (long)in[40 + inPos] << 5 & 8191L | (long)in[41 + inPos] << 13 & 2097151L;
         out[16 + outPos] = (long)in[42 + inPos] & 255L | (long)in[43 + inPos] << 8 & 65535L | (long)in[44 + inPos] << 16 & 2097151L;
         out[17 + outPos] = (long)in[44 + inPos] >> 5 & 7L | (long)in[45 + inPos] << 3 & 2047L | (long)in[46 + inPos] << 11 & 524287L | (long)in[47 + inPos] << 19 & 2097151L;
         out[18 + outPos] = (long)in[47 + inPos] >> 2 & 63L | (long)in[48 + inPos] << 6 & 16383L | (long)in[49 + inPos] << 14 & 2097151L;
         out[19 + outPos] = (long)in[49 + inPos] >> 7 & 1L | (long)in[50 + inPos] << 1 & 511L | (long)in[51 + inPos] << 9 & 131071L | (long)in[52 + inPos] << 17 & 2097151L;
         out[20 + outPos] = (long)in[52 + inPos] >> 4 & 15L | (long)in[53 + inPos] << 4 & 4095L | (long)in[54 + inPos] << 12 & 1048575L | (long)in[55 + inPos] << 20 & 2097151L;
         out[21 + outPos] = (long)in[55 + inPos] >> 1 & 127L | (long)in[56 + inPos] << 7 & 32767L | (long)in[57 + inPos] << 15 & 2097151L;
         out[22 + outPos] = (long)in[57 + inPos] >> 6 & 3L | (long)in[58 + inPos] << 2 & 1023L | (long)in[59 + inPos] << 10 & 262143L | (long)in[60 + inPos] << 18 & 2097151L;
         out[23 + outPos] = (long)in[60 + inPos] >> 3 & 31L | (long)in[61 + inPos] << 5 & 8191L | (long)in[62 + inPos] << 13 & 2097151L;
         out[24 + outPos] = (long)in[63 + inPos] & 255L | (long)in[64 + inPos] << 8 & 65535L | (long)in[65 + inPos] << 16 & 2097151L;
         out[25 + outPos] = (long)in[65 + inPos] >> 5 & 7L | (long)in[66 + inPos] << 3 & 2047L | (long)in[67 + inPos] << 11 & 524287L | (long)in[68 + inPos] << 19 & 2097151L;
         out[26 + outPos] = (long)in[68 + inPos] >> 2 & 63L | (long)in[69 + inPos] << 6 & 16383L | (long)in[70 + inPos] << 14 & 2097151L;
         out[27 + outPos] = (long)in[70 + inPos] >> 7 & 1L | (long)in[71 + inPos] << 1 & 511L | (long)in[72 + inPos] << 9 & 131071L | (long)in[73 + inPos] << 17 & 2097151L;
         out[28 + outPos] = (long)in[73 + inPos] >> 4 & 15L | (long)in[74 + inPos] << 4 & 4095L | (long)in[75 + inPos] << 12 & 1048575L | (long)in[76 + inPos] << 20 & 2097151L;
         out[29 + outPos] = (long)in[76 + inPos] >> 1 & 127L | (long)in[77 + inPos] << 7 & 32767L | (long)in[78 + inPos] << 15 & 2097151L;
         out[30 + outPos] = (long)in[78 + inPos] >> 6 & 3L | (long)in[79 + inPos] << 2 & 1023L | (long)in[80 + inPos] << 10 & 262143L | (long)in[81 + inPos] << 18 & 2097151L;
         out[31 + outPos] = (long)in[81 + inPos] >> 3 & 31L | (long)in[82 + inPos] << 5 & 8191L | (long)in[83 + inPos] << 13 & 2097151L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 2097151L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 5 & 7L | (long)in.get(3 + inPos) << 3 & 2047L | (long)in.get(4 + inPos) << 11 & 524287L | (long)in.get(5 + inPos) << 19 & 2097151L;
         out[2 + outPos] = (long)in.get(5 + inPos) >> 2 & 63L | (long)in.get(6 + inPos) << 6 & 16383L | (long)in.get(7 + inPos) << 14 & 2097151L;
         out[3 + outPos] = (long)in.get(7 + inPos) >> 7 & 1L | (long)in.get(8 + inPos) << 1 & 511L | (long)in.get(9 + inPos) << 9 & 131071L | (long)in.get(10 + inPos) << 17 & 2097151L;
         out[4 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L | (long)in.get(11 + inPos) << 4 & 4095L | (long)in.get(12 + inPos) << 12 & 1048575L | (long)in.get(13 + inPos) << 20 & 2097151L;
         out[5 + outPos] = (long)in.get(13 + inPos) >> 1 & 127L | (long)in.get(14 + inPos) << 7 & 32767L | (long)in.get(15 + inPos) << 15 & 2097151L;
         out[6 + outPos] = (long)in.get(15 + inPos) >> 6 & 3L | (long)in.get(16 + inPos) << 2 & 1023L | (long)in.get(17 + inPos) << 10 & 262143L | (long)in.get(18 + inPos) << 18 & 2097151L;
         out[7 + outPos] = (long)in.get(18 + inPos) >> 3 & 31L | (long)in.get(19 + inPos) << 5 & 8191L | (long)in.get(20 + inPos) << 13 & 2097151L;
         out[8 + outPos] = (long)in.get(21 + inPos) & 255L | (long)in.get(22 + inPos) << 8 & 65535L | (long)in.get(23 + inPos) << 16 & 2097151L;
         out[9 + outPos] = (long)in.get(23 + inPos) >> 5 & 7L | (long)in.get(24 + inPos) << 3 & 2047L | (long)in.get(25 + inPos) << 11 & 524287L | (long)in.get(26 + inPos) << 19 & 2097151L;
         out[10 + outPos] = (long)in.get(26 + inPos) >> 2 & 63L | (long)in.get(27 + inPos) << 6 & 16383L | (long)in.get(28 + inPos) << 14 & 2097151L;
         out[11 + outPos] = (long)in.get(28 + inPos) >> 7 & 1L | (long)in.get(29 + inPos) << 1 & 511L | (long)in.get(30 + inPos) << 9 & 131071L | (long)in.get(31 + inPos) << 17 & 2097151L;
         out[12 + outPos] = (long)in.get(31 + inPos) >> 4 & 15L | (long)in.get(32 + inPos) << 4 & 4095L | (long)in.get(33 + inPos) << 12 & 1048575L | (long)in.get(34 + inPos) << 20 & 2097151L;
         out[13 + outPos] = (long)in.get(34 + inPos) >> 1 & 127L | (long)in.get(35 + inPos) << 7 & 32767L | (long)in.get(36 + inPos) << 15 & 2097151L;
         out[14 + outPos] = (long)in.get(36 + inPos) >> 6 & 3L | (long)in.get(37 + inPos) << 2 & 1023L | (long)in.get(38 + inPos) << 10 & 262143L | (long)in.get(39 + inPos) << 18 & 2097151L;
         out[15 + outPos] = (long)in.get(39 + inPos) >> 3 & 31L | (long)in.get(40 + inPos) << 5 & 8191L | (long)in.get(41 + inPos) << 13 & 2097151L;
         out[16 + outPos] = (long)in.get(42 + inPos) & 255L | (long)in.get(43 + inPos) << 8 & 65535L | (long)in.get(44 + inPos) << 16 & 2097151L;
         out[17 + outPos] = (long)in.get(44 + inPos) >> 5 & 7L | (long)in.get(45 + inPos) << 3 & 2047L | (long)in.get(46 + inPos) << 11 & 524287L | (long)in.get(47 + inPos) << 19 & 2097151L;
         out[18 + outPos] = (long)in.get(47 + inPos) >> 2 & 63L | (long)in.get(48 + inPos) << 6 & 16383L | (long)in.get(49 + inPos) << 14 & 2097151L;
         out[19 + outPos] = (long)in.get(49 + inPos) >> 7 & 1L | (long)in.get(50 + inPos) << 1 & 511L | (long)in.get(51 + inPos) << 9 & 131071L | (long)in.get(52 + inPos) << 17 & 2097151L;
         out[20 + outPos] = (long)in.get(52 + inPos) >> 4 & 15L | (long)in.get(53 + inPos) << 4 & 4095L | (long)in.get(54 + inPos) << 12 & 1048575L | (long)in.get(55 + inPos) << 20 & 2097151L;
         out[21 + outPos] = (long)in.get(55 + inPos) >> 1 & 127L | (long)in.get(56 + inPos) << 7 & 32767L | (long)in.get(57 + inPos) << 15 & 2097151L;
         out[22 + outPos] = (long)in.get(57 + inPos) >> 6 & 3L | (long)in.get(58 + inPos) << 2 & 1023L | (long)in.get(59 + inPos) << 10 & 262143L | (long)in.get(60 + inPos) << 18 & 2097151L;
         out[23 + outPos] = (long)in.get(60 + inPos) >> 3 & 31L | (long)in.get(61 + inPos) << 5 & 8191L | (long)in.get(62 + inPos) << 13 & 2097151L;
         out[24 + outPos] = (long)in.get(63 + inPos) & 255L | (long)in.get(64 + inPos) << 8 & 65535L | (long)in.get(65 + inPos) << 16 & 2097151L;
         out[25 + outPos] = (long)in.get(65 + inPos) >> 5 & 7L | (long)in.get(66 + inPos) << 3 & 2047L | (long)in.get(67 + inPos) << 11 & 524287L | (long)in.get(68 + inPos) << 19 & 2097151L;
         out[26 + outPos] = (long)in.get(68 + inPos) >> 2 & 63L | (long)in.get(69 + inPos) << 6 & 16383L | (long)in.get(70 + inPos) << 14 & 2097151L;
         out[27 + outPos] = (long)in.get(70 + inPos) >> 7 & 1L | (long)in.get(71 + inPos) << 1 & 511L | (long)in.get(72 + inPos) << 9 & 131071L | (long)in.get(73 + inPos) << 17 & 2097151L;
         out[28 + outPos] = (long)in.get(73 + inPos) >> 4 & 15L | (long)in.get(74 + inPos) << 4 & 4095L | (long)in.get(75 + inPos) << 12 & 1048575L | (long)in.get(76 + inPos) << 20 & 2097151L;
         out[29 + outPos] = (long)in.get(76 + inPos) >> 1 & 127L | (long)in.get(77 + inPos) << 7 & 32767L | (long)in.get(78 + inPos) << 15 & 2097151L;
         out[30 + outPos] = (long)in.get(78 + inPos) >> 6 & 3L | (long)in.get(79 + inPos) << 2 & 1023L | (long)in.get(80 + inPos) << 10 & 262143L | (long)in.get(81 + inPos) << 18 & 2097151L;
         out[31 + outPos] = (long)in.get(81 + inPos) >> 3 & 31L | (long)in.get(82 + inPos) << 5 & 8191L | (long)in.get(83 + inPos) << 13 & 2097151L;
      }
   }

   private static final class Packer22 extends BytePackerForLong {
      private Packer22() {
         super(22);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 4194303L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 4194303L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 4194303L) >>> 16 | (in[1 + inPos] & 4194303L) << 6) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 4194303L) >>> 2 & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 4194303L) >>> 10 & 255L));
         out[5 + outPos] = (byte)((int)(((in[1 + inPos] & 4194303L) >>> 18 | (in[2 + inPos] & 4194303L) << 4) & 255L));
         out[6 + outPos] = (byte)((int)((in[2 + inPos] & 4194303L) >>> 4 & 255L));
         out[7 + outPos] = (byte)((int)((in[2 + inPos] & 4194303L) >>> 12 & 255L));
         out[8 + outPos] = (byte)((int)(((in[2 + inPos] & 4194303L) >>> 20 | (in[3 + inPos] & 4194303L) << 2) & 255L));
         out[9 + outPos] = (byte)((int)((in[3 + inPos] & 4194303L) >>> 6 & 255L));
         out[10 + outPos] = (byte)((int)((in[3 + inPos] & 4194303L) >>> 14 & 255L));
         out[11 + outPos] = (byte)((int)(in[4 + inPos] & 4194303L & 255L));
         out[12 + outPos] = (byte)((int)((in[4 + inPos] & 4194303L) >>> 8 & 255L));
         out[13 + outPos] = (byte)((int)(((in[4 + inPos] & 4194303L) >>> 16 | (in[5 + inPos] & 4194303L) << 6) & 255L));
         out[14 + outPos] = (byte)((int)((in[5 + inPos] & 4194303L) >>> 2 & 255L));
         out[15 + outPos] = (byte)((int)((in[5 + inPos] & 4194303L) >>> 10 & 255L));
         out[16 + outPos] = (byte)((int)(((in[5 + inPos] & 4194303L) >>> 18 | (in[6 + inPos] & 4194303L) << 4) & 255L));
         out[17 + outPos] = (byte)((int)((in[6 + inPos] & 4194303L) >>> 4 & 255L));
         out[18 + outPos] = (byte)((int)((in[6 + inPos] & 4194303L) >>> 12 & 255L));
         out[19 + outPos] = (byte)((int)(((in[6 + inPos] & 4194303L) >>> 20 | (in[7 + inPos] & 4194303L) << 2) & 255L));
         out[20 + outPos] = (byte)((int)((in[7 + inPos] & 4194303L) >>> 6 & 255L));
         out[21 + outPos] = (byte)((int)((in[7 + inPos] & 4194303L) >>> 14 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 4194303L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 4194303L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 4194303L) >>> 16 | (in[1 + inPos] & 4194303L) << 6) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 4194303L) >>> 2 & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 4194303L) >>> 10 & 255L));
         out[5 + outPos] = (byte)((int)(((in[1 + inPos] & 4194303L) >>> 18 | (in[2 + inPos] & 4194303L) << 4) & 255L));
         out[6 + outPos] = (byte)((int)((in[2 + inPos] & 4194303L) >>> 4 & 255L));
         out[7 + outPos] = (byte)((int)((in[2 + inPos] & 4194303L) >>> 12 & 255L));
         out[8 + outPos] = (byte)((int)(((in[2 + inPos] & 4194303L) >>> 20 | (in[3 + inPos] & 4194303L) << 2) & 255L));
         out[9 + outPos] = (byte)((int)((in[3 + inPos] & 4194303L) >>> 6 & 255L));
         out[10 + outPos] = (byte)((int)((in[3 + inPos] & 4194303L) >>> 14 & 255L));
         out[11 + outPos] = (byte)((int)(in[4 + inPos] & 4194303L & 255L));
         out[12 + outPos] = (byte)((int)((in[4 + inPos] & 4194303L) >>> 8 & 255L));
         out[13 + outPos] = (byte)((int)(((in[4 + inPos] & 4194303L) >>> 16 | (in[5 + inPos] & 4194303L) << 6) & 255L));
         out[14 + outPos] = (byte)((int)((in[5 + inPos] & 4194303L) >>> 2 & 255L));
         out[15 + outPos] = (byte)((int)((in[5 + inPos] & 4194303L) >>> 10 & 255L));
         out[16 + outPos] = (byte)((int)(((in[5 + inPos] & 4194303L) >>> 18 | (in[6 + inPos] & 4194303L) << 4) & 255L));
         out[17 + outPos] = (byte)((int)((in[6 + inPos] & 4194303L) >>> 4 & 255L));
         out[18 + outPos] = (byte)((int)((in[6 + inPos] & 4194303L) >>> 12 & 255L));
         out[19 + outPos] = (byte)((int)(((in[6 + inPos] & 4194303L) >>> 20 | (in[7 + inPos] & 4194303L) << 2) & 255L));
         out[20 + outPos] = (byte)((int)((in[7 + inPos] & 4194303L) >>> 6 & 255L));
         out[21 + outPos] = (byte)((int)((in[7 + inPos] & 4194303L) >>> 14 & 255L));
         out[22 + outPos] = (byte)((int)(in[8 + inPos] & 4194303L & 255L));
         out[23 + outPos] = (byte)((int)((in[8 + inPos] & 4194303L) >>> 8 & 255L));
         out[24 + outPos] = (byte)((int)(((in[8 + inPos] & 4194303L) >>> 16 | (in[9 + inPos] & 4194303L) << 6) & 255L));
         out[25 + outPos] = (byte)((int)((in[9 + inPos] & 4194303L) >>> 2 & 255L));
         out[26 + outPos] = (byte)((int)((in[9 + inPos] & 4194303L) >>> 10 & 255L));
         out[27 + outPos] = (byte)((int)(((in[9 + inPos] & 4194303L) >>> 18 | (in[10 + inPos] & 4194303L) << 4) & 255L));
         out[28 + outPos] = (byte)((int)((in[10 + inPos] & 4194303L) >>> 4 & 255L));
         out[29 + outPos] = (byte)((int)((in[10 + inPos] & 4194303L) >>> 12 & 255L));
         out[30 + outPos] = (byte)((int)(((in[10 + inPos] & 4194303L) >>> 20 | (in[11 + inPos] & 4194303L) << 2) & 255L));
         out[31 + outPos] = (byte)((int)((in[11 + inPos] & 4194303L) >>> 6 & 255L));
         out[32 + outPos] = (byte)((int)((in[11 + inPos] & 4194303L) >>> 14 & 255L));
         out[33 + outPos] = (byte)((int)(in[12 + inPos] & 4194303L & 255L));
         out[34 + outPos] = (byte)((int)((in[12 + inPos] & 4194303L) >>> 8 & 255L));
         out[35 + outPos] = (byte)((int)(((in[12 + inPos] & 4194303L) >>> 16 | (in[13 + inPos] & 4194303L) << 6) & 255L));
         out[36 + outPos] = (byte)((int)((in[13 + inPos] & 4194303L) >>> 2 & 255L));
         out[37 + outPos] = (byte)((int)((in[13 + inPos] & 4194303L) >>> 10 & 255L));
         out[38 + outPos] = (byte)((int)(((in[13 + inPos] & 4194303L) >>> 18 | (in[14 + inPos] & 4194303L) << 4) & 255L));
         out[39 + outPos] = (byte)((int)((in[14 + inPos] & 4194303L) >>> 4 & 255L));
         out[40 + outPos] = (byte)((int)((in[14 + inPos] & 4194303L) >>> 12 & 255L));
         out[41 + outPos] = (byte)((int)(((in[14 + inPos] & 4194303L) >>> 20 | (in[15 + inPos] & 4194303L) << 2) & 255L));
         out[42 + outPos] = (byte)((int)((in[15 + inPos] & 4194303L) >>> 6 & 255L));
         out[43 + outPos] = (byte)((int)((in[15 + inPos] & 4194303L) >>> 14 & 255L));
         out[44 + outPos] = (byte)((int)(in[16 + inPos] & 4194303L & 255L));
         out[45 + outPos] = (byte)((int)((in[16 + inPos] & 4194303L) >>> 8 & 255L));
         out[46 + outPos] = (byte)((int)(((in[16 + inPos] & 4194303L) >>> 16 | (in[17 + inPos] & 4194303L) << 6) & 255L));
         out[47 + outPos] = (byte)((int)((in[17 + inPos] & 4194303L) >>> 2 & 255L));
         out[48 + outPos] = (byte)((int)((in[17 + inPos] & 4194303L) >>> 10 & 255L));
         out[49 + outPos] = (byte)((int)(((in[17 + inPos] & 4194303L) >>> 18 | (in[18 + inPos] & 4194303L) << 4) & 255L));
         out[50 + outPos] = (byte)((int)((in[18 + inPos] & 4194303L) >>> 4 & 255L));
         out[51 + outPos] = (byte)((int)((in[18 + inPos] & 4194303L) >>> 12 & 255L));
         out[52 + outPos] = (byte)((int)(((in[18 + inPos] & 4194303L) >>> 20 | (in[19 + inPos] & 4194303L) << 2) & 255L));
         out[53 + outPos] = (byte)((int)((in[19 + inPos] & 4194303L) >>> 6 & 255L));
         out[54 + outPos] = (byte)((int)((in[19 + inPos] & 4194303L) >>> 14 & 255L));
         out[55 + outPos] = (byte)((int)(in[20 + inPos] & 4194303L & 255L));
         out[56 + outPos] = (byte)((int)((in[20 + inPos] & 4194303L) >>> 8 & 255L));
         out[57 + outPos] = (byte)((int)(((in[20 + inPos] & 4194303L) >>> 16 | (in[21 + inPos] & 4194303L) << 6) & 255L));
         out[58 + outPos] = (byte)((int)((in[21 + inPos] & 4194303L) >>> 2 & 255L));
         out[59 + outPos] = (byte)((int)((in[21 + inPos] & 4194303L) >>> 10 & 255L));
         out[60 + outPos] = (byte)((int)(((in[21 + inPos] & 4194303L) >>> 18 | (in[22 + inPos] & 4194303L) << 4) & 255L));
         out[61 + outPos] = (byte)((int)((in[22 + inPos] & 4194303L) >>> 4 & 255L));
         out[62 + outPos] = (byte)((int)((in[22 + inPos] & 4194303L) >>> 12 & 255L));
         out[63 + outPos] = (byte)((int)(((in[22 + inPos] & 4194303L) >>> 20 | (in[23 + inPos] & 4194303L) << 2) & 255L));
         out[64 + outPos] = (byte)((int)((in[23 + inPos] & 4194303L) >>> 6 & 255L));
         out[65 + outPos] = (byte)((int)((in[23 + inPos] & 4194303L) >>> 14 & 255L));
         out[66 + outPos] = (byte)((int)(in[24 + inPos] & 4194303L & 255L));
         out[67 + outPos] = (byte)((int)((in[24 + inPos] & 4194303L) >>> 8 & 255L));
         out[68 + outPos] = (byte)((int)(((in[24 + inPos] & 4194303L) >>> 16 | (in[25 + inPos] & 4194303L) << 6) & 255L));
         out[69 + outPos] = (byte)((int)((in[25 + inPos] & 4194303L) >>> 2 & 255L));
         out[70 + outPos] = (byte)((int)((in[25 + inPos] & 4194303L) >>> 10 & 255L));
         out[71 + outPos] = (byte)((int)(((in[25 + inPos] & 4194303L) >>> 18 | (in[26 + inPos] & 4194303L) << 4) & 255L));
         out[72 + outPos] = (byte)((int)((in[26 + inPos] & 4194303L) >>> 4 & 255L));
         out[73 + outPos] = (byte)((int)((in[26 + inPos] & 4194303L) >>> 12 & 255L));
         out[74 + outPos] = (byte)((int)(((in[26 + inPos] & 4194303L) >>> 20 | (in[27 + inPos] & 4194303L) << 2) & 255L));
         out[75 + outPos] = (byte)((int)((in[27 + inPos] & 4194303L) >>> 6 & 255L));
         out[76 + outPos] = (byte)((int)((in[27 + inPos] & 4194303L) >>> 14 & 255L));
         out[77 + outPos] = (byte)((int)(in[28 + inPos] & 4194303L & 255L));
         out[78 + outPos] = (byte)((int)((in[28 + inPos] & 4194303L) >>> 8 & 255L));
         out[79 + outPos] = (byte)((int)(((in[28 + inPos] & 4194303L) >>> 16 | (in[29 + inPos] & 4194303L) << 6) & 255L));
         out[80 + outPos] = (byte)((int)((in[29 + inPos] & 4194303L) >>> 2 & 255L));
         out[81 + outPos] = (byte)((int)((in[29 + inPos] & 4194303L) >>> 10 & 255L));
         out[82 + outPos] = (byte)((int)(((in[29 + inPos] & 4194303L) >>> 18 | (in[30 + inPos] & 4194303L) << 4) & 255L));
         out[83 + outPos] = (byte)((int)((in[30 + inPos] & 4194303L) >>> 4 & 255L));
         out[84 + outPos] = (byte)((int)((in[30 + inPos] & 4194303L) >>> 12 & 255L));
         out[85 + outPos] = (byte)((int)(((in[30 + inPos] & 4194303L) >>> 20 | (in[31 + inPos] & 4194303L) << 2) & 255L));
         out[86 + outPos] = (byte)((int)((in[31 + inPos] & 4194303L) >>> 6 & 255L));
         out[87 + outPos] = (byte)((int)((in[31 + inPos] & 4194303L) >>> 14 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 4194303L;
         out[1 + outPos] = (long)in[2 + inPos] >> 6 & 3L | (long)in[3 + inPos] << 2 & 1023L | (long)in[4 + inPos] << 10 & 262143L | (long)in[5 + inPos] << 18 & 4194303L;
         out[2 + outPos] = (long)in[5 + inPos] >> 4 & 15L | (long)in[6 + inPos] << 4 & 4095L | (long)in[7 + inPos] << 12 & 1048575L | (long)in[8 + inPos] << 20 & 4194303L;
         out[3 + outPos] = (long)in[8 + inPos] >> 2 & 63L | (long)in[9 + inPos] << 6 & 16383L | (long)in[10 + inPos] << 14 & 4194303L;
         out[4 + outPos] = (long)in[11 + inPos] & 255L | (long)in[12 + inPos] << 8 & 65535L | (long)in[13 + inPos] << 16 & 4194303L;
         out[5 + outPos] = (long)in[13 + inPos] >> 6 & 3L | (long)in[14 + inPos] << 2 & 1023L | (long)in[15 + inPos] << 10 & 262143L | (long)in[16 + inPos] << 18 & 4194303L;
         out[6 + outPos] = (long)in[16 + inPos] >> 4 & 15L | (long)in[17 + inPos] << 4 & 4095L | (long)in[18 + inPos] << 12 & 1048575L | (long)in[19 + inPos] << 20 & 4194303L;
         out[7 + outPos] = (long)in[19 + inPos] >> 2 & 63L | (long)in[20 + inPos] << 6 & 16383L | (long)in[21 + inPos] << 14 & 4194303L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 4194303L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 6 & 3L | (long)in.get(3 + inPos) << 2 & 1023L | (long)in.get(4 + inPos) << 10 & 262143L | (long)in.get(5 + inPos) << 18 & 4194303L;
         out[2 + outPos] = (long)in.get(5 + inPos) >> 4 & 15L | (long)in.get(6 + inPos) << 4 & 4095L | (long)in.get(7 + inPos) << 12 & 1048575L | (long)in.get(8 + inPos) << 20 & 4194303L;
         out[3 + outPos] = (long)in.get(8 + inPos) >> 2 & 63L | (long)in.get(9 + inPos) << 6 & 16383L | (long)in.get(10 + inPos) << 14 & 4194303L;
         out[4 + outPos] = (long)in.get(11 + inPos) & 255L | (long)in.get(12 + inPos) << 8 & 65535L | (long)in.get(13 + inPos) << 16 & 4194303L;
         out[5 + outPos] = (long)in.get(13 + inPos) >> 6 & 3L | (long)in.get(14 + inPos) << 2 & 1023L | (long)in.get(15 + inPos) << 10 & 262143L | (long)in.get(16 + inPos) << 18 & 4194303L;
         out[6 + outPos] = (long)in.get(16 + inPos) >> 4 & 15L | (long)in.get(17 + inPos) << 4 & 4095L | (long)in.get(18 + inPos) << 12 & 1048575L | (long)in.get(19 + inPos) << 20 & 4194303L;
         out[7 + outPos] = (long)in.get(19 + inPos) >> 2 & 63L | (long)in.get(20 + inPos) << 6 & 16383L | (long)in.get(21 + inPos) << 14 & 4194303L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 4194303L;
         out[1 + outPos] = (long)in[2 + inPos] >> 6 & 3L | (long)in[3 + inPos] << 2 & 1023L | (long)in[4 + inPos] << 10 & 262143L | (long)in[5 + inPos] << 18 & 4194303L;
         out[2 + outPos] = (long)in[5 + inPos] >> 4 & 15L | (long)in[6 + inPos] << 4 & 4095L | (long)in[7 + inPos] << 12 & 1048575L | (long)in[8 + inPos] << 20 & 4194303L;
         out[3 + outPos] = (long)in[8 + inPos] >> 2 & 63L | (long)in[9 + inPos] << 6 & 16383L | (long)in[10 + inPos] << 14 & 4194303L;
         out[4 + outPos] = (long)in[11 + inPos] & 255L | (long)in[12 + inPos] << 8 & 65535L | (long)in[13 + inPos] << 16 & 4194303L;
         out[5 + outPos] = (long)in[13 + inPos] >> 6 & 3L | (long)in[14 + inPos] << 2 & 1023L | (long)in[15 + inPos] << 10 & 262143L | (long)in[16 + inPos] << 18 & 4194303L;
         out[6 + outPos] = (long)in[16 + inPos] >> 4 & 15L | (long)in[17 + inPos] << 4 & 4095L | (long)in[18 + inPos] << 12 & 1048575L | (long)in[19 + inPos] << 20 & 4194303L;
         out[7 + outPos] = (long)in[19 + inPos] >> 2 & 63L | (long)in[20 + inPos] << 6 & 16383L | (long)in[21 + inPos] << 14 & 4194303L;
         out[8 + outPos] = (long)in[22 + inPos] & 255L | (long)in[23 + inPos] << 8 & 65535L | (long)in[24 + inPos] << 16 & 4194303L;
         out[9 + outPos] = (long)in[24 + inPos] >> 6 & 3L | (long)in[25 + inPos] << 2 & 1023L | (long)in[26 + inPos] << 10 & 262143L | (long)in[27 + inPos] << 18 & 4194303L;
         out[10 + outPos] = (long)in[27 + inPos] >> 4 & 15L | (long)in[28 + inPos] << 4 & 4095L | (long)in[29 + inPos] << 12 & 1048575L | (long)in[30 + inPos] << 20 & 4194303L;
         out[11 + outPos] = (long)in[30 + inPos] >> 2 & 63L | (long)in[31 + inPos] << 6 & 16383L | (long)in[32 + inPos] << 14 & 4194303L;
         out[12 + outPos] = (long)in[33 + inPos] & 255L | (long)in[34 + inPos] << 8 & 65535L | (long)in[35 + inPos] << 16 & 4194303L;
         out[13 + outPos] = (long)in[35 + inPos] >> 6 & 3L | (long)in[36 + inPos] << 2 & 1023L | (long)in[37 + inPos] << 10 & 262143L | (long)in[38 + inPos] << 18 & 4194303L;
         out[14 + outPos] = (long)in[38 + inPos] >> 4 & 15L | (long)in[39 + inPos] << 4 & 4095L | (long)in[40 + inPos] << 12 & 1048575L | (long)in[41 + inPos] << 20 & 4194303L;
         out[15 + outPos] = (long)in[41 + inPos] >> 2 & 63L | (long)in[42 + inPos] << 6 & 16383L | (long)in[43 + inPos] << 14 & 4194303L;
         out[16 + outPos] = (long)in[44 + inPos] & 255L | (long)in[45 + inPos] << 8 & 65535L | (long)in[46 + inPos] << 16 & 4194303L;
         out[17 + outPos] = (long)in[46 + inPos] >> 6 & 3L | (long)in[47 + inPos] << 2 & 1023L | (long)in[48 + inPos] << 10 & 262143L | (long)in[49 + inPos] << 18 & 4194303L;
         out[18 + outPos] = (long)in[49 + inPos] >> 4 & 15L | (long)in[50 + inPos] << 4 & 4095L | (long)in[51 + inPos] << 12 & 1048575L | (long)in[52 + inPos] << 20 & 4194303L;
         out[19 + outPos] = (long)in[52 + inPos] >> 2 & 63L | (long)in[53 + inPos] << 6 & 16383L | (long)in[54 + inPos] << 14 & 4194303L;
         out[20 + outPos] = (long)in[55 + inPos] & 255L | (long)in[56 + inPos] << 8 & 65535L | (long)in[57 + inPos] << 16 & 4194303L;
         out[21 + outPos] = (long)in[57 + inPos] >> 6 & 3L | (long)in[58 + inPos] << 2 & 1023L | (long)in[59 + inPos] << 10 & 262143L | (long)in[60 + inPos] << 18 & 4194303L;
         out[22 + outPos] = (long)in[60 + inPos] >> 4 & 15L | (long)in[61 + inPos] << 4 & 4095L | (long)in[62 + inPos] << 12 & 1048575L | (long)in[63 + inPos] << 20 & 4194303L;
         out[23 + outPos] = (long)in[63 + inPos] >> 2 & 63L | (long)in[64 + inPos] << 6 & 16383L | (long)in[65 + inPos] << 14 & 4194303L;
         out[24 + outPos] = (long)in[66 + inPos] & 255L | (long)in[67 + inPos] << 8 & 65535L | (long)in[68 + inPos] << 16 & 4194303L;
         out[25 + outPos] = (long)in[68 + inPos] >> 6 & 3L | (long)in[69 + inPos] << 2 & 1023L | (long)in[70 + inPos] << 10 & 262143L | (long)in[71 + inPos] << 18 & 4194303L;
         out[26 + outPos] = (long)in[71 + inPos] >> 4 & 15L | (long)in[72 + inPos] << 4 & 4095L | (long)in[73 + inPos] << 12 & 1048575L | (long)in[74 + inPos] << 20 & 4194303L;
         out[27 + outPos] = (long)in[74 + inPos] >> 2 & 63L | (long)in[75 + inPos] << 6 & 16383L | (long)in[76 + inPos] << 14 & 4194303L;
         out[28 + outPos] = (long)in[77 + inPos] & 255L | (long)in[78 + inPos] << 8 & 65535L | (long)in[79 + inPos] << 16 & 4194303L;
         out[29 + outPos] = (long)in[79 + inPos] >> 6 & 3L | (long)in[80 + inPos] << 2 & 1023L | (long)in[81 + inPos] << 10 & 262143L | (long)in[82 + inPos] << 18 & 4194303L;
         out[30 + outPos] = (long)in[82 + inPos] >> 4 & 15L | (long)in[83 + inPos] << 4 & 4095L | (long)in[84 + inPos] << 12 & 1048575L | (long)in[85 + inPos] << 20 & 4194303L;
         out[31 + outPos] = (long)in[85 + inPos] >> 2 & 63L | (long)in[86 + inPos] << 6 & 16383L | (long)in[87 + inPos] << 14 & 4194303L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 4194303L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 6 & 3L | (long)in.get(3 + inPos) << 2 & 1023L | (long)in.get(4 + inPos) << 10 & 262143L | (long)in.get(5 + inPos) << 18 & 4194303L;
         out[2 + outPos] = (long)in.get(5 + inPos) >> 4 & 15L | (long)in.get(6 + inPos) << 4 & 4095L | (long)in.get(7 + inPos) << 12 & 1048575L | (long)in.get(8 + inPos) << 20 & 4194303L;
         out[3 + outPos] = (long)in.get(8 + inPos) >> 2 & 63L | (long)in.get(9 + inPos) << 6 & 16383L | (long)in.get(10 + inPos) << 14 & 4194303L;
         out[4 + outPos] = (long)in.get(11 + inPos) & 255L | (long)in.get(12 + inPos) << 8 & 65535L | (long)in.get(13 + inPos) << 16 & 4194303L;
         out[5 + outPos] = (long)in.get(13 + inPos) >> 6 & 3L | (long)in.get(14 + inPos) << 2 & 1023L | (long)in.get(15 + inPos) << 10 & 262143L | (long)in.get(16 + inPos) << 18 & 4194303L;
         out[6 + outPos] = (long)in.get(16 + inPos) >> 4 & 15L | (long)in.get(17 + inPos) << 4 & 4095L | (long)in.get(18 + inPos) << 12 & 1048575L | (long)in.get(19 + inPos) << 20 & 4194303L;
         out[7 + outPos] = (long)in.get(19 + inPos) >> 2 & 63L | (long)in.get(20 + inPos) << 6 & 16383L | (long)in.get(21 + inPos) << 14 & 4194303L;
         out[8 + outPos] = (long)in.get(22 + inPos) & 255L | (long)in.get(23 + inPos) << 8 & 65535L | (long)in.get(24 + inPos) << 16 & 4194303L;
         out[9 + outPos] = (long)in.get(24 + inPos) >> 6 & 3L | (long)in.get(25 + inPos) << 2 & 1023L | (long)in.get(26 + inPos) << 10 & 262143L | (long)in.get(27 + inPos) << 18 & 4194303L;
         out[10 + outPos] = (long)in.get(27 + inPos) >> 4 & 15L | (long)in.get(28 + inPos) << 4 & 4095L | (long)in.get(29 + inPos) << 12 & 1048575L | (long)in.get(30 + inPos) << 20 & 4194303L;
         out[11 + outPos] = (long)in.get(30 + inPos) >> 2 & 63L | (long)in.get(31 + inPos) << 6 & 16383L | (long)in.get(32 + inPos) << 14 & 4194303L;
         out[12 + outPos] = (long)in.get(33 + inPos) & 255L | (long)in.get(34 + inPos) << 8 & 65535L | (long)in.get(35 + inPos) << 16 & 4194303L;
         out[13 + outPos] = (long)in.get(35 + inPos) >> 6 & 3L | (long)in.get(36 + inPos) << 2 & 1023L | (long)in.get(37 + inPos) << 10 & 262143L | (long)in.get(38 + inPos) << 18 & 4194303L;
         out[14 + outPos] = (long)in.get(38 + inPos) >> 4 & 15L | (long)in.get(39 + inPos) << 4 & 4095L | (long)in.get(40 + inPos) << 12 & 1048575L | (long)in.get(41 + inPos) << 20 & 4194303L;
         out[15 + outPos] = (long)in.get(41 + inPos) >> 2 & 63L | (long)in.get(42 + inPos) << 6 & 16383L | (long)in.get(43 + inPos) << 14 & 4194303L;
         out[16 + outPos] = (long)in.get(44 + inPos) & 255L | (long)in.get(45 + inPos) << 8 & 65535L | (long)in.get(46 + inPos) << 16 & 4194303L;
         out[17 + outPos] = (long)in.get(46 + inPos) >> 6 & 3L | (long)in.get(47 + inPos) << 2 & 1023L | (long)in.get(48 + inPos) << 10 & 262143L | (long)in.get(49 + inPos) << 18 & 4194303L;
         out[18 + outPos] = (long)in.get(49 + inPos) >> 4 & 15L | (long)in.get(50 + inPos) << 4 & 4095L | (long)in.get(51 + inPos) << 12 & 1048575L | (long)in.get(52 + inPos) << 20 & 4194303L;
         out[19 + outPos] = (long)in.get(52 + inPos) >> 2 & 63L | (long)in.get(53 + inPos) << 6 & 16383L | (long)in.get(54 + inPos) << 14 & 4194303L;
         out[20 + outPos] = (long)in.get(55 + inPos) & 255L | (long)in.get(56 + inPos) << 8 & 65535L | (long)in.get(57 + inPos) << 16 & 4194303L;
         out[21 + outPos] = (long)in.get(57 + inPos) >> 6 & 3L | (long)in.get(58 + inPos) << 2 & 1023L | (long)in.get(59 + inPos) << 10 & 262143L | (long)in.get(60 + inPos) << 18 & 4194303L;
         out[22 + outPos] = (long)in.get(60 + inPos) >> 4 & 15L | (long)in.get(61 + inPos) << 4 & 4095L | (long)in.get(62 + inPos) << 12 & 1048575L | (long)in.get(63 + inPos) << 20 & 4194303L;
         out[23 + outPos] = (long)in.get(63 + inPos) >> 2 & 63L | (long)in.get(64 + inPos) << 6 & 16383L | (long)in.get(65 + inPos) << 14 & 4194303L;
         out[24 + outPos] = (long)in.get(66 + inPos) & 255L | (long)in.get(67 + inPos) << 8 & 65535L | (long)in.get(68 + inPos) << 16 & 4194303L;
         out[25 + outPos] = (long)in.get(68 + inPos) >> 6 & 3L | (long)in.get(69 + inPos) << 2 & 1023L | (long)in.get(70 + inPos) << 10 & 262143L | (long)in.get(71 + inPos) << 18 & 4194303L;
         out[26 + outPos] = (long)in.get(71 + inPos) >> 4 & 15L | (long)in.get(72 + inPos) << 4 & 4095L | (long)in.get(73 + inPos) << 12 & 1048575L | (long)in.get(74 + inPos) << 20 & 4194303L;
         out[27 + outPos] = (long)in.get(74 + inPos) >> 2 & 63L | (long)in.get(75 + inPos) << 6 & 16383L | (long)in.get(76 + inPos) << 14 & 4194303L;
         out[28 + outPos] = (long)in.get(77 + inPos) & 255L | (long)in.get(78 + inPos) << 8 & 65535L | (long)in.get(79 + inPos) << 16 & 4194303L;
         out[29 + outPos] = (long)in.get(79 + inPos) >> 6 & 3L | (long)in.get(80 + inPos) << 2 & 1023L | (long)in.get(81 + inPos) << 10 & 262143L | (long)in.get(82 + inPos) << 18 & 4194303L;
         out[30 + outPos] = (long)in.get(82 + inPos) >> 4 & 15L | (long)in.get(83 + inPos) << 4 & 4095L | (long)in.get(84 + inPos) << 12 & 1048575L | (long)in.get(85 + inPos) << 20 & 4194303L;
         out[31 + outPos] = (long)in.get(85 + inPos) >> 2 & 63L | (long)in.get(86 + inPos) << 6 & 16383L | (long)in.get(87 + inPos) << 14 & 4194303L;
      }
   }

   private static final class Packer23 extends BytePackerForLong {
      private Packer23() {
         super(23);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 8388607L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 8388607L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 8388607L) >>> 16 | (in[1 + inPos] & 8388607L) << 7) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 8388607L) >>> 1 & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 8388607L) >>> 9 & 255L));
         out[5 + outPos] = (byte)((int)(((in[1 + inPos] & 8388607L) >>> 17 | (in[2 + inPos] & 8388607L) << 6) & 255L));
         out[6 + outPos] = (byte)((int)((in[2 + inPos] & 8388607L) >>> 2 & 255L));
         out[7 + outPos] = (byte)((int)((in[2 + inPos] & 8388607L) >>> 10 & 255L));
         out[8 + outPos] = (byte)((int)(((in[2 + inPos] & 8388607L) >>> 18 | (in[3 + inPos] & 8388607L) << 5) & 255L));
         out[9 + outPos] = (byte)((int)((in[3 + inPos] & 8388607L) >>> 3 & 255L));
         out[10 + outPos] = (byte)((int)((in[3 + inPos] & 8388607L) >>> 11 & 255L));
         out[11 + outPos] = (byte)((int)(((in[3 + inPos] & 8388607L) >>> 19 | (in[4 + inPos] & 8388607L) << 4) & 255L));
         out[12 + outPos] = (byte)((int)((in[4 + inPos] & 8388607L) >>> 4 & 255L));
         out[13 + outPos] = (byte)((int)((in[4 + inPos] & 8388607L) >>> 12 & 255L));
         out[14 + outPos] = (byte)((int)(((in[4 + inPos] & 8388607L) >>> 20 | (in[5 + inPos] & 8388607L) << 3) & 255L));
         out[15 + outPos] = (byte)((int)((in[5 + inPos] & 8388607L) >>> 5 & 255L));
         out[16 + outPos] = (byte)((int)((in[5 + inPos] & 8388607L) >>> 13 & 255L));
         out[17 + outPos] = (byte)((int)(((in[5 + inPos] & 8388607L) >>> 21 | (in[6 + inPos] & 8388607L) << 2) & 255L));
         out[18 + outPos] = (byte)((int)((in[6 + inPos] & 8388607L) >>> 6 & 255L));
         out[19 + outPos] = (byte)((int)((in[6 + inPos] & 8388607L) >>> 14 & 255L));
         out[20 + outPos] = (byte)((int)(((in[6 + inPos] & 8388607L) >>> 22 | (in[7 + inPos] & 8388607L) << 1) & 255L));
         out[21 + outPos] = (byte)((int)((in[7 + inPos] & 8388607L) >>> 7 & 255L));
         out[22 + outPos] = (byte)((int)((in[7 + inPos] & 8388607L) >>> 15 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 8388607L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 8388607L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)(((in[0 + inPos] & 8388607L) >>> 16 | (in[1 + inPos] & 8388607L) << 7) & 255L));
         out[3 + outPos] = (byte)((int)((in[1 + inPos] & 8388607L) >>> 1 & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 8388607L) >>> 9 & 255L));
         out[5 + outPos] = (byte)((int)(((in[1 + inPos] & 8388607L) >>> 17 | (in[2 + inPos] & 8388607L) << 6) & 255L));
         out[6 + outPos] = (byte)((int)((in[2 + inPos] & 8388607L) >>> 2 & 255L));
         out[7 + outPos] = (byte)((int)((in[2 + inPos] & 8388607L) >>> 10 & 255L));
         out[8 + outPos] = (byte)((int)(((in[2 + inPos] & 8388607L) >>> 18 | (in[3 + inPos] & 8388607L) << 5) & 255L));
         out[9 + outPos] = (byte)((int)((in[3 + inPos] & 8388607L) >>> 3 & 255L));
         out[10 + outPos] = (byte)((int)((in[3 + inPos] & 8388607L) >>> 11 & 255L));
         out[11 + outPos] = (byte)((int)(((in[3 + inPos] & 8388607L) >>> 19 | (in[4 + inPos] & 8388607L) << 4) & 255L));
         out[12 + outPos] = (byte)((int)((in[4 + inPos] & 8388607L) >>> 4 & 255L));
         out[13 + outPos] = (byte)((int)((in[4 + inPos] & 8388607L) >>> 12 & 255L));
         out[14 + outPos] = (byte)((int)(((in[4 + inPos] & 8388607L) >>> 20 | (in[5 + inPos] & 8388607L) << 3) & 255L));
         out[15 + outPos] = (byte)((int)((in[5 + inPos] & 8388607L) >>> 5 & 255L));
         out[16 + outPos] = (byte)((int)((in[5 + inPos] & 8388607L) >>> 13 & 255L));
         out[17 + outPos] = (byte)((int)(((in[5 + inPos] & 8388607L) >>> 21 | (in[6 + inPos] & 8388607L) << 2) & 255L));
         out[18 + outPos] = (byte)((int)((in[6 + inPos] & 8388607L) >>> 6 & 255L));
         out[19 + outPos] = (byte)((int)((in[6 + inPos] & 8388607L) >>> 14 & 255L));
         out[20 + outPos] = (byte)((int)(((in[6 + inPos] & 8388607L) >>> 22 | (in[7 + inPos] & 8388607L) << 1) & 255L));
         out[21 + outPos] = (byte)((int)((in[7 + inPos] & 8388607L) >>> 7 & 255L));
         out[22 + outPos] = (byte)((int)((in[7 + inPos] & 8388607L) >>> 15 & 255L));
         out[23 + outPos] = (byte)((int)(in[8 + inPos] & 8388607L & 255L));
         out[24 + outPos] = (byte)((int)((in[8 + inPos] & 8388607L) >>> 8 & 255L));
         out[25 + outPos] = (byte)((int)(((in[8 + inPos] & 8388607L) >>> 16 | (in[9 + inPos] & 8388607L) << 7) & 255L));
         out[26 + outPos] = (byte)((int)((in[9 + inPos] & 8388607L) >>> 1 & 255L));
         out[27 + outPos] = (byte)((int)((in[9 + inPos] & 8388607L) >>> 9 & 255L));
         out[28 + outPos] = (byte)((int)(((in[9 + inPos] & 8388607L) >>> 17 | (in[10 + inPos] & 8388607L) << 6) & 255L));
         out[29 + outPos] = (byte)((int)((in[10 + inPos] & 8388607L) >>> 2 & 255L));
         out[30 + outPos] = (byte)((int)((in[10 + inPos] & 8388607L) >>> 10 & 255L));
         out[31 + outPos] = (byte)((int)(((in[10 + inPos] & 8388607L) >>> 18 | (in[11 + inPos] & 8388607L) << 5) & 255L));
         out[32 + outPos] = (byte)((int)((in[11 + inPos] & 8388607L) >>> 3 & 255L));
         out[33 + outPos] = (byte)((int)((in[11 + inPos] & 8388607L) >>> 11 & 255L));
         out[34 + outPos] = (byte)((int)(((in[11 + inPos] & 8388607L) >>> 19 | (in[12 + inPos] & 8388607L) << 4) & 255L));
         out[35 + outPos] = (byte)((int)((in[12 + inPos] & 8388607L) >>> 4 & 255L));
         out[36 + outPos] = (byte)((int)((in[12 + inPos] & 8388607L) >>> 12 & 255L));
         out[37 + outPos] = (byte)((int)(((in[12 + inPos] & 8388607L) >>> 20 | (in[13 + inPos] & 8388607L) << 3) & 255L));
         out[38 + outPos] = (byte)((int)((in[13 + inPos] & 8388607L) >>> 5 & 255L));
         out[39 + outPos] = (byte)((int)((in[13 + inPos] & 8388607L) >>> 13 & 255L));
         out[40 + outPos] = (byte)((int)(((in[13 + inPos] & 8388607L) >>> 21 | (in[14 + inPos] & 8388607L) << 2) & 255L));
         out[41 + outPos] = (byte)((int)((in[14 + inPos] & 8388607L) >>> 6 & 255L));
         out[42 + outPos] = (byte)((int)((in[14 + inPos] & 8388607L) >>> 14 & 255L));
         out[43 + outPos] = (byte)((int)(((in[14 + inPos] & 8388607L) >>> 22 | (in[15 + inPos] & 8388607L) << 1) & 255L));
         out[44 + outPos] = (byte)((int)((in[15 + inPos] & 8388607L) >>> 7 & 255L));
         out[45 + outPos] = (byte)((int)((in[15 + inPos] & 8388607L) >>> 15 & 255L));
         out[46 + outPos] = (byte)((int)(in[16 + inPos] & 8388607L & 255L));
         out[47 + outPos] = (byte)((int)((in[16 + inPos] & 8388607L) >>> 8 & 255L));
         out[48 + outPos] = (byte)((int)(((in[16 + inPos] & 8388607L) >>> 16 | (in[17 + inPos] & 8388607L) << 7) & 255L));
         out[49 + outPos] = (byte)((int)((in[17 + inPos] & 8388607L) >>> 1 & 255L));
         out[50 + outPos] = (byte)((int)((in[17 + inPos] & 8388607L) >>> 9 & 255L));
         out[51 + outPos] = (byte)((int)(((in[17 + inPos] & 8388607L) >>> 17 | (in[18 + inPos] & 8388607L) << 6) & 255L));
         out[52 + outPos] = (byte)((int)((in[18 + inPos] & 8388607L) >>> 2 & 255L));
         out[53 + outPos] = (byte)((int)((in[18 + inPos] & 8388607L) >>> 10 & 255L));
         out[54 + outPos] = (byte)((int)(((in[18 + inPos] & 8388607L) >>> 18 | (in[19 + inPos] & 8388607L) << 5) & 255L));
         out[55 + outPos] = (byte)((int)((in[19 + inPos] & 8388607L) >>> 3 & 255L));
         out[56 + outPos] = (byte)((int)((in[19 + inPos] & 8388607L) >>> 11 & 255L));
         out[57 + outPos] = (byte)((int)(((in[19 + inPos] & 8388607L) >>> 19 | (in[20 + inPos] & 8388607L) << 4) & 255L));
         out[58 + outPos] = (byte)((int)((in[20 + inPos] & 8388607L) >>> 4 & 255L));
         out[59 + outPos] = (byte)((int)((in[20 + inPos] & 8388607L) >>> 12 & 255L));
         out[60 + outPos] = (byte)((int)(((in[20 + inPos] & 8388607L) >>> 20 | (in[21 + inPos] & 8388607L) << 3) & 255L));
         out[61 + outPos] = (byte)((int)((in[21 + inPos] & 8388607L) >>> 5 & 255L));
         out[62 + outPos] = (byte)((int)((in[21 + inPos] & 8388607L) >>> 13 & 255L));
         out[63 + outPos] = (byte)((int)(((in[21 + inPos] & 8388607L) >>> 21 | (in[22 + inPos] & 8388607L) << 2) & 255L));
         out[64 + outPos] = (byte)((int)((in[22 + inPos] & 8388607L) >>> 6 & 255L));
         out[65 + outPos] = (byte)((int)((in[22 + inPos] & 8388607L) >>> 14 & 255L));
         out[66 + outPos] = (byte)((int)(((in[22 + inPos] & 8388607L) >>> 22 | (in[23 + inPos] & 8388607L) << 1) & 255L));
         out[67 + outPos] = (byte)((int)((in[23 + inPos] & 8388607L) >>> 7 & 255L));
         out[68 + outPos] = (byte)((int)((in[23 + inPos] & 8388607L) >>> 15 & 255L));
         out[69 + outPos] = (byte)((int)(in[24 + inPos] & 8388607L & 255L));
         out[70 + outPos] = (byte)((int)((in[24 + inPos] & 8388607L) >>> 8 & 255L));
         out[71 + outPos] = (byte)((int)(((in[24 + inPos] & 8388607L) >>> 16 | (in[25 + inPos] & 8388607L) << 7) & 255L));
         out[72 + outPos] = (byte)((int)((in[25 + inPos] & 8388607L) >>> 1 & 255L));
         out[73 + outPos] = (byte)((int)((in[25 + inPos] & 8388607L) >>> 9 & 255L));
         out[74 + outPos] = (byte)((int)(((in[25 + inPos] & 8388607L) >>> 17 | (in[26 + inPos] & 8388607L) << 6) & 255L));
         out[75 + outPos] = (byte)((int)((in[26 + inPos] & 8388607L) >>> 2 & 255L));
         out[76 + outPos] = (byte)((int)((in[26 + inPos] & 8388607L) >>> 10 & 255L));
         out[77 + outPos] = (byte)((int)(((in[26 + inPos] & 8388607L) >>> 18 | (in[27 + inPos] & 8388607L) << 5) & 255L));
         out[78 + outPos] = (byte)((int)((in[27 + inPos] & 8388607L) >>> 3 & 255L));
         out[79 + outPos] = (byte)((int)((in[27 + inPos] & 8388607L) >>> 11 & 255L));
         out[80 + outPos] = (byte)((int)(((in[27 + inPos] & 8388607L) >>> 19 | (in[28 + inPos] & 8388607L) << 4) & 255L));
         out[81 + outPos] = (byte)((int)((in[28 + inPos] & 8388607L) >>> 4 & 255L));
         out[82 + outPos] = (byte)((int)((in[28 + inPos] & 8388607L) >>> 12 & 255L));
         out[83 + outPos] = (byte)((int)(((in[28 + inPos] & 8388607L) >>> 20 | (in[29 + inPos] & 8388607L) << 3) & 255L));
         out[84 + outPos] = (byte)((int)((in[29 + inPos] & 8388607L) >>> 5 & 255L));
         out[85 + outPos] = (byte)((int)((in[29 + inPos] & 8388607L) >>> 13 & 255L));
         out[86 + outPos] = (byte)((int)(((in[29 + inPos] & 8388607L) >>> 21 | (in[30 + inPos] & 8388607L) << 2) & 255L));
         out[87 + outPos] = (byte)((int)((in[30 + inPos] & 8388607L) >>> 6 & 255L));
         out[88 + outPos] = (byte)((int)((in[30 + inPos] & 8388607L) >>> 14 & 255L));
         out[89 + outPos] = (byte)((int)(((in[30 + inPos] & 8388607L) >>> 22 | (in[31 + inPos] & 8388607L) << 1) & 255L));
         out[90 + outPos] = (byte)((int)((in[31 + inPos] & 8388607L) >>> 7 & 255L));
         out[91 + outPos] = (byte)((int)((in[31 + inPos] & 8388607L) >>> 15 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 8388607L;
         out[1 + outPos] = (long)in[2 + inPos] >> 7 & 1L | (long)in[3 + inPos] << 1 & 511L | (long)in[4 + inPos] << 9 & 131071L | (long)in[5 + inPos] << 17 & 8388607L;
         out[2 + outPos] = (long)in[5 + inPos] >> 6 & 3L | (long)in[6 + inPos] << 2 & 1023L | (long)in[7 + inPos] << 10 & 262143L | (long)in[8 + inPos] << 18 & 8388607L;
         out[3 + outPos] = (long)in[8 + inPos] >> 5 & 7L | (long)in[9 + inPos] << 3 & 2047L | (long)in[10 + inPos] << 11 & 524287L | (long)in[11 + inPos] << 19 & 8388607L;
         out[4 + outPos] = (long)in[11 + inPos] >> 4 & 15L | (long)in[12 + inPos] << 4 & 4095L | (long)in[13 + inPos] << 12 & 1048575L | (long)in[14 + inPos] << 20 & 8388607L;
         out[5 + outPos] = (long)in[14 + inPos] >> 3 & 31L | (long)in[15 + inPos] << 5 & 8191L | (long)in[16 + inPos] << 13 & 2097151L | (long)in[17 + inPos] << 21 & 8388607L;
         out[6 + outPos] = (long)in[17 + inPos] >> 2 & 63L | (long)in[18 + inPos] << 6 & 16383L | (long)in[19 + inPos] << 14 & 4194303L | (long)in[20 + inPos] << 22 & 8388607L;
         out[7 + outPos] = (long)in[20 + inPos] >> 1 & 127L | (long)in[21 + inPos] << 7 & 32767L | (long)in[22 + inPos] << 15 & 8388607L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 8388607L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 7 & 1L | (long)in.get(3 + inPos) << 1 & 511L | (long)in.get(4 + inPos) << 9 & 131071L | (long)in.get(5 + inPos) << 17 & 8388607L;
         out[2 + outPos] = (long)in.get(5 + inPos) >> 6 & 3L | (long)in.get(6 + inPos) << 2 & 1023L | (long)in.get(7 + inPos) << 10 & 262143L | (long)in.get(8 + inPos) << 18 & 8388607L;
         out[3 + outPos] = (long)in.get(8 + inPos) >> 5 & 7L | (long)in.get(9 + inPos) << 3 & 2047L | (long)in.get(10 + inPos) << 11 & 524287L | (long)in.get(11 + inPos) << 19 & 8388607L;
         out[4 + outPos] = (long)in.get(11 + inPos) >> 4 & 15L | (long)in.get(12 + inPos) << 4 & 4095L | (long)in.get(13 + inPos) << 12 & 1048575L | (long)in.get(14 + inPos) << 20 & 8388607L;
         out[5 + outPos] = (long)in.get(14 + inPos) >> 3 & 31L | (long)in.get(15 + inPos) << 5 & 8191L | (long)in.get(16 + inPos) << 13 & 2097151L | (long)in.get(17 + inPos) << 21 & 8388607L;
         out[6 + outPos] = (long)in.get(17 + inPos) >> 2 & 63L | (long)in.get(18 + inPos) << 6 & 16383L | (long)in.get(19 + inPos) << 14 & 4194303L | (long)in.get(20 + inPos) << 22 & 8388607L;
         out[7 + outPos] = (long)in.get(20 + inPos) >> 1 & 127L | (long)in.get(21 + inPos) << 7 & 32767L | (long)in.get(22 + inPos) << 15 & 8388607L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 8388607L;
         out[1 + outPos] = (long)in[2 + inPos] >> 7 & 1L | (long)in[3 + inPos] << 1 & 511L | (long)in[4 + inPos] << 9 & 131071L | (long)in[5 + inPos] << 17 & 8388607L;
         out[2 + outPos] = (long)in[5 + inPos] >> 6 & 3L | (long)in[6 + inPos] << 2 & 1023L | (long)in[7 + inPos] << 10 & 262143L | (long)in[8 + inPos] << 18 & 8388607L;
         out[3 + outPos] = (long)in[8 + inPos] >> 5 & 7L | (long)in[9 + inPos] << 3 & 2047L | (long)in[10 + inPos] << 11 & 524287L | (long)in[11 + inPos] << 19 & 8388607L;
         out[4 + outPos] = (long)in[11 + inPos] >> 4 & 15L | (long)in[12 + inPos] << 4 & 4095L | (long)in[13 + inPos] << 12 & 1048575L | (long)in[14 + inPos] << 20 & 8388607L;
         out[5 + outPos] = (long)in[14 + inPos] >> 3 & 31L | (long)in[15 + inPos] << 5 & 8191L | (long)in[16 + inPos] << 13 & 2097151L | (long)in[17 + inPos] << 21 & 8388607L;
         out[6 + outPos] = (long)in[17 + inPos] >> 2 & 63L | (long)in[18 + inPos] << 6 & 16383L | (long)in[19 + inPos] << 14 & 4194303L | (long)in[20 + inPos] << 22 & 8388607L;
         out[7 + outPos] = (long)in[20 + inPos] >> 1 & 127L | (long)in[21 + inPos] << 7 & 32767L | (long)in[22 + inPos] << 15 & 8388607L;
         out[8 + outPos] = (long)in[23 + inPos] & 255L | (long)in[24 + inPos] << 8 & 65535L | (long)in[25 + inPos] << 16 & 8388607L;
         out[9 + outPos] = (long)in[25 + inPos] >> 7 & 1L | (long)in[26 + inPos] << 1 & 511L | (long)in[27 + inPos] << 9 & 131071L | (long)in[28 + inPos] << 17 & 8388607L;
         out[10 + outPos] = (long)in[28 + inPos] >> 6 & 3L | (long)in[29 + inPos] << 2 & 1023L | (long)in[30 + inPos] << 10 & 262143L | (long)in[31 + inPos] << 18 & 8388607L;
         out[11 + outPos] = (long)in[31 + inPos] >> 5 & 7L | (long)in[32 + inPos] << 3 & 2047L | (long)in[33 + inPos] << 11 & 524287L | (long)in[34 + inPos] << 19 & 8388607L;
         out[12 + outPos] = (long)in[34 + inPos] >> 4 & 15L | (long)in[35 + inPos] << 4 & 4095L | (long)in[36 + inPos] << 12 & 1048575L | (long)in[37 + inPos] << 20 & 8388607L;
         out[13 + outPos] = (long)in[37 + inPos] >> 3 & 31L | (long)in[38 + inPos] << 5 & 8191L | (long)in[39 + inPos] << 13 & 2097151L | (long)in[40 + inPos] << 21 & 8388607L;
         out[14 + outPos] = (long)in[40 + inPos] >> 2 & 63L | (long)in[41 + inPos] << 6 & 16383L | (long)in[42 + inPos] << 14 & 4194303L | (long)in[43 + inPos] << 22 & 8388607L;
         out[15 + outPos] = (long)in[43 + inPos] >> 1 & 127L | (long)in[44 + inPos] << 7 & 32767L | (long)in[45 + inPos] << 15 & 8388607L;
         out[16 + outPos] = (long)in[46 + inPos] & 255L | (long)in[47 + inPos] << 8 & 65535L | (long)in[48 + inPos] << 16 & 8388607L;
         out[17 + outPos] = (long)in[48 + inPos] >> 7 & 1L | (long)in[49 + inPos] << 1 & 511L | (long)in[50 + inPos] << 9 & 131071L | (long)in[51 + inPos] << 17 & 8388607L;
         out[18 + outPos] = (long)in[51 + inPos] >> 6 & 3L | (long)in[52 + inPos] << 2 & 1023L | (long)in[53 + inPos] << 10 & 262143L | (long)in[54 + inPos] << 18 & 8388607L;
         out[19 + outPos] = (long)in[54 + inPos] >> 5 & 7L | (long)in[55 + inPos] << 3 & 2047L | (long)in[56 + inPos] << 11 & 524287L | (long)in[57 + inPos] << 19 & 8388607L;
         out[20 + outPos] = (long)in[57 + inPos] >> 4 & 15L | (long)in[58 + inPos] << 4 & 4095L | (long)in[59 + inPos] << 12 & 1048575L | (long)in[60 + inPos] << 20 & 8388607L;
         out[21 + outPos] = (long)in[60 + inPos] >> 3 & 31L | (long)in[61 + inPos] << 5 & 8191L | (long)in[62 + inPos] << 13 & 2097151L | (long)in[63 + inPos] << 21 & 8388607L;
         out[22 + outPos] = (long)in[63 + inPos] >> 2 & 63L | (long)in[64 + inPos] << 6 & 16383L | (long)in[65 + inPos] << 14 & 4194303L | (long)in[66 + inPos] << 22 & 8388607L;
         out[23 + outPos] = (long)in[66 + inPos] >> 1 & 127L | (long)in[67 + inPos] << 7 & 32767L | (long)in[68 + inPos] << 15 & 8388607L;
         out[24 + outPos] = (long)in[69 + inPos] & 255L | (long)in[70 + inPos] << 8 & 65535L | (long)in[71 + inPos] << 16 & 8388607L;
         out[25 + outPos] = (long)in[71 + inPos] >> 7 & 1L | (long)in[72 + inPos] << 1 & 511L | (long)in[73 + inPos] << 9 & 131071L | (long)in[74 + inPos] << 17 & 8388607L;
         out[26 + outPos] = (long)in[74 + inPos] >> 6 & 3L | (long)in[75 + inPos] << 2 & 1023L | (long)in[76 + inPos] << 10 & 262143L | (long)in[77 + inPos] << 18 & 8388607L;
         out[27 + outPos] = (long)in[77 + inPos] >> 5 & 7L | (long)in[78 + inPos] << 3 & 2047L | (long)in[79 + inPos] << 11 & 524287L | (long)in[80 + inPos] << 19 & 8388607L;
         out[28 + outPos] = (long)in[80 + inPos] >> 4 & 15L | (long)in[81 + inPos] << 4 & 4095L | (long)in[82 + inPos] << 12 & 1048575L | (long)in[83 + inPos] << 20 & 8388607L;
         out[29 + outPos] = (long)in[83 + inPos] >> 3 & 31L | (long)in[84 + inPos] << 5 & 8191L | (long)in[85 + inPos] << 13 & 2097151L | (long)in[86 + inPos] << 21 & 8388607L;
         out[30 + outPos] = (long)in[86 + inPos] >> 2 & 63L | (long)in[87 + inPos] << 6 & 16383L | (long)in[88 + inPos] << 14 & 4194303L | (long)in[89 + inPos] << 22 & 8388607L;
         out[31 + outPos] = (long)in[89 + inPos] >> 1 & 127L | (long)in[90 + inPos] << 7 & 32767L | (long)in[91 + inPos] << 15 & 8388607L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 8388607L;
         out[1 + outPos] = (long)in.get(2 + inPos) >> 7 & 1L | (long)in.get(3 + inPos) << 1 & 511L | (long)in.get(4 + inPos) << 9 & 131071L | (long)in.get(5 + inPos) << 17 & 8388607L;
         out[2 + outPos] = (long)in.get(5 + inPos) >> 6 & 3L | (long)in.get(6 + inPos) << 2 & 1023L | (long)in.get(7 + inPos) << 10 & 262143L | (long)in.get(8 + inPos) << 18 & 8388607L;
         out[3 + outPos] = (long)in.get(8 + inPos) >> 5 & 7L | (long)in.get(9 + inPos) << 3 & 2047L | (long)in.get(10 + inPos) << 11 & 524287L | (long)in.get(11 + inPos) << 19 & 8388607L;
         out[4 + outPos] = (long)in.get(11 + inPos) >> 4 & 15L | (long)in.get(12 + inPos) << 4 & 4095L | (long)in.get(13 + inPos) << 12 & 1048575L | (long)in.get(14 + inPos) << 20 & 8388607L;
         out[5 + outPos] = (long)in.get(14 + inPos) >> 3 & 31L | (long)in.get(15 + inPos) << 5 & 8191L | (long)in.get(16 + inPos) << 13 & 2097151L | (long)in.get(17 + inPos) << 21 & 8388607L;
         out[6 + outPos] = (long)in.get(17 + inPos) >> 2 & 63L | (long)in.get(18 + inPos) << 6 & 16383L | (long)in.get(19 + inPos) << 14 & 4194303L | (long)in.get(20 + inPos) << 22 & 8388607L;
         out[7 + outPos] = (long)in.get(20 + inPos) >> 1 & 127L | (long)in.get(21 + inPos) << 7 & 32767L | (long)in.get(22 + inPos) << 15 & 8388607L;
         out[8 + outPos] = (long)in.get(23 + inPos) & 255L | (long)in.get(24 + inPos) << 8 & 65535L | (long)in.get(25 + inPos) << 16 & 8388607L;
         out[9 + outPos] = (long)in.get(25 + inPos) >> 7 & 1L | (long)in.get(26 + inPos) << 1 & 511L | (long)in.get(27 + inPos) << 9 & 131071L | (long)in.get(28 + inPos) << 17 & 8388607L;
         out[10 + outPos] = (long)in.get(28 + inPos) >> 6 & 3L | (long)in.get(29 + inPos) << 2 & 1023L | (long)in.get(30 + inPos) << 10 & 262143L | (long)in.get(31 + inPos) << 18 & 8388607L;
         out[11 + outPos] = (long)in.get(31 + inPos) >> 5 & 7L | (long)in.get(32 + inPos) << 3 & 2047L | (long)in.get(33 + inPos) << 11 & 524287L | (long)in.get(34 + inPos) << 19 & 8388607L;
         out[12 + outPos] = (long)in.get(34 + inPos) >> 4 & 15L | (long)in.get(35 + inPos) << 4 & 4095L | (long)in.get(36 + inPos) << 12 & 1048575L | (long)in.get(37 + inPos) << 20 & 8388607L;
         out[13 + outPos] = (long)in.get(37 + inPos) >> 3 & 31L | (long)in.get(38 + inPos) << 5 & 8191L | (long)in.get(39 + inPos) << 13 & 2097151L | (long)in.get(40 + inPos) << 21 & 8388607L;
         out[14 + outPos] = (long)in.get(40 + inPos) >> 2 & 63L | (long)in.get(41 + inPos) << 6 & 16383L | (long)in.get(42 + inPos) << 14 & 4194303L | (long)in.get(43 + inPos) << 22 & 8388607L;
         out[15 + outPos] = (long)in.get(43 + inPos) >> 1 & 127L | (long)in.get(44 + inPos) << 7 & 32767L | (long)in.get(45 + inPos) << 15 & 8388607L;
         out[16 + outPos] = (long)in.get(46 + inPos) & 255L | (long)in.get(47 + inPos) << 8 & 65535L | (long)in.get(48 + inPos) << 16 & 8388607L;
         out[17 + outPos] = (long)in.get(48 + inPos) >> 7 & 1L | (long)in.get(49 + inPos) << 1 & 511L | (long)in.get(50 + inPos) << 9 & 131071L | (long)in.get(51 + inPos) << 17 & 8388607L;
         out[18 + outPos] = (long)in.get(51 + inPos) >> 6 & 3L | (long)in.get(52 + inPos) << 2 & 1023L | (long)in.get(53 + inPos) << 10 & 262143L | (long)in.get(54 + inPos) << 18 & 8388607L;
         out[19 + outPos] = (long)in.get(54 + inPos) >> 5 & 7L | (long)in.get(55 + inPos) << 3 & 2047L | (long)in.get(56 + inPos) << 11 & 524287L | (long)in.get(57 + inPos) << 19 & 8388607L;
         out[20 + outPos] = (long)in.get(57 + inPos) >> 4 & 15L | (long)in.get(58 + inPos) << 4 & 4095L | (long)in.get(59 + inPos) << 12 & 1048575L | (long)in.get(60 + inPos) << 20 & 8388607L;
         out[21 + outPos] = (long)in.get(60 + inPos) >> 3 & 31L | (long)in.get(61 + inPos) << 5 & 8191L | (long)in.get(62 + inPos) << 13 & 2097151L | (long)in.get(63 + inPos) << 21 & 8388607L;
         out[22 + outPos] = (long)in.get(63 + inPos) >> 2 & 63L | (long)in.get(64 + inPos) << 6 & 16383L | (long)in.get(65 + inPos) << 14 & 4194303L | (long)in.get(66 + inPos) << 22 & 8388607L;
         out[23 + outPos] = (long)in.get(66 + inPos) >> 1 & 127L | (long)in.get(67 + inPos) << 7 & 32767L | (long)in.get(68 + inPos) << 15 & 8388607L;
         out[24 + outPos] = (long)in.get(69 + inPos) & 255L | (long)in.get(70 + inPos) << 8 & 65535L | (long)in.get(71 + inPos) << 16 & 8388607L;
         out[25 + outPos] = (long)in.get(71 + inPos) >> 7 & 1L | (long)in.get(72 + inPos) << 1 & 511L | (long)in.get(73 + inPos) << 9 & 131071L | (long)in.get(74 + inPos) << 17 & 8388607L;
         out[26 + outPos] = (long)in.get(74 + inPos) >> 6 & 3L | (long)in.get(75 + inPos) << 2 & 1023L | (long)in.get(76 + inPos) << 10 & 262143L | (long)in.get(77 + inPos) << 18 & 8388607L;
         out[27 + outPos] = (long)in.get(77 + inPos) >> 5 & 7L | (long)in.get(78 + inPos) << 3 & 2047L | (long)in.get(79 + inPos) << 11 & 524287L | (long)in.get(80 + inPos) << 19 & 8388607L;
         out[28 + outPos] = (long)in.get(80 + inPos) >> 4 & 15L | (long)in.get(81 + inPos) << 4 & 4095L | (long)in.get(82 + inPos) << 12 & 1048575L | (long)in.get(83 + inPos) << 20 & 8388607L;
         out[29 + outPos] = (long)in.get(83 + inPos) >> 3 & 31L | (long)in.get(84 + inPos) << 5 & 8191L | (long)in.get(85 + inPos) << 13 & 2097151L | (long)in.get(86 + inPos) << 21 & 8388607L;
         out[30 + outPos] = (long)in.get(86 + inPos) >> 2 & 63L | (long)in.get(87 + inPos) << 6 & 16383L | (long)in.get(88 + inPos) << 14 & 4194303L | (long)in.get(89 + inPos) << 22 & 8388607L;
         out[31 + outPos] = (long)in.get(89 + inPos) >> 1 & 127L | (long)in.get(90 + inPos) << 7 & 32767L | (long)in.get(91 + inPos) << 15 & 8388607L;
      }
   }

   private static final class Packer24 extends BytePackerForLong {
      private Packer24() {
         super(24);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 16777215L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 16777215L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 16777215L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(in[1 + inPos] & 16777215L & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 16777215L) >>> 8 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 16777215L) >>> 16 & 255L));
         out[6 + outPos] = (byte)((int)(in[2 + inPos] & 16777215L & 255L));
         out[7 + outPos] = (byte)((int)((in[2 + inPos] & 16777215L) >>> 8 & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 16777215L) >>> 16 & 255L));
         out[9 + outPos] = (byte)((int)(in[3 + inPos] & 16777215L & 255L));
         out[10 + outPos] = (byte)((int)((in[3 + inPos] & 16777215L) >>> 8 & 255L));
         out[11 + outPos] = (byte)((int)((in[3 + inPos] & 16777215L) >>> 16 & 255L));
         out[12 + outPos] = (byte)((int)(in[4 + inPos] & 16777215L & 255L));
         out[13 + outPos] = (byte)((int)((in[4 + inPos] & 16777215L) >>> 8 & 255L));
         out[14 + outPos] = (byte)((int)((in[4 + inPos] & 16777215L) >>> 16 & 255L));
         out[15 + outPos] = (byte)((int)(in[5 + inPos] & 16777215L & 255L));
         out[16 + outPos] = (byte)((int)((in[5 + inPos] & 16777215L) >>> 8 & 255L));
         out[17 + outPos] = (byte)((int)((in[5 + inPos] & 16777215L) >>> 16 & 255L));
         out[18 + outPos] = (byte)((int)(in[6 + inPos] & 16777215L & 255L));
         out[19 + outPos] = (byte)((int)((in[6 + inPos] & 16777215L) >>> 8 & 255L));
         out[20 + outPos] = (byte)((int)((in[6 + inPos] & 16777215L) >>> 16 & 255L));
         out[21 + outPos] = (byte)((int)(in[7 + inPos] & 16777215L & 255L));
         out[22 + outPos] = (byte)((int)((in[7 + inPos] & 16777215L) >>> 8 & 255L));
         out[23 + outPos] = (byte)((int)((in[7 + inPos] & 16777215L) >>> 16 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 16777215L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 16777215L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 16777215L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(in[1 + inPos] & 16777215L & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 16777215L) >>> 8 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 16777215L) >>> 16 & 255L));
         out[6 + outPos] = (byte)((int)(in[2 + inPos] & 16777215L & 255L));
         out[7 + outPos] = (byte)((int)((in[2 + inPos] & 16777215L) >>> 8 & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 16777215L) >>> 16 & 255L));
         out[9 + outPos] = (byte)((int)(in[3 + inPos] & 16777215L & 255L));
         out[10 + outPos] = (byte)((int)((in[3 + inPos] & 16777215L) >>> 8 & 255L));
         out[11 + outPos] = (byte)((int)((in[3 + inPos] & 16777215L) >>> 16 & 255L));
         out[12 + outPos] = (byte)((int)(in[4 + inPos] & 16777215L & 255L));
         out[13 + outPos] = (byte)((int)((in[4 + inPos] & 16777215L) >>> 8 & 255L));
         out[14 + outPos] = (byte)((int)((in[4 + inPos] & 16777215L) >>> 16 & 255L));
         out[15 + outPos] = (byte)((int)(in[5 + inPos] & 16777215L & 255L));
         out[16 + outPos] = (byte)((int)((in[5 + inPos] & 16777215L) >>> 8 & 255L));
         out[17 + outPos] = (byte)((int)((in[5 + inPos] & 16777215L) >>> 16 & 255L));
         out[18 + outPos] = (byte)((int)(in[6 + inPos] & 16777215L & 255L));
         out[19 + outPos] = (byte)((int)((in[6 + inPos] & 16777215L) >>> 8 & 255L));
         out[20 + outPos] = (byte)((int)((in[6 + inPos] & 16777215L) >>> 16 & 255L));
         out[21 + outPos] = (byte)((int)(in[7 + inPos] & 16777215L & 255L));
         out[22 + outPos] = (byte)((int)((in[7 + inPos] & 16777215L) >>> 8 & 255L));
         out[23 + outPos] = (byte)((int)((in[7 + inPos] & 16777215L) >>> 16 & 255L));
         out[24 + outPos] = (byte)((int)(in[8 + inPos] & 16777215L & 255L));
         out[25 + outPos] = (byte)((int)((in[8 + inPos] & 16777215L) >>> 8 & 255L));
         out[26 + outPos] = (byte)((int)((in[8 + inPos] & 16777215L) >>> 16 & 255L));
         out[27 + outPos] = (byte)((int)(in[9 + inPos] & 16777215L & 255L));
         out[28 + outPos] = (byte)((int)((in[9 + inPos] & 16777215L) >>> 8 & 255L));
         out[29 + outPos] = (byte)((int)((in[9 + inPos] & 16777215L) >>> 16 & 255L));
         out[30 + outPos] = (byte)((int)(in[10 + inPos] & 16777215L & 255L));
         out[31 + outPos] = (byte)((int)((in[10 + inPos] & 16777215L) >>> 8 & 255L));
         out[32 + outPos] = (byte)((int)((in[10 + inPos] & 16777215L) >>> 16 & 255L));
         out[33 + outPos] = (byte)((int)(in[11 + inPos] & 16777215L & 255L));
         out[34 + outPos] = (byte)((int)((in[11 + inPos] & 16777215L) >>> 8 & 255L));
         out[35 + outPos] = (byte)((int)((in[11 + inPos] & 16777215L) >>> 16 & 255L));
         out[36 + outPos] = (byte)((int)(in[12 + inPos] & 16777215L & 255L));
         out[37 + outPos] = (byte)((int)((in[12 + inPos] & 16777215L) >>> 8 & 255L));
         out[38 + outPos] = (byte)((int)((in[12 + inPos] & 16777215L) >>> 16 & 255L));
         out[39 + outPos] = (byte)((int)(in[13 + inPos] & 16777215L & 255L));
         out[40 + outPos] = (byte)((int)((in[13 + inPos] & 16777215L) >>> 8 & 255L));
         out[41 + outPos] = (byte)((int)((in[13 + inPos] & 16777215L) >>> 16 & 255L));
         out[42 + outPos] = (byte)((int)(in[14 + inPos] & 16777215L & 255L));
         out[43 + outPos] = (byte)((int)((in[14 + inPos] & 16777215L) >>> 8 & 255L));
         out[44 + outPos] = (byte)((int)((in[14 + inPos] & 16777215L) >>> 16 & 255L));
         out[45 + outPos] = (byte)((int)(in[15 + inPos] & 16777215L & 255L));
         out[46 + outPos] = (byte)((int)((in[15 + inPos] & 16777215L) >>> 8 & 255L));
         out[47 + outPos] = (byte)((int)((in[15 + inPos] & 16777215L) >>> 16 & 255L));
         out[48 + outPos] = (byte)((int)(in[16 + inPos] & 16777215L & 255L));
         out[49 + outPos] = (byte)((int)((in[16 + inPos] & 16777215L) >>> 8 & 255L));
         out[50 + outPos] = (byte)((int)((in[16 + inPos] & 16777215L) >>> 16 & 255L));
         out[51 + outPos] = (byte)((int)(in[17 + inPos] & 16777215L & 255L));
         out[52 + outPos] = (byte)((int)((in[17 + inPos] & 16777215L) >>> 8 & 255L));
         out[53 + outPos] = (byte)((int)((in[17 + inPos] & 16777215L) >>> 16 & 255L));
         out[54 + outPos] = (byte)((int)(in[18 + inPos] & 16777215L & 255L));
         out[55 + outPos] = (byte)((int)((in[18 + inPos] & 16777215L) >>> 8 & 255L));
         out[56 + outPos] = (byte)((int)((in[18 + inPos] & 16777215L) >>> 16 & 255L));
         out[57 + outPos] = (byte)((int)(in[19 + inPos] & 16777215L & 255L));
         out[58 + outPos] = (byte)((int)((in[19 + inPos] & 16777215L) >>> 8 & 255L));
         out[59 + outPos] = (byte)((int)((in[19 + inPos] & 16777215L) >>> 16 & 255L));
         out[60 + outPos] = (byte)((int)(in[20 + inPos] & 16777215L & 255L));
         out[61 + outPos] = (byte)((int)((in[20 + inPos] & 16777215L) >>> 8 & 255L));
         out[62 + outPos] = (byte)((int)((in[20 + inPos] & 16777215L) >>> 16 & 255L));
         out[63 + outPos] = (byte)((int)(in[21 + inPos] & 16777215L & 255L));
         out[64 + outPos] = (byte)((int)((in[21 + inPos] & 16777215L) >>> 8 & 255L));
         out[65 + outPos] = (byte)((int)((in[21 + inPos] & 16777215L) >>> 16 & 255L));
         out[66 + outPos] = (byte)((int)(in[22 + inPos] & 16777215L & 255L));
         out[67 + outPos] = (byte)((int)((in[22 + inPos] & 16777215L) >>> 8 & 255L));
         out[68 + outPos] = (byte)((int)((in[22 + inPos] & 16777215L) >>> 16 & 255L));
         out[69 + outPos] = (byte)((int)(in[23 + inPos] & 16777215L & 255L));
         out[70 + outPos] = (byte)((int)((in[23 + inPos] & 16777215L) >>> 8 & 255L));
         out[71 + outPos] = (byte)((int)((in[23 + inPos] & 16777215L) >>> 16 & 255L));
         out[72 + outPos] = (byte)((int)(in[24 + inPos] & 16777215L & 255L));
         out[73 + outPos] = (byte)((int)((in[24 + inPos] & 16777215L) >>> 8 & 255L));
         out[74 + outPos] = (byte)((int)((in[24 + inPos] & 16777215L) >>> 16 & 255L));
         out[75 + outPos] = (byte)((int)(in[25 + inPos] & 16777215L & 255L));
         out[76 + outPos] = (byte)((int)((in[25 + inPos] & 16777215L) >>> 8 & 255L));
         out[77 + outPos] = (byte)((int)((in[25 + inPos] & 16777215L) >>> 16 & 255L));
         out[78 + outPos] = (byte)((int)(in[26 + inPos] & 16777215L & 255L));
         out[79 + outPos] = (byte)((int)((in[26 + inPos] & 16777215L) >>> 8 & 255L));
         out[80 + outPos] = (byte)((int)((in[26 + inPos] & 16777215L) >>> 16 & 255L));
         out[81 + outPos] = (byte)((int)(in[27 + inPos] & 16777215L & 255L));
         out[82 + outPos] = (byte)((int)((in[27 + inPos] & 16777215L) >>> 8 & 255L));
         out[83 + outPos] = (byte)((int)((in[27 + inPos] & 16777215L) >>> 16 & 255L));
         out[84 + outPos] = (byte)((int)(in[28 + inPos] & 16777215L & 255L));
         out[85 + outPos] = (byte)((int)((in[28 + inPos] & 16777215L) >>> 8 & 255L));
         out[86 + outPos] = (byte)((int)((in[28 + inPos] & 16777215L) >>> 16 & 255L));
         out[87 + outPos] = (byte)((int)(in[29 + inPos] & 16777215L & 255L));
         out[88 + outPos] = (byte)((int)((in[29 + inPos] & 16777215L) >>> 8 & 255L));
         out[89 + outPos] = (byte)((int)((in[29 + inPos] & 16777215L) >>> 16 & 255L));
         out[90 + outPos] = (byte)((int)(in[30 + inPos] & 16777215L & 255L));
         out[91 + outPos] = (byte)((int)((in[30 + inPos] & 16777215L) >>> 8 & 255L));
         out[92 + outPos] = (byte)((int)((in[30 + inPos] & 16777215L) >>> 16 & 255L));
         out[93 + outPos] = (byte)((int)(in[31 + inPos] & 16777215L & 255L));
         out[94 + outPos] = (byte)((int)((in[31 + inPos] & 16777215L) >>> 8 & 255L));
         out[95 + outPos] = (byte)((int)((in[31 + inPos] & 16777215L) >>> 16 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L;
         out[1 + outPos] = (long)in[3 + inPos] & 255L | (long)in[4 + inPos] << 8 & 65535L | (long)in[5 + inPos] << 16 & 16777215L;
         out[2 + outPos] = (long)in[6 + inPos] & 255L | (long)in[7 + inPos] << 8 & 65535L | (long)in[8 + inPos] << 16 & 16777215L;
         out[3 + outPos] = (long)in[9 + inPos] & 255L | (long)in[10 + inPos] << 8 & 65535L | (long)in[11 + inPos] << 16 & 16777215L;
         out[4 + outPos] = (long)in[12 + inPos] & 255L | (long)in[13 + inPos] << 8 & 65535L | (long)in[14 + inPos] << 16 & 16777215L;
         out[5 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 65535L | (long)in[17 + inPos] << 16 & 16777215L;
         out[6 + outPos] = (long)in[18 + inPos] & 255L | (long)in[19 + inPos] << 8 & 65535L | (long)in[20 + inPos] << 16 & 16777215L;
         out[7 + outPos] = (long)in[21 + inPos] & 255L | (long)in[22 + inPos] << 8 & 65535L | (long)in[23 + inPos] << 16 & 16777215L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L;
         out[1 + outPos] = (long)in.get(3 + inPos) & 255L | (long)in.get(4 + inPos) << 8 & 65535L | (long)in.get(5 + inPos) << 16 & 16777215L;
         out[2 + outPos] = (long)in.get(6 + inPos) & 255L | (long)in.get(7 + inPos) << 8 & 65535L | (long)in.get(8 + inPos) << 16 & 16777215L;
         out[3 + outPos] = (long)in.get(9 + inPos) & 255L | (long)in.get(10 + inPos) << 8 & 65535L | (long)in.get(11 + inPos) << 16 & 16777215L;
         out[4 + outPos] = (long)in.get(12 + inPos) & 255L | (long)in.get(13 + inPos) << 8 & 65535L | (long)in.get(14 + inPos) << 16 & 16777215L;
         out[5 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 65535L | (long)in.get(17 + inPos) << 16 & 16777215L;
         out[6 + outPos] = (long)in.get(18 + inPos) & 255L | (long)in.get(19 + inPos) << 8 & 65535L | (long)in.get(20 + inPos) << 16 & 16777215L;
         out[7 + outPos] = (long)in.get(21 + inPos) & 255L | (long)in.get(22 + inPos) << 8 & 65535L | (long)in.get(23 + inPos) << 16 & 16777215L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L;
         out[1 + outPos] = (long)in[3 + inPos] & 255L | (long)in[4 + inPos] << 8 & 65535L | (long)in[5 + inPos] << 16 & 16777215L;
         out[2 + outPos] = (long)in[6 + inPos] & 255L | (long)in[7 + inPos] << 8 & 65535L | (long)in[8 + inPos] << 16 & 16777215L;
         out[3 + outPos] = (long)in[9 + inPos] & 255L | (long)in[10 + inPos] << 8 & 65535L | (long)in[11 + inPos] << 16 & 16777215L;
         out[4 + outPos] = (long)in[12 + inPos] & 255L | (long)in[13 + inPos] << 8 & 65535L | (long)in[14 + inPos] << 16 & 16777215L;
         out[5 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 65535L | (long)in[17 + inPos] << 16 & 16777215L;
         out[6 + outPos] = (long)in[18 + inPos] & 255L | (long)in[19 + inPos] << 8 & 65535L | (long)in[20 + inPos] << 16 & 16777215L;
         out[7 + outPos] = (long)in[21 + inPos] & 255L | (long)in[22 + inPos] << 8 & 65535L | (long)in[23 + inPos] << 16 & 16777215L;
         out[8 + outPos] = (long)in[24 + inPos] & 255L | (long)in[25 + inPos] << 8 & 65535L | (long)in[26 + inPos] << 16 & 16777215L;
         out[9 + outPos] = (long)in[27 + inPos] & 255L | (long)in[28 + inPos] << 8 & 65535L | (long)in[29 + inPos] << 16 & 16777215L;
         out[10 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 65535L | (long)in[32 + inPos] << 16 & 16777215L;
         out[11 + outPos] = (long)in[33 + inPos] & 255L | (long)in[34 + inPos] << 8 & 65535L | (long)in[35 + inPos] << 16 & 16777215L;
         out[12 + outPos] = (long)in[36 + inPos] & 255L | (long)in[37 + inPos] << 8 & 65535L | (long)in[38 + inPos] << 16 & 16777215L;
         out[13 + outPos] = (long)in[39 + inPos] & 255L | (long)in[40 + inPos] << 8 & 65535L | (long)in[41 + inPos] << 16 & 16777215L;
         out[14 + outPos] = (long)in[42 + inPos] & 255L | (long)in[43 + inPos] << 8 & 65535L | (long)in[44 + inPos] << 16 & 16777215L;
         out[15 + outPos] = (long)in[45 + inPos] & 255L | (long)in[46 + inPos] << 8 & 65535L | (long)in[47 + inPos] << 16 & 16777215L;
         out[16 + outPos] = (long)in[48 + inPos] & 255L | (long)in[49 + inPos] << 8 & 65535L | (long)in[50 + inPos] << 16 & 16777215L;
         out[17 + outPos] = (long)in[51 + inPos] & 255L | (long)in[52 + inPos] << 8 & 65535L | (long)in[53 + inPos] << 16 & 16777215L;
         out[18 + outPos] = (long)in[54 + inPos] & 255L | (long)in[55 + inPos] << 8 & 65535L | (long)in[56 + inPos] << 16 & 16777215L;
         out[19 + outPos] = (long)in[57 + inPos] & 255L | (long)in[58 + inPos] << 8 & 65535L | (long)in[59 + inPos] << 16 & 16777215L;
         out[20 + outPos] = (long)in[60 + inPos] & 255L | (long)in[61 + inPos] << 8 & 65535L | (long)in[62 + inPos] << 16 & 16777215L;
         out[21 + outPos] = (long)in[63 + inPos] & 255L | (long)in[64 + inPos] << 8 & 65535L | (long)in[65 + inPos] << 16 & 16777215L;
         out[22 + outPos] = (long)in[66 + inPos] & 255L | (long)in[67 + inPos] << 8 & 65535L | (long)in[68 + inPos] << 16 & 16777215L;
         out[23 + outPos] = (long)in[69 + inPos] & 255L | (long)in[70 + inPos] << 8 & 65535L | (long)in[71 + inPos] << 16 & 16777215L;
         out[24 + outPos] = (long)in[72 + inPos] & 255L | (long)in[73 + inPos] << 8 & 65535L | (long)in[74 + inPos] << 16 & 16777215L;
         out[25 + outPos] = (long)in[75 + inPos] & 255L | (long)in[76 + inPos] << 8 & 65535L | (long)in[77 + inPos] << 16 & 16777215L;
         out[26 + outPos] = (long)in[78 + inPos] & 255L | (long)in[79 + inPos] << 8 & 65535L | (long)in[80 + inPos] << 16 & 16777215L;
         out[27 + outPos] = (long)in[81 + inPos] & 255L | (long)in[82 + inPos] << 8 & 65535L | (long)in[83 + inPos] << 16 & 16777215L;
         out[28 + outPos] = (long)in[84 + inPos] & 255L | (long)in[85 + inPos] << 8 & 65535L | (long)in[86 + inPos] << 16 & 16777215L;
         out[29 + outPos] = (long)in[87 + inPos] & 255L | (long)in[88 + inPos] << 8 & 65535L | (long)in[89 + inPos] << 16 & 16777215L;
         out[30 + outPos] = (long)in[90 + inPos] & 255L | (long)in[91 + inPos] << 8 & 65535L | (long)in[92 + inPos] << 16 & 16777215L;
         out[31 + outPos] = (long)in[93 + inPos] & 255L | (long)in[94 + inPos] << 8 & 65535L | (long)in[95 + inPos] << 16 & 16777215L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L;
         out[1 + outPos] = (long)in.get(3 + inPos) & 255L | (long)in.get(4 + inPos) << 8 & 65535L | (long)in.get(5 + inPos) << 16 & 16777215L;
         out[2 + outPos] = (long)in.get(6 + inPos) & 255L | (long)in.get(7 + inPos) << 8 & 65535L | (long)in.get(8 + inPos) << 16 & 16777215L;
         out[3 + outPos] = (long)in.get(9 + inPos) & 255L | (long)in.get(10 + inPos) << 8 & 65535L | (long)in.get(11 + inPos) << 16 & 16777215L;
         out[4 + outPos] = (long)in.get(12 + inPos) & 255L | (long)in.get(13 + inPos) << 8 & 65535L | (long)in.get(14 + inPos) << 16 & 16777215L;
         out[5 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 65535L | (long)in.get(17 + inPos) << 16 & 16777215L;
         out[6 + outPos] = (long)in.get(18 + inPos) & 255L | (long)in.get(19 + inPos) << 8 & 65535L | (long)in.get(20 + inPos) << 16 & 16777215L;
         out[7 + outPos] = (long)in.get(21 + inPos) & 255L | (long)in.get(22 + inPos) << 8 & 65535L | (long)in.get(23 + inPos) << 16 & 16777215L;
         out[8 + outPos] = (long)in.get(24 + inPos) & 255L | (long)in.get(25 + inPos) << 8 & 65535L | (long)in.get(26 + inPos) << 16 & 16777215L;
         out[9 + outPos] = (long)in.get(27 + inPos) & 255L | (long)in.get(28 + inPos) << 8 & 65535L | (long)in.get(29 + inPos) << 16 & 16777215L;
         out[10 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 65535L | (long)in.get(32 + inPos) << 16 & 16777215L;
         out[11 + outPos] = (long)in.get(33 + inPos) & 255L | (long)in.get(34 + inPos) << 8 & 65535L | (long)in.get(35 + inPos) << 16 & 16777215L;
         out[12 + outPos] = (long)in.get(36 + inPos) & 255L | (long)in.get(37 + inPos) << 8 & 65535L | (long)in.get(38 + inPos) << 16 & 16777215L;
         out[13 + outPos] = (long)in.get(39 + inPos) & 255L | (long)in.get(40 + inPos) << 8 & 65535L | (long)in.get(41 + inPos) << 16 & 16777215L;
         out[14 + outPos] = (long)in.get(42 + inPos) & 255L | (long)in.get(43 + inPos) << 8 & 65535L | (long)in.get(44 + inPos) << 16 & 16777215L;
         out[15 + outPos] = (long)in.get(45 + inPos) & 255L | (long)in.get(46 + inPos) << 8 & 65535L | (long)in.get(47 + inPos) << 16 & 16777215L;
         out[16 + outPos] = (long)in.get(48 + inPos) & 255L | (long)in.get(49 + inPos) << 8 & 65535L | (long)in.get(50 + inPos) << 16 & 16777215L;
         out[17 + outPos] = (long)in.get(51 + inPos) & 255L | (long)in.get(52 + inPos) << 8 & 65535L | (long)in.get(53 + inPos) << 16 & 16777215L;
         out[18 + outPos] = (long)in.get(54 + inPos) & 255L | (long)in.get(55 + inPos) << 8 & 65535L | (long)in.get(56 + inPos) << 16 & 16777215L;
         out[19 + outPos] = (long)in.get(57 + inPos) & 255L | (long)in.get(58 + inPos) << 8 & 65535L | (long)in.get(59 + inPos) << 16 & 16777215L;
         out[20 + outPos] = (long)in.get(60 + inPos) & 255L | (long)in.get(61 + inPos) << 8 & 65535L | (long)in.get(62 + inPos) << 16 & 16777215L;
         out[21 + outPos] = (long)in.get(63 + inPos) & 255L | (long)in.get(64 + inPos) << 8 & 65535L | (long)in.get(65 + inPos) << 16 & 16777215L;
         out[22 + outPos] = (long)in.get(66 + inPos) & 255L | (long)in.get(67 + inPos) << 8 & 65535L | (long)in.get(68 + inPos) << 16 & 16777215L;
         out[23 + outPos] = (long)in.get(69 + inPos) & 255L | (long)in.get(70 + inPos) << 8 & 65535L | (long)in.get(71 + inPos) << 16 & 16777215L;
         out[24 + outPos] = (long)in.get(72 + inPos) & 255L | (long)in.get(73 + inPos) << 8 & 65535L | (long)in.get(74 + inPos) << 16 & 16777215L;
         out[25 + outPos] = (long)in.get(75 + inPos) & 255L | (long)in.get(76 + inPos) << 8 & 65535L | (long)in.get(77 + inPos) << 16 & 16777215L;
         out[26 + outPos] = (long)in.get(78 + inPos) & 255L | (long)in.get(79 + inPos) << 8 & 65535L | (long)in.get(80 + inPos) << 16 & 16777215L;
         out[27 + outPos] = (long)in.get(81 + inPos) & 255L | (long)in.get(82 + inPos) << 8 & 65535L | (long)in.get(83 + inPos) << 16 & 16777215L;
         out[28 + outPos] = (long)in.get(84 + inPos) & 255L | (long)in.get(85 + inPos) << 8 & 65535L | (long)in.get(86 + inPos) << 16 & 16777215L;
         out[29 + outPos] = (long)in.get(87 + inPos) & 255L | (long)in.get(88 + inPos) << 8 & 65535L | (long)in.get(89 + inPos) << 16 & 16777215L;
         out[30 + outPos] = (long)in.get(90 + inPos) & 255L | (long)in.get(91 + inPos) << 8 & 65535L | (long)in.get(92 + inPos) << 16 & 16777215L;
         out[31 + outPos] = (long)in.get(93 + inPos) & 255L | (long)in.get(94 + inPos) << 8 & 65535L | (long)in.get(95 + inPos) << 16 & 16777215L;
      }
   }

   private static final class Packer25 extends BytePackerForLong {
      private Packer25() {
         super(25);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 33554431L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 33554431L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 33554431L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 33554431L) >>> 24 | (in[1 + inPos] & 33554431L) << 1) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 33554431L) >>> 7 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 33554431L) >>> 15 & 255L));
         out[6 + outPos] = (byte)((int)(((in[1 + inPos] & 33554431L) >>> 23 | (in[2 + inPos] & 33554431L) << 2) & 255L));
         out[7 + outPos] = (byte)((int)((in[2 + inPos] & 33554431L) >>> 6 & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 33554431L) >>> 14 & 255L));
         out[9 + outPos] = (byte)((int)(((in[2 + inPos] & 33554431L) >>> 22 | (in[3 + inPos] & 33554431L) << 3) & 255L));
         out[10 + outPos] = (byte)((int)((in[3 + inPos] & 33554431L) >>> 5 & 255L));
         out[11 + outPos] = (byte)((int)((in[3 + inPos] & 33554431L) >>> 13 & 255L));
         out[12 + outPos] = (byte)((int)(((in[3 + inPos] & 33554431L) >>> 21 | (in[4 + inPos] & 33554431L) << 4) & 255L));
         out[13 + outPos] = (byte)((int)((in[4 + inPos] & 33554431L) >>> 4 & 255L));
         out[14 + outPos] = (byte)((int)((in[4 + inPos] & 33554431L) >>> 12 & 255L));
         out[15 + outPos] = (byte)((int)(((in[4 + inPos] & 33554431L) >>> 20 | (in[5 + inPos] & 33554431L) << 5) & 255L));
         out[16 + outPos] = (byte)((int)((in[5 + inPos] & 33554431L) >>> 3 & 255L));
         out[17 + outPos] = (byte)((int)((in[5 + inPos] & 33554431L) >>> 11 & 255L));
         out[18 + outPos] = (byte)((int)(((in[5 + inPos] & 33554431L) >>> 19 | (in[6 + inPos] & 33554431L) << 6) & 255L));
         out[19 + outPos] = (byte)((int)((in[6 + inPos] & 33554431L) >>> 2 & 255L));
         out[20 + outPos] = (byte)((int)((in[6 + inPos] & 33554431L) >>> 10 & 255L));
         out[21 + outPos] = (byte)((int)(((in[6 + inPos] & 33554431L) >>> 18 | (in[7 + inPos] & 33554431L) << 7) & 255L));
         out[22 + outPos] = (byte)((int)((in[7 + inPos] & 33554431L) >>> 1 & 255L));
         out[23 + outPos] = (byte)((int)((in[7 + inPos] & 33554431L) >>> 9 & 255L));
         out[24 + outPos] = (byte)((int)((in[7 + inPos] & 33554431L) >>> 17 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 33554431L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 33554431L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 33554431L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 33554431L) >>> 24 | (in[1 + inPos] & 33554431L) << 1) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 33554431L) >>> 7 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 33554431L) >>> 15 & 255L));
         out[6 + outPos] = (byte)((int)(((in[1 + inPos] & 33554431L) >>> 23 | (in[2 + inPos] & 33554431L) << 2) & 255L));
         out[7 + outPos] = (byte)((int)((in[2 + inPos] & 33554431L) >>> 6 & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 33554431L) >>> 14 & 255L));
         out[9 + outPos] = (byte)((int)(((in[2 + inPos] & 33554431L) >>> 22 | (in[3 + inPos] & 33554431L) << 3) & 255L));
         out[10 + outPos] = (byte)((int)((in[3 + inPos] & 33554431L) >>> 5 & 255L));
         out[11 + outPos] = (byte)((int)((in[3 + inPos] & 33554431L) >>> 13 & 255L));
         out[12 + outPos] = (byte)((int)(((in[3 + inPos] & 33554431L) >>> 21 | (in[4 + inPos] & 33554431L) << 4) & 255L));
         out[13 + outPos] = (byte)((int)((in[4 + inPos] & 33554431L) >>> 4 & 255L));
         out[14 + outPos] = (byte)((int)((in[4 + inPos] & 33554431L) >>> 12 & 255L));
         out[15 + outPos] = (byte)((int)(((in[4 + inPos] & 33554431L) >>> 20 | (in[5 + inPos] & 33554431L) << 5) & 255L));
         out[16 + outPos] = (byte)((int)((in[5 + inPos] & 33554431L) >>> 3 & 255L));
         out[17 + outPos] = (byte)((int)((in[5 + inPos] & 33554431L) >>> 11 & 255L));
         out[18 + outPos] = (byte)((int)(((in[5 + inPos] & 33554431L) >>> 19 | (in[6 + inPos] & 33554431L) << 6) & 255L));
         out[19 + outPos] = (byte)((int)((in[6 + inPos] & 33554431L) >>> 2 & 255L));
         out[20 + outPos] = (byte)((int)((in[6 + inPos] & 33554431L) >>> 10 & 255L));
         out[21 + outPos] = (byte)((int)(((in[6 + inPos] & 33554431L) >>> 18 | (in[7 + inPos] & 33554431L) << 7) & 255L));
         out[22 + outPos] = (byte)((int)((in[7 + inPos] & 33554431L) >>> 1 & 255L));
         out[23 + outPos] = (byte)((int)((in[7 + inPos] & 33554431L) >>> 9 & 255L));
         out[24 + outPos] = (byte)((int)((in[7 + inPos] & 33554431L) >>> 17 & 255L));
         out[25 + outPos] = (byte)((int)(in[8 + inPos] & 33554431L & 255L));
         out[26 + outPos] = (byte)((int)((in[8 + inPos] & 33554431L) >>> 8 & 255L));
         out[27 + outPos] = (byte)((int)((in[8 + inPos] & 33554431L) >>> 16 & 255L));
         out[28 + outPos] = (byte)((int)(((in[8 + inPos] & 33554431L) >>> 24 | (in[9 + inPos] & 33554431L) << 1) & 255L));
         out[29 + outPos] = (byte)((int)((in[9 + inPos] & 33554431L) >>> 7 & 255L));
         out[30 + outPos] = (byte)((int)((in[9 + inPos] & 33554431L) >>> 15 & 255L));
         out[31 + outPos] = (byte)((int)(((in[9 + inPos] & 33554431L) >>> 23 | (in[10 + inPos] & 33554431L) << 2) & 255L));
         out[32 + outPos] = (byte)((int)((in[10 + inPos] & 33554431L) >>> 6 & 255L));
         out[33 + outPos] = (byte)((int)((in[10 + inPos] & 33554431L) >>> 14 & 255L));
         out[34 + outPos] = (byte)((int)(((in[10 + inPos] & 33554431L) >>> 22 | (in[11 + inPos] & 33554431L) << 3) & 255L));
         out[35 + outPos] = (byte)((int)((in[11 + inPos] & 33554431L) >>> 5 & 255L));
         out[36 + outPos] = (byte)((int)((in[11 + inPos] & 33554431L) >>> 13 & 255L));
         out[37 + outPos] = (byte)((int)(((in[11 + inPos] & 33554431L) >>> 21 | (in[12 + inPos] & 33554431L) << 4) & 255L));
         out[38 + outPos] = (byte)((int)((in[12 + inPos] & 33554431L) >>> 4 & 255L));
         out[39 + outPos] = (byte)((int)((in[12 + inPos] & 33554431L) >>> 12 & 255L));
         out[40 + outPos] = (byte)((int)(((in[12 + inPos] & 33554431L) >>> 20 | (in[13 + inPos] & 33554431L) << 5) & 255L));
         out[41 + outPos] = (byte)((int)((in[13 + inPos] & 33554431L) >>> 3 & 255L));
         out[42 + outPos] = (byte)((int)((in[13 + inPos] & 33554431L) >>> 11 & 255L));
         out[43 + outPos] = (byte)((int)(((in[13 + inPos] & 33554431L) >>> 19 | (in[14 + inPos] & 33554431L) << 6) & 255L));
         out[44 + outPos] = (byte)((int)((in[14 + inPos] & 33554431L) >>> 2 & 255L));
         out[45 + outPos] = (byte)((int)((in[14 + inPos] & 33554431L) >>> 10 & 255L));
         out[46 + outPos] = (byte)((int)(((in[14 + inPos] & 33554431L) >>> 18 | (in[15 + inPos] & 33554431L) << 7) & 255L));
         out[47 + outPos] = (byte)((int)((in[15 + inPos] & 33554431L) >>> 1 & 255L));
         out[48 + outPos] = (byte)((int)((in[15 + inPos] & 33554431L) >>> 9 & 255L));
         out[49 + outPos] = (byte)((int)((in[15 + inPos] & 33554431L) >>> 17 & 255L));
         out[50 + outPos] = (byte)((int)(in[16 + inPos] & 33554431L & 255L));
         out[51 + outPos] = (byte)((int)((in[16 + inPos] & 33554431L) >>> 8 & 255L));
         out[52 + outPos] = (byte)((int)((in[16 + inPos] & 33554431L) >>> 16 & 255L));
         out[53 + outPos] = (byte)((int)(((in[16 + inPos] & 33554431L) >>> 24 | (in[17 + inPos] & 33554431L) << 1) & 255L));
         out[54 + outPos] = (byte)((int)((in[17 + inPos] & 33554431L) >>> 7 & 255L));
         out[55 + outPos] = (byte)((int)((in[17 + inPos] & 33554431L) >>> 15 & 255L));
         out[56 + outPos] = (byte)((int)(((in[17 + inPos] & 33554431L) >>> 23 | (in[18 + inPos] & 33554431L) << 2) & 255L));
         out[57 + outPos] = (byte)((int)((in[18 + inPos] & 33554431L) >>> 6 & 255L));
         out[58 + outPos] = (byte)((int)((in[18 + inPos] & 33554431L) >>> 14 & 255L));
         out[59 + outPos] = (byte)((int)(((in[18 + inPos] & 33554431L) >>> 22 | (in[19 + inPos] & 33554431L) << 3) & 255L));
         out[60 + outPos] = (byte)((int)((in[19 + inPos] & 33554431L) >>> 5 & 255L));
         out[61 + outPos] = (byte)((int)((in[19 + inPos] & 33554431L) >>> 13 & 255L));
         out[62 + outPos] = (byte)((int)(((in[19 + inPos] & 33554431L) >>> 21 | (in[20 + inPos] & 33554431L) << 4) & 255L));
         out[63 + outPos] = (byte)((int)((in[20 + inPos] & 33554431L) >>> 4 & 255L));
         out[64 + outPos] = (byte)((int)((in[20 + inPos] & 33554431L) >>> 12 & 255L));
         out[65 + outPos] = (byte)((int)(((in[20 + inPos] & 33554431L) >>> 20 | (in[21 + inPos] & 33554431L) << 5) & 255L));
         out[66 + outPos] = (byte)((int)((in[21 + inPos] & 33554431L) >>> 3 & 255L));
         out[67 + outPos] = (byte)((int)((in[21 + inPos] & 33554431L) >>> 11 & 255L));
         out[68 + outPos] = (byte)((int)(((in[21 + inPos] & 33554431L) >>> 19 | (in[22 + inPos] & 33554431L) << 6) & 255L));
         out[69 + outPos] = (byte)((int)((in[22 + inPos] & 33554431L) >>> 2 & 255L));
         out[70 + outPos] = (byte)((int)((in[22 + inPos] & 33554431L) >>> 10 & 255L));
         out[71 + outPos] = (byte)((int)(((in[22 + inPos] & 33554431L) >>> 18 | (in[23 + inPos] & 33554431L) << 7) & 255L));
         out[72 + outPos] = (byte)((int)((in[23 + inPos] & 33554431L) >>> 1 & 255L));
         out[73 + outPos] = (byte)((int)((in[23 + inPos] & 33554431L) >>> 9 & 255L));
         out[74 + outPos] = (byte)((int)((in[23 + inPos] & 33554431L) >>> 17 & 255L));
         out[75 + outPos] = (byte)((int)(in[24 + inPos] & 33554431L & 255L));
         out[76 + outPos] = (byte)((int)((in[24 + inPos] & 33554431L) >>> 8 & 255L));
         out[77 + outPos] = (byte)((int)((in[24 + inPos] & 33554431L) >>> 16 & 255L));
         out[78 + outPos] = (byte)((int)(((in[24 + inPos] & 33554431L) >>> 24 | (in[25 + inPos] & 33554431L) << 1) & 255L));
         out[79 + outPos] = (byte)((int)((in[25 + inPos] & 33554431L) >>> 7 & 255L));
         out[80 + outPos] = (byte)((int)((in[25 + inPos] & 33554431L) >>> 15 & 255L));
         out[81 + outPos] = (byte)((int)(((in[25 + inPos] & 33554431L) >>> 23 | (in[26 + inPos] & 33554431L) << 2) & 255L));
         out[82 + outPos] = (byte)((int)((in[26 + inPos] & 33554431L) >>> 6 & 255L));
         out[83 + outPos] = (byte)((int)((in[26 + inPos] & 33554431L) >>> 14 & 255L));
         out[84 + outPos] = (byte)((int)(((in[26 + inPos] & 33554431L) >>> 22 | (in[27 + inPos] & 33554431L) << 3) & 255L));
         out[85 + outPos] = (byte)((int)((in[27 + inPos] & 33554431L) >>> 5 & 255L));
         out[86 + outPos] = (byte)((int)((in[27 + inPos] & 33554431L) >>> 13 & 255L));
         out[87 + outPos] = (byte)((int)(((in[27 + inPos] & 33554431L) >>> 21 | (in[28 + inPos] & 33554431L) << 4) & 255L));
         out[88 + outPos] = (byte)((int)((in[28 + inPos] & 33554431L) >>> 4 & 255L));
         out[89 + outPos] = (byte)((int)((in[28 + inPos] & 33554431L) >>> 12 & 255L));
         out[90 + outPos] = (byte)((int)(((in[28 + inPos] & 33554431L) >>> 20 | (in[29 + inPos] & 33554431L) << 5) & 255L));
         out[91 + outPos] = (byte)((int)((in[29 + inPos] & 33554431L) >>> 3 & 255L));
         out[92 + outPos] = (byte)((int)((in[29 + inPos] & 33554431L) >>> 11 & 255L));
         out[93 + outPos] = (byte)((int)(((in[29 + inPos] & 33554431L) >>> 19 | (in[30 + inPos] & 33554431L) << 6) & 255L));
         out[94 + outPos] = (byte)((int)((in[30 + inPos] & 33554431L) >>> 2 & 255L));
         out[95 + outPos] = (byte)((int)((in[30 + inPos] & 33554431L) >>> 10 & 255L));
         out[96 + outPos] = (byte)((int)(((in[30 + inPos] & 33554431L) >>> 18 | (in[31 + inPos] & 33554431L) << 7) & 255L));
         out[97 + outPos] = (byte)((int)((in[31 + inPos] & 33554431L) >>> 1 & 255L));
         out[98 + outPos] = (byte)((int)((in[31 + inPos] & 33554431L) >>> 9 & 255L));
         out[99 + outPos] = (byte)((int)((in[31 + inPos] & 33554431L) >>> 17 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 33554431L;
         out[1 + outPos] = (long)in[3 + inPos] >> 1 & 127L | (long)in[4 + inPos] << 7 & 32767L | (long)in[5 + inPos] << 15 & 8388607L | (long)in[6 + inPos] << 23 & 33554431L;
         out[2 + outPos] = (long)in[6 + inPos] >> 2 & 63L | (long)in[7 + inPos] << 6 & 16383L | (long)in[8 + inPos] << 14 & 4194303L | (long)in[9 + inPos] << 22 & 33554431L;
         out[3 + outPos] = (long)in[9 + inPos] >> 3 & 31L | (long)in[10 + inPos] << 5 & 8191L | (long)in[11 + inPos] << 13 & 2097151L | (long)in[12 + inPos] << 21 & 33554431L;
         out[4 + outPos] = (long)in[12 + inPos] >> 4 & 15L | (long)in[13 + inPos] << 4 & 4095L | (long)in[14 + inPos] << 12 & 1048575L | (long)in[15 + inPos] << 20 & 33554431L;
         out[5 + outPos] = (long)in[15 + inPos] >> 5 & 7L | (long)in[16 + inPos] << 3 & 2047L | (long)in[17 + inPos] << 11 & 524287L | (long)in[18 + inPos] << 19 & 33554431L;
         out[6 + outPos] = (long)in[18 + inPos] >> 6 & 3L | (long)in[19 + inPos] << 2 & 1023L | (long)in[20 + inPos] << 10 & 262143L | (long)in[21 + inPos] << 18 & 33554431L;
         out[7 + outPos] = (long)in[21 + inPos] >> 7 & 1L | (long)in[22 + inPos] << 1 & 511L | (long)in[23 + inPos] << 9 & 131071L | (long)in[24 + inPos] << 17 & 33554431L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 33554431L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 1 & 127L | (long)in.get(4 + inPos) << 7 & 32767L | (long)in.get(5 + inPos) << 15 & 8388607L | (long)in.get(6 + inPos) << 23 & 33554431L;
         out[2 + outPos] = (long)in.get(6 + inPos) >> 2 & 63L | (long)in.get(7 + inPos) << 6 & 16383L | (long)in.get(8 + inPos) << 14 & 4194303L | (long)in.get(9 + inPos) << 22 & 33554431L;
         out[3 + outPos] = (long)in.get(9 + inPos) >> 3 & 31L | (long)in.get(10 + inPos) << 5 & 8191L | (long)in.get(11 + inPos) << 13 & 2097151L | (long)in.get(12 + inPos) << 21 & 33554431L;
         out[4 + outPos] = (long)in.get(12 + inPos) >> 4 & 15L | (long)in.get(13 + inPos) << 4 & 4095L | (long)in.get(14 + inPos) << 12 & 1048575L | (long)in.get(15 + inPos) << 20 & 33554431L;
         out[5 + outPos] = (long)in.get(15 + inPos) >> 5 & 7L | (long)in.get(16 + inPos) << 3 & 2047L | (long)in.get(17 + inPos) << 11 & 524287L | (long)in.get(18 + inPos) << 19 & 33554431L;
         out[6 + outPos] = (long)in.get(18 + inPos) >> 6 & 3L | (long)in.get(19 + inPos) << 2 & 1023L | (long)in.get(20 + inPos) << 10 & 262143L | (long)in.get(21 + inPos) << 18 & 33554431L;
         out[7 + outPos] = (long)in.get(21 + inPos) >> 7 & 1L | (long)in.get(22 + inPos) << 1 & 511L | (long)in.get(23 + inPos) << 9 & 131071L | (long)in.get(24 + inPos) << 17 & 33554431L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 33554431L;
         out[1 + outPos] = (long)in[3 + inPos] >> 1 & 127L | (long)in[4 + inPos] << 7 & 32767L | (long)in[5 + inPos] << 15 & 8388607L | (long)in[6 + inPos] << 23 & 33554431L;
         out[2 + outPos] = (long)in[6 + inPos] >> 2 & 63L | (long)in[7 + inPos] << 6 & 16383L | (long)in[8 + inPos] << 14 & 4194303L | (long)in[9 + inPos] << 22 & 33554431L;
         out[3 + outPos] = (long)in[9 + inPos] >> 3 & 31L | (long)in[10 + inPos] << 5 & 8191L | (long)in[11 + inPos] << 13 & 2097151L | (long)in[12 + inPos] << 21 & 33554431L;
         out[4 + outPos] = (long)in[12 + inPos] >> 4 & 15L | (long)in[13 + inPos] << 4 & 4095L | (long)in[14 + inPos] << 12 & 1048575L | (long)in[15 + inPos] << 20 & 33554431L;
         out[5 + outPos] = (long)in[15 + inPos] >> 5 & 7L | (long)in[16 + inPos] << 3 & 2047L | (long)in[17 + inPos] << 11 & 524287L | (long)in[18 + inPos] << 19 & 33554431L;
         out[6 + outPos] = (long)in[18 + inPos] >> 6 & 3L | (long)in[19 + inPos] << 2 & 1023L | (long)in[20 + inPos] << 10 & 262143L | (long)in[21 + inPos] << 18 & 33554431L;
         out[7 + outPos] = (long)in[21 + inPos] >> 7 & 1L | (long)in[22 + inPos] << 1 & 511L | (long)in[23 + inPos] << 9 & 131071L | (long)in[24 + inPos] << 17 & 33554431L;
         out[8 + outPos] = (long)in[25 + inPos] & 255L | (long)in[26 + inPos] << 8 & 65535L | (long)in[27 + inPos] << 16 & 16777215L | (long)in[28 + inPos] << 24 & 33554431L;
         out[9 + outPos] = (long)in[28 + inPos] >> 1 & 127L | (long)in[29 + inPos] << 7 & 32767L | (long)in[30 + inPos] << 15 & 8388607L | (long)in[31 + inPos] << 23 & 33554431L;
         out[10 + outPos] = (long)in[31 + inPos] >> 2 & 63L | (long)in[32 + inPos] << 6 & 16383L | (long)in[33 + inPos] << 14 & 4194303L | (long)in[34 + inPos] << 22 & 33554431L;
         out[11 + outPos] = (long)in[34 + inPos] >> 3 & 31L | (long)in[35 + inPos] << 5 & 8191L | (long)in[36 + inPos] << 13 & 2097151L | (long)in[37 + inPos] << 21 & 33554431L;
         out[12 + outPos] = (long)in[37 + inPos] >> 4 & 15L | (long)in[38 + inPos] << 4 & 4095L | (long)in[39 + inPos] << 12 & 1048575L | (long)in[40 + inPos] << 20 & 33554431L;
         out[13 + outPos] = (long)in[40 + inPos] >> 5 & 7L | (long)in[41 + inPos] << 3 & 2047L | (long)in[42 + inPos] << 11 & 524287L | (long)in[43 + inPos] << 19 & 33554431L;
         out[14 + outPos] = (long)in[43 + inPos] >> 6 & 3L | (long)in[44 + inPos] << 2 & 1023L | (long)in[45 + inPos] << 10 & 262143L | (long)in[46 + inPos] << 18 & 33554431L;
         out[15 + outPos] = (long)in[46 + inPos] >> 7 & 1L | (long)in[47 + inPos] << 1 & 511L | (long)in[48 + inPos] << 9 & 131071L | (long)in[49 + inPos] << 17 & 33554431L;
         out[16 + outPos] = (long)in[50 + inPos] & 255L | (long)in[51 + inPos] << 8 & 65535L | (long)in[52 + inPos] << 16 & 16777215L | (long)in[53 + inPos] << 24 & 33554431L;
         out[17 + outPos] = (long)in[53 + inPos] >> 1 & 127L | (long)in[54 + inPos] << 7 & 32767L | (long)in[55 + inPos] << 15 & 8388607L | (long)in[56 + inPos] << 23 & 33554431L;
         out[18 + outPos] = (long)in[56 + inPos] >> 2 & 63L | (long)in[57 + inPos] << 6 & 16383L | (long)in[58 + inPos] << 14 & 4194303L | (long)in[59 + inPos] << 22 & 33554431L;
         out[19 + outPos] = (long)in[59 + inPos] >> 3 & 31L | (long)in[60 + inPos] << 5 & 8191L | (long)in[61 + inPos] << 13 & 2097151L | (long)in[62 + inPos] << 21 & 33554431L;
         out[20 + outPos] = (long)in[62 + inPos] >> 4 & 15L | (long)in[63 + inPos] << 4 & 4095L | (long)in[64 + inPos] << 12 & 1048575L | (long)in[65 + inPos] << 20 & 33554431L;
         out[21 + outPos] = (long)in[65 + inPos] >> 5 & 7L | (long)in[66 + inPos] << 3 & 2047L | (long)in[67 + inPos] << 11 & 524287L | (long)in[68 + inPos] << 19 & 33554431L;
         out[22 + outPos] = (long)in[68 + inPos] >> 6 & 3L | (long)in[69 + inPos] << 2 & 1023L | (long)in[70 + inPos] << 10 & 262143L | (long)in[71 + inPos] << 18 & 33554431L;
         out[23 + outPos] = (long)in[71 + inPos] >> 7 & 1L | (long)in[72 + inPos] << 1 & 511L | (long)in[73 + inPos] << 9 & 131071L | (long)in[74 + inPos] << 17 & 33554431L;
         out[24 + outPos] = (long)in[75 + inPos] & 255L | (long)in[76 + inPos] << 8 & 65535L | (long)in[77 + inPos] << 16 & 16777215L | (long)in[78 + inPos] << 24 & 33554431L;
         out[25 + outPos] = (long)in[78 + inPos] >> 1 & 127L | (long)in[79 + inPos] << 7 & 32767L | (long)in[80 + inPos] << 15 & 8388607L | (long)in[81 + inPos] << 23 & 33554431L;
         out[26 + outPos] = (long)in[81 + inPos] >> 2 & 63L | (long)in[82 + inPos] << 6 & 16383L | (long)in[83 + inPos] << 14 & 4194303L | (long)in[84 + inPos] << 22 & 33554431L;
         out[27 + outPos] = (long)in[84 + inPos] >> 3 & 31L | (long)in[85 + inPos] << 5 & 8191L | (long)in[86 + inPos] << 13 & 2097151L | (long)in[87 + inPos] << 21 & 33554431L;
         out[28 + outPos] = (long)in[87 + inPos] >> 4 & 15L | (long)in[88 + inPos] << 4 & 4095L | (long)in[89 + inPos] << 12 & 1048575L | (long)in[90 + inPos] << 20 & 33554431L;
         out[29 + outPos] = (long)in[90 + inPos] >> 5 & 7L | (long)in[91 + inPos] << 3 & 2047L | (long)in[92 + inPos] << 11 & 524287L | (long)in[93 + inPos] << 19 & 33554431L;
         out[30 + outPos] = (long)in[93 + inPos] >> 6 & 3L | (long)in[94 + inPos] << 2 & 1023L | (long)in[95 + inPos] << 10 & 262143L | (long)in[96 + inPos] << 18 & 33554431L;
         out[31 + outPos] = (long)in[96 + inPos] >> 7 & 1L | (long)in[97 + inPos] << 1 & 511L | (long)in[98 + inPos] << 9 & 131071L | (long)in[99 + inPos] << 17 & 33554431L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 33554431L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 1 & 127L | (long)in.get(4 + inPos) << 7 & 32767L | (long)in.get(5 + inPos) << 15 & 8388607L | (long)in.get(6 + inPos) << 23 & 33554431L;
         out[2 + outPos] = (long)in.get(6 + inPos) >> 2 & 63L | (long)in.get(7 + inPos) << 6 & 16383L | (long)in.get(8 + inPos) << 14 & 4194303L | (long)in.get(9 + inPos) << 22 & 33554431L;
         out[3 + outPos] = (long)in.get(9 + inPos) >> 3 & 31L | (long)in.get(10 + inPos) << 5 & 8191L | (long)in.get(11 + inPos) << 13 & 2097151L | (long)in.get(12 + inPos) << 21 & 33554431L;
         out[4 + outPos] = (long)in.get(12 + inPos) >> 4 & 15L | (long)in.get(13 + inPos) << 4 & 4095L | (long)in.get(14 + inPos) << 12 & 1048575L | (long)in.get(15 + inPos) << 20 & 33554431L;
         out[5 + outPos] = (long)in.get(15 + inPos) >> 5 & 7L | (long)in.get(16 + inPos) << 3 & 2047L | (long)in.get(17 + inPos) << 11 & 524287L | (long)in.get(18 + inPos) << 19 & 33554431L;
         out[6 + outPos] = (long)in.get(18 + inPos) >> 6 & 3L | (long)in.get(19 + inPos) << 2 & 1023L | (long)in.get(20 + inPos) << 10 & 262143L | (long)in.get(21 + inPos) << 18 & 33554431L;
         out[7 + outPos] = (long)in.get(21 + inPos) >> 7 & 1L | (long)in.get(22 + inPos) << 1 & 511L | (long)in.get(23 + inPos) << 9 & 131071L | (long)in.get(24 + inPos) << 17 & 33554431L;
         out[8 + outPos] = (long)in.get(25 + inPos) & 255L | (long)in.get(26 + inPos) << 8 & 65535L | (long)in.get(27 + inPos) << 16 & 16777215L | (long)in.get(28 + inPos) << 24 & 33554431L;
         out[9 + outPos] = (long)in.get(28 + inPos) >> 1 & 127L | (long)in.get(29 + inPos) << 7 & 32767L | (long)in.get(30 + inPos) << 15 & 8388607L | (long)in.get(31 + inPos) << 23 & 33554431L;
         out[10 + outPos] = (long)in.get(31 + inPos) >> 2 & 63L | (long)in.get(32 + inPos) << 6 & 16383L | (long)in.get(33 + inPos) << 14 & 4194303L | (long)in.get(34 + inPos) << 22 & 33554431L;
         out[11 + outPos] = (long)in.get(34 + inPos) >> 3 & 31L | (long)in.get(35 + inPos) << 5 & 8191L | (long)in.get(36 + inPos) << 13 & 2097151L | (long)in.get(37 + inPos) << 21 & 33554431L;
         out[12 + outPos] = (long)in.get(37 + inPos) >> 4 & 15L | (long)in.get(38 + inPos) << 4 & 4095L | (long)in.get(39 + inPos) << 12 & 1048575L | (long)in.get(40 + inPos) << 20 & 33554431L;
         out[13 + outPos] = (long)in.get(40 + inPos) >> 5 & 7L | (long)in.get(41 + inPos) << 3 & 2047L | (long)in.get(42 + inPos) << 11 & 524287L | (long)in.get(43 + inPos) << 19 & 33554431L;
         out[14 + outPos] = (long)in.get(43 + inPos) >> 6 & 3L | (long)in.get(44 + inPos) << 2 & 1023L | (long)in.get(45 + inPos) << 10 & 262143L | (long)in.get(46 + inPos) << 18 & 33554431L;
         out[15 + outPos] = (long)in.get(46 + inPos) >> 7 & 1L | (long)in.get(47 + inPos) << 1 & 511L | (long)in.get(48 + inPos) << 9 & 131071L | (long)in.get(49 + inPos) << 17 & 33554431L;
         out[16 + outPos] = (long)in.get(50 + inPos) & 255L | (long)in.get(51 + inPos) << 8 & 65535L | (long)in.get(52 + inPos) << 16 & 16777215L | (long)in.get(53 + inPos) << 24 & 33554431L;
         out[17 + outPos] = (long)in.get(53 + inPos) >> 1 & 127L | (long)in.get(54 + inPos) << 7 & 32767L | (long)in.get(55 + inPos) << 15 & 8388607L | (long)in.get(56 + inPos) << 23 & 33554431L;
         out[18 + outPos] = (long)in.get(56 + inPos) >> 2 & 63L | (long)in.get(57 + inPos) << 6 & 16383L | (long)in.get(58 + inPos) << 14 & 4194303L | (long)in.get(59 + inPos) << 22 & 33554431L;
         out[19 + outPos] = (long)in.get(59 + inPos) >> 3 & 31L | (long)in.get(60 + inPos) << 5 & 8191L | (long)in.get(61 + inPos) << 13 & 2097151L | (long)in.get(62 + inPos) << 21 & 33554431L;
         out[20 + outPos] = (long)in.get(62 + inPos) >> 4 & 15L | (long)in.get(63 + inPos) << 4 & 4095L | (long)in.get(64 + inPos) << 12 & 1048575L | (long)in.get(65 + inPos) << 20 & 33554431L;
         out[21 + outPos] = (long)in.get(65 + inPos) >> 5 & 7L | (long)in.get(66 + inPos) << 3 & 2047L | (long)in.get(67 + inPos) << 11 & 524287L | (long)in.get(68 + inPos) << 19 & 33554431L;
         out[22 + outPos] = (long)in.get(68 + inPos) >> 6 & 3L | (long)in.get(69 + inPos) << 2 & 1023L | (long)in.get(70 + inPos) << 10 & 262143L | (long)in.get(71 + inPos) << 18 & 33554431L;
         out[23 + outPos] = (long)in.get(71 + inPos) >> 7 & 1L | (long)in.get(72 + inPos) << 1 & 511L | (long)in.get(73 + inPos) << 9 & 131071L | (long)in.get(74 + inPos) << 17 & 33554431L;
         out[24 + outPos] = (long)in.get(75 + inPos) & 255L | (long)in.get(76 + inPos) << 8 & 65535L | (long)in.get(77 + inPos) << 16 & 16777215L | (long)in.get(78 + inPos) << 24 & 33554431L;
         out[25 + outPos] = (long)in.get(78 + inPos) >> 1 & 127L | (long)in.get(79 + inPos) << 7 & 32767L | (long)in.get(80 + inPos) << 15 & 8388607L | (long)in.get(81 + inPos) << 23 & 33554431L;
         out[26 + outPos] = (long)in.get(81 + inPos) >> 2 & 63L | (long)in.get(82 + inPos) << 6 & 16383L | (long)in.get(83 + inPos) << 14 & 4194303L | (long)in.get(84 + inPos) << 22 & 33554431L;
         out[27 + outPos] = (long)in.get(84 + inPos) >> 3 & 31L | (long)in.get(85 + inPos) << 5 & 8191L | (long)in.get(86 + inPos) << 13 & 2097151L | (long)in.get(87 + inPos) << 21 & 33554431L;
         out[28 + outPos] = (long)in.get(87 + inPos) >> 4 & 15L | (long)in.get(88 + inPos) << 4 & 4095L | (long)in.get(89 + inPos) << 12 & 1048575L | (long)in.get(90 + inPos) << 20 & 33554431L;
         out[29 + outPos] = (long)in.get(90 + inPos) >> 5 & 7L | (long)in.get(91 + inPos) << 3 & 2047L | (long)in.get(92 + inPos) << 11 & 524287L | (long)in.get(93 + inPos) << 19 & 33554431L;
         out[30 + outPos] = (long)in.get(93 + inPos) >> 6 & 3L | (long)in.get(94 + inPos) << 2 & 1023L | (long)in.get(95 + inPos) << 10 & 262143L | (long)in.get(96 + inPos) << 18 & 33554431L;
         out[31 + outPos] = (long)in.get(96 + inPos) >> 7 & 1L | (long)in.get(97 + inPos) << 1 & 511L | (long)in.get(98 + inPos) << 9 & 131071L | (long)in.get(99 + inPos) << 17 & 33554431L;
      }
   }

   private static final class Packer26 extends BytePackerForLong {
      private Packer26() {
         super(26);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 67108863L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 67108863L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 67108863L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 67108863L) >>> 24 | (in[1 + inPos] & 67108863L) << 2) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 67108863L) >>> 6 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 67108863L) >>> 14 & 255L));
         out[6 + outPos] = (byte)((int)(((in[1 + inPos] & 67108863L) >>> 22 | (in[2 + inPos] & 67108863L) << 4) & 255L));
         out[7 + outPos] = (byte)((int)((in[2 + inPos] & 67108863L) >>> 4 & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 67108863L) >>> 12 & 255L));
         out[9 + outPos] = (byte)((int)(((in[2 + inPos] & 67108863L) >>> 20 | (in[3 + inPos] & 67108863L) << 6) & 255L));
         out[10 + outPos] = (byte)((int)((in[3 + inPos] & 67108863L) >>> 2 & 255L));
         out[11 + outPos] = (byte)((int)((in[3 + inPos] & 67108863L) >>> 10 & 255L));
         out[12 + outPos] = (byte)((int)((in[3 + inPos] & 67108863L) >>> 18 & 255L));
         out[13 + outPos] = (byte)((int)(in[4 + inPos] & 67108863L & 255L));
         out[14 + outPos] = (byte)((int)((in[4 + inPos] & 67108863L) >>> 8 & 255L));
         out[15 + outPos] = (byte)((int)((in[4 + inPos] & 67108863L) >>> 16 & 255L));
         out[16 + outPos] = (byte)((int)(((in[4 + inPos] & 67108863L) >>> 24 | (in[5 + inPos] & 67108863L) << 2) & 255L));
         out[17 + outPos] = (byte)((int)((in[5 + inPos] & 67108863L) >>> 6 & 255L));
         out[18 + outPos] = (byte)((int)((in[5 + inPos] & 67108863L) >>> 14 & 255L));
         out[19 + outPos] = (byte)((int)(((in[5 + inPos] & 67108863L) >>> 22 | (in[6 + inPos] & 67108863L) << 4) & 255L));
         out[20 + outPos] = (byte)((int)((in[6 + inPos] & 67108863L) >>> 4 & 255L));
         out[21 + outPos] = (byte)((int)((in[6 + inPos] & 67108863L) >>> 12 & 255L));
         out[22 + outPos] = (byte)((int)(((in[6 + inPos] & 67108863L) >>> 20 | (in[7 + inPos] & 67108863L) << 6) & 255L));
         out[23 + outPos] = (byte)((int)((in[7 + inPos] & 67108863L) >>> 2 & 255L));
         out[24 + outPos] = (byte)((int)((in[7 + inPos] & 67108863L) >>> 10 & 255L));
         out[25 + outPos] = (byte)((int)((in[7 + inPos] & 67108863L) >>> 18 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 67108863L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 67108863L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 67108863L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 67108863L) >>> 24 | (in[1 + inPos] & 67108863L) << 2) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 67108863L) >>> 6 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 67108863L) >>> 14 & 255L));
         out[6 + outPos] = (byte)((int)(((in[1 + inPos] & 67108863L) >>> 22 | (in[2 + inPos] & 67108863L) << 4) & 255L));
         out[7 + outPos] = (byte)((int)((in[2 + inPos] & 67108863L) >>> 4 & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 67108863L) >>> 12 & 255L));
         out[9 + outPos] = (byte)((int)(((in[2 + inPos] & 67108863L) >>> 20 | (in[3 + inPos] & 67108863L) << 6) & 255L));
         out[10 + outPos] = (byte)((int)((in[3 + inPos] & 67108863L) >>> 2 & 255L));
         out[11 + outPos] = (byte)((int)((in[3 + inPos] & 67108863L) >>> 10 & 255L));
         out[12 + outPos] = (byte)((int)((in[3 + inPos] & 67108863L) >>> 18 & 255L));
         out[13 + outPos] = (byte)((int)(in[4 + inPos] & 67108863L & 255L));
         out[14 + outPos] = (byte)((int)((in[4 + inPos] & 67108863L) >>> 8 & 255L));
         out[15 + outPos] = (byte)((int)((in[4 + inPos] & 67108863L) >>> 16 & 255L));
         out[16 + outPos] = (byte)((int)(((in[4 + inPos] & 67108863L) >>> 24 | (in[5 + inPos] & 67108863L) << 2) & 255L));
         out[17 + outPos] = (byte)((int)((in[5 + inPos] & 67108863L) >>> 6 & 255L));
         out[18 + outPos] = (byte)((int)((in[5 + inPos] & 67108863L) >>> 14 & 255L));
         out[19 + outPos] = (byte)((int)(((in[5 + inPos] & 67108863L) >>> 22 | (in[6 + inPos] & 67108863L) << 4) & 255L));
         out[20 + outPos] = (byte)((int)((in[6 + inPos] & 67108863L) >>> 4 & 255L));
         out[21 + outPos] = (byte)((int)((in[6 + inPos] & 67108863L) >>> 12 & 255L));
         out[22 + outPos] = (byte)((int)(((in[6 + inPos] & 67108863L) >>> 20 | (in[7 + inPos] & 67108863L) << 6) & 255L));
         out[23 + outPos] = (byte)((int)((in[7 + inPos] & 67108863L) >>> 2 & 255L));
         out[24 + outPos] = (byte)((int)((in[7 + inPos] & 67108863L) >>> 10 & 255L));
         out[25 + outPos] = (byte)((int)((in[7 + inPos] & 67108863L) >>> 18 & 255L));
         out[26 + outPos] = (byte)((int)(in[8 + inPos] & 67108863L & 255L));
         out[27 + outPos] = (byte)((int)((in[8 + inPos] & 67108863L) >>> 8 & 255L));
         out[28 + outPos] = (byte)((int)((in[8 + inPos] & 67108863L) >>> 16 & 255L));
         out[29 + outPos] = (byte)((int)(((in[8 + inPos] & 67108863L) >>> 24 | (in[9 + inPos] & 67108863L) << 2) & 255L));
         out[30 + outPos] = (byte)((int)((in[9 + inPos] & 67108863L) >>> 6 & 255L));
         out[31 + outPos] = (byte)((int)((in[9 + inPos] & 67108863L) >>> 14 & 255L));
         out[32 + outPos] = (byte)((int)(((in[9 + inPos] & 67108863L) >>> 22 | (in[10 + inPos] & 67108863L) << 4) & 255L));
         out[33 + outPos] = (byte)((int)((in[10 + inPos] & 67108863L) >>> 4 & 255L));
         out[34 + outPos] = (byte)((int)((in[10 + inPos] & 67108863L) >>> 12 & 255L));
         out[35 + outPos] = (byte)((int)(((in[10 + inPos] & 67108863L) >>> 20 | (in[11 + inPos] & 67108863L) << 6) & 255L));
         out[36 + outPos] = (byte)((int)((in[11 + inPos] & 67108863L) >>> 2 & 255L));
         out[37 + outPos] = (byte)((int)((in[11 + inPos] & 67108863L) >>> 10 & 255L));
         out[38 + outPos] = (byte)((int)((in[11 + inPos] & 67108863L) >>> 18 & 255L));
         out[39 + outPos] = (byte)((int)(in[12 + inPos] & 67108863L & 255L));
         out[40 + outPos] = (byte)((int)((in[12 + inPos] & 67108863L) >>> 8 & 255L));
         out[41 + outPos] = (byte)((int)((in[12 + inPos] & 67108863L) >>> 16 & 255L));
         out[42 + outPos] = (byte)((int)(((in[12 + inPos] & 67108863L) >>> 24 | (in[13 + inPos] & 67108863L) << 2) & 255L));
         out[43 + outPos] = (byte)((int)((in[13 + inPos] & 67108863L) >>> 6 & 255L));
         out[44 + outPos] = (byte)((int)((in[13 + inPos] & 67108863L) >>> 14 & 255L));
         out[45 + outPos] = (byte)((int)(((in[13 + inPos] & 67108863L) >>> 22 | (in[14 + inPos] & 67108863L) << 4) & 255L));
         out[46 + outPos] = (byte)((int)((in[14 + inPos] & 67108863L) >>> 4 & 255L));
         out[47 + outPos] = (byte)((int)((in[14 + inPos] & 67108863L) >>> 12 & 255L));
         out[48 + outPos] = (byte)((int)(((in[14 + inPos] & 67108863L) >>> 20 | (in[15 + inPos] & 67108863L) << 6) & 255L));
         out[49 + outPos] = (byte)((int)((in[15 + inPos] & 67108863L) >>> 2 & 255L));
         out[50 + outPos] = (byte)((int)((in[15 + inPos] & 67108863L) >>> 10 & 255L));
         out[51 + outPos] = (byte)((int)((in[15 + inPos] & 67108863L) >>> 18 & 255L));
         out[52 + outPos] = (byte)((int)(in[16 + inPos] & 67108863L & 255L));
         out[53 + outPos] = (byte)((int)((in[16 + inPos] & 67108863L) >>> 8 & 255L));
         out[54 + outPos] = (byte)((int)((in[16 + inPos] & 67108863L) >>> 16 & 255L));
         out[55 + outPos] = (byte)((int)(((in[16 + inPos] & 67108863L) >>> 24 | (in[17 + inPos] & 67108863L) << 2) & 255L));
         out[56 + outPos] = (byte)((int)((in[17 + inPos] & 67108863L) >>> 6 & 255L));
         out[57 + outPos] = (byte)((int)((in[17 + inPos] & 67108863L) >>> 14 & 255L));
         out[58 + outPos] = (byte)((int)(((in[17 + inPos] & 67108863L) >>> 22 | (in[18 + inPos] & 67108863L) << 4) & 255L));
         out[59 + outPos] = (byte)((int)((in[18 + inPos] & 67108863L) >>> 4 & 255L));
         out[60 + outPos] = (byte)((int)((in[18 + inPos] & 67108863L) >>> 12 & 255L));
         out[61 + outPos] = (byte)((int)(((in[18 + inPos] & 67108863L) >>> 20 | (in[19 + inPos] & 67108863L) << 6) & 255L));
         out[62 + outPos] = (byte)((int)((in[19 + inPos] & 67108863L) >>> 2 & 255L));
         out[63 + outPos] = (byte)((int)((in[19 + inPos] & 67108863L) >>> 10 & 255L));
         out[64 + outPos] = (byte)((int)((in[19 + inPos] & 67108863L) >>> 18 & 255L));
         out[65 + outPos] = (byte)((int)(in[20 + inPos] & 67108863L & 255L));
         out[66 + outPos] = (byte)((int)((in[20 + inPos] & 67108863L) >>> 8 & 255L));
         out[67 + outPos] = (byte)((int)((in[20 + inPos] & 67108863L) >>> 16 & 255L));
         out[68 + outPos] = (byte)((int)(((in[20 + inPos] & 67108863L) >>> 24 | (in[21 + inPos] & 67108863L) << 2) & 255L));
         out[69 + outPos] = (byte)((int)((in[21 + inPos] & 67108863L) >>> 6 & 255L));
         out[70 + outPos] = (byte)((int)((in[21 + inPos] & 67108863L) >>> 14 & 255L));
         out[71 + outPos] = (byte)((int)(((in[21 + inPos] & 67108863L) >>> 22 | (in[22 + inPos] & 67108863L) << 4) & 255L));
         out[72 + outPos] = (byte)((int)((in[22 + inPos] & 67108863L) >>> 4 & 255L));
         out[73 + outPos] = (byte)((int)((in[22 + inPos] & 67108863L) >>> 12 & 255L));
         out[74 + outPos] = (byte)((int)(((in[22 + inPos] & 67108863L) >>> 20 | (in[23 + inPos] & 67108863L) << 6) & 255L));
         out[75 + outPos] = (byte)((int)((in[23 + inPos] & 67108863L) >>> 2 & 255L));
         out[76 + outPos] = (byte)((int)((in[23 + inPos] & 67108863L) >>> 10 & 255L));
         out[77 + outPos] = (byte)((int)((in[23 + inPos] & 67108863L) >>> 18 & 255L));
         out[78 + outPos] = (byte)((int)(in[24 + inPos] & 67108863L & 255L));
         out[79 + outPos] = (byte)((int)((in[24 + inPos] & 67108863L) >>> 8 & 255L));
         out[80 + outPos] = (byte)((int)((in[24 + inPos] & 67108863L) >>> 16 & 255L));
         out[81 + outPos] = (byte)((int)(((in[24 + inPos] & 67108863L) >>> 24 | (in[25 + inPos] & 67108863L) << 2) & 255L));
         out[82 + outPos] = (byte)((int)((in[25 + inPos] & 67108863L) >>> 6 & 255L));
         out[83 + outPos] = (byte)((int)((in[25 + inPos] & 67108863L) >>> 14 & 255L));
         out[84 + outPos] = (byte)((int)(((in[25 + inPos] & 67108863L) >>> 22 | (in[26 + inPos] & 67108863L) << 4) & 255L));
         out[85 + outPos] = (byte)((int)((in[26 + inPos] & 67108863L) >>> 4 & 255L));
         out[86 + outPos] = (byte)((int)((in[26 + inPos] & 67108863L) >>> 12 & 255L));
         out[87 + outPos] = (byte)((int)(((in[26 + inPos] & 67108863L) >>> 20 | (in[27 + inPos] & 67108863L) << 6) & 255L));
         out[88 + outPos] = (byte)((int)((in[27 + inPos] & 67108863L) >>> 2 & 255L));
         out[89 + outPos] = (byte)((int)((in[27 + inPos] & 67108863L) >>> 10 & 255L));
         out[90 + outPos] = (byte)((int)((in[27 + inPos] & 67108863L) >>> 18 & 255L));
         out[91 + outPos] = (byte)((int)(in[28 + inPos] & 67108863L & 255L));
         out[92 + outPos] = (byte)((int)((in[28 + inPos] & 67108863L) >>> 8 & 255L));
         out[93 + outPos] = (byte)((int)((in[28 + inPos] & 67108863L) >>> 16 & 255L));
         out[94 + outPos] = (byte)((int)(((in[28 + inPos] & 67108863L) >>> 24 | (in[29 + inPos] & 67108863L) << 2) & 255L));
         out[95 + outPos] = (byte)((int)((in[29 + inPos] & 67108863L) >>> 6 & 255L));
         out[96 + outPos] = (byte)((int)((in[29 + inPos] & 67108863L) >>> 14 & 255L));
         out[97 + outPos] = (byte)((int)(((in[29 + inPos] & 67108863L) >>> 22 | (in[30 + inPos] & 67108863L) << 4) & 255L));
         out[98 + outPos] = (byte)((int)((in[30 + inPos] & 67108863L) >>> 4 & 255L));
         out[99 + outPos] = (byte)((int)((in[30 + inPos] & 67108863L) >>> 12 & 255L));
         out[100 + outPos] = (byte)((int)(((in[30 + inPos] & 67108863L) >>> 20 | (in[31 + inPos] & 67108863L) << 6) & 255L));
         out[101 + outPos] = (byte)((int)((in[31 + inPos] & 67108863L) >>> 2 & 255L));
         out[102 + outPos] = (byte)((int)((in[31 + inPos] & 67108863L) >>> 10 & 255L));
         out[103 + outPos] = (byte)((int)((in[31 + inPos] & 67108863L) >>> 18 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 67108863L;
         out[1 + outPos] = (long)in[3 + inPos] >> 2 & 63L | (long)in[4 + inPos] << 6 & 16383L | (long)in[5 + inPos] << 14 & 4194303L | (long)in[6 + inPos] << 22 & 67108863L;
         out[2 + outPos] = (long)in[6 + inPos] >> 4 & 15L | (long)in[7 + inPos] << 4 & 4095L | (long)in[8 + inPos] << 12 & 1048575L | (long)in[9 + inPos] << 20 & 67108863L;
         out[3 + outPos] = (long)in[9 + inPos] >> 6 & 3L | (long)in[10 + inPos] << 2 & 1023L | (long)in[11 + inPos] << 10 & 262143L | (long)in[12 + inPos] << 18 & 67108863L;
         out[4 + outPos] = (long)in[13 + inPos] & 255L | (long)in[14 + inPos] << 8 & 65535L | (long)in[15 + inPos] << 16 & 16777215L | (long)in[16 + inPos] << 24 & 67108863L;
         out[5 + outPos] = (long)in[16 + inPos] >> 2 & 63L | (long)in[17 + inPos] << 6 & 16383L | (long)in[18 + inPos] << 14 & 4194303L | (long)in[19 + inPos] << 22 & 67108863L;
         out[6 + outPos] = (long)in[19 + inPos] >> 4 & 15L | (long)in[20 + inPos] << 4 & 4095L | (long)in[21 + inPos] << 12 & 1048575L | (long)in[22 + inPos] << 20 & 67108863L;
         out[7 + outPos] = (long)in[22 + inPos] >> 6 & 3L | (long)in[23 + inPos] << 2 & 1023L | (long)in[24 + inPos] << 10 & 262143L | (long)in[25 + inPos] << 18 & 67108863L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 67108863L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 2 & 63L | (long)in.get(4 + inPos) << 6 & 16383L | (long)in.get(5 + inPos) << 14 & 4194303L | (long)in.get(6 + inPos) << 22 & 67108863L;
         out[2 + outPos] = (long)in.get(6 + inPos) >> 4 & 15L | (long)in.get(7 + inPos) << 4 & 4095L | (long)in.get(8 + inPos) << 12 & 1048575L | (long)in.get(9 + inPos) << 20 & 67108863L;
         out[3 + outPos] = (long)in.get(9 + inPos) >> 6 & 3L | (long)in.get(10 + inPos) << 2 & 1023L | (long)in.get(11 + inPos) << 10 & 262143L | (long)in.get(12 + inPos) << 18 & 67108863L;
         out[4 + outPos] = (long)in.get(13 + inPos) & 255L | (long)in.get(14 + inPos) << 8 & 65535L | (long)in.get(15 + inPos) << 16 & 16777215L | (long)in.get(16 + inPos) << 24 & 67108863L;
         out[5 + outPos] = (long)in.get(16 + inPos) >> 2 & 63L | (long)in.get(17 + inPos) << 6 & 16383L | (long)in.get(18 + inPos) << 14 & 4194303L | (long)in.get(19 + inPos) << 22 & 67108863L;
         out[6 + outPos] = (long)in.get(19 + inPos) >> 4 & 15L | (long)in.get(20 + inPos) << 4 & 4095L | (long)in.get(21 + inPos) << 12 & 1048575L | (long)in.get(22 + inPos) << 20 & 67108863L;
         out[7 + outPos] = (long)in.get(22 + inPos) >> 6 & 3L | (long)in.get(23 + inPos) << 2 & 1023L | (long)in.get(24 + inPos) << 10 & 262143L | (long)in.get(25 + inPos) << 18 & 67108863L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 67108863L;
         out[1 + outPos] = (long)in[3 + inPos] >> 2 & 63L | (long)in[4 + inPos] << 6 & 16383L | (long)in[5 + inPos] << 14 & 4194303L | (long)in[6 + inPos] << 22 & 67108863L;
         out[2 + outPos] = (long)in[6 + inPos] >> 4 & 15L | (long)in[7 + inPos] << 4 & 4095L | (long)in[8 + inPos] << 12 & 1048575L | (long)in[9 + inPos] << 20 & 67108863L;
         out[3 + outPos] = (long)in[9 + inPos] >> 6 & 3L | (long)in[10 + inPos] << 2 & 1023L | (long)in[11 + inPos] << 10 & 262143L | (long)in[12 + inPos] << 18 & 67108863L;
         out[4 + outPos] = (long)in[13 + inPos] & 255L | (long)in[14 + inPos] << 8 & 65535L | (long)in[15 + inPos] << 16 & 16777215L | (long)in[16 + inPos] << 24 & 67108863L;
         out[5 + outPos] = (long)in[16 + inPos] >> 2 & 63L | (long)in[17 + inPos] << 6 & 16383L | (long)in[18 + inPos] << 14 & 4194303L | (long)in[19 + inPos] << 22 & 67108863L;
         out[6 + outPos] = (long)in[19 + inPos] >> 4 & 15L | (long)in[20 + inPos] << 4 & 4095L | (long)in[21 + inPos] << 12 & 1048575L | (long)in[22 + inPos] << 20 & 67108863L;
         out[7 + outPos] = (long)in[22 + inPos] >> 6 & 3L | (long)in[23 + inPos] << 2 & 1023L | (long)in[24 + inPos] << 10 & 262143L | (long)in[25 + inPos] << 18 & 67108863L;
         out[8 + outPos] = (long)in[26 + inPos] & 255L | (long)in[27 + inPos] << 8 & 65535L | (long)in[28 + inPos] << 16 & 16777215L | (long)in[29 + inPos] << 24 & 67108863L;
         out[9 + outPos] = (long)in[29 + inPos] >> 2 & 63L | (long)in[30 + inPos] << 6 & 16383L | (long)in[31 + inPos] << 14 & 4194303L | (long)in[32 + inPos] << 22 & 67108863L;
         out[10 + outPos] = (long)in[32 + inPos] >> 4 & 15L | (long)in[33 + inPos] << 4 & 4095L | (long)in[34 + inPos] << 12 & 1048575L | (long)in[35 + inPos] << 20 & 67108863L;
         out[11 + outPos] = (long)in[35 + inPos] >> 6 & 3L | (long)in[36 + inPos] << 2 & 1023L | (long)in[37 + inPos] << 10 & 262143L | (long)in[38 + inPos] << 18 & 67108863L;
         out[12 + outPos] = (long)in[39 + inPos] & 255L | (long)in[40 + inPos] << 8 & 65535L | (long)in[41 + inPos] << 16 & 16777215L | (long)in[42 + inPos] << 24 & 67108863L;
         out[13 + outPos] = (long)in[42 + inPos] >> 2 & 63L | (long)in[43 + inPos] << 6 & 16383L | (long)in[44 + inPos] << 14 & 4194303L | (long)in[45 + inPos] << 22 & 67108863L;
         out[14 + outPos] = (long)in[45 + inPos] >> 4 & 15L | (long)in[46 + inPos] << 4 & 4095L | (long)in[47 + inPos] << 12 & 1048575L | (long)in[48 + inPos] << 20 & 67108863L;
         out[15 + outPos] = (long)in[48 + inPos] >> 6 & 3L | (long)in[49 + inPos] << 2 & 1023L | (long)in[50 + inPos] << 10 & 262143L | (long)in[51 + inPos] << 18 & 67108863L;
         out[16 + outPos] = (long)in[52 + inPos] & 255L | (long)in[53 + inPos] << 8 & 65535L | (long)in[54 + inPos] << 16 & 16777215L | (long)in[55 + inPos] << 24 & 67108863L;
         out[17 + outPos] = (long)in[55 + inPos] >> 2 & 63L | (long)in[56 + inPos] << 6 & 16383L | (long)in[57 + inPos] << 14 & 4194303L | (long)in[58 + inPos] << 22 & 67108863L;
         out[18 + outPos] = (long)in[58 + inPos] >> 4 & 15L | (long)in[59 + inPos] << 4 & 4095L | (long)in[60 + inPos] << 12 & 1048575L | (long)in[61 + inPos] << 20 & 67108863L;
         out[19 + outPos] = (long)in[61 + inPos] >> 6 & 3L | (long)in[62 + inPos] << 2 & 1023L | (long)in[63 + inPos] << 10 & 262143L | (long)in[64 + inPos] << 18 & 67108863L;
         out[20 + outPos] = (long)in[65 + inPos] & 255L | (long)in[66 + inPos] << 8 & 65535L | (long)in[67 + inPos] << 16 & 16777215L | (long)in[68 + inPos] << 24 & 67108863L;
         out[21 + outPos] = (long)in[68 + inPos] >> 2 & 63L | (long)in[69 + inPos] << 6 & 16383L | (long)in[70 + inPos] << 14 & 4194303L | (long)in[71 + inPos] << 22 & 67108863L;
         out[22 + outPos] = (long)in[71 + inPos] >> 4 & 15L | (long)in[72 + inPos] << 4 & 4095L | (long)in[73 + inPos] << 12 & 1048575L | (long)in[74 + inPos] << 20 & 67108863L;
         out[23 + outPos] = (long)in[74 + inPos] >> 6 & 3L | (long)in[75 + inPos] << 2 & 1023L | (long)in[76 + inPos] << 10 & 262143L | (long)in[77 + inPos] << 18 & 67108863L;
         out[24 + outPos] = (long)in[78 + inPos] & 255L | (long)in[79 + inPos] << 8 & 65535L | (long)in[80 + inPos] << 16 & 16777215L | (long)in[81 + inPos] << 24 & 67108863L;
         out[25 + outPos] = (long)in[81 + inPos] >> 2 & 63L | (long)in[82 + inPos] << 6 & 16383L | (long)in[83 + inPos] << 14 & 4194303L | (long)in[84 + inPos] << 22 & 67108863L;
         out[26 + outPos] = (long)in[84 + inPos] >> 4 & 15L | (long)in[85 + inPos] << 4 & 4095L | (long)in[86 + inPos] << 12 & 1048575L | (long)in[87 + inPos] << 20 & 67108863L;
         out[27 + outPos] = (long)in[87 + inPos] >> 6 & 3L | (long)in[88 + inPos] << 2 & 1023L | (long)in[89 + inPos] << 10 & 262143L | (long)in[90 + inPos] << 18 & 67108863L;
         out[28 + outPos] = (long)in[91 + inPos] & 255L | (long)in[92 + inPos] << 8 & 65535L | (long)in[93 + inPos] << 16 & 16777215L | (long)in[94 + inPos] << 24 & 67108863L;
         out[29 + outPos] = (long)in[94 + inPos] >> 2 & 63L | (long)in[95 + inPos] << 6 & 16383L | (long)in[96 + inPos] << 14 & 4194303L | (long)in[97 + inPos] << 22 & 67108863L;
         out[30 + outPos] = (long)in[97 + inPos] >> 4 & 15L | (long)in[98 + inPos] << 4 & 4095L | (long)in[99 + inPos] << 12 & 1048575L | (long)in[100 + inPos] << 20 & 67108863L;
         out[31 + outPos] = (long)in[100 + inPos] >> 6 & 3L | (long)in[101 + inPos] << 2 & 1023L | (long)in[102 + inPos] << 10 & 262143L | (long)in[103 + inPos] << 18 & 67108863L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 67108863L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 2 & 63L | (long)in.get(4 + inPos) << 6 & 16383L | (long)in.get(5 + inPos) << 14 & 4194303L | (long)in.get(6 + inPos) << 22 & 67108863L;
         out[2 + outPos] = (long)in.get(6 + inPos) >> 4 & 15L | (long)in.get(7 + inPos) << 4 & 4095L | (long)in.get(8 + inPos) << 12 & 1048575L | (long)in.get(9 + inPos) << 20 & 67108863L;
         out[3 + outPos] = (long)in.get(9 + inPos) >> 6 & 3L | (long)in.get(10 + inPos) << 2 & 1023L | (long)in.get(11 + inPos) << 10 & 262143L | (long)in.get(12 + inPos) << 18 & 67108863L;
         out[4 + outPos] = (long)in.get(13 + inPos) & 255L | (long)in.get(14 + inPos) << 8 & 65535L | (long)in.get(15 + inPos) << 16 & 16777215L | (long)in.get(16 + inPos) << 24 & 67108863L;
         out[5 + outPos] = (long)in.get(16 + inPos) >> 2 & 63L | (long)in.get(17 + inPos) << 6 & 16383L | (long)in.get(18 + inPos) << 14 & 4194303L | (long)in.get(19 + inPos) << 22 & 67108863L;
         out[6 + outPos] = (long)in.get(19 + inPos) >> 4 & 15L | (long)in.get(20 + inPos) << 4 & 4095L | (long)in.get(21 + inPos) << 12 & 1048575L | (long)in.get(22 + inPos) << 20 & 67108863L;
         out[7 + outPos] = (long)in.get(22 + inPos) >> 6 & 3L | (long)in.get(23 + inPos) << 2 & 1023L | (long)in.get(24 + inPos) << 10 & 262143L | (long)in.get(25 + inPos) << 18 & 67108863L;
         out[8 + outPos] = (long)in.get(26 + inPos) & 255L | (long)in.get(27 + inPos) << 8 & 65535L | (long)in.get(28 + inPos) << 16 & 16777215L | (long)in.get(29 + inPos) << 24 & 67108863L;
         out[9 + outPos] = (long)in.get(29 + inPos) >> 2 & 63L | (long)in.get(30 + inPos) << 6 & 16383L | (long)in.get(31 + inPos) << 14 & 4194303L | (long)in.get(32 + inPos) << 22 & 67108863L;
         out[10 + outPos] = (long)in.get(32 + inPos) >> 4 & 15L | (long)in.get(33 + inPos) << 4 & 4095L | (long)in.get(34 + inPos) << 12 & 1048575L | (long)in.get(35 + inPos) << 20 & 67108863L;
         out[11 + outPos] = (long)in.get(35 + inPos) >> 6 & 3L | (long)in.get(36 + inPos) << 2 & 1023L | (long)in.get(37 + inPos) << 10 & 262143L | (long)in.get(38 + inPos) << 18 & 67108863L;
         out[12 + outPos] = (long)in.get(39 + inPos) & 255L | (long)in.get(40 + inPos) << 8 & 65535L | (long)in.get(41 + inPos) << 16 & 16777215L | (long)in.get(42 + inPos) << 24 & 67108863L;
         out[13 + outPos] = (long)in.get(42 + inPos) >> 2 & 63L | (long)in.get(43 + inPos) << 6 & 16383L | (long)in.get(44 + inPos) << 14 & 4194303L | (long)in.get(45 + inPos) << 22 & 67108863L;
         out[14 + outPos] = (long)in.get(45 + inPos) >> 4 & 15L | (long)in.get(46 + inPos) << 4 & 4095L | (long)in.get(47 + inPos) << 12 & 1048575L | (long)in.get(48 + inPos) << 20 & 67108863L;
         out[15 + outPos] = (long)in.get(48 + inPos) >> 6 & 3L | (long)in.get(49 + inPos) << 2 & 1023L | (long)in.get(50 + inPos) << 10 & 262143L | (long)in.get(51 + inPos) << 18 & 67108863L;
         out[16 + outPos] = (long)in.get(52 + inPos) & 255L | (long)in.get(53 + inPos) << 8 & 65535L | (long)in.get(54 + inPos) << 16 & 16777215L | (long)in.get(55 + inPos) << 24 & 67108863L;
         out[17 + outPos] = (long)in.get(55 + inPos) >> 2 & 63L | (long)in.get(56 + inPos) << 6 & 16383L | (long)in.get(57 + inPos) << 14 & 4194303L | (long)in.get(58 + inPos) << 22 & 67108863L;
         out[18 + outPos] = (long)in.get(58 + inPos) >> 4 & 15L | (long)in.get(59 + inPos) << 4 & 4095L | (long)in.get(60 + inPos) << 12 & 1048575L | (long)in.get(61 + inPos) << 20 & 67108863L;
         out[19 + outPos] = (long)in.get(61 + inPos) >> 6 & 3L | (long)in.get(62 + inPos) << 2 & 1023L | (long)in.get(63 + inPos) << 10 & 262143L | (long)in.get(64 + inPos) << 18 & 67108863L;
         out[20 + outPos] = (long)in.get(65 + inPos) & 255L | (long)in.get(66 + inPos) << 8 & 65535L | (long)in.get(67 + inPos) << 16 & 16777215L | (long)in.get(68 + inPos) << 24 & 67108863L;
         out[21 + outPos] = (long)in.get(68 + inPos) >> 2 & 63L | (long)in.get(69 + inPos) << 6 & 16383L | (long)in.get(70 + inPos) << 14 & 4194303L | (long)in.get(71 + inPos) << 22 & 67108863L;
         out[22 + outPos] = (long)in.get(71 + inPos) >> 4 & 15L | (long)in.get(72 + inPos) << 4 & 4095L | (long)in.get(73 + inPos) << 12 & 1048575L | (long)in.get(74 + inPos) << 20 & 67108863L;
         out[23 + outPos] = (long)in.get(74 + inPos) >> 6 & 3L | (long)in.get(75 + inPos) << 2 & 1023L | (long)in.get(76 + inPos) << 10 & 262143L | (long)in.get(77 + inPos) << 18 & 67108863L;
         out[24 + outPos] = (long)in.get(78 + inPos) & 255L | (long)in.get(79 + inPos) << 8 & 65535L | (long)in.get(80 + inPos) << 16 & 16777215L | (long)in.get(81 + inPos) << 24 & 67108863L;
         out[25 + outPos] = (long)in.get(81 + inPos) >> 2 & 63L | (long)in.get(82 + inPos) << 6 & 16383L | (long)in.get(83 + inPos) << 14 & 4194303L | (long)in.get(84 + inPos) << 22 & 67108863L;
         out[26 + outPos] = (long)in.get(84 + inPos) >> 4 & 15L | (long)in.get(85 + inPos) << 4 & 4095L | (long)in.get(86 + inPos) << 12 & 1048575L | (long)in.get(87 + inPos) << 20 & 67108863L;
         out[27 + outPos] = (long)in.get(87 + inPos) >> 6 & 3L | (long)in.get(88 + inPos) << 2 & 1023L | (long)in.get(89 + inPos) << 10 & 262143L | (long)in.get(90 + inPos) << 18 & 67108863L;
         out[28 + outPos] = (long)in.get(91 + inPos) & 255L | (long)in.get(92 + inPos) << 8 & 65535L | (long)in.get(93 + inPos) << 16 & 16777215L | (long)in.get(94 + inPos) << 24 & 67108863L;
         out[29 + outPos] = (long)in.get(94 + inPos) >> 2 & 63L | (long)in.get(95 + inPos) << 6 & 16383L | (long)in.get(96 + inPos) << 14 & 4194303L | (long)in.get(97 + inPos) << 22 & 67108863L;
         out[30 + outPos] = (long)in.get(97 + inPos) >> 4 & 15L | (long)in.get(98 + inPos) << 4 & 4095L | (long)in.get(99 + inPos) << 12 & 1048575L | (long)in.get(100 + inPos) << 20 & 67108863L;
         out[31 + outPos] = (long)in.get(100 + inPos) >> 6 & 3L | (long)in.get(101 + inPos) << 2 & 1023L | (long)in.get(102 + inPos) << 10 & 262143L | (long)in.get(103 + inPos) << 18 & 67108863L;
      }
   }

   private static final class Packer27 extends BytePackerForLong {
      private Packer27() {
         super(27);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 134217727L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 134217727L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 134217727L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 134217727L) >>> 24 | (in[1 + inPos] & 134217727L) << 3) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 134217727L) >>> 5 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 134217727L) >>> 13 & 255L));
         out[6 + outPos] = (byte)((int)(((in[1 + inPos] & 134217727L) >>> 21 | (in[2 + inPos] & 134217727L) << 6) & 255L));
         out[7 + outPos] = (byte)((int)((in[2 + inPos] & 134217727L) >>> 2 & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 134217727L) >>> 10 & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 134217727L) >>> 18 & 255L));
         out[10 + outPos] = (byte)((int)(((in[2 + inPos] & 134217727L) >>> 26 | (in[3 + inPos] & 134217727L) << 1) & 255L));
         out[11 + outPos] = (byte)((int)((in[3 + inPos] & 134217727L) >>> 7 & 255L));
         out[12 + outPos] = (byte)((int)((in[3 + inPos] & 134217727L) >>> 15 & 255L));
         out[13 + outPos] = (byte)((int)(((in[3 + inPos] & 134217727L) >>> 23 | (in[4 + inPos] & 134217727L) << 4) & 255L));
         out[14 + outPos] = (byte)((int)((in[4 + inPos] & 134217727L) >>> 4 & 255L));
         out[15 + outPos] = (byte)((int)((in[4 + inPos] & 134217727L) >>> 12 & 255L));
         out[16 + outPos] = (byte)((int)(((in[4 + inPos] & 134217727L) >>> 20 | (in[5 + inPos] & 134217727L) << 7) & 255L));
         out[17 + outPos] = (byte)((int)((in[5 + inPos] & 134217727L) >>> 1 & 255L));
         out[18 + outPos] = (byte)((int)((in[5 + inPos] & 134217727L) >>> 9 & 255L));
         out[19 + outPos] = (byte)((int)((in[5 + inPos] & 134217727L) >>> 17 & 255L));
         out[20 + outPos] = (byte)((int)(((in[5 + inPos] & 134217727L) >>> 25 | (in[6 + inPos] & 134217727L) << 2) & 255L));
         out[21 + outPos] = (byte)((int)((in[6 + inPos] & 134217727L) >>> 6 & 255L));
         out[22 + outPos] = (byte)((int)((in[6 + inPos] & 134217727L) >>> 14 & 255L));
         out[23 + outPos] = (byte)((int)(((in[6 + inPos] & 134217727L) >>> 22 | (in[7 + inPos] & 134217727L) << 5) & 255L));
         out[24 + outPos] = (byte)((int)((in[7 + inPos] & 134217727L) >>> 3 & 255L));
         out[25 + outPos] = (byte)((int)((in[7 + inPos] & 134217727L) >>> 11 & 255L));
         out[26 + outPos] = (byte)((int)((in[7 + inPos] & 134217727L) >>> 19 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 134217727L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 134217727L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 134217727L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 134217727L) >>> 24 | (in[1 + inPos] & 134217727L) << 3) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 134217727L) >>> 5 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 134217727L) >>> 13 & 255L));
         out[6 + outPos] = (byte)((int)(((in[1 + inPos] & 134217727L) >>> 21 | (in[2 + inPos] & 134217727L) << 6) & 255L));
         out[7 + outPos] = (byte)((int)((in[2 + inPos] & 134217727L) >>> 2 & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 134217727L) >>> 10 & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 134217727L) >>> 18 & 255L));
         out[10 + outPos] = (byte)((int)(((in[2 + inPos] & 134217727L) >>> 26 | (in[3 + inPos] & 134217727L) << 1) & 255L));
         out[11 + outPos] = (byte)((int)((in[3 + inPos] & 134217727L) >>> 7 & 255L));
         out[12 + outPos] = (byte)((int)((in[3 + inPos] & 134217727L) >>> 15 & 255L));
         out[13 + outPos] = (byte)((int)(((in[3 + inPos] & 134217727L) >>> 23 | (in[4 + inPos] & 134217727L) << 4) & 255L));
         out[14 + outPos] = (byte)((int)((in[4 + inPos] & 134217727L) >>> 4 & 255L));
         out[15 + outPos] = (byte)((int)((in[4 + inPos] & 134217727L) >>> 12 & 255L));
         out[16 + outPos] = (byte)((int)(((in[4 + inPos] & 134217727L) >>> 20 | (in[5 + inPos] & 134217727L) << 7) & 255L));
         out[17 + outPos] = (byte)((int)((in[5 + inPos] & 134217727L) >>> 1 & 255L));
         out[18 + outPos] = (byte)((int)((in[5 + inPos] & 134217727L) >>> 9 & 255L));
         out[19 + outPos] = (byte)((int)((in[5 + inPos] & 134217727L) >>> 17 & 255L));
         out[20 + outPos] = (byte)((int)(((in[5 + inPos] & 134217727L) >>> 25 | (in[6 + inPos] & 134217727L) << 2) & 255L));
         out[21 + outPos] = (byte)((int)((in[6 + inPos] & 134217727L) >>> 6 & 255L));
         out[22 + outPos] = (byte)((int)((in[6 + inPos] & 134217727L) >>> 14 & 255L));
         out[23 + outPos] = (byte)((int)(((in[6 + inPos] & 134217727L) >>> 22 | (in[7 + inPos] & 134217727L) << 5) & 255L));
         out[24 + outPos] = (byte)((int)((in[7 + inPos] & 134217727L) >>> 3 & 255L));
         out[25 + outPos] = (byte)((int)((in[7 + inPos] & 134217727L) >>> 11 & 255L));
         out[26 + outPos] = (byte)((int)((in[7 + inPos] & 134217727L) >>> 19 & 255L));
         out[27 + outPos] = (byte)((int)(in[8 + inPos] & 134217727L & 255L));
         out[28 + outPos] = (byte)((int)((in[8 + inPos] & 134217727L) >>> 8 & 255L));
         out[29 + outPos] = (byte)((int)((in[8 + inPos] & 134217727L) >>> 16 & 255L));
         out[30 + outPos] = (byte)((int)(((in[8 + inPos] & 134217727L) >>> 24 | (in[9 + inPos] & 134217727L) << 3) & 255L));
         out[31 + outPos] = (byte)((int)((in[9 + inPos] & 134217727L) >>> 5 & 255L));
         out[32 + outPos] = (byte)((int)((in[9 + inPos] & 134217727L) >>> 13 & 255L));
         out[33 + outPos] = (byte)((int)(((in[9 + inPos] & 134217727L) >>> 21 | (in[10 + inPos] & 134217727L) << 6) & 255L));
         out[34 + outPos] = (byte)((int)((in[10 + inPos] & 134217727L) >>> 2 & 255L));
         out[35 + outPos] = (byte)((int)((in[10 + inPos] & 134217727L) >>> 10 & 255L));
         out[36 + outPos] = (byte)((int)((in[10 + inPos] & 134217727L) >>> 18 & 255L));
         out[37 + outPos] = (byte)((int)(((in[10 + inPos] & 134217727L) >>> 26 | (in[11 + inPos] & 134217727L) << 1) & 255L));
         out[38 + outPos] = (byte)((int)((in[11 + inPos] & 134217727L) >>> 7 & 255L));
         out[39 + outPos] = (byte)((int)((in[11 + inPos] & 134217727L) >>> 15 & 255L));
         out[40 + outPos] = (byte)((int)(((in[11 + inPos] & 134217727L) >>> 23 | (in[12 + inPos] & 134217727L) << 4) & 255L));
         out[41 + outPos] = (byte)((int)((in[12 + inPos] & 134217727L) >>> 4 & 255L));
         out[42 + outPos] = (byte)((int)((in[12 + inPos] & 134217727L) >>> 12 & 255L));
         out[43 + outPos] = (byte)((int)(((in[12 + inPos] & 134217727L) >>> 20 | (in[13 + inPos] & 134217727L) << 7) & 255L));
         out[44 + outPos] = (byte)((int)((in[13 + inPos] & 134217727L) >>> 1 & 255L));
         out[45 + outPos] = (byte)((int)((in[13 + inPos] & 134217727L) >>> 9 & 255L));
         out[46 + outPos] = (byte)((int)((in[13 + inPos] & 134217727L) >>> 17 & 255L));
         out[47 + outPos] = (byte)((int)(((in[13 + inPos] & 134217727L) >>> 25 | (in[14 + inPos] & 134217727L) << 2) & 255L));
         out[48 + outPos] = (byte)((int)((in[14 + inPos] & 134217727L) >>> 6 & 255L));
         out[49 + outPos] = (byte)((int)((in[14 + inPos] & 134217727L) >>> 14 & 255L));
         out[50 + outPos] = (byte)((int)(((in[14 + inPos] & 134217727L) >>> 22 | (in[15 + inPos] & 134217727L) << 5) & 255L));
         out[51 + outPos] = (byte)((int)((in[15 + inPos] & 134217727L) >>> 3 & 255L));
         out[52 + outPos] = (byte)((int)((in[15 + inPos] & 134217727L) >>> 11 & 255L));
         out[53 + outPos] = (byte)((int)((in[15 + inPos] & 134217727L) >>> 19 & 255L));
         out[54 + outPos] = (byte)((int)(in[16 + inPos] & 134217727L & 255L));
         out[55 + outPos] = (byte)((int)((in[16 + inPos] & 134217727L) >>> 8 & 255L));
         out[56 + outPos] = (byte)((int)((in[16 + inPos] & 134217727L) >>> 16 & 255L));
         out[57 + outPos] = (byte)((int)(((in[16 + inPos] & 134217727L) >>> 24 | (in[17 + inPos] & 134217727L) << 3) & 255L));
         out[58 + outPos] = (byte)((int)((in[17 + inPos] & 134217727L) >>> 5 & 255L));
         out[59 + outPos] = (byte)((int)((in[17 + inPos] & 134217727L) >>> 13 & 255L));
         out[60 + outPos] = (byte)((int)(((in[17 + inPos] & 134217727L) >>> 21 | (in[18 + inPos] & 134217727L) << 6) & 255L));
         out[61 + outPos] = (byte)((int)((in[18 + inPos] & 134217727L) >>> 2 & 255L));
         out[62 + outPos] = (byte)((int)((in[18 + inPos] & 134217727L) >>> 10 & 255L));
         out[63 + outPos] = (byte)((int)((in[18 + inPos] & 134217727L) >>> 18 & 255L));
         out[64 + outPos] = (byte)((int)(((in[18 + inPos] & 134217727L) >>> 26 | (in[19 + inPos] & 134217727L) << 1) & 255L));
         out[65 + outPos] = (byte)((int)((in[19 + inPos] & 134217727L) >>> 7 & 255L));
         out[66 + outPos] = (byte)((int)((in[19 + inPos] & 134217727L) >>> 15 & 255L));
         out[67 + outPos] = (byte)((int)(((in[19 + inPos] & 134217727L) >>> 23 | (in[20 + inPos] & 134217727L) << 4) & 255L));
         out[68 + outPos] = (byte)((int)((in[20 + inPos] & 134217727L) >>> 4 & 255L));
         out[69 + outPos] = (byte)((int)((in[20 + inPos] & 134217727L) >>> 12 & 255L));
         out[70 + outPos] = (byte)((int)(((in[20 + inPos] & 134217727L) >>> 20 | (in[21 + inPos] & 134217727L) << 7) & 255L));
         out[71 + outPos] = (byte)((int)((in[21 + inPos] & 134217727L) >>> 1 & 255L));
         out[72 + outPos] = (byte)((int)((in[21 + inPos] & 134217727L) >>> 9 & 255L));
         out[73 + outPos] = (byte)((int)((in[21 + inPos] & 134217727L) >>> 17 & 255L));
         out[74 + outPos] = (byte)((int)(((in[21 + inPos] & 134217727L) >>> 25 | (in[22 + inPos] & 134217727L) << 2) & 255L));
         out[75 + outPos] = (byte)((int)((in[22 + inPos] & 134217727L) >>> 6 & 255L));
         out[76 + outPos] = (byte)((int)((in[22 + inPos] & 134217727L) >>> 14 & 255L));
         out[77 + outPos] = (byte)((int)(((in[22 + inPos] & 134217727L) >>> 22 | (in[23 + inPos] & 134217727L) << 5) & 255L));
         out[78 + outPos] = (byte)((int)((in[23 + inPos] & 134217727L) >>> 3 & 255L));
         out[79 + outPos] = (byte)((int)((in[23 + inPos] & 134217727L) >>> 11 & 255L));
         out[80 + outPos] = (byte)((int)((in[23 + inPos] & 134217727L) >>> 19 & 255L));
         out[81 + outPos] = (byte)((int)(in[24 + inPos] & 134217727L & 255L));
         out[82 + outPos] = (byte)((int)((in[24 + inPos] & 134217727L) >>> 8 & 255L));
         out[83 + outPos] = (byte)((int)((in[24 + inPos] & 134217727L) >>> 16 & 255L));
         out[84 + outPos] = (byte)((int)(((in[24 + inPos] & 134217727L) >>> 24 | (in[25 + inPos] & 134217727L) << 3) & 255L));
         out[85 + outPos] = (byte)((int)((in[25 + inPos] & 134217727L) >>> 5 & 255L));
         out[86 + outPos] = (byte)((int)((in[25 + inPos] & 134217727L) >>> 13 & 255L));
         out[87 + outPos] = (byte)((int)(((in[25 + inPos] & 134217727L) >>> 21 | (in[26 + inPos] & 134217727L) << 6) & 255L));
         out[88 + outPos] = (byte)((int)((in[26 + inPos] & 134217727L) >>> 2 & 255L));
         out[89 + outPos] = (byte)((int)((in[26 + inPos] & 134217727L) >>> 10 & 255L));
         out[90 + outPos] = (byte)((int)((in[26 + inPos] & 134217727L) >>> 18 & 255L));
         out[91 + outPos] = (byte)((int)(((in[26 + inPos] & 134217727L) >>> 26 | (in[27 + inPos] & 134217727L) << 1) & 255L));
         out[92 + outPos] = (byte)((int)((in[27 + inPos] & 134217727L) >>> 7 & 255L));
         out[93 + outPos] = (byte)((int)((in[27 + inPos] & 134217727L) >>> 15 & 255L));
         out[94 + outPos] = (byte)((int)(((in[27 + inPos] & 134217727L) >>> 23 | (in[28 + inPos] & 134217727L) << 4) & 255L));
         out[95 + outPos] = (byte)((int)((in[28 + inPos] & 134217727L) >>> 4 & 255L));
         out[96 + outPos] = (byte)((int)((in[28 + inPos] & 134217727L) >>> 12 & 255L));
         out[97 + outPos] = (byte)((int)(((in[28 + inPos] & 134217727L) >>> 20 | (in[29 + inPos] & 134217727L) << 7) & 255L));
         out[98 + outPos] = (byte)((int)((in[29 + inPos] & 134217727L) >>> 1 & 255L));
         out[99 + outPos] = (byte)((int)((in[29 + inPos] & 134217727L) >>> 9 & 255L));
         out[100 + outPos] = (byte)((int)((in[29 + inPos] & 134217727L) >>> 17 & 255L));
         out[101 + outPos] = (byte)((int)(((in[29 + inPos] & 134217727L) >>> 25 | (in[30 + inPos] & 134217727L) << 2) & 255L));
         out[102 + outPos] = (byte)((int)((in[30 + inPos] & 134217727L) >>> 6 & 255L));
         out[103 + outPos] = (byte)((int)((in[30 + inPos] & 134217727L) >>> 14 & 255L));
         out[104 + outPos] = (byte)((int)(((in[30 + inPos] & 134217727L) >>> 22 | (in[31 + inPos] & 134217727L) << 5) & 255L));
         out[105 + outPos] = (byte)((int)((in[31 + inPos] & 134217727L) >>> 3 & 255L));
         out[106 + outPos] = (byte)((int)((in[31 + inPos] & 134217727L) >>> 11 & 255L));
         out[107 + outPos] = (byte)((int)((in[31 + inPos] & 134217727L) >>> 19 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 134217727L;
         out[1 + outPos] = (long)in[3 + inPos] >> 3 & 31L | (long)in[4 + inPos] << 5 & 8191L | (long)in[5 + inPos] << 13 & 2097151L | (long)in[6 + inPos] << 21 & 134217727L;
         out[2 + outPos] = (long)in[6 + inPos] >> 6 & 3L | (long)in[7 + inPos] << 2 & 1023L | (long)in[8 + inPos] << 10 & 262143L | (long)in[9 + inPos] << 18 & 67108863L | (long)in[10 + inPos] << 26 & 134217727L;
         out[3 + outPos] = (long)in[10 + inPos] >> 1 & 127L | (long)in[11 + inPos] << 7 & 32767L | (long)in[12 + inPos] << 15 & 8388607L | (long)in[13 + inPos] << 23 & 134217727L;
         out[4 + outPos] = (long)in[13 + inPos] >> 4 & 15L | (long)in[14 + inPos] << 4 & 4095L | (long)in[15 + inPos] << 12 & 1048575L | (long)in[16 + inPos] << 20 & 134217727L;
         out[5 + outPos] = (long)in[16 + inPos] >> 7 & 1L | (long)in[17 + inPos] << 1 & 511L | (long)in[18 + inPos] << 9 & 131071L | (long)in[19 + inPos] << 17 & 33554431L | (long)in[20 + inPos] << 25 & 134217727L;
         out[6 + outPos] = (long)in[20 + inPos] >> 2 & 63L | (long)in[21 + inPos] << 6 & 16383L | (long)in[22 + inPos] << 14 & 4194303L | (long)in[23 + inPos] << 22 & 134217727L;
         out[7 + outPos] = (long)in[23 + inPos] >> 5 & 7L | (long)in[24 + inPos] << 3 & 2047L | (long)in[25 + inPos] << 11 & 524287L | (long)in[26 + inPos] << 19 & 134217727L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 134217727L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 3 & 31L | (long)in.get(4 + inPos) << 5 & 8191L | (long)in.get(5 + inPos) << 13 & 2097151L | (long)in.get(6 + inPos) << 21 & 134217727L;
         out[2 + outPos] = (long)in.get(6 + inPos) >> 6 & 3L | (long)in.get(7 + inPos) << 2 & 1023L | (long)in.get(8 + inPos) << 10 & 262143L | (long)in.get(9 + inPos) << 18 & 67108863L | (long)in.get(10 + inPos) << 26 & 134217727L;
         out[3 + outPos] = (long)in.get(10 + inPos) >> 1 & 127L | (long)in.get(11 + inPos) << 7 & 32767L | (long)in.get(12 + inPos) << 15 & 8388607L | (long)in.get(13 + inPos) << 23 & 134217727L;
         out[4 + outPos] = (long)in.get(13 + inPos) >> 4 & 15L | (long)in.get(14 + inPos) << 4 & 4095L | (long)in.get(15 + inPos) << 12 & 1048575L | (long)in.get(16 + inPos) << 20 & 134217727L;
         out[5 + outPos] = (long)in.get(16 + inPos) >> 7 & 1L | (long)in.get(17 + inPos) << 1 & 511L | (long)in.get(18 + inPos) << 9 & 131071L | (long)in.get(19 + inPos) << 17 & 33554431L | (long)in.get(20 + inPos) << 25 & 134217727L;
         out[6 + outPos] = (long)in.get(20 + inPos) >> 2 & 63L | (long)in.get(21 + inPos) << 6 & 16383L | (long)in.get(22 + inPos) << 14 & 4194303L | (long)in.get(23 + inPos) << 22 & 134217727L;
         out[7 + outPos] = (long)in.get(23 + inPos) >> 5 & 7L | (long)in.get(24 + inPos) << 3 & 2047L | (long)in.get(25 + inPos) << 11 & 524287L | (long)in.get(26 + inPos) << 19 & 134217727L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 134217727L;
         out[1 + outPos] = (long)in[3 + inPos] >> 3 & 31L | (long)in[4 + inPos] << 5 & 8191L | (long)in[5 + inPos] << 13 & 2097151L | (long)in[6 + inPos] << 21 & 134217727L;
         out[2 + outPos] = (long)in[6 + inPos] >> 6 & 3L | (long)in[7 + inPos] << 2 & 1023L | (long)in[8 + inPos] << 10 & 262143L | (long)in[9 + inPos] << 18 & 67108863L | (long)in[10 + inPos] << 26 & 134217727L;
         out[3 + outPos] = (long)in[10 + inPos] >> 1 & 127L | (long)in[11 + inPos] << 7 & 32767L | (long)in[12 + inPos] << 15 & 8388607L | (long)in[13 + inPos] << 23 & 134217727L;
         out[4 + outPos] = (long)in[13 + inPos] >> 4 & 15L | (long)in[14 + inPos] << 4 & 4095L | (long)in[15 + inPos] << 12 & 1048575L | (long)in[16 + inPos] << 20 & 134217727L;
         out[5 + outPos] = (long)in[16 + inPos] >> 7 & 1L | (long)in[17 + inPos] << 1 & 511L | (long)in[18 + inPos] << 9 & 131071L | (long)in[19 + inPos] << 17 & 33554431L | (long)in[20 + inPos] << 25 & 134217727L;
         out[6 + outPos] = (long)in[20 + inPos] >> 2 & 63L | (long)in[21 + inPos] << 6 & 16383L | (long)in[22 + inPos] << 14 & 4194303L | (long)in[23 + inPos] << 22 & 134217727L;
         out[7 + outPos] = (long)in[23 + inPos] >> 5 & 7L | (long)in[24 + inPos] << 3 & 2047L | (long)in[25 + inPos] << 11 & 524287L | (long)in[26 + inPos] << 19 & 134217727L;
         out[8 + outPos] = (long)in[27 + inPos] & 255L | (long)in[28 + inPos] << 8 & 65535L | (long)in[29 + inPos] << 16 & 16777215L | (long)in[30 + inPos] << 24 & 134217727L;
         out[9 + outPos] = (long)in[30 + inPos] >> 3 & 31L | (long)in[31 + inPos] << 5 & 8191L | (long)in[32 + inPos] << 13 & 2097151L | (long)in[33 + inPos] << 21 & 134217727L;
         out[10 + outPos] = (long)in[33 + inPos] >> 6 & 3L | (long)in[34 + inPos] << 2 & 1023L | (long)in[35 + inPos] << 10 & 262143L | (long)in[36 + inPos] << 18 & 67108863L | (long)in[37 + inPos] << 26 & 134217727L;
         out[11 + outPos] = (long)in[37 + inPos] >> 1 & 127L | (long)in[38 + inPos] << 7 & 32767L | (long)in[39 + inPos] << 15 & 8388607L | (long)in[40 + inPos] << 23 & 134217727L;
         out[12 + outPos] = (long)in[40 + inPos] >> 4 & 15L | (long)in[41 + inPos] << 4 & 4095L | (long)in[42 + inPos] << 12 & 1048575L | (long)in[43 + inPos] << 20 & 134217727L;
         out[13 + outPos] = (long)in[43 + inPos] >> 7 & 1L | (long)in[44 + inPos] << 1 & 511L | (long)in[45 + inPos] << 9 & 131071L | (long)in[46 + inPos] << 17 & 33554431L | (long)in[47 + inPos] << 25 & 134217727L;
         out[14 + outPos] = (long)in[47 + inPos] >> 2 & 63L | (long)in[48 + inPos] << 6 & 16383L | (long)in[49 + inPos] << 14 & 4194303L | (long)in[50 + inPos] << 22 & 134217727L;
         out[15 + outPos] = (long)in[50 + inPos] >> 5 & 7L | (long)in[51 + inPos] << 3 & 2047L | (long)in[52 + inPos] << 11 & 524287L | (long)in[53 + inPos] << 19 & 134217727L;
         out[16 + outPos] = (long)in[54 + inPos] & 255L | (long)in[55 + inPos] << 8 & 65535L | (long)in[56 + inPos] << 16 & 16777215L | (long)in[57 + inPos] << 24 & 134217727L;
         out[17 + outPos] = (long)in[57 + inPos] >> 3 & 31L | (long)in[58 + inPos] << 5 & 8191L | (long)in[59 + inPos] << 13 & 2097151L | (long)in[60 + inPos] << 21 & 134217727L;
         out[18 + outPos] = (long)in[60 + inPos] >> 6 & 3L | (long)in[61 + inPos] << 2 & 1023L | (long)in[62 + inPos] << 10 & 262143L | (long)in[63 + inPos] << 18 & 67108863L | (long)in[64 + inPos] << 26 & 134217727L;
         out[19 + outPos] = (long)in[64 + inPos] >> 1 & 127L | (long)in[65 + inPos] << 7 & 32767L | (long)in[66 + inPos] << 15 & 8388607L | (long)in[67 + inPos] << 23 & 134217727L;
         out[20 + outPos] = (long)in[67 + inPos] >> 4 & 15L | (long)in[68 + inPos] << 4 & 4095L | (long)in[69 + inPos] << 12 & 1048575L | (long)in[70 + inPos] << 20 & 134217727L;
         out[21 + outPos] = (long)in[70 + inPos] >> 7 & 1L | (long)in[71 + inPos] << 1 & 511L | (long)in[72 + inPos] << 9 & 131071L | (long)in[73 + inPos] << 17 & 33554431L | (long)in[74 + inPos] << 25 & 134217727L;
         out[22 + outPos] = (long)in[74 + inPos] >> 2 & 63L | (long)in[75 + inPos] << 6 & 16383L | (long)in[76 + inPos] << 14 & 4194303L | (long)in[77 + inPos] << 22 & 134217727L;
         out[23 + outPos] = (long)in[77 + inPos] >> 5 & 7L | (long)in[78 + inPos] << 3 & 2047L | (long)in[79 + inPos] << 11 & 524287L | (long)in[80 + inPos] << 19 & 134217727L;
         out[24 + outPos] = (long)in[81 + inPos] & 255L | (long)in[82 + inPos] << 8 & 65535L | (long)in[83 + inPos] << 16 & 16777215L | (long)in[84 + inPos] << 24 & 134217727L;
         out[25 + outPos] = (long)in[84 + inPos] >> 3 & 31L | (long)in[85 + inPos] << 5 & 8191L | (long)in[86 + inPos] << 13 & 2097151L | (long)in[87 + inPos] << 21 & 134217727L;
         out[26 + outPos] = (long)in[87 + inPos] >> 6 & 3L | (long)in[88 + inPos] << 2 & 1023L | (long)in[89 + inPos] << 10 & 262143L | (long)in[90 + inPos] << 18 & 67108863L | (long)in[91 + inPos] << 26 & 134217727L;
         out[27 + outPos] = (long)in[91 + inPos] >> 1 & 127L | (long)in[92 + inPos] << 7 & 32767L | (long)in[93 + inPos] << 15 & 8388607L | (long)in[94 + inPos] << 23 & 134217727L;
         out[28 + outPos] = (long)in[94 + inPos] >> 4 & 15L | (long)in[95 + inPos] << 4 & 4095L | (long)in[96 + inPos] << 12 & 1048575L | (long)in[97 + inPos] << 20 & 134217727L;
         out[29 + outPos] = (long)in[97 + inPos] >> 7 & 1L | (long)in[98 + inPos] << 1 & 511L | (long)in[99 + inPos] << 9 & 131071L | (long)in[100 + inPos] << 17 & 33554431L | (long)in[101 + inPos] << 25 & 134217727L;
         out[30 + outPos] = (long)in[101 + inPos] >> 2 & 63L | (long)in[102 + inPos] << 6 & 16383L | (long)in[103 + inPos] << 14 & 4194303L | (long)in[104 + inPos] << 22 & 134217727L;
         out[31 + outPos] = (long)in[104 + inPos] >> 5 & 7L | (long)in[105 + inPos] << 3 & 2047L | (long)in[106 + inPos] << 11 & 524287L | (long)in[107 + inPos] << 19 & 134217727L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 134217727L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 3 & 31L | (long)in.get(4 + inPos) << 5 & 8191L | (long)in.get(5 + inPos) << 13 & 2097151L | (long)in.get(6 + inPos) << 21 & 134217727L;
         out[2 + outPos] = (long)in.get(6 + inPos) >> 6 & 3L | (long)in.get(7 + inPos) << 2 & 1023L | (long)in.get(8 + inPos) << 10 & 262143L | (long)in.get(9 + inPos) << 18 & 67108863L | (long)in.get(10 + inPos) << 26 & 134217727L;
         out[3 + outPos] = (long)in.get(10 + inPos) >> 1 & 127L | (long)in.get(11 + inPos) << 7 & 32767L | (long)in.get(12 + inPos) << 15 & 8388607L | (long)in.get(13 + inPos) << 23 & 134217727L;
         out[4 + outPos] = (long)in.get(13 + inPos) >> 4 & 15L | (long)in.get(14 + inPos) << 4 & 4095L | (long)in.get(15 + inPos) << 12 & 1048575L | (long)in.get(16 + inPos) << 20 & 134217727L;
         out[5 + outPos] = (long)in.get(16 + inPos) >> 7 & 1L | (long)in.get(17 + inPos) << 1 & 511L | (long)in.get(18 + inPos) << 9 & 131071L | (long)in.get(19 + inPos) << 17 & 33554431L | (long)in.get(20 + inPos) << 25 & 134217727L;
         out[6 + outPos] = (long)in.get(20 + inPos) >> 2 & 63L | (long)in.get(21 + inPos) << 6 & 16383L | (long)in.get(22 + inPos) << 14 & 4194303L | (long)in.get(23 + inPos) << 22 & 134217727L;
         out[7 + outPos] = (long)in.get(23 + inPos) >> 5 & 7L | (long)in.get(24 + inPos) << 3 & 2047L | (long)in.get(25 + inPos) << 11 & 524287L | (long)in.get(26 + inPos) << 19 & 134217727L;
         out[8 + outPos] = (long)in.get(27 + inPos) & 255L | (long)in.get(28 + inPos) << 8 & 65535L | (long)in.get(29 + inPos) << 16 & 16777215L | (long)in.get(30 + inPos) << 24 & 134217727L;
         out[9 + outPos] = (long)in.get(30 + inPos) >> 3 & 31L | (long)in.get(31 + inPos) << 5 & 8191L | (long)in.get(32 + inPos) << 13 & 2097151L | (long)in.get(33 + inPos) << 21 & 134217727L;
         out[10 + outPos] = (long)in.get(33 + inPos) >> 6 & 3L | (long)in.get(34 + inPos) << 2 & 1023L | (long)in.get(35 + inPos) << 10 & 262143L | (long)in.get(36 + inPos) << 18 & 67108863L | (long)in.get(37 + inPos) << 26 & 134217727L;
         out[11 + outPos] = (long)in.get(37 + inPos) >> 1 & 127L | (long)in.get(38 + inPos) << 7 & 32767L | (long)in.get(39 + inPos) << 15 & 8388607L | (long)in.get(40 + inPos) << 23 & 134217727L;
         out[12 + outPos] = (long)in.get(40 + inPos) >> 4 & 15L | (long)in.get(41 + inPos) << 4 & 4095L | (long)in.get(42 + inPos) << 12 & 1048575L | (long)in.get(43 + inPos) << 20 & 134217727L;
         out[13 + outPos] = (long)in.get(43 + inPos) >> 7 & 1L | (long)in.get(44 + inPos) << 1 & 511L | (long)in.get(45 + inPos) << 9 & 131071L | (long)in.get(46 + inPos) << 17 & 33554431L | (long)in.get(47 + inPos) << 25 & 134217727L;
         out[14 + outPos] = (long)in.get(47 + inPos) >> 2 & 63L | (long)in.get(48 + inPos) << 6 & 16383L | (long)in.get(49 + inPos) << 14 & 4194303L | (long)in.get(50 + inPos) << 22 & 134217727L;
         out[15 + outPos] = (long)in.get(50 + inPos) >> 5 & 7L | (long)in.get(51 + inPos) << 3 & 2047L | (long)in.get(52 + inPos) << 11 & 524287L | (long)in.get(53 + inPos) << 19 & 134217727L;
         out[16 + outPos] = (long)in.get(54 + inPos) & 255L | (long)in.get(55 + inPos) << 8 & 65535L | (long)in.get(56 + inPos) << 16 & 16777215L | (long)in.get(57 + inPos) << 24 & 134217727L;
         out[17 + outPos] = (long)in.get(57 + inPos) >> 3 & 31L | (long)in.get(58 + inPos) << 5 & 8191L | (long)in.get(59 + inPos) << 13 & 2097151L | (long)in.get(60 + inPos) << 21 & 134217727L;
         out[18 + outPos] = (long)in.get(60 + inPos) >> 6 & 3L | (long)in.get(61 + inPos) << 2 & 1023L | (long)in.get(62 + inPos) << 10 & 262143L | (long)in.get(63 + inPos) << 18 & 67108863L | (long)in.get(64 + inPos) << 26 & 134217727L;
         out[19 + outPos] = (long)in.get(64 + inPos) >> 1 & 127L | (long)in.get(65 + inPos) << 7 & 32767L | (long)in.get(66 + inPos) << 15 & 8388607L | (long)in.get(67 + inPos) << 23 & 134217727L;
         out[20 + outPos] = (long)in.get(67 + inPos) >> 4 & 15L | (long)in.get(68 + inPos) << 4 & 4095L | (long)in.get(69 + inPos) << 12 & 1048575L | (long)in.get(70 + inPos) << 20 & 134217727L;
         out[21 + outPos] = (long)in.get(70 + inPos) >> 7 & 1L | (long)in.get(71 + inPos) << 1 & 511L | (long)in.get(72 + inPos) << 9 & 131071L | (long)in.get(73 + inPos) << 17 & 33554431L | (long)in.get(74 + inPos) << 25 & 134217727L;
         out[22 + outPos] = (long)in.get(74 + inPos) >> 2 & 63L | (long)in.get(75 + inPos) << 6 & 16383L | (long)in.get(76 + inPos) << 14 & 4194303L | (long)in.get(77 + inPos) << 22 & 134217727L;
         out[23 + outPos] = (long)in.get(77 + inPos) >> 5 & 7L | (long)in.get(78 + inPos) << 3 & 2047L | (long)in.get(79 + inPos) << 11 & 524287L | (long)in.get(80 + inPos) << 19 & 134217727L;
         out[24 + outPos] = (long)in.get(81 + inPos) & 255L | (long)in.get(82 + inPos) << 8 & 65535L | (long)in.get(83 + inPos) << 16 & 16777215L | (long)in.get(84 + inPos) << 24 & 134217727L;
         out[25 + outPos] = (long)in.get(84 + inPos) >> 3 & 31L | (long)in.get(85 + inPos) << 5 & 8191L | (long)in.get(86 + inPos) << 13 & 2097151L | (long)in.get(87 + inPos) << 21 & 134217727L;
         out[26 + outPos] = (long)in.get(87 + inPos) >> 6 & 3L | (long)in.get(88 + inPos) << 2 & 1023L | (long)in.get(89 + inPos) << 10 & 262143L | (long)in.get(90 + inPos) << 18 & 67108863L | (long)in.get(91 + inPos) << 26 & 134217727L;
         out[27 + outPos] = (long)in.get(91 + inPos) >> 1 & 127L | (long)in.get(92 + inPos) << 7 & 32767L | (long)in.get(93 + inPos) << 15 & 8388607L | (long)in.get(94 + inPos) << 23 & 134217727L;
         out[28 + outPos] = (long)in.get(94 + inPos) >> 4 & 15L | (long)in.get(95 + inPos) << 4 & 4095L | (long)in.get(96 + inPos) << 12 & 1048575L | (long)in.get(97 + inPos) << 20 & 134217727L;
         out[29 + outPos] = (long)in.get(97 + inPos) >> 7 & 1L | (long)in.get(98 + inPos) << 1 & 511L | (long)in.get(99 + inPos) << 9 & 131071L | (long)in.get(100 + inPos) << 17 & 33554431L | (long)in.get(101 + inPos) << 25 & 134217727L;
         out[30 + outPos] = (long)in.get(101 + inPos) >> 2 & 63L | (long)in.get(102 + inPos) << 6 & 16383L | (long)in.get(103 + inPos) << 14 & 4194303L | (long)in.get(104 + inPos) << 22 & 134217727L;
         out[31 + outPos] = (long)in.get(104 + inPos) >> 5 & 7L | (long)in.get(105 + inPos) << 3 & 2047L | (long)in.get(106 + inPos) << 11 & 524287L | (long)in.get(107 + inPos) << 19 & 134217727L;
      }
   }

   private static final class Packer28 extends BytePackerForLong {
      private Packer28() {
         super(28);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 268435455L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 268435455L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 268435455L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 268435455L) >>> 24 | (in[1 + inPos] & 268435455L) << 4) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 268435455L) >>> 4 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 268435455L) >>> 12 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 268435455L) >>> 20 & 255L));
         out[7 + outPos] = (byte)((int)(in[2 + inPos] & 268435455L & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 268435455L) >>> 8 & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 268435455L) >>> 16 & 255L));
         out[10 + outPos] = (byte)((int)(((in[2 + inPos] & 268435455L) >>> 24 | (in[3 + inPos] & 268435455L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)((in[3 + inPos] & 268435455L) >>> 4 & 255L));
         out[12 + outPos] = (byte)((int)((in[3 + inPos] & 268435455L) >>> 12 & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 268435455L) >>> 20 & 255L));
         out[14 + outPos] = (byte)((int)(in[4 + inPos] & 268435455L & 255L));
         out[15 + outPos] = (byte)((int)((in[4 + inPos] & 268435455L) >>> 8 & 255L));
         out[16 + outPos] = (byte)((int)((in[4 + inPos] & 268435455L) >>> 16 & 255L));
         out[17 + outPos] = (byte)((int)(((in[4 + inPos] & 268435455L) >>> 24 | (in[5 + inPos] & 268435455L) << 4) & 255L));
         out[18 + outPos] = (byte)((int)((in[5 + inPos] & 268435455L) >>> 4 & 255L));
         out[19 + outPos] = (byte)((int)((in[5 + inPos] & 268435455L) >>> 12 & 255L));
         out[20 + outPos] = (byte)((int)((in[5 + inPos] & 268435455L) >>> 20 & 255L));
         out[21 + outPos] = (byte)((int)(in[6 + inPos] & 268435455L & 255L));
         out[22 + outPos] = (byte)((int)((in[6 + inPos] & 268435455L) >>> 8 & 255L));
         out[23 + outPos] = (byte)((int)((in[6 + inPos] & 268435455L) >>> 16 & 255L));
         out[24 + outPos] = (byte)((int)(((in[6 + inPos] & 268435455L) >>> 24 | (in[7 + inPos] & 268435455L) << 4) & 255L));
         out[25 + outPos] = (byte)((int)((in[7 + inPos] & 268435455L) >>> 4 & 255L));
         out[26 + outPos] = (byte)((int)((in[7 + inPos] & 268435455L) >>> 12 & 255L));
         out[27 + outPos] = (byte)((int)((in[7 + inPos] & 268435455L) >>> 20 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 268435455L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 268435455L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 268435455L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 268435455L) >>> 24 | (in[1 + inPos] & 268435455L) << 4) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 268435455L) >>> 4 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 268435455L) >>> 12 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 268435455L) >>> 20 & 255L));
         out[7 + outPos] = (byte)((int)(in[2 + inPos] & 268435455L & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 268435455L) >>> 8 & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 268435455L) >>> 16 & 255L));
         out[10 + outPos] = (byte)((int)(((in[2 + inPos] & 268435455L) >>> 24 | (in[3 + inPos] & 268435455L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)((in[3 + inPos] & 268435455L) >>> 4 & 255L));
         out[12 + outPos] = (byte)((int)((in[3 + inPos] & 268435455L) >>> 12 & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 268435455L) >>> 20 & 255L));
         out[14 + outPos] = (byte)((int)(in[4 + inPos] & 268435455L & 255L));
         out[15 + outPos] = (byte)((int)((in[4 + inPos] & 268435455L) >>> 8 & 255L));
         out[16 + outPos] = (byte)((int)((in[4 + inPos] & 268435455L) >>> 16 & 255L));
         out[17 + outPos] = (byte)((int)(((in[4 + inPos] & 268435455L) >>> 24 | (in[5 + inPos] & 268435455L) << 4) & 255L));
         out[18 + outPos] = (byte)((int)((in[5 + inPos] & 268435455L) >>> 4 & 255L));
         out[19 + outPos] = (byte)((int)((in[5 + inPos] & 268435455L) >>> 12 & 255L));
         out[20 + outPos] = (byte)((int)((in[5 + inPos] & 268435455L) >>> 20 & 255L));
         out[21 + outPos] = (byte)((int)(in[6 + inPos] & 268435455L & 255L));
         out[22 + outPos] = (byte)((int)((in[6 + inPos] & 268435455L) >>> 8 & 255L));
         out[23 + outPos] = (byte)((int)((in[6 + inPos] & 268435455L) >>> 16 & 255L));
         out[24 + outPos] = (byte)((int)(((in[6 + inPos] & 268435455L) >>> 24 | (in[7 + inPos] & 268435455L) << 4) & 255L));
         out[25 + outPos] = (byte)((int)((in[7 + inPos] & 268435455L) >>> 4 & 255L));
         out[26 + outPos] = (byte)((int)((in[7 + inPos] & 268435455L) >>> 12 & 255L));
         out[27 + outPos] = (byte)((int)((in[7 + inPos] & 268435455L) >>> 20 & 255L));
         out[28 + outPos] = (byte)((int)(in[8 + inPos] & 268435455L & 255L));
         out[29 + outPos] = (byte)((int)((in[8 + inPos] & 268435455L) >>> 8 & 255L));
         out[30 + outPos] = (byte)((int)((in[8 + inPos] & 268435455L) >>> 16 & 255L));
         out[31 + outPos] = (byte)((int)(((in[8 + inPos] & 268435455L) >>> 24 | (in[9 + inPos] & 268435455L) << 4) & 255L));
         out[32 + outPos] = (byte)((int)((in[9 + inPos] & 268435455L) >>> 4 & 255L));
         out[33 + outPos] = (byte)((int)((in[9 + inPos] & 268435455L) >>> 12 & 255L));
         out[34 + outPos] = (byte)((int)((in[9 + inPos] & 268435455L) >>> 20 & 255L));
         out[35 + outPos] = (byte)((int)(in[10 + inPos] & 268435455L & 255L));
         out[36 + outPos] = (byte)((int)((in[10 + inPos] & 268435455L) >>> 8 & 255L));
         out[37 + outPos] = (byte)((int)((in[10 + inPos] & 268435455L) >>> 16 & 255L));
         out[38 + outPos] = (byte)((int)(((in[10 + inPos] & 268435455L) >>> 24 | (in[11 + inPos] & 268435455L) << 4) & 255L));
         out[39 + outPos] = (byte)((int)((in[11 + inPos] & 268435455L) >>> 4 & 255L));
         out[40 + outPos] = (byte)((int)((in[11 + inPos] & 268435455L) >>> 12 & 255L));
         out[41 + outPos] = (byte)((int)((in[11 + inPos] & 268435455L) >>> 20 & 255L));
         out[42 + outPos] = (byte)((int)(in[12 + inPos] & 268435455L & 255L));
         out[43 + outPos] = (byte)((int)((in[12 + inPos] & 268435455L) >>> 8 & 255L));
         out[44 + outPos] = (byte)((int)((in[12 + inPos] & 268435455L) >>> 16 & 255L));
         out[45 + outPos] = (byte)((int)(((in[12 + inPos] & 268435455L) >>> 24 | (in[13 + inPos] & 268435455L) << 4) & 255L));
         out[46 + outPos] = (byte)((int)((in[13 + inPos] & 268435455L) >>> 4 & 255L));
         out[47 + outPos] = (byte)((int)((in[13 + inPos] & 268435455L) >>> 12 & 255L));
         out[48 + outPos] = (byte)((int)((in[13 + inPos] & 268435455L) >>> 20 & 255L));
         out[49 + outPos] = (byte)((int)(in[14 + inPos] & 268435455L & 255L));
         out[50 + outPos] = (byte)((int)((in[14 + inPos] & 268435455L) >>> 8 & 255L));
         out[51 + outPos] = (byte)((int)((in[14 + inPos] & 268435455L) >>> 16 & 255L));
         out[52 + outPos] = (byte)((int)(((in[14 + inPos] & 268435455L) >>> 24 | (in[15 + inPos] & 268435455L) << 4) & 255L));
         out[53 + outPos] = (byte)((int)((in[15 + inPos] & 268435455L) >>> 4 & 255L));
         out[54 + outPos] = (byte)((int)((in[15 + inPos] & 268435455L) >>> 12 & 255L));
         out[55 + outPos] = (byte)((int)((in[15 + inPos] & 268435455L) >>> 20 & 255L));
         out[56 + outPos] = (byte)((int)(in[16 + inPos] & 268435455L & 255L));
         out[57 + outPos] = (byte)((int)((in[16 + inPos] & 268435455L) >>> 8 & 255L));
         out[58 + outPos] = (byte)((int)((in[16 + inPos] & 268435455L) >>> 16 & 255L));
         out[59 + outPos] = (byte)((int)(((in[16 + inPos] & 268435455L) >>> 24 | (in[17 + inPos] & 268435455L) << 4) & 255L));
         out[60 + outPos] = (byte)((int)((in[17 + inPos] & 268435455L) >>> 4 & 255L));
         out[61 + outPos] = (byte)((int)((in[17 + inPos] & 268435455L) >>> 12 & 255L));
         out[62 + outPos] = (byte)((int)((in[17 + inPos] & 268435455L) >>> 20 & 255L));
         out[63 + outPos] = (byte)((int)(in[18 + inPos] & 268435455L & 255L));
         out[64 + outPos] = (byte)((int)((in[18 + inPos] & 268435455L) >>> 8 & 255L));
         out[65 + outPos] = (byte)((int)((in[18 + inPos] & 268435455L) >>> 16 & 255L));
         out[66 + outPos] = (byte)((int)(((in[18 + inPos] & 268435455L) >>> 24 | (in[19 + inPos] & 268435455L) << 4) & 255L));
         out[67 + outPos] = (byte)((int)((in[19 + inPos] & 268435455L) >>> 4 & 255L));
         out[68 + outPos] = (byte)((int)((in[19 + inPos] & 268435455L) >>> 12 & 255L));
         out[69 + outPos] = (byte)((int)((in[19 + inPos] & 268435455L) >>> 20 & 255L));
         out[70 + outPos] = (byte)((int)(in[20 + inPos] & 268435455L & 255L));
         out[71 + outPos] = (byte)((int)((in[20 + inPos] & 268435455L) >>> 8 & 255L));
         out[72 + outPos] = (byte)((int)((in[20 + inPos] & 268435455L) >>> 16 & 255L));
         out[73 + outPos] = (byte)((int)(((in[20 + inPos] & 268435455L) >>> 24 | (in[21 + inPos] & 268435455L) << 4) & 255L));
         out[74 + outPos] = (byte)((int)((in[21 + inPos] & 268435455L) >>> 4 & 255L));
         out[75 + outPos] = (byte)((int)((in[21 + inPos] & 268435455L) >>> 12 & 255L));
         out[76 + outPos] = (byte)((int)((in[21 + inPos] & 268435455L) >>> 20 & 255L));
         out[77 + outPos] = (byte)((int)(in[22 + inPos] & 268435455L & 255L));
         out[78 + outPos] = (byte)((int)((in[22 + inPos] & 268435455L) >>> 8 & 255L));
         out[79 + outPos] = (byte)((int)((in[22 + inPos] & 268435455L) >>> 16 & 255L));
         out[80 + outPos] = (byte)((int)(((in[22 + inPos] & 268435455L) >>> 24 | (in[23 + inPos] & 268435455L) << 4) & 255L));
         out[81 + outPos] = (byte)((int)((in[23 + inPos] & 268435455L) >>> 4 & 255L));
         out[82 + outPos] = (byte)((int)((in[23 + inPos] & 268435455L) >>> 12 & 255L));
         out[83 + outPos] = (byte)((int)((in[23 + inPos] & 268435455L) >>> 20 & 255L));
         out[84 + outPos] = (byte)((int)(in[24 + inPos] & 268435455L & 255L));
         out[85 + outPos] = (byte)((int)((in[24 + inPos] & 268435455L) >>> 8 & 255L));
         out[86 + outPos] = (byte)((int)((in[24 + inPos] & 268435455L) >>> 16 & 255L));
         out[87 + outPos] = (byte)((int)(((in[24 + inPos] & 268435455L) >>> 24 | (in[25 + inPos] & 268435455L) << 4) & 255L));
         out[88 + outPos] = (byte)((int)((in[25 + inPos] & 268435455L) >>> 4 & 255L));
         out[89 + outPos] = (byte)((int)((in[25 + inPos] & 268435455L) >>> 12 & 255L));
         out[90 + outPos] = (byte)((int)((in[25 + inPos] & 268435455L) >>> 20 & 255L));
         out[91 + outPos] = (byte)((int)(in[26 + inPos] & 268435455L & 255L));
         out[92 + outPos] = (byte)((int)((in[26 + inPos] & 268435455L) >>> 8 & 255L));
         out[93 + outPos] = (byte)((int)((in[26 + inPos] & 268435455L) >>> 16 & 255L));
         out[94 + outPos] = (byte)((int)(((in[26 + inPos] & 268435455L) >>> 24 | (in[27 + inPos] & 268435455L) << 4) & 255L));
         out[95 + outPos] = (byte)((int)((in[27 + inPos] & 268435455L) >>> 4 & 255L));
         out[96 + outPos] = (byte)((int)((in[27 + inPos] & 268435455L) >>> 12 & 255L));
         out[97 + outPos] = (byte)((int)((in[27 + inPos] & 268435455L) >>> 20 & 255L));
         out[98 + outPos] = (byte)((int)(in[28 + inPos] & 268435455L & 255L));
         out[99 + outPos] = (byte)((int)((in[28 + inPos] & 268435455L) >>> 8 & 255L));
         out[100 + outPos] = (byte)((int)((in[28 + inPos] & 268435455L) >>> 16 & 255L));
         out[101 + outPos] = (byte)((int)(((in[28 + inPos] & 268435455L) >>> 24 | (in[29 + inPos] & 268435455L) << 4) & 255L));
         out[102 + outPos] = (byte)((int)((in[29 + inPos] & 268435455L) >>> 4 & 255L));
         out[103 + outPos] = (byte)((int)((in[29 + inPos] & 268435455L) >>> 12 & 255L));
         out[104 + outPos] = (byte)((int)((in[29 + inPos] & 268435455L) >>> 20 & 255L));
         out[105 + outPos] = (byte)((int)(in[30 + inPos] & 268435455L & 255L));
         out[106 + outPos] = (byte)((int)((in[30 + inPos] & 268435455L) >>> 8 & 255L));
         out[107 + outPos] = (byte)((int)((in[30 + inPos] & 268435455L) >>> 16 & 255L));
         out[108 + outPos] = (byte)((int)(((in[30 + inPos] & 268435455L) >>> 24 | (in[31 + inPos] & 268435455L) << 4) & 255L));
         out[109 + outPos] = (byte)((int)((in[31 + inPos] & 268435455L) >>> 4 & 255L));
         out[110 + outPos] = (byte)((int)((in[31 + inPos] & 268435455L) >>> 12 & 255L));
         out[111 + outPos] = (byte)((int)((in[31 + inPos] & 268435455L) >>> 20 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 268435455L;
         out[1 + outPos] = (long)in[3 + inPos] >> 4 & 15L | (long)in[4 + inPos] << 4 & 4095L | (long)in[5 + inPos] << 12 & 1048575L | (long)in[6 + inPos] << 20 & 268435455L;
         out[2 + outPos] = (long)in[7 + inPos] & 255L | (long)in[8 + inPos] << 8 & 65535L | (long)in[9 + inPos] << 16 & 16777215L | (long)in[10 + inPos] << 24 & 268435455L;
         out[3 + outPos] = (long)in[10 + inPos] >> 4 & 15L | (long)in[11 + inPos] << 4 & 4095L | (long)in[12 + inPos] << 12 & 1048575L | (long)in[13 + inPos] << 20 & 268435455L;
         out[4 + outPos] = (long)in[14 + inPos] & 255L | (long)in[15 + inPos] << 8 & 65535L | (long)in[16 + inPos] << 16 & 16777215L | (long)in[17 + inPos] << 24 & 268435455L;
         out[5 + outPos] = (long)in[17 + inPos] >> 4 & 15L | (long)in[18 + inPos] << 4 & 4095L | (long)in[19 + inPos] << 12 & 1048575L | (long)in[20 + inPos] << 20 & 268435455L;
         out[6 + outPos] = (long)in[21 + inPos] & 255L | (long)in[22 + inPos] << 8 & 65535L | (long)in[23 + inPos] << 16 & 16777215L | (long)in[24 + inPos] << 24 & 268435455L;
         out[7 + outPos] = (long)in[24 + inPos] >> 4 & 15L | (long)in[25 + inPos] << 4 & 4095L | (long)in[26 + inPos] << 12 & 1048575L | (long)in[27 + inPos] << 20 & 268435455L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 268435455L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 4 & 15L | (long)in.get(4 + inPos) << 4 & 4095L | (long)in.get(5 + inPos) << 12 & 1048575L | (long)in.get(6 + inPos) << 20 & 268435455L;
         out[2 + outPos] = (long)in.get(7 + inPos) & 255L | (long)in.get(8 + inPos) << 8 & 65535L | (long)in.get(9 + inPos) << 16 & 16777215L | (long)in.get(10 + inPos) << 24 & 268435455L;
         out[3 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L | (long)in.get(11 + inPos) << 4 & 4095L | (long)in.get(12 + inPos) << 12 & 1048575L | (long)in.get(13 + inPos) << 20 & 268435455L;
         out[4 + outPos] = (long)in.get(14 + inPos) & 255L | (long)in.get(15 + inPos) << 8 & 65535L | (long)in.get(16 + inPos) << 16 & 16777215L | (long)in.get(17 + inPos) << 24 & 268435455L;
         out[5 + outPos] = (long)in.get(17 + inPos) >> 4 & 15L | (long)in.get(18 + inPos) << 4 & 4095L | (long)in.get(19 + inPos) << 12 & 1048575L | (long)in.get(20 + inPos) << 20 & 268435455L;
         out[6 + outPos] = (long)in.get(21 + inPos) & 255L | (long)in.get(22 + inPos) << 8 & 65535L | (long)in.get(23 + inPos) << 16 & 16777215L | (long)in.get(24 + inPos) << 24 & 268435455L;
         out[7 + outPos] = (long)in.get(24 + inPos) >> 4 & 15L | (long)in.get(25 + inPos) << 4 & 4095L | (long)in.get(26 + inPos) << 12 & 1048575L | (long)in.get(27 + inPos) << 20 & 268435455L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 268435455L;
         out[1 + outPos] = (long)in[3 + inPos] >> 4 & 15L | (long)in[4 + inPos] << 4 & 4095L | (long)in[5 + inPos] << 12 & 1048575L | (long)in[6 + inPos] << 20 & 268435455L;
         out[2 + outPos] = (long)in[7 + inPos] & 255L | (long)in[8 + inPos] << 8 & 65535L | (long)in[9 + inPos] << 16 & 16777215L | (long)in[10 + inPos] << 24 & 268435455L;
         out[3 + outPos] = (long)in[10 + inPos] >> 4 & 15L | (long)in[11 + inPos] << 4 & 4095L | (long)in[12 + inPos] << 12 & 1048575L | (long)in[13 + inPos] << 20 & 268435455L;
         out[4 + outPos] = (long)in[14 + inPos] & 255L | (long)in[15 + inPos] << 8 & 65535L | (long)in[16 + inPos] << 16 & 16777215L | (long)in[17 + inPos] << 24 & 268435455L;
         out[5 + outPos] = (long)in[17 + inPos] >> 4 & 15L | (long)in[18 + inPos] << 4 & 4095L | (long)in[19 + inPos] << 12 & 1048575L | (long)in[20 + inPos] << 20 & 268435455L;
         out[6 + outPos] = (long)in[21 + inPos] & 255L | (long)in[22 + inPos] << 8 & 65535L | (long)in[23 + inPos] << 16 & 16777215L | (long)in[24 + inPos] << 24 & 268435455L;
         out[7 + outPos] = (long)in[24 + inPos] >> 4 & 15L | (long)in[25 + inPos] << 4 & 4095L | (long)in[26 + inPos] << 12 & 1048575L | (long)in[27 + inPos] << 20 & 268435455L;
         out[8 + outPos] = (long)in[28 + inPos] & 255L | (long)in[29 + inPos] << 8 & 65535L | (long)in[30 + inPos] << 16 & 16777215L | (long)in[31 + inPos] << 24 & 268435455L;
         out[9 + outPos] = (long)in[31 + inPos] >> 4 & 15L | (long)in[32 + inPos] << 4 & 4095L | (long)in[33 + inPos] << 12 & 1048575L | (long)in[34 + inPos] << 20 & 268435455L;
         out[10 + outPos] = (long)in[35 + inPos] & 255L | (long)in[36 + inPos] << 8 & 65535L | (long)in[37 + inPos] << 16 & 16777215L | (long)in[38 + inPos] << 24 & 268435455L;
         out[11 + outPos] = (long)in[38 + inPos] >> 4 & 15L | (long)in[39 + inPos] << 4 & 4095L | (long)in[40 + inPos] << 12 & 1048575L | (long)in[41 + inPos] << 20 & 268435455L;
         out[12 + outPos] = (long)in[42 + inPos] & 255L | (long)in[43 + inPos] << 8 & 65535L | (long)in[44 + inPos] << 16 & 16777215L | (long)in[45 + inPos] << 24 & 268435455L;
         out[13 + outPos] = (long)in[45 + inPos] >> 4 & 15L | (long)in[46 + inPos] << 4 & 4095L | (long)in[47 + inPos] << 12 & 1048575L | (long)in[48 + inPos] << 20 & 268435455L;
         out[14 + outPos] = (long)in[49 + inPos] & 255L | (long)in[50 + inPos] << 8 & 65535L | (long)in[51 + inPos] << 16 & 16777215L | (long)in[52 + inPos] << 24 & 268435455L;
         out[15 + outPos] = (long)in[52 + inPos] >> 4 & 15L | (long)in[53 + inPos] << 4 & 4095L | (long)in[54 + inPos] << 12 & 1048575L | (long)in[55 + inPos] << 20 & 268435455L;
         out[16 + outPos] = (long)in[56 + inPos] & 255L | (long)in[57 + inPos] << 8 & 65535L | (long)in[58 + inPos] << 16 & 16777215L | (long)in[59 + inPos] << 24 & 268435455L;
         out[17 + outPos] = (long)in[59 + inPos] >> 4 & 15L | (long)in[60 + inPos] << 4 & 4095L | (long)in[61 + inPos] << 12 & 1048575L | (long)in[62 + inPos] << 20 & 268435455L;
         out[18 + outPos] = (long)in[63 + inPos] & 255L | (long)in[64 + inPos] << 8 & 65535L | (long)in[65 + inPos] << 16 & 16777215L | (long)in[66 + inPos] << 24 & 268435455L;
         out[19 + outPos] = (long)in[66 + inPos] >> 4 & 15L | (long)in[67 + inPos] << 4 & 4095L | (long)in[68 + inPos] << 12 & 1048575L | (long)in[69 + inPos] << 20 & 268435455L;
         out[20 + outPos] = (long)in[70 + inPos] & 255L | (long)in[71 + inPos] << 8 & 65535L | (long)in[72 + inPos] << 16 & 16777215L | (long)in[73 + inPos] << 24 & 268435455L;
         out[21 + outPos] = (long)in[73 + inPos] >> 4 & 15L | (long)in[74 + inPos] << 4 & 4095L | (long)in[75 + inPos] << 12 & 1048575L | (long)in[76 + inPos] << 20 & 268435455L;
         out[22 + outPos] = (long)in[77 + inPos] & 255L | (long)in[78 + inPos] << 8 & 65535L | (long)in[79 + inPos] << 16 & 16777215L | (long)in[80 + inPos] << 24 & 268435455L;
         out[23 + outPos] = (long)in[80 + inPos] >> 4 & 15L | (long)in[81 + inPos] << 4 & 4095L | (long)in[82 + inPos] << 12 & 1048575L | (long)in[83 + inPos] << 20 & 268435455L;
         out[24 + outPos] = (long)in[84 + inPos] & 255L | (long)in[85 + inPos] << 8 & 65535L | (long)in[86 + inPos] << 16 & 16777215L | (long)in[87 + inPos] << 24 & 268435455L;
         out[25 + outPos] = (long)in[87 + inPos] >> 4 & 15L | (long)in[88 + inPos] << 4 & 4095L | (long)in[89 + inPos] << 12 & 1048575L | (long)in[90 + inPos] << 20 & 268435455L;
         out[26 + outPos] = (long)in[91 + inPos] & 255L | (long)in[92 + inPos] << 8 & 65535L | (long)in[93 + inPos] << 16 & 16777215L | (long)in[94 + inPos] << 24 & 268435455L;
         out[27 + outPos] = (long)in[94 + inPos] >> 4 & 15L | (long)in[95 + inPos] << 4 & 4095L | (long)in[96 + inPos] << 12 & 1048575L | (long)in[97 + inPos] << 20 & 268435455L;
         out[28 + outPos] = (long)in[98 + inPos] & 255L | (long)in[99 + inPos] << 8 & 65535L | (long)in[100 + inPos] << 16 & 16777215L | (long)in[101 + inPos] << 24 & 268435455L;
         out[29 + outPos] = (long)in[101 + inPos] >> 4 & 15L | (long)in[102 + inPos] << 4 & 4095L | (long)in[103 + inPos] << 12 & 1048575L | (long)in[104 + inPos] << 20 & 268435455L;
         out[30 + outPos] = (long)in[105 + inPos] & 255L | (long)in[106 + inPos] << 8 & 65535L | (long)in[107 + inPos] << 16 & 16777215L | (long)in[108 + inPos] << 24 & 268435455L;
         out[31 + outPos] = (long)in[108 + inPos] >> 4 & 15L | (long)in[109 + inPos] << 4 & 4095L | (long)in[110 + inPos] << 12 & 1048575L | (long)in[111 + inPos] << 20 & 268435455L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 268435455L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 4 & 15L | (long)in.get(4 + inPos) << 4 & 4095L | (long)in.get(5 + inPos) << 12 & 1048575L | (long)in.get(6 + inPos) << 20 & 268435455L;
         out[2 + outPos] = (long)in.get(7 + inPos) & 255L | (long)in.get(8 + inPos) << 8 & 65535L | (long)in.get(9 + inPos) << 16 & 16777215L | (long)in.get(10 + inPos) << 24 & 268435455L;
         out[3 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L | (long)in.get(11 + inPos) << 4 & 4095L | (long)in.get(12 + inPos) << 12 & 1048575L | (long)in.get(13 + inPos) << 20 & 268435455L;
         out[4 + outPos] = (long)in.get(14 + inPos) & 255L | (long)in.get(15 + inPos) << 8 & 65535L | (long)in.get(16 + inPos) << 16 & 16777215L | (long)in.get(17 + inPos) << 24 & 268435455L;
         out[5 + outPos] = (long)in.get(17 + inPos) >> 4 & 15L | (long)in.get(18 + inPos) << 4 & 4095L | (long)in.get(19 + inPos) << 12 & 1048575L | (long)in.get(20 + inPos) << 20 & 268435455L;
         out[6 + outPos] = (long)in.get(21 + inPos) & 255L | (long)in.get(22 + inPos) << 8 & 65535L | (long)in.get(23 + inPos) << 16 & 16777215L | (long)in.get(24 + inPos) << 24 & 268435455L;
         out[7 + outPos] = (long)in.get(24 + inPos) >> 4 & 15L | (long)in.get(25 + inPos) << 4 & 4095L | (long)in.get(26 + inPos) << 12 & 1048575L | (long)in.get(27 + inPos) << 20 & 268435455L;
         out[8 + outPos] = (long)in.get(28 + inPos) & 255L | (long)in.get(29 + inPos) << 8 & 65535L | (long)in.get(30 + inPos) << 16 & 16777215L | (long)in.get(31 + inPos) << 24 & 268435455L;
         out[9 + outPos] = (long)in.get(31 + inPos) >> 4 & 15L | (long)in.get(32 + inPos) << 4 & 4095L | (long)in.get(33 + inPos) << 12 & 1048575L | (long)in.get(34 + inPos) << 20 & 268435455L;
         out[10 + outPos] = (long)in.get(35 + inPos) & 255L | (long)in.get(36 + inPos) << 8 & 65535L | (long)in.get(37 + inPos) << 16 & 16777215L | (long)in.get(38 + inPos) << 24 & 268435455L;
         out[11 + outPos] = (long)in.get(38 + inPos) >> 4 & 15L | (long)in.get(39 + inPos) << 4 & 4095L | (long)in.get(40 + inPos) << 12 & 1048575L | (long)in.get(41 + inPos) << 20 & 268435455L;
         out[12 + outPos] = (long)in.get(42 + inPos) & 255L | (long)in.get(43 + inPos) << 8 & 65535L | (long)in.get(44 + inPos) << 16 & 16777215L | (long)in.get(45 + inPos) << 24 & 268435455L;
         out[13 + outPos] = (long)in.get(45 + inPos) >> 4 & 15L | (long)in.get(46 + inPos) << 4 & 4095L | (long)in.get(47 + inPos) << 12 & 1048575L | (long)in.get(48 + inPos) << 20 & 268435455L;
         out[14 + outPos] = (long)in.get(49 + inPos) & 255L | (long)in.get(50 + inPos) << 8 & 65535L | (long)in.get(51 + inPos) << 16 & 16777215L | (long)in.get(52 + inPos) << 24 & 268435455L;
         out[15 + outPos] = (long)in.get(52 + inPos) >> 4 & 15L | (long)in.get(53 + inPos) << 4 & 4095L | (long)in.get(54 + inPos) << 12 & 1048575L | (long)in.get(55 + inPos) << 20 & 268435455L;
         out[16 + outPos] = (long)in.get(56 + inPos) & 255L | (long)in.get(57 + inPos) << 8 & 65535L | (long)in.get(58 + inPos) << 16 & 16777215L | (long)in.get(59 + inPos) << 24 & 268435455L;
         out[17 + outPos] = (long)in.get(59 + inPos) >> 4 & 15L | (long)in.get(60 + inPos) << 4 & 4095L | (long)in.get(61 + inPos) << 12 & 1048575L | (long)in.get(62 + inPos) << 20 & 268435455L;
         out[18 + outPos] = (long)in.get(63 + inPos) & 255L | (long)in.get(64 + inPos) << 8 & 65535L | (long)in.get(65 + inPos) << 16 & 16777215L | (long)in.get(66 + inPos) << 24 & 268435455L;
         out[19 + outPos] = (long)in.get(66 + inPos) >> 4 & 15L | (long)in.get(67 + inPos) << 4 & 4095L | (long)in.get(68 + inPos) << 12 & 1048575L | (long)in.get(69 + inPos) << 20 & 268435455L;
         out[20 + outPos] = (long)in.get(70 + inPos) & 255L | (long)in.get(71 + inPos) << 8 & 65535L | (long)in.get(72 + inPos) << 16 & 16777215L | (long)in.get(73 + inPos) << 24 & 268435455L;
         out[21 + outPos] = (long)in.get(73 + inPos) >> 4 & 15L | (long)in.get(74 + inPos) << 4 & 4095L | (long)in.get(75 + inPos) << 12 & 1048575L | (long)in.get(76 + inPos) << 20 & 268435455L;
         out[22 + outPos] = (long)in.get(77 + inPos) & 255L | (long)in.get(78 + inPos) << 8 & 65535L | (long)in.get(79 + inPos) << 16 & 16777215L | (long)in.get(80 + inPos) << 24 & 268435455L;
         out[23 + outPos] = (long)in.get(80 + inPos) >> 4 & 15L | (long)in.get(81 + inPos) << 4 & 4095L | (long)in.get(82 + inPos) << 12 & 1048575L | (long)in.get(83 + inPos) << 20 & 268435455L;
         out[24 + outPos] = (long)in.get(84 + inPos) & 255L | (long)in.get(85 + inPos) << 8 & 65535L | (long)in.get(86 + inPos) << 16 & 16777215L | (long)in.get(87 + inPos) << 24 & 268435455L;
         out[25 + outPos] = (long)in.get(87 + inPos) >> 4 & 15L | (long)in.get(88 + inPos) << 4 & 4095L | (long)in.get(89 + inPos) << 12 & 1048575L | (long)in.get(90 + inPos) << 20 & 268435455L;
         out[26 + outPos] = (long)in.get(91 + inPos) & 255L | (long)in.get(92 + inPos) << 8 & 65535L | (long)in.get(93 + inPos) << 16 & 16777215L | (long)in.get(94 + inPos) << 24 & 268435455L;
         out[27 + outPos] = (long)in.get(94 + inPos) >> 4 & 15L | (long)in.get(95 + inPos) << 4 & 4095L | (long)in.get(96 + inPos) << 12 & 1048575L | (long)in.get(97 + inPos) << 20 & 268435455L;
         out[28 + outPos] = (long)in.get(98 + inPos) & 255L | (long)in.get(99 + inPos) << 8 & 65535L | (long)in.get(100 + inPos) << 16 & 16777215L | (long)in.get(101 + inPos) << 24 & 268435455L;
         out[29 + outPos] = (long)in.get(101 + inPos) >> 4 & 15L | (long)in.get(102 + inPos) << 4 & 4095L | (long)in.get(103 + inPos) << 12 & 1048575L | (long)in.get(104 + inPos) << 20 & 268435455L;
         out[30 + outPos] = (long)in.get(105 + inPos) & 255L | (long)in.get(106 + inPos) << 8 & 65535L | (long)in.get(107 + inPos) << 16 & 16777215L | (long)in.get(108 + inPos) << 24 & 268435455L;
         out[31 + outPos] = (long)in.get(108 + inPos) >> 4 & 15L | (long)in.get(109 + inPos) << 4 & 4095L | (long)in.get(110 + inPos) << 12 & 1048575L | (long)in.get(111 + inPos) << 20 & 268435455L;
      }
   }

   private static final class Packer29 extends BytePackerForLong {
      private Packer29() {
         super(29);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 536870911L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 536870911L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 536870911L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 536870911L) >>> 24 | (in[1 + inPos] & 536870911L) << 5) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 536870911L) >>> 3 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 536870911L) >>> 11 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 536870911L) >>> 19 & 255L));
         out[7 + outPos] = (byte)((int)(((in[1 + inPos] & 536870911L) >>> 27 | (in[2 + inPos] & 536870911L) << 2) & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 536870911L) >>> 6 & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 536870911L) >>> 14 & 255L));
         out[10 + outPos] = (byte)((int)(((in[2 + inPos] & 536870911L) >>> 22 | (in[3 + inPos] & 536870911L) << 7) & 255L));
         out[11 + outPos] = (byte)((int)((in[3 + inPos] & 536870911L) >>> 1 & 255L));
         out[12 + outPos] = (byte)((int)((in[3 + inPos] & 536870911L) >>> 9 & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 536870911L) >>> 17 & 255L));
         out[14 + outPos] = (byte)((int)(((in[3 + inPos] & 536870911L) >>> 25 | (in[4 + inPos] & 536870911L) << 4) & 255L));
         out[15 + outPos] = (byte)((int)((in[4 + inPos] & 536870911L) >>> 4 & 255L));
         out[16 + outPos] = (byte)((int)((in[4 + inPos] & 536870911L) >>> 12 & 255L));
         out[17 + outPos] = (byte)((int)((in[4 + inPos] & 536870911L) >>> 20 & 255L));
         out[18 + outPos] = (byte)((int)(((in[4 + inPos] & 536870911L) >>> 28 | (in[5 + inPos] & 536870911L) << 1) & 255L));
         out[19 + outPos] = (byte)((int)((in[5 + inPos] & 536870911L) >>> 7 & 255L));
         out[20 + outPos] = (byte)((int)((in[5 + inPos] & 536870911L) >>> 15 & 255L));
         out[21 + outPos] = (byte)((int)(((in[5 + inPos] & 536870911L) >>> 23 | (in[6 + inPos] & 536870911L) << 6) & 255L));
         out[22 + outPos] = (byte)((int)((in[6 + inPos] & 536870911L) >>> 2 & 255L));
         out[23 + outPos] = (byte)((int)((in[6 + inPos] & 536870911L) >>> 10 & 255L));
         out[24 + outPos] = (byte)((int)((in[6 + inPos] & 536870911L) >>> 18 & 255L));
         out[25 + outPos] = (byte)((int)(((in[6 + inPos] & 536870911L) >>> 26 | (in[7 + inPos] & 536870911L) << 3) & 255L));
         out[26 + outPos] = (byte)((int)((in[7 + inPos] & 536870911L) >>> 5 & 255L));
         out[27 + outPos] = (byte)((int)((in[7 + inPos] & 536870911L) >>> 13 & 255L));
         out[28 + outPos] = (byte)((int)((in[7 + inPos] & 536870911L) >>> 21 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 536870911L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 536870911L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 536870911L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 536870911L) >>> 24 | (in[1 + inPos] & 536870911L) << 5) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 536870911L) >>> 3 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 536870911L) >>> 11 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 536870911L) >>> 19 & 255L));
         out[7 + outPos] = (byte)((int)(((in[1 + inPos] & 536870911L) >>> 27 | (in[2 + inPos] & 536870911L) << 2) & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 536870911L) >>> 6 & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 536870911L) >>> 14 & 255L));
         out[10 + outPos] = (byte)((int)(((in[2 + inPos] & 536870911L) >>> 22 | (in[3 + inPos] & 536870911L) << 7) & 255L));
         out[11 + outPos] = (byte)((int)((in[3 + inPos] & 536870911L) >>> 1 & 255L));
         out[12 + outPos] = (byte)((int)((in[3 + inPos] & 536870911L) >>> 9 & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 536870911L) >>> 17 & 255L));
         out[14 + outPos] = (byte)((int)(((in[3 + inPos] & 536870911L) >>> 25 | (in[4 + inPos] & 536870911L) << 4) & 255L));
         out[15 + outPos] = (byte)((int)((in[4 + inPos] & 536870911L) >>> 4 & 255L));
         out[16 + outPos] = (byte)((int)((in[4 + inPos] & 536870911L) >>> 12 & 255L));
         out[17 + outPos] = (byte)((int)((in[4 + inPos] & 536870911L) >>> 20 & 255L));
         out[18 + outPos] = (byte)((int)(((in[4 + inPos] & 536870911L) >>> 28 | (in[5 + inPos] & 536870911L) << 1) & 255L));
         out[19 + outPos] = (byte)((int)((in[5 + inPos] & 536870911L) >>> 7 & 255L));
         out[20 + outPos] = (byte)((int)((in[5 + inPos] & 536870911L) >>> 15 & 255L));
         out[21 + outPos] = (byte)((int)(((in[5 + inPos] & 536870911L) >>> 23 | (in[6 + inPos] & 536870911L) << 6) & 255L));
         out[22 + outPos] = (byte)((int)((in[6 + inPos] & 536870911L) >>> 2 & 255L));
         out[23 + outPos] = (byte)((int)((in[6 + inPos] & 536870911L) >>> 10 & 255L));
         out[24 + outPos] = (byte)((int)((in[6 + inPos] & 536870911L) >>> 18 & 255L));
         out[25 + outPos] = (byte)((int)(((in[6 + inPos] & 536870911L) >>> 26 | (in[7 + inPos] & 536870911L) << 3) & 255L));
         out[26 + outPos] = (byte)((int)((in[7 + inPos] & 536870911L) >>> 5 & 255L));
         out[27 + outPos] = (byte)((int)((in[7 + inPos] & 536870911L) >>> 13 & 255L));
         out[28 + outPos] = (byte)((int)((in[7 + inPos] & 536870911L) >>> 21 & 255L));
         out[29 + outPos] = (byte)((int)(in[8 + inPos] & 536870911L & 255L));
         out[30 + outPos] = (byte)((int)((in[8 + inPos] & 536870911L) >>> 8 & 255L));
         out[31 + outPos] = (byte)((int)((in[8 + inPos] & 536870911L) >>> 16 & 255L));
         out[32 + outPos] = (byte)((int)(((in[8 + inPos] & 536870911L) >>> 24 | (in[9 + inPos] & 536870911L) << 5) & 255L));
         out[33 + outPos] = (byte)((int)((in[9 + inPos] & 536870911L) >>> 3 & 255L));
         out[34 + outPos] = (byte)((int)((in[9 + inPos] & 536870911L) >>> 11 & 255L));
         out[35 + outPos] = (byte)((int)((in[9 + inPos] & 536870911L) >>> 19 & 255L));
         out[36 + outPos] = (byte)((int)(((in[9 + inPos] & 536870911L) >>> 27 | (in[10 + inPos] & 536870911L) << 2) & 255L));
         out[37 + outPos] = (byte)((int)((in[10 + inPos] & 536870911L) >>> 6 & 255L));
         out[38 + outPos] = (byte)((int)((in[10 + inPos] & 536870911L) >>> 14 & 255L));
         out[39 + outPos] = (byte)((int)(((in[10 + inPos] & 536870911L) >>> 22 | (in[11 + inPos] & 536870911L) << 7) & 255L));
         out[40 + outPos] = (byte)((int)((in[11 + inPos] & 536870911L) >>> 1 & 255L));
         out[41 + outPos] = (byte)((int)((in[11 + inPos] & 536870911L) >>> 9 & 255L));
         out[42 + outPos] = (byte)((int)((in[11 + inPos] & 536870911L) >>> 17 & 255L));
         out[43 + outPos] = (byte)((int)(((in[11 + inPos] & 536870911L) >>> 25 | (in[12 + inPos] & 536870911L) << 4) & 255L));
         out[44 + outPos] = (byte)((int)((in[12 + inPos] & 536870911L) >>> 4 & 255L));
         out[45 + outPos] = (byte)((int)((in[12 + inPos] & 536870911L) >>> 12 & 255L));
         out[46 + outPos] = (byte)((int)((in[12 + inPos] & 536870911L) >>> 20 & 255L));
         out[47 + outPos] = (byte)((int)(((in[12 + inPos] & 536870911L) >>> 28 | (in[13 + inPos] & 536870911L) << 1) & 255L));
         out[48 + outPos] = (byte)((int)((in[13 + inPos] & 536870911L) >>> 7 & 255L));
         out[49 + outPos] = (byte)((int)((in[13 + inPos] & 536870911L) >>> 15 & 255L));
         out[50 + outPos] = (byte)((int)(((in[13 + inPos] & 536870911L) >>> 23 | (in[14 + inPos] & 536870911L) << 6) & 255L));
         out[51 + outPos] = (byte)((int)((in[14 + inPos] & 536870911L) >>> 2 & 255L));
         out[52 + outPos] = (byte)((int)((in[14 + inPos] & 536870911L) >>> 10 & 255L));
         out[53 + outPos] = (byte)((int)((in[14 + inPos] & 536870911L) >>> 18 & 255L));
         out[54 + outPos] = (byte)((int)(((in[14 + inPos] & 536870911L) >>> 26 | (in[15 + inPos] & 536870911L) << 3) & 255L));
         out[55 + outPos] = (byte)((int)((in[15 + inPos] & 536870911L) >>> 5 & 255L));
         out[56 + outPos] = (byte)((int)((in[15 + inPos] & 536870911L) >>> 13 & 255L));
         out[57 + outPos] = (byte)((int)((in[15 + inPos] & 536870911L) >>> 21 & 255L));
         out[58 + outPos] = (byte)((int)(in[16 + inPos] & 536870911L & 255L));
         out[59 + outPos] = (byte)((int)((in[16 + inPos] & 536870911L) >>> 8 & 255L));
         out[60 + outPos] = (byte)((int)((in[16 + inPos] & 536870911L) >>> 16 & 255L));
         out[61 + outPos] = (byte)((int)(((in[16 + inPos] & 536870911L) >>> 24 | (in[17 + inPos] & 536870911L) << 5) & 255L));
         out[62 + outPos] = (byte)((int)((in[17 + inPos] & 536870911L) >>> 3 & 255L));
         out[63 + outPos] = (byte)((int)((in[17 + inPos] & 536870911L) >>> 11 & 255L));
         out[64 + outPos] = (byte)((int)((in[17 + inPos] & 536870911L) >>> 19 & 255L));
         out[65 + outPos] = (byte)((int)(((in[17 + inPos] & 536870911L) >>> 27 | (in[18 + inPos] & 536870911L) << 2) & 255L));
         out[66 + outPos] = (byte)((int)((in[18 + inPos] & 536870911L) >>> 6 & 255L));
         out[67 + outPos] = (byte)((int)((in[18 + inPos] & 536870911L) >>> 14 & 255L));
         out[68 + outPos] = (byte)((int)(((in[18 + inPos] & 536870911L) >>> 22 | (in[19 + inPos] & 536870911L) << 7) & 255L));
         out[69 + outPos] = (byte)((int)((in[19 + inPos] & 536870911L) >>> 1 & 255L));
         out[70 + outPos] = (byte)((int)((in[19 + inPos] & 536870911L) >>> 9 & 255L));
         out[71 + outPos] = (byte)((int)((in[19 + inPos] & 536870911L) >>> 17 & 255L));
         out[72 + outPos] = (byte)((int)(((in[19 + inPos] & 536870911L) >>> 25 | (in[20 + inPos] & 536870911L) << 4) & 255L));
         out[73 + outPos] = (byte)((int)((in[20 + inPos] & 536870911L) >>> 4 & 255L));
         out[74 + outPos] = (byte)((int)((in[20 + inPos] & 536870911L) >>> 12 & 255L));
         out[75 + outPos] = (byte)((int)((in[20 + inPos] & 536870911L) >>> 20 & 255L));
         out[76 + outPos] = (byte)((int)(((in[20 + inPos] & 536870911L) >>> 28 | (in[21 + inPos] & 536870911L) << 1) & 255L));
         out[77 + outPos] = (byte)((int)((in[21 + inPos] & 536870911L) >>> 7 & 255L));
         out[78 + outPos] = (byte)((int)((in[21 + inPos] & 536870911L) >>> 15 & 255L));
         out[79 + outPos] = (byte)((int)(((in[21 + inPos] & 536870911L) >>> 23 | (in[22 + inPos] & 536870911L) << 6) & 255L));
         out[80 + outPos] = (byte)((int)((in[22 + inPos] & 536870911L) >>> 2 & 255L));
         out[81 + outPos] = (byte)((int)((in[22 + inPos] & 536870911L) >>> 10 & 255L));
         out[82 + outPos] = (byte)((int)((in[22 + inPos] & 536870911L) >>> 18 & 255L));
         out[83 + outPos] = (byte)((int)(((in[22 + inPos] & 536870911L) >>> 26 | (in[23 + inPos] & 536870911L) << 3) & 255L));
         out[84 + outPos] = (byte)((int)((in[23 + inPos] & 536870911L) >>> 5 & 255L));
         out[85 + outPos] = (byte)((int)((in[23 + inPos] & 536870911L) >>> 13 & 255L));
         out[86 + outPos] = (byte)((int)((in[23 + inPos] & 536870911L) >>> 21 & 255L));
         out[87 + outPos] = (byte)((int)(in[24 + inPos] & 536870911L & 255L));
         out[88 + outPos] = (byte)((int)((in[24 + inPos] & 536870911L) >>> 8 & 255L));
         out[89 + outPos] = (byte)((int)((in[24 + inPos] & 536870911L) >>> 16 & 255L));
         out[90 + outPos] = (byte)((int)(((in[24 + inPos] & 536870911L) >>> 24 | (in[25 + inPos] & 536870911L) << 5) & 255L));
         out[91 + outPos] = (byte)((int)((in[25 + inPos] & 536870911L) >>> 3 & 255L));
         out[92 + outPos] = (byte)((int)((in[25 + inPos] & 536870911L) >>> 11 & 255L));
         out[93 + outPos] = (byte)((int)((in[25 + inPos] & 536870911L) >>> 19 & 255L));
         out[94 + outPos] = (byte)((int)(((in[25 + inPos] & 536870911L) >>> 27 | (in[26 + inPos] & 536870911L) << 2) & 255L));
         out[95 + outPos] = (byte)((int)((in[26 + inPos] & 536870911L) >>> 6 & 255L));
         out[96 + outPos] = (byte)((int)((in[26 + inPos] & 536870911L) >>> 14 & 255L));
         out[97 + outPos] = (byte)((int)(((in[26 + inPos] & 536870911L) >>> 22 | (in[27 + inPos] & 536870911L) << 7) & 255L));
         out[98 + outPos] = (byte)((int)((in[27 + inPos] & 536870911L) >>> 1 & 255L));
         out[99 + outPos] = (byte)((int)((in[27 + inPos] & 536870911L) >>> 9 & 255L));
         out[100 + outPos] = (byte)((int)((in[27 + inPos] & 536870911L) >>> 17 & 255L));
         out[101 + outPos] = (byte)((int)(((in[27 + inPos] & 536870911L) >>> 25 | (in[28 + inPos] & 536870911L) << 4) & 255L));
         out[102 + outPos] = (byte)((int)((in[28 + inPos] & 536870911L) >>> 4 & 255L));
         out[103 + outPos] = (byte)((int)((in[28 + inPos] & 536870911L) >>> 12 & 255L));
         out[104 + outPos] = (byte)((int)((in[28 + inPos] & 536870911L) >>> 20 & 255L));
         out[105 + outPos] = (byte)((int)(((in[28 + inPos] & 536870911L) >>> 28 | (in[29 + inPos] & 536870911L) << 1) & 255L));
         out[106 + outPos] = (byte)((int)((in[29 + inPos] & 536870911L) >>> 7 & 255L));
         out[107 + outPos] = (byte)((int)((in[29 + inPos] & 536870911L) >>> 15 & 255L));
         out[108 + outPos] = (byte)((int)(((in[29 + inPos] & 536870911L) >>> 23 | (in[30 + inPos] & 536870911L) << 6) & 255L));
         out[109 + outPos] = (byte)((int)((in[30 + inPos] & 536870911L) >>> 2 & 255L));
         out[110 + outPos] = (byte)((int)((in[30 + inPos] & 536870911L) >>> 10 & 255L));
         out[111 + outPos] = (byte)((int)((in[30 + inPos] & 536870911L) >>> 18 & 255L));
         out[112 + outPos] = (byte)((int)(((in[30 + inPos] & 536870911L) >>> 26 | (in[31 + inPos] & 536870911L) << 3) & 255L));
         out[113 + outPos] = (byte)((int)((in[31 + inPos] & 536870911L) >>> 5 & 255L));
         out[114 + outPos] = (byte)((int)((in[31 + inPos] & 536870911L) >>> 13 & 255L));
         out[115 + outPos] = (byte)((int)((in[31 + inPos] & 536870911L) >>> 21 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 536870911L;
         out[1 + outPos] = (long)in[3 + inPos] >> 5 & 7L | (long)in[4 + inPos] << 3 & 2047L | (long)in[5 + inPos] << 11 & 524287L | (long)in[6 + inPos] << 19 & 134217727L | (long)in[7 + inPos] << 27 & 536870911L;
         out[2 + outPos] = (long)in[7 + inPos] >> 2 & 63L | (long)in[8 + inPos] << 6 & 16383L | (long)in[9 + inPos] << 14 & 4194303L | (long)in[10 + inPos] << 22 & 536870911L;
         out[3 + outPos] = (long)in[10 + inPos] >> 7 & 1L | (long)in[11 + inPos] << 1 & 511L | (long)in[12 + inPos] << 9 & 131071L | (long)in[13 + inPos] << 17 & 33554431L | (long)in[14 + inPos] << 25 & 536870911L;
         out[4 + outPos] = (long)in[14 + inPos] >> 4 & 15L | (long)in[15 + inPos] << 4 & 4095L | (long)in[16 + inPos] << 12 & 1048575L | (long)in[17 + inPos] << 20 & 268435455L | (long)in[18 + inPos] << 28 & 536870911L;
         out[5 + outPos] = (long)in[18 + inPos] >> 1 & 127L | (long)in[19 + inPos] << 7 & 32767L | (long)in[20 + inPos] << 15 & 8388607L | (long)in[21 + inPos] << 23 & 536870911L;
         out[6 + outPos] = (long)in[21 + inPos] >> 6 & 3L | (long)in[22 + inPos] << 2 & 1023L | (long)in[23 + inPos] << 10 & 262143L | (long)in[24 + inPos] << 18 & 67108863L | (long)in[25 + inPos] << 26 & 536870911L;
         out[7 + outPos] = (long)in[25 + inPos] >> 3 & 31L | (long)in[26 + inPos] << 5 & 8191L | (long)in[27 + inPos] << 13 & 2097151L | (long)in[28 + inPos] << 21 & 536870911L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 536870911L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 5 & 7L | (long)in.get(4 + inPos) << 3 & 2047L | (long)in.get(5 + inPos) << 11 & 524287L | (long)in.get(6 + inPos) << 19 & 134217727L | (long)in.get(7 + inPos) << 27 & 536870911L;
         out[2 + outPos] = (long)in.get(7 + inPos) >> 2 & 63L | (long)in.get(8 + inPos) << 6 & 16383L | (long)in.get(9 + inPos) << 14 & 4194303L | (long)in.get(10 + inPos) << 22 & 536870911L;
         out[3 + outPos] = (long)in.get(10 + inPos) >> 7 & 1L | (long)in.get(11 + inPos) << 1 & 511L | (long)in.get(12 + inPos) << 9 & 131071L | (long)in.get(13 + inPos) << 17 & 33554431L | (long)in.get(14 + inPos) << 25 & 536870911L;
         out[4 + outPos] = (long)in.get(14 + inPos) >> 4 & 15L | (long)in.get(15 + inPos) << 4 & 4095L | (long)in.get(16 + inPos) << 12 & 1048575L | (long)in.get(17 + inPos) << 20 & 268435455L | (long)in.get(18 + inPos) << 28 & 536870911L;
         out[5 + outPos] = (long)in.get(18 + inPos) >> 1 & 127L | (long)in.get(19 + inPos) << 7 & 32767L | (long)in.get(20 + inPos) << 15 & 8388607L | (long)in.get(21 + inPos) << 23 & 536870911L;
         out[6 + outPos] = (long)in.get(21 + inPos) >> 6 & 3L | (long)in.get(22 + inPos) << 2 & 1023L | (long)in.get(23 + inPos) << 10 & 262143L | (long)in.get(24 + inPos) << 18 & 67108863L | (long)in.get(25 + inPos) << 26 & 536870911L;
         out[7 + outPos] = (long)in.get(25 + inPos) >> 3 & 31L | (long)in.get(26 + inPos) << 5 & 8191L | (long)in.get(27 + inPos) << 13 & 2097151L | (long)in.get(28 + inPos) << 21 & 536870911L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 536870911L;
         out[1 + outPos] = (long)in[3 + inPos] >> 5 & 7L | (long)in[4 + inPos] << 3 & 2047L | (long)in[5 + inPos] << 11 & 524287L | (long)in[6 + inPos] << 19 & 134217727L | (long)in[7 + inPos] << 27 & 536870911L;
         out[2 + outPos] = (long)in[7 + inPos] >> 2 & 63L | (long)in[8 + inPos] << 6 & 16383L | (long)in[9 + inPos] << 14 & 4194303L | (long)in[10 + inPos] << 22 & 536870911L;
         out[3 + outPos] = (long)in[10 + inPos] >> 7 & 1L | (long)in[11 + inPos] << 1 & 511L | (long)in[12 + inPos] << 9 & 131071L | (long)in[13 + inPos] << 17 & 33554431L | (long)in[14 + inPos] << 25 & 536870911L;
         out[4 + outPos] = (long)in[14 + inPos] >> 4 & 15L | (long)in[15 + inPos] << 4 & 4095L | (long)in[16 + inPos] << 12 & 1048575L | (long)in[17 + inPos] << 20 & 268435455L | (long)in[18 + inPos] << 28 & 536870911L;
         out[5 + outPos] = (long)in[18 + inPos] >> 1 & 127L | (long)in[19 + inPos] << 7 & 32767L | (long)in[20 + inPos] << 15 & 8388607L | (long)in[21 + inPos] << 23 & 536870911L;
         out[6 + outPos] = (long)in[21 + inPos] >> 6 & 3L | (long)in[22 + inPos] << 2 & 1023L | (long)in[23 + inPos] << 10 & 262143L | (long)in[24 + inPos] << 18 & 67108863L | (long)in[25 + inPos] << 26 & 536870911L;
         out[7 + outPos] = (long)in[25 + inPos] >> 3 & 31L | (long)in[26 + inPos] << 5 & 8191L | (long)in[27 + inPos] << 13 & 2097151L | (long)in[28 + inPos] << 21 & 536870911L;
         out[8 + outPos] = (long)in[29 + inPos] & 255L | (long)in[30 + inPos] << 8 & 65535L | (long)in[31 + inPos] << 16 & 16777215L | (long)in[32 + inPos] << 24 & 536870911L;
         out[9 + outPos] = (long)in[32 + inPos] >> 5 & 7L | (long)in[33 + inPos] << 3 & 2047L | (long)in[34 + inPos] << 11 & 524287L | (long)in[35 + inPos] << 19 & 134217727L | (long)in[36 + inPos] << 27 & 536870911L;
         out[10 + outPos] = (long)in[36 + inPos] >> 2 & 63L | (long)in[37 + inPos] << 6 & 16383L | (long)in[38 + inPos] << 14 & 4194303L | (long)in[39 + inPos] << 22 & 536870911L;
         out[11 + outPos] = (long)in[39 + inPos] >> 7 & 1L | (long)in[40 + inPos] << 1 & 511L | (long)in[41 + inPos] << 9 & 131071L | (long)in[42 + inPos] << 17 & 33554431L | (long)in[43 + inPos] << 25 & 536870911L;
         out[12 + outPos] = (long)in[43 + inPos] >> 4 & 15L | (long)in[44 + inPos] << 4 & 4095L | (long)in[45 + inPos] << 12 & 1048575L | (long)in[46 + inPos] << 20 & 268435455L | (long)in[47 + inPos] << 28 & 536870911L;
         out[13 + outPos] = (long)in[47 + inPos] >> 1 & 127L | (long)in[48 + inPos] << 7 & 32767L | (long)in[49 + inPos] << 15 & 8388607L | (long)in[50 + inPos] << 23 & 536870911L;
         out[14 + outPos] = (long)in[50 + inPos] >> 6 & 3L | (long)in[51 + inPos] << 2 & 1023L | (long)in[52 + inPos] << 10 & 262143L | (long)in[53 + inPos] << 18 & 67108863L | (long)in[54 + inPos] << 26 & 536870911L;
         out[15 + outPos] = (long)in[54 + inPos] >> 3 & 31L | (long)in[55 + inPos] << 5 & 8191L | (long)in[56 + inPos] << 13 & 2097151L | (long)in[57 + inPos] << 21 & 536870911L;
         out[16 + outPos] = (long)in[58 + inPos] & 255L | (long)in[59 + inPos] << 8 & 65535L | (long)in[60 + inPos] << 16 & 16777215L | (long)in[61 + inPos] << 24 & 536870911L;
         out[17 + outPos] = (long)in[61 + inPos] >> 5 & 7L | (long)in[62 + inPos] << 3 & 2047L | (long)in[63 + inPos] << 11 & 524287L | (long)in[64 + inPos] << 19 & 134217727L | (long)in[65 + inPos] << 27 & 536870911L;
         out[18 + outPos] = (long)in[65 + inPos] >> 2 & 63L | (long)in[66 + inPos] << 6 & 16383L | (long)in[67 + inPos] << 14 & 4194303L | (long)in[68 + inPos] << 22 & 536870911L;
         out[19 + outPos] = (long)in[68 + inPos] >> 7 & 1L | (long)in[69 + inPos] << 1 & 511L | (long)in[70 + inPos] << 9 & 131071L | (long)in[71 + inPos] << 17 & 33554431L | (long)in[72 + inPos] << 25 & 536870911L;
         out[20 + outPos] = (long)in[72 + inPos] >> 4 & 15L | (long)in[73 + inPos] << 4 & 4095L | (long)in[74 + inPos] << 12 & 1048575L | (long)in[75 + inPos] << 20 & 268435455L | (long)in[76 + inPos] << 28 & 536870911L;
         out[21 + outPos] = (long)in[76 + inPos] >> 1 & 127L | (long)in[77 + inPos] << 7 & 32767L | (long)in[78 + inPos] << 15 & 8388607L | (long)in[79 + inPos] << 23 & 536870911L;
         out[22 + outPos] = (long)in[79 + inPos] >> 6 & 3L | (long)in[80 + inPos] << 2 & 1023L | (long)in[81 + inPos] << 10 & 262143L | (long)in[82 + inPos] << 18 & 67108863L | (long)in[83 + inPos] << 26 & 536870911L;
         out[23 + outPos] = (long)in[83 + inPos] >> 3 & 31L | (long)in[84 + inPos] << 5 & 8191L | (long)in[85 + inPos] << 13 & 2097151L | (long)in[86 + inPos] << 21 & 536870911L;
         out[24 + outPos] = (long)in[87 + inPos] & 255L | (long)in[88 + inPos] << 8 & 65535L | (long)in[89 + inPos] << 16 & 16777215L | (long)in[90 + inPos] << 24 & 536870911L;
         out[25 + outPos] = (long)in[90 + inPos] >> 5 & 7L | (long)in[91 + inPos] << 3 & 2047L | (long)in[92 + inPos] << 11 & 524287L | (long)in[93 + inPos] << 19 & 134217727L | (long)in[94 + inPos] << 27 & 536870911L;
         out[26 + outPos] = (long)in[94 + inPos] >> 2 & 63L | (long)in[95 + inPos] << 6 & 16383L | (long)in[96 + inPos] << 14 & 4194303L | (long)in[97 + inPos] << 22 & 536870911L;
         out[27 + outPos] = (long)in[97 + inPos] >> 7 & 1L | (long)in[98 + inPos] << 1 & 511L | (long)in[99 + inPos] << 9 & 131071L | (long)in[100 + inPos] << 17 & 33554431L | (long)in[101 + inPos] << 25 & 536870911L;
         out[28 + outPos] = (long)in[101 + inPos] >> 4 & 15L | (long)in[102 + inPos] << 4 & 4095L | (long)in[103 + inPos] << 12 & 1048575L | (long)in[104 + inPos] << 20 & 268435455L | (long)in[105 + inPos] << 28 & 536870911L;
         out[29 + outPos] = (long)in[105 + inPos] >> 1 & 127L | (long)in[106 + inPos] << 7 & 32767L | (long)in[107 + inPos] << 15 & 8388607L | (long)in[108 + inPos] << 23 & 536870911L;
         out[30 + outPos] = (long)in[108 + inPos] >> 6 & 3L | (long)in[109 + inPos] << 2 & 1023L | (long)in[110 + inPos] << 10 & 262143L | (long)in[111 + inPos] << 18 & 67108863L | (long)in[112 + inPos] << 26 & 536870911L;
         out[31 + outPos] = (long)in[112 + inPos] >> 3 & 31L | (long)in[113 + inPos] << 5 & 8191L | (long)in[114 + inPos] << 13 & 2097151L | (long)in[115 + inPos] << 21 & 536870911L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 536870911L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 5 & 7L | (long)in.get(4 + inPos) << 3 & 2047L | (long)in.get(5 + inPos) << 11 & 524287L | (long)in.get(6 + inPos) << 19 & 134217727L | (long)in.get(7 + inPos) << 27 & 536870911L;
         out[2 + outPos] = (long)in.get(7 + inPos) >> 2 & 63L | (long)in.get(8 + inPos) << 6 & 16383L | (long)in.get(9 + inPos) << 14 & 4194303L | (long)in.get(10 + inPos) << 22 & 536870911L;
         out[3 + outPos] = (long)in.get(10 + inPos) >> 7 & 1L | (long)in.get(11 + inPos) << 1 & 511L | (long)in.get(12 + inPos) << 9 & 131071L | (long)in.get(13 + inPos) << 17 & 33554431L | (long)in.get(14 + inPos) << 25 & 536870911L;
         out[4 + outPos] = (long)in.get(14 + inPos) >> 4 & 15L | (long)in.get(15 + inPos) << 4 & 4095L | (long)in.get(16 + inPos) << 12 & 1048575L | (long)in.get(17 + inPos) << 20 & 268435455L | (long)in.get(18 + inPos) << 28 & 536870911L;
         out[5 + outPos] = (long)in.get(18 + inPos) >> 1 & 127L | (long)in.get(19 + inPos) << 7 & 32767L | (long)in.get(20 + inPos) << 15 & 8388607L | (long)in.get(21 + inPos) << 23 & 536870911L;
         out[6 + outPos] = (long)in.get(21 + inPos) >> 6 & 3L | (long)in.get(22 + inPos) << 2 & 1023L | (long)in.get(23 + inPos) << 10 & 262143L | (long)in.get(24 + inPos) << 18 & 67108863L | (long)in.get(25 + inPos) << 26 & 536870911L;
         out[7 + outPos] = (long)in.get(25 + inPos) >> 3 & 31L | (long)in.get(26 + inPos) << 5 & 8191L | (long)in.get(27 + inPos) << 13 & 2097151L | (long)in.get(28 + inPos) << 21 & 536870911L;
         out[8 + outPos] = (long)in.get(29 + inPos) & 255L | (long)in.get(30 + inPos) << 8 & 65535L | (long)in.get(31 + inPos) << 16 & 16777215L | (long)in.get(32 + inPos) << 24 & 536870911L;
         out[9 + outPos] = (long)in.get(32 + inPos) >> 5 & 7L | (long)in.get(33 + inPos) << 3 & 2047L | (long)in.get(34 + inPos) << 11 & 524287L | (long)in.get(35 + inPos) << 19 & 134217727L | (long)in.get(36 + inPos) << 27 & 536870911L;
         out[10 + outPos] = (long)in.get(36 + inPos) >> 2 & 63L | (long)in.get(37 + inPos) << 6 & 16383L | (long)in.get(38 + inPos) << 14 & 4194303L | (long)in.get(39 + inPos) << 22 & 536870911L;
         out[11 + outPos] = (long)in.get(39 + inPos) >> 7 & 1L | (long)in.get(40 + inPos) << 1 & 511L | (long)in.get(41 + inPos) << 9 & 131071L | (long)in.get(42 + inPos) << 17 & 33554431L | (long)in.get(43 + inPos) << 25 & 536870911L;
         out[12 + outPos] = (long)in.get(43 + inPos) >> 4 & 15L | (long)in.get(44 + inPos) << 4 & 4095L | (long)in.get(45 + inPos) << 12 & 1048575L | (long)in.get(46 + inPos) << 20 & 268435455L | (long)in.get(47 + inPos) << 28 & 536870911L;
         out[13 + outPos] = (long)in.get(47 + inPos) >> 1 & 127L | (long)in.get(48 + inPos) << 7 & 32767L | (long)in.get(49 + inPos) << 15 & 8388607L | (long)in.get(50 + inPos) << 23 & 536870911L;
         out[14 + outPos] = (long)in.get(50 + inPos) >> 6 & 3L | (long)in.get(51 + inPos) << 2 & 1023L | (long)in.get(52 + inPos) << 10 & 262143L | (long)in.get(53 + inPos) << 18 & 67108863L | (long)in.get(54 + inPos) << 26 & 536870911L;
         out[15 + outPos] = (long)in.get(54 + inPos) >> 3 & 31L | (long)in.get(55 + inPos) << 5 & 8191L | (long)in.get(56 + inPos) << 13 & 2097151L | (long)in.get(57 + inPos) << 21 & 536870911L;
         out[16 + outPos] = (long)in.get(58 + inPos) & 255L | (long)in.get(59 + inPos) << 8 & 65535L | (long)in.get(60 + inPos) << 16 & 16777215L | (long)in.get(61 + inPos) << 24 & 536870911L;
         out[17 + outPos] = (long)in.get(61 + inPos) >> 5 & 7L | (long)in.get(62 + inPos) << 3 & 2047L | (long)in.get(63 + inPos) << 11 & 524287L | (long)in.get(64 + inPos) << 19 & 134217727L | (long)in.get(65 + inPos) << 27 & 536870911L;
         out[18 + outPos] = (long)in.get(65 + inPos) >> 2 & 63L | (long)in.get(66 + inPos) << 6 & 16383L | (long)in.get(67 + inPos) << 14 & 4194303L | (long)in.get(68 + inPos) << 22 & 536870911L;
         out[19 + outPos] = (long)in.get(68 + inPos) >> 7 & 1L | (long)in.get(69 + inPos) << 1 & 511L | (long)in.get(70 + inPos) << 9 & 131071L | (long)in.get(71 + inPos) << 17 & 33554431L | (long)in.get(72 + inPos) << 25 & 536870911L;
         out[20 + outPos] = (long)in.get(72 + inPos) >> 4 & 15L | (long)in.get(73 + inPos) << 4 & 4095L | (long)in.get(74 + inPos) << 12 & 1048575L | (long)in.get(75 + inPos) << 20 & 268435455L | (long)in.get(76 + inPos) << 28 & 536870911L;
         out[21 + outPos] = (long)in.get(76 + inPos) >> 1 & 127L | (long)in.get(77 + inPos) << 7 & 32767L | (long)in.get(78 + inPos) << 15 & 8388607L | (long)in.get(79 + inPos) << 23 & 536870911L;
         out[22 + outPos] = (long)in.get(79 + inPos) >> 6 & 3L | (long)in.get(80 + inPos) << 2 & 1023L | (long)in.get(81 + inPos) << 10 & 262143L | (long)in.get(82 + inPos) << 18 & 67108863L | (long)in.get(83 + inPos) << 26 & 536870911L;
         out[23 + outPos] = (long)in.get(83 + inPos) >> 3 & 31L | (long)in.get(84 + inPos) << 5 & 8191L | (long)in.get(85 + inPos) << 13 & 2097151L | (long)in.get(86 + inPos) << 21 & 536870911L;
         out[24 + outPos] = (long)in.get(87 + inPos) & 255L | (long)in.get(88 + inPos) << 8 & 65535L | (long)in.get(89 + inPos) << 16 & 16777215L | (long)in.get(90 + inPos) << 24 & 536870911L;
         out[25 + outPos] = (long)in.get(90 + inPos) >> 5 & 7L | (long)in.get(91 + inPos) << 3 & 2047L | (long)in.get(92 + inPos) << 11 & 524287L | (long)in.get(93 + inPos) << 19 & 134217727L | (long)in.get(94 + inPos) << 27 & 536870911L;
         out[26 + outPos] = (long)in.get(94 + inPos) >> 2 & 63L | (long)in.get(95 + inPos) << 6 & 16383L | (long)in.get(96 + inPos) << 14 & 4194303L | (long)in.get(97 + inPos) << 22 & 536870911L;
         out[27 + outPos] = (long)in.get(97 + inPos) >> 7 & 1L | (long)in.get(98 + inPos) << 1 & 511L | (long)in.get(99 + inPos) << 9 & 131071L | (long)in.get(100 + inPos) << 17 & 33554431L | (long)in.get(101 + inPos) << 25 & 536870911L;
         out[28 + outPos] = (long)in.get(101 + inPos) >> 4 & 15L | (long)in.get(102 + inPos) << 4 & 4095L | (long)in.get(103 + inPos) << 12 & 1048575L | (long)in.get(104 + inPos) << 20 & 268435455L | (long)in.get(105 + inPos) << 28 & 536870911L;
         out[29 + outPos] = (long)in.get(105 + inPos) >> 1 & 127L | (long)in.get(106 + inPos) << 7 & 32767L | (long)in.get(107 + inPos) << 15 & 8388607L | (long)in.get(108 + inPos) << 23 & 536870911L;
         out[30 + outPos] = (long)in.get(108 + inPos) >> 6 & 3L | (long)in.get(109 + inPos) << 2 & 1023L | (long)in.get(110 + inPos) << 10 & 262143L | (long)in.get(111 + inPos) << 18 & 67108863L | (long)in.get(112 + inPos) << 26 & 536870911L;
         out[31 + outPos] = (long)in.get(112 + inPos) >> 3 & 31L | (long)in.get(113 + inPos) << 5 & 8191L | (long)in.get(114 + inPos) << 13 & 2097151L | (long)in.get(115 + inPos) << 21 & 536870911L;
      }
   }

   private static final class Packer30 extends BytePackerForLong {
      private Packer30() {
         super(30);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 1073741823L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 1073741823L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 1073741823L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 1073741823L) >>> 24 | (in[1 + inPos] & 1073741823L) << 6) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 1073741823L) >>> 2 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 1073741823L) >>> 10 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 1073741823L) >>> 18 & 255L));
         out[7 + outPos] = (byte)((int)(((in[1 + inPos] & 1073741823L) >>> 26 | (in[2 + inPos] & 1073741823L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 1073741823L) >>> 4 & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 1073741823L) >>> 12 & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 1073741823L) >>> 20 & 255L));
         out[11 + outPos] = (byte)((int)(((in[2 + inPos] & 1073741823L) >>> 28 | (in[3 + inPos] & 1073741823L) << 2) & 255L));
         out[12 + outPos] = (byte)((int)((in[3 + inPos] & 1073741823L) >>> 6 & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 1073741823L) >>> 14 & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 1073741823L) >>> 22 & 255L));
         out[15 + outPos] = (byte)((int)(in[4 + inPos] & 1073741823L & 255L));
         out[16 + outPos] = (byte)((int)((in[4 + inPos] & 1073741823L) >>> 8 & 255L));
         out[17 + outPos] = (byte)((int)((in[4 + inPos] & 1073741823L) >>> 16 & 255L));
         out[18 + outPos] = (byte)((int)(((in[4 + inPos] & 1073741823L) >>> 24 | (in[5 + inPos] & 1073741823L) << 6) & 255L));
         out[19 + outPos] = (byte)((int)((in[5 + inPos] & 1073741823L) >>> 2 & 255L));
         out[20 + outPos] = (byte)((int)((in[5 + inPos] & 1073741823L) >>> 10 & 255L));
         out[21 + outPos] = (byte)((int)((in[5 + inPos] & 1073741823L) >>> 18 & 255L));
         out[22 + outPos] = (byte)((int)(((in[5 + inPos] & 1073741823L) >>> 26 | (in[6 + inPos] & 1073741823L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)((in[6 + inPos] & 1073741823L) >>> 4 & 255L));
         out[24 + outPos] = (byte)((int)((in[6 + inPos] & 1073741823L) >>> 12 & 255L));
         out[25 + outPos] = (byte)((int)((in[6 + inPos] & 1073741823L) >>> 20 & 255L));
         out[26 + outPos] = (byte)((int)(((in[6 + inPos] & 1073741823L) >>> 28 | (in[7 + inPos] & 1073741823L) << 2) & 255L));
         out[27 + outPos] = (byte)((int)((in[7 + inPos] & 1073741823L) >>> 6 & 255L));
         out[28 + outPos] = (byte)((int)((in[7 + inPos] & 1073741823L) >>> 14 & 255L));
         out[29 + outPos] = (byte)((int)((in[7 + inPos] & 1073741823L) >>> 22 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 1073741823L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 1073741823L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 1073741823L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 1073741823L) >>> 24 | (in[1 + inPos] & 1073741823L) << 6) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 1073741823L) >>> 2 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 1073741823L) >>> 10 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 1073741823L) >>> 18 & 255L));
         out[7 + outPos] = (byte)((int)(((in[1 + inPos] & 1073741823L) >>> 26 | (in[2 + inPos] & 1073741823L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 1073741823L) >>> 4 & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 1073741823L) >>> 12 & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 1073741823L) >>> 20 & 255L));
         out[11 + outPos] = (byte)((int)(((in[2 + inPos] & 1073741823L) >>> 28 | (in[3 + inPos] & 1073741823L) << 2) & 255L));
         out[12 + outPos] = (byte)((int)((in[3 + inPos] & 1073741823L) >>> 6 & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 1073741823L) >>> 14 & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 1073741823L) >>> 22 & 255L));
         out[15 + outPos] = (byte)((int)(in[4 + inPos] & 1073741823L & 255L));
         out[16 + outPos] = (byte)((int)((in[4 + inPos] & 1073741823L) >>> 8 & 255L));
         out[17 + outPos] = (byte)((int)((in[4 + inPos] & 1073741823L) >>> 16 & 255L));
         out[18 + outPos] = (byte)((int)(((in[4 + inPos] & 1073741823L) >>> 24 | (in[5 + inPos] & 1073741823L) << 6) & 255L));
         out[19 + outPos] = (byte)((int)((in[5 + inPos] & 1073741823L) >>> 2 & 255L));
         out[20 + outPos] = (byte)((int)((in[5 + inPos] & 1073741823L) >>> 10 & 255L));
         out[21 + outPos] = (byte)((int)((in[5 + inPos] & 1073741823L) >>> 18 & 255L));
         out[22 + outPos] = (byte)((int)(((in[5 + inPos] & 1073741823L) >>> 26 | (in[6 + inPos] & 1073741823L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)((in[6 + inPos] & 1073741823L) >>> 4 & 255L));
         out[24 + outPos] = (byte)((int)((in[6 + inPos] & 1073741823L) >>> 12 & 255L));
         out[25 + outPos] = (byte)((int)((in[6 + inPos] & 1073741823L) >>> 20 & 255L));
         out[26 + outPos] = (byte)((int)(((in[6 + inPos] & 1073741823L) >>> 28 | (in[7 + inPos] & 1073741823L) << 2) & 255L));
         out[27 + outPos] = (byte)((int)((in[7 + inPos] & 1073741823L) >>> 6 & 255L));
         out[28 + outPos] = (byte)((int)((in[7 + inPos] & 1073741823L) >>> 14 & 255L));
         out[29 + outPos] = (byte)((int)((in[7 + inPos] & 1073741823L) >>> 22 & 255L));
         out[30 + outPos] = (byte)((int)(in[8 + inPos] & 1073741823L & 255L));
         out[31 + outPos] = (byte)((int)((in[8 + inPos] & 1073741823L) >>> 8 & 255L));
         out[32 + outPos] = (byte)((int)((in[8 + inPos] & 1073741823L) >>> 16 & 255L));
         out[33 + outPos] = (byte)((int)(((in[8 + inPos] & 1073741823L) >>> 24 | (in[9 + inPos] & 1073741823L) << 6) & 255L));
         out[34 + outPos] = (byte)((int)((in[9 + inPos] & 1073741823L) >>> 2 & 255L));
         out[35 + outPos] = (byte)((int)((in[9 + inPos] & 1073741823L) >>> 10 & 255L));
         out[36 + outPos] = (byte)((int)((in[9 + inPos] & 1073741823L) >>> 18 & 255L));
         out[37 + outPos] = (byte)((int)(((in[9 + inPos] & 1073741823L) >>> 26 | (in[10 + inPos] & 1073741823L) << 4) & 255L));
         out[38 + outPos] = (byte)((int)((in[10 + inPos] & 1073741823L) >>> 4 & 255L));
         out[39 + outPos] = (byte)((int)((in[10 + inPos] & 1073741823L) >>> 12 & 255L));
         out[40 + outPos] = (byte)((int)((in[10 + inPos] & 1073741823L) >>> 20 & 255L));
         out[41 + outPos] = (byte)((int)(((in[10 + inPos] & 1073741823L) >>> 28 | (in[11 + inPos] & 1073741823L) << 2) & 255L));
         out[42 + outPos] = (byte)((int)((in[11 + inPos] & 1073741823L) >>> 6 & 255L));
         out[43 + outPos] = (byte)((int)((in[11 + inPos] & 1073741823L) >>> 14 & 255L));
         out[44 + outPos] = (byte)((int)((in[11 + inPos] & 1073741823L) >>> 22 & 255L));
         out[45 + outPos] = (byte)((int)(in[12 + inPos] & 1073741823L & 255L));
         out[46 + outPos] = (byte)((int)((in[12 + inPos] & 1073741823L) >>> 8 & 255L));
         out[47 + outPos] = (byte)((int)((in[12 + inPos] & 1073741823L) >>> 16 & 255L));
         out[48 + outPos] = (byte)((int)(((in[12 + inPos] & 1073741823L) >>> 24 | (in[13 + inPos] & 1073741823L) << 6) & 255L));
         out[49 + outPos] = (byte)((int)((in[13 + inPos] & 1073741823L) >>> 2 & 255L));
         out[50 + outPos] = (byte)((int)((in[13 + inPos] & 1073741823L) >>> 10 & 255L));
         out[51 + outPos] = (byte)((int)((in[13 + inPos] & 1073741823L) >>> 18 & 255L));
         out[52 + outPos] = (byte)((int)(((in[13 + inPos] & 1073741823L) >>> 26 | (in[14 + inPos] & 1073741823L) << 4) & 255L));
         out[53 + outPos] = (byte)((int)((in[14 + inPos] & 1073741823L) >>> 4 & 255L));
         out[54 + outPos] = (byte)((int)((in[14 + inPos] & 1073741823L) >>> 12 & 255L));
         out[55 + outPos] = (byte)((int)((in[14 + inPos] & 1073741823L) >>> 20 & 255L));
         out[56 + outPos] = (byte)((int)(((in[14 + inPos] & 1073741823L) >>> 28 | (in[15 + inPos] & 1073741823L) << 2) & 255L));
         out[57 + outPos] = (byte)((int)((in[15 + inPos] & 1073741823L) >>> 6 & 255L));
         out[58 + outPos] = (byte)((int)((in[15 + inPos] & 1073741823L) >>> 14 & 255L));
         out[59 + outPos] = (byte)((int)((in[15 + inPos] & 1073741823L) >>> 22 & 255L));
         out[60 + outPos] = (byte)((int)(in[16 + inPos] & 1073741823L & 255L));
         out[61 + outPos] = (byte)((int)((in[16 + inPos] & 1073741823L) >>> 8 & 255L));
         out[62 + outPos] = (byte)((int)((in[16 + inPos] & 1073741823L) >>> 16 & 255L));
         out[63 + outPos] = (byte)((int)(((in[16 + inPos] & 1073741823L) >>> 24 | (in[17 + inPos] & 1073741823L) << 6) & 255L));
         out[64 + outPos] = (byte)((int)((in[17 + inPos] & 1073741823L) >>> 2 & 255L));
         out[65 + outPos] = (byte)((int)((in[17 + inPos] & 1073741823L) >>> 10 & 255L));
         out[66 + outPos] = (byte)((int)((in[17 + inPos] & 1073741823L) >>> 18 & 255L));
         out[67 + outPos] = (byte)((int)(((in[17 + inPos] & 1073741823L) >>> 26 | (in[18 + inPos] & 1073741823L) << 4) & 255L));
         out[68 + outPos] = (byte)((int)((in[18 + inPos] & 1073741823L) >>> 4 & 255L));
         out[69 + outPos] = (byte)((int)((in[18 + inPos] & 1073741823L) >>> 12 & 255L));
         out[70 + outPos] = (byte)((int)((in[18 + inPos] & 1073741823L) >>> 20 & 255L));
         out[71 + outPos] = (byte)((int)(((in[18 + inPos] & 1073741823L) >>> 28 | (in[19 + inPos] & 1073741823L) << 2) & 255L));
         out[72 + outPos] = (byte)((int)((in[19 + inPos] & 1073741823L) >>> 6 & 255L));
         out[73 + outPos] = (byte)((int)((in[19 + inPos] & 1073741823L) >>> 14 & 255L));
         out[74 + outPos] = (byte)((int)((in[19 + inPos] & 1073741823L) >>> 22 & 255L));
         out[75 + outPos] = (byte)((int)(in[20 + inPos] & 1073741823L & 255L));
         out[76 + outPos] = (byte)((int)((in[20 + inPos] & 1073741823L) >>> 8 & 255L));
         out[77 + outPos] = (byte)((int)((in[20 + inPos] & 1073741823L) >>> 16 & 255L));
         out[78 + outPos] = (byte)((int)(((in[20 + inPos] & 1073741823L) >>> 24 | (in[21 + inPos] & 1073741823L) << 6) & 255L));
         out[79 + outPos] = (byte)((int)((in[21 + inPos] & 1073741823L) >>> 2 & 255L));
         out[80 + outPos] = (byte)((int)((in[21 + inPos] & 1073741823L) >>> 10 & 255L));
         out[81 + outPos] = (byte)((int)((in[21 + inPos] & 1073741823L) >>> 18 & 255L));
         out[82 + outPos] = (byte)((int)(((in[21 + inPos] & 1073741823L) >>> 26 | (in[22 + inPos] & 1073741823L) << 4) & 255L));
         out[83 + outPos] = (byte)((int)((in[22 + inPos] & 1073741823L) >>> 4 & 255L));
         out[84 + outPos] = (byte)((int)((in[22 + inPos] & 1073741823L) >>> 12 & 255L));
         out[85 + outPos] = (byte)((int)((in[22 + inPos] & 1073741823L) >>> 20 & 255L));
         out[86 + outPos] = (byte)((int)(((in[22 + inPos] & 1073741823L) >>> 28 | (in[23 + inPos] & 1073741823L) << 2) & 255L));
         out[87 + outPos] = (byte)((int)((in[23 + inPos] & 1073741823L) >>> 6 & 255L));
         out[88 + outPos] = (byte)((int)((in[23 + inPos] & 1073741823L) >>> 14 & 255L));
         out[89 + outPos] = (byte)((int)((in[23 + inPos] & 1073741823L) >>> 22 & 255L));
         out[90 + outPos] = (byte)((int)(in[24 + inPos] & 1073741823L & 255L));
         out[91 + outPos] = (byte)((int)((in[24 + inPos] & 1073741823L) >>> 8 & 255L));
         out[92 + outPos] = (byte)((int)((in[24 + inPos] & 1073741823L) >>> 16 & 255L));
         out[93 + outPos] = (byte)((int)(((in[24 + inPos] & 1073741823L) >>> 24 | (in[25 + inPos] & 1073741823L) << 6) & 255L));
         out[94 + outPos] = (byte)((int)((in[25 + inPos] & 1073741823L) >>> 2 & 255L));
         out[95 + outPos] = (byte)((int)((in[25 + inPos] & 1073741823L) >>> 10 & 255L));
         out[96 + outPos] = (byte)((int)((in[25 + inPos] & 1073741823L) >>> 18 & 255L));
         out[97 + outPos] = (byte)((int)(((in[25 + inPos] & 1073741823L) >>> 26 | (in[26 + inPos] & 1073741823L) << 4) & 255L));
         out[98 + outPos] = (byte)((int)((in[26 + inPos] & 1073741823L) >>> 4 & 255L));
         out[99 + outPos] = (byte)((int)((in[26 + inPos] & 1073741823L) >>> 12 & 255L));
         out[100 + outPos] = (byte)((int)((in[26 + inPos] & 1073741823L) >>> 20 & 255L));
         out[101 + outPos] = (byte)((int)(((in[26 + inPos] & 1073741823L) >>> 28 | (in[27 + inPos] & 1073741823L) << 2) & 255L));
         out[102 + outPos] = (byte)((int)((in[27 + inPos] & 1073741823L) >>> 6 & 255L));
         out[103 + outPos] = (byte)((int)((in[27 + inPos] & 1073741823L) >>> 14 & 255L));
         out[104 + outPos] = (byte)((int)((in[27 + inPos] & 1073741823L) >>> 22 & 255L));
         out[105 + outPos] = (byte)((int)(in[28 + inPos] & 1073741823L & 255L));
         out[106 + outPos] = (byte)((int)((in[28 + inPos] & 1073741823L) >>> 8 & 255L));
         out[107 + outPos] = (byte)((int)((in[28 + inPos] & 1073741823L) >>> 16 & 255L));
         out[108 + outPos] = (byte)((int)(((in[28 + inPos] & 1073741823L) >>> 24 | (in[29 + inPos] & 1073741823L) << 6) & 255L));
         out[109 + outPos] = (byte)((int)((in[29 + inPos] & 1073741823L) >>> 2 & 255L));
         out[110 + outPos] = (byte)((int)((in[29 + inPos] & 1073741823L) >>> 10 & 255L));
         out[111 + outPos] = (byte)((int)((in[29 + inPos] & 1073741823L) >>> 18 & 255L));
         out[112 + outPos] = (byte)((int)(((in[29 + inPos] & 1073741823L) >>> 26 | (in[30 + inPos] & 1073741823L) << 4) & 255L));
         out[113 + outPos] = (byte)((int)((in[30 + inPos] & 1073741823L) >>> 4 & 255L));
         out[114 + outPos] = (byte)((int)((in[30 + inPos] & 1073741823L) >>> 12 & 255L));
         out[115 + outPos] = (byte)((int)((in[30 + inPos] & 1073741823L) >>> 20 & 255L));
         out[116 + outPos] = (byte)((int)(((in[30 + inPos] & 1073741823L) >>> 28 | (in[31 + inPos] & 1073741823L) << 2) & 255L));
         out[117 + outPos] = (byte)((int)((in[31 + inPos] & 1073741823L) >>> 6 & 255L));
         out[118 + outPos] = (byte)((int)((in[31 + inPos] & 1073741823L) >>> 14 & 255L));
         out[119 + outPos] = (byte)((int)((in[31 + inPos] & 1073741823L) >>> 22 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 1073741823L;
         out[1 + outPos] = (long)in[3 + inPos] >> 6 & 3L | (long)in[4 + inPos] << 2 & 1023L | (long)in[5 + inPos] << 10 & 262143L | (long)in[6 + inPos] << 18 & 67108863L | (long)in[7 + inPos] << 26 & 1073741823L;
         out[2 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 4095L | (long)in[9 + inPos] << 12 & 1048575L | (long)in[10 + inPos] << 20 & 268435455L | (long)in[11 + inPos] << 28 & 1073741823L;
         out[3 + outPos] = (long)in[11 + inPos] >> 2 & 63L | (long)in[12 + inPos] << 6 & 16383L | (long)in[13 + inPos] << 14 & 4194303L | (long)in[14 + inPos] << 22 & 1073741823L;
         out[4 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 65535L | (long)in[17 + inPos] << 16 & 16777215L | (long)in[18 + inPos] << 24 & 1073741823L;
         out[5 + outPos] = (long)in[18 + inPos] >> 6 & 3L | (long)in[19 + inPos] << 2 & 1023L | (long)in[20 + inPos] << 10 & 262143L | (long)in[21 + inPos] << 18 & 67108863L | (long)in[22 + inPos] << 26 & 1073741823L;
         out[6 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 4095L | (long)in[24 + inPos] << 12 & 1048575L | (long)in[25 + inPos] << 20 & 268435455L | (long)in[26 + inPos] << 28 & 1073741823L;
         out[7 + outPos] = (long)in[26 + inPos] >> 2 & 63L | (long)in[27 + inPos] << 6 & 16383L | (long)in[28 + inPos] << 14 & 4194303L | (long)in[29 + inPos] << 22 & 1073741823L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 1073741823L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 6 & 3L | (long)in.get(4 + inPos) << 2 & 1023L | (long)in.get(5 + inPos) << 10 & 262143L | (long)in.get(6 + inPos) << 18 & 67108863L | (long)in.get(7 + inPos) << 26 & 1073741823L;
         out[2 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 4095L | (long)in.get(9 + inPos) << 12 & 1048575L | (long)in.get(10 + inPos) << 20 & 268435455L | (long)in.get(11 + inPos) << 28 & 1073741823L;
         out[3 + outPos] = (long)in.get(11 + inPos) >> 2 & 63L | (long)in.get(12 + inPos) << 6 & 16383L | (long)in.get(13 + inPos) << 14 & 4194303L | (long)in.get(14 + inPos) << 22 & 1073741823L;
         out[4 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 65535L | (long)in.get(17 + inPos) << 16 & 16777215L | (long)in.get(18 + inPos) << 24 & 1073741823L;
         out[5 + outPos] = (long)in.get(18 + inPos) >> 6 & 3L | (long)in.get(19 + inPos) << 2 & 1023L | (long)in.get(20 + inPos) << 10 & 262143L | (long)in.get(21 + inPos) << 18 & 67108863L | (long)in.get(22 + inPos) << 26 & 1073741823L;
         out[6 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 4095L | (long)in.get(24 + inPos) << 12 & 1048575L | (long)in.get(25 + inPos) << 20 & 268435455L | (long)in.get(26 + inPos) << 28 & 1073741823L;
         out[7 + outPos] = (long)in.get(26 + inPos) >> 2 & 63L | (long)in.get(27 + inPos) << 6 & 16383L | (long)in.get(28 + inPos) << 14 & 4194303L | (long)in.get(29 + inPos) << 22 & 1073741823L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 1073741823L;
         out[1 + outPos] = (long)in[3 + inPos] >> 6 & 3L | (long)in[4 + inPos] << 2 & 1023L | (long)in[5 + inPos] << 10 & 262143L | (long)in[6 + inPos] << 18 & 67108863L | (long)in[7 + inPos] << 26 & 1073741823L;
         out[2 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 4095L | (long)in[9 + inPos] << 12 & 1048575L | (long)in[10 + inPos] << 20 & 268435455L | (long)in[11 + inPos] << 28 & 1073741823L;
         out[3 + outPos] = (long)in[11 + inPos] >> 2 & 63L | (long)in[12 + inPos] << 6 & 16383L | (long)in[13 + inPos] << 14 & 4194303L | (long)in[14 + inPos] << 22 & 1073741823L;
         out[4 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 65535L | (long)in[17 + inPos] << 16 & 16777215L | (long)in[18 + inPos] << 24 & 1073741823L;
         out[5 + outPos] = (long)in[18 + inPos] >> 6 & 3L | (long)in[19 + inPos] << 2 & 1023L | (long)in[20 + inPos] << 10 & 262143L | (long)in[21 + inPos] << 18 & 67108863L | (long)in[22 + inPos] << 26 & 1073741823L;
         out[6 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 4095L | (long)in[24 + inPos] << 12 & 1048575L | (long)in[25 + inPos] << 20 & 268435455L | (long)in[26 + inPos] << 28 & 1073741823L;
         out[7 + outPos] = (long)in[26 + inPos] >> 2 & 63L | (long)in[27 + inPos] << 6 & 16383L | (long)in[28 + inPos] << 14 & 4194303L | (long)in[29 + inPos] << 22 & 1073741823L;
         out[8 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 65535L | (long)in[32 + inPos] << 16 & 16777215L | (long)in[33 + inPos] << 24 & 1073741823L;
         out[9 + outPos] = (long)in[33 + inPos] >> 6 & 3L | (long)in[34 + inPos] << 2 & 1023L | (long)in[35 + inPos] << 10 & 262143L | (long)in[36 + inPos] << 18 & 67108863L | (long)in[37 + inPos] << 26 & 1073741823L;
         out[10 + outPos] = (long)in[37 + inPos] >> 4 & 15L | (long)in[38 + inPos] << 4 & 4095L | (long)in[39 + inPos] << 12 & 1048575L | (long)in[40 + inPos] << 20 & 268435455L | (long)in[41 + inPos] << 28 & 1073741823L;
         out[11 + outPos] = (long)in[41 + inPos] >> 2 & 63L | (long)in[42 + inPos] << 6 & 16383L | (long)in[43 + inPos] << 14 & 4194303L | (long)in[44 + inPos] << 22 & 1073741823L;
         out[12 + outPos] = (long)in[45 + inPos] & 255L | (long)in[46 + inPos] << 8 & 65535L | (long)in[47 + inPos] << 16 & 16777215L | (long)in[48 + inPos] << 24 & 1073741823L;
         out[13 + outPos] = (long)in[48 + inPos] >> 6 & 3L | (long)in[49 + inPos] << 2 & 1023L | (long)in[50 + inPos] << 10 & 262143L | (long)in[51 + inPos] << 18 & 67108863L | (long)in[52 + inPos] << 26 & 1073741823L;
         out[14 + outPos] = (long)in[52 + inPos] >> 4 & 15L | (long)in[53 + inPos] << 4 & 4095L | (long)in[54 + inPos] << 12 & 1048575L | (long)in[55 + inPos] << 20 & 268435455L | (long)in[56 + inPos] << 28 & 1073741823L;
         out[15 + outPos] = (long)in[56 + inPos] >> 2 & 63L | (long)in[57 + inPos] << 6 & 16383L | (long)in[58 + inPos] << 14 & 4194303L | (long)in[59 + inPos] << 22 & 1073741823L;
         out[16 + outPos] = (long)in[60 + inPos] & 255L | (long)in[61 + inPos] << 8 & 65535L | (long)in[62 + inPos] << 16 & 16777215L | (long)in[63 + inPos] << 24 & 1073741823L;
         out[17 + outPos] = (long)in[63 + inPos] >> 6 & 3L | (long)in[64 + inPos] << 2 & 1023L | (long)in[65 + inPos] << 10 & 262143L | (long)in[66 + inPos] << 18 & 67108863L | (long)in[67 + inPos] << 26 & 1073741823L;
         out[18 + outPos] = (long)in[67 + inPos] >> 4 & 15L | (long)in[68 + inPos] << 4 & 4095L | (long)in[69 + inPos] << 12 & 1048575L | (long)in[70 + inPos] << 20 & 268435455L | (long)in[71 + inPos] << 28 & 1073741823L;
         out[19 + outPos] = (long)in[71 + inPos] >> 2 & 63L | (long)in[72 + inPos] << 6 & 16383L | (long)in[73 + inPos] << 14 & 4194303L | (long)in[74 + inPos] << 22 & 1073741823L;
         out[20 + outPos] = (long)in[75 + inPos] & 255L | (long)in[76 + inPos] << 8 & 65535L | (long)in[77 + inPos] << 16 & 16777215L | (long)in[78 + inPos] << 24 & 1073741823L;
         out[21 + outPos] = (long)in[78 + inPos] >> 6 & 3L | (long)in[79 + inPos] << 2 & 1023L | (long)in[80 + inPos] << 10 & 262143L | (long)in[81 + inPos] << 18 & 67108863L | (long)in[82 + inPos] << 26 & 1073741823L;
         out[22 + outPos] = (long)in[82 + inPos] >> 4 & 15L | (long)in[83 + inPos] << 4 & 4095L | (long)in[84 + inPos] << 12 & 1048575L | (long)in[85 + inPos] << 20 & 268435455L | (long)in[86 + inPos] << 28 & 1073741823L;
         out[23 + outPos] = (long)in[86 + inPos] >> 2 & 63L | (long)in[87 + inPos] << 6 & 16383L | (long)in[88 + inPos] << 14 & 4194303L | (long)in[89 + inPos] << 22 & 1073741823L;
         out[24 + outPos] = (long)in[90 + inPos] & 255L | (long)in[91 + inPos] << 8 & 65535L | (long)in[92 + inPos] << 16 & 16777215L | (long)in[93 + inPos] << 24 & 1073741823L;
         out[25 + outPos] = (long)in[93 + inPos] >> 6 & 3L | (long)in[94 + inPos] << 2 & 1023L | (long)in[95 + inPos] << 10 & 262143L | (long)in[96 + inPos] << 18 & 67108863L | (long)in[97 + inPos] << 26 & 1073741823L;
         out[26 + outPos] = (long)in[97 + inPos] >> 4 & 15L | (long)in[98 + inPos] << 4 & 4095L | (long)in[99 + inPos] << 12 & 1048575L | (long)in[100 + inPos] << 20 & 268435455L | (long)in[101 + inPos] << 28 & 1073741823L;
         out[27 + outPos] = (long)in[101 + inPos] >> 2 & 63L | (long)in[102 + inPos] << 6 & 16383L | (long)in[103 + inPos] << 14 & 4194303L | (long)in[104 + inPos] << 22 & 1073741823L;
         out[28 + outPos] = (long)in[105 + inPos] & 255L | (long)in[106 + inPos] << 8 & 65535L | (long)in[107 + inPos] << 16 & 16777215L | (long)in[108 + inPos] << 24 & 1073741823L;
         out[29 + outPos] = (long)in[108 + inPos] >> 6 & 3L | (long)in[109 + inPos] << 2 & 1023L | (long)in[110 + inPos] << 10 & 262143L | (long)in[111 + inPos] << 18 & 67108863L | (long)in[112 + inPos] << 26 & 1073741823L;
         out[30 + outPos] = (long)in[112 + inPos] >> 4 & 15L | (long)in[113 + inPos] << 4 & 4095L | (long)in[114 + inPos] << 12 & 1048575L | (long)in[115 + inPos] << 20 & 268435455L | (long)in[116 + inPos] << 28 & 1073741823L;
         out[31 + outPos] = (long)in[116 + inPos] >> 2 & 63L | (long)in[117 + inPos] << 6 & 16383L | (long)in[118 + inPos] << 14 & 4194303L | (long)in[119 + inPos] << 22 & 1073741823L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 1073741823L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 6 & 3L | (long)in.get(4 + inPos) << 2 & 1023L | (long)in.get(5 + inPos) << 10 & 262143L | (long)in.get(6 + inPos) << 18 & 67108863L | (long)in.get(7 + inPos) << 26 & 1073741823L;
         out[2 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 4095L | (long)in.get(9 + inPos) << 12 & 1048575L | (long)in.get(10 + inPos) << 20 & 268435455L | (long)in.get(11 + inPos) << 28 & 1073741823L;
         out[3 + outPos] = (long)in.get(11 + inPos) >> 2 & 63L | (long)in.get(12 + inPos) << 6 & 16383L | (long)in.get(13 + inPos) << 14 & 4194303L | (long)in.get(14 + inPos) << 22 & 1073741823L;
         out[4 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 65535L | (long)in.get(17 + inPos) << 16 & 16777215L | (long)in.get(18 + inPos) << 24 & 1073741823L;
         out[5 + outPos] = (long)in.get(18 + inPos) >> 6 & 3L | (long)in.get(19 + inPos) << 2 & 1023L | (long)in.get(20 + inPos) << 10 & 262143L | (long)in.get(21 + inPos) << 18 & 67108863L | (long)in.get(22 + inPos) << 26 & 1073741823L;
         out[6 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 4095L | (long)in.get(24 + inPos) << 12 & 1048575L | (long)in.get(25 + inPos) << 20 & 268435455L | (long)in.get(26 + inPos) << 28 & 1073741823L;
         out[7 + outPos] = (long)in.get(26 + inPos) >> 2 & 63L | (long)in.get(27 + inPos) << 6 & 16383L | (long)in.get(28 + inPos) << 14 & 4194303L | (long)in.get(29 + inPos) << 22 & 1073741823L;
         out[8 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 65535L | (long)in.get(32 + inPos) << 16 & 16777215L | (long)in.get(33 + inPos) << 24 & 1073741823L;
         out[9 + outPos] = (long)in.get(33 + inPos) >> 6 & 3L | (long)in.get(34 + inPos) << 2 & 1023L | (long)in.get(35 + inPos) << 10 & 262143L | (long)in.get(36 + inPos) << 18 & 67108863L | (long)in.get(37 + inPos) << 26 & 1073741823L;
         out[10 + outPos] = (long)in.get(37 + inPos) >> 4 & 15L | (long)in.get(38 + inPos) << 4 & 4095L | (long)in.get(39 + inPos) << 12 & 1048575L | (long)in.get(40 + inPos) << 20 & 268435455L | (long)in.get(41 + inPos) << 28 & 1073741823L;
         out[11 + outPos] = (long)in.get(41 + inPos) >> 2 & 63L | (long)in.get(42 + inPos) << 6 & 16383L | (long)in.get(43 + inPos) << 14 & 4194303L | (long)in.get(44 + inPos) << 22 & 1073741823L;
         out[12 + outPos] = (long)in.get(45 + inPos) & 255L | (long)in.get(46 + inPos) << 8 & 65535L | (long)in.get(47 + inPos) << 16 & 16777215L | (long)in.get(48 + inPos) << 24 & 1073741823L;
         out[13 + outPos] = (long)in.get(48 + inPos) >> 6 & 3L | (long)in.get(49 + inPos) << 2 & 1023L | (long)in.get(50 + inPos) << 10 & 262143L | (long)in.get(51 + inPos) << 18 & 67108863L | (long)in.get(52 + inPos) << 26 & 1073741823L;
         out[14 + outPos] = (long)in.get(52 + inPos) >> 4 & 15L | (long)in.get(53 + inPos) << 4 & 4095L | (long)in.get(54 + inPos) << 12 & 1048575L | (long)in.get(55 + inPos) << 20 & 268435455L | (long)in.get(56 + inPos) << 28 & 1073741823L;
         out[15 + outPos] = (long)in.get(56 + inPos) >> 2 & 63L | (long)in.get(57 + inPos) << 6 & 16383L | (long)in.get(58 + inPos) << 14 & 4194303L | (long)in.get(59 + inPos) << 22 & 1073741823L;
         out[16 + outPos] = (long)in.get(60 + inPos) & 255L | (long)in.get(61 + inPos) << 8 & 65535L | (long)in.get(62 + inPos) << 16 & 16777215L | (long)in.get(63 + inPos) << 24 & 1073741823L;
         out[17 + outPos] = (long)in.get(63 + inPos) >> 6 & 3L | (long)in.get(64 + inPos) << 2 & 1023L | (long)in.get(65 + inPos) << 10 & 262143L | (long)in.get(66 + inPos) << 18 & 67108863L | (long)in.get(67 + inPos) << 26 & 1073741823L;
         out[18 + outPos] = (long)in.get(67 + inPos) >> 4 & 15L | (long)in.get(68 + inPos) << 4 & 4095L | (long)in.get(69 + inPos) << 12 & 1048575L | (long)in.get(70 + inPos) << 20 & 268435455L | (long)in.get(71 + inPos) << 28 & 1073741823L;
         out[19 + outPos] = (long)in.get(71 + inPos) >> 2 & 63L | (long)in.get(72 + inPos) << 6 & 16383L | (long)in.get(73 + inPos) << 14 & 4194303L | (long)in.get(74 + inPos) << 22 & 1073741823L;
         out[20 + outPos] = (long)in.get(75 + inPos) & 255L | (long)in.get(76 + inPos) << 8 & 65535L | (long)in.get(77 + inPos) << 16 & 16777215L | (long)in.get(78 + inPos) << 24 & 1073741823L;
         out[21 + outPos] = (long)in.get(78 + inPos) >> 6 & 3L | (long)in.get(79 + inPos) << 2 & 1023L | (long)in.get(80 + inPos) << 10 & 262143L | (long)in.get(81 + inPos) << 18 & 67108863L | (long)in.get(82 + inPos) << 26 & 1073741823L;
         out[22 + outPos] = (long)in.get(82 + inPos) >> 4 & 15L | (long)in.get(83 + inPos) << 4 & 4095L | (long)in.get(84 + inPos) << 12 & 1048575L | (long)in.get(85 + inPos) << 20 & 268435455L | (long)in.get(86 + inPos) << 28 & 1073741823L;
         out[23 + outPos] = (long)in.get(86 + inPos) >> 2 & 63L | (long)in.get(87 + inPos) << 6 & 16383L | (long)in.get(88 + inPos) << 14 & 4194303L | (long)in.get(89 + inPos) << 22 & 1073741823L;
         out[24 + outPos] = (long)in.get(90 + inPos) & 255L | (long)in.get(91 + inPos) << 8 & 65535L | (long)in.get(92 + inPos) << 16 & 16777215L | (long)in.get(93 + inPos) << 24 & 1073741823L;
         out[25 + outPos] = (long)in.get(93 + inPos) >> 6 & 3L | (long)in.get(94 + inPos) << 2 & 1023L | (long)in.get(95 + inPos) << 10 & 262143L | (long)in.get(96 + inPos) << 18 & 67108863L | (long)in.get(97 + inPos) << 26 & 1073741823L;
         out[26 + outPos] = (long)in.get(97 + inPos) >> 4 & 15L | (long)in.get(98 + inPos) << 4 & 4095L | (long)in.get(99 + inPos) << 12 & 1048575L | (long)in.get(100 + inPos) << 20 & 268435455L | (long)in.get(101 + inPos) << 28 & 1073741823L;
         out[27 + outPos] = (long)in.get(101 + inPos) >> 2 & 63L | (long)in.get(102 + inPos) << 6 & 16383L | (long)in.get(103 + inPos) << 14 & 4194303L | (long)in.get(104 + inPos) << 22 & 1073741823L;
         out[28 + outPos] = (long)in.get(105 + inPos) & 255L | (long)in.get(106 + inPos) << 8 & 65535L | (long)in.get(107 + inPos) << 16 & 16777215L | (long)in.get(108 + inPos) << 24 & 1073741823L;
         out[29 + outPos] = (long)in.get(108 + inPos) >> 6 & 3L | (long)in.get(109 + inPos) << 2 & 1023L | (long)in.get(110 + inPos) << 10 & 262143L | (long)in.get(111 + inPos) << 18 & 67108863L | (long)in.get(112 + inPos) << 26 & 1073741823L;
         out[30 + outPos] = (long)in.get(112 + inPos) >> 4 & 15L | (long)in.get(113 + inPos) << 4 & 4095L | (long)in.get(114 + inPos) << 12 & 1048575L | (long)in.get(115 + inPos) << 20 & 268435455L | (long)in.get(116 + inPos) << 28 & 1073741823L;
         out[31 + outPos] = (long)in.get(116 + inPos) >> 2 & 63L | (long)in.get(117 + inPos) << 6 & 16383L | (long)in.get(118 + inPos) << 14 & 4194303L | (long)in.get(119 + inPos) << 22 & 1073741823L;
      }
   }

   private static final class Packer31 extends BytePackerForLong {
      private Packer31() {
         super(31);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 2147483647L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 2147483647L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 2147483647L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 2147483647L) >>> 24 | (in[1 + inPos] & 2147483647L) << 7) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 2147483647L) >>> 1 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 2147483647L) >>> 9 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 2147483647L) >>> 17 & 255L));
         out[7 + outPos] = (byte)((int)(((in[1 + inPos] & 2147483647L) >>> 25 | (in[2 + inPos] & 2147483647L) << 6) & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 2147483647L) >>> 2 & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 2147483647L) >>> 10 & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 2147483647L) >>> 18 & 255L));
         out[11 + outPos] = (byte)((int)(((in[2 + inPos] & 2147483647L) >>> 26 | (in[3 + inPos] & 2147483647L) << 5) & 255L));
         out[12 + outPos] = (byte)((int)((in[3 + inPos] & 2147483647L) >>> 3 & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 2147483647L) >>> 11 & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 2147483647L) >>> 19 & 255L));
         out[15 + outPos] = (byte)((int)(((in[3 + inPos] & 2147483647L) >>> 27 | (in[4 + inPos] & 2147483647L) << 4) & 255L));
         out[16 + outPos] = (byte)((int)((in[4 + inPos] & 2147483647L) >>> 4 & 255L));
         out[17 + outPos] = (byte)((int)((in[4 + inPos] & 2147483647L) >>> 12 & 255L));
         out[18 + outPos] = (byte)((int)((in[4 + inPos] & 2147483647L) >>> 20 & 255L));
         out[19 + outPos] = (byte)((int)(((in[4 + inPos] & 2147483647L) >>> 28 | (in[5 + inPos] & 2147483647L) << 3) & 255L));
         out[20 + outPos] = (byte)((int)((in[5 + inPos] & 2147483647L) >>> 5 & 255L));
         out[21 + outPos] = (byte)((int)((in[5 + inPos] & 2147483647L) >>> 13 & 255L));
         out[22 + outPos] = (byte)((int)((in[5 + inPos] & 2147483647L) >>> 21 & 255L));
         out[23 + outPos] = (byte)((int)(((in[5 + inPos] & 2147483647L) >>> 29 | (in[6 + inPos] & 2147483647L) << 2) & 255L));
         out[24 + outPos] = (byte)((int)((in[6 + inPos] & 2147483647L) >>> 6 & 255L));
         out[25 + outPos] = (byte)((int)((in[6 + inPos] & 2147483647L) >>> 14 & 255L));
         out[26 + outPos] = (byte)((int)((in[6 + inPos] & 2147483647L) >>> 22 & 255L));
         out[27 + outPos] = (byte)((int)(((in[6 + inPos] & 2147483647L) >>> 30 | (in[7 + inPos] & 2147483647L) << 1) & 255L));
         out[28 + outPos] = (byte)((int)((in[7 + inPos] & 2147483647L) >>> 7 & 255L));
         out[29 + outPos] = (byte)((int)((in[7 + inPos] & 2147483647L) >>> 15 & 255L));
         out[30 + outPos] = (byte)((int)((in[7 + inPos] & 2147483647L) >>> 23 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 2147483647L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 2147483647L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 2147483647L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)(((in[0 + inPos] & 2147483647L) >>> 24 | (in[1 + inPos] & 2147483647L) << 7) & 255L));
         out[4 + outPos] = (byte)((int)((in[1 + inPos] & 2147483647L) >>> 1 & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 2147483647L) >>> 9 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 2147483647L) >>> 17 & 255L));
         out[7 + outPos] = (byte)((int)(((in[1 + inPos] & 2147483647L) >>> 25 | (in[2 + inPos] & 2147483647L) << 6) & 255L));
         out[8 + outPos] = (byte)((int)((in[2 + inPos] & 2147483647L) >>> 2 & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 2147483647L) >>> 10 & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 2147483647L) >>> 18 & 255L));
         out[11 + outPos] = (byte)((int)(((in[2 + inPos] & 2147483647L) >>> 26 | (in[3 + inPos] & 2147483647L) << 5) & 255L));
         out[12 + outPos] = (byte)((int)((in[3 + inPos] & 2147483647L) >>> 3 & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 2147483647L) >>> 11 & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 2147483647L) >>> 19 & 255L));
         out[15 + outPos] = (byte)((int)(((in[3 + inPos] & 2147483647L) >>> 27 | (in[4 + inPos] & 2147483647L) << 4) & 255L));
         out[16 + outPos] = (byte)((int)((in[4 + inPos] & 2147483647L) >>> 4 & 255L));
         out[17 + outPos] = (byte)((int)((in[4 + inPos] & 2147483647L) >>> 12 & 255L));
         out[18 + outPos] = (byte)((int)((in[4 + inPos] & 2147483647L) >>> 20 & 255L));
         out[19 + outPos] = (byte)((int)(((in[4 + inPos] & 2147483647L) >>> 28 | (in[5 + inPos] & 2147483647L) << 3) & 255L));
         out[20 + outPos] = (byte)((int)((in[5 + inPos] & 2147483647L) >>> 5 & 255L));
         out[21 + outPos] = (byte)((int)((in[5 + inPos] & 2147483647L) >>> 13 & 255L));
         out[22 + outPos] = (byte)((int)((in[5 + inPos] & 2147483647L) >>> 21 & 255L));
         out[23 + outPos] = (byte)((int)(((in[5 + inPos] & 2147483647L) >>> 29 | (in[6 + inPos] & 2147483647L) << 2) & 255L));
         out[24 + outPos] = (byte)((int)((in[6 + inPos] & 2147483647L) >>> 6 & 255L));
         out[25 + outPos] = (byte)((int)((in[6 + inPos] & 2147483647L) >>> 14 & 255L));
         out[26 + outPos] = (byte)((int)((in[6 + inPos] & 2147483647L) >>> 22 & 255L));
         out[27 + outPos] = (byte)((int)(((in[6 + inPos] & 2147483647L) >>> 30 | (in[7 + inPos] & 2147483647L) << 1) & 255L));
         out[28 + outPos] = (byte)((int)((in[7 + inPos] & 2147483647L) >>> 7 & 255L));
         out[29 + outPos] = (byte)((int)((in[7 + inPos] & 2147483647L) >>> 15 & 255L));
         out[30 + outPos] = (byte)((int)((in[7 + inPos] & 2147483647L) >>> 23 & 255L));
         out[31 + outPos] = (byte)((int)(in[8 + inPos] & 2147483647L & 255L));
         out[32 + outPos] = (byte)((int)((in[8 + inPos] & 2147483647L) >>> 8 & 255L));
         out[33 + outPos] = (byte)((int)((in[8 + inPos] & 2147483647L) >>> 16 & 255L));
         out[34 + outPos] = (byte)((int)(((in[8 + inPos] & 2147483647L) >>> 24 | (in[9 + inPos] & 2147483647L) << 7) & 255L));
         out[35 + outPos] = (byte)((int)((in[9 + inPos] & 2147483647L) >>> 1 & 255L));
         out[36 + outPos] = (byte)((int)((in[9 + inPos] & 2147483647L) >>> 9 & 255L));
         out[37 + outPos] = (byte)((int)((in[9 + inPos] & 2147483647L) >>> 17 & 255L));
         out[38 + outPos] = (byte)((int)(((in[9 + inPos] & 2147483647L) >>> 25 | (in[10 + inPos] & 2147483647L) << 6) & 255L));
         out[39 + outPos] = (byte)((int)((in[10 + inPos] & 2147483647L) >>> 2 & 255L));
         out[40 + outPos] = (byte)((int)((in[10 + inPos] & 2147483647L) >>> 10 & 255L));
         out[41 + outPos] = (byte)((int)((in[10 + inPos] & 2147483647L) >>> 18 & 255L));
         out[42 + outPos] = (byte)((int)(((in[10 + inPos] & 2147483647L) >>> 26 | (in[11 + inPos] & 2147483647L) << 5) & 255L));
         out[43 + outPos] = (byte)((int)((in[11 + inPos] & 2147483647L) >>> 3 & 255L));
         out[44 + outPos] = (byte)((int)((in[11 + inPos] & 2147483647L) >>> 11 & 255L));
         out[45 + outPos] = (byte)((int)((in[11 + inPos] & 2147483647L) >>> 19 & 255L));
         out[46 + outPos] = (byte)((int)(((in[11 + inPos] & 2147483647L) >>> 27 | (in[12 + inPos] & 2147483647L) << 4) & 255L));
         out[47 + outPos] = (byte)((int)((in[12 + inPos] & 2147483647L) >>> 4 & 255L));
         out[48 + outPos] = (byte)((int)((in[12 + inPos] & 2147483647L) >>> 12 & 255L));
         out[49 + outPos] = (byte)((int)((in[12 + inPos] & 2147483647L) >>> 20 & 255L));
         out[50 + outPos] = (byte)((int)(((in[12 + inPos] & 2147483647L) >>> 28 | (in[13 + inPos] & 2147483647L) << 3) & 255L));
         out[51 + outPos] = (byte)((int)((in[13 + inPos] & 2147483647L) >>> 5 & 255L));
         out[52 + outPos] = (byte)((int)((in[13 + inPos] & 2147483647L) >>> 13 & 255L));
         out[53 + outPos] = (byte)((int)((in[13 + inPos] & 2147483647L) >>> 21 & 255L));
         out[54 + outPos] = (byte)((int)(((in[13 + inPos] & 2147483647L) >>> 29 | (in[14 + inPos] & 2147483647L) << 2) & 255L));
         out[55 + outPos] = (byte)((int)((in[14 + inPos] & 2147483647L) >>> 6 & 255L));
         out[56 + outPos] = (byte)((int)((in[14 + inPos] & 2147483647L) >>> 14 & 255L));
         out[57 + outPos] = (byte)((int)((in[14 + inPos] & 2147483647L) >>> 22 & 255L));
         out[58 + outPos] = (byte)((int)(((in[14 + inPos] & 2147483647L) >>> 30 | (in[15 + inPos] & 2147483647L) << 1) & 255L));
         out[59 + outPos] = (byte)((int)((in[15 + inPos] & 2147483647L) >>> 7 & 255L));
         out[60 + outPos] = (byte)((int)((in[15 + inPos] & 2147483647L) >>> 15 & 255L));
         out[61 + outPos] = (byte)((int)((in[15 + inPos] & 2147483647L) >>> 23 & 255L));
         out[62 + outPos] = (byte)((int)(in[16 + inPos] & 2147483647L & 255L));
         out[63 + outPos] = (byte)((int)((in[16 + inPos] & 2147483647L) >>> 8 & 255L));
         out[64 + outPos] = (byte)((int)((in[16 + inPos] & 2147483647L) >>> 16 & 255L));
         out[65 + outPos] = (byte)((int)(((in[16 + inPos] & 2147483647L) >>> 24 | (in[17 + inPos] & 2147483647L) << 7) & 255L));
         out[66 + outPos] = (byte)((int)((in[17 + inPos] & 2147483647L) >>> 1 & 255L));
         out[67 + outPos] = (byte)((int)((in[17 + inPos] & 2147483647L) >>> 9 & 255L));
         out[68 + outPos] = (byte)((int)((in[17 + inPos] & 2147483647L) >>> 17 & 255L));
         out[69 + outPos] = (byte)((int)(((in[17 + inPos] & 2147483647L) >>> 25 | (in[18 + inPos] & 2147483647L) << 6) & 255L));
         out[70 + outPos] = (byte)((int)((in[18 + inPos] & 2147483647L) >>> 2 & 255L));
         out[71 + outPos] = (byte)((int)((in[18 + inPos] & 2147483647L) >>> 10 & 255L));
         out[72 + outPos] = (byte)((int)((in[18 + inPos] & 2147483647L) >>> 18 & 255L));
         out[73 + outPos] = (byte)((int)(((in[18 + inPos] & 2147483647L) >>> 26 | (in[19 + inPos] & 2147483647L) << 5) & 255L));
         out[74 + outPos] = (byte)((int)((in[19 + inPos] & 2147483647L) >>> 3 & 255L));
         out[75 + outPos] = (byte)((int)((in[19 + inPos] & 2147483647L) >>> 11 & 255L));
         out[76 + outPos] = (byte)((int)((in[19 + inPos] & 2147483647L) >>> 19 & 255L));
         out[77 + outPos] = (byte)((int)(((in[19 + inPos] & 2147483647L) >>> 27 | (in[20 + inPos] & 2147483647L) << 4) & 255L));
         out[78 + outPos] = (byte)((int)((in[20 + inPos] & 2147483647L) >>> 4 & 255L));
         out[79 + outPos] = (byte)((int)((in[20 + inPos] & 2147483647L) >>> 12 & 255L));
         out[80 + outPos] = (byte)((int)((in[20 + inPos] & 2147483647L) >>> 20 & 255L));
         out[81 + outPos] = (byte)((int)(((in[20 + inPos] & 2147483647L) >>> 28 | (in[21 + inPos] & 2147483647L) << 3) & 255L));
         out[82 + outPos] = (byte)((int)((in[21 + inPos] & 2147483647L) >>> 5 & 255L));
         out[83 + outPos] = (byte)((int)((in[21 + inPos] & 2147483647L) >>> 13 & 255L));
         out[84 + outPos] = (byte)((int)((in[21 + inPos] & 2147483647L) >>> 21 & 255L));
         out[85 + outPos] = (byte)((int)(((in[21 + inPos] & 2147483647L) >>> 29 | (in[22 + inPos] & 2147483647L) << 2) & 255L));
         out[86 + outPos] = (byte)((int)((in[22 + inPos] & 2147483647L) >>> 6 & 255L));
         out[87 + outPos] = (byte)((int)((in[22 + inPos] & 2147483647L) >>> 14 & 255L));
         out[88 + outPos] = (byte)((int)((in[22 + inPos] & 2147483647L) >>> 22 & 255L));
         out[89 + outPos] = (byte)((int)(((in[22 + inPos] & 2147483647L) >>> 30 | (in[23 + inPos] & 2147483647L) << 1) & 255L));
         out[90 + outPos] = (byte)((int)((in[23 + inPos] & 2147483647L) >>> 7 & 255L));
         out[91 + outPos] = (byte)((int)((in[23 + inPos] & 2147483647L) >>> 15 & 255L));
         out[92 + outPos] = (byte)((int)((in[23 + inPos] & 2147483647L) >>> 23 & 255L));
         out[93 + outPos] = (byte)((int)(in[24 + inPos] & 2147483647L & 255L));
         out[94 + outPos] = (byte)((int)((in[24 + inPos] & 2147483647L) >>> 8 & 255L));
         out[95 + outPos] = (byte)((int)((in[24 + inPos] & 2147483647L) >>> 16 & 255L));
         out[96 + outPos] = (byte)((int)(((in[24 + inPos] & 2147483647L) >>> 24 | (in[25 + inPos] & 2147483647L) << 7) & 255L));
         out[97 + outPos] = (byte)((int)((in[25 + inPos] & 2147483647L) >>> 1 & 255L));
         out[98 + outPos] = (byte)((int)((in[25 + inPos] & 2147483647L) >>> 9 & 255L));
         out[99 + outPos] = (byte)((int)((in[25 + inPos] & 2147483647L) >>> 17 & 255L));
         out[100 + outPos] = (byte)((int)(((in[25 + inPos] & 2147483647L) >>> 25 | (in[26 + inPos] & 2147483647L) << 6) & 255L));
         out[101 + outPos] = (byte)((int)((in[26 + inPos] & 2147483647L) >>> 2 & 255L));
         out[102 + outPos] = (byte)((int)((in[26 + inPos] & 2147483647L) >>> 10 & 255L));
         out[103 + outPos] = (byte)((int)((in[26 + inPos] & 2147483647L) >>> 18 & 255L));
         out[104 + outPos] = (byte)((int)(((in[26 + inPos] & 2147483647L) >>> 26 | (in[27 + inPos] & 2147483647L) << 5) & 255L));
         out[105 + outPos] = (byte)((int)((in[27 + inPos] & 2147483647L) >>> 3 & 255L));
         out[106 + outPos] = (byte)((int)((in[27 + inPos] & 2147483647L) >>> 11 & 255L));
         out[107 + outPos] = (byte)((int)((in[27 + inPos] & 2147483647L) >>> 19 & 255L));
         out[108 + outPos] = (byte)((int)(((in[27 + inPos] & 2147483647L) >>> 27 | (in[28 + inPos] & 2147483647L) << 4) & 255L));
         out[109 + outPos] = (byte)((int)((in[28 + inPos] & 2147483647L) >>> 4 & 255L));
         out[110 + outPos] = (byte)((int)((in[28 + inPos] & 2147483647L) >>> 12 & 255L));
         out[111 + outPos] = (byte)((int)((in[28 + inPos] & 2147483647L) >>> 20 & 255L));
         out[112 + outPos] = (byte)((int)(((in[28 + inPos] & 2147483647L) >>> 28 | (in[29 + inPos] & 2147483647L) << 3) & 255L));
         out[113 + outPos] = (byte)((int)((in[29 + inPos] & 2147483647L) >>> 5 & 255L));
         out[114 + outPos] = (byte)((int)((in[29 + inPos] & 2147483647L) >>> 13 & 255L));
         out[115 + outPos] = (byte)((int)((in[29 + inPos] & 2147483647L) >>> 21 & 255L));
         out[116 + outPos] = (byte)((int)(((in[29 + inPos] & 2147483647L) >>> 29 | (in[30 + inPos] & 2147483647L) << 2) & 255L));
         out[117 + outPos] = (byte)((int)((in[30 + inPos] & 2147483647L) >>> 6 & 255L));
         out[118 + outPos] = (byte)((int)((in[30 + inPos] & 2147483647L) >>> 14 & 255L));
         out[119 + outPos] = (byte)((int)((in[30 + inPos] & 2147483647L) >>> 22 & 255L));
         out[120 + outPos] = (byte)((int)(((in[30 + inPos] & 2147483647L) >>> 30 | (in[31 + inPos] & 2147483647L) << 1) & 255L));
         out[121 + outPos] = (byte)((int)((in[31 + inPos] & 2147483647L) >>> 7 & 255L));
         out[122 + outPos] = (byte)((int)((in[31 + inPos] & 2147483647L) >>> 15 & 255L));
         out[123 + outPos] = (byte)((int)((in[31 + inPos] & 2147483647L) >>> 23 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 2147483647L;
         out[1 + outPos] = (long)in[3 + inPos] >> 7 & 1L | (long)in[4 + inPos] << 1 & 511L | (long)in[5 + inPos] << 9 & 131071L | (long)in[6 + inPos] << 17 & 33554431L | (long)in[7 + inPos] << 25 & 2147483647L;
         out[2 + outPos] = (long)in[7 + inPos] >> 6 & 3L | (long)in[8 + inPos] << 2 & 1023L | (long)in[9 + inPos] << 10 & 262143L | (long)in[10 + inPos] << 18 & 67108863L | (long)in[11 + inPos] << 26 & 2147483647L;
         out[3 + outPos] = (long)in[11 + inPos] >> 5 & 7L | (long)in[12 + inPos] << 3 & 2047L | (long)in[13 + inPos] << 11 & 524287L | (long)in[14 + inPos] << 19 & 134217727L | (long)in[15 + inPos] << 27 & 2147483647L;
         out[4 + outPos] = (long)in[15 + inPos] >> 4 & 15L | (long)in[16 + inPos] << 4 & 4095L | (long)in[17 + inPos] << 12 & 1048575L | (long)in[18 + inPos] << 20 & 268435455L | (long)in[19 + inPos] << 28 & 2147483647L;
         out[5 + outPos] = (long)in[19 + inPos] >> 3 & 31L | (long)in[20 + inPos] << 5 & 8191L | (long)in[21 + inPos] << 13 & 2097151L | (long)in[22 + inPos] << 21 & 536870911L | (long)in[23 + inPos] << 29 & 2147483647L;
         out[6 + outPos] = (long)in[23 + inPos] >> 2 & 63L | (long)in[24 + inPos] << 6 & 16383L | (long)in[25 + inPos] << 14 & 4194303L | (long)in[26 + inPos] << 22 & 1073741823L | (long)in[27 + inPos] << 30 & 2147483647L;
         out[7 + outPos] = (long)in[27 + inPos] >> 1 & 127L | (long)in[28 + inPos] << 7 & 32767L | (long)in[29 + inPos] << 15 & 8388607L | (long)in[30 + inPos] << 23 & 2147483647L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 2147483647L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 7 & 1L | (long)in.get(4 + inPos) << 1 & 511L | (long)in.get(5 + inPos) << 9 & 131071L | (long)in.get(6 + inPos) << 17 & 33554431L | (long)in.get(7 + inPos) << 25 & 2147483647L;
         out[2 + outPos] = (long)in.get(7 + inPos) >> 6 & 3L | (long)in.get(8 + inPos) << 2 & 1023L | (long)in.get(9 + inPos) << 10 & 262143L | (long)in.get(10 + inPos) << 18 & 67108863L | (long)in.get(11 + inPos) << 26 & 2147483647L;
         out[3 + outPos] = (long)in.get(11 + inPos) >> 5 & 7L | (long)in.get(12 + inPos) << 3 & 2047L | (long)in.get(13 + inPos) << 11 & 524287L | (long)in.get(14 + inPos) << 19 & 134217727L | (long)in.get(15 + inPos) << 27 & 2147483647L;
         out[4 + outPos] = (long)in.get(15 + inPos) >> 4 & 15L | (long)in.get(16 + inPos) << 4 & 4095L | (long)in.get(17 + inPos) << 12 & 1048575L | (long)in.get(18 + inPos) << 20 & 268435455L | (long)in.get(19 + inPos) << 28 & 2147483647L;
         out[5 + outPos] = (long)in.get(19 + inPos) >> 3 & 31L | (long)in.get(20 + inPos) << 5 & 8191L | (long)in.get(21 + inPos) << 13 & 2097151L | (long)in.get(22 + inPos) << 21 & 536870911L | (long)in.get(23 + inPos) << 29 & 2147483647L;
         out[6 + outPos] = (long)in.get(23 + inPos) >> 2 & 63L | (long)in.get(24 + inPos) << 6 & 16383L | (long)in.get(25 + inPos) << 14 & 4194303L | (long)in.get(26 + inPos) << 22 & 1073741823L | (long)in.get(27 + inPos) << 30 & 2147483647L;
         out[7 + outPos] = (long)in.get(27 + inPos) >> 1 & 127L | (long)in.get(28 + inPos) << 7 & 32767L | (long)in.get(29 + inPos) << 15 & 8388607L | (long)in.get(30 + inPos) << 23 & 2147483647L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 2147483647L;
         out[1 + outPos] = (long)in[3 + inPos] >> 7 & 1L | (long)in[4 + inPos] << 1 & 511L | (long)in[5 + inPos] << 9 & 131071L | (long)in[6 + inPos] << 17 & 33554431L | (long)in[7 + inPos] << 25 & 2147483647L;
         out[2 + outPos] = (long)in[7 + inPos] >> 6 & 3L | (long)in[8 + inPos] << 2 & 1023L | (long)in[9 + inPos] << 10 & 262143L | (long)in[10 + inPos] << 18 & 67108863L | (long)in[11 + inPos] << 26 & 2147483647L;
         out[3 + outPos] = (long)in[11 + inPos] >> 5 & 7L | (long)in[12 + inPos] << 3 & 2047L | (long)in[13 + inPos] << 11 & 524287L | (long)in[14 + inPos] << 19 & 134217727L | (long)in[15 + inPos] << 27 & 2147483647L;
         out[4 + outPos] = (long)in[15 + inPos] >> 4 & 15L | (long)in[16 + inPos] << 4 & 4095L | (long)in[17 + inPos] << 12 & 1048575L | (long)in[18 + inPos] << 20 & 268435455L | (long)in[19 + inPos] << 28 & 2147483647L;
         out[5 + outPos] = (long)in[19 + inPos] >> 3 & 31L | (long)in[20 + inPos] << 5 & 8191L | (long)in[21 + inPos] << 13 & 2097151L | (long)in[22 + inPos] << 21 & 536870911L | (long)in[23 + inPos] << 29 & 2147483647L;
         out[6 + outPos] = (long)in[23 + inPos] >> 2 & 63L | (long)in[24 + inPos] << 6 & 16383L | (long)in[25 + inPos] << 14 & 4194303L | (long)in[26 + inPos] << 22 & 1073741823L | (long)in[27 + inPos] << 30 & 2147483647L;
         out[7 + outPos] = (long)in[27 + inPos] >> 1 & 127L | (long)in[28 + inPos] << 7 & 32767L | (long)in[29 + inPos] << 15 & 8388607L | (long)in[30 + inPos] << 23 & 2147483647L;
         out[8 + outPos] = (long)in[31 + inPos] & 255L | (long)in[32 + inPos] << 8 & 65535L | (long)in[33 + inPos] << 16 & 16777215L | (long)in[34 + inPos] << 24 & 2147483647L;
         out[9 + outPos] = (long)in[34 + inPos] >> 7 & 1L | (long)in[35 + inPos] << 1 & 511L | (long)in[36 + inPos] << 9 & 131071L | (long)in[37 + inPos] << 17 & 33554431L | (long)in[38 + inPos] << 25 & 2147483647L;
         out[10 + outPos] = (long)in[38 + inPos] >> 6 & 3L | (long)in[39 + inPos] << 2 & 1023L | (long)in[40 + inPos] << 10 & 262143L | (long)in[41 + inPos] << 18 & 67108863L | (long)in[42 + inPos] << 26 & 2147483647L;
         out[11 + outPos] = (long)in[42 + inPos] >> 5 & 7L | (long)in[43 + inPos] << 3 & 2047L | (long)in[44 + inPos] << 11 & 524287L | (long)in[45 + inPos] << 19 & 134217727L | (long)in[46 + inPos] << 27 & 2147483647L;
         out[12 + outPos] = (long)in[46 + inPos] >> 4 & 15L | (long)in[47 + inPos] << 4 & 4095L | (long)in[48 + inPos] << 12 & 1048575L | (long)in[49 + inPos] << 20 & 268435455L | (long)in[50 + inPos] << 28 & 2147483647L;
         out[13 + outPos] = (long)in[50 + inPos] >> 3 & 31L | (long)in[51 + inPos] << 5 & 8191L | (long)in[52 + inPos] << 13 & 2097151L | (long)in[53 + inPos] << 21 & 536870911L | (long)in[54 + inPos] << 29 & 2147483647L;
         out[14 + outPos] = (long)in[54 + inPos] >> 2 & 63L | (long)in[55 + inPos] << 6 & 16383L | (long)in[56 + inPos] << 14 & 4194303L | (long)in[57 + inPos] << 22 & 1073741823L | (long)in[58 + inPos] << 30 & 2147483647L;
         out[15 + outPos] = (long)in[58 + inPos] >> 1 & 127L | (long)in[59 + inPos] << 7 & 32767L | (long)in[60 + inPos] << 15 & 8388607L | (long)in[61 + inPos] << 23 & 2147483647L;
         out[16 + outPos] = (long)in[62 + inPos] & 255L | (long)in[63 + inPos] << 8 & 65535L | (long)in[64 + inPos] << 16 & 16777215L | (long)in[65 + inPos] << 24 & 2147483647L;
         out[17 + outPos] = (long)in[65 + inPos] >> 7 & 1L | (long)in[66 + inPos] << 1 & 511L | (long)in[67 + inPos] << 9 & 131071L | (long)in[68 + inPos] << 17 & 33554431L | (long)in[69 + inPos] << 25 & 2147483647L;
         out[18 + outPos] = (long)in[69 + inPos] >> 6 & 3L | (long)in[70 + inPos] << 2 & 1023L | (long)in[71 + inPos] << 10 & 262143L | (long)in[72 + inPos] << 18 & 67108863L | (long)in[73 + inPos] << 26 & 2147483647L;
         out[19 + outPos] = (long)in[73 + inPos] >> 5 & 7L | (long)in[74 + inPos] << 3 & 2047L | (long)in[75 + inPos] << 11 & 524287L | (long)in[76 + inPos] << 19 & 134217727L | (long)in[77 + inPos] << 27 & 2147483647L;
         out[20 + outPos] = (long)in[77 + inPos] >> 4 & 15L | (long)in[78 + inPos] << 4 & 4095L | (long)in[79 + inPos] << 12 & 1048575L | (long)in[80 + inPos] << 20 & 268435455L | (long)in[81 + inPos] << 28 & 2147483647L;
         out[21 + outPos] = (long)in[81 + inPos] >> 3 & 31L | (long)in[82 + inPos] << 5 & 8191L | (long)in[83 + inPos] << 13 & 2097151L | (long)in[84 + inPos] << 21 & 536870911L | (long)in[85 + inPos] << 29 & 2147483647L;
         out[22 + outPos] = (long)in[85 + inPos] >> 2 & 63L | (long)in[86 + inPos] << 6 & 16383L | (long)in[87 + inPos] << 14 & 4194303L | (long)in[88 + inPos] << 22 & 1073741823L | (long)in[89 + inPos] << 30 & 2147483647L;
         out[23 + outPos] = (long)in[89 + inPos] >> 1 & 127L | (long)in[90 + inPos] << 7 & 32767L | (long)in[91 + inPos] << 15 & 8388607L | (long)in[92 + inPos] << 23 & 2147483647L;
         out[24 + outPos] = (long)in[93 + inPos] & 255L | (long)in[94 + inPos] << 8 & 65535L | (long)in[95 + inPos] << 16 & 16777215L | (long)in[96 + inPos] << 24 & 2147483647L;
         out[25 + outPos] = (long)in[96 + inPos] >> 7 & 1L | (long)in[97 + inPos] << 1 & 511L | (long)in[98 + inPos] << 9 & 131071L | (long)in[99 + inPos] << 17 & 33554431L | (long)in[100 + inPos] << 25 & 2147483647L;
         out[26 + outPos] = (long)in[100 + inPos] >> 6 & 3L | (long)in[101 + inPos] << 2 & 1023L | (long)in[102 + inPos] << 10 & 262143L | (long)in[103 + inPos] << 18 & 67108863L | (long)in[104 + inPos] << 26 & 2147483647L;
         out[27 + outPos] = (long)in[104 + inPos] >> 5 & 7L | (long)in[105 + inPos] << 3 & 2047L | (long)in[106 + inPos] << 11 & 524287L | (long)in[107 + inPos] << 19 & 134217727L | (long)in[108 + inPos] << 27 & 2147483647L;
         out[28 + outPos] = (long)in[108 + inPos] >> 4 & 15L | (long)in[109 + inPos] << 4 & 4095L | (long)in[110 + inPos] << 12 & 1048575L | (long)in[111 + inPos] << 20 & 268435455L | (long)in[112 + inPos] << 28 & 2147483647L;
         out[29 + outPos] = (long)in[112 + inPos] >> 3 & 31L | (long)in[113 + inPos] << 5 & 8191L | (long)in[114 + inPos] << 13 & 2097151L | (long)in[115 + inPos] << 21 & 536870911L | (long)in[116 + inPos] << 29 & 2147483647L;
         out[30 + outPos] = (long)in[116 + inPos] >> 2 & 63L | (long)in[117 + inPos] << 6 & 16383L | (long)in[118 + inPos] << 14 & 4194303L | (long)in[119 + inPos] << 22 & 1073741823L | (long)in[120 + inPos] << 30 & 2147483647L;
         out[31 + outPos] = (long)in[120 + inPos] >> 1 & 127L | (long)in[121 + inPos] << 7 & 32767L | (long)in[122 + inPos] << 15 & 8388607L | (long)in[123 + inPos] << 23 & 2147483647L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 2147483647L;
         out[1 + outPos] = (long)in.get(3 + inPos) >> 7 & 1L | (long)in.get(4 + inPos) << 1 & 511L | (long)in.get(5 + inPos) << 9 & 131071L | (long)in.get(6 + inPos) << 17 & 33554431L | (long)in.get(7 + inPos) << 25 & 2147483647L;
         out[2 + outPos] = (long)in.get(7 + inPos) >> 6 & 3L | (long)in.get(8 + inPos) << 2 & 1023L | (long)in.get(9 + inPos) << 10 & 262143L | (long)in.get(10 + inPos) << 18 & 67108863L | (long)in.get(11 + inPos) << 26 & 2147483647L;
         out[3 + outPos] = (long)in.get(11 + inPos) >> 5 & 7L | (long)in.get(12 + inPos) << 3 & 2047L | (long)in.get(13 + inPos) << 11 & 524287L | (long)in.get(14 + inPos) << 19 & 134217727L | (long)in.get(15 + inPos) << 27 & 2147483647L;
         out[4 + outPos] = (long)in.get(15 + inPos) >> 4 & 15L | (long)in.get(16 + inPos) << 4 & 4095L | (long)in.get(17 + inPos) << 12 & 1048575L | (long)in.get(18 + inPos) << 20 & 268435455L | (long)in.get(19 + inPos) << 28 & 2147483647L;
         out[5 + outPos] = (long)in.get(19 + inPos) >> 3 & 31L | (long)in.get(20 + inPos) << 5 & 8191L | (long)in.get(21 + inPos) << 13 & 2097151L | (long)in.get(22 + inPos) << 21 & 536870911L | (long)in.get(23 + inPos) << 29 & 2147483647L;
         out[6 + outPos] = (long)in.get(23 + inPos) >> 2 & 63L | (long)in.get(24 + inPos) << 6 & 16383L | (long)in.get(25 + inPos) << 14 & 4194303L | (long)in.get(26 + inPos) << 22 & 1073741823L | (long)in.get(27 + inPos) << 30 & 2147483647L;
         out[7 + outPos] = (long)in.get(27 + inPos) >> 1 & 127L | (long)in.get(28 + inPos) << 7 & 32767L | (long)in.get(29 + inPos) << 15 & 8388607L | (long)in.get(30 + inPos) << 23 & 2147483647L;
         out[8 + outPos] = (long)in.get(31 + inPos) & 255L | (long)in.get(32 + inPos) << 8 & 65535L | (long)in.get(33 + inPos) << 16 & 16777215L | (long)in.get(34 + inPos) << 24 & 2147483647L;
         out[9 + outPos] = (long)in.get(34 + inPos) >> 7 & 1L | (long)in.get(35 + inPos) << 1 & 511L | (long)in.get(36 + inPos) << 9 & 131071L | (long)in.get(37 + inPos) << 17 & 33554431L | (long)in.get(38 + inPos) << 25 & 2147483647L;
         out[10 + outPos] = (long)in.get(38 + inPos) >> 6 & 3L | (long)in.get(39 + inPos) << 2 & 1023L | (long)in.get(40 + inPos) << 10 & 262143L | (long)in.get(41 + inPos) << 18 & 67108863L | (long)in.get(42 + inPos) << 26 & 2147483647L;
         out[11 + outPos] = (long)in.get(42 + inPos) >> 5 & 7L | (long)in.get(43 + inPos) << 3 & 2047L | (long)in.get(44 + inPos) << 11 & 524287L | (long)in.get(45 + inPos) << 19 & 134217727L | (long)in.get(46 + inPos) << 27 & 2147483647L;
         out[12 + outPos] = (long)in.get(46 + inPos) >> 4 & 15L | (long)in.get(47 + inPos) << 4 & 4095L | (long)in.get(48 + inPos) << 12 & 1048575L | (long)in.get(49 + inPos) << 20 & 268435455L | (long)in.get(50 + inPos) << 28 & 2147483647L;
         out[13 + outPos] = (long)in.get(50 + inPos) >> 3 & 31L | (long)in.get(51 + inPos) << 5 & 8191L | (long)in.get(52 + inPos) << 13 & 2097151L | (long)in.get(53 + inPos) << 21 & 536870911L | (long)in.get(54 + inPos) << 29 & 2147483647L;
         out[14 + outPos] = (long)in.get(54 + inPos) >> 2 & 63L | (long)in.get(55 + inPos) << 6 & 16383L | (long)in.get(56 + inPos) << 14 & 4194303L | (long)in.get(57 + inPos) << 22 & 1073741823L | (long)in.get(58 + inPos) << 30 & 2147483647L;
         out[15 + outPos] = (long)in.get(58 + inPos) >> 1 & 127L | (long)in.get(59 + inPos) << 7 & 32767L | (long)in.get(60 + inPos) << 15 & 8388607L | (long)in.get(61 + inPos) << 23 & 2147483647L;
         out[16 + outPos] = (long)in.get(62 + inPos) & 255L | (long)in.get(63 + inPos) << 8 & 65535L | (long)in.get(64 + inPos) << 16 & 16777215L | (long)in.get(65 + inPos) << 24 & 2147483647L;
         out[17 + outPos] = (long)in.get(65 + inPos) >> 7 & 1L | (long)in.get(66 + inPos) << 1 & 511L | (long)in.get(67 + inPos) << 9 & 131071L | (long)in.get(68 + inPos) << 17 & 33554431L | (long)in.get(69 + inPos) << 25 & 2147483647L;
         out[18 + outPos] = (long)in.get(69 + inPos) >> 6 & 3L | (long)in.get(70 + inPos) << 2 & 1023L | (long)in.get(71 + inPos) << 10 & 262143L | (long)in.get(72 + inPos) << 18 & 67108863L | (long)in.get(73 + inPos) << 26 & 2147483647L;
         out[19 + outPos] = (long)in.get(73 + inPos) >> 5 & 7L | (long)in.get(74 + inPos) << 3 & 2047L | (long)in.get(75 + inPos) << 11 & 524287L | (long)in.get(76 + inPos) << 19 & 134217727L | (long)in.get(77 + inPos) << 27 & 2147483647L;
         out[20 + outPos] = (long)in.get(77 + inPos) >> 4 & 15L | (long)in.get(78 + inPos) << 4 & 4095L | (long)in.get(79 + inPos) << 12 & 1048575L | (long)in.get(80 + inPos) << 20 & 268435455L | (long)in.get(81 + inPos) << 28 & 2147483647L;
         out[21 + outPos] = (long)in.get(81 + inPos) >> 3 & 31L | (long)in.get(82 + inPos) << 5 & 8191L | (long)in.get(83 + inPos) << 13 & 2097151L | (long)in.get(84 + inPos) << 21 & 536870911L | (long)in.get(85 + inPos) << 29 & 2147483647L;
         out[22 + outPos] = (long)in.get(85 + inPos) >> 2 & 63L | (long)in.get(86 + inPos) << 6 & 16383L | (long)in.get(87 + inPos) << 14 & 4194303L | (long)in.get(88 + inPos) << 22 & 1073741823L | (long)in.get(89 + inPos) << 30 & 2147483647L;
         out[23 + outPos] = (long)in.get(89 + inPos) >> 1 & 127L | (long)in.get(90 + inPos) << 7 & 32767L | (long)in.get(91 + inPos) << 15 & 8388607L | (long)in.get(92 + inPos) << 23 & 2147483647L;
         out[24 + outPos] = (long)in.get(93 + inPos) & 255L | (long)in.get(94 + inPos) << 8 & 65535L | (long)in.get(95 + inPos) << 16 & 16777215L | (long)in.get(96 + inPos) << 24 & 2147483647L;
         out[25 + outPos] = (long)in.get(96 + inPos) >> 7 & 1L | (long)in.get(97 + inPos) << 1 & 511L | (long)in.get(98 + inPos) << 9 & 131071L | (long)in.get(99 + inPos) << 17 & 33554431L | (long)in.get(100 + inPos) << 25 & 2147483647L;
         out[26 + outPos] = (long)in.get(100 + inPos) >> 6 & 3L | (long)in.get(101 + inPos) << 2 & 1023L | (long)in.get(102 + inPos) << 10 & 262143L | (long)in.get(103 + inPos) << 18 & 67108863L | (long)in.get(104 + inPos) << 26 & 2147483647L;
         out[27 + outPos] = (long)in.get(104 + inPos) >> 5 & 7L | (long)in.get(105 + inPos) << 3 & 2047L | (long)in.get(106 + inPos) << 11 & 524287L | (long)in.get(107 + inPos) << 19 & 134217727L | (long)in.get(108 + inPos) << 27 & 2147483647L;
         out[28 + outPos] = (long)in.get(108 + inPos) >> 4 & 15L | (long)in.get(109 + inPos) << 4 & 4095L | (long)in.get(110 + inPos) << 12 & 1048575L | (long)in.get(111 + inPos) << 20 & 268435455L | (long)in.get(112 + inPos) << 28 & 2147483647L;
         out[29 + outPos] = (long)in.get(112 + inPos) >> 3 & 31L | (long)in.get(113 + inPos) << 5 & 8191L | (long)in.get(114 + inPos) << 13 & 2097151L | (long)in.get(115 + inPos) << 21 & 536870911L | (long)in.get(116 + inPos) << 29 & 2147483647L;
         out[30 + outPos] = (long)in.get(116 + inPos) >> 2 & 63L | (long)in.get(117 + inPos) << 6 & 16383L | (long)in.get(118 + inPos) << 14 & 4194303L | (long)in.get(119 + inPos) << 22 & 1073741823L | (long)in.get(120 + inPos) << 30 & 2147483647L;
         out[31 + outPos] = (long)in.get(120 + inPos) >> 1 & 127L | (long)in.get(121 + inPos) << 7 & 32767L | (long)in.get(122 + inPos) << 15 & 8388607L | (long)in.get(123 + inPos) << 23 & 2147483647L;
      }
   }

   private static final class Packer32 extends BytePackerForLong {
      private Packer32() {
         super(32);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 4294967295L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 4294967295L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 4294967295L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 4294967295L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(in[1 + inPos] & 4294967295L & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 4294967295L) >>> 8 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 4294967295L) >>> 16 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 4294967295L) >>> 24 & 255L));
         out[8 + outPos] = (byte)((int)(in[2 + inPos] & 4294967295L & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 4294967295L) >>> 8 & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 4294967295L) >>> 16 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 4294967295L) >>> 24 & 255L));
         out[12 + outPos] = (byte)((int)(in[3 + inPos] & 4294967295L & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 4294967295L) >>> 8 & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 4294967295L) >>> 16 & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 4294967295L) >>> 24 & 255L));
         out[16 + outPos] = (byte)((int)(in[4 + inPos] & 4294967295L & 255L));
         out[17 + outPos] = (byte)((int)((in[4 + inPos] & 4294967295L) >>> 8 & 255L));
         out[18 + outPos] = (byte)((int)((in[4 + inPos] & 4294967295L) >>> 16 & 255L));
         out[19 + outPos] = (byte)((int)((in[4 + inPos] & 4294967295L) >>> 24 & 255L));
         out[20 + outPos] = (byte)((int)(in[5 + inPos] & 4294967295L & 255L));
         out[21 + outPos] = (byte)((int)((in[5 + inPos] & 4294967295L) >>> 8 & 255L));
         out[22 + outPos] = (byte)((int)((in[5 + inPos] & 4294967295L) >>> 16 & 255L));
         out[23 + outPos] = (byte)((int)((in[5 + inPos] & 4294967295L) >>> 24 & 255L));
         out[24 + outPos] = (byte)((int)(in[6 + inPos] & 4294967295L & 255L));
         out[25 + outPos] = (byte)((int)((in[6 + inPos] & 4294967295L) >>> 8 & 255L));
         out[26 + outPos] = (byte)((int)((in[6 + inPos] & 4294967295L) >>> 16 & 255L));
         out[27 + outPos] = (byte)((int)((in[6 + inPos] & 4294967295L) >>> 24 & 255L));
         out[28 + outPos] = (byte)((int)(in[7 + inPos] & 4294967295L & 255L));
         out[29 + outPos] = (byte)((int)((in[7 + inPos] & 4294967295L) >>> 8 & 255L));
         out[30 + outPos] = (byte)((int)((in[7 + inPos] & 4294967295L) >>> 16 & 255L));
         out[31 + outPos] = (byte)((int)((in[7 + inPos] & 4294967295L) >>> 24 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 4294967295L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 4294967295L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 4294967295L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 4294967295L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(in[1 + inPos] & 4294967295L & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 4294967295L) >>> 8 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 4294967295L) >>> 16 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 4294967295L) >>> 24 & 255L));
         out[8 + outPos] = (byte)((int)(in[2 + inPos] & 4294967295L & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 4294967295L) >>> 8 & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 4294967295L) >>> 16 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 4294967295L) >>> 24 & 255L));
         out[12 + outPos] = (byte)((int)(in[3 + inPos] & 4294967295L & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 4294967295L) >>> 8 & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 4294967295L) >>> 16 & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 4294967295L) >>> 24 & 255L));
         out[16 + outPos] = (byte)((int)(in[4 + inPos] & 4294967295L & 255L));
         out[17 + outPos] = (byte)((int)((in[4 + inPos] & 4294967295L) >>> 8 & 255L));
         out[18 + outPos] = (byte)((int)((in[4 + inPos] & 4294967295L) >>> 16 & 255L));
         out[19 + outPos] = (byte)((int)((in[4 + inPos] & 4294967295L) >>> 24 & 255L));
         out[20 + outPos] = (byte)((int)(in[5 + inPos] & 4294967295L & 255L));
         out[21 + outPos] = (byte)((int)((in[5 + inPos] & 4294967295L) >>> 8 & 255L));
         out[22 + outPos] = (byte)((int)((in[5 + inPos] & 4294967295L) >>> 16 & 255L));
         out[23 + outPos] = (byte)((int)((in[5 + inPos] & 4294967295L) >>> 24 & 255L));
         out[24 + outPos] = (byte)((int)(in[6 + inPos] & 4294967295L & 255L));
         out[25 + outPos] = (byte)((int)((in[6 + inPos] & 4294967295L) >>> 8 & 255L));
         out[26 + outPos] = (byte)((int)((in[6 + inPos] & 4294967295L) >>> 16 & 255L));
         out[27 + outPos] = (byte)((int)((in[6 + inPos] & 4294967295L) >>> 24 & 255L));
         out[28 + outPos] = (byte)((int)(in[7 + inPos] & 4294967295L & 255L));
         out[29 + outPos] = (byte)((int)((in[7 + inPos] & 4294967295L) >>> 8 & 255L));
         out[30 + outPos] = (byte)((int)((in[7 + inPos] & 4294967295L) >>> 16 & 255L));
         out[31 + outPos] = (byte)((int)((in[7 + inPos] & 4294967295L) >>> 24 & 255L));
         out[32 + outPos] = (byte)((int)(in[8 + inPos] & 4294967295L & 255L));
         out[33 + outPos] = (byte)((int)((in[8 + inPos] & 4294967295L) >>> 8 & 255L));
         out[34 + outPos] = (byte)((int)((in[8 + inPos] & 4294967295L) >>> 16 & 255L));
         out[35 + outPos] = (byte)((int)((in[8 + inPos] & 4294967295L) >>> 24 & 255L));
         out[36 + outPos] = (byte)((int)(in[9 + inPos] & 4294967295L & 255L));
         out[37 + outPos] = (byte)((int)((in[9 + inPos] & 4294967295L) >>> 8 & 255L));
         out[38 + outPos] = (byte)((int)((in[9 + inPos] & 4294967295L) >>> 16 & 255L));
         out[39 + outPos] = (byte)((int)((in[9 + inPos] & 4294967295L) >>> 24 & 255L));
         out[40 + outPos] = (byte)((int)(in[10 + inPos] & 4294967295L & 255L));
         out[41 + outPos] = (byte)((int)((in[10 + inPos] & 4294967295L) >>> 8 & 255L));
         out[42 + outPos] = (byte)((int)((in[10 + inPos] & 4294967295L) >>> 16 & 255L));
         out[43 + outPos] = (byte)((int)((in[10 + inPos] & 4294967295L) >>> 24 & 255L));
         out[44 + outPos] = (byte)((int)(in[11 + inPos] & 4294967295L & 255L));
         out[45 + outPos] = (byte)((int)((in[11 + inPos] & 4294967295L) >>> 8 & 255L));
         out[46 + outPos] = (byte)((int)((in[11 + inPos] & 4294967295L) >>> 16 & 255L));
         out[47 + outPos] = (byte)((int)((in[11 + inPos] & 4294967295L) >>> 24 & 255L));
         out[48 + outPos] = (byte)((int)(in[12 + inPos] & 4294967295L & 255L));
         out[49 + outPos] = (byte)((int)((in[12 + inPos] & 4294967295L) >>> 8 & 255L));
         out[50 + outPos] = (byte)((int)((in[12 + inPos] & 4294967295L) >>> 16 & 255L));
         out[51 + outPos] = (byte)((int)((in[12 + inPos] & 4294967295L) >>> 24 & 255L));
         out[52 + outPos] = (byte)((int)(in[13 + inPos] & 4294967295L & 255L));
         out[53 + outPos] = (byte)((int)((in[13 + inPos] & 4294967295L) >>> 8 & 255L));
         out[54 + outPos] = (byte)((int)((in[13 + inPos] & 4294967295L) >>> 16 & 255L));
         out[55 + outPos] = (byte)((int)((in[13 + inPos] & 4294967295L) >>> 24 & 255L));
         out[56 + outPos] = (byte)((int)(in[14 + inPos] & 4294967295L & 255L));
         out[57 + outPos] = (byte)((int)((in[14 + inPos] & 4294967295L) >>> 8 & 255L));
         out[58 + outPos] = (byte)((int)((in[14 + inPos] & 4294967295L) >>> 16 & 255L));
         out[59 + outPos] = (byte)((int)((in[14 + inPos] & 4294967295L) >>> 24 & 255L));
         out[60 + outPos] = (byte)((int)(in[15 + inPos] & 4294967295L & 255L));
         out[61 + outPos] = (byte)((int)((in[15 + inPos] & 4294967295L) >>> 8 & 255L));
         out[62 + outPos] = (byte)((int)((in[15 + inPos] & 4294967295L) >>> 16 & 255L));
         out[63 + outPos] = (byte)((int)((in[15 + inPos] & 4294967295L) >>> 24 & 255L));
         out[64 + outPos] = (byte)((int)(in[16 + inPos] & 4294967295L & 255L));
         out[65 + outPos] = (byte)((int)((in[16 + inPos] & 4294967295L) >>> 8 & 255L));
         out[66 + outPos] = (byte)((int)((in[16 + inPos] & 4294967295L) >>> 16 & 255L));
         out[67 + outPos] = (byte)((int)((in[16 + inPos] & 4294967295L) >>> 24 & 255L));
         out[68 + outPos] = (byte)((int)(in[17 + inPos] & 4294967295L & 255L));
         out[69 + outPos] = (byte)((int)((in[17 + inPos] & 4294967295L) >>> 8 & 255L));
         out[70 + outPos] = (byte)((int)((in[17 + inPos] & 4294967295L) >>> 16 & 255L));
         out[71 + outPos] = (byte)((int)((in[17 + inPos] & 4294967295L) >>> 24 & 255L));
         out[72 + outPos] = (byte)((int)(in[18 + inPos] & 4294967295L & 255L));
         out[73 + outPos] = (byte)((int)((in[18 + inPos] & 4294967295L) >>> 8 & 255L));
         out[74 + outPos] = (byte)((int)((in[18 + inPos] & 4294967295L) >>> 16 & 255L));
         out[75 + outPos] = (byte)((int)((in[18 + inPos] & 4294967295L) >>> 24 & 255L));
         out[76 + outPos] = (byte)((int)(in[19 + inPos] & 4294967295L & 255L));
         out[77 + outPos] = (byte)((int)((in[19 + inPos] & 4294967295L) >>> 8 & 255L));
         out[78 + outPos] = (byte)((int)((in[19 + inPos] & 4294967295L) >>> 16 & 255L));
         out[79 + outPos] = (byte)((int)((in[19 + inPos] & 4294967295L) >>> 24 & 255L));
         out[80 + outPos] = (byte)((int)(in[20 + inPos] & 4294967295L & 255L));
         out[81 + outPos] = (byte)((int)((in[20 + inPos] & 4294967295L) >>> 8 & 255L));
         out[82 + outPos] = (byte)((int)((in[20 + inPos] & 4294967295L) >>> 16 & 255L));
         out[83 + outPos] = (byte)((int)((in[20 + inPos] & 4294967295L) >>> 24 & 255L));
         out[84 + outPos] = (byte)((int)(in[21 + inPos] & 4294967295L & 255L));
         out[85 + outPos] = (byte)((int)((in[21 + inPos] & 4294967295L) >>> 8 & 255L));
         out[86 + outPos] = (byte)((int)((in[21 + inPos] & 4294967295L) >>> 16 & 255L));
         out[87 + outPos] = (byte)((int)((in[21 + inPos] & 4294967295L) >>> 24 & 255L));
         out[88 + outPos] = (byte)((int)(in[22 + inPos] & 4294967295L & 255L));
         out[89 + outPos] = (byte)((int)((in[22 + inPos] & 4294967295L) >>> 8 & 255L));
         out[90 + outPos] = (byte)((int)((in[22 + inPos] & 4294967295L) >>> 16 & 255L));
         out[91 + outPos] = (byte)((int)((in[22 + inPos] & 4294967295L) >>> 24 & 255L));
         out[92 + outPos] = (byte)((int)(in[23 + inPos] & 4294967295L & 255L));
         out[93 + outPos] = (byte)((int)((in[23 + inPos] & 4294967295L) >>> 8 & 255L));
         out[94 + outPos] = (byte)((int)((in[23 + inPos] & 4294967295L) >>> 16 & 255L));
         out[95 + outPos] = (byte)((int)((in[23 + inPos] & 4294967295L) >>> 24 & 255L));
         out[96 + outPos] = (byte)((int)(in[24 + inPos] & 4294967295L & 255L));
         out[97 + outPos] = (byte)((int)((in[24 + inPos] & 4294967295L) >>> 8 & 255L));
         out[98 + outPos] = (byte)((int)((in[24 + inPos] & 4294967295L) >>> 16 & 255L));
         out[99 + outPos] = (byte)((int)((in[24 + inPos] & 4294967295L) >>> 24 & 255L));
         out[100 + outPos] = (byte)((int)(in[25 + inPos] & 4294967295L & 255L));
         out[101 + outPos] = (byte)((int)((in[25 + inPos] & 4294967295L) >>> 8 & 255L));
         out[102 + outPos] = (byte)((int)((in[25 + inPos] & 4294967295L) >>> 16 & 255L));
         out[103 + outPos] = (byte)((int)((in[25 + inPos] & 4294967295L) >>> 24 & 255L));
         out[104 + outPos] = (byte)((int)(in[26 + inPos] & 4294967295L & 255L));
         out[105 + outPos] = (byte)((int)((in[26 + inPos] & 4294967295L) >>> 8 & 255L));
         out[106 + outPos] = (byte)((int)((in[26 + inPos] & 4294967295L) >>> 16 & 255L));
         out[107 + outPos] = (byte)((int)((in[26 + inPos] & 4294967295L) >>> 24 & 255L));
         out[108 + outPos] = (byte)((int)(in[27 + inPos] & 4294967295L & 255L));
         out[109 + outPos] = (byte)((int)((in[27 + inPos] & 4294967295L) >>> 8 & 255L));
         out[110 + outPos] = (byte)((int)((in[27 + inPos] & 4294967295L) >>> 16 & 255L));
         out[111 + outPos] = (byte)((int)((in[27 + inPos] & 4294967295L) >>> 24 & 255L));
         out[112 + outPos] = (byte)((int)(in[28 + inPos] & 4294967295L & 255L));
         out[113 + outPos] = (byte)((int)((in[28 + inPos] & 4294967295L) >>> 8 & 255L));
         out[114 + outPos] = (byte)((int)((in[28 + inPos] & 4294967295L) >>> 16 & 255L));
         out[115 + outPos] = (byte)((int)((in[28 + inPos] & 4294967295L) >>> 24 & 255L));
         out[116 + outPos] = (byte)((int)(in[29 + inPos] & 4294967295L & 255L));
         out[117 + outPos] = (byte)((int)((in[29 + inPos] & 4294967295L) >>> 8 & 255L));
         out[118 + outPos] = (byte)((int)((in[29 + inPos] & 4294967295L) >>> 16 & 255L));
         out[119 + outPos] = (byte)((int)((in[29 + inPos] & 4294967295L) >>> 24 & 255L));
         out[120 + outPos] = (byte)((int)(in[30 + inPos] & 4294967295L & 255L));
         out[121 + outPos] = (byte)((int)((in[30 + inPos] & 4294967295L) >>> 8 & 255L));
         out[122 + outPos] = (byte)((int)((in[30 + inPos] & 4294967295L) >>> 16 & 255L));
         out[123 + outPos] = (byte)((int)((in[30 + inPos] & 4294967295L) >>> 24 & 255L));
         out[124 + outPos] = (byte)((int)(in[31 + inPos] & 4294967295L & 255L));
         out[125 + outPos] = (byte)((int)((in[31 + inPos] & 4294967295L) >>> 8 & 255L));
         out[126 + outPos] = (byte)((int)((in[31 + inPos] & 4294967295L) >>> 16 & 255L));
         out[127 + outPos] = (byte)((int)((in[31 + inPos] & 4294967295L) >>> 24 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L;
         out[1 + outPos] = (long)in[4 + inPos] & 255L | (long)in[5 + inPos] << 8 & 65535L | (long)in[6 + inPos] << 16 & 16777215L | (long)in[7 + inPos] << 24 & 4294967295L;
         out[2 + outPos] = (long)in[8 + inPos] & 255L | (long)in[9 + inPos] << 8 & 65535L | (long)in[10 + inPos] << 16 & 16777215L | (long)in[11 + inPos] << 24 & 4294967295L;
         out[3 + outPos] = (long)in[12 + inPos] & 255L | (long)in[13 + inPos] << 8 & 65535L | (long)in[14 + inPos] << 16 & 16777215L | (long)in[15 + inPos] << 24 & 4294967295L;
         out[4 + outPos] = (long)in[16 + inPos] & 255L | (long)in[17 + inPos] << 8 & 65535L | (long)in[18 + inPos] << 16 & 16777215L | (long)in[19 + inPos] << 24 & 4294967295L;
         out[5 + outPos] = (long)in[20 + inPos] & 255L | (long)in[21 + inPos] << 8 & 65535L | (long)in[22 + inPos] << 16 & 16777215L | (long)in[23 + inPos] << 24 & 4294967295L;
         out[6 + outPos] = (long)in[24 + inPos] & 255L | (long)in[25 + inPos] << 8 & 65535L | (long)in[26 + inPos] << 16 & 16777215L | (long)in[27 + inPos] << 24 & 4294967295L;
         out[7 + outPos] = (long)in[28 + inPos] & 255L | (long)in[29 + inPos] << 8 & 65535L | (long)in[30 + inPos] << 16 & 16777215L | (long)in[31 + inPos] << 24 & 4294967295L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L;
         out[1 + outPos] = (long)in.get(4 + inPos) & 255L | (long)in.get(5 + inPos) << 8 & 65535L | (long)in.get(6 + inPos) << 16 & 16777215L | (long)in.get(7 + inPos) << 24 & 4294967295L;
         out[2 + outPos] = (long)in.get(8 + inPos) & 255L | (long)in.get(9 + inPos) << 8 & 65535L | (long)in.get(10 + inPos) << 16 & 16777215L | (long)in.get(11 + inPos) << 24 & 4294967295L;
         out[3 + outPos] = (long)in.get(12 + inPos) & 255L | (long)in.get(13 + inPos) << 8 & 65535L | (long)in.get(14 + inPos) << 16 & 16777215L | (long)in.get(15 + inPos) << 24 & 4294967295L;
         out[4 + outPos] = (long)in.get(16 + inPos) & 255L | (long)in.get(17 + inPos) << 8 & 65535L | (long)in.get(18 + inPos) << 16 & 16777215L | (long)in.get(19 + inPos) << 24 & 4294967295L;
         out[5 + outPos] = (long)in.get(20 + inPos) & 255L | (long)in.get(21 + inPos) << 8 & 65535L | (long)in.get(22 + inPos) << 16 & 16777215L | (long)in.get(23 + inPos) << 24 & 4294967295L;
         out[6 + outPos] = (long)in.get(24 + inPos) & 255L | (long)in.get(25 + inPos) << 8 & 65535L | (long)in.get(26 + inPos) << 16 & 16777215L | (long)in.get(27 + inPos) << 24 & 4294967295L;
         out[7 + outPos] = (long)in.get(28 + inPos) & 255L | (long)in.get(29 + inPos) << 8 & 65535L | (long)in.get(30 + inPos) << 16 & 16777215L | (long)in.get(31 + inPos) << 24 & 4294967295L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L;
         out[1 + outPos] = (long)in[4 + inPos] & 255L | (long)in[5 + inPos] << 8 & 65535L | (long)in[6 + inPos] << 16 & 16777215L | (long)in[7 + inPos] << 24 & 4294967295L;
         out[2 + outPos] = (long)in[8 + inPos] & 255L | (long)in[9 + inPos] << 8 & 65535L | (long)in[10 + inPos] << 16 & 16777215L | (long)in[11 + inPos] << 24 & 4294967295L;
         out[3 + outPos] = (long)in[12 + inPos] & 255L | (long)in[13 + inPos] << 8 & 65535L | (long)in[14 + inPos] << 16 & 16777215L | (long)in[15 + inPos] << 24 & 4294967295L;
         out[4 + outPos] = (long)in[16 + inPos] & 255L | (long)in[17 + inPos] << 8 & 65535L | (long)in[18 + inPos] << 16 & 16777215L | (long)in[19 + inPos] << 24 & 4294967295L;
         out[5 + outPos] = (long)in[20 + inPos] & 255L | (long)in[21 + inPos] << 8 & 65535L | (long)in[22 + inPos] << 16 & 16777215L | (long)in[23 + inPos] << 24 & 4294967295L;
         out[6 + outPos] = (long)in[24 + inPos] & 255L | (long)in[25 + inPos] << 8 & 65535L | (long)in[26 + inPos] << 16 & 16777215L | (long)in[27 + inPos] << 24 & 4294967295L;
         out[7 + outPos] = (long)in[28 + inPos] & 255L | (long)in[29 + inPos] << 8 & 65535L | (long)in[30 + inPos] << 16 & 16777215L | (long)in[31 + inPos] << 24 & 4294967295L;
         out[8 + outPos] = (long)in[32 + inPos] & 255L | (long)in[33 + inPos] << 8 & 65535L | (long)in[34 + inPos] << 16 & 16777215L | (long)in[35 + inPos] << 24 & 4294967295L;
         out[9 + outPos] = (long)in[36 + inPos] & 255L | (long)in[37 + inPos] << 8 & 65535L | (long)in[38 + inPos] << 16 & 16777215L | (long)in[39 + inPos] << 24 & 4294967295L;
         out[10 + outPos] = (long)in[40 + inPos] & 255L | (long)in[41 + inPos] << 8 & 65535L | (long)in[42 + inPos] << 16 & 16777215L | (long)in[43 + inPos] << 24 & 4294967295L;
         out[11 + outPos] = (long)in[44 + inPos] & 255L | (long)in[45 + inPos] << 8 & 65535L | (long)in[46 + inPos] << 16 & 16777215L | (long)in[47 + inPos] << 24 & 4294967295L;
         out[12 + outPos] = (long)in[48 + inPos] & 255L | (long)in[49 + inPos] << 8 & 65535L | (long)in[50 + inPos] << 16 & 16777215L | (long)in[51 + inPos] << 24 & 4294967295L;
         out[13 + outPos] = (long)in[52 + inPos] & 255L | (long)in[53 + inPos] << 8 & 65535L | (long)in[54 + inPos] << 16 & 16777215L | (long)in[55 + inPos] << 24 & 4294967295L;
         out[14 + outPos] = (long)in[56 + inPos] & 255L | (long)in[57 + inPos] << 8 & 65535L | (long)in[58 + inPos] << 16 & 16777215L | (long)in[59 + inPos] << 24 & 4294967295L;
         out[15 + outPos] = (long)in[60 + inPos] & 255L | (long)in[61 + inPos] << 8 & 65535L | (long)in[62 + inPos] << 16 & 16777215L | (long)in[63 + inPos] << 24 & 4294967295L;
         out[16 + outPos] = (long)in[64 + inPos] & 255L | (long)in[65 + inPos] << 8 & 65535L | (long)in[66 + inPos] << 16 & 16777215L | (long)in[67 + inPos] << 24 & 4294967295L;
         out[17 + outPos] = (long)in[68 + inPos] & 255L | (long)in[69 + inPos] << 8 & 65535L | (long)in[70 + inPos] << 16 & 16777215L | (long)in[71 + inPos] << 24 & 4294967295L;
         out[18 + outPos] = (long)in[72 + inPos] & 255L | (long)in[73 + inPos] << 8 & 65535L | (long)in[74 + inPos] << 16 & 16777215L | (long)in[75 + inPos] << 24 & 4294967295L;
         out[19 + outPos] = (long)in[76 + inPos] & 255L | (long)in[77 + inPos] << 8 & 65535L | (long)in[78 + inPos] << 16 & 16777215L | (long)in[79 + inPos] << 24 & 4294967295L;
         out[20 + outPos] = (long)in[80 + inPos] & 255L | (long)in[81 + inPos] << 8 & 65535L | (long)in[82 + inPos] << 16 & 16777215L | (long)in[83 + inPos] << 24 & 4294967295L;
         out[21 + outPos] = (long)in[84 + inPos] & 255L | (long)in[85 + inPos] << 8 & 65535L | (long)in[86 + inPos] << 16 & 16777215L | (long)in[87 + inPos] << 24 & 4294967295L;
         out[22 + outPos] = (long)in[88 + inPos] & 255L | (long)in[89 + inPos] << 8 & 65535L | (long)in[90 + inPos] << 16 & 16777215L | (long)in[91 + inPos] << 24 & 4294967295L;
         out[23 + outPos] = (long)in[92 + inPos] & 255L | (long)in[93 + inPos] << 8 & 65535L | (long)in[94 + inPos] << 16 & 16777215L | (long)in[95 + inPos] << 24 & 4294967295L;
         out[24 + outPos] = (long)in[96 + inPos] & 255L | (long)in[97 + inPos] << 8 & 65535L | (long)in[98 + inPos] << 16 & 16777215L | (long)in[99 + inPos] << 24 & 4294967295L;
         out[25 + outPos] = (long)in[100 + inPos] & 255L | (long)in[101 + inPos] << 8 & 65535L | (long)in[102 + inPos] << 16 & 16777215L | (long)in[103 + inPos] << 24 & 4294967295L;
         out[26 + outPos] = (long)in[104 + inPos] & 255L | (long)in[105 + inPos] << 8 & 65535L | (long)in[106 + inPos] << 16 & 16777215L | (long)in[107 + inPos] << 24 & 4294967295L;
         out[27 + outPos] = (long)in[108 + inPos] & 255L | (long)in[109 + inPos] << 8 & 65535L | (long)in[110 + inPos] << 16 & 16777215L | (long)in[111 + inPos] << 24 & 4294967295L;
         out[28 + outPos] = (long)in[112 + inPos] & 255L | (long)in[113 + inPos] << 8 & 65535L | (long)in[114 + inPos] << 16 & 16777215L | (long)in[115 + inPos] << 24 & 4294967295L;
         out[29 + outPos] = (long)in[116 + inPos] & 255L | (long)in[117 + inPos] << 8 & 65535L | (long)in[118 + inPos] << 16 & 16777215L | (long)in[119 + inPos] << 24 & 4294967295L;
         out[30 + outPos] = (long)in[120 + inPos] & 255L | (long)in[121 + inPos] << 8 & 65535L | (long)in[122 + inPos] << 16 & 16777215L | (long)in[123 + inPos] << 24 & 4294967295L;
         out[31 + outPos] = (long)in[124 + inPos] & 255L | (long)in[125 + inPos] << 8 & 65535L | (long)in[126 + inPos] << 16 & 16777215L | (long)in[127 + inPos] << 24 & 4294967295L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L;
         out[1 + outPos] = (long)in.get(4 + inPos) & 255L | (long)in.get(5 + inPos) << 8 & 65535L | (long)in.get(6 + inPos) << 16 & 16777215L | (long)in.get(7 + inPos) << 24 & 4294967295L;
         out[2 + outPos] = (long)in.get(8 + inPos) & 255L | (long)in.get(9 + inPos) << 8 & 65535L | (long)in.get(10 + inPos) << 16 & 16777215L | (long)in.get(11 + inPos) << 24 & 4294967295L;
         out[3 + outPos] = (long)in.get(12 + inPos) & 255L | (long)in.get(13 + inPos) << 8 & 65535L | (long)in.get(14 + inPos) << 16 & 16777215L | (long)in.get(15 + inPos) << 24 & 4294967295L;
         out[4 + outPos] = (long)in.get(16 + inPos) & 255L | (long)in.get(17 + inPos) << 8 & 65535L | (long)in.get(18 + inPos) << 16 & 16777215L | (long)in.get(19 + inPos) << 24 & 4294967295L;
         out[5 + outPos] = (long)in.get(20 + inPos) & 255L | (long)in.get(21 + inPos) << 8 & 65535L | (long)in.get(22 + inPos) << 16 & 16777215L | (long)in.get(23 + inPos) << 24 & 4294967295L;
         out[6 + outPos] = (long)in.get(24 + inPos) & 255L | (long)in.get(25 + inPos) << 8 & 65535L | (long)in.get(26 + inPos) << 16 & 16777215L | (long)in.get(27 + inPos) << 24 & 4294967295L;
         out[7 + outPos] = (long)in.get(28 + inPos) & 255L | (long)in.get(29 + inPos) << 8 & 65535L | (long)in.get(30 + inPos) << 16 & 16777215L | (long)in.get(31 + inPos) << 24 & 4294967295L;
         out[8 + outPos] = (long)in.get(32 + inPos) & 255L | (long)in.get(33 + inPos) << 8 & 65535L | (long)in.get(34 + inPos) << 16 & 16777215L | (long)in.get(35 + inPos) << 24 & 4294967295L;
         out[9 + outPos] = (long)in.get(36 + inPos) & 255L | (long)in.get(37 + inPos) << 8 & 65535L | (long)in.get(38 + inPos) << 16 & 16777215L | (long)in.get(39 + inPos) << 24 & 4294967295L;
         out[10 + outPos] = (long)in.get(40 + inPos) & 255L | (long)in.get(41 + inPos) << 8 & 65535L | (long)in.get(42 + inPos) << 16 & 16777215L | (long)in.get(43 + inPos) << 24 & 4294967295L;
         out[11 + outPos] = (long)in.get(44 + inPos) & 255L | (long)in.get(45 + inPos) << 8 & 65535L | (long)in.get(46 + inPos) << 16 & 16777215L | (long)in.get(47 + inPos) << 24 & 4294967295L;
         out[12 + outPos] = (long)in.get(48 + inPos) & 255L | (long)in.get(49 + inPos) << 8 & 65535L | (long)in.get(50 + inPos) << 16 & 16777215L | (long)in.get(51 + inPos) << 24 & 4294967295L;
         out[13 + outPos] = (long)in.get(52 + inPos) & 255L | (long)in.get(53 + inPos) << 8 & 65535L | (long)in.get(54 + inPos) << 16 & 16777215L | (long)in.get(55 + inPos) << 24 & 4294967295L;
         out[14 + outPos] = (long)in.get(56 + inPos) & 255L | (long)in.get(57 + inPos) << 8 & 65535L | (long)in.get(58 + inPos) << 16 & 16777215L | (long)in.get(59 + inPos) << 24 & 4294967295L;
         out[15 + outPos] = (long)in.get(60 + inPos) & 255L | (long)in.get(61 + inPos) << 8 & 65535L | (long)in.get(62 + inPos) << 16 & 16777215L | (long)in.get(63 + inPos) << 24 & 4294967295L;
         out[16 + outPos] = (long)in.get(64 + inPos) & 255L | (long)in.get(65 + inPos) << 8 & 65535L | (long)in.get(66 + inPos) << 16 & 16777215L | (long)in.get(67 + inPos) << 24 & 4294967295L;
         out[17 + outPos] = (long)in.get(68 + inPos) & 255L | (long)in.get(69 + inPos) << 8 & 65535L | (long)in.get(70 + inPos) << 16 & 16777215L | (long)in.get(71 + inPos) << 24 & 4294967295L;
         out[18 + outPos] = (long)in.get(72 + inPos) & 255L | (long)in.get(73 + inPos) << 8 & 65535L | (long)in.get(74 + inPos) << 16 & 16777215L | (long)in.get(75 + inPos) << 24 & 4294967295L;
         out[19 + outPos] = (long)in.get(76 + inPos) & 255L | (long)in.get(77 + inPos) << 8 & 65535L | (long)in.get(78 + inPos) << 16 & 16777215L | (long)in.get(79 + inPos) << 24 & 4294967295L;
         out[20 + outPos] = (long)in.get(80 + inPos) & 255L | (long)in.get(81 + inPos) << 8 & 65535L | (long)in.get(82 + inPos) << 16 & 16777215L | (long)in.get(83 + inPos) << 24 & 4294967295L;
         out[21 + outPos] = (long)in.get(84 + inPos) & 255L | (long)in.get(85 + inPos) << 8 & 65535L | (long)in.get(86 + inPos) << 16 & 16777215L | (long)in.get(87 + inPos) << 24 & 4294967295L;
         out[22 + outPos] = (long)in.get(88 + inPos) & 255L | (long)in.get(89 + inPos) << 8 & 65535L | (long)in.get(90 + inPos) << 16 & 16777215L | (long)in.get(91 + inPos) << 24 & 4294967295L;
         out[23 + outPos] = (long)in.get(92 + inPos) & 255L | (long)in.get(93 + inPos) << 8 & 65535L | (long)in.get(94 + inPos) << 16 & 16777215L | (long)in.get(95 + inPos) << 24 & 4294967295L;
         out[24 + outPos] = (long)in.get(96 + inPos) & 255L | (long)in.get(97 + inPos) << 8 & 65535L | (long)in.get(98 + inPos) << 16 & 16777215L | (long)in.get(99 + inPos) << 24 & 4294967295L;
         out[25 + outPos] = (long)in.get(100 + inPos) & 255L | (long)in.get(101 + inPos) << 8 & 65535L | (long)in.get(102 + inPos) << 16 & 16777215L | (long)in.get(103 + inPos) << 24 & 4294967295L;
         out[26 + outPos] = (long)in.get(104 + inPos) & 255L | (long)in.get(105 + inPos) << 8 & 65535L | (long)in.get(106 + inPos) << 16 & 16777215L | (long)in.get(107 + inPos) << 24 & 4294967295L;
         out[27 + outPos] = (long)in.get(108 + inPos) & 255L | (long)in.get(109 + inPos) << 8 & 65535L | (long)in.get(110 + inPos) << 16 & 16777215L | (long)in.get(111 + inPos) << 24 & 4294967295L;
         out[28 + outPos] = (long)in.get(112 + inPos) & 255L | (long)in.get(113 + inPos) << 8 & 65535L | (long)in.get(114 + inPos) << 16 & 16777215L | (long)in.get(115 + inPos) << 24 & 4294967295L;
         out[29 + outPos] = (long)in.get(116 + inPos) & 255L | (long)in.get(117 + inPos) << 8 & 65535L | (long)in.get(118 + inPos) << 16 & 16777215L | (long)in.get(119 + inPos) << 24 & 4294967295L;
         out[30 + outPos] = (long)in.get(120 + inPos) & 255L | (long)in.get(121 + inPos) << 8 & 65535L | (long)in.get(122 + inPos) << 16 & 16777215L | (long)in.get(123 + inPos) << 24 & 4294967295L;
         out[31 + outPos] = (long)in.get(124 + inPos) & 255L | (long)in.get(125 + inPos) << 8 & 65535L | (long)in.get(126 + inPos) << 16 & 16777215L | (long)in.get(127 + inPos) << 24 & 4294967295L;
      }
   }

   private static final class Packer33 extends BytePackerForLong {
      private Packer33() {
         super(33);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 8589934591L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 8589934591L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 8589934591L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 8589934591L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 8589934591L) >>> 32 | (in[1 + inPos] & 8589934591L) << 1) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 8589934591L) >>> 7 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 8589934591L) >>> 15 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 8589934591L) >>> 23 & 255L));
         out[8 + outPos] = (byte)((int)(((in[1 + inPos] & 8589934591L) >>> 31 | (in[2 + inPos] & 8589934591L) << 2) & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 8589934591L) >>> 6 & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 8589934591L) >>> 14 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 8589934591L) >>> 22 & 255L));
         out[12 + outPos] = (byte)((int)(((in[2 + inPos] & 8589934591L) >>> 30 | (in[3 + inPos] & 8589934591L) << 3) & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 8589934591L) >>> 5 & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 8589934591L) >>> 13 & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 8589934591L) >>> 21 & 255L));
         out[16 + outPos] = (byte)((int)(((in[3 + inPos] & 8589934591L) >>> 29 | (in[4 + inPos] & 8589934591L) << 4) & 255L));
         out[17 + outPos] = (byte)((int)((in[4 + inPos] & 8589934591L) >>> 4 & 255L));
         out[18 + outPos] = (byte)((int)((in[4 + inPos] & 8589934591L) >>> 12 & 255L));
         out[19 + outPos] = (byte)((int)((in[4 + inPos] & 8589934591L) >>> 20 & 255L));
         out[20 + outPos] = (byte)((int)(((in[4 + inPos] & 8589934591L) >>> 28 | (in[5 + inPos] & 8589934591L) << 5) & 255L));
         out[21 + outPos] = (byte)((int)((in[5 + inPos] & 8589934591L) >>> 3 & 255L));
         out[22 + outPos] = (byte)((int)((in[5 + inPos] & 8589934591L) >>> 11 & 255L));
         out[23 + outPos] = (byte)((int)((in[5 + inPos] & 8589934591L) >>> 19 & 255L));
         out[24 + outPos] = (byte)((int)(((in[5 + inPos] & 8589934591L) >>> 27 | (in[6 + inPos] & 8589934591L) << 6) & 255L));
         out[25 + outPos] = (byte)((int)((in[6 + inPos] & 8589934591L) >>> 2 & 255L));
         out[26 + outPos] = (byte)((int)((in[6 + inPos] & 8589934591L) >>> 10 & 255L));
         out[27 + outPos] = (byte)((int)((in[6 + inPos] & 8589934591L) >>> 18 & 255L));
         out[28 + outPos] = (byte)((int)(((in[6 + inPos] & 8589934591L) >>> 26 | (in[7 + inPos] & 8589934591L) << 7) & 255L));
         out[29 + outPos] = (byte)((int)((in[7 + inPos] & 8589934591L) >>> 1 & 255L));
         out[30 + outPos] = (byte)((int)((in[7 + inPos] & 8589934591L) >>> 9 & 255L));
         out[31 + outPos] = (byte)((int)((in[7 + inPos] & 8589934591L) >>> 17 & 255L));
         out[32 + outPos] = (byte)((int)((in[7 + inPos] & 8589934591L) >>> 25 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 8589934591L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 8589934591L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 8589934591L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 8589934591L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 8589934591L) >>> 32 | (in[1 + inPos] & 8589934591L) << 1) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 8589934591L) >>> 7 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 8589934591L) >>> 15 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 8589934591L) >>> 23 & 255L));
         out[8 + outPos] = (byte)((int)(((in[1 + inPos] & 8589934591L) >>> 31 | (in[2 + inPos] & 8589934591L) << 2) & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 8589934591L) >>> 6 & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 8589934591L) >>> 14 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 8589934591L) >>> 22 & 255L));
         out[12 + outPos] = (byte)((int)(((in[2 + inPos] & 8589934591L) >>> 30 | (in[3 + inPos] & 8589934591L) << 3) & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 8589934591L) >>> 5 & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 8589934591L) >>> 13 & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 8589934591L) >>> 21 & 255L));
         out[16 + outPos] = (byte)((int)(((in[3 + inPos] & 8589934591L) >>> 29 | (in[4 + inPos] & 8589934591L) << 4) & 255L));
         out[17 + outPos] = (byte)((int)((in[4 + inPos] & 8589934591L) >>> 4 & 255L));
         out[18 + outPos] = (byte)((int)((in[4 + inPos] & 8589934591L) >>> 12 & 255L));
         out[19 + outPos] = (byte)((int)((in[4 + inPos] & 8589934591L) >>> 20 & 255L));
         out[20 + outPos] = (byte)((int)(((in[4 + inPos] & 8589934591L) >>> 28 | (in[5 + inPos] & 8589934591L) << 5) & 255L));
         out[21 + outPos] = (byte)((int)((in[5 + inPos] & 8589934591L) >>> 3 & 255L));
         out[22 + outPos] = (byte)((int)((in[5 + inPos] & 8589934591L) >>> 11 & 255L));
         out[23 + outPos] = (byte)((int)((in[5 + inPos] & 8589934591L) >>> 19 & 255L));
         out[24 + outPos] = (byte)((int)(((in[5 + inPos] & 8589934591L) >>> 27 | (in[6 + inPos] & 8589934591L) << 6) & 255L));
         out[25 + outPos] = (byte)((int)((in[6 + inPos] & 8589934591L) >>> 2 & 255L));
         out[26 + outPos] = (byte)((int)((in[6 + inPos] & 8589934591L) >>> 10 & 255L));
         out[27 + outPos] = (byte)((int)((in[6 + inPos] & 8589934591L) >>> 18 & 255L));
         out[28 + outPos] = (byte)((int)(((in[6 + inPos] & 8589934591L) >>> 26 | (in[7 + inPos] & 8589934591L) << 7) & 255L));
         out[29 + outPos] = (byte)((int)((in[7 + inPos] & 8589934591L) >>> 1 & 255L));
         out[30 + outPos] = (byte)((int)((in[7 + inPos] & 8589934591L) >>> 9 & 255L));
         out[31 + outPos] = (byte)((int)((in[7 + inPos] & 8589934591L) >>> 17 & 255L));
         out[32 + outPos] = (byte)((int)((in[7 + inPos] & 8589934591L) >>> 25 & 255L));
         out[33 + outPos] = (byte)((int)(in[8 + inPos] & 8589934591L & 255L));
         out[34 + outPos] = (byte)((int)((in[8 + inPos] & 8589934591L) >>> 8 & 255L));
         out[35 + outPos] = (byte)((int)((in[8 + inPos] & 8589934591L) >>> 16 & 255L));
         out[36 + outPos] = (byte)((int)((in[8 + inPos] & 8589934591L) >>> 24 & 255L));
         out[37 + outPos] = (byte)((int)(((in[8 + inPos] & 8589934591L) >>> 32 | (in[9 + inPos] & 8589934591L) << 1) & 255L));
         out[38 + outPos] = (byte)((int)((in[9 + inPos] & 8589934591L) >>> 7 & 255L));
         out[39 + outPos] = (byte)((int)((in[9 + inPos] & 8589934591L) >>> 15 & 255L));
         out[40 + outPos] = (byte)((int)((in[9 + inPos] & 8589934591L) >>> 23 & 255L));
         out[41 + outPos] = (byte)((int)(((in[9 + inPos] & 8589934591L) >>> 31 | (in[10 + inPos] & 8589934591L) << 2) & 255L));
         out[42 + outPos] = (byte)((int)((in[10 + inPos] & 8589934591L) >>> 6 & 255L));
         out[43 + outPos] = (byte)((int)((in[10 + inPos] & 8589934591L) >>> 14 & 255L));
         out[44 + outPos] = (byte)((int)((in[10 + inPos] & 8589934591L) >>> 22 & 255L));
         out[45 + outPos] = (byte)((int)(((in[10 + inPos] & 8589934591L) >>> 30 | (in[11 + inPos] & 8589934591L) << 3) & 255L));
         out[46 + outPos] = (byte)((int)((in[11 + inPos] & 8589934591L) >>> 5 & 255L));
         out[47 + outPos] = (byte)((int)((in[11 + inPos] & 8589934591L) >>> 13 & 255L));
         out[48 + outPos] = (byte)((int)((in[11 + inPos] & 8589934591L) >>> 21 & 255L));
         out[49 + outPos] = (byte)((int)(((in[11 + inPos] & 8589934591L) >>> 29 | (in[12 + inPos] & 8589934591L) << 4) & 255L));
         out[50 + outPos] = (byte)((int)((in[12 + inPos] & 8589934591L) >>> 4 & 255L));
         out[51 + outPos] = (byte)((int)((in[12 + inPos] & 8589934591L) >>> 12 & 255L));
         out[52 + outPos] = (byte)((int)((in[12 + inPos] & 8589934591L) >>> 20 & 255L));
         out[53 + outPos] = (byte)((int)(((in[12 + inPos] & 8589934591L) >>> 28 | (in[13 + inPos] & 8589934591L) << 5) & 255L));
         out[54 + outPos] = (byte)((int)((in[13 + inPos] & 8589934591L) >>> 3 & 255L));
         out[55 + outPos] = (byte)((int)((in[13 + inPos] & 8589934591L) >>> 11 & 255L));
         out[56 + outPos] = (byte)((int)((in[13 + inPos] & 8589934591L) >>> 19 & 255L));
         out[57 + outPos] = (byte)((int)(((in[13 + inPos] & 8589934591L) >>> 27 | (in[14 + inPos] & 8589934591L) << 6) & 255L));
         out[58 + outPos] = (byte)((int)((in[14 + inPos] & 8589934591L) >>> 2 & 255L));
         out[59 + outPos] = (byte)((int)((in[14 + inPos] & 8589934591L) >>> 10 & 255L));
         out[60 + outPos] = (byte)((int)((in[14 + inPos] & 8589934591L) >>> 18 & 255L));
         out[61 + outPos] = (byte)((int)(((in[14 + inPos] & 8589934591L) >>> 26 | (in[15 + inPos] & 8589934591L) << 7) & 255L));
         out[62 + outPos] = (byte)((int)((in[15 + inPos] & 8589934591L) >>> 1 & 255L));
         out[63 + outPos] = (byte)((int)((in[15 + inPos] & 8589934591L) >>> 9 & 255L));
         out[64 + outPos] = (byte)((int)((in[15 + inPos] & 8589934591L) >>> 17 & 255L));
         out[65 + outPos] = (byte)((int)((in[15 + inPos] & 8589934591L) >>> 25 & 255L));
         out[66 + outPos] = (byte)((int)(in[16 + inPos] & 8589934591L & 255L));
         out[67 + outPos] = (byte)((int)((in[16 + inPos] & 8589934591L) >>> 8 & 255L));
         out[68 + outPos] = (byte)((int)((in[16 + inPos] & 8589934591L) >>> 16 & 255L));
         out[69 + outPos] = (byte)((int)((in[16 + inPos] & 8589934591L) >>> 24 & 255L));
         out[70 + outPos] = (byte)((int)(((in[16 + inPos] & 8589934591L) >>> 32 | (in[17 + inPos] & 8589934591L) << 1) & 255L));
         out[71 + outPos] = (byte)((int)((in[17 + inPos] & 8589934591L) >>> 7 & 255L));
         out[72 + outPos] = (byte)((int)((in[17 + inPos] & 8589934591L) >>> 15 & 255L));
         out[73 + outPos] = (byte)((int)((in[17 + inPos] & 8589934591L) >>> 23 & 255L));
         out[74 + outPos] = (byte)((int)(((in[17 + inPos] & 8589934591L) >>> 31 | (in[18 + inPos] & 8589934591L) << 2) & 255L));
         out[75 + outPos] = (byte)((int)((in[18 + inPos] & 8589934591L) >>> 6 & 255L));
         out[76 + outPos] = (byte)((int)((in[18 + inPos] & 8589934591L) >>> 14 & 255L));
         out[77 + outPos] = (byte)((int)((in[18 + inPos] & 8589934591L) >>> 22 & 255L));
         out[78 + outPos] = (byte)((int)(((in[18 + inPos] & 8589934591L) >>> 30 | (in[19 + inPos] & 8589934591L) << 3) & 255L));
         out[79 + outPos] = (byte)((int)((in[19 + inPos] & 8589934591L) >>> 5 & 255L));
         out[80 + outPos] = (byte)((int)((in[19 + inPos] & 8589934591L) >>> 13 & 255L));
         out[81 + outPos] = (byte)((int)((in[19 + inPos] & 8589934591L) >>> 21 & 255L));
         out[82 + outPos] = (byte)((int)(((in[19 + inPos] & 8589934591L) >>> 29 | (in[20 + inPos] & 8589934591L) << 4) & 255L));
         out[83 + outPos] = (byte)((int)((in[20 + inPos] & 8589934591L) >>> 4 & 255L));
         out[84 + outPos] = (byte)((int)((in[20 + inPos] & 8589934591L) >>> 12 & 255L));
         out[85 + outPos] = (byte)((int)((in[20 + inPos] & 8589934591L) >>> 20 & 255L));
         out[86 + outPos] = (byte)((int)(((in[20 + inPos] & 8589934591L) >>> 28 | (in[21 + inPos] & 8589934591L) << 5) & 255L));
         out[87 + outPos] = (byte)((int)((in[21 + inPos] & 8589934591L) >>> 3 & 255L));
         out[88 + outPos] = (byte)((int)((in[21 + inPos] & 8589934591L) >>> 11 & 255L));
         out[89 + outPos] = (byte)((int)((in[21 + inPos] & 8589934591L) >>> 19 & 255L));
         out[90 + outPos] = (byte)((int)(((in[21 + inPos] & 8589934591L) >>> 27 | (in[22 + inPos] & 8589934591L) << 6) & 255L));
         out[91 + outPos] = (byte)((int)((in[22 + inPos] & 8589934591L) >>> 2 & 255L));
         out[92 + outPos] = (byte)((int)((in[22 + inPos] & 8589934591L) >>> 10 & 255L));
         out[93 + outPos] = (byte)((int)((in[22 + inPos] & 8589934591L) >>> 18 & 255L));
         out[94 + outPos] = (byte)((int)(((in[22 + inPos] & 8589934591L) >>> 26 | (in[23 + inPos] & 8589934591L) << 7) & 255L));
         out[95 + outPos] = (byte)((int)((in[23 + inPos] & 8589934591L) >>> 1 & 255L));
         out[96 + outPos] = (byte)((int)((in[23 + inPos] & 8589934591L) >>> 9 & 255L));
         out[97 + outPos] = (byte)((int)((in[23 + inPos] & 8589934591L) >>> 17 & 255L));
         out[98 + outPos] = (byte)((int)((in[23 + inPos] & 8589934591L) >>> 25 & 255L));
         out[99 + outPos] = (byte)((int)(in[24 + inPos] & 8589934591L & 255L));
         out[100 + outPos] = (byte)((int)((in[24 + inPos] & 8589934591L) >>> 8 & 255L));
         out[101 + outPos] = (byte)((int)((in[24 + inPos] & 8589934591L) >>> 16 & 255L));
         out[102 + outPos] = (byte)((int)((in[24 + inPos] & 8589934591L) >>> 24 & 255L));
         out[103 + outPos] = (byte)((int)(((in[24 + inPos] & 8589934591L) >>> 32 | (in[25 + inPos] & 8589934591L) << 1) & 255L));
         out[104 + outPos] = (byte)((int)((in[25 + inPos] & 8589934591L) >>> 7 & 255L));
         out[105 + outPos] = (byte)((int)((in[25 + inPos] & 8589934591L) >>> 15 & 255L));
         out[106 + outPos] = (byte)((int)((in[25 + inPos] & 8589934591L) >>> 23 & 255L));
         out[107 + outPos] = (byte)((int)(((in[25 + inPos] & 8589934591L) >>> 31 | (in[26 + inPos] & 8589934591L) << 2) & 255L));
         out[108 + outPos] = (byte)((int)((in[26 + inPos] & 8589934591L) >>> 6 & 255L));
         out[109 + outPos] = (byte)((int)((in[26 + inPos] & 8589934591L) >>> 14 & 255L));
         out[110 + outPos] = (byte)((int)((in[26 + inPos] & 8589934591L) >>> 22 & 255L));
         out[111 + outPos] = (byte)((int)(((in[26 + inPos] & 8589934591L) >>> 30 | (in[27 + inPos] & 8589934591L) << 3) & 255L));
         out[112 + outPos] = (byte)((int)((in[27 + inPos] & 8589934591L) >>> 5 & 255L));
         out[113 + outPos] = (byte)((int)((in[27 + inPos] & 8589934591L) >>> 13 & 255L));
         out[114 + outPos] = (byte)((int)((in[27 + inPos] & 8589934591L) >>> 21 & 255L));
         out[115 + outPos] = (byte)((int)(((in[27 + inPos] & 8589934591L) >>> 29 | (in[28 + inPos] & 8589934591L) << 4) & 255L));
         out[116 + outPos] = (byte)((int)((in[28 + inPos] & 8589934591L) >>> 4 & 255L));
         out[117 + outPos] = (byte)((int)((in[28 + inPos] & 8589934591L) >>> 12 & 255L));
         out[118 + outPos] = (byte)((int)((in[28 + inPos] & 8589934591L) >>> 20 & 255L));
         out[119 + outPos] = (byte)((int)(((in[28 + inPos] & 8589934591L) >>> 28 | (in[29 + inPos] & 8589934591L) << 5) & 255L));
         out[120 + outPos] = (byte)((int)((in[29 + inPos] & 8589934591L) >>> 3 & 255L));
         out[121 + outPos] = (byte)((int)((in[29 + inPos] & 8589934591L) >>> 11 & 255L));
         out[122 + outPos] = (byte)((int)((in[29 + inPos] & 8589934591L) >>> 19 & 255L));
         out[123 + outPos] = (byte)((int)(((in[29 + inPos] & 8589934591L) >>> 27 | (in[30 + inPos] & 8589934591L) << 6) & 255L));
         out[124 + outPos] = (byte)((int)((in[30 + inPos] & 8589934591L) >>> 2 & 255L));
         out[125 + outPos] = (byte)((int)((in[30 + inPos] & 8589934591L) >>> 10 & 255L));
         out[126 + outPos] = (byte)((int)((in[30 + inPos] & 8589934591L) >>> 18 & 255L));
         out[127 + outPos] = (byte)((int)(((in[30 + inPos] & 8589934591L) >>> 26 | (in[31 + inPos] & 8589934591L) << 7) & 255L));
         out[128 + outPos] = (byte)((int)((in[31 + inPos] & 8589934591L) >>> 1 & 255L));
         out[129 + outPos] = (byte)((int)((in[31 + inPos] & 8589934591L) >>> 9 & 255L));
         out[130 + outPos] = (byte)((int)((in[31 + inPos] & 8589934591L) >>> 17 & 255L));
         out[131 + outPos] = (byte)((int)((in[31 + inPos] & 8589934591L) >>> 25 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 8589934591L;
         out[1 + outPos] = (long)in[4 + inPos] >> 1 & 127L | (long)in[5 + inPos] << 7 & 32767L | (long)in[6 + inPos] << 15 & 8388607L | (long)in[7 + inPos] << 23 & 2147483647L | (long)in[8 + inPos] << 31 & 8589934591L;
         out[2 + outPos] = (long)in[8 + inPos] >> 2 & 63L | (long)in[9 + inPos] << 6 & 16383L | (long)in[10 + inPos] << 14 & 4194303L | (long)in[11 + inPos] << 22 & 1073741823L | (long)in[12 + inPos] << 30 & 8589934591L;
         out[3 + outPos] = (long)in[12 + inPos] >> 3 & 31L | (long)in[13 + inPos] << 5 & 8191L | (long)in[14 + inPos] << 13 & 2097151L | (long)in[15 + inPos] << 21 & 536870911L | (long)in[16 + inPos] << 29 & 8589934591L;
         out[4 + outPos] = (long)in[16 + inPos] >> 4 & 15L | (long)in[17 + inPos] << 4 & 4095L | (long)in[18 + inPos] << 12 & 1048575L | (long)in[19 + inPos] << 20 & 268435455L | (long)in[20 + inPos] << 28 & 8589934591L;
         out[5 + outPos] = (long)in[20 + inPos] >> 5 & 7L | (long)in[21 + inPos] << 3 & 2047L | (long)in[22 + inPos] << 11 & 524287L | (long)in[23 + inPos] << 19 & 134217727L | (long)in[24 + inPos] << 27 & 8589934591L;
         out[6 + outPos] = (long)in[24 + inPos] >> 6 & 3L | (long)in[25 + inPos] << 2 & 1023L | (long)in[26 + inPos] << 10 & 262143L | (long)in[27 + inPos] << 18 & 67108863L | (long)in[28 + inPos] << 26 & 8589934591L;
         out[7 + outPos] = (long)in[28 + inPos] >> 7 & 1L | (long)in[29 + inPos] << 1 & 511L | (long)in[30 + inPos] << 9 & 131071L | (long)in[31 + inPos] << 17 & 33554431L | (long)in[32 + inPos] << 25 & 8589934591L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 8589934591L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 1 & 127L | (long)in.get(5 + inPos) << 7 & 32767L | (long)in.get(6 + inPos) << 15 & 8388607L | (long)in.get(7 + inPos) << 23 & 2147483647L | (long)in.get(8 + inPos) << 31 & 8589934591L;
         out[2 + outPos] = (long)in.get(8 + inPos) >> 2 & 63L | (long)in.get(9 + inPos) << 6 & 16383L | (long)in.get(10 + inPos) << 14 & 4194303L | (long)in.get(11 + inPos) << 22 & 1073741823L | (long)in.get(12 + inPos) << 30 & 8589934591L;
         out[3 + outPos] = (long)in.get(12 + inPos) >> 3 & 31L | (long)in.get(13 + inPos) << 5 & 8191L | (long)in.get(14 + inPos) << 13 & 2097151L | (long)in.get(15 + inPos) << 21 & 536870911L | (long)in.get(16 + inPos) << 29 & 8589934591L;
         out[4 + outPos] = (long)in.get(16 + inPos) >> 4 & 15L | (long)in.get(17 + inPos) << 4 & 4095L | (long)in.get(18 + inPos) << 12 & 1048575L | (long)in.get(19 + inPos) << 20 & 268435455L | (long)in.get(20 + inPos) << 28 & 8589934591L;
         out[5 + outPos] = (long)in.get(20 + inPos) >> 5 & 7L | (long)in.get(21 + inPos) << 3 & 2047L | (long)in.get(22 + inPos) << 11 & 524287L | (long)in.get(23 + inPos) << 19 & 134217727L | (long)in.get(24 + inPos) << 27 & 8589934591L;
         out[6 + outPos] = (long)in.get(24 + inPos) >> 6 & 3L | (long)in.get(25 + inPos) << 2 & 1023L | (long)in.get(26 + inPos) << 10 & 262143L | (long)in.get(27 + inPos) << 18 & 67108863L | (long)in.get(28 + inPos) << 26 & 8589934591L;
         out[7 + outPos] = (long)in.get(28 + inPos) >> 7 & 1L | (long)in.get(29 + inPos) << 1 & 511L | (long)in.get(30 + inPos) << 9 & 131071L | (long)in.get(31 + inPos) << 17 & 33554431L | (long)in.get(32 + inPos) << 25 & 8589934591L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 8589934591L;
         out[1 + outPos] = (long)in[4 + inPos] >> 1 & 127L | (long)in[5 + inPos] << 7 & 32767L | (long)in[6 + inPos] << 15 & 8388607L | (long)in[7 + inPos] << 23 & 2147483647L | (long)in[8 + inPos] << 31 & 8589934591L;
         out[2 + outPos] = (long)in[8 + inPos] >> 2 & 63L | (long)in[9 + inPos] << 6 & 16383L | (long)in[10 + inPos] << 14 & 4194303L | (long)in[11 + inPos] << 22 & 1073741823L | (long)in[12 + inPos] << 30 & 8589934591L;
         out[3 + outPos] = (long)in[12 + inPos] >> 3 & 31L | (long)in[13 + inPos] << 5 & 8191L | (long)in[14 + inPos] << 13 & 2097151L | (long)in[15 + inPos] << 21 & 536870911L | (long)in[16 + inPos] << 29 & 8589934591L;
         out[4 + outPos] = (long)in[16 + inPos] >> 4 & 15L | (long)in[17 + inPos] << 4 & 4095L | (long)in[18 + inPos] << 12 & 1048575L | (long)in[19 + inPos] << 20 & 268435455L | (long)in[20 + inPos] << 28 & 8589934591L;
         out[5 + outPos] = (long)in[20 + inPos] >> 5 & 7L | (long)in[21 + inPos] << 3 & 2047L | (long)in[22 + inPos] << 11 & 524287L | (long)in[23 + inPos] << 19 & 134217727L | (long)in[24 + inPos] << 27 & 8589934591L;
         out[6 + outPos] = (long)in[24 + inPos] >> 6 & 3L | (long)in[25 + inPos] << 2 & 1023L | (long)in[26 + inPos] << 10 & 262143L | (long)in[27 + inPos] << 18 & 67108863L | (long)in[28 + inPos] << 26 & 8589934591L;
         out[7 + outPos] = (long)in[28 + inPos] >> 7 & 1L | (long)in[29 + inPos] << 1 & 511L | (long)in[30 + inPos] << 9 & 131071L | (long)in[31 + inPos] << 17 & 33554431L | (long)in[32 + inPos] << 25 & 8589934591L;
         out[8 + outPos] = (long)in[33 + inPos] & 255L | (long)in[34 + inPos] << 8 & 65535L | (long)in[35 + inPos] << 16 & 16777215L | (long)in[36 + inPos] << 24 & 4294967295L | (long)in[37 + inPos] << 32 & 8589934591L;
         out[9 + outPos] = (long)in[37 + inPos] >> 1 & 127L | (long)in[38 + inPos] << 7 & 32767L | (long)in[39 + inPos] << 15 & 8388607L | (long)in[40 + inPos] << 23 & 2147483647L | (long)in[41 + inPos] << 31 & 8589934591L;
         out[10 + outPos] = (long)in[41 + inPos] >> 2 & 63L | (long)in[42 + inPos] << 6 & 16383L | (long)in[43 + inPos] << 14 & 4194303L | (long)in[44 + inPos] << 22 & 1073741823L | (long)in[45 + inPos] << 30 & 8589934591L;
         out[11 + outPos] = (long)in[45 + inPos] >> 3 & 31L | (long)in[46 + inPos] << 5 & 8191L | (long)in[47 + inPos] << 13 & 2097151L | (long)in[48 + inPos] << 21 & 536870911L | (long)in[49 + inPos] << 29 & 8589934591L;
         out[12 + outPos] = (long)in[49 + inPos] >> 4 & 15L | (long)in[50 + inPos] << 4 & 4095L | (long)in[51 + inPos] << 12 & 1048575L | (long)in[52 + inPos] << 20 & 268435455L | (long)in[53 + inPos] << 28 & 8589934591L;
         out[13 + outPos] = (long)in[53 + inPos] >> 5 & 7L | (long)in[54 + inPos] << 3 & 2047L | (long)in[55 + inPos] << 11 & 524287L | (long)in[56 + inPos] << 19 & 134217727L | (long)in[57 + inPos] << 27 & 8589934591L;
         out[14 + outPos] = (long)in[57 + inPos] >> 6 & 3L | (long)in[58 + inPos] << 2 & 1023L | (long)in[59 + inPos] << 10 & 262143L | (long)in[60 + inPos] << 18 & 67108863L | (long)in[61 + inPos] << 26 & 8589934591L;
         out[15 + outPos] = (long)in[61 + inPos] >> 7 & 1L | (long)in[62 + inPos] << 1 & 511L | (long)in[63 + inPos] << 9 & 131071L | (long)in[64 + inPos] << 17 & 33554431L | (long)in[65 + inPos] << 25 & 8589934591L;
         out[16 + outPos] = (long)in[66 + inPos] & 255L | (long)in[67 + inPos] << 8 & 65535L | (long)in[68 + inPos] << 16 & 16777215L | (long)in[69 + inPos] << 24 & 4294967295L | (long)in[70 + inPos] << 32 & 8589934591L;
         out[17 + outPos] = (long)in[70 + inPos] >> 1 & 127L | (long)in[71 + inPos] << 7 & 32767L | (long)in[72 + inPos] << 15 & 8388607L | (long)in[73 + inPos] << 23 & 2147483647L | (long)in[74 + inPos] << 31 & 8589934591L;
         out[18 + outPos] = (long)in[74 + inPos] >> 2 & 63L | (long)in[75 + inPos] << 6 & 16383L | (long)in[76 + inPos] << 14 & 4194303L | (long)in[77 + inPos] << 22 & 1073741823L | (long)in[78 + inPos] << 30 & 8589934591L;
         out[19 + outPos] = (long)in[78 + inPos] >> 3 & 31L | (long)in[79 + inPos] << 5 & 8191L | (long)in[80 + inPos] << 13 & 2097151L | (long)in[81 + inPos] << 21 & 536870911L | (long)in[82 + inPos] << 29 & 8589934591L;
         out[20 + outPos] = (long)in[82 + inPos] >> 4 & 15L | (long)in[83 + inPos] << 4 & 4095L | (long)in[84 + inPos] << 12 & 1048575L | (long)in[85 + inPos] << 20 & 268435455L | (long)in[86 + inPos] << 28 & 8589934591L;
         out[21 + outPos] = (long)in[86 + inPos] >> 5 & 7L | (long)in[87 + inPos] << 3 & 2047L | (long)in[88 + inPos] << 11 & 524287L | (long)in[89 + inPos] << 19 & 134217727L | (long)in[90 + inPos] << 27 & 8589934591L;
         out[22 + outPos] = (long)in[90 + inPos] >> 6 & 3L | (long)in[91 + inPos] << 2 & 1023L | (long)in[92 + inPos] << 10 & 262143L | (long)in[93 + inPos] << 18 & 67108863L | (long)in[94 + inPos] << 26 & 8589934591L;
         out[23 + outPos] = (long)in[94 + inPos] >> 7 & 1L | (long)in[95 + inPos] << 1 & 511L | (long)in[96 + inPos] << 9 & 131071L | (long)in[97 + inPos] << 17 & 33554431L | (long)in[98 + inPos] << 25 & 8589934591L;
         out[24 + outPos] = (long)in[99 + inPos] & 255L | (long)in[100 + inPos] << 8 & 65535L | (long)in[101 + inPos] << 16 & 16777215L | (long)in[102 + inPos] << 24 & 4294967295L | (long)in[103 + inPos] << 32 & 8589934591L;
         out[25 + outPos] = (long)in[103 + inPos] >> 1 & 127L | (long)in[104 + inPos] << 7 & 32767L | (long)in[105 + inPos] << 15 & 8388607L | (long)in[106 + inPos] << 23 & 2147483647L | (long)in[107 + inPos] << 31 & 8589934591L;
         out[26 + outPos] = (long)in[107 + inPos] >> 2 & 63L | (long)in[108 + inPos] << 6 & 16383L | (long)in[109 + inPos] << 14 & 4194303L | (long)in[110 + inPos] << 22 & 1073741823L | (long)in[111 + inPos] << 30 & 8589934591L;
         out[27 + outPos] = (long)in[111 + inPos] >> 3 & 31L | (long)in[112 + inPos] << 5 & 8191L | (long)in[113 + inPos] << 13 & 2097151L | (long)in[114 + inPos] << 21 & 536870911L | (long)in[115 + inPos] << 29 & 8589934591L;
         out[28 + outPos] = (long)in[115 + inPos] >> 4 & 15L | (long)in[116 + inPos] << 4 & 4095L | (long)in[117 + inPos] << 12 & 1048575L | (long)in[118 + inPos] << 20 & 268435455L | (long)in[119 + inPos] << 28 & 8589934591L;
         out[29 + outPos] = (long)in[119 + inPos] >> 5 & 7L | (long)in[120 + inPos] << 3 & 2047L | (long)in[121 + inPos] << 11 & 524287L | (long)in[122 + inPos] << 19 & 134217727L | (long)in[123 + inPos] << 27 & 8589934591L;
         out[30 + outPos] = (long)in[123 + inPos] >> 6 & 3L | (long)in[124 + inPos] << 2 & 1023L | (long)in[125 + inPos] << 10 & 262143L | (long)in[126 + inPos] << 18 & 67108863L | (long)in[127 + inPos] << 26 & 8589934591L;
         out[31 + outPos] = (long)in[127 + inPos] >> 7 & 1L | (long)in[128 + inPos] << 1 & 511L | (long)in[129 + inPos] << 9 & 131071L | (long)in[130 + inPos] << 17 & 33554431L | (long)in[131 + inPos] << 25 & 8589934591L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 8589934591L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 1 & 127L | (long)in.get(5 + inPos) << 7 & 32767L | (long)in.get(6 + inPos) << 15 & 8388607L | (long)in.get(7 + inPos) << 23 & 2147483647L | (long)in.get(8 + inPos) << 31 & 8589934591L;
         out[2 + outPos] = (long)in.get(8 + inPos) >> 2 & 63L | (long)in.get(9 + inPos) << 6 & 16383L | (long)in.get(10 + inPos) << 14 & 4194303L | (long)in.get(11 + inPos) << 22 & 1073741823L | (long)in.get(12 + inPos) << 30 & 8589934591L;
         out[3 + outPos] = (long)in.get(12 + inPos) >> 3 & 31L | (long)in.get(13 + inPos) << 5 & 8191L | (long)in.get(14 + inPos) << 13 & 2097151L | (long)in.get(15 + inPos) << 21 & 536870911L | (long)in.get(16 + inPos) << 29 & 8589934591L;
         out[4 + outPos] = (long)in.get(16 + inPos) >> 4 & 15L | (long)in.get(17 + inPos) << 4 & 4095L | (long)in.get(18 + inPos) << 12 & 1048575L | (long)in.get(19 + inPos) << 20 & 268435455L | (long)in.get(20 + inPos) << 28 & 8589934591L;
         out[5 + outPos] = (long)in.get(20 + inPos) >> 5 & 7L | (long)in.get(21 + inPos) << 3 & 2047L | (long)in.get(22 + inPos) << 11 & 524287L | (long)in.get(23 + inPos) << 19 & 134217727L | (long)in.get(24 + inPos) << 27 & 8589934591L;
         out[6 + outPos] = (long)in.get(24 + inPos) >> 6 & 3L | (long)in.get(25 + inPos) << 2 & 1023L | (long)in.get(26 + inPos) << 10 & 262143L | (long)in.get(27 + inPos) << 18 & 67108863L | (long)in.get(28 + inPos) << 26 & 8589934591L;
         out[7 + outPos] = (long)in.get(28 + inPos) >> 7 & 1L | (long)in.get(29 + inPos) << 1 & 511L | (long)in.get(30 + inPos) << 9 & 131071L | (long)in.get(31 + inPos) << 17 & 33554431L | (long)in.get(32 + inPos) << 25 & 8589934591L;
         out[8 + outPos] = (long)in.get(33 + inPos) & 255L | (long)in.get(34 + inPos) << 8 & 65535L | (long)in.get(35 + inPos) << 16 & 16777215L | (long)in.get(36 + inPos) << 24 & 4294967295L | (long)in.get(37 + inPos) << 32 & 8589934591L;
         out[9 + outPos] = (long)in.get(37 + inPos) >> 1 & 127L | (long)in.get(38 + inPos) << 7 & 32767L | (long)in.get(39 + inPos) << 15 & 8388607L | (long)in.get(40 + inPos) << 23 & 2147483647L | (long)in.get(41 + inPos) << 31 & 8589934591L;
         out[10 + outPos] = (long)in.get(41 + inPos) >> 2 & 63L | (long)in.get(42 + inPos) << 6 & 16383L | (long)in.get(43 + inPos) << 14 & 4194303L | (long)in.get(44 + inPos) << 22 & 1073741823L | (long)in.get(45 + inPos) << 30 & 8589934591L;
         out[11 + outPos] = (long)in.get(45 + inPos) >> 3 & 31L | (long)in.get(46 + inPos) << 5 & 8191L | (long)in.get(47 + inPos) << 13 & 2097151L | (long)in.get(48 + inPos) << 21 & 536870911L | (long)in.get(49 + inPos) << 29 & 8589934591L;
         out[12 + outPos] = (long)in.get(49 + inPos) >> 4 & 15L | (long)in.get(50 + inPos) << 4 & 4095L | (long)in.get(51 + inPos) << 12 & 1048575L | (long)in.get(52 + inPos) << 20 & 268435455L | (long)in.get(53 + inPos) << 28 & 8589934591L;
         out[13 + outPos] = (long)in.get(53 + inPos) >> 5 & 7L | (long)in.get(54 + inPos) << 3 & 2047L | (long)in.get(55 + inPos) << 11 & 524287L | (long)in.get(56 + inPos) << 19 & 134217727L | (long)in.get(57 + inPos) << 27 & 8589934591L;
         out[14 + outPos] = (long)in.get(57 + inPos) >> 6 & 3L | (long)in.get(58 + inPos) << 2 & 1023L | (long)in.get(59 + inPos) << 10 & 262143L | (long)in.get(60 + inPos) << 18 & 67108863L | (long)in.get(61 + inPos) << 26 & 8589934591L;
         out[15 + outPos] = (long)in.get(61 + inPos) >> 7 & 1L | (long)in.get(62 + inPos) << 1 & 511L | (long)in.get(63 + inPos) << 9 & 131071L | (long)in.get(64 + inPos) << 17 & 33554431L | (long)in.get(65 + inPos) << 25 & 8589934591L;
         out[16 + outPos] = (long)in.get(66 + inPos) & 255L | (long)in.get(67 + inPos) << 8 & 65535L | (long)in.get(68 + inPos) << 16 & 16777215L | (long)in.get(69 + inPos) << 24 & 4294967295L | (long)in.get(70 + inPos) << 32 & 8589934591L;
         out[17 + outPos] = (long)in.get(70 + inPos) >> 1 & 127L | (long)in.get(71 + inPos) << 7 & 32767L | (long)in.get(72 + inPos) << 15 & 8388607L | (long)in.get(73 + inPos) << 23 & 2147483647L | (long)in.get(74 + inPos) << 31 & 8589934591L;
         out[18 + outPos] = (long)in.get(74 + inPos) >> 2 & 63L | (long)in.get(75 + inPos) << 6 & 16383L | (long)in.get(76 + inPos) << 14 & 4194303L | (long)in.get(77 + inPos) << 22 & 1073741823L | (long)in.get(78 + inPos) << 30 & 8589934591L;
         out[19 + outPos] = (long)in.get(78 + inPos) >> 3 & 31L | (long)in.get(79 + inPos) << 5 & 8191L | (long)in.get(80 + inPos) << 13 & 2097151L | (long)in.get(81 + inPos) << 21 & 536870911L | (long)in.get(82 + inPos) << 29 & 8589934591L;
         out[20 + outPos] = (long)in.get(82 + inPos) >> 4 & 15L | (long)in.get(83 + inPos) << 4 & 4095L | (long)in.get(84 + inPos) << 12 & 1048575L | (long)in.get(85 + inPos) << 20 & 268435455L | (long)in.get(86 + inPos) << 28 & 8589934591L;
         out[21 + outPos] = (long)in.get(86 + inPos) >> 5 & 7L | (long)in.get(87 + inPos) << 3 & 2047L | (long)in.get(88 + inPos) << 11 & 524287L | (long)in.get(89 + inPos) << 19 & 134217727L | (long)in.get(90 + inPos) << 27 & 8589934591L;
         out[22 + outPos] = (long)in.get(90 + inPos) >> 6 & 3L | (long)in.get(91 + inPos) << 2 & 1023L | (long)in.get(92 + inPos) << 10 & 262143L | (long)in.get(93 + inPos) << 18 & 67108863L | (long)in.get(94 + inPos) << 26 & 8589934591L;
         out[23 + outPos] = (long)in.get(94 + inPos) >> 7 & 1L | (long)in.get(95 + inPos) << 1 & 511L | (long)in.get(96 + inPos) << 9 & 131071L | (long)in.get(97 + inPos) << 17 & 33554431L | (long)in.get(98 + inPos) << 25 & 8589934591L;
         out[24 + outPos] = (long)in.get(99 + inPos) & 255L | (long)in.get(100 + inPos) << 8 & 65535L | (long)in.get(101 + inPos) << 16 & 16777215L | (long)in.get(102 + inPos) << 24 & 4294967295L | (long)in.get(103 + inPos) << 32 & 8589934591L;
         out[25 + outPos] = (long)in.get(103 + inPos) >> 1 & 127L | (long)in.get(104 + inPos) << 7 & 32767L | (long)in.get(105 + inPos) << 15 & 8388607L | (long)in.get(106 + inPos) << 23 & 2147483647L | (long)in.get(107 + inPos) << 31 & 8589934591L;
         out[26 + outPos] = (long)in.get(107 + inPos) >> 2 & 63L | (long)in.get(108 + inPos) << 6 & 16383L | (long)in.get(109 + inPos) << 14 & 4194303L | (long)in.get(110 + inPos) << 22 & 1073741823L | (long)in.get(111 + inPos) << 30 & 8589934591L;
         out[27 + outPos] = (long)in.get(111 + inPos) >> 3 & 31L | (long)in.get(112 + inPos) << 5 & 8191L | (long)in.get(113 + inPos) << 13 & 2097151L | (long)in.get(114 + inPos) << 21 & 536870911L | (long)in.get(115 + inPos) << 29 & 8589934591L;
         out[28 + outPos] = (long)in.get(115 + inPos) >> 4 & 15L | (long)in.get(116 + inPos) << 4 & 4095L | (long)in.get(117 + inPos) << 12 & 1048575L | (long)in.get(118 + inPos) << 20 & 268435455L | (long)in.get(119 + inPos) << 28 & 8589934591L;
         out[29 + outPos] = (long)in.get(119 + inPos) >> 5 & 7L | (long)in.get(120 + inPos) << 3 & 2047L | (long)in.get(121 + inPos) << 11 & 524287L | (long)in.get(122 + inPos) << 19 & 134217727L | (long)in.get(123 + inPos) << 27 & 8589934591L;
         out[30 + outPos] = (long)in.get(123 + inPos) >> 6 & 3L | (long)in.get(124 + inPos) << 2 & 1023L | (long)in.get(125 + inPos) << 10 & 262143L | (long)in.get(126 + inPos) << 18 & 67108863L | (long)in.get(127 + inPos) << 26 & 8589934591L;
         out[31 + outPos] = (long)in.get(127 + inPos) >> 7 & 1L | (long)in.get(128 + inPos) << 1 & 511L | (long)in.get(129 + inPos) << 9 & 131071L | (long)in.get(130 + inPos) << 17 & 33554431L | (long)in.get(131 + inPos) << 25 & 8589934591L;
      }
   }

   private static final class Packer34 extends BytePackerForLong {
      private Packer34() {
         super(34);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 17179869183L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 17179869183L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 17179869183L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 17179869183L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 17179869183L) >>> 32 | (in[1 + inPos] & 17179869183L) << 2) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 17179869183L) >>> 6 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 17179869183L) >>> 14 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 17179869183L) >>> 22 & 255L));
         out[8 + outPos] = (byte)((int)(((in[1 + inPos] & 17179869183L) >>> 30 | (in[2 + inPos] & 17179869183L) << 4) & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 17179869183L) >>> 4 & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 17179869183L) >>> 12 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 17179869183L) >>> 20 & 255L));
         out[12 + outPos] = (byte)((int)(((in[2 + inPos] & 17179869183L) >>> 28 | (in[3 + inPos] & 17179869183L) << 6) & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 17179869183L) >>> 2 & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 17179869183L) >>> 10 & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 17179869183L) >>> 18 & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 17179869183L) >>> 26 & 255L));
         out[17 + outPos] = (byte)((int)(in[4 + inPos] & 17179869183L & 255L));
         out[18 + outPos] = (byte)((int)((in[4 + inPos] & 17179869183L) >>> 8 & 255L));
         out[19 + outPos] = (byte)((int)((in[4 + inPos] & 17179869183L) >>> 16 & 255L));
         out[20 + outPos] = (byte)((int)((in[4 + inPos] & 17179869183L) >>> 24 & 255L));
         out[21 + outPos] = (byte)((int)(((in[4 + inPos] & 17179869183L) >>> 32 | (in[5 + inPos] & 17179869183L) << 2) & 255L));
         out[22 + outPos] = (byte)((int)((in[5 + inPos] & 17179869183L) >>> 6 & 255L));
         out[23 + outPos] = (byte)((int)((in[5 + inPos] & 17179869183L) >>> 14 & 255L));
         out[24 + outPos] = (byte)((int)((in[5 + inPos] & 17179869183L) >>> 22 & 255L));
         out[25 + outPos] = (byte)((int)(((in[5 + inPos] & 17179869183L) >>> 30 | (in[6 + inPos] & 17179869183L) << 4) & 255L));
         out[26 + outPos] = (byte)((int)((in[6 + inPos] & 17179869183L) >>> 4 & 255L));
         out[27 + outPos] = (byte)((int)((in[6 + inPos] & 17179869183L) >>> 12 & 255L));
         out[28 + outPos] = (byte)((int)((in[6 + inPos] & 17179869183L) >>> 20 & 255L));
         out[29 + outPos] = (byte)((int)(((in[6 + inPos] & 17179869183L) >>> 28 | (in[7 + inPos] & 17179869183L) << 6) & 255L));
         out[30 + outPos] = (byte)((int)((in[7 + inPos] & 17179869183L) >>> 2 & 255L));
         out[31 + outPos] = (byte)((int)((in[7 + inPos] & 17179869183L) >>> 10 & 255L));
         out[32 + outPos] = (byte)((int)((in[7 + inPos] & 17179869183L) >>> 18 & 255L));
         out[33 + outPos] = (byte)((int)((in[7 + inPos] & 17179869183L) >>> 26 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 17179869183L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 17179869183L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 17179869183L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 17179869183L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 17179869183L) >>> 32 | (in[1 + inPos] & 17179869183L) << 2) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 17179869183L) >>> 6 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 17179869183L) >>> 14 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 17179869183L) >>> 22 & 255L));
         out[8 + outPos] = (byte)((int)(((in[1 + inPos] & 17179869183L) >>> 30 | (in[2 + inPos] & 17179869183L) << 4) & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 17179869183L) >>> 4 & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 17179869183L) >>> 12 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 17179869183L) >>> 20 & 255L));
         out[12 + outPos] = (byte)((int)(((in[2 + inPos] & 17179869183L) >>> 28 | (in[3 + inPos] & 17179869183L) << 6) & 255L));
         out[13 + outPos] = (byte)((int)((in[3 + inPos] & 17179869183L) >>> 2 & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 17179869183L) >>> 10 & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 17179869183L) >>> 18 & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 17179869183L) >>> 26 & 255L));
         out[17 + outPos] = (byte)((int)(in[4 + inPos] & 17179869183L & 255L));
         out[18 + outPos] = (byte)((int)((in[4 + inPos] & 17179869183L) >>> 8 & 255L));
         out[19 + outPos] = (byte)((int)((in[4 + inPos] & 17179869183L) >>> 16 & 255L));
         out[20 + outPos] = (byte)((int)((in[4 + inPos] & 17179869183L) >>> 24 & 255L));
         out[21 + outPos] = (byte)((int)(((in[4 + inPos] & 17179869183L) >>> 32 | (in[5 + inPos] & 17179869183L) << 2) & 255L));
         out[22 + outPos] = (byte)((int)((in[5 + inPos] & 17179869183L) >>> 6 & 255L));
         out[23 + outPos] = (byte)((int)((in[5 + inPos] & 17179869183L) >>> 14 & 255L));
         out[24 + outPos] = (byte)((int)((in[5 + inPos] & 17179869183L) >>> 22 & 255L));
         out[25 + outPos] = (byte)((int)(((in[5 + inPos] & 17179869183L) >>> 30 | (in[6 + inPos] & 17179869183L) << 4) & 255L));
         out[26 + outPos] = (byte)((int)((in[6 + inPos] & 17179869183L) >>> 4 & 255L));
         out[27 + outPos] = (byte)((int)((in[6 + inPos] & 17179869183L) >>> 12 & 255L));
         out[28 + outPos] = (byte)((int)((in[6 + inPos] & 17179869183L) >>> 20 & 255L));
         out[29 + outPos] = (byte)((int)(((in[6 + inPos] & 17179869183L) >>> 28 | (in[7 + inPos] & 17179869183L) << 6) & 255L));
         out[30 + outPos] = (byte)((int)((in[7 + inPos] & 17179869183L) >>> 2 & 255L));
         out[31 + outPos] = (byte)((int)((in[7 + inPos] & 17179869183L) >>> 10 & 255L));
         out[32 + outPos] = (byte)((int)((in[7 + inPos] & 17179869183L) >>> 18 & 255L));
         out[33 + outPos] = (byte)((int)((in[7 + inPos] & 17179869183L) >>> 26 & 255L));
         out[34 + outPos] = (byte)((int)(in[8 + inPos] & 17179869183L & 255L));
         out[35 + outPos] = (byte)((int)((in[8 + inPos] & 17179869183L) >>> 8 & 255L));
         out[36 + outPos] = (byte)((int)((in[8 + inPos] & 17179869183L) >>> 16 & 255L));
         out[37 + outPos] = (byte)((int)((in[8 + inPos] & 17179869183L) >>> 24 & 255L));
         out[38 + outPos] = (byte)((int)(((in[8 + inPos] & 17179869183L) >>> 32 | (in[9 + inPos] & 17179869183L) << 2) & 255L));
         out[39 + outPos] = (byte)((int)((in[9 + inPos] & 17179869183L) >>> 6 & 255L));
         out[40 + outPos] = (byte)((int)((in[9 + inPos] & 17179869183L) >>> 14 & 255L));
         out[41 + outPos] = (byte)((int)((in[9 + inPos] & 17179869183L) >>> 22 & 255L));
         out[42 + outPos] = (byte)((int)(((in[9 + inPos] & 17179869183L) >>> 30 | (in[10 + inPos] & 17179869183L) << 4) & 255L));
         out[43 + outPos] = (byte)((int)((in[10 + inPos] & 17179869183L) >>> 4 & 255L));
         out[44 + outPos] = (byte)((int)((in[10 + inPos] & 17179869183L) >>> 12 & 255L));
         out[45 + outPos] = (byte)((int)((in[10 + inPos] & 17179869183L) >>> 20 & 255L));
         out[46 + outPos] = (byte)((int)(((in[10 + inPos] & 17179869183L) >>> 28 | (in[11 + inPos] & 17179869183L) << 6) & 255L));
         out[47 + outPos] = (byte)((int)((in[11 + inPos] & 17179869183L) >>> 2 & 255L));
         out[48 + outPos] = (byte)((int)((in[11 + inPos] & 17179869183L) >>> 10 & 255L));
         out[49 + outPos] = (byte)((int)((in[11 + inPos] & 17179869183L) >>> 18 & 255L));
         out[50 + outPos] = (byte)((int)((in[11 + inPos] & 17179869183L) >>> 26 & 255L));
         out[51 + outPos] = (byte)((int)(in[12 + inPos] & 17179869183L & 255L));
         out[52 + outPos] = (byte)((int)((in[12 + inPos] & 17179869183L) >>> 8 & 255L));
         out[53 + outPos] = (byte)((int)((in[12 + inPos] & 17179869183L) >>> 16 & 255L));
         out[54 + outPos] = (byte)((int)((in[12 + inPos] & 17179869183L) >>> 24 & 255L));
         out[55 + outPos] = (byte)((int)(((in[12 + inPos] & 17179869183L) >>> 32 | (in[13 + inPos] & 17179869183L) << 2) & 255L));
         out[56 + outPos] = (byte)((int)((in[13 + inPos] & 17179869183L) >>> 6 & 255L));
         out[57 + outPos] = (byte)((int)((in[13 + inPos] & 17179869183L) >>> 14 & 255L));
         out[58 + outPos] = (byte)((int)((in[13 + inPos] & 17179869183L) >>> 22 & 255L));
         out[59 + outPos] = (byte)((int)(((in[13 + inPos] & 17179869183L) >>> 30 | (in[14 + inPos] & 17179869183L) << 4) & 255L));
         out[60 + outPos] = (byte)((int)((in[14 + inPos] & 17179869183L) >>> 4 & 255L));
         out[61 + outPos] = (byte)((int)((in[14 + inPos] & 17179869183L) >>> 12 & 255L));
         out[62 + outPos] = (byte)((int)((in[14 + inPos] & 17179869183L) >>> 20 & 255L));
         out[63 + outPos] = (byte)((int)(((in[14 + inPos] & 17179869183L) >>> 28 | (in[15 + inPos] & 17179869183L) << 6) & 255L));
         out[64 + outPos] = (byte)((int)((in[15 + inPos] & 17179869183L) >>> 2 & 255L));
         out[65 + outPos] = (byte)((int)((in[15 + inPos] & 17179869183L) >>> 10 & 255L));
         out[66 + outPos] = (byte)((int)((in[15 + inPos] & 17179869183L) >>> 18 & 255L));
         out[67 + outPos] = (byte)((int)((in[15 + inPos] & 17179869183L) >>> 26 & 255L));
         out[68 + outPos] = (byte)((int)(in[16 + inPos] & 17179869183L & 255L));
         out[69 + outPos] = (byte)((int)((in[16 + inPos] & 17179869183L) >>> 8 & 255L));
         out[70 + outPos] = (byte)((int)((in[16 + inPos] & 17179869183L) >>> 16 & 255L));
         out[71 + outPos] = (byte)((int)((in[16 + inPos] & 17179869183L) >>> 24 & 255L));
         out[72 + outPos] = (byte)((int)(((in[16 + inPos] & 17179869183L) >>> 32 | (in[17 + inPos] & 17179869183L) << 2) & 255L));
         out[73 + outPos] = (byte)((int)((in[17 + inPos] & 17179869183L) >>> 6 & 255L));
         out[74 + outPos] = (byte)((int)((in[17 + inPos] & 17179869183L) >>> 14 & 255L));
         out[75 + outPos] = (byte)((int)((in[17 + inPos] & 17179869183L) >>> 22 & 255L));
         out[76 + outPos] = (byte)((int)(((in[17 + inPos] & 17179869183L) >>> 30 | (in[18 + inPos] & 17179869183L) << 4) & 255L));
         out[77 + outPos] = (byte)((int)((in[18 + inPos] & 17179869183L) >>> 4 & 255L));
         out[78 + outPos] = (byte)((int)((in[18 + inPos] & 17179869183L) >>> 12 & 255L));
         out[79 + outPos] = (byte)((int)((in[18 + inPos] & 17179869183L) >>> 20 & 255L));
         out[80 + outPos] = (byte)((int)(((in[18 + inPos] & 17179869183L) >>> 28 | (in[19 + inPos] & 17179869183L) << 6) & 255L));
         out[81 + outPos] = (byte)((int)((in[19 + inPos] & 17179869183L) >>> 2 & 255L));
         out[82 + outPos] = (byte)((int)((in[19 + inPos] & 17179869183L) >>> 10 & 255L));
         out[83 + outPos] = (byte)((int)((in[19 + inPos] & 17179869183L) >>> 18 & 255L));
         out[84 + outPos] = (byte)((int)((in[19 + inPos] & 17179869183L) >>> 26 & 255L));
         out[85 + outPos] = (byte)((int)(in[20 + inPos] & 17179869183L & 255L));
         out[86 + outPos] = (byte)((int)((in[20 + inPos] & 17179869183L) >>> 8 & 255L));
         out[87 + outPos] = (byte)((int)((in[20 + inPos] & 17179869183L) >>> 16 & 255L));
         out[88 + outPos] = (byte)((int)((in[20 + inPos] & 17179869183L) >>> 24 & 255L));
         out[89 + outPos] = (byte)((int)(((in[20 + inPos] & 17179869183L) >>> 32 | (in[21 + inPos] & 17179869183L) << 2) & 255L));
         out[90 + outPos] = (byte)((int)((in[21 + inPos] & 17179869183L) >>> 6 & 255L));
         out[91 + outPos] = (byte)((int)((in[21 + inPos] & 17179869183L) >>> 14 & 255L));
         out[92 + outPos] = (byte)((int)((in[21 + inPos] & 17179869183L) >>> 22 & 255L));
         out[93 + outPos] = (byte)((int)(((in[21 + inPos] & 17179869183L) >>> 30 | (in[22 + inPos] & 17179869183L) << 4) & 255L));
         out[94 + outPos] = (byte)((int)((in[22 + inPos] & 17179869183L) >>> 4 & 255L));
         out[95 + outPos] = (byte)((int)((in[22 + inPos] & 17179869183L) >>> 12 & 255L));
         out[96 + outPos] = (byte)((int)((in[22 + inPos] & 17179869183L) >>> 20 & 255L));
         out[97 + outPos] = (byte)((int)(((in[22 + inPos] & 17179869183L) >>> 28 | (in[23 + inPos] & 17179869183L) << 6) & 255L));
         out[98 + outPos] = (byte)((int)((in[23 + inPos] & 17179869183L) >>> 2 & 255L));
         out[99 + outPos] = (byte)((int)((in[23 + inPos] & 17179869183L) >>> 10 & 255L));
         out[100 + outPos] = (byte)((int)((in[23 + inPos] & 17179869183L) >>> 18 & 255L));
         out[101 + outPos] = (byte)((int)((in[23 + inPos] & 17179869183L) >>> 26 & 255L));
         out[102 + outPos] = (byte)((int)(in[24 + inPos] & 17179869183L & 255L));
         out[103 + outPos] = (byte)((int)((in[24 + inPos] & 17179869183L) >>> 8 & 255L));
         out[104 + outPos] = (byte)((int)((in[24 + inPos] & 17179869183L) >>> 16 & 255L));
         out[105 + outPos] = (byte)((int)((in[24 + inPos] & 17179869183L) >>> 24 & 255L));
         out[106 + outPos] = (byte)((int)(((in[24 + inPos] & 17179869183L) >>> 32 | (in[25 + inPos] & 17179869183L) << 2) & 255L));
         out[107 + outPos] = (byte)((int)((in[25 + inPos] & 17179869183L) >>> 6 & 255L));
         out[108 + outPos] = (byte)((int)((in[25 + inPos] & 17179869183L) >>> 14 & 255L));
         out[109 + outPos] = (byte)((int)((in[25 + inPos] & 17179869183L) >>> 22 & 255L));
         out[110 + outPos] = (byte)((int)(((in[25 + inPos] & 17179869183L) >>> 30 | (in[26 + inPos] & 17179869183L) << 4) & 255L));
         out[111 + outPos] = (byte)((int)((in[26 + inPos] & 17179869183L) >>> 4 & 255L));
         out[112 + outPos] = (byte)((int)((in[26 + inPos] & 17179869183L) >>> 12 & 255L));
         out[113 + outPos] = (byte)((int)((in[26 + inPos] & 17179869183L) >>> 20 & 255L));
         out[114 + outPos] = (byte)((int)(((in[26 + inPos] & 17179869183L) >>> 28 | (in[27 + inPos] & 17179869183L) << 6) & 255L));
         out[115 + outPos] = (byte)((int)((in[27 + inPos] & 17179869183L) >>> 2 & 255L));
         out[116 + outPos] = (byte)((int)((in[27 + inPos] & 17179869183L) >>> 10 & 255L));
         out[117 + outPos] = (byte)((int)((in[27 + inPos] & 17179869183L) >>> 18 & 255L));
         out[118 + outPos] = (byte)((int)((in[27 + inPos] & 17179869183L) >>> 26 & 255L));
         out[119 + outPos] = (byte)((int)(in[28 + inPos] & 17179869183L & 255L));
         out[120 + outPos] = (byte)((int)((in[28 + inPos] & 17179869183L) >>> 8 & 255L));
         out[121 + outPos] = (byte)((int)((in[28 + inPos] & 17179869183L) >>> 16 & 255L));
         out[122 + outPos] = (byte)((int)((in[28 + inPos] & 17179869183L) >>> 24 & 255L));
         out[123 + outPos] = (byte)((int)(((in[28 + inPos] & 17179869183L) >>> 32 | (in[29 + inPos] & 17179869183L) << 2) & 255L));
         out[124 + outPos] = (byte)((int)((in[29 + inPos] & 17179869183L) >>> 6 & 255L));
         out[125 + outPos] = (byte)((int)((in[29 + inPos] & 17179869183L) >>> 14 & 255L));
         out[126 + outPos] = (byte)((int)((in[29 + inPos] & 17179869183L) >>> 22 & 255L));
         out[127 + outPos] = (byte)((int)(((in[29 + inPos] & 17179869183L) >>> 30 | (in[30 + inPos] & 17179869183L) << 4) & 255L));
         out[128 + outPos] = (byte)((int)((in[30 + inPos] & 17179869183L) >>> 4 & 255L));
         out[129 + outPos] = (byte)((int)((in[30 + inPos] & 17179869183L) >>> 12 & 255L));
         out[130 + outPos] = (byte)((int)((in[30 + inPos] & 17179869183L) >>> 20 & 255L));
         out[131 + outPos] = (byte)((int)(((in[30 + inPos] & 17179869183L) >>> 28 | (in[31 + inPos] & 17179869183L) << 6) & 255L));
         out[132 + outPos] = (byte)((int)((in[31 + inPos] & 17179869183L) >>> 2 & 255L));
         out[133 + outPos] = (byte)((int)((in[31 + inPos] & 17179869183L) >>> 10 & 255L));
         out[134 + outPos] = (byte)((int)((in[31 + inPos] & 17179869183L) >>> 18 & 255L));
         out[135 + outPos] = (byte)((int)((in[31 + inPos] & 17179869183L) >>> 26 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 17179869183L;
         out[1 + outPos] = (long)in[4 + inPos] >> 2 & 63L | (long)in[5 + inPos] << 6 & 16383L | (long)in[6 + inPos] << 14 & 4194303L | (long)in[7 + inPos] << 22 & 1073741823L | (long)in[8 + inPos] << 30 & 17179869183L;
         out[2 + outPos] = (long)in[8 + inPos] >> 4 & 15L | (long)in[9 + inPos] << 4 & 4095L | (long)in[10 + inPos] << 12 & 1048575L | (long)in[11 + inPos] << 20 & 268435455L | (long)in[12 + inPos] << 28 & 17179869183L;
         out[3 + outPos] = (long)in[12 + inPos] >> 6 & 3L | (long)in[13 + inPos] << 2 & 1023L | (long)in[14 + inPos] << 10 & 262143L | (long)in[15 + inPos] << 18 & 67108863L | (long)in[16 + inPos] << 26 & 17179869183L;
         out[4 + outPos] = (long)in[17 + inPos] & 255L | (long)in[18 + inPos] << 8 & 65535L | (long)in[19 + inPos] << 16 & 16777215L | (long)in[20 + inPos] << 24 & 4294967295L | (long)in[21 + inPos] << 32 & 17179869183L;
         out[5 + outPos] = (long)in[21 + inPos] >> 2 & 63L | (long)in[22 + inPos] << 6 & 16383L | (long)in[23 + inPos] << 14 & 4194303L | (long)in[24 + inPos] << 22 & 1073741823L | (long)in[25 + inPos] << 30 & 17179869183L;
         out[6 + outPos] = (long)in[25 + inPos] >> 4 & 15L | (long)in[26 + inPos] << 4 & 4095L | (long)in[27 + inPos] << 12 & 1048575L | (long)in[28 + inPos] << 20 & 268435455L | (long)in[29 + inPos] << 28 & 17179869183L;
         out[7 + outPos] = (long)in[29 + inPos] >> 6 & 3L | (long)in[30 + inPos] << 2 & 1023L | (long)in[31 + inPos] << 10 & 262143L | (long)in[32 + inPos] << 18 & 67108863L | (long)in[33 + inPos] << 26 & 17179869183L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 17179869183L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 2 & 63L | (long)in.get(5 + inPos) << 6 & 16383L | (long)in.get(6 + inPos) << 14 & 4194303L | (long)in.get(7 + inPos) << 22 & 1073741823L | (long)in.get(8 + inPos) << 30 & 17179869183L;
         out[2 + outPos] = (long)in.get(8 + inPos) >> 4 & 15L | (long)in.get(9 + inPos) << 4 & 4095L | (long)in.get(10 + inPos) << 12 & 1048575L | (long)in.get(11 + inPos) << 20 & 268435455L | (long)in.get(12 + inPos) << 28 & 17179869183L;
         out[3 + outPos] = (long)in.get(12 + inPos) >> 6 & 3L | (long)in.get(13 + inPos) << 2 & 1023L | (long)in.get(14 + inPos) << 10 & 262143L | (long)in.get(15 + inPos) << 18 & 67108863L | (long)in.get(16 + inPos) << 26 & 17179869183L;
         out[4 + outPos] = (long)in.get(17 + inPos) & 255L | (long)in.get(18 + inPos) << 8 & 65535L | (long)in.get(19 + inPos) << 16 & 16777215L | (long)in.get(20 + inPos) << 24 & 4294967295L | (long)in.get(21 + inPos) << 32 & 17179869183L;
         out[5 + outPos] = (long)in.get(21 + inPos) >> 2 & 63L | (long)in.get(22 + inPos) << 6 & 16383L | (long)in.get(23 + inPos) << 14 & 4194303L | (long)in.get(24 + inPos) << 22 & 1073741823L | (long)in.get(25 + inPos) << 30 & 17179869183L;
         out[6 + outPos] = (long)in.get(25 + inPos) >> 4 & 15L | (long)in.get(26 + inPos) << 4 & 4095L | (long)in.get(27 + inPos) << 12 & 1048575L | (long)in.get(28 + inPos) << 20 & 268435455L | (long)in.get(29 + inPos) << 28 & 17179869183L;
         out[7 + outPos] = (long)in.get(29 + inPos) >> 6 & 3L | (long)in.get(30 + inPos) << 2 & 1023L | (long)in.get(31 + inPos) << 10 & 262143L | (long)in.get(32 + inPos) << 18 & 67108863L | (long)in.get(33 + inPos) << 26 & 17179869183L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 17179869183L;
         out[1 + outPos] = (long)in[4 + inPos] >> 2 & 63L | (long)in[5 + inPos] << 6 & 16383L | (long)in[6 + inPos] << 14 & 4194303L | (long)in[7 + inPos] << 22 & 1073741823L | (long)in[8 + inPos] << 30 & 17179869183L;
         out[2 + outPos] = (long)in[8 + inPos] >> 4 & 15L | (long)in[9 + inPos] << 4 & 4095L | (long)in[10 + inPos] << 12 & 1048575L | (long)in[11 + inPos] << 20 & 268435455L | (long)in[12 + inPos] << 28 & 17179869183L;
         out[3 + outPos] = (long)in[12 + inPos] >> 6 & 3L | (long)in[13 + inPos] << 2 & 1023L | (long)in[14 + inPos] << 10 & 262143L | (long)in[15 + inPos] << 18 & 67108863L | (long)in[16 + inPos] << 26 & 17179869183L;
         out[4 + outPos] = (long)in[17 + inPos] & 255L | (long)in[18 + inPos] << 8 & 65535L | (long)in[19 + inPos] << 16 & 16777215L | (long)in[20 + inPos] << 24 & 4294967295L | (long)in[21 + inPos] << 32 & 17179869183L;
         out[5 + outPos] = (long)in[21 + inPos] >> 2 & 63L | (long)in[22 + inPos] << 6 & 16383L | (long)in[23 + inPos] << 14 & 4194303L | (long)in[24 + inPos] << 22 & 1073741823L | (long)in[25 + inPos] << 30 & 17179869183L;
         out[6 + outPos] = (long)in[25 + inPos] >> 4 & 15L | (long)in[26 + inPos] << 4 & 4095L | (long)in[27 + inPos] << 12 & 1048575L | (long)in[28 + inPos] << 20 & 268435455L | (long)in[29 + inPos] << 28 & 17179869183L;
         out[7 + outPos] = (long)in[29 + inPos] >> 6 & 3L | (long)in[30 + inPos] << 2 & 1023L | (long)in[31 + inPos] << 10 & 262143L | (long)in[32 + inPos] << 18 & 67108863L | (long)in[33 + inPos] << 26 & 17179869183L;
         out[8 + outPos] = (long)in[34 + inPos] & 255L | (long)in[35 + inPos] << 8 & 65535L | (long)in[36 + inPos] << 16 & 16777215L | (long)in[37 + inPos] << 24 & 4294967295L | (long)in[38 + inPos] << 32 & 17179869183L;
         out[9 + outPos] = (long)in[38 + inPos] >> 2 & 63L | (long)in[39 + inPos] << 6 & 16383L | (long)in[40 + inPos] << 14 & 4194303L | (long)in[41 + inPos] << 22 & 1073741823L | (long)in[42 + inPos] << 30 & 17179869183L;
         out[10 + outPos] = (long)in[42 + inPos] >> 4 & 15L | (long)in[43 + inPos] << 4 & 4095L | (long)in[44 + inPos] << 12 & 1048575L | (long)in[45 + inPos] << 20 & 268435455L | (long)in[46 + inPos] << 28 & 17179869183L;
         out[11 + outPos] = (long)in[46 + inPos] >> 6 & 3L | (long)in[47 + inPos] << 2 & 1023L | (long)in[48 + inPos] << 10 & 262143L | (long)in[49 + inPos] << 18 & 67108863L | (long)in[50 + inPos] << 26 & 17179869183L;
         out[12 + outPos] = (long)in[51 + inPos] & 255L | (long)in[52 + inPos] << 8 & 65535L | (long)in[53 + inPos] << 16 & 16777215L | (long)in[54 + inPos] << 24 & 4294967295L | (long)in[55 + inPos] << 32 & 17179869183L;
         out[13 + outPos] = (long)in[55 + inPos] >> 2 & 63L | (long)in[56 + inPos] << 6 & 16383L | (long)in[57 + inPos] << 14 & 4194303L | (long)in[58 + inPos] << 22 & 1073741823L | (long)in[59 + inPos] << 30 & 17179869183L;
         out[14 + outPos] = (long)in[59 + inPos] >> 4 & 15L | (long)in[60 + inPos] << 4 & 4095L | (long)in[61 + inPos] << 12 & 1048575L | (long)in[62 + inPos] << 20 & 268435455L | (long)in[63 + inPos] << 28 & 17179869183L;
         out[15 + outPos] = (long)in[63 + inPos] >> 6 & 3L | (long)in[64 + inPos] << 2 & 1023L | (long)in[65 + inPos] << 10 & 262143L | (long)in[66 + inPos] << 18 & 67108863L | (long)in[67 + inPos] << 26 & 17179869183L;
         out[16 + outPos] = (long)in[68 + inPos] & 255L | (long)in[69 + inPos] << 8 & 65535L | (long)in[70 + inPos] << 16 & 16777215L | (long)in[71 + inPos] << 24 & 4294967295L | (long)in[72 + inPos] << 32 & 17179869183L;
         out[17 + outPos] = (long)in[72 + inPos] >> 2 & 63L | (long)in[73 + inPos] << 6 & 16383L | (long)in[74 + inPos] << 14 & 4194303L | (long)in[75 + inPos] << 22 & 1073741823L | (long)in[76 + inPos] << 30 & 17179869183L;
         out[18 + outPos] = (long)in[76 + inPos] >> 4 & 15L | (long)in[77 + inPos] << 4 & 4095L | (long)in[78 + inPos] << 12 & 1048575L | (long)in[79 + inPos] << 20 & 268435455L | (long)in[80 + inPos] << 28 & 17179869183L;
         out[19 + outPos] = (long)in[80 + inPos] >> 6 & 3L | (long)in[81 + inPos] << 2 & 1023L | (long)in[82 + inPos] << 10 & 262143L | (long)in[83 + inPos] << 18 & 67108863L | (long)in[84 + inPos] << 26 & 17179869183L;
         out[20 + outPos] = (long)in[85 + inPos] & 255L | (long)in[86 + inPos] << 8 & 65535L | (long)in[87 + inPos] << 16 & 16777215L | (long)in[88 + inPos] << 24 & 4294967295L | (long)in[89 + inPos] << 32 & 17179869183L;
         out[21 + outPos] = (long)in[89 + inPos] >> 2 & 63L | (long)in[90 + inPos] << 6 & 16383L | (long)in[91 + inPos] << 14 & 4194303L | (long)in[92 + inPos] << 22 & 1073741823L | (long)in[93 + inPos] << 30 & 17179869183L;
         out[22 + outPos] = (long)in[93 + inPos] >> 4 & 15L | (long)in[94 + inPos] << 4 & 4095L | (long)in[95 + inPos] << 12 & 1048575L | (long)in[96 + inPos] << 20 & 268435455L | (long)in[97 + inPos] << 28 & 17179869183L;
         out[23 + outPos] = (long)in[97 + inPos] >> 6 & 3L | (long)in[98 + inPos] << 2 & 1023L | (long)in[99 + inPos] << 10 & 262143L | (long)in[100 + inPos] << 18 & 67108863L | (long)in[101 + inPos] << 26 & 17179869183L;
         out[24 + outPos] = (long)in[102 + inPos] & 255L | (long)in[103 + inPos] << 8 & 65535L | (long)in[104 + inPos] << 16 & 16777215L | (long)in[105 + inPos] << 24 & 4294967295L | (long)in[106 + inPos] << 32 & 17179869183L;
         out[25 + outPos] = (long)in[106 + inPos] >> 2 & 63L | (long)in[107 + inPos] << 6 & 16383L | (long)in[108 + inPos] << 14 & 4194303L | (long)in[109 + inPos] << 22 & 1073741823L | (long)in[110 + inPos] << 30 & 17179869183L;
         out[26 + outPos] = (long)in[110 + inPos] >> 4 & 15L | (long)in[111 + inPos] << 4 & 4095L | (long)in[112 + inPos] << 12 & 1048575L | (long)in[113 + inPos] << 20 & 268435455L | (long)in[114 + inPos] << 28 & 17179869183L;
         out[27 + outPos] = (long)in[114 + inPos] >> 6 & 3L | (long)in[115 + inPos] << 2 & 1023L | (long)in[116 + inPos] << 10 & 262143L | (long)in[117 + inPos] << 18 & 67108863L | (long)in[118 + inPos] << 26 & 17179869183L;
         out[28 + outPos] = (long)in[119 + inPos] & 255L | (long)in[120 + inPos] << 8 & 65535L | (long)in[121 + inPos] << 16 & 16777215L | (long)in[122 + inPos] << 24 & 4294967295L | (long)in[123 + inPos] << 32 & 17179869183L;
         out[29 + outPos] = (long)in[123 + inPos] >> 2 & 63L | (long)in[124 + inPos] << 6 & 16383L | (long)in[125 + inPos] << 14 & 4194303L | (long)in[126 + inPos] << 22 & 1073741823L | (long)in[127 + inPos] << 30 & 17179869183L;
         out[30 + outPos] = (long)in[127 + inPos] >> 4 & 15L | (long)in[128 + inPos] << 4 & 4095L | (long)in[129 + inPos] << 12 & 1048575L | (long)in[130 + inPos] << 20 & 268435455L | (long)in[131 + inPos] << 28 & 17179869183L;
         out[31 + outPos] = (long)in[131 + inPos] >> 6 & 3L | (long)in[132 + inPos] << 2 & 1023L | (long)in[133 + inPos] << 10 & 262143L | (long)in[134 + inPos] << 18 & 67108863L | (long)in[135 + inPos] << 26 & 17179869183L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 17179869183L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 2 & 63L | (long)in.get(5 + inPos) << 6 & 16383L | (long)in.get(6 + inPos) << 14 & 4194303L | (long)in.get(7 + inPos) << 22 & 1073741823L | (long)in.get(8 + inPos) << 30 & 17179869183L;
         out[2 + outPos] = (long)in.get(8 + inPos) >> 4 & 15L | (long)in.get(9 + inPos) << 4 & 4095L | (long)in.get(10 + inPos) << 12 & 1048575L | (long)in.get(11 + inPos) << 20 & 268435455L | (long)in.get(12 + inPos) << 28 & 17179869183L;
         out[3 + outPos] = (long)in.get(12 + inPos) >> 6 & 3L | (long)in.get(13 + inPos) << 2 & 1023L | (long)in.get(14 + inPos) << 10 & 262143L | (long)in.get(15 + inPos) << 18 & 67108863L | (long)in.get(16 + inPos) << 26 & 17179869183L;
         out[4 + outPos] = (long)in.get(17 + inPos) & 255L | (long)in.get(18 + inPos) << 8 & 65535L | (long)in.get(19 + inPos) << 16 & 16777215L | (long)in.get(20 + inPos) << 24 & 4294967295L | (long)in.get(21 + inPos) << 32 & 17179869183L;
         out[5 + outPos] = (long)in.get(21 + inPos) >> 2 & 63L | (long)in.get(22 + inPos) << 6 & 16383L | (long)in.get(23 + inPos) << 14 & 4194303L | (long)in.get(24 + inPos) << 22 & 1073741823L | (long)in.get(25 + inPos) << 30 & 17179869183L;
         out[6 + outPos] = (long)in.get(25 + inPos) >> 4 & 15L | (long)in.get(26 + inPos) << 4 & 4095L | (long)in.get(27 + inPos) << 12 & 1048575L | (long)in.get(28 + inPos) << 20 & 268435455L | (long)in.get(29 + inPos) << 28 & 17179869183L;
         out[7 + outPos] = (long)in.get(29 + inPos) >> 6 & 3L | (long)in.get(30 + inPos) << 2 & 1023L | (long)in.get(31 + inPos) << 10 & 262143L | (long)in.get(32 + inPos) << 18 & 67108863L | (long)in.get(33 + inPos) << 26 & 17179869183L;
         out[8 + outPos] = (long)in.get(34 + inPos) & 255L | (long)in.get(35 + inPos) << 8 & 65535L | (long)in.get(36 + inPos) << 16 & 16777215L | (long)in.get(37 + inPos) << 24 & 4294967295L | (long)in.get(38 + inPos) << 32 & 17179869183L;
         out[9 + outPos] = (long)in.get(38 + inPos) >> 2 & 63L | (long)in.get(39 + inPos) << 6 & 16383L | (long)in.get(40 + inPos) << 14 & 4194303L | (long)in.get(41 + inPos) << 22 & 1073741823L | (long)in.get(42 + inPos) << 30 & 17179869183L;
         out[10 + outPos] = (long)in.get(42 + inPos) >> 4 & 15L | (long)in.get(43 + inPos) << 4 & 4095L | (long)in.get(44 + inPos) << 12 & 1048575L | (long)in.get(45 + inPos) << 20 & 268435455L | (long)in.get(46 + inPos) << 28 & 17179869183L;
         out[11 + outPos] = (long)in.get(46 + inPos) >> 6 & 3L | (long)in.get(47 + inPos) << 2 & 1023L | (long)in.get(48 + inPos) << 10 & 262143L | (long)in.get(49 + inPos) << 18 & 67108863L | (long)in.get(50 + inPos) << 26 & 17179869183L;
         out[12 + outPos] = (long)in.get(51 + inPos) & 255L | (long)in.get(52 + inPos) << 8 & 65535L | (long)in.get(53 + inPos) << 16 & 16777215L | (long)in.get(54 + inPos) << 24 & 4294967295L | (long)in.get(55 + inPos) << 32 & 17179869183L;
         out[13 + outPos] = (long)in.get(55 + inPos) >> 2 & 63L | (long)in.get(56 + inPos) << 6 & 16383L | (long)in.get(57 + inPos) << 14 & 4194303L | (long)in.get(58 + inPos) << 22 & 1073741823L | (long)in.get(59 + inPos) << 30 & 17179869183L;
         out[14 + outPos] = (long)in.get(59 + inPos) >> 4 & 15L | (long)in.get(60 + inPos) << 4 & 4095L | (long)in.get(61 + inPos) << 12 & 1048575L | (long)in.get(62 + inPos) << 20 & 268435455L | (long)in.get(63 + inPos) << 28 & 17179869183L;
         out[15 + outPos] = (long)in.get(63 + inPos) >> 6 & 3L | (long)in.get(64 + inPos) << 2 & 1023L | (long)in.get(65 + inPos) << 10 & 262143L | (long)in.get(66 + inPos) << 18 & 67108863L | (long)in.get(67 + inPos) << 26 & 17179869183L;
         out[16 + outPos] = (long)in.get(68 + inPos) & 255L | (long)in.get(69 + inPos) << 8 & 65535L | (long)in.get(70 + inPos) << 16 & 16777215L | (long)in.get(71 + inPos) << 24 & 4294967295L | (long)in.get(72 + inPos) << 32 & 17179869183L;
         out[17 + outPos] = (long)in.get(72 + inPos) >> 2 & 63L | (long)in.get(73 + inPos) << 6 & 16383L | (long)in.get(74 + inPos) << 14 & 4194303L | (long)in.get(75 + inPos) << 22 & 1073741823L | (long)in.get(76 + inPos) << 30 & 17179869183L;
         out[18 + outPos] = (long)in.get(76 + inPos) >> 4 & 15L | (long)in.get(77 + inPos) << 4 & 4095L | (long)in.get(78 + inPos) << 12 & 1048575L | (long)in.get(79 + inPos) << 20 & 268435455L | (long)in.get(80 + inPos) << 28 & 17179869183L;
         out[19 + outPos] = (long)in.get(80 + inPos) >> 6 & 3L | (long)in.get(81 + inPos) << 2 & 1023L | (long)in.get(82 + inPos) << 10 & 262143L | (long)in.get(83 + inPos) << 18 & 67108863L | (long)in.get(84 + inPos) << 26 & 17179869183L;
         out[20 + outPos] = (long)in.get(85 + inPos) & 255L | (long)in.get(86 + inPos) << 8 & 65535L | (long)in.get(87 + inPos) << 16 & 16777215L | (long)in.get(88 + inPos) << 24 & 4294967295L | (long)in.get(89 + inPos) << 32 & 17179869183L;
         out[21 + outPos] = (long)in.get(89 + inPos) >> 2 & 63L | (long)in.get(90 + inPos) << 6 & 16383L | (long)in.get(91 + inPos) << 14 & 4194303L | (long)in.get(92 + inPos) << 22 & 1073741823L | (long)in.get(93 + inPos) << 30 & 17179869183L;
         out[22 + outPos] = (long)in.get(93 + inPos) >> 4 & 15L | (long)in.get(94 + inPos) << 4 & 4095L | (long)in.get(95 + inPos) << 12 & 1048575L | (long)in.get(96 + inPos) << 20 & 268435455L | (long)in.get(97 + inPos) << 28 & 17179869183L;
         out[23 + outPos] = (long)in.get(97 + inPos) >> 6 & 3L | (long)in.get(98 + inPos) << 2 & 1023L | (long)in.get(99 + inPos) << 10 & 262143L | (long)in.get(100 + inPos) << 18 & 67108863L | (long)in.get(101 + inPos) << 26 & 17179869183L;
         out[24 + outPos] = (long)in.get(102 + inPos) & 255L | (long)in.get(103 + inPos) << 8 & 65535L | (long)in.get(104 + inPos) << 16 & 16777215L | (long)in.get(105 + inPos) << 24 & 4294967295L | (long)in.get(106 + inPos) << 32 & 17179869183L;
         out[25 + outPos] = (long)in.get(106 + inPos) >> 2 & 63L | (long)in.get(107 + inPos) << 6 & 16383L | (long)in.get(108 + inPos) << 14 & 4194303L | (long)in.get(109 + inPos) << 22 & 1073741823L | (long)in.get(110 + inPos) << 30 & 17179869183L;
         out[26 + outPos] = (long)in.get(110 + inPos) >> 4 & 15L | (long)in.get(111 + inPos) << 4 & 4095L | (long)in.get(112 + inPos) << 12 & 1048575L | (long)in.get(113 + inPos) << 20 & 268435455L | (long)in.get(114 + inPos) << 28 & 17179869183L;
         out[27 + outPos] = (long)in.get(114 + inPos) >> 6 & 3L | (long)in.get(115 + inPos) << 2 & 1023L | (long)in.get(116 + inPos) << 10 & 262143L | (long)in.get(117 + inPos) << 18 & 67108863L | (long)in.get(118 + inPos) << 26 & 17179869183L;
         out[28 + outPos] = (long)in.get(119 + inPos) & 255L | (long)in.get(120 + inPos) << 8 & 65535L | (long)in.get(121 + inPos) << 16 & 16777215L | (long)in.get(122 + inPos) << 24 & 4294967295L | (long)in.get(123 + inPos) << 32 & 17179869183L;
         out[29 + outPos] = (long)in.get(123 + inPos) >> 2 & 63L | (long)in.get(124 + inPos) << 6 & 16383L | (long)in.get(125 + inPos) << 14 & 4194303L | (long)in.get(126 + inPos) << 22 & 1073741823L | (long)in.get(127 + inPos) << 30 & 17179869183L;
         out[30 + outPos] = (long)in.get(127 + inPos) >> 4 & 15L | (long)in.get(128 + inPos) << 4 & 4095L | (long)in.get(129 + inPos) << 12 & 1048575L | (long)in.get(130 + inPos) << 20 & 268435455L | (long)in.get(131 + inPos) << 28 & 17179869183L;
         out[31 + outPos] = (long)in.get(131 + inPos) >> 6 & 3L | (long)in.get(132 + inPos) << 2 & 1023L | (long)in.get(133 + inPos) << 10 & 262143L | (long)in.get(134 + inPos) << 18 & 67108863L | (long)in.get(135 + inPos) << 26 & 17179869183L;
      }
   }

   private static final class Packer35 extends BytePackerForLong {
      private Packer35() {
         super(35);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 34359738367L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 34359738367L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 34359738367L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 34359738367L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 34359738367L) >>> 32 | (in[1 + inPos] & 34359738367L) << 3) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 34359738367L) >>> 5 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 34359738367L) >>> 13 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 34359738367L) >>> 21 & 255L));
         out[8 + outPos] = (byte)((int)(((in[1 + inPos] & 34359738367L) >>> 29 | (in[2 + inPos] & 34359738367L) << 6) & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 34359738367L) >>> 2 & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 34359738367L) >>> 10 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 34359738367L) >>> 18 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 34359738367L) >>> 26 & 255L));
         out[13 + outPos] = (byte)((int)(((in[2 + inPos] & 34359738367L) >>> 34 | (in[3 + inPos] & 34359738367L) << 1) & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 34359738367L) >>> 7 & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 34359738367L) >>> 15 & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 34359738367L) >>> 23 & 255L));
         out[17 + outPos] = (byte)((int)(((in[3 + inPos] & 34359738367L) >>> 31 | (in[4 + inPos] & 34359738367L) << 4) & 255L));
         out[18 + outPos] = (byte)((int)((in[4 + inPos] & 34359738367L) >>> 4 & 255L));
         out[19 + outPos] = (byte)((int)((in[4 + inPos] & 34359738367L) >>> 12 & 255L));
         out[20 + outPos] = (byte)((int)((in[4 + inPos] & 34359738367L) >>> 20 & 255L));
         out[21 + outPos] = (byte)((int)(((in[4 + inPos] & 34359738367L) >>> 28 | (in[5 + inPos] & 34359738367L) << 7) & 255L));
         out[22 + outPos] = (byte)((int)((in[5 + inPos] & 34359738367L) >>> 1 & 255L));
         out[23 + outPos] = (byte)((int)((in[5 + inPos] & 34359738367L) >>> 9 & 255L));
         out[24 + outPos] = (byte)((int)((in[5 + inPos] & 34359738367L) >>> 17 & 255L));
         out[25 + outPos] = (byte)((int)((in[5 + inPos] & 34359738367L) >>> 25 & 255L));
         out[26 + outPos] = (byte)((int)(((in[5 + inPos] & 34359738367L) >>> 33 | (in[6 + inPos] & 34359738367L) << 2) & 255L));
         out[27 + outPos] = (byte)((int)((in[6 + inPos] & 34359738367L) >>> 6 & 255L));
         out[28 + outPos] = (byte)((int)((in[6 + inPos] & 34359738367L) >>> 14 & 255L));
         out[29 + outPos] = (byte)((int)((in[6 + inPos] & 34359738367L) >>> 22 & 255L));
         out[30 + outPos] = (byte)((int)(((in[6 + inPos] & 34359738367L) >>> 30 | (in[7 + inPos] & 34359738367L) << 5) & 255L));
         out[31 + outPos] = (byte)((int)((in[7 + inPos] & 34359738367L) >>> 3 & 255L));
         out[32 + outPos] = (byte)((int)((in[7 + inPos] & 34359738367L) >>> 11 & 255L));
         out[33 + outPos] = (byte)((int)((in[7 + inPos] & 34359738367L) >>> 19 & 255L));
         out[34 + outPos] = (byte)((int)((in[7 + inPos] & 34359738367L) >>> 27 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 34359738367L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 34359738367L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 34359738367L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 34359738367L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 34359738367L) >>> 32 | (in[1 + inPos] & 34359738367L) << 3) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 34359738367L) >>> 5 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 34359738367L) >>> 13 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 34359738367L) >>> 21 & 255L));
         out[8 + outPos] = (byte)((int)(((in[1 + inPos] & 34359738367L) >>> 29 | (in[2 + inPos] & 34359738367L) << 6) & 255L));
         out[9 + outPos] = (byte)((int)((in[2 + inPos] & 34359738367L) >>> 2 & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 34359738367L) >>> 10 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 34359738367L) >>> 18 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 34359738367L) >>> 26 & 255L));
         out[13 + outPos] = (byte)((int)(((in[2 + inPos] & 34359738367L) >>> 34 | (in[3 + inPos] & 34359738367L) << 1) & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 34359738367L) >>> 7 & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 34359738367L) >>> 15 & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 34359738367L) >>> 23 & 255L));
         out[17 + outPos] = (byte)((int)(((in[3 + inPos] & 34359738367L) >>> 31 | (in[4 + inPos] & 34359738367L) << 4) & 255L));
         out[18 + outPos] = (byte)((int)((in[4 + inPos] & 34359738367L) >>> 4 & 255L));
         out[19 + outPos] = (byte)((int)((in[4 + inPos] & 34359738367L) >>> 12 & 255L));
         out[20 + outPos] = (byte)((int)((in[4 + inPos] & 34359738367L) >>> 20 & 255L));
         out[21 + outPos] = (byte)((int)(((in[4 + inPos] & 34359738367L) >>> 28 | (in[5 + inPos] & 34359738367L) << 7) & 255L));
         out[22 + outPos] = (byte)((int)((in[5 + inPos] & 34359738367L) >>> 1 & 255L));
         out[23 + outPos] = (byte)((int)((in[5 + inPos] & 34359738367L) >>> 9 & 255L));
         out[24 + outPos] = (byte)((int)((in[5 + inPos] & 34359738367L) >>> 17 & 255L));
         out[25 + outPos] = (byte)((int)((in[5 + inPos] & 34359738367L) >>> 25 & 255L));
         out[26 + outPos] = (byte)((int)(((in[5 + inPos] & 34359738367L) >>> 33 | (in[6 + inPos] & 34359738367L) << 2) & 255L));
         out[27 + outPos] = (byte)((int)((in[6 + inPos] & 34359738367L) >>> 6 & 255L));
         out[28 + outPos] = (byte)((int)((in[6 + inPos] & 34359738367L) >>> 14 & 255L));
         out[29 + outPos] = (byte)((int)((in[6 + inPos] & 34359738367L) >>> 22 & 255L));
         out[30 + outPos] = (byte)((int)(((in[6 + inPos] & 34359738367L) >>> 30 | (in[7 + inPos] & 34359738367L) << 5) & 255L));
         out[31 + outPos] = (byte)((int)((in[7 + inPos] & 34359738367L) >>> 3 & 255L));
         out[32 + outPos] = (byte)((int)((in[7 + inPos] & 34359738367L) >>> 11 & 255L));
         out[33 + outPos] = (byte)((int)((in[7 + inPos] & 34359738367L) >>> 19 & 255L));
         out[34 + outPos] = (byte)((int)((in[7 + inPos] & 34359738367L) >>> 27 & 255L));
         out[35 + outPos] = (byte)((int)(in[8 + inPos] & 34359738367L & 255L));
         out[36 + outPos] = (byte)((int)((in[8 + inPos] & 34359738367L) >>> 8 & 255L));
         out[37 + outPos] = (byte)((int)((in[8 + inPos] & 34359738367L) >>> 16 & 255L));
         out[38 + outPos] = (byte)((int)((in[8 + inPos] & 34359738367L) >>> 24 & 255L));
         out[39 + outPos] = (byte)((int)(((in[8 + inPos] & 34359738367L) >>> 32 | (in[9 + inPos] & 34359738367L) << 3) & 255L));
         out[40 + outPos] = (byte)((int)((in[9 + inPos] & 34359738367L) >>> 5 & 255L));
         out[41 + outPos] = (byte)((int)((in[9 + inPos] & 34359738367L) >>> 13 & 255L));
         out[42 + outPos] = (byte)((int)((in[9 + inPos] & 34359738367L) >>> 21 & 255L));
         out[43 + outPos] = (byte)((int)(((in[9 + inPos] & 34359738367L) >>> 29 | (in[10 + inPos] & 34359738367L) << 6) & 255L));
         out[44 + outPos] = (byte)((int)((in[10 + inPos] & 34359738367L) >>> 2 & 255L));
         out[45 + outPos] = (byte)((int)((in[10 + inPos] & 34359738367L) >>> 10 & 255L));
         out[46 + outPos] = (byte)((int)((in[10 + inPos] & 34359738367L) >>> 18 & 255L));
         out[47 + outPos] = (byte)((int)((in[10 + inPos] & 34359738367L) >>> 26 & 255L));
         out[48 + outPos] = (byte)((int)(((in[10 + inPos] & 34359738367L) >>> 34 | (in[11 + inPos] & 34359738367L) << 1) & 255L));
         out[49 + outPos] = (byte)((int)((in[11 + inPos] & 34359738367L) >>> 7 & 255L));
         out[50 + outPos] = (byte)((int)((in[11 + inPos] & 34359738367L) >>> 15 & 255L));
         out[51 + outPos] = (byte)((int)((in[11 + inPos] & 34359738367L) >>> 23 & 255L));
         out[52 + outPos] = (byte)((int)(((in[11 + inPos] & 34359738367L) >>> 31 | (in[12 + inPos] & 34359738367L) << 4) & 255L));
         out[53 + outPos] = (byte)((int)((in[12 + inPos] & 34359738367L) >>> 4 & 255L));
         out[54 + outPos] = (byte)((int)((in[12 + inPos] & 34359738367L) >>> 12 & 255L));
         out[55 + outPos] = (byte)((int)((in[12 + inPos] & 34359738367L) >>> 20 & 255L));
         out[56 + outPos] = (byte)((int)(((in[12 + inPos] & 34359738367L) >>> 28 | (in[13 + inPos] & 34359738367L) << 7) & 255L));
         out[57 + outPos] = (byte)((int)((in[13 + inPos] & 34359738367L) >>> 1 & 255L));
         out[58 + outPos] = (byte)((int)((in[13 + inPos] & 34359738367L) >>> 9 & 255L));
         out[59 + outPos] = (byte)((int)((in[13 + inPos] & 34359738367L) >>> 17 & 255L));
         out[60 + outPos] = (byte)((int)((in[13 + inPos] & 34359738367L) >>> 25 & 255L));
         out[61 + outPos] = (byte)((int)(((in[13 + inPos] & 34359738367L) >>> 33 | (in[14 + inPos] & 34359738367L) << 2) & 255L));
         out[62 + outPos] = (byte)((int)((in[14 + inPos] & 34359738367L) >>> 6 & 255L));
         out[63 + outPos] = (byte)((int)((in[14 + inPos] & 34359738367L) >>> 14 & 255L));
         out[64 + outPos] = (byte)((int)((in[14 + inPos] & 34359738367L) >>> 22 & 255L));
         out[65 + outPos] = (byte)((int)(((in[14 + inPos] & 34359738367L) >>> 30 | (in[15 + inPos] & 34359738367L) << 5) & 255L));
         out[66 + outPos] = (byte)((int)((in[15 + inPos] & 34359738367L) >>> 3 & 255L));
         out[67 + outPos] = (byte)((int)((in[15 + inPos] & 34359738367L) >>> 11 & 255L));
         out[68 + outPos] = (byte)((int)((in[15 + inPos] & 34359738367L) >>> 19 & 255L));
         out[69 + outPos] = (byte)((int)((in[15 + inPos] & 34359738367L) >>> 27 & 255L));
         out[70 + outPos] = (byte)((int)(in[16 + inPos] & 34359738367L & 255L));
         out[71 + outPos] = (byte)((int)((in[16 + inPos] & 34359738367L) >>> 8 & 255L));
         out[72 + outPos] = (byte)((int)((in[16 + inPos] & 34359738367L) >>> 16 & 255L));
         out[73 + outPos] = (byte)((int)((in[16 + inPos] & 34359738367L) >>> 24 & 255L));
         out[74 + outPos] = (byte)((int)(((in[16 + inPos] & 34359738367L) >>> 32 | (in[17 + inPos] & 34359738367L) << 3) & 255L));
         out[75 + outPos] = (byte)((int)((in[17 + inPos] & 34359738367L) >>> 5 & 255L));
         out[76 + outPos] = (byte)((int)((in[17 + inPos] & 34359738367L) >>> 13 & 255L));
         out[77 + outPos] = (byte)((int)((in[17 + inPos] & 34359738367L) >>> 21 & 255L));
         out[78 + outPos] = (byte)((int)(((in[17 + inPos] & 34359738367L) >>> 29 | (in[18 + inPos] & 34359738367L) << 6) & 255L));
         out[79 + outPos] = (byte)((int)((in[18 + inPos] & 34359738367L) >>> 2 & 255L));
         out[80 + outPos] = (byte)((int)((in[18 + inPos] & 34359738367L) >>> 10 & 255L));
         out[81 + outPos] = (byte)((int)((in[18 + inPos] & 34359738367L) >>> 18 & 255L));
         out[82 + outPos] = (byte)((int)((in[18 + inPos] & 34359738367L) >>> 26 & 255L));
         out[83 + outPos] = (byte)((int)(((in[18 + inPos] & 34359738367L) >>> 34 | (in[19 + inPos] & 34359738367L) << 1) & 255L));
         out[84 + outPos] = (byte)((int)((in[19 + inPos] & 34359738367L) >>> 7 & 255L));
         out[85 + outPos] = (byte)((int)((in[19 + inPos] & 34359738367L) >>> 15 & 255L));
         out[86 + outPos] = (byte)((int)((in[19 + inPos] & 34359738367L) >>> 23 & 255L));
         out[87 + outPos] = (byte)((int)(((in[19 + inPos] & 34359738367L) >>> 31 | (in[20 + inPos] & 34359738367L) << 4) & 255L));
         out[88 + outPos] = (byte)((int)((in[20 + inPos] & 34359738367L) >>> 4 & 255L));
         out[89 + outPos] = (byte)((int)((in[20 + inPos] & 34359738367L) >>> 12 & 255L));
         out[90 + outPos] = (byte)((int)((in[20 + inPos] & 34359738367L) >>> 20 & 255L));
         out[91 + outPos] = (byte)((int)(((in[20 + inPos] & 34359738367L) >>> 28 | (in[21 + inPos] & 34359738367L) << 7) & 255L));
         out[92 + outPos] = (byte)((int)((in[21 + inPos] & 34359738367L) >>> 1 & 255L));
         out[93 + outPos] = (byte)((int)((in[21 + inPos] & 34359738367L) >>> 9 & 255L));
         out[94 + outPos] = (byte)((int)((in[21 + inPos] & 34359738367L) >>> 17 & 255L));
         out[95 + outPos] = (byte)((int)((in[21 + inPos] & 34359738367L) >>> 25 & 255L));
         out[96 + outPos] = (byte)((int)(((in[21 + inPos] & 34359738367L) >>> 33 | (in[22 + inPos] & 34359738367L) << 2) & 255L));
         out[97 + outPos] = (byte)((int)((in[22 + inPos] & 34359738367L) >>> 6 & 255L));
         out[98 + outPos] = (byte)((int)((in[22 + inPos] & 34359738367L) >>> 14 & 255L));
         out[99 + outPos] = (byte)((int)((in[22 + inPos] & 34359738367L) >>> 22 & 255L));
         out[100 + outPos] = (byte)((int)(((in[22 + inPos] & 34359738367L) >>> 30 | (in[23 + inPos] & 34359738367L) << 5) & 255L));
         out[101 + outPos] = (byte)((int)((in[23 + inPos] & 34359738367L) >>> 3 & 255L));
         out[102 + outPos] = (byte)((int)((in[23 + inPos] & 34359738367L) >>> 11 & 255L));
         out[103 + outPos] = (byte)((int)((in[23 + inPos] & 34359738367L) >>> 19 & 255L));
         out[104 + outPos] = (byte)((int)((in[23 + inPos] & 34359738367L) >>> 27 & 255L));
         out[105 + outPos] = (byte)((int)(in[24 + inPos] & 34359738367L & 255L));
         out[106 + outPos] = (byte)((int)((in[24 + inPos] & 34359738367L) >>> 8 & 255L));
         out[107 + outPos] = (byte)((int)((in[24 + inPos] & 34359738367L) >>> 16 & 255L));
         out[108 + outPos] = (byte)((int)((in[24 + inPos] & 34359738367L) >>> 24 & 255L));
         out[109 + outPos] = (byte)((int)(((in[24 + inPos] & 34359738367L) >>> 32 | (in[25 + inPos] & 34359738367L) << 3) & 255L));
         out[110 + outPos] = (byte)((int)((in[25 + inPos] & 34359738367L) >>> 5 & 255L));
         out[111 + outPos] = (byte)((int)((in[25 + inPos] & 34359738367L) >>> 13 & 255L));
         out[112 + outPos] = (byte)((int)((in[25 + inPos] & 34359738367L) >>> 21 & 255L));
         out[113 + outPos] = (byte)((int)(((in[25 + inPos] & 34359738367L) >>> 29 | (in[26 + inPos] & 34359738367L) << 6) & 255L));
         out[114 + outPos] = (byte)((int)((in[26 + inPos] & 34359738367L) >>> 2 & 255L));
         out[115 + outPos] = (byte)((int)((in[26 + inPos] & 34359738367L) >>> 10 & 255L));
         out[116 + outPos] = (byte)((int)((in[26 + inPos] & 34359738367L) >>> 18 & 255L));
         out[117 + outPos] = (byte)((int)((in[26 + inPos] & 34359738367L) >>> 26 & 255L));
         out[118 + outPos] = (byte)((int)(((in[26 + inPos] & 34359738367L) >>> 34 | (in[27 + inPos] & 34359738367L) << 1) & 255L));
         out[119 + outPos] = (byte)((int)((in[27 + inPos] & 34359738367L) >>> 7 & 255L));
         out[120 + outPos] = (byte)((int)((in[27 + inPos] & 34359738367L) >>> 15 & 255L));
         out[121 + outPos] = (byte)((int)((in[27 + inPos] & 34359738367L) >>> 23 & 255L));
         out[122 + outPos] = (byte)((int)(((in[27 + inPos] & 34359738367L) >>> 31 | (in[28 + inPos] & 34359738367L) << 4) & 255L));
         out[123 + outPos] = (byte)((int)((in[28 + inPos] & 34359738367L) >>> 4 & 255L));
         out[124 + outPos] = (byte)((int)((in[28 + inPos] & 34359738367L) >>> 12 & 255L));
         out[125 + outPos] = (byte)((int)((in[28 + inPos] & 34359738367L) >>> 20 & 255L));
         out[126 + outPos] = (byte)((int)(((in[28 + inPos] & 34359738367L) >>> 28 | (in[29 + inPos] & 34359738367L) << 7) & 255L));
         out[127 + outPos] = (byte)((int)((in[29 + inPos] & 34359738367L) >>> 1 & 255L));
         out[128 + outPos] = (byte)((int)((in[29 + inPos] & 34359738367L) >>> 9 & 255L));
         out[129 + outPos] = (byte)((int)((in[29 + inPos] & 34359738367L) >>> 17 & 255L));
         out[130 + outPos] = (byte)((int)((in[29 + inPos] & 34359738367L) >>> 25 & 255L));
         out[131 + outPos] = (byte)((int)(((in[29 + inPos] & 34359738367L) >>> 33 | (in[30 + inPos] & 34359738367L) << 2) & 255L));
         out[132 + outPos] = (byte)((int)((in[30 + inPos] & 34359738367L) >>> 6 & 255L));
         out[133 + outPos] = (byte)((int)((in[30 + inPos] & 34359738367L) >>> 14 & 255L));
         out[134 + outPos] = (byte)((int)((in[30 + inPos] & 34359738367L) >>> 22 & 255L));
         out[135 + outPos] = (byte)((int)(((in[30 + inPos] & 34359738367L) >>> 30 | (in[31 + inPos] & 34359738367L) << 5) & 255L));
         out[136 + outPos] = (byte)((int)((in[31 + inPos] & 34359738367L) >>> 3 & 255L));
         out[137 + outPos] = (byte)((int)((in[31 + inPos] & 34359738367L) >>> 11 & 255L));
         out[138 + outPos] = (byte)((int)((in[31 + inPos] & 34359738367L) >>> 19 & 255L));
         out[139 + outPos] = (byte)((int)((in[31 + inPos] & 34359738367L) >>> 27 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 34359738367L;
         out[1 + outPos] = (long)in[4 + inPos] >> 3 & 31L | (long)in[5 + inPos] << 5 & 8191L | (long)in[6 + inPos] << 13 & 2097151L | (long)in[7 + inPos] << 21 & 536870911L | (long)in[8 + inPos] << 29 & 34359738367L;
         out[2 + outPos] = (long)in[8 + inPos] >> 6 & 3L | (long)in[9 + inPos] << 2 & 1023L | (long)in[10 + inPos] << 10 & 262143L | (long)in[11 + inPos] << 18 & 67108863L | (long)in[12 + inPos] << 26 & 17179869183L | (long)in[13 + inPos] << 34 & 34359738367L;
         out[3 + outPos] = (long)in[13 + inPos] >> 1 & 127L | (long)in[14 + inPos] << 7 & 32767L | (long)in[15 + inPos] << 15 & 8388607L | (long)in[16 + inPos] << 23 & 2147483647L | (long)in[17 + inPos] << 31 & 34359738367L;
         out[4 + outPos] = (long)in[17 + inPos] >> 4 & 15L | (long)in[18 + inPos] << 4 & 4095L | (long)in[19 + inPos] << 12 & 1048575L | (long)in[20 + inPos] << 20 & 268435455L | (long)in[21 + inPos] << 28 & 34359738367L;
         out[5 + outPos] = (long)in[21 + inPos] >> 7 & 1L | (long)in[22 + inPos] << 1 & 511L | (long)in[23 + inPos] << 9 & 131071L | (long)in[24 + inPos] << 17 & 33554431L | (long)in[25 + inPos] << 25 & 8589934591L | (long)in[26 + inPos] << 33 & 34359738367L;
         out[6 + outPos] = (long)in[26 + inPos] >> 2 & 63L | (long)in[27 + inPos] << 6 & 16383L | (long)in[28 + inPos] << 14 & 4194303L | (long)in[29 + inPos] << 22 & 1073741823L | (long)in[30 + inPos] << 30 & 34359738367L;
         out[7 + outPos] = (long)in[30 + inPos] >> 5 & 7L | (long)in[31 + inPos] << 3 & 2047L | (long)in[32 + inPos] << 11 & 524287L | (long)in[33 + inPos] << 19 & 134217727L | (long)in[34 + inPos] << 27 & 34359738367L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 34359738367L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 3 & 31L | (long)in.get(5 + inPos) << 5 & 8191L | (long)in.get(6 + inPos) << 13 & 2097151L | (long)in.get(7 + inPos) << 21 & 536870911L | (long)in.get(8 + inPos) << 29 & 34359738367L;
         out[2 + outPos] = (long)in.get(8 + inPos) >> 6 & 3L | (long)in.get(9 + inPos) << 2 & 1023L | (long)in.get(10 + inPos) << 10 & 262143L | (long)in.get(11 + inPos) << 18 & 67108863L | (long)in.get(12 + inPos) << 26 & 17179869183L | (long)in.get(13 + inPos) << 34 & 34359738367L;
         out[3 + outPos] = (long)in.get(13 + inPos) >> 1 & 127L | (long)in.get(14 + inPos) << 7 & 32767L | (long)in.get(15 + inPos) << 15 & 8388607L | (long)in.get(16 + inPos) << 23 & 2147483647L | (long)in.get(17 + inPos) << 31 & 34359738367L;
         out[4 + outPos] = (long)in.get(17 + inPos) >> 4 & 15L | (long)in.get(18 + inPos) << 4 & 4095L | (long)in.get(19 + inPos) << 12 & 1048575L | (long)in.get(20 + inPos) << 20 & 268435455L | (long)in.get(21 + inPos) << 28 & 34359738367L;
         out[5 + outPos] = (long)in.get(21 + inPos) >> 7 & 1L | (long)in.get(22 + inPos) << 1 & 511L | (long)in.get(23 + inPos) << 9 & 131071L | (long)in.get(24 + inPos) << 17 & 33554431L | (long)in.get(25 + inPos) << 25 & 8589934591L | (long)in.get(26 + inPos) << 33 & 34359738367L;
         out[6 + outPos] = (long)in.get(26 + inPos) >> 2 & 63L | (long)in.get(27 + inPos) << 6 & 16383L | (long)in.get(28 + inPos) << 14 & 4194303L | (long)in.get(29 + inPos) << 22 & 1073741823L | (long)in.get(30 + inPos) << 30 & 34359738367L;
         out[7 + outPos] = (long)in.get(30 + inPos) >> 5 & 7L | (long)in.get(31 + inPos) << 3 & 2047L | (long)in.get(32 + inPos) << 11 & 524287L | (long)in.get(33 + inPos) << 19 & 134217727L | (long)in.get(34 + inPos) << 27 & 34359738367L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 34359738367L;
         out[1 + outPos] = (long)in[4 + inPos] >> 3 & 31L | (long)in[5 + inPos] << 5 & 8191L | (long)in[6 + inPos] << 13 & 2097151L | (long)in[7 + inPos] << 21 & 536870911L | (long)in[8 + inPos] << 29 & 34359738367L;
         out[2 + outPos] = (long)in[8 + inPos] >> 6 & 3L | (long)in[9 + inPos] << 2 & 1023L | (long)in[10 + inPos] << 10 & 262143L | (long)in[11 + inPos] << 18 & 67108863L | (long)in[12 + inPos] << 26 & 17179869183L | (long)in[13 + inPos] << 34 & 34359738367L;
         out[3 + outPos] = (long)in[13 + inPos] >> 1 & 127L | (long)in[14 + inPos] << 7 & 32767L | (long)in[15 + inPos] << 15 & 8388607L | (long)in[16 + inPos] << 23 & 2147483647L | (long)in[17 + inPos] << 31 & 34359738367L;
         out[4 + outPos] = (long)in[17 + inPos] >> 4 & 15L | (long)in[18 + inPos] << 4 & 4095L | (long)in[19 + inPos] << 12 & 1048575L | (long)in[20 + inPos] << 20 & 268435455L | (long)in[21 + inPos] << 28 & 34359738367L;
         out[5 + outPos] = (long)in[21 + inPos] >> 7 & 1L | (long)in[22 + inPos] << 1 & 511L | (long)in[23 + inPos] << 9 & 131071L | (long)in[24 + inPos] << 17 & 33554431L | (long)in[25 + inPos] << 25 & 8589934591L | (long)in[26 + inPos] << 33 & 34359738367L;
         out[6 + outPos] = (long)in[26 + inPos] >> 2 & 63L | (long)in[27 + inPos] << 6 & 16383L | (long)in[28 + inPos] << 14 & 4194303L | (long)in[29 + inPos] << 22 & 1073741823L | (long)in[30 + inPos] << 30 & 34359738367L;
         out[7 + outPos] = (long)in[30 + inPos] >> 5 & 7L | (long)in[31 + inPos] << 3 & 2047L | (long)in[32 + inPos] << 11 & 524287L | (long)in[33 + inPos] << 19 & 134217727L | (long)in[34 + inPos] << 27 & 34359738367L;
         out[8 + outPos] = (long)in[35 + inPos] & 255L | (long)in[36 + inPos] << 8 & 65535L | (long)in[37 + inPos] << 16 & 16777215L | (long)in[38 + inPos] << 24 & 4294967295L | (long)in[39 + inPos] << 32 & 34359738367L;
         out[9 + outPos] = (long)in[39 + inPos] >> 3 & 31L | (long)in[40 + inPos] << 5 & 8191L | (long)in[41 + inPos] << 13 & 2097151L | (long)in[42 + inPos] << 21 & 536870911L | (long)in[43 + inPos] << 29 & 34359738367L;
         out[10 + outPos] = (long)in[43 + inPos] >> 6 & 3L | (long)in[44 + inPos] << 2 & 1023L | (long)in[45 + inPos] << 10 & 262143L | (long)in[46 + inPos] << 18 & 67108863L | (long)in[47 + inPos] << 26 & 17179869183L | (long)in[48 + inPos] << 34 & 34359738367L;
         out[11 + outPos] = (long)in[48 + inPos] >> 1 & 127L | (long)in[49 + inPos] << 7 & 32767L | (long)in[50 + inPos] << 15 & 8388607L | (long)in[51 + inPos] << 23 & 2147483647L | (long)in[52 + inPos] << 31 & 34359738367L;
         out[12 + outPos] = (long)in[52 + inPos] >> 4 & 15L | (long)in[53 + inPos] << 4 & 4095L | (long)in[54 + inPos] << 12 & 1048575L | (long)in[55 + inPos] << 20 & 268435455L | (long)in[56 + inPos] << 28 & 34359738367L;
         out[13 + outPos] = (long)in[56 + inPos] >> 7 & 1L | (long)in[57 + inPos] << 1 & 511L | (long)in[58 + inPos] << 9 & 131071L | (long)in[59 + inPos] << 17 & 33554431L | (long)in[60 + inPos] << 25 & 8589934591L | (long)in[61 + inPos] << 33 & 34359738367L;
         out[14 + outPos] = (long)in[61 + inPos] >> 2 & 63L | (long)in[62 + inPos] << 6 & 16383L | (long)in[63 + inPos] << 14 & 4194303L | (long)in[64 + inPos] << 22 & 1073741823L | (long)in[65 + inPos] << 30 & 34359738367L;
         out[15 + outPos] = (long)in[65 + inPos] >> 5 & 7L | (long)in[66 + inPos] << 3 & 2047L | (long)in[67 + inPos] << 11 & 524287L | (long)in[68 + inPos] << 19 & 134217727L | (long)in[69 + inPos] << 27 & 34359738367L;
         out[16 + outPos] = (long)in[70 + inPos] & 255L | (long)in[71 + inPos] << 8 & 65535L | (long)in[72 + inPos] << 16 & 16777215L | (long)in[73 + inPos] << 24 & 4294967295L | (long)in[74 + inPos] << 32 & 34359738367L;
         out[17 + outPos] = (long)in[74 + inPos] >> 3 & 31L | (long)in[75 + inPos] << 5 & 8191L | (long)in[76 + inPos] << 13 & 2097151L | (long)in[77 + inPos] << 21 & 536870911L | (long)in[78 + inPos] << 29 & 34359738367L;
         out[18 + outPos] = (long)in[78 + inPos] >> 6 & 3L | (long)in[79 + inPos] << 2 & 1023L | (long)in[80 + inPos] << 10 & 262143L | (long)in[81 + inPos] << 18 & 67108863L | (long)in[82 + inPos] << 26 & 17179869183L | (long)in[83 + inPos] << 34 & 34359738367L;
         out[19 + outPos] = (long)in[83 + inPos] >> 1 & 127L | (long)in[84 + inPos] << 7 & 32767L | (long)in[85 + inPos] << 15 & 8388607L | (long)in[86 + inPos] << 23 & 2147483647L | (long)in[87 + inPos] << 31 & 34359738367L;
         out[20 + outPos] = (long)in[87 + inPos] >> 4 & 15L | (long)in[88 + inPos] << 4 & 4095L | (long)in[89 + inPos] << 12 & 1048575L | (long)in[90 + inPos] << 20 & 268435455L | (long)in[91 + inPos] << 28 & 34359738367L;
         out[21 + outPos] = (long)in[91 + inPos] >> 7 & 1L | (long)in[92 + inPos] << 1 & 511L | (long)in[93 + inPos] << 9 & 131071L | (long)in[94 + inPos] << 17 & 33554431L | (long)in[95 + inPos] << 25 & 8589934591L | (long)in[96 + inPos] << 33 & 34359738367L;
         out[22 + outPos] = (long)in[96 + inPos] >> 2 & 63L | (long)in[97 + inPos] << 6 & 16383L | (long)in[98 + inPos] << 14 & 4194303L | (long)in[99 + inPos] << 22 & 1073741823L | (long)in[100 + inPos] << 30 & 34359738367L;
         out[23 + outPos] = (long)in[100 + inPos] >> 5 & 7L | (long)in[101 + inPos] << 3 & 2047L | (long)in[102 + inPos] << 11 & 524287L | (long)in[103 + inPos] << 19 & 134217727L | (long)in[104 + inPos] << 27 & 34359738367L;
         out[24 + outPos] = (long)in[105 + inPos] & 255L | (long)in[106 + inPos] << 8 & 65535L | (long)in[107 + inPos] << 16 & 16777215L | (long)in[108 + inPos] << 24 & 4294967295L | (long)in[109 + inPos] << 32 & 34359738367L;
         out[25 + outPos] = (long)in[109 + inPos] >> 3 & 31L | (long)in[110 + inPos] << 5 & 8191L | (long)in[111 + inPos] << 13 & 2097151L | (long)in[112 + inPos] << 21 & 536870911L | (long)in[113 + inPos] << 29 & 34359738367L;
         out[26 + outPos] = (long)in[113 + inPos] >> 6 & 3L | (long)in[114 + inPos] << 2 & 1023L | (long)in[115 + inPos] << 10 & 262143L | (long)in[116 + inPos] << 18 & 67108863L | (long)in[117 + inPos] << 26 & 17179869183L | (long)in[118 + inPos] << 34 & 34359738367L;
         out[27 + outPos] = (long)in[118 + inPos] >> 1 & 127L | (long)in[119 + inPos] << 7 & 32767L | (long)in[120 + inPos] << 15 & 8388607L | (long)in[121 + inPos] << 23 & 2147483647L | (long)in[122 + inPos] << 31 & 34359738367L;
         out[28 + outPos] = (long)in[122 + inPos] >> 4 & 15L | (long)in[123 + inPos] << 4 & 4095L | (long)in[124 + inPos] << 12 & 1048575L | (long)in[125 + inPos] << 20 & 268435455L | (long)in[126 + inPos] << 28 & 34359738367L;
         out[29 + outPos] = (long)in[126 + inPos] >> 7 & 1L | (long)in[127 + inPos] << 1 & 511L | (long)in[128 + inPos] << 9 & 131071L | (long)in[129 + inPos] << 17 & 33554431L | (long)in[130 + inPos] << 25 & 8589934591L | (long)in[131 + inPos] << 33 & 34359738367L;
         out[30 + outPos] = (long)in[131 + inPos] >> 2 & 63L | (long)in[132 + inPos] << 6 & 16383L | (long)in[133 + inPos] << 14 & 4194303L | (long)in[134 + inPos] << 22 & 1073741823L | (long)in[135 + inPos] << 30 & 34359738367L;
         out[31 + outPos] = (long)in[135 + inPos] >> 5 & 7L | (long)in[136 + inPos] << 3 & 2047L | (long)in[137 + inPos] << 11 & 524287L | (long)in[138 + inPos] << 19 & 134217727L | (long)in[139 + inPos] << 27 & 34359738367L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 34359738367L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 3 & 31L | (long)in.get(5 + inPos) << 5 & 8191L | (long)in.get(6 + inPos) << 13 & 2097151L | (long)in.get(7 + inPos) << 21 & 536870911L | (long)in.get(8 + inPos) << 29 & 34359738367L;
         out[2 + outPos] = (long)in.get(8 + inPos) >> 6 & 3L | (long)in.get(9 + inPos) << 2 & 1023L | (long)in.get(10 + inPos) << 10 & 262143L | (long)in.get(11 + inPos) << 18 & 67108863L | (long)in.get(12 + inPos) << 26 & 17179869183L | (long)in.get(13 + inPos) << 34 & 34359738367L;
         out[3 + outPos] = (long)in.get(13 + inPos) >> 1 & 127L | (long)in.get(14 + inPos) << 7 & 32767L | (long)in.get(15 + inPos) << 15 & 8388607L | (long)in.get(16 + inPos) << 23 & 2147483647L | (long)in.get(17 + inPos) << 31 & 34359738367L;
         out[4 + outPos] = (long)in.get(17 + inPos) >> 4 & 15L | (long)in.get(18 + inPos) << 4 & 4095L | (long)in.get(19 + inPos) << 12 & 1048575L | (long)in.get(20 + inPos) << 20 & 268435455L | (long)in.get(21 + inPos) << 28 & 34359738367L;
         out[5 + outPos] = (long)in.get(21 + inPos) >> 7 & 1L | (long)in.get(22 + inPos) << 1 & 511L | (long)in.get(23 + inPos) << 9 & 131071L | (long)in.get(24 + inPos) << 17 & 33554431L | (long)in.get(25 + inPos) << 25 & 8589934591L | (long)in.get(26 + inPos) << 33 & 34359738367L;
         out[6 + outPos] = (long)in.get(26 + inPos) >> 2 & 63L | (long)in.get(27 + inPos) << 6 & 16383L | (long)in.get(28 + inPos) << 14 & 4194303L | (long)in.get(29 + inPos) << 22 & 1073741823L | (long)in.get(30 + inPos) << 30 & 34359738367L;
         out[7 + outPos] = (long)in.get(30 + inPos) >> 5 & 7L | (long)in.get(31 + inPos) << 3 & 2047L | (long)in.get(32 + inPos) << 11 & 524287L | (long)in.get(33 + inPos) << 19 & 134217727L | (long)in.get(34 + inPos) << 27 & 34359738367L;
         out[8 + outPos] = (long)in.get(35 + inPos) & 255L | (long)in.get(36 + inPos) << 8 & 65535L | (long)in.get(37 + inPos) << 16 & 16777215L | (long)in.get(38 + inPos) << 24 & 4294967295L | (long)in.get(39 + inPos) << 32 & 34359738367L;
         out[9 + outPos] = (long)in.get(39 + inPos) >> 3 & 31L | (long)in.get(40 + inPos) << 5 & 8191L | (long)in.get(41 + inPos) << 13 & 2097151L | (long)in.get(42 + inPos) << 21 & 536870911L | (long)in.get(43 + inPos) << 29 & 34359738367L;
         out[10 + outPos] = (long)in.get(43 + inPos) >> 6 & 3L | (long)in.get(44 + inPos) << 2 & 1023L | (long)in.get(45 + inPos) << 10 & 262143L | (long)in.get(46 + inPos) << 18 & 67108863L | (long)in.get(47 + inPos) << 26 & 17179869183L | (long)in.get(48 + inPos) << 34 & 34359738367L;
         out[11 + outPos] = (long)in.get(48 + inPos) >> 1 & 127L | (long)in.get(49 + inPos) << 7 & 32767L | (long)in.get(50 + inPos) << 15 & 8388607L | (long)in.get(51 + inPos) << 23 & 2147483647L | (long)in.get(52 + inPos) << 31 & 34359738367L;
         out[12 + outPos] = (long)in.get(52 + inPos) >> 4 & 15L | (long)in.get(53 + inPos) << 4 & 4095L | (long)in.get(54 + inPos) << 12 & 1048575L | (long)in.get(55 + inPos) << 20 & 268435455L | (long)in.get(56 + inPos) << 28 & 34359738367L;
         out[13 + outPos] = (long)in.get(56 + inPos) >> 7 & 1L | (long)in.get(57 + inPos) << 1 & 511L | (long)in.get(58 + inPos) << 9 & 131071L | (long)in.get(59 + inPos) << 17 & 33554431L | (long)in.get(60 + inPos) << 25 & 8589934591L | (long)in.get(61 + inPos) << 33 & 34359738367L;
         out[14 + outPos] = (long)in.get(61 + inPos) >> 2 & 63L | (long)in.get(62 + inPos) << 6 & 16383L | (long)in.get(63 + inPos) << 14 & 4194303L | (long)in.get(64 + inPos) << 22 & 1073741823L | (long)in.get(65 + inPos) << 30 & 34359738367L;
         out[15 + outPos] = (long)in.get(65 + inPos) >> 5 & 7L | (long)in.get(66 + inPos) << 3 & 2047L | (long)in.get(67 + inPos) << 11 & 524287L | (long)in.get(68 + inPos) << 19 & 134217727L | (long)in.get(69 + inPos) << 27 & 34359738367L;
         out[16 + outPos] = (long)in.get(70 + inPos) & 255L | (long)in.get(71 + inPos) << 8 & 65535L | (long)in.get(72 + inPos) << 16 & 16777215L | (long)in.get(73 + inPos) << 24 & 4294967295L | (long)in.get(74 + inPos) << 32 & 34359738367L;
         out[17 + outPos] = (long)in.get(74 + inPos) >> 3 & 31L | (long)in.get(75 + inPos) << 5 & 8191L | (long)in.get(76 + inPos) << 13 & 2097151L | (long)in.get(77 + inPos) << 21 & 536870911L | (long)in.get(78 + inPos) << 29 & 34359738367L;
         out[18 + outPos] = (long)in.get(78 + inPos) >> 6 & 3L | (long)in.get(79 + inPos) << 2 & 1023L | (long)in.get(80 + inPos) << 10 & 262143L | (long)in.get(81 + inPos) << 18 & 67108863L | (long)in.get(82 + inPos) << 26 & 17179869183L | (long)in.get(83 + inPos) << 34 & 34359738367L;
         out[19 + outPos] = (long)in.get(83 + inPos) >> 1 & 127L | (long)in.get(84 + inPos) << 7 & 32767L | (long)in.get(85 + inPos) << 15 & 8388607L | (long)in.get(86 + inPos) << 23 & 2147483647L | (long)in.get(87 + inPos) << 31 & 34359738367L;
         out[20 + outPos] = (long)in.get(87 + inPos) >> 4 & 15L | (long)in.get(88 + inPos) << 4 & 4095L | (long)in.get(89 + inPos) << 12 & 1048575L | (long)in.get(90 + inPos) << 20 & 268435455L | (long)in.get(91 + inPos) << 28 & 34359738367L;
         out[21 + outPos] = (long)in.get(91 + inPos) >> 7 & 1L | (long)in.get(92 + inPos) << 1 & 511L | (long)in.get(93 + inPos) << 9 & 131071L | (long)in.get(94 + inPos) << 17 & 33554431L | (long)in.get(95 + inPos) << 25 & 8589934591L | (long)in.get(96 + inPos) << 33 & 34359738367L;
         out[22 + outPos] = (long)in.get(96 + inPos) >> 2 & 63L | (long)in.get(97 + inPos) << 6 & 16383L | (long)in.get(98 + inPos) << 14 & 4194303L | (long)in.get(99 + inPos) << 22 & 1073741823L | (long)in.get(100 + inPos) << 30 & 34359738367L;
         out[23 + outPos] = (long)in.get(100 + inPos) >> 5 & 7L | (long)in.get(101 + inPos) << 3 & 2047L | (long)in.get(102 + inPos) << 11 & 524287L | (long)in.get(103 + inPos) << 19 & 134217727L | (long)in.get(104 + inPos) << 27 & 34359738367L;
         out[24 + outPos] = (long)in.get(105 + inPos) & 255L | (long)in.get(106 + inPos) << 8 & 65535L | (long)in.get(107 + inPos) << 16 & 16777215L | (long)in.get(108 + inPos) << 24 & 4294967295L | (long)in.get(109 + inPos) << 32 & 34359738367L;
         out[25 + outPos] = (long)in.get(109 + inPos) >> 3 & 31L | (long)in.get(110 + inPos) << 5 & 8191L | (long)in.get(111 + inPos) << 13 & 2097151L | (long)in.get(112 + inPos) << 21 & 536870911L | (long)in.get(113 + inPos) << 29 & 34359738367L;
         out[26 + outPos] = (long)in.get(113 + inPos) >> 6 & 3L | (long)in.get(114 + inPos) << 2 & 1023L | (long)in.get(115 + inPos) << 10 & 262143L | (long)in.get(116 + inPos) << 18 & 67108863L | (long)in.get(117 + inPos) << 26 & 17179869183L | (long)in.get(118 + inPos) << 34 & 34359738367L;
         out[27 + outPos] = (long)in.get(118 + inPos) >> 1 & 127L | (long)in.get(119 + inPos) << 7 & 32767L | (long)in.get(120 + inPos) << 15 & 8388607L | (long)in.get(121 + inPos) << 23 & 2147483647L | (long)in.get(122 + inPos) << 31 & 34359738367L;
         out[28 + outPos] = (long)in.get(122 + inPos) >> 4 & 15L | (long)in.get(123 + inPos) << 4 & 4095L | (long)in.get(124 + inPos) << 12 & 1048575L | (long)in.get(125 + inPos) << 20 & 268435455L | (long)in.get(126 + inPos) << 28 & 34359738367L;
         out[29 + outPos] = (long)in.get(126 + inPos) >> 7 & 1L | (long)in.get(127 + inPos) << 1 & 511L | (long)in.get(128 + inPos) << 9 & 131071L | (long)in.get(129 + inPos) << 17 & 33554431L | (long)in.get(130 + inPos) << 25 & 8589934591L | (long)in.get(131 + inPos) << 33 & 34359738367L;
         out[30 + outPos] = (long)in.get(131 + inPos) >> 2 & 63L | (long)in.get(132 + inPos) << 6 & 16383L | (long)in.get(133 + inPos) << 14 & 4194303L | (long)in.get(134 + inPos) << 22 & 1073741823L | (long)in.get(135 + inPos) << 30 & 34359738367L;
         out[31 + outPos] = (long)in.get(135 + inPos) >> 5 & 7L | (long)in.get(136 + inPos) << 3 & 2047L | (long)in.get(137 + inPos) << 11 & 524287L | (long)in.get(138 + inPos) << 19 & 134217727L | (long)in.get(139 + inPos) << 27 & 34359738367L;
      }
   }

   private static final class Packer36 extends BytePackerForLong {
      private Packer36() {
         super(36);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 68719476735L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 68719476735L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 68719476735L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 68719476735L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 68719476735L) >>> 32 | (in[1 + inPos] & 68719476735L) << 4) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 68719476735L) >>> 4 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 68719476735L) >>> 12 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 68719476735L) >>> 20 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 68719476735L) >>> 28 & 255L));
         out[9 + outPos] = (byte)((int)(in[2 + inPos] & 68719476735L & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 68719476735L) >>> 8 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 68719476735L) >>> 16 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 68719476735L) >>> 24 & 255L));
         out[13 + outPos] = (byte)((int)(((in[2 + inPos] & 68719476735L) >>> 32 | (in[3 + inPos] & 68719476735L) << 4) & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 68719476735L) >>> 4 & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 68719476735L) >>> 12 & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 68719476735L) >>> 20 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 68719476735L) >>> 28 & 255L));
         out[18 + outPos] = (byte)((int)(in[4 + inPos] & 68719476735L & 255L));
         out[19 + outPos] = (byte)((int)((in[4 + inPos] & 68719476735L) >>> 8 & 255L));
         out[20 + outPos] = (byte)((int)((in[4 + inPos] & 68719476735L) >>> 16 & 255L));
         out[21 + outPos] = (byte)((int)((in[4 + inPos] & 68719476735L) >>> 24 & 255L));
         out[22 + outPos] = (byte)((int)(((in[4 + inPos] & 68719476735L) >>> 32 | (in[5 + inPos] & 68719476735L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)((in[5 + inPos] & 68719476735L) >>> 4 & 255L));
         out[24 + outPos] = (byte)((int)((in[5 + inPos] & 68719476735L) >>> 12 & 255L));
         out[25 + outPos] = (byte)((int)((in[5 + inPos] & 68719476735L) >>> 20 & 255L));
         out[26 + outPos] = (byte)((int)((in[5 + inPos] & 68719476735L) >>> 28 & 255L));
         out[27 + outPos] = (byte)((int)(in[6 + inPos] & 68719476735L & 255L));
         out[28 + outPos] = (byte)((int)((in[6 + inPos] & 68719476735L) >>> 8 & 255L));
         out[29 + outPos] = (byte)((int)((in[6 + inPos] & 68719476735L) >>> 16 & 255L));
         out[30 + outPos] = (byte)((int)((in[6 + inPos] & 68719476735L) >>> 24 & 255L));
         out[31 + outPos] = (byte)((int)(((in[6 + inPos] & 68719476735L) >>> 32 | (in[7 + inPos] & 68719476735L) << 4) & 255L));
         out[32 + outPos] = (byte)((int)((in[7 + inPos] & 68719476735L) >>> 4 & 255L));
         out[33 + outPos] = (byte)((int)((in[7 + inPos] & 68719476735L) >>> 12 & 255L));
         out[34 + outPos] = (byte)((int)((in[7 + inPos] & 68719476735L) >>> 20 & 255L));
         out[35 + outPos] = (byte)((int)((in[7 + inPos] & 68719476735L) >>> 28 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 68719476735L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 68719476735L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 68719476735L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 68719476735L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 68719476735L) >>> 32 | (in[1 + inPos] & 68719476735L) << 4) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 68719476735L) >>> 4 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 68719476735L) >>> 12 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 68719476735L) >>> 20 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 68719476735L) >>> 28 & 255L));
         out[9 + outPos] = (byte)((int)(in[2 + inPos] & 68719476735L & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 68719476735L) >>> 8 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 68719476735L) >>> 16 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 68719476735L) >>> 24 & 255L));
         out[13 + outPos] = (byte)((int)(((in[2 + inPos] & 68719476735L) >>> 32 | (in[3 + inPos] & 68719476735L) << 4) & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 68719476735L) >>> 4 & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 68719476735L) >>> 12 & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 68719476735L) >>> 20 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 68719476735L) >>> 28 & 255L));
         out[18 + outPos] = (byte)((int)(in[4 + inPos] & 68719476735L & 255L));
         out[19 + outPos] = (byte)((int)((in[4 + inPos] & 68719476735L) >>> 8 & 255L));
         out[20 + outPos] = (byte)((int)((in[4 + inPos] & 68719476735L) >>> 16 & 255L));
         out[21 + outPos] = (byte)((int)((in[4 + inPos] & 68719476735L) >>> 24 & 255L));
         out[22 + outPos] = (byte)((int)(((in[4 + inPos] & 68719476735L) >>> 32 | (in[5 + inPos] & 68719476735L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)((in[5 + inPos] & 68719476735L) >>> 4 & 255L));
         out[24 + outPos] = (byte)((int)((in[5 + inPos] & 68719476735L) >>> 12 & 255L));
         out[25 + outPos] = (byte)((int)((in[5 + inPos] & 68719476735L) >>> 20 & 255L));
         out[26 + outPos] = (byte)((int)((in[5 + inPos] & 68719476735L) >>> 28 & 255L));
         out[27 + outPos] = (byte)((int)(in[6 + inPos] & 68719476735L & 255L));
         out[28 + outPos] = (byte)((int)((in[6 + inPos] & 68719476735L) >>> 8 & 255L));
         out[29 + outPos] = (byte)((int)((in[6 + inPos] & 68719476735L) >>> 16 & 255L));
         out[30 + outPos] = (byte)((int)((in[6 + inPos] & 68719476735L) >>> 24 & 255L));
         out[31 + outPos] = (byte)((int)(((in[6 + inPos] & 68719476735L) >>> 32 | (in[7 + inPos] & 68719476735L) << 4) & 255L));
         out[32 + outPos] = (byte)((int)((in[7 + inPos] & 68719476735L) >>> 4 & 255L));
         out[33 + outPos] = (byte)((int)((in[7 + inPos] & 68719476735L) >>> 12 & 255L));
         out[34 + outPos] = (byte)((int)((in[7 + inPos] & 68719476735L) >>> 20 & 255L));
         out[35 + outPos] = (byte)((int)((in[7 + inPos] & 68719476735L) >>> 28 & 255L));
         out[36 + outPos] = (byte)((int)(in[8 + inPos] & 68719476735L & 255L));
         out[37 + outPos] = (byte)((int)((in[8 + inPos] & 68719476735L) >>> 8 & 255L));
         out[38 + outPos] = (byte)((int)((in[8 + inPos] & 68719476735L) >>> 16 & 255L));
         out[39 + outPos] = (byte)((int)((in[8 + inPos] & 68719476735L) >>> 24 & 255L));
         out[40 + outPos] = (byte)((int)(((in[8 + inPos] & 68719476735L) >>> 32 | (in[9 + inPos] & 68719476735L) << 4) & 255L));
         out[41 + outPos] = (byte)((int)((in[9 + inPos] & 68719476735L) >>> 4 & 255L));
         out[42 + outPos] = (byte)((int)((in[9 + inPos] & 68719476735L) >>> 12 & 255L));
         out[43 + outPos] = (byte)((int)((in[9 + inPos] & 68719476735L) >>> 20 & 255L));
         out[44 + outPos] = (byte)((int)((in[9 + inPos] & 68719476735L) >>> 28 & 255L));
         out[45 + outPos] = (byte)((int)(in[10 + inPos] & 68719476735L & 255L));
         out[46 + outPos] = (byte)((int)((in[10 + inPos] & 68719476735L) >>> 8 & 255L));
         out[47 + outPos] = (byte)((int)((in[10 + inPos] & 68719476735L) >>> 16 & 255L));
         out[48 + outPos] = (byte)((int)((in[10 + inPos] & 68719476735L) >>> 24 & 255L));
         out[49 + outPos] = (byte)((int)(((in[10 + inPos] & 68719476735L) >>> 32 | (in[11 + inPos] & 68719476735L) << 4) & 255L));
         out[50 + outPos] = (byte)((int)((in[11 + inPos] & 68719476735L) >>> 4 & 255L));
         out[51 + outPos] = (byte)((int)((in[11 + inPos] & 68719476735L) >>> 12 & 255L));
         out[52 + outPos] = (byte)((int)((in[11 + inPos] & 68719476735L) >>> 20 & 255L));
         out[53 + outPos] = (byte)((int)((in[11 + inPos] & 68719476735L) >>> 28 & 255L));
         out[54 + outPos] = (byte)((int)(in[12 + inPos] & 68719476735L & 255L));
         out[55 + outPos] = (byte)((int)((in[12 + inPos] & 68719476735L) >>> 8 & 255L));
         out[56 + outPos] = (byte)((int)((in[12 + inPos] & 68719476735L) >>> 16 & 255L));
         out[57 + outPos] = (byte)((int)((in[12 + inPos] & 68719476735L) >>> 24 & 255L));
         out[58 + outPos] = (byte)((int)(((in[12 + inPos] & 68719476735L) >>> 32 | (in[13 + inPos] & 68719476735L) << 4) & 255L));
         out[59 + outPos] = (byte)((int)((in[13 + inPos] & 68719476735L) >>> 4 & 255L));
         out[60 + outPos] = (byte)((int)((in[13 + inPos] & 68719476735L) >>> 12 & 255L));
         out[61 + outPos] = (byte)((int)((in[13 + inPos] & 68719476735L) >>> 20 & 255L));
         out[62 + outPos] = (byte)((int)((in[13 + inPos] & 68719476735L) >>> 28 & 255L));
         out[63 + outPos] = (byte)((int)(in[14 + inPos] & 68719476735L & 255L));
         out[64 + outPos] = (byte)((int)((in[14 + inPos] & 68719476735L) >>> 8 & 255L));
         out[65 + outPos] = (byte)((int)((in[14 + inPos] & 68719476735L) >>> 16 & 255L));
         out[66 + outPos] = (byte)((int)((in[14 + inPos] & 68719476735L) >>> 24 & 255L));
         out[67 + outPos] = (byte)((int)(((in[14 + inPos] & 68719476735L) >>> 32 | (in[15 + inPos] & 68719476735L) << 4) & 255L));
         out[68 + outPos] = (byte)((int)((in[15 + inPos] & 68719476735L) >>> 4 & 255L));
         out[69 + outPos] = (byte)((int)((in[15 + inPos] & 68719476735L) >>> 12 & 255L));
         out[70 + outPos] = (byte)((int)((in[15 + inPos] & 68719476735L) >>> 20 & 255L));
         out[71 + outPos] = (byte)((int)((in[15 + inPos] & 68719476735L) >>> 28 & 255L));
         out[72 + outPos] = (byte)((int)(in[16 + inPos] & 68719476735L & 255L));
         out[73 + outPos] = (byte)((int)((in[16 + inPos] & 68719476735L) >>> 8 & 255L));
         out[74 + outPos] = (byte)((int)((in[16 + inPos] & 68719476735L) >>> 16 & 255L));
         out[75 + outPos] = (byte)((int)((in[16 + inPos] & 68719476735L) >>> 24 & 255L));
         out[76 + outPos] = (byte)((int)(((in[16 + inPos] & 68719476735L) >>> 32 | (in[17 + inPos] & 68719476735L) << 4) & 255L));
         out[77 + outPos] = (byte)((int)((in[17 + inPos] & 68719476735L) >>> 4 & 255L));
         out[78 + outPos] = (byte)((int)((in[17 + inPos] & 68719476735L) >>> 12 & 255L));
         out[79 + outPos] = (byte)((int)((in[17 + inPos] & 68719476735L) >>> 20 & 255L));
         out[80 + outPos] = (byte)((int)((in[17 + inPos] & 68719476735L) >>> 28 & 255L));
         out[81 + outPos] = (byte)((int)(in[18 + inPos] & 68719476735L & 255L));
         out[82 + outPos] = (byte)((int)((in[18 + inPos] & 68719476735L) >>> 8 & 255L));
         out[83 + outPos] = (byte)((int)((in[18 + inPos] & 68719476735L) >>> 16 & 255L));
         out[84 + outPos] = (byte)((int)((in[18 + inPos] & 68719476735L) >>> 24 & 255L));
         out[85 + outPos] = (byte)((int)(((in[18 + inPos] & 68719476735L) >>> 32 | (in[19 + inPos] & 68719476735L) << 4) & 255L));
         out[86 + outPos] = (byte)((int)((in[19 + inPos] & 68719476735L) >>> 4 & 255L));
         out[87 + outPos] = (byte)((int)((in[19 + inPos] & 68719476735L) >>> 12 & 255L));
         out[88 + outPos] = (byte)((int)((in[19 + inPos] & 68719476735L) >>> 20 & 255L));
         out[89 + outPos] = (byte)((int)((in[19 + inPos] & 68719476735L) >>> 28 & 255L));
         out[90 + outPos] = (byte)((int)(in[20 + inPos] & 68719476735L & 255L));
         out[91 + outPos] = (byte)((int)((in[20 + inPos] & 68719476735L) >>> 8 & 255L));
         out[92 + outPos] = (byte)((int)((in[20 + inPos] & 68719476735L) >>> 16 & 255L));
         out[93 + outPos] = (byte)((int)((in[20 + inPos] & 68719476735L) >>> 24 & 255L));
         out[94 + outPos] = (byte)((int)(((in[20 + inPos] & 68719476735L) >>> 32 | (in[21 + inPos] & 68719476735L) << 4) & 255L));
         out[95 + outPos] = (byte)((int)((in[21 + inPos] & 68719476735L) >>> 4 & 255L));
         out[96 + outPos] = (byte)((int)((in[21 + inPos] & 68719476735L) >>> 12 & 255L));
         out[97 + outPos] = (byte)((int)((in[21 + inPos] & 68719476735L) >>> 20 & 255L));
         out[98 + outPos] = (byte)((int)((in[21 + inPos] & 68719476735L) >>> 28 & 255L));
         out[99 + outPos] = (byte)((int)(in[22 + inPos] & 68719476735L & 255L));
         out[100 + outPos] = (byte)((int)((in[22 + inPos] & 68719476735L) >>> 8 & 255L));
         out[101 + outPos] = (byte)((int)((in[22 + inPos] & 68719476735L) >>> 16 & 255L));
         out[102 + outPos] = (byte)((int)((in[22 + inPos] & 68719476735L) >>> 24 & 255L));
         out[103 + outPos] = (byte)((int)(((in[22 + inPos] & 68719476735L) >>> 32 | (in[23 + inPos] & 68719476735L) << 4) & 255L));
         out[104 + outPos] = (byte)((int)((in[23 + inPos] & 68719476735L) >>> 4 & 255L));
         out[105 + outPos] = (byte)((int)((in[23 + inPos] & 68719476735L) >>> 12 & 255L));
         out[106 + outPos] = (byte)((int)((in[23 + inPos] & 68719476735L) >>> 20 & 255L));
         out[107 + outPos] = (byte)((int)((in[23 + inPos] & 68719476735L) >>> 28 & 255L));
         out[108 + outPos] = (byte)((int)(in[24 + inPos] & 68719476735L & 255L));
         out[109 + outPos] = (byte)((int)((in[24 + inPos] & 68719476735L) >>> 8 & 255L));
         out[110 + outPos] = (byte)((int)((in[24 + inPos] & 68719476735L) >>> 16 & 255L));
         out[111 + outPos] = (byte)((int)((in[24 + inPos] & 68719476735L) >>> 24 & 255L));
         out[112 + outPos] = (byte)((int)(((in[24 + inPos] & 68719476735L) >>> 32 | (in[25 + inPos] & 68719476735L) << 4) & 255L));
         out[113 + outPos] = (byte)((int)((in[25 + inPos] & 68719476735L) >>> 4 & 255L));
         out[114 + outPos] = (byte)((int)((in[25 + inPos] & 68719476735L) >>> 12 & 255L));
         out[115 + outPos] = (byte)((int)((in[25 + inPos] & 68719476735L) >>> 20 & 255L));
         out[116 + outPos] = (byte)((int)((in[25 + inPos] & 68719476735L) >>> 28 & 255L));
         out[117 + outPos] = (byte)((int)(in[26 + inPos] & 68719476735L & 255L));
         out[118 + outPos] = (byte)((int)((in[26 + inPos] & 68719476735L) >>> 8 & 255L));
         out[119 + outPos] = (byte)((int)((in[26 + inPos] & 68719476735L) >>> 16 & 255L));
         out[120 + outPos] = (byte)((int)((in[26 + inPos] & 68719476735L) >>> 24 & 255L));
         out[121 + outPos] = (byte)((int)(((in[26 + inPos] & 68719476735L) >>> 32 | (in[27 + inPos] & 68719476735L) << 4) & 255L));
         out[122 + outPos] = (byte)((int)((in[27 + inPos] & 68719476735L) >>> 4 & 255L));
         out[123 + outPos] = (byte)((int)((in[27 + inPos] & 68719476735L) >>> 12 & 255L));
         out[124 + outPos] = (byte)((int)((in[27 + inPos] & 68719476735L) >>> 20 & 255L));
         out[125 + outPos] = (byte)((int)((in[27 + inPos] & 68719476735L) >>> 28 & 255L));
         out[126 + outPos] = (byte)((int)(in[28 + inPos] & 68719476735L & 255L));
         out[127 + outPos] = (byte)((int)((in[28 + inPos] & 68719476735L) >>> 8 & 255L));
         out[128 + outPos] = (byte)((int)((in[28 + inPos] & 68719476735L) >>> 16 & 255L));
         out[129 + outPos] = (byte)((int)((in[28 + inPos] & 68719476735L) >>> 24 & 255L));
         out[130 + outPos] = (byte)((int)(((in[28 + inPos] & 68719476735L) >>> 32 | (in[29 + inPos] & 68719476735L) << 4) & 255L));
         out[131 + outPos] = (byte)((int)((in[29 + inPos] & 68719476735L) >>> 4 & 255L));
         out[132 + outPos] = (byte)((int)((in[29 + inPos] & 68719476735L) >>> 12 & 255L));
         out[133 + outPos] = (byte)((int)((in[29 + inPos] & 68719476735L) >>> 20 & 255L));
         out[134 + outPos] = (byte)((int)((in[29 + inPos] & 68719476735L) >>> 28 & 255L));
         out[135 + outPos] = (byte)((int)(in[30 + inPos] & 68719476735L & 255L));
         out[136 + outPos] = (byte)((int)((in[30 + inPos] & 68719476735L) >>> 8 & 255L));
         out[137 + outPos] = (byte)((int)((in[30 + inPos] & 68719476735L) >>> 16 & 255L));
         out[138 + outPos] = (byte)((int)((in[30 + inPos] & 68719476735L) >>> 24 & 255L));
         out[139 + outPos] = (byte)((int)(((in[30 + inPos] & 68719476735L) >>> 32 | (in[31 + inPos] & 68719476735L) << 4) & 255L));
         out[140 + outPos] = (byte)((int)((in[31 + inPos] & 68719476735L) >>> 4 & 255L));
         out[141 + outPos] = (byte)((int)((in[31 + inPos] & 68719476735L) >>> 12 & 255L));
         out[142 + outPos] = (byte)((int)((in[31 + inPos] & 68719476735L) >>> 20 & 255L));
         out[143 + outPos] = (byte)((int)((in[31 + inPos] & 68719476735L) >>> 28 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 68719476735L;
         out[1 + outPos] = (long)in[4 + inPos] >> 4 & 15L | (long)in[5 + inPos] << 4 & 4095L | (long)in[6 + inPos] << 12 & 1048575L | (long)in[7 + inPos] << 20 & 268435455L | (long)in[8 + inPos] << 28 & 68719476735L;
         out[2 + outPos] = (long)in[9 + inPos] & 255L | (long)in[10 + inPos] << 8 & 65535L | (long)in[11 + inPos] << 16 & 16777215L | (long)in[12 + inPos] << 24 & 4294967295L | (long)in[13 + inPos] << 32 & 68719476735L;
         out[3 + outPos] = (long)in[13 + inPos] >> 4 & 15L | (long)in[14 + inPos] << 4 & 4095L | (long)in[15 + inPos] << 12 & 1048575L | (long)in[16 + inPos] << 20 & 268435455L | (long)in[17 + inPos] << 28 & 68719476735L;
         out[4 + outPos] = (long)in[18 + inPos] & 255L | (long)in[19 + inPos] << 8 & 65535L | (long)in[20 + inPos] << 16 & 16777215L | (long)in[21 + inPos] << 24 & 4294967295L | (long)in[22 + inPos] << 32 & 68719476735L;
         out[5 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 4095L | (long)in[24 + inPos] << 12 & 1048575L | (long)in[25 + inPos] << 20 & 268435455L | (long)in[26 + inPos] << 28 & 68719476735L;
         out[6 + outPos] = (long)in[27 + inPos] & 255L | (long)in[28 + inPos] << 8 & 65535L | (long)in[29 + inPos] << 16 & 16777215L | (long)in[30 + inPos] << 24 & 4294967295L | (long)in[31 + inPos] << 32 & 68719476735L;
         out[7 + outPos] = (long)in[31 + inPos] >> 4 & 15L | (long)in[32 + inPos] << 4 & 4095L | (long)in[33 + inPos] << 12 & 1048575L | (long)in[34 + inPos] << 20 & 268435455L | (long)in[35 + inPos] << 28 & 68719476735L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 68719476735L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 4 & 15L | (long)in.get(5 + inPos) << 4 & 4095L | (long)in.get(6 + inPos) << 12 & 1048575L | (long)in.get(7 + inPos) << 20 & 268435455L | (long)in.get(8 + inPos) << 28 & 68719476735L;
         out[2 + outPos] = (long)in.get(9 + inPos) & 255L | (long)in.get(10 + inPos) << 8 & 65535L | (long)in.get(11 + inPos) << 16 & 16777215L | (long)in.get(12 + inPos) << 24 & 4294967295L | (long)in.get(13 + inPos) << 32 & 68719476735L;
         out[3 + outPos] = (long)in.get(13 + inPos) >> 4 & 15L | (long)in.get(14 + inPos) << 4 & 4095L | (long)in.get(15 + inPos) << 12 & 1048575L | (long)in.get(16 + inPos) << 20 & 268435455L | (long)in.get(17 + inPos) << 28 & 68719476735L;
         out[4 + outPos] = (long)in.get(18 + inPos) & 255L | (long)in.get(19 + inPos) << 8 & 65535L | (long)in.get(20 + inPos) << 16 & 16777215L | (long)in.get(21 + inPos) << 24 & 4294967295L | (long)in.get(22 + inPos) << 32 & 68719476735L;
         out[5 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 4095L | (long)in.get(24 + inPos) << 12 & 1048575L | (long)in.get(25 + inPos) << 20 & 268435455L | (long)in.get(26 + inPos) << 28 & 68719476735L;
         out[6 + outPos] = (long)in.get(27 + inPos) & 255L | (long)in.get(28 + inPos) << 8 & 65535L | (long)in.get(29 + inPos) << 16 & 16777215L | (long)in.get(30 + inPos) << 24 & 4294967295L | (long)in.get(31 + inPos) << 32 & 68719476735L;
         out[7 + outPos] = (long)in.get(31 + inPos) >> 4 & 15L | (long)in.get(32 + inPos) << 4 & 4095L | (long)in.get(33 + inPos) << 12 & 1048575L | (long)in.get(34 + inPos) << 20 & 268435455L | (long)in.get(35 + inPos) << 28 & 68719476735L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 68719476735L;
         out[1 + outPos] = (long)in[4 + inPos] >> 4 & 15L | (long)in[5 + inPos] << 4 & 4095L | (long)in[6 + inPos] << 12 & 1048575L | (long)in[7 + inPos] << 20 & 268435455L | (long)in[8 + inPos] << 28 & 68719476735L;
         out[2 + outPos] = (long)in[9 + inPos] & 255L | (long)in[10 + inPos] << 8 & 65535L | (long)in[11 + inPos] << 16 & 16777215L | (long)in[12 + inPos] << 24 & 4294967295L | (long)in[13 + inPos] << 32 & 68719476735L;
         out[3 + outPos] = (long)in[13 + inPos] >> 4 & 15L | (long)in[14 + inPos] << 4 & 4095L | (long)in[15 + inPos] << 12 & 1048575L | (long)in[16 + inPos] << 20 & 268435455L | (long)in[17 + inPos] << 28 & 68719476735L;
         out[4 + outPos] = (long)in[18 + inPos] & 255L | (long)in[19 + inPos] << 8 & 65535L | (long)in[20 + inPos] << 16 & 16777215L | (long)in[21 + inPos] << 24 & 4294967295L | (long)in[22 + inPos] << 32 & 68719476735L;
         out[5 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 4095L | (long)in[24 + inPos] << 12 & 1048575L | (long)in[25 + inPos] << 20 & 268435455L | (long)in[26 + inPos] << 28 & 68719476735L;
         out[6 + outPos] = (long)in[27 + inPos] & 255L | (long)in[28 + inPos] << 8 & 65535L | (long)in[29 + inPos] << 16 & 16777215L | (long)in[30 + inPos] << 24 & 4294967295L | (long)in[31 + inPos] << 32 & 68719476735L;
         out[7 + outPos] = (long)in[31 + inPos] >> 4 & 15L | (long)in[32 + inPos] << 4 & 4095L | (long)in[33 + inPos] << 12 & 1048575L | (long)in[34 + inPos] << 20 & 268435455L | (long)in[35 + inPos] << 28 & 68719476735L;
         out[8 + outPos] = (long)in[36 + inPos] & 255L | (long)in[37 + inPos] << 8 & 65535L | (long)in[38 + inPos] << 16 & 16777215L | (long)in[39 + inPos] << 24 & 4294967295L | (long)in[40 + inPos] << 32 & 68719476735L;
         out[9 + outPos] = (long)in[40 + inPos] >> 4 & 15L | (long)in[41 + inPos] << 4 & 4095L | (long)in[42 + inPos] << 12 & 1048575L | (long)in[43 + inPos] << 20 & 268435455L | (long)in[44 + inPos] << 28 & 68719476735L;
         out[10 + outPos] = (long)in[45 + inPos] & 255L | (long)in[46 + inPos] << 8 & 65535L | (long)in[47 + inPos] << 16 & 16777215L | (long)in[48 + inPos] << 24 & 4294967295L | (long)in[49 + inPos] << 32 & 68719476735L;
         out[11 + outPos] = (long)in[49 + inPos] >> 4 & 15L | (long)in[50 + inPos] << 4 & 4095L | (long)in[51 + inPos] << 12 & 1048575L | (long)in[52 + inPos] << 20 & 268435455L | (long)in[53 + inPos] << 28 & 68719476735L;
         out[12 + outPos] = (long)in[54 + inPos] & 255L | (long)in[55 + inPos] << 8 & 65535L | (long)in[56 + inPos] << 16 & 16777215L | (long)in[57 + inPos] << 24 & 4294967295L | (long)in[58 + inPos] << 32 & 68719476735L;
         out[13 + outPos] = (long)in[58 + inPos] >> 4 & 15L | (long)in[59 + inPos] << 4 & 4095L | (long)in[60 + inPos] << 12 & 1048575L | (long)in[61 + inPos] << 20 & 268435455L | (long)in[62 + inPos] << 28 & 68719476735L;
         out[14 + outPos] = (long)in[63 + inPos] & 255L | (long)in[64 + inPos] << 8 & 65535L | (long)in[65 + inPos] << 16 & 16777215L | (long)in[66 + inPos] << 24 & 4294967295L | (long)in[67 + inPos] << 32 & 68719476735L;
         out[15 + outPos] = (long)in[67 + inPos] >> 4 & 15L | (long)in[68 + inPos] << 4 & 4095L | (long)in[69 + inPos] << 12 & 1048575L | (long)in[70 + inPos] << 20 & 268435455L | (long)in[71 + inPos] << 28 & 68719476735L;
         out[16 + outPos] = (long)in[72 + inPos] & 255L | (long)in[73 + inPos] << 8 & 65535L | (long)in[74 + inPos] << 16 & 16777215L | (long)in[75 + inPos] << 24 & 4294967295L | (long)in[76 + inPos] << 32 & 68719476735L;
         out[17 + outPos] = (long)in[76 + inPos] >> 4 & 15L | (long)in[77 + inPos] << 4 & 4095L | (long)in[78 + inPos] << 12 & 1048575L | (long)in[79 + inPos] << 20 & 268435455L | (long)in[80 + inPos] << 28 & 68719476735L;
         out[18 + outPos] = (long)in[81 + inPos] & 255L | (long)in[82 + inPos] << 8 & 65535L | (long)in[83 + inPos] << 16 & 16777215L | (long)in[84 + inPos] << 24 & 4294967295L | (long)in[85 + inPos] << 32 & 68719476735L;
         out[19 + outPos] = (long)in[85 + inPos] >> 4 & 15L | (long)in[86 + inPos] << 4 & 4095L | (long)in[87 + inPos] << 12 & 1048575L | (long)in[88 + inPos] << 20 & 268435455L | (long)in[89 + inPos] << 28 & 68719476735L;
         out[20 + outPos] = (long)in[90 + inPos] & 255L | (long)in[91 + inPos] << 8 & 65535L | (long)in[92 + inPos] << 16 & 16777215L | (long)in[93 + inPos] << 24 & 4294967295L | (long)in[94 + inPos] << 32 & 68719476735L;
         out[21 + outPos] = (long)in[94 + inPos] >> 4 & 15L | (long)in[95 + inPos] << 4 & 4095L | (long)in[96 + inPos] << 12 & 1048575L | (long)in[97 + inPos] << 20 & 268435455L | (long)in[98 + inPos] << 28 & 68719476735L;
         out[22 + outPos] = (long)in[99 + inPos] & 255L | (long)in[100 + inPos] << 8 & 65535L | (long)in[101 + inPos] << 16 & 16777215L | (long)in[102 + inPos] << 24 & 4294967295L | (long)in[103 + inPos] << 32 & 68719476735L;
         out[23 + outPos] = (long)in[103 + inPos] >> 4 & 15L | (long)in[104 + inPos] << 4 & 4095L | (long)in[105 + inPos] << 12 & 1048575L | (long)in[106 + inPos] << 20 & 268435455L | (long)in[107 + inPos] << 28 & 68719476735L;
         out[24 + outPos] = (long)in[108 + inPos] & 255L | (long)in[109 + inPos] << 8 & 65535L | (long)in[110 + inPos] << 16 & 16777215L | (long)in[111 + inPos] << 24 & 4294967295L | (long)in[112 + inPos] << 32 & 68719476735L;
         out[25 + outPos] = (long)in[112 + inPos] >> 4 & 15L | (long)in[113 + inPos] << 4 & 4095L | (long)in[114 + inPos] << 12 & 1048575L | (long)in[115 + inPos] << 20 & 268435455L | (long)in[116 + inPos] << 28 & 68719476735L;
         out[26 + outPos] = (long)in[117 + inPos] & 255L | (long)in[118 + inPos] << 8 & 65535L | (long)in[119 + inPos] << 16 & 16777215L | (long)in[120 + inPos] << 24 & 4294967295L | (long)in[121 + inPos] << 32 & 68719476735L;
         out[27 + outPos] = (long)in[121 + inPos] >> 4 & 15L | (long)in[122 + inPos] << 4 & 4095L | (long)in[123 + inPos] << 12 & 1048575L | (long)in[124 + inPos] << 20 & 268435455L | (long)in[125 + inPos] << 28 & 68719476735L;
         out[28 + outPos] = (long)in[126 + inPos] & 255L | (long)in[127 + inPos] << 8 & 65535L | (long)in[128 + inPos] << 16 & 16777215L | (long)in[129 + inPos] << 24 & 4294967295L | (long)in[130 + inPos] << 32 & 68719476735L;
         out[29 + outPos] = (long)in[130 + inPos] >> 4 & 15L | (long)in[131 + inPos] << 4 & 4095L | (long)in[132 + inPos] << 12 & 1048575L | (long)in[133 + inPos] << 20 & 268435455L | (long)in[134 + inPos] << 28 & 68719476735L;
         out[30 + outPos] = (long)in[135 + inPos] & 255L | (long)in[136 + inPos] << 8 & 65535L | (long)in[137 + inPos] << 16 & 16777215L | (long)in[138 + inPos] << 24 & 4294967295L | (long)in[139 + inPos] << 32 & 68719476735L;
         out[31 + outPos] = (long)in[139 + inPos] >> 4 & 15L | (long)in[140 + inPos] << 4 & 4095L | (long)in[141 + inPos] << 12 & 1048575L | (long)in[142 + inPos] << 20 & 268435455L | (long)in[143 + inPos] << 28 & 68719476735L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 68719476735L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 4 & 15L | (long)in.get(5 + inPos) << 4 & 4095L | (long)in.get(6 + inPos) << 12 & 1048575L | (long)in.get(7 + inPos) << 20 & 268435455L | (long)in.get(8 + inPos) << 28 & 68719476735L;
         out[2 + outPos] = (long)in.get(9 + inPos) & 255L | (long)in.get(10 + inPos) << 8 & 65535L | (long)in.get(11 + inPos) << 16 & 16777215L | (long)in.get(12 + inPos) << 24 & 4294967295L | (long)in.get(13 + inPos) << 32 & 68719476735L;
         out[3 + outPos] = (long)in.get(13 + inPos) >> 4 & 15L | (long)in.get(14 + inPos) << 4 & 4095L | (long)in.get(15 + inPos) << 12 & 1048575L | (long)in.get(16 + inPos) << 20 & 268435455L | (long)in.get(17 + inPos) << 28 & 68719476735L;
         out[4 + outPos] = (long)in.get(18 + inPos) & 255L | (long)in.get(19 + inPos) << 8 & 65535L | (long)in.get(20 + inPos) << 16 & 16777215L | (long)in.get(21 + inPos) << 24 & 4294967295L | (long)in.get(22 + inPos) << 32 & 68719476735L;
         out[5 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 4095L | (long)in.get(24 + inPos) << 12 & 1048575L | (long)in.get(25 + inPos) << 20 & 268435455L | (long)in.get(26 + inPos) << 28 & 68719476735L;
         out[6 + outPos] = (long)in.get(27 + inPos) & 255L | (long)in.get(28 + inPos) << 8 & 65535L | (long)in.get(29 + inPos) << 16 & 16777215L | (long)in.get(30 + inPos) << 24 & 4294967295L | (long)in.get(31 + inPos) << 32 & 68719476735L;
         out[7 + outPos] = (long)in.get(31 + inPos) >> 4 & 15L | (long)in.get(32 + inPos) << 4 & 4095L | (long)in.get(33 + inPos) << 12 & 1048575L | (long)in.get(34 + inPos) << 20 & 268435455L | (long)in.get(35 + inPos) << 28 & 68719476735L;
         out[8 + outPos] = (long)in.get(36 + inPos) & 255L | (long)in.get(37 + inPos) << 8 & 65535L | (long)in.get(38 + inPos) << 16 & 16777215L | (long)in.get(39 + inPos) << 24 & 4294967295L | (long)in.get(40 + inPos) << 32 & 68719476735L;
         out[9 + outPos] = (long)in.get(40 + inPos) >> 4 & 15L | (long)in.get(41 + inPos) << 4 & 4095L | (long)in.get(42 + inPos) << 12 & 1048575L | (long)in.get(43 + inPos) << 20 & 268435455L | (long)in.get(44 + inPos) << 28 & 68719476735L;
         out[10 + outPos] = (long)in.get(45 + inPos) & 255L | (long)in.get(46 + inPos) << 8 & 65535L | (long)in.get(47 + inPos) << 16 & 16777215L | (long)in.get(48 + inPos) << 24 & 4294967295L | (long)in.get(49 + inPos) << 32 & 68719476735L;
         out[11 + outPos] = (long)in.get(49 + inPos) >> 4 & 15L | (long)in.get(50 + inPos) << 4 & 4095L | (long)in.get(51 + inPos) << 12 & 1048575L | (long)in.get(52 + inPos) << 20 & 268435455L | (long)in.get(53 + inPos) << 28 & 68719476735L;
         out[12 + outPos] = (long)in.get(54 + inPos) & 255L | (long)in.get(55 + inPos) << 8 & 65535L | (long)in.get(56 + inPos) << 16 & 16777215L | (long)in.get(57 + inPos) << 24 & 4294967295L | (long)in.get(58 + inPos) << 32 & 68719476735L;
         out[13 + outPos] = (long)in.get(58 + inPos) >> 4 & 15L | (long)in.get(59 + inPos) << 4 & 4095L | (long)in.get(60 + inPos) << 12 & 1048575L | (long)in.get(61 + inPos) << 20 & 268435455L | (long)in.get(62 + inPos) << 28 & 68719476735L;
         out[14 + outPos] = (long)in.get(63 + inPos) & 255L | (long)in.get(64 + inPos) << 8 & 65535L | (long)in.get(65 + inPos) << 16 & 16777215L | (long)in.get(66 + inPos) << 24 & 4294967295L | (long)in.get(67 + inPos) << 32 & 68719476735L;
         out[15 + outPos] = (long)in.get(67 + inPos) >> 4 & 15L | (long)in.get(68 + inPos) << 4 & 4095L | (long)in.get(69 + inPos) << 12 & 1048575L | (long)in.get(70 + inPos) << 20 & 268435455L | (long)in.get(71 + inPos) << 28 & 68719476735L;
         out[16 + outPos] = (long)in.get(72 + inPos) & 255L | (long)in.get(73 + inPos) << 8 & 65535L | (long)in.get(74 + inPos) << 16 & 16777215L | (long)in.get(75 + inPos) << 24 & 4294967295L | (long)in.get(76 + inPos) << 32 & 68719476735L;
         out[17 + outPos] = (long)in.get(76 + inPos) >> 4 & 15L | (long)in.get(77 + inPos) << 4 & 4095L | (long)in.get(78 + inPos) << 12 & 1048575L | (long)in.get(79 + inPos) << 20 & 268435455L | (long)in.get(80 + inPos) << 28 & 68719476735L;
         out[18 + outPos] = (long)in.get(81 + inPos) & 255L | (long)in.get(82 + inPos) << 8 & 65535L | (long)in.get(83 + inPos) << 16 & 16777215L | (long)in.get(84 + inPos) << 24 & 4294967295L | (long)in.get(85 + inPos) << 32 & 68719476735L;
         out[19 + outPos] = (long)in.get(85 + inPos) >> 4 & 15L | (long)in.get(86 + inPos) << 4 & 4095L | (long)in.get(87 + inPos) << 12 & 1048575L | (long)in.get(88 + inPos) << 20 & 268435455L | (long)in.get(89 + inPos) << 28 & 68719476735L;
         out[20 + outPos] = (long)in.get(90 + inPos) & 255L | (long)in.get(91 + inPos) << 8 & 65535L | (long)in.get(92 + inPos) << 16 & 16777215L | (long)in.get(93 + inPos) << 24 & 4294967295L | (long)in.get(94 + inPos) << 32 & 68719476735L;
         out[21 + outPos] = (long)in.get(94 + inPos) >> 4 & 15L | (long)in.get(95 + inPos) << 4 & 4095L | (long)in.get(96 + inPos) << 12 & 1048575L | (long)in.get(97 + inPos) << 20 & 268435455L | (long)in.get(98 + inPos) << 28 & 68719476735L;
         out[22 + outPos] = (long)in.get(99 + inPos) & 255L | (long)in.get(100 + inPos) << 8 & 65535L | (long)in.get(101 + inPos) << 16 & 16777215L | (long)in.get(102 + inPos) << 24 & 4294967295L | (long)in.get(103 + inPos) << 32 & 68719476735L;
         out[23 + outPos] = (long)in.get(103 + inPos) >> 4 & 15L | (long)in.get(104 + inPos) << 4 & 4095L | (long)in.get(105 + inPos) << 12 & 1048575L | (long)in.get(106 + inPos) << 20 & 268435455L | (long)in.get(107 + inPos) << 28 & 68719476735L;
         out[24 + outPos] = (long)in.get(108 + inPos) & 255L | (long)in.get(109 + inPos) << 8 & 65535L | (long)in.get(110 + inPos) << 16 & 16777215L | (long)in.get(111 + inPos) << 24 & 4294967295L | (long)in.get(112 + inPos) << 32 & 68719476735L;
         out[25 + outPos] = (long)in.get(112 + inPos) >> 4 & 15L | (long)in.get(113 + inPos) << 4 & 4095L | (long)in.get(114 + inPos) << 12 & 1048575L | (long)in.get(115 + inPos) << 20 & 268435455L | (long)in.get(116 + inPos) << 28 & 68719476735L;
         out[26 + outPos] = (long)in.get(117 + inPos) & 255L | (long)in.get(118 + inPos) << 8 & 65535L | (long)in.get(119 + inPos) << 16 & 16777215L | (long)in.get(120 + inPos) << 24 & 4294967295L | (long)in.get(121 + inPos) << 32 & 68719476735L;
         out[27 + outPos] = (long)in.get(121 + inPos) >> 4 & 15L | (long)in.get(122 + inPos) << 4 & 4095L | (long)in.get(123 + inPos) << 12 & 1048575L | (long)in.get(124 + inPos) << 20 & 268435455L | (long)in.get(125 + inPos) << 28 & 68719476735L;
         out[28 + outPos] = (long)in.get(126 + inPos) & 255L | (long)in.get(127 + inPos) << 8 & 65535L | (long)in.get(128 + inPos) << 16 & 16777215L | (long)in.get(129 + inPos) << 24 & 4294967295L | (long)in.get(130 + inPos) << 32 & 68719476735L;
         out[29 + outPos] = (long)in.get(130 + inPos) >> 4 & 15L | (long)in.get(131 + inPos) << 4 & 4095L | (long)in.get(132 + inPos) << 12 & 1048575L | (long)in.get(133 + inPos) << 20 & 268435455L | (long)in.get(134 + inPos) << 28 & 68719476735L;
         out[30 + outPos] = (long)in.get(135 + inPos) & 255L | (long)in.get(136 + inPos) << 8 & 65535L | (long)in.get(137 + inPos) << 16 & 16777215L | (long)in.get(138 + inPos) << 24 & 4294967295L | (long)in.get(139 + inPos) << 32 & 68719476735L;
         out[31 + outPos] = (long)in.get(139 + inPos) >> 4 & 15L | (long)in.get(140 + inPos) << 4 & 4095L | (long)in.get(141 + inPos) << 12 & 1048575L | (long)in.get(142 + inPos) << 20 & 268435455L | (long)in.get(143 + inPos) << 28 & 68719476735L;
      }
   }

   private static final class Packer37 extends BytePackerForLong {
      private Packer37() {
         super(37);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 137438953471L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 137438953471L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 137438953471L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 137438953471L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 137438953471L) >>> 32 | (in[1 + inPos] & 137438953471L) << 5) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 137438953471L) >>> 3 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 137438953471L) >>> 11 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 137438953471L) >>> 19 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 137438953471L) >>> 27 & 255L));
         out[9 + outPos] = (byte)((int)(((in[1 + inPos] & 137438953471L) >>> 35 | (in[2 + inPos] & 137438953471L) << 2) & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 137438953471L) >>> 6 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 137438953471L) >>> 14 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 137438953471L) >>> 22 & 255L));
         out[13 + outPos] = (byte)((int)(((in[2 + inPos] & 137438953471L) >>> 30 | (in[3 + inPos] & 137438953471L) << 7) & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 137438953471L) >>> 1 & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 137438953471L) >>> 9 & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 137438953471L) >>> 17 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 137438953471L) >>> 25 & 255L));
         out[18 + outPos] = (byte)((int)(((in[3 + inPos] & 137438953471L) >>> 33 | (in[4 + inPos] & 137438953471L) << 4) & 255L));
         out[19 + outPos] = (byte)((int)((in[4 + inPos] & 137438953471L) >>> 4 & 255L));
         out[20 + outPos] = (byte)((int)((in[4 + inPos] & 137438953471L) >>> 12 & 255L));
         out[21 + outPos] = (byte)((int)((in[4 + inPos] & 137438953471L) >>> 20 & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 137438953471L) >>> 28 & 255L));
         out[23 + outPos] = (byte)((int)(((in[4 + inPos] & 137438953471L) >>> 36 | (in[5 + inPos] & 137438953471L) << 1) & 255L));
         out[24 + outPos] = (byte)((int)((in[5 + inPos] & 137438953471L) >>> 7 & 255L));
         out[25 + outPos] = (byte)((int)((in[5 + inPos] & 137438953471L) >>> 15 & 255L));
         out[26 + outPos] = (byte)((int)((in[5 + inPos] & 137438953471L) >>> 23 & 255L));
         out[27 + outPos] = (byte)((int)(((in[5 + inPos] & 137438953471L) >>> 31 | (in[6 + inPos] & 137438953471L) << 6) & 255L));
         out[28 + outPos] = (byte)((int)((in[6 + inPos] & 137438953471L) >>> 2 & 255L));
         out[29 + outPos] = (byte)((int)((in[6 + inPos] & 137438953471L) >>> 10 & 255L));
         out[30 + outPos] = (byte)((int)((in[6 + inPos] & 137438953471L) >>> 18 & 255L));
         out[31 + outPos] = (byte)((int)((in[6 + inPos] & 137438953471L) >>> 26 & 255L));
         out[32 + outPos] = (byte)((int)(((in[6 + inPos] & 137438953471L) >>> 34 | (in[7 + inPos] & 137438953471L) << 3) & 255L));
         out[33 + outPos] = (byte)((int)((in[7 + inPos] & 137438953471L) >>> 5 & 255L));
         out[34 + outPos] = (byte)((int)((in[7 + inPos] & 137438953471L) >>> 13 & 255L));
         out[35 + outPos] = (byte)((int)((in[7 + inPos] & 137438953471L) >>> 21 & 255L));
         out[36 + outPos] = (byte)((int)((in[7 + inPos] & 137438953471L) >>> 29 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 137438953471L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 137438953471L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 137438953471L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 137438953471L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 137438953471L) >>> 32 | (in[1 + inPos] & 137438953471L) << 5) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 137438953471L) >>> 3 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 137438953471L) >>> 11 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 137438953471L) >>> 19 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 137438953471L) >>> 27 & 255L));
         out[9 + outPos] = (byte)((int)(((in[1 + inPos] & 137438953471L) >>> 35 | (in[2 + inPos] & 137438953471L) << 2) & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 137438953471L) >>> 6 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 137438953471L) >>> 14 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 137438953471L) >>> 22 & 255L));
         out[13 + outPos] = (byte)((int)(((in[2 + inPos] & 137438953471L) >>> 30 | (in[3 + inPos] & 137438953471L) << 7) & 255L));
         out[14 + outPos] = (byte)((int)((in[3 + inPos] & 137438953471L) >>> 1 & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 137438953471L) >>> 9 & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 137438953471L) >>> 17 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 137438953471L) >>> 25 & 255L));
         out[18 + outPos] = (byte)((int)(((in[3 + inPos] & 137438953471L) >>> 33 | (in[4 + inPos] & 137438953471L) << 4) & 255L));
         out[19 + outPos] = (byte)((int)((in[4 + inPos] & 137438953471L) >>> 4 & 255L));
         out[20 + outPos] = (byte)((int)((in[4 + inPos] & 137438953471L) >>> 12 & 255L));
         out[21 + outPos] = (byte)((int)((in[4 + inPos] & 137438953471L) >>> 20 & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 137438953471L) >>> 28 & 255L));
         out[23 + outPos] = (byte)((int)(((in[4 + inPos] & 137438953471L) >>> 36 | (in[5 + inPos] & 137438953471L) << 1) & 255L));
         out[24 + outPos] = (byte)((int)((in[5 + inPos] & 137438953471L) >>> 7 & 255L));
         out[25 + outPos] = (byte)((int)((in[5 + inPos] & 137438953471L) >>> 15 & 255L));
         out[26 + outPos] = (byte)((int)((in[5 + inPos] & 137438953471L) >>> 23 & 255L));
         out[27 + outPos] = (byte)((int)(((in[5 + inPos] & 137438953471L) >>> 31 | (in[6 + inPos] & 137438953471L) << 6) & 255L));
         out[28 + outPos] = (byte)((int)((in[6 + inPos] & 137438953471L) >>> 2 & 255L));
         out[29 + outPos] = (byte)((int)((in[6 + inPos] & 137438953471L) >>> 10 & 255L));
         out[30 + outPos] = (byte)((int)((in[6 + inPos] & 137438953471L) >>> 18 & 255L));
         out[31 + outPos] = (byte)((int)((in[6 + inPos] & 137438953471L) >>> 26 & 255L));
         out[32 + outPos] = (byte)((int)(((in[6 + inPos] & 137438953471L) >>> 34 | (in[7 + inPos] & 137438953471L) << 3) & 255L));
         out[33 + outPos] = (byte)((int)((in[7 + inPos] & 137438953471L) >>> 5 & 255L));
         out[34 + outPos] = (byte)((int)((in[7 + inPos] & 137438953471L) >>> 13 & 255L));
         out[35 + outPos] = (byte)((int)((in[7 + inPos] & 137438953471L) >>> 21 & 255L));
         out[36 + outPos] = (byte)((int)((in[7 + inPos] & 137438953471L) >>> 29 & 255L));
         out[37 + outPos] = (byte)((int)(in[8 + inPos] & 137438953471L & 255L));
         out[38 + outPos] = (byte)((int)((in[8 + inPos] & 137438953471L) >>> 8 & 255L));
         out[39 + outPos] = (byte)((int)((in[8 + inPos] & 137438953471L) >>> 16 & 255L));
         out[40 + outPos] = (byte)((int)((in[8 + inPos] & 137438953471L) >>> 24 & 255L));
         out[41 + outPos] = (byte)((int)(((in[8 + inPos] & 137438953471L) >>> 32 | (in[9 + inPos] & 137438953471L) << 5) & 255L));
         out[42 + outPos] = (byte)((int)((in[9 + inPos] & 137438953471L) >>> 3 & 255L));
         out[43 + outPos] = (byte)((int)((in[9 + inPos] & 137438953471L) >>> 11 & 255L));
         out[44 + outPos] = (byte)((int)((in[9 + inPos] & 137438953471L) >>> 19 & 255L));
         out[45 + outPos] = (byte)((int)((in[9 + inPos] & 137438953471L) >>> 27 & 255L));
         out[46 + outPos] = (byte)((int)(((in[9 + inPos] & 137438953471L) >>> 35 | (in[10 + inPos] & 137438953471L) << 2) & 255L));
         out[47 + outPos] = (byte)((int)((in[10 + inPos] & 137438953471L) >>> 6 & 255L));
         out[48 + outPos] = (byte)((int)((in[10 + inPos] & 137438953471L) >>> 14 & 255L));
         out[49 + outPos] = (byte)((int)((in[10 + inPos] & 137438953471L) >>> 22 & 255L));
         out[50 + outPos] = (byte)((int)(((in[10 + inPos] & 137438953471L) >>> 30 | (in[11 + inPos] & 137438953471L) << 7) & 255L));
         out[51 + outPos] = (byte)((int)((in[11 + inPos] & 137438953471L) >>> 1 & 255L));
         out[52 + outPos] = (byte)((int)((in[11 + inPos] & 137438953471L) >>> 9 & 255L));
         out[53 + outPos] = (byte)((int)((in[11 + inPos] & 137438953471L) >>> 17 & 255L));
         out[54 + outPos] = (byte)((int)((in[11 + inPos] & 137438953471L) >>> 25 & 255L));
         out[55 + outPos] = (byte)((int)(((in[11 + inPos] & 137438953471L) >>> 33 | (in[12 + inPos] & 137438953471L) << 4) & 255L));
         out[56 + outPos] = (byte)((int)((in[12 + inPos] & 137438953471L) >>> 4 & 255L));
         out[57 + outPos] = (byte)((int)((in[12 + inPos] & 137438953471L) >>> 12 & 255L));
         out[58 + outPos] = (byte)((int)((in[12 + inPos] & 137438953471L) >>> 20 & 255L));
         out[59 + outPos] = (byte)((int)((in[12 + inPos] & 137438953471L) >>> 28 & 255L));
         out[60 + outPos] = (byte)((int)(((in[12 + inPos] & 137438953471L) >>> 36 | (in[13 + inPos] & 137438953471L) << 1) & 255L));
         out[61 + outPos] = (byte)((int)((in[13 + inPos] & 137438953471L) >>> 7 & 255L));
         out[62 + outPos] = (byte)((int)((in[13 + inPos] & 137438953471L) >>> 15 & 255L));
         out[63 + outPos] = (byte)((int)((in[13 + inPos] & 137438953471L) >>> 23 & 255L));
         out[64 + outPos] = (byte)((int)(((in[13 + inPos] & 137438953471L) >>> 31 | (in[14 + inPos] & 137438953471L) << 6) & 255L));
         out[65 + outPos] = (byte)((int)((in[14 + inPos] & 137438953471L) >>> 2 & 255L));
         out[66 + outPos] = (byte)((int)((in[14 + inPos] & 137438953471L) >>> 10 & 255L));
         out[67 + outPos] = (byte)((int)((in[14 + inPos] & 137438953471L) >>> 18 & 255L));
         out[68 + outPos] = (byte)((int)((in[14 + inPos] & 137438953471L) >>> 26 & 255L));
         out[69 + outPos] = (byte)((int)(((in[14 + inPos] & 137438953471L) >>> 34 | (in[15 + inPos] & 137438953471L) << 3) & 255L));
         out[70 + outPos] = (byte)((int)((in[15 + inPos] & 137438953471L) >>> 5 & 255L));
         out[71 + outPos] = (byte)((int)((in[15 + inPos] & 137438953471L) >>> 13 & 255L));
         out[72 + outPos] = (byte)((int)((in[15 + inPos] & 137438953471L) >>> 21 & 255L));
         out[73 + outPos] = (byte)((int)((in[15 + inPos] & 137438953471L) >>> 29 & 255L));
         out[74 + outPos] = (byte)((int)(in[16 + inPos] & 137438953471L & 255L));
         out[75 + outPos] = (byte)((int)((in[16 + inPos] & 137438953471L) >>> 8 & 255L));
         out[76 + outPos] = (byte)((int)((in[16 + inPos] & 137438953471L) >>> 16 & 255L));
         out[77 + outPos] = (byte)((int)((in[16 + inPos] & 137438953471L) >>> 24 & 255L));
         out[78 + outPos] = (byte)((int)(((in[16 + inPos] & 137438953471L) >>> 32 | (in[17 + inPos] & 137438953471L) << 5) & 255L));
         out[79 + outPos] = (byte)((int)((in[17 + inPos] & 137438953471L) >>> 3 & 255L));
         out[80 + outPos] = (byte)((int)((in[17 + inPos] & 137438953471L) >>> 11 & 255L));
         out[81 + outPos] = (byte)((int)((in[17 + inPos] & 137438953471L) >>> 19 & 255L));
         out[82 + outPos] = (byte)((int)((in[17 + inPos] & 137438953471L) >>> 27 & 255L));
         out[83 + outPos] = (byte)((int)(((in[17 + inPos] & 137438953471L) >>> 35 | (in[18 + inPos] & 137438953471L) << 2) & 255L));
         out[84 + outPos] = (byte)((int)((in[18 + inPos] & 137438953471L) >>> 6 & 255L));
         out[85 + outPos] = (byte)((int)((in[18 + inPos] & 137438953471L) >>> 14 & 255L));
         out[86 + outPos] = (byte)((int)((in[18 + inPos] & 137438953471L) >>> 22 & 255L));
         out[87 + outPos] = (byte)((int)(((in[18 + inPos] & 137438953471L) >>> 30 | (in[19 + inPos] & 137438953471L) << 7) & 255L));
         out[88 + outPos] = (byte)((int)((in[19 + inPos] & 137438953471L) >>> 1 & 255L));
         out[89 + outPos] = (byte)((int)((in[19 + inPos] & 137438953471L) >>> 9 & 255L));
         out[90 + outPos] = (byte)((int)((in[19 + inPos] & 137438953471L) >>> 17 & 255L));
         out[91 + outPos] = (byte)((int)((in[19 + inPos] & 137438953471L) >>> 25 & 255L));
         out[92 + outPos] = (byte)((int)(((in[19 + inPos] & 137438953471L) >>> 33 | (in[20 + inPos] & 137438953471L) << 4) & 255L));
         out[93 + outPos] = (byte)((int)((in[20 + inPos] & 137438953471L) >>> 4 & 255L));
         out[94 + outPos] = (byte)((int)((in[20 + inPos] & 137438953471L) >>> 12 & 255L));
         out[95 + outPos] = (byte)((int)((in[20 + inPos] & 137438953471L) >>> 20 & 255L));
         out[96 + outPos] = (byte)((int)((in[20 + inPos] & 137438953471L) >>> 28 & 255L));
         out[97 + outPos] = (byte)((int)(((in[20 + inPos] & 137438953471L) >>> 36 | (in[21 + inPos] & 137438953471L) << 1) & 255L));
         out[98 + outPos] = (byte)((int)((in[21 + inPos] & 137438953471L) >>> 7 & 255L));
         out[99 + outPos] = (byte)((int)((in[21 + inPos] & 137438953471L) >>> 15 & 255L));
         out[100 + outPos] = (byte)((int)((in[21 + inPos] & 137438953471L) >>> 23 & 255L));
         out[101 + outPos] = (byte)((int)(((in[21 + inPos] & 137438953471L) >>> 31 | (in[22 + inPos] & 137438953471L) << 6) & 255L));
         out[102 + outPos] = (byte)((int)((in[22 + inPos] & 137438953471L) >>> 2 & 255L));
         out[103 + outPos] = (byte)((int)((in[22 + inPos] & 137438953471L) >>> 10 & 255L));
         out[104 + outPos] = (byte)((int)((in[22 + inPos] & 137438953471L) >>> 18 & 255L));
         out[105 + outPos] = (byte)((int)((in[22 + inPos] & 137438953471L) >>> 26 & 255L));
         out[106 + outPos] = (byte)((int)(((in[22 + inPos] & 137438953471L) >>> 34 | (in[23 + inPos] & 137438953471L) << 3) & 255L));
         out[107 + outPos] = (byte)((int)((in[23 + inPos] & 137438953471L) >>> 5 & 255L));
         out[108 + outPos] = (byte)((int)((in[23 + inPos] & 137438953471L) >>> 13 & 255L));
         out[109 + outPos] = (byte)((int)((in[23 + inPos] & 137438953471L) >>> 21 & 255L));
         out[110 + outPos] = (byte)((int)((in[23 + inPos] & 137438953471L) >>> 29 & 255L));
         out[111 + outPos] = (byte)((int)(in[24 + inPos] & 137438953471L & 255L));
         out[112 + outPos] = (byte)((int)((in[24 + inPos] & 137438953471L) >>> 8 & 255L));
         out[113 + outPos] = (byte)((int)((in[24 + inPos] & 137438953471L) >>> 16 & 255L));
         out[114 + outPos] = (byte)((int)((in[24 + inPos] & 137438953471L) >>> 24 & 255L));
         out[115 + outPos] = (byte)((int)(((in[24 + inPos] & 137438953471L) >>> 32 | (in[25 + inPos] & 137438953471L) << 5) & 255L));
         out[116 + outPos] = (byte)((int)((in[25 + inPos] & 137438953471L) >>> 3 & 255L));
         out[117 + outPos] = (byte)((int)((in[25 + inPos] & 137438953471L) >>> 11 & 255L));
         out[118 + outPos] = (byte)((int)((in[25 + inPos] & 137438953471L) >>> 19 & 255L));
         out[119 + outPos] = (byte)((int)((in[25 + inPos] & 137438953471L) >>> 27 & 255L));
         out[120 + outPos] = (byte)((int)(((in[25 + inPos] & 137438953471L) >>> 35 | (in[26 + inPos] & 137438953471L) << 2) & 255L));
         out[121 + outPos] = (byte)((int)((in[26 + inPos] & 137438953471L) >>> 6 & 255L));
         out[122 + outPos] = (byte)((int)((in[26 + inPos] & 137438953471L) >>> 14 & 255L));
         out[123 + outPos] = (byte)((int)((in[26 + inPos] & 137438953471L) >>> 22 & 255L));
         out[124 + outPos] = (byte)((int)(((in[26 + inPos] & 137438953471L) >>> 30 | (in[27 + inPos] & 137438953471L) << 7) & 255L));
         out[125 + outPos] = (byte)((int)((in[27 + inPos] & 137438953471L) >>> 1 & 255L));
         out[126 + outPos] = (byte)((int)((in[27 + inPos] & 137438953471L) >>> 9 & 255L));
         out[127 + outPos] = (byte)((int)((in[27 + inPos] & 137438953471L) >>> 17 & 255L));
         out[128 + outPos] = (byte)((int)((in[27 + inPos] & 137438953471L) >>> 25 & 255L));
         out[129 + outPos] = (byte)((int)(((in[27 + inPos] & 137438953471L) >>> 33 | (in[28 + inPos] & 137438953471L) << 4) & 255L));
         out[130 + outPos] = (byte)((int)((in[28 + inPos] & 137438953471L) >>> 4 & 255L));
         out[131 + outPos] = (byte)((int)((in[28 + inPos] & 137438953471L) >>> 12 & 255L));
         out[132 + outPos] = (byte)((int)((in[28 + inPos] & 137438953471L) >>> 20 & 255L));
         out[133 + outPos] = (byte)((int)((in[28 + inPos] & 137438953471L) >>> 28 & 255L));
         out[134 + outPos] = (byte)((int)(((in[28 + inPos] & 137438953471L) >>> 36 | (in[29 + inPos] & 137438953471L) << 1) & 255L));
         out[135 + outPos] = (byte)((int)((in[29 + inPos] & 137438953471L) >>> 7 & 255L));
         out[136 + outPos] = (byte)((int)((in[29 + inPos] & 137438953471L) >>> 15 & 255L));
         out[137 + outPos] = (byte)((int)((in[29 + inPos] & 137438953471L) >>> 23 & 255L));
         out[138 + outPos] = (byte)((int)(((in[29 + inPos] & 137438953471L) >>> 31 | (in[30 + inPos] & 137438953471L) << 6) & 255L));
         out[139 + outPos] = (byte)((int)((in[30 + inPos] & 137438953471L) >>> 2 & 255L));
         out[140 + outPos] = (byte)((int)((in[30 + inPos] & 137438953471L) >>> 10 & 255L));
         out[141 + outPos] = (byte)((int)((in[30 + inPos] & 137438953471L) >>> 18 & 255L));
         out[142 + outPos] = (byte)((int)((in[30 + inPos] & 137438953471L) >>> 26 & 255L));
         out[143 + outPos] = (byte)((int)(((in[30 + inPos] & 137438953471L) >>> 34 | (in[31 + inPos] & 137438953471L) << 3) & 255L));
         out[144 + outPos] = (byte)((int)((in[31 + inPos] & 137438953471L) >>> 5 & 255L));
         out[145 + outPos] = (byte)((int)((in[31 + inPos] & 137438953471L) >>> 13 & 255L));
         out[146 + outPos] = (byte)((int)((in[31 + inPos] & 137438953471L) >>> 21 & 255L));
         out[147 + outPos] = (byte)((int)((in[31 + inPos] & 137438953471L) >>> 29 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 137438953471L;
         out[1 + outPos] = (long)in[4 + inPos] >> 5 & 7L | (long)in[5 + inPos] << 3 & 2047L | (long)in[6 + inPos] << 11 & 524287L | (long)in[7 + inPos] << 19 & 134217727L | (long)in[8 + inPos] << 27 & 34359738367L | (long)in[9 + inPos] << 35 & 137438953471L;
         out[2 + outPos] = (long)in[9 + inPos] >> 2 & 63L | (long)in[10 + inPos] << 6 & 16383L | (long)in[11 + inPos] << 14 & 4194303L | (long)in[12 + inPos] << 22 & 1073741823L | (long)in[13 + inPos] << 30 & 137438953471L;
         out[3 + outPos] = (long)in[13 + inPos] >> 7 & 1L | (long)in[14 + inPos] << 1 & 511L | (long)in[15 + inPos] << 9 & 131071L | (long)in[16 + inPos] << 17 & 33554431L | (long)in[17 + inPos] << 25 & 8589934591L | (long)in[18 + inPos] << 33 & 137438953471L;
         out[4 + outPos] = (long)in[18 + inPos] >> 4 & 15L | (long)in[19 + inPos] << 4 & 4095L | (long)in[20 + inPos] << 12 & 1048575L | (long)in[21 + inPos] << 20 & 268435455L | (long)in[22 + inPos] << 28 & 68719476735L | (long)in[23 + inPos] << 36 & 137438953471L;
         out[5 + outPos] = (long)in[23 + inPos] >> 1 & 127L | (long)in[24 + inPos] << 7 & 32767L | (long)in[25 + inPos] << 15 & 8388607L | (long)in[26 + inPos] << 23 & 2147483647L | (long)in[27 + inPos] << 31 & 137438953471L;
         out[6 + outPos] = (long)in[27 + inPos] >> 6 & 3L | (long)in[28 + inPos] << 2 & 1023L | (long)in[29 + inPos] << 10 & 262143L | (long)in[30 + inPos] << 18 & 67108863L | (long)in[31 + inPos] << 26 & 17179869183L | (long)in[32 + inPos] << 34 & 137438953471L;
         out[7 + outPos] = (long)in[32 + inPos] >> 3 & 31L | (long)in[33 + inPos] << 5 & 8191L | (long)in[34 + inPos] << 13 & 2097151L | (long)in[35 + inPos] << 21 & 536870911L | (long)in[36 + inPos] << 29 & 137438953471L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 137438953471L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 5 & 7L | (long)in.get(5 + inPos) << 3 & 2047L | (long)in.get(6 + inPos) << 11 & 524287L | (long)in.get(7 + inPos) << 19 & 134217727L | (long)in.get(8 + inPos) << 27 & 34359738367L | (long)in.get(9 + inPos) << 35 & 137438953471L;
         out[2 + outPos] = (long)in.get(9 + inPos) >> 2 & 63L | (long)in.get(10 + inPos) << 6 & 16383L | (long)in.get(11 + inPos) << 14 & 4194303L | (long)in.get(12 + inPos) << 22 & 1073741823L | (long)in.get(13 + inPos) << 30 & 137438953471L;
         out[3 + outPos] = (long)in.get(13 + inPos) >> 7 & 1L | (long)in.get(14 + inPos) << 1 & 511L | (long)in.get(15 + inPos) << 9 & 131071L | (long)in.get(16 + inPos) << 17 & 33554431L | (long)in.get(17 + inPos) << 25 & 8589934591L | (long)in.get(18 + inPos) << 33 & 137438953471L;
         out[4 + outPos] = (long)in.get(18 + inPos) >> 4 & 15L | (long)in.get(19 + inPos) << 4 & 4095L | (long)in.get(20 + inPos) << 12 & 1048575L | (long)in.get(21 + inPos) << 20 & 268435455L | (long)in.get(22 + inPos) << 28 & 68719476735L | (long)in.get(23 + inPos) << 36 & 137438953471L;
         out[5 + outPos] = (long)in.get(23 + inPos) >> 1 & 127L | (long)in.get(24 + inPos) << 7 & 32767L | (long)in.get(25 + inPos) << 15 & 8388607L | (long)in.get(26 + inPos) << 23 & 2147483647L | (long)in.get(27 + inPos) << 31 & 137438953471L;
         out[6 + outPos] = (long)in.get(27 + inPos) >> 6 & 3L | (long)in.get(28 + inPos) << 2 & 1023L | (long)in.get(29 + inPos) << 10 & 262143L | (long)in.get(30 + inPos) << 18 & 67108863L | (long)in.get(31 + inPos) << 26 & 17179869183L | (long)in.get(32 + inPos) << 34 & 137438953471L;
         out[7 + outPos] = (long)in.get(32 + inPos) >> 3 & 31L | (long)in.get(33 + inPos) << 5 & 8191L | (long)in.get(34 + inPos) << 13 & 2097151L | (long)in.get(35 + inPos) << 21 & 536870911L | (long)in.get(36 + inPos) << 29 & 137438953471L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 137438953471L;
         out[1 + outPos] = (long)in[4 + inPos] >> 5 & 7L | (long)in[5 + inPos] << 3 & 2047L | (long)in[6 + inPos] << 11 & 524287L | (long)in[7 + inPos] << 19 & 134217727L | (long)in[8 + inPos] << 27 & 34359738367L | (long)in[9 + inPos] << 35 & 137438953471L;
         out[2 + outPos] = (long)in[9 + inPos] >> 2 & 63L | (long)in[10 + inPos] << 6 & 16383L | (long)in[11 + inPos] << 14 & 4194303L | (long)in[12 + inPos] << 22 & 1073741823L | (long)in[13 + inPos] << 30 & 137438953471L;
         out[3 + outPos] = (long)in[13 + inPos] >> 7 & 1L | (long)in[14 + inPos] << 1 & 511L | (long)in[15 + inPos] << 9 & 131071L | (long)in[16 + inPos] << 17 & 33554431L | (long)in[17 + inPos] << 25 & 8589934591L | (long)in[18 + inPos] << 33 & 137438953471L;
         out[4 + outPos] = (long)in[18 + inPos] >> 4 & 15L | (long)in[19 + inPos] << 4 & 4095L | (long)in[20 + inPos] << 12 & 1048575L | (long)in[21 + inPos] << 20 & 268435455L | (long)in[22 + inPos] << 28 & 68719476735L | (long)in[23 + inPos] << 36 & 137438953471L;
         out[5 + outPos] = (long)in[23 + inPos] >> 1 & 127L | (long)in[24 + inPos] << 7 & 32767L | (long)in[25 + inPos] << 15 & 8388607L | (long)in[26 + inPos] << 23 & 2147483647L | (long)in[27 + inPos] << 31 & 137438953471L;
         out[6 + outPos] = (long)in[27 + inPos] >> 6 & 3L | (long)in[28 + inPos] << 2 & 1023L | (long)in[29 + inPos] << 10 & 262143L | (long)in[30 + inPos] << 18 & 67108863L | (long)in[31 + inPos] << 26 & 17179869183L | (long)in[32 + inPos] << 34 & 137438953471L;
         out[7 + outPos] = (long)in[32 + inPos] >> 3 & 31L | (long)in[33 + inPos] << 5 & 8191L | (long)in[34 + inPos] << 13 & 2097151L | (long)in[35 + inPos] << 21 & 536870911L | (long)in[36 + inPos] << 29 & 137438953471L;
         out[8 + outPos] = (long)in[37 + inPos] & 255L | (long)in[38 + inPos] << 8 & 65535L | (long)in[39 + inPos] << 16 & 16777215L | (long)in[40 + inPos] << 24 & 4294967295L | (long)in[41 + inPos] << 32 & 137438953471L;
         out[9 + outPos] = (long)in[41 + inPos] >> 5 & 7L | (long)in[42 + inPos] << 3 & 2047L | (long)in[43 + inPos] << 11 & 524287L | (long)in[44 + inPos] << 19 & 134217727L | (long)in[45 + inPos] << 27 & 34359738367L | (long)in[46 + inPos] << 35 & 137438953471L;
         out[10 + outPos] = (long)in[46 + inPos] >> 2 & 63L | (long)in[47 + inPos] << 6 & 16383L | (long)in[48 + inPos] << 14 & 4194303L | (long)in[49 + inPos] << 22 & 1073741823L | (long)in[50 + inPos] << 30 & 137438953471L;
         out[11 + outPos] = (long)in[50 + inPos] >> 7 & 1L | (long)in[51 + inPos] << 1 & 511L | (long)in[52 + inPos] << 9 & 131071L | (long)in[53 + inPos] << 17 & 33554431L | (long)in[54 + inPos] << 25 & 8589934591L | (long)in[55 + inPos] << 33 & 137438953471L;
         out[12 + outPos] = (long)in[55 + inPos] >> 4 & 15L | (long)in[56 + inPos] << 4 & 4095L | (long)in[57 + inPos] << 12 & 1048575L | (long)in[58 + inPos] << 20 & 268435455L | (long)in[59 + inPos] << 28 & 68719476735L | (long)in[60 + inPos] << 36 & 137438953471L;
         out[13 + outPos] = (long)in[60 + inPos] >> 1 & 127L | (long)in[61 + inPos] << 7 & 32767L | (long)in[62 + inPos] << 15 & 8388607L | (long)in[63 + inPos] << 23 & 2147483647L | (long)in[64 + inPos] << 31 & 137438953471L;
         out[14 + outPos] = (long)in[64 + inPos] >> 6 & 3L | (long)in[65 + inPos] << 2 & 1023L | (long)in[66 + inPos] << 10 & 262143L | (long)in[67 + inPos] << 18 & 67108863L | (long)in[68 + inPos] << 26 & 17179869183L | (long)in[69 + inPos] << 34 & 137438953471L;
         out[15 + outPos] = (long)in[69 + inPos] >> 3 & 31L | (long)in[70 + inPos] << 5 & 8191L | (long)in[71 + inPos] << 13 & 2097151L | (long)in[72 + inPos] << 21 & 536870911L | (long)in[73 + inPos] << 29 & 137438953471L;
         out[16 + outPos] = (long)in[74 + inPos] & 255L | (long)in[75 + inPos] << 8 & 65535L | (long)in[76 + inPos] << 16 & 16777215L | (long)in[77 + inPos] << 24 & 4294967295L | (long)in[78 + inPos] << 32 & 137438953471L;
         out[17 + outPos] = (long)in[78 + inPos] >> 5 & 7L | (long)in[79 + inPos] << 3 & 2047L | (long)in[80 + inPos] << 11 & 524287L | (long)in[81 + inPos] << 19 & 134217727L | (long)in[82 + inPos] << 27 & 34359738367L | (long)in[83 + inPos] << 35 & 137438953471L;
         out[18 + outPos] = (long)in[83 + inPos] >> 2 & 63L | (long)in[84 + inPos] << 6 & 16383L | (long)in[85 + inPos] << 14 & 4194303L | (long)in[86 + inPos] << 22 & 1073741823L | (long)in[87 + inPos] << 30 & 137438953471L;
         out[19 + outPos] = (long)in[87 + inPos] >> 7 & 1L | (long)in[88 + inPos] << 1 & 511L | (long)in[89 + inPos] << 9 & 131071L | (long)in[90 + inPos] << 17 & 33554431L | (long)in[91 + inPos] << 25 & 8589934591L | (long)in[92 + inPos] << 33 & 137438953471L;
         out[20 + outPos] = (long)in[92 + inPos] >> 4 & 15L | (long)in[93 + inPos] << 4 & 4095L | (long)in[94 + inPos] << 12 & 1048575L | (long)in[95 + inPos] << 20 & 268435455L | (long)in[96 + inPos] << 28 & 68719476735L | (long)in[97 + inPos] << 36 & 137438953471L;
         out[21 + outPos] = (long)in[97 + inPos] >> 1 & 127L | (long)in[98 + inPos] << 7 & 32767L | (long)in[99 + inPos] << 15 & 8388607L | (long)in[100 + inPos] << 23 & 2147483647L | (long)in[101 + inPos] << 31 & 137438953471L;
         out[22 + outPos] = (long)in[101 + inPos] >> 6 & 3L | (long)in[102 + inPos] << 2 & 1023L | (long)in[103 + inPos] << 10 & 262143L | (long)in[104 + inPos] << 18 & 67108863L | (long)in[105 + inPos] << 26 & 17179869183L | (long)in[106 + inPos] << 34 & 137438953471L;
         out[23 + outPos] = (long)in[106 + inPos] >> 3 & 31L | (long)in[107 + inPos] << 5 & 8191L | (long)in[108 + inPos] << 13 & 2097151L | (long)in[109 + inPos] << 21 & 536870911L | (long)in[110 + inPos] << 29 & 137438953471L;
         out[24 + outPos] = (long)in[111 + inPos] & 255L | (long)in[112 + inPos] << 8 & 65535L | (long)in[113 + inPos] << 16 & 16777215L | (long)in[114 + inPos] << 24 & 4294967295L | (long)in[115 + inPos] << 32 & 137438953471L;
         out[25 + outPos] = (long)in[115 + inPos] >> 5 & 7L | (long)in[116 + inPos] << 3 & 2047L | (long)in[117 + inPos] << 11 & 524287L | (long)in[118 + inPos] << 19 & 134217727L | (long)in[119 + inPos] << 27 & 34359738367L | (long)in[120 + inPos] << 35 & 137438953471L;
         out[26 + outPos] = (long)in[120 + inPos] >> 2 & 63L | (long)in[121 + inPos] << 6 & 16383L | (long)in[122 + inPos] << 14 & 4194303L | (long)in[123 + inPos] << 22 & 1073741823L | (long)in[124 + inPos] << 30 & 137438953471L;
         out[27 + outPos] = (long)in[124 + inPos] >> 7 & 1L | (long)in[125 + inPos] << 1 & 511L | (long)in[126 + inPos] << 9 & 131071L | (long)in[127 + inPos] << 17 & 33554431L | (long)in[128 + inPos] << 25 & 8589934591L | (long)in[129 + inPos] << 33 & 137438953471L;
         out[28 + outPos] = (long)in[129 + inPos] >> 4 & 15L | (long)in[130 + inPos] << 4 & 4095L | (long)in[131 + inPos] << 12 & 1048575L | (long)in[132 + inPos] << 20 & 268435455L | (long)in[133 + inPos] << 28 & 68719476735L | (long)in[134 + inPos] << 36 & 137438953471L;
         out[29 + outPos] = (long)in[134 + inPos] >> 1 & 127L | (long)in[135 + inPos] << 7 & 32767L | (long)in[136 + inPos] << 15 & 8388607L | (long)in[137 + inPos] << 23 & 2147483647L | (long)in[138 + inPos] << 31 & 137438953471L;
         out[30 + outPos] = (long)in[138 + inPos] >> 6 & 3L | (long)in[139 + inPos] << 2 & 1023L | (long)in[140 + inPos] << 10 & 262143L | (long)in[141 + inPos] << 18 & 67108863L | (long)in[142 + inPos] << 26 & 17179869183L | (long)in[143 + inPos] << 34 & 137438953471L;
         out[31 + outPos] = (long)in[143 + inPos] >> 3 & 31L | (long)in[144 + inPos] << 5 & 8191L | (long)in[145 + inPos] << 13 & 2097151L | (long)in[146 + inPos] << 21 & 536870911L | (long)in[147 + inPos] << 29 & 137438953471L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 137438953471L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 5 & 7L | (long)in.get(5 + inPos) << 3 & 2047L | (long)in.get(6 + inPos) << 11 & 524287L | (long)in.get(7 + inPos) << 19 & 134217727L | (long)in.get(8 + inPos) << 27 & 34359738367L | (long)in.get(9 + inPos) << 35 & 137438953471L;
         out[2 + outPos] = (long)in.get(9 + inPos) >> 2 & 63L | (long)in.get(10 + inPos) << 6 & 16383L | (long)in.get(11 + inPos) << 14 & 4194303L | (long)in.get(12 + inPos) << 22 & 1073741823L | (long)in.get(13 + inPos) << 30 & 137438953471L;
         out[3 + outPos] = (long)in.get(13 + inPos) >> 7 & 1L | (long)in.get(14 + inPos) << 1 & 511L | (long)in.get(15 + inPos) << 9 & 131071L | (long)in.get(16 + inPos) << 17 & 33554431L | (long)in.get(17 + inPos) << 25 & 8589934591L | (long)in.get(18 + inPos) << 33 & 137438953471L;
         out[4 + outPos] = (long)in.get(18 + inPos) >> 4 & 15L | (long)in.get(19 + inPos) << 4 & 4095L | (long)in.get(20 + inPos) << 12 & 1048575L | (long)in.get(21 + inPos) << 20 & 268435455L | (long)in.get(22 + inPos) << 28 & 68719476735L | (long)in.get(23 + inPos) << 36 & 137438953471L;
         out[5 + outPos] = (long)in.get(23 + inPos) >> 1 & 127L | (long)in.get(24 + inPos) << 7 & 32767L | (long)in.get(25 + inPos) << 15 & 8388607L | (long)in.get(26 + inPos) << 23 & 2147483647L | (long)in.get(27 + inPos) << 31 & 137438953471L;
         out[6 + outPos] = (long)in.get(27 + inPos) >> 6 & 3L | (long)in.get(28 + inPos) << 2 & 1023L | (long)in.get(29 + inPos) << 10 & 262143L | (long)in.get(30 + inPos) << 18 & 67108863L | (long)in.get(31 + inPos) << 26 & 17179869183L | (long)in.get(32 + inPos) << 34 & 137438953471L;
         out[7 + outPos] = (long)in.get(32 + inPos) >> 3 & 31L | (long)in.get(33 + inPos) << 5 & 8191L | (long)in.get(34 + inPos) << 13 & 2097151L | (long)in.get(35 + inPos) << 21 & 536870911L | (long)in.get(36 + inPos) << 29 & 137438953471L;
         out[8 + outPos] = (long)in.get(37 + inPos) & 255L | (long)in.get(38 + inPos) << 8 & 65535L | (long)in.get(39 + inPos) << 16 & 16777215L | (long)in.get(40 + inPos) << 24 & 4294967295L | (long)in.get(41 + inPos) << 32 & 137438953471L;
         out[9 + outPos] = (long)in.get(41 + inPos) >> 5 & 7L | (long)in.get(42 + inPos) << 3 & 2047L | (long)in.get(43 + inPos) << 11 & 524287L | (long)in.get(44 + inPos) << 19 & 134217727L | (long)in.get(45 + inPos) << 27 & 34359738367L | (long)in.get(46 + inPos) << 35 & 137438953471L;
         out[10 + outPos] = (long)in.get(46 + inPos) >> 2 & 63L | (long)in.get(47 + inPos) << 6 & 16383L | (long)in.get(48 + inPos) << 14 & 4194303L | (long)in.get(49 + inPos) << 22 & 1073741823L | (long)in.get(50 + inPos) << 30 & 137438953471L;
         out[11 + outPos] = (long)in.get(50 + inPos) >> 7 & 1L | (long)in.get(51 + inPos) << 1 & 511L | (long)in.get(52 + inPos) << 9 & 131071L | (long)in.get(53 + inPos) << 17 & 33554431L | (long)in.get(54 + inPos) << 25 & 8589934591L | (long)in.get(55 + inPos) << 33 & 137438953471L;
         out[12 + outPos] = (long)in.get(55 + inPos) >> 4 & 15L | (long)in.get(56 + inPos) << 4 & 4095L | (long)in.get(57 + inPos) << 12 & 1048575L | (long)in.get(58 + inPos) << 20 & 268435455L | (long)in.get(59 + inPos) << 28 & 68719476735L | (long)in.get(60 + inPos) << 36 & 137438953471L;
         out[13 + outPos] = (long)in.get(60 + inPos) >> 1 & 127L | (long)in.get(61 + inPos) << 7 & 32767L | (long)in.get(62 + inPos) << 15 & 8388607L | (long)in.get(63 + inPos) << 23 & 2147483647L | (long)in.get(64 + inPos) << 31 & 137438953471L;
         out[14 + outPos] = (long)in.get(64 + inPos) >> 6 & 3L | (long)in.get(65 + inPos) << 2 & 1023L | (long)in.get(66 + inPos) << 10 & 262143L | (long)in.get(67 + inPos) << 18 & 67108863L | (long)in.get(68 + inPos) << 26 & 17179869183L | (long)in.get(69 + inPos) << 34 & 137438953471L;
         out[15 + outPos] = (long)in.get(69 + inPos) >> 3 & 31L | (long)in.get(70 + inPos) << 5 & 8191L | (long)in.get(71 + inPos) << 13 & 2097151L | (long)in.get(72 + inPos) << 21 & 536870911L | (long)in.get(73 + inPos) << 29 & 137438953471L;
         out[16 + outPos] = (long)in.get(74 + inPos) & 255L | (long)in.get(75 + inPos) << 8 & 65535L | (long)in.get(76 + inPos) << 16 & 16777215L | (long)in.get(77 + inPos) << 24 & 4294967295L | (long)in.get(78 + inPos) << 32 & 137438953471L;
         out[17 + outPos] = (long)in.get(78 + inPos) >> 5 & 7L | (long)in.get(79 + inPos) << 3 & 2047L | (long)in.get(80 + inPos) << 11 & 524287L | (long)in.get(81 + inPos) << 19 & 134217727L | (long)in.get(82 + inPos) << 27 & 34359738367L | (long)in.get(83 + inPos) << 35 & 137438953471L;
         out[18 + outPos] = (long)in.get(83 + inPos) >> 2 & 63L | (long)in.get(84 + inPos) << 6 & 16383L | (long)in.get(85 + inPos) << 14 & 4194303L | (long)in.get(86 + inPos) << 22 & 1073741823L | (long)in.get(87 + inPos) << 30 & 137438953471L;
         out[19 + outPos] = (long)in.get(87 + inPos) >> 7 & 1L | (long)in.get(88 + inPos) << 1 & 511L | (long)in.get(89 + inPos) << 9 & 131071L | (long)in.get(90 + inPos) << 17 & 33554431L | (long)in.get(91 + inPos) << 25 & 8589934591L | (long)in.get(92 + inPos) << 33 & 137438953471L;
         out[20 + outPos] = (long)in.get(92 + inPos) >> 4 & 15L | (long)in.get(93 + inPos) << 4 & 4095L | (long)in.get(94 + inPos) << 12 & 1048575L | (long)in.get(95 + inPos) << 20 & 268435455L | (long)in.get(96 + inPos) << 28 & 68719476735L | (long)in.get(97 + inPos) << 36 & 137438953471L;
         out[21 + outPos] = (long)in.get(97 + inPos) >> 1 & 127L | (long)in.get(98 + inPos) << 7 & 32767L | (long)in.get(99 + inPos) << 15 & 8388607L | (long)in.get(100 + inPos) << 23 & 2147483647L | (long)in.get(101 + inPos) << 31 & 137438953471L;
         out[22 + outPos] = (long)in.get(101 + inPos) >> 6 & 3L | (long)in.get(102 + inPos) << 2 & 1023L | (long)in.get(103 + inPos) << 10 & 262143L | (long)in.get(104 + inPos) << 18 & 67108863L | (long)in.get(105 + inPos) << 26 & 17179869183L | (long)in.get(106 + inPos) << 34 & 137438953471L;
         out[23 + outPos] = (long)in.get(106 + inPos) >> 3 & 31L | (long)in.get(107 + inPos) << 5 & 8191L | (long)in.get(108 + inPos) << 13 & 2097151L | (long)in.get(109 + inPos) << 21 & 536870911L | (long)in.get(110 + inPos) << 29 & 137438953471L;
         out[24 + outPos] = (long)in.get(111 + inPos) & 255L | (long)in.get(112 + inPos) << 8 & 65535L | (long)in.get(113 + inPos) << 16 & 16777215L | (long)in.get(114 + inPos) << 24 & 4294967295L | (long)in.get(115 + inPos) << 32 & 137438953471L;
         out[25 + outPos] = (long)in.get(115 + inPos) >> 5 & 7L | (long)in.get(116 + inPos) << 3 & 2047L | (long)in.get(117 + inPos) << 11 & 524287L | (long)in.get(118 + inPos) << 19 & 134217727L | (long)in.get(119 + inPos) << 27 & 34359738367L | (long)in.get(120 + inPos) << 35 & 137438953471L;
         out[26 + outPos] = (long)in.get(120 + inPos) >> 2 & 63L | (long)in.get(121 + inPos) << 6 & 16383L | (long)in.get(122 + inPos) << 14 & 4194303L | (long)in.get(123 + inPos) << 22 & 1073741823L | (long)in.get(124 + inPos) << 30 & 137438953471L;
         out[27 + outPos] = (long)in.get(124 + inPos) >> 7 & 1L | (long)in.get(125 + inPos) << 1 & 511L | (long)in.get(126 + inPos) << 9 & 131071L | (long)in.get(127 + inPos) << 17 & 33554431L | (long)in.get(128 + inPos) << 25 & 8589934591L | (long)in.get(129 + inPos) << 33 & 137438953471L;
         out[28 + outPos] = (long)in.get(129 + inPos) >> 4 & 15L | (long)in.get(130 + inPos) << 4 & 4095L | (long)in.get(131 + inPos) << 12 & 1048575L | (long)in.get(132 + inPos) << 20 & 268435455L | (long)in.get(133 + inPos) << 28 & 68719476735L | (long)in.get(134 + inPos) << 36 & 137438953471L;
         out[29 + outPos] = (long)in.get(134 + inPos) >> 1 & 127L | (long)in.get(135 + inPos) << 7 & 32767L | (long)in.get(136 + inPos) << 15 & 8388607L | (long)in.get(137 + inPos) << 23 & 2147483647L | (long)in.get(138 + inPos) << 31 & 137438953471L;
         out[30 + outPos] = (long)in.get(138 + inPos) >> 6 & 3L | (long)in.get(139 + inPos) << 2 & 1023L | (long)in.get(140 + inPos) << 10 & 262143L | (long)in.get(141 + inPos) << 18 & 67108863L | (long)in.get(142 + inPos) << 26 & 17179869183L | (long)in.get(143 + inPos) << 34 & 137438953471L;
         out[31 + outPos] = (long)in.get(143 + inPos) >> 3 & 31L | (long)in.get(144 + inPos) << 5 & 8191L | (long)in.get(145 + inPos) << 13 & 2097151L | (long)in.get(146 + inPos) << 21 & 536870911L | (long)in.get(147 + inPos) << 29 & 137438953471L;
      }
   }

   private static final class Packer38 extends BytePackerForLong {
      private Packer38() {
         super(38);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 274877906943L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 274877906943L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 274877906943L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 274877906943L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 274877906943L) >>> 32 | (in[1 + inPos] & 274877906943L) << 6) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 274877906943L) >>> 2 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 274877906943L) >>> 10 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 274877906943L) >>> 18 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 274877906943L) >>> 26 & 255L));
         out[9 + outPos] = (byte)((int)(((in[1 + inPos] & 274877906943L) >>> 34 | (in[2 + inPos] & 274877906943L) << 4) & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 274877906943L) >>> 4 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 274877906943L) >>> 12 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 274877906943L) >>> 20 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 274877906943L) >>> 28 & 255L));
         out[14 + outPos] = (byte)((int)(((in[2 + inPos] & 274877906943L) >>> 36 | (in[3 + inPos] & 274877906943L) << 2) & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 274877906943L) >>> 6 & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 274877906943L) >>> 14 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 274877906943L) >>> 22 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 274877906943L) >>> 30 & 255L));
         out[19 + outPos] = (byte)((int)(in[4 + inPos] & 274877906943L & 255L));
         out[20 + outPos] = (byte)((int)((in[4 + inPos] & 274877906943L) >>> 8 & 255L));
         out[21 + outPos] = (byte)((int)((in[4 + inPos] & 274877906943L) >>> 16 & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 274877906943L) >>> 24 & 255L));
         out[23 + outPos] = (byte)((int)(((in[4 + inPos] & 274877906943L) >>> 32 | (in[5 + inPos] & 274877906943L) << 6) & 255L));
         out[24 + outPos] = (byte)((int)((in[5 + inPos] & 274877906943L) >>> 2 & 255L));
         out[25 + outPos] = (byte)((int)((in[5 + inPos] & 274877906943L) >>> 10 & 255L));
         out[26 + outPos] = (byte)((int)((in[5 + inPos] & 274877906943L) >>> 18 & 255L));
         out[27 + outPos] = (byte)((int)((in[5 + inPos] & 274877906943L) >>> 26 & 255L));
         out[28 + outPos] = (byte)((int)(((in[5 + inPos] & 274877906943L) >>> 34 | (in[6 + inPos] & 274877906943L) << 4) & 255L));
         out[29 + outPos] = (byte)((int)((in[6 + inPos] & 274877906943L) >>> 4 & 255L));
         out[30 + outPos] = (byte)((int)((in[6 + inPos] & 274877906943L) >>> 12 & 255L));
         out[31 + outPos] = (byte)((int)((in[6 + inPos] & 274877906943L) >>> 20 & 255L));
         out[32 + outPos] = (byte)((int)((in[6 + inPos] & 274877906943L) >>> 28 & 255L));
         out[33 + outPos] = (byte)((int)(((in[6 + inPos] & 274877906943L) >>> 36 | (in[7 + inPos] & 274877906943L) << 2) & 255L));
         out[34 + outPos] = (byte)((int)((in[7 + inPos] & 274877906943L) >>> 6 & 255L));
         out[35 + outPos] = (byte)((int)((in[7 + inPos] & 274877906943L) >>> 14 & 255L));
         out[36 + outPos] = (byte)((int)((in[7 + inPos] & 274877906943L) >>> 22 & 255L));
         out[37 + outPos] = (byte)((int)((in[7 + inPos] & 274877906943L) >>> 30 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 274877906943L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 274877906943L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 274877906943L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 274877906943L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 274877906943L) >>> 32 | (in[1 + inPos] & 274877906943L) << 6) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 274877906943L) >>> 2 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 274877906943L) >>> 10 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 274877906943L) >>> 18 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 274877906943L) >>> 26 & 255L));
         out[9 + outPos] = (byte)((int)(((in[1 + inPos] & 274877906943L) >>> 34 | (in[2 + inPos] & 274877906943L) << 4) & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 274877906943L) >>> 4 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 274877906943L) >>> 12 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 274877906943L) >>> 20 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 274877906943L) >>> 28 & 255L));
         out[14 + outPos] = (byte)((int)(((in[2 + inPos] & 274877906943L) >>> 36 | (in[3 + inPos] & 274877906943L) << 2) & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 274877906943L) >>> 6 & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 274877906943L) >>> 14 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 274877906943L) >>> 22 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 274877906943L) >>> 30 & 255L));
         out[19 + outPos] = (byte)((int)(in[4 + inPos] & 274877906943L & 255L));
         out[20 + outPos] = (byte)((int)((in[4 + inPos] & 274877906943L) >>> 8 & 255L));
         out[21 + outPos] = (byte)((int)((in[4 + inPos] & 274877906943L) >>> 16 & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 274877906943L) >>> 24 & 255L));
         out[23 + outPos] = (byte)((int)(((in[4 + inPos] & 274877906943L) >>> 32 | (in[5 + inPos] & 274877906943L) << 6) & 255L));
         out[24 + outPos] = (byte)((int)((in[5 + inPos] & 274877906943L) >>> 2 & 255L));
         out[25 + outPos] = (byte)((int)((in[5 + inPos] & 274877906943L) >>> 10 & 255L));
         out[26 + outPos] = (byte)((int)((in[5 + inPos] & 274877906943L) >>> 18 & 255L));
         out[27 + outPos] = (byte)((int)((in[5 + inPos] & 274877906943L) >>> 26 & 255L));
         out[28 + outPos] = (byte)((int)(((in[5 + inPos] & 274877906943L) >>> 34 | (in[6 + inPos] & 274877906943L) << 4) & 255L));
         out[29 + outPos] = (byte)((int)((in[6 + inPos] & 274877906943L) >>> 4 & 255L));
         out[30 + outPos] = (byte)((int)((in[6 + inPos] & 274877906943L) >>> 12 & 255L));
         out[31 + outPos] = (byte)((int)((in[6 + inPos] & 274877906943L) >>> 20 & 255L));
         out[32 + outPos] = (byte)((int)((in[6 + inPos] & 274877906943L) >>> 28 & 255L));
         out[33 + outPos] = (byte)((int)(((in[6 + inPos] & 274877906943L) >>> 36 | (in[7 + inPos] & 274877906943L) << 2) & 255L));
         out[34 + outPos] = (byte)((int)((in[7 + inPos] & 274877906943L) >>> 6 & 255L));
         out[35 + outPos] = (byte)((int)((in[7 + inPos] & 274877906943L) >>> 14 & 255L));
         out[36 + outPos] = (byte)((int)((in[7 + inPos] & 274877906943L) >>> 22 & 255L));
         out[37 + outPos] = (byte)((int)((in[7 + inPos] & 274877906943L) >>> 30 & 255L));
         out[38 + outPos] = (byte)((int)(in[8 + inPos] & 274877906943L & 255L));
         out[39 + outPos] = (byte)((int)((in[8 + inPos] & 274877906943L) >>> 8 & 255L));
         out[40 + outPos] = (byte)((int)((in[8 + inPos] & 274877906943L) >>> 16 & 255L));
         out[41 + outPos] = (byte)((int)((in[8 + inPos] & 274877906943L) >>> 24 & 255L));
         out[42 + outPos] = (byte)((int)(((in[8 + inPos] & 274877906943L) >>> 32 | (in[9 + inPos] & 274877906943L) << 6) & 255L));
         out[43 + outPos] = (byte)((int)((in[9 + inPos] & 274877906943L) >>> 2 & 255L));
         out[44 + outPos] = (byte)((int)((in[9 + inPos] & 274877906943L) >>> 10 & 255L));
         out[45 + outPos] = (byte)((int)((in[9 + inPos] & 274877906943L) >>> 18 & 255L));
         out[46 + outPos] = (byte)((int)((in[9 + inPos] & 274877906943L) >>> 26 & 255L));
         out[47 + outPos] = (byte)((int)(((in[9 + inPos] & 274877906943L) >>> 34 | (in[10 + inPos] & 274877906943L) << 4) & 255L));
         out[48 + outPos] = (byte)((int)((in[10 + inPos] & 274877906943L) >>> 4 & 255L));
         out[49 + outPos] = (byte)((int)((in[10 + inPos] & 274877906943L) >>> 12 & 255L));
         out[50 + outPos] = (byte)((int)((in[10 + inPos] & 274877906943L) >>> 20 & 255L));
         out[51 + outPos] = (byte)((int)((in[10 + inPos] & 274877906943L) >>> 28 & 255L));
         out[52 + outPos] = (byte)((int)(((in[10 + inPos] & 274877906943L) >>> 36 | (in[11 + inPos] & 274877906943L) << 2) & 255L));
         out[53 + outPos] = (byte)((int)((in[11 + inPos] & 274877906943L) >>> 6 & 255L));
         out[54 + outPos] = (byte)((int)((in[11 + inPos] & 274877906943L) >>> 14 & 255L));
         out[55 + outPos] = (byte)((int)((in[11 + inPos] & 274877906943L) >>> 22 & 255L));
         out[56 + outPos] = (byte)((int)((in[11 + inPos] & 274877906943L) >>> 30 & 255L));
         out[57 + outPos] = (byte)((int)(in[12 + inPos] & 274877906943L & 255L));
         out[58 + outPos] = (byte)((int)((in[12 + inPos] & 274877906943L) >>> 8 & 255L));
         out[59 + outPos] = (byte)((int)((in[12 + inPos] & 274877906943L) >>> 16 & 255L));
         out[60 + outPos] = (byte)((int)((in[12 + inPos] & 274877906943L) >>> 24 & 255L));
         out[61 + outPos] = (byte)((int)(((in[12 + inPos] & 274877906943L) >>> 32 | (in[13 + inPos] & 274877906943L) << 6) & 255L));
         out[62 + outPos] = (byte)((int)((in[13 + inPos] & 274877906943L) >>> 2 & 255L));
         out[63 + outPos] = (byte)((int)((in[13 + inPos] & 274877906943L) >>> 10 & 255L));
         out[64 + outPos] = (byte)((int)((in[13 + inPos] & 274877906943L) >>> 18 & 255L));
         out[65 + outPos] = (byte)((int)((in[13 + inPos] & 274877906943L) >>> 26 & 255L));
         out[66 + outPos] = (byte)((int)(((in[13 + inPos] & 274877906943L) >>> 34 | (in[14 + inPos] & 274877906943L) << 4) & 255L));
         out[67 + outPos] = (byte)((int)((in[14 + inPos] & 274877906943L) >>> 4 & 255L));
         out[68 + outPos] = (byte)((int)((in[14 + inPos] & 274877906943L) >>> 12 & 255L));
         out[69 + outPos] = (byte)((int)((in[14 + inPos] & 274877906943L) >>> 20 & 255L));
         out[70 + outPos] = (byte)((int)((in[14 + inPos] & 274877906943L) >>> 28 & 255L));
         out[71 + outPos] = (byte)((int)(((in[14 + inPos] & 274877906943L) >>> 36 | (in[15 + inPos] & 274877906943L) << 2) & 255L));
         out[72 + outPos] = (byte)((int)((in[15 + inPos] & 274877906943L) >>> 6 & 255L));
         out[73 + outPos] = (byte)((int)((in[15 + inPos] & 274877906943L) >>> 14 & 255L));
         out[74 + outPos] = (byte)((int)((in[15 + inPos] & 274877906943L) >>> 22 & 255L));
         out[75 + outPos] = (byte)((int)((in[15 + inPos] & 274877906943L) >>> 30 & 255L));
         out[76 + outPos] = (byte)((int)(in[16 + inPos] & 274877906943L & 255L));
         out[77 + outPos] = (byte)((int)((in[16 + inPos] & 274877906943L) >>> 8 & 255L));
         out[78 + outPos] = (byte)((int)((in[16 + inPos] & 274877906943L) >>> 16 & 255L));
         out[79 + outPos] = (byte)((int)((in[16 + inPos] & 274877906943L) >>> 24 & 255L));
         out[80 + outPos] = (byte)((int)(((in[16 + inPos] & 274877906943L) >>> 32 | (in[17 + inPos] & 274877906943L) << 6) & 255L));
         out[81 + outPos] = (byte)((int)((in[17 + inPos] & 274877906943L) >>> 2 & 255L));
         out[82 + outPos] = (byte)((int)((in[17 + inPos] & 274877906943L) >>> 10 & 255L));
         out[83 + outPos] = (byte)((int)((in[17 + inPos] & 274877906943L) >>> 18 & 255L));
         out[84 + outPos] = (byte)((int)((in[17 + inPos] & 274877906943L) >>> 26 & 255L));
         out[85 + outPos] = (byte)((int)(((in[17 + inPos] & 274877906943L) >>> 34 | (in[18 + inPos] & 274877906943L) << 4) & 255L));
         out[86 + outPos] = (byte)((int)((in[18 + inPos] & 274877906943L) >>> 4 & 255L));
         out[87 + outPos] = (byte)((int)((in[18 + inPos] & 274877906943L) >>> 12 & 255L));
         out[88 + outPos] = (byte)((int)((in[18 + inPos] & 274877906943L) >>> 20 & 255L));
         out[89 + outPos] = (byte)((int)((in[18 + inPos] & 274877906943L) >>> 28 & 255L));
         out[90 + outPos] = (byte)((int)(((in[18 + inPos] & 274877906943L) >>> 36 | (in[19 + inPos] & 274877906943L) << 2) & 255L));
         out[91 + outPos] = (byte)((int)((in[19 + inPos] & 274877906943L) >>> 6 & 255L));
         out[92 + outPos] = (byte)((int)((in[19 + inPos] & 274877906943L) >>> 14 & 255L));
         out[93 + outPos] = (byte)((int)((in[19 + inPos] & 274877906943L) >>> 22 & 255L));
         out[94 + outPos] = (byte)((int)((in[19 + inPos] & 274877906943L) >>> 30 & 255L));
         out[95 + outPos] = (byte)((int)(in[20 + inPos] & 274877906943L & 255L));
         out[96 + outPos] = (byte)((int)((in[20 + inPos] & 274877906943L) >>> 8 & 255L));
         out[97 + outPos] = (byte)((int)((in[20 + inPos] & 274877906943L) >>> 16 & 255L));
         out[98 + outPos] = (byte)((int)((in[20 + inPos] & 274877906943L) >>> 24 & 255L));
         out[99 + outPos] = (byte)((int)(((in[20 + inPos] & 274877906943L) >>> 32 | (in[21 + inPos] & 274877906943L) << 6) & 255L));
         out[100 + outPos] = (byte)((int)((in[21 + inPos] & 274877906943L) >>> 2 & 255L));
         out[101 + outPos] = (byte)((int)((in[21 + inPos] & 274877906943L) >>> 10 & 255L));
         out[102 + outPos] = (byte)((int)((in[21 + inPos] & 274877906943L) >>> 18 & 255L));
         out[103 + outPos] = (byte)((int)((in[21 + inPos] & 274877906943L) >>> 26 & 255L));
         out[104 + outPos] = (byte)((int)(((in[21 + inPos] & 274877906943L) >>> 34 | (in[22 + inPos] & 274877906943L) << 4) & 255L));
         out[105 + outPos] = (byte)((int)((in[22 + inPos] & 274877906943L) >>> 4 & 255L));
         out[106 + outPos] = (byte)((int)((in[22 + inPos] & 274877906943L) >>> 12 & 255L));
         out[107 + outPos] = (byte)((int)((in[22 + inPos] & 274877906943L) >>> 20 & 255L));
         out[108 + outPos] = (byte)((int)((in[22 + inPos] & 274877906943L) >>> 28 & 255L));
         out[109 + outPos] = (byte)((int)(((in[22 + inPos] & 274877906943L) >>> 36 | (in[23 + inPos] & 274877906943L) << 2) & 255L));
         out[110 + outPos] = (byte)((int)((in[23 + inPos] & 274877906943L) >>> 6 & 255L));
         out[111 + outPos] = (byte)((int)((in[23 + inPos] & 274877906943L) >>> 14 & 255L));
         out[112 + outPos] = (byte)((int)((in[23 + inPos] & 274877906943L) >>> 22 & 255L));
         out[113 + outPos] = (byte)((int)((in[23 + inPos] & 274877906943L) >>> 30 & 255L));
         out[114 + outPos] = (byte)((int)(in[24 + inPos] & 274877906943L & 255L));
         out[115 + outPos] = (byte)((int)((in[24 + inPos] & 274877906943L) >>> 8 & 255L));
         out[116 + outPos] = (byte)((int)((in[24 + inPos] & 274877906943L) >>> 16 & 255L));
         out[117 + outPos] = (byte)((int)((in[24 + inPos] & 274877906943L) >>> 24 & 255L));
         out[118 + outPos] = (byte)((int)(((in[24 + inPos] & 274877906943L) >>> 32 | (in[25 + inPos] & 274877906943L) << 6) & 255L));
         out[119 + outPos] = (byte)((int)((in[25 + inPos] & 274877906943L) >>> 2 & 255L));
         out[120 + outPos] = (byte)((int)((in[25 + inPos] & 274877906943L) >>> 10 & 255L));
         out[121 + outPos] = (byte)((int)((in[25 + inPos] & 274877906943L) >>> 18 & 255L));
         out[122 + outPos] = (byte)((int)((in[25 + inPos] & 274877906943L) >>> 26 & 255L));
         out[123 + outPos] = (byte)((int)(((in[25 + inPos] & 274877906943L) >>> 34 | (in[26 + inPos] & 274877906943L) << 4) & 255L));
         out[124 + outPos] = (byte)((int)((in[26 + inPos] & 274877906943L) >>> 4 & 255L));
         out[125 + outPos] = (byte)((int)((in[26 + inPos] & 274877906943L) >>> 12 & 255L));
         out[126 + outPos] = (byte)((int)((in[26 + inPos] & 274877906943L) >>> 20 & 255L));
         out[127 + outPos] = (byte)((int)((in[26 + inPos] & 274877906943L) >>> 28 & 255L));
         out[128 + outPos] = (byte)((int)(((in[26 + inPos] & 274877906943L) >>> 36 | (in[27 + inPos] & 274877906943L) << 2) & 255L));
         out[129 + outPos] = (byte)((int)((in[27 + inPos] & 274877906943L) >>> 6 & 255L));
         out[130 + outPos] = (byte)((int)((in[27 + inPos] & 274877906943L) >>> 14 & 255L));
         out[131 + outPos] = (byte)((int)((in[27 + inPos] & 274877906943L) >>> 22 & 255L));
         out[132 + outPos] = (byte)((int)((in[27 + inPos] & 274877906943L) >>> 30 & 255L));
         out[133 + outPos] = (byte)((int)(in[28 + inPos] & 274877906943L & 255L));
         out[134 + outPos] = (byte)((int)((in[28 + inPos] & 274877906943L) >>> 8 & 255L));
         out[135 + outPos] = (byte)((int)((in[28 + inPos] & 274877906943L) >>> 16 & 255L));
         out[136 + outPos] = (byte)((int)((in[28 + inPos] & 274877906943L) >>> 24 & 255L));
         out[137 + outPos] = (byte)((int)(((in[28 + inPos] & 274877906943L) >>> 32 | (in[29 + inPos] & 274877906943L) << 6) & 255L));
         out[138 + outPos] = (byte)((int)((in[29 + inPos] & 274877906943L) >>> 2 & 255L));
         out[139 + outPos] = (byte)((int)((in[29 + inPos] & 274877906943L) >>> 10 & 255L));
         out[140 + outPos] = (byte)((int)((in[29 + inPos] & 274877906943L) >>> 18 & 255L));
         out[141 + outPos] = (byte)((int)((in[29 + inPos] & 274877906943L) >>> 26 & 255L));
         out[142 + outPos] = (byte)((int)(((in[29 + inPos] & 274877906943L) >>> 34 | (in[30 + inPos] & 274877906943L) << 4) & 255L));
         out[143 + outPos] = (byte)((int)((in[30 + inPos] & 274877906943L) >>> 4 & 255L));
         out[144 + outPos] = (byte)((int)((in[30 + inPos] & 274877906943L) >>> 12 & 255L));
         out[145 + outPos] = (byte)((int)((in[30 + inPos] & 274877906943L) >>> 20 & 255L));
         out[146 + outPos] = (byte)((int)((in[30 + inPos] & 274877906943L) >>> 28 & 255L));
         out[147 + outPos] = (byte)((int)(((in[30 + inPos] & 274877906943L) >>> 36 | (in[31 + inPos] & 274877906943L) << 2) & 255L));
         out[148 + outPos] = (byte)((int)((in[31 + inPos] & 274877906943L) >>> 6 & 255L));
         out[149 + outPos] = (byte)((int)((in[31 + inPos] & 274877906943L) >>> 14 & 255L));
         out[150 + outPos] = (byte)((int)((in[31 + inPos] & 274877906943L) >>> 22 & 255L));
         out[151 + outPos] = (byte)((int)((in[31 + inPos] & 274877906943L) >>> 30 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 274877906943L;
         out[1 + outPos] = (long)in[4 + inPos] >> 6 & 3L | (long)in[5 + inPos] << 2 & 1023L | (long)in[6 + inPos] << 10 & 262143L | (long)in[7 + inPos] << 18 & 67108863L | (long)in[8 + inPos] << 26 & 17179869183L | (long)in[9 + inPos] << 34 & 274877906943L;
         out[2 + outPos] = (long)in[9 + inPos] >> 4 & 15L | (long)in[10 + inPos] << 4 & 4095L | (long)in[11 + inPos] << 12 & 1048575L | (long)in[12 + inPos] << 20 & 268435455L | (long)in[13 + inPos] << 28 & 68719476735L | (long)in[14 + inPos] << 36 & 274877906943L;
         out[3 + outPos] = (long)in[14 + inPos] >> 2 & 63L | (long)in[15 + inPos] << 6 & 16383L | (long)in[16 + inPos] << 14 & 4194303L | (long)in[17 + inPos] << 22 & 1073741823L | (long)in[18 + inPos] << 30 & 274877906943L;
         out[4 + outPos] = (long)in[19 + inPos] & 255L | (long)in[20 + inPos] << 8 & 65535L | (long)in[21 + inPos] << 16 & 16777215L | (long)in[22 + inPos] << 24 & 4294967295L | (long)in[23 + inPos] << 32 & 274877906943L;
         out[5 + outPos] = (long)in[23 + inPos] >> 6 & 3L | (long)in[24 + inPos] << 2 & 1023L | (long)in[25 + inPos] << 10 & 262143L | (long)in[26 + inPos] << 18 & 67108863L | (long)in[27 + inPos] << 26 & 17179869183L | (long)in[28 + inPos] << 34 & 274877906943L;
         out[6 + outPos] = (long)in[28 + inPos] >> 4 & 15L | (long)in[29 + inPos] << 4 & 4095L | (long)in[30 + inPos] << 12 & 1048575L | (long)in[31 + inPos] << 20 & 268435455L | (long)in[32 + inPos] << 28 & 68719476735L | (long)in[33 + inPos] << 36 & 274877906943L;
         out[7 + outPos] = (long)in[33 + inPos] >> 2 & 63L | (long)in[34 + inPos] << 6 & 16383L | (long)in[35 + inPos] << 14 & 4194303L | (long)in[36 + inPos] << 22 & 1073741823L | (long)in[37 + inPos] << 30 & 274877906943L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 274877906943L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 6 & 3L | (long)in.get(5 + inPos) << 2 & 1023L | (long)in.get(6 + inPos) << 10 & 262143L | (long)in.get(7 + inPos) << 18 & 67108863L | (long)in.get(8 + inPos) << 26 & 17179869183L | (long)in.get(9 + inPos) << 34 & 274877906943L;
         out[2 + outPos] = (long)in.get(9 + inPos) >> 4 & 15L | (long)in.get(10 + inPos) << 4 & 4095L | (long)in.get(11 + inPos) << 12 & 1048575L | (long)in.get(12 + inPos) << 20 & 268435455L | (long)in.get(13 + inPos) << 28 & 68719476735L | (long)in.get(14 + inPos) << 36 & 274877906943L;
         out[3 + outPos] = (long)in.get(14 + inPos) >> 2 & 63L | (long)in.get(15 + inPos) << 6 & 16383L | (long)in.get(16 + inPos) << 14 & 4194303L | (long)in.get(17 + inPos) << 22 & 1073741823L | (long)in.get(18 + inPos) << 30 & 274877906943L;
         out[4 + outPos] = (long)in.get(19 + inPos) & 255L | (long)in.get(20 + inPos) << 8 & 65535L | (long)in.get(21 + inPos) << 16 & 16777215L | (long)in.get(22 + inPos) << 24 & 4294967295L | (long)in.get(23 + inPos) << 32 & 274877906943L;
         out[5 + outPos] = (long)in.get(23 + inPos) >> 6 & 3L | (long)in.get(24 + inPos) << 2 & 1023L | (long)in.get(25 + inPos) << 10 & 262143L | (long)in.get(26 + inPos) << 18 & 67108863L | (long)in.get(27 + inPos) << 26 & 17179869183L | (long)in.get(28 + inPos) << 34 & 274877906943L;
         out[6 + outPos] = (long)in.get(28 + inPos) >> 4 & 15L | (long)in.get(29 + inPos) << 4 & 4095L | (long)in.get(30 + inPos) << 12 & 1048575L | (long)in.get(31 + inPos) << 20 & 268435455L | (long)in.get(32 + inPos) << 28 & 68719476735L | (long)in.get(33 + inPos) << 36 & 274877906943L;
         out[7 + outPos] = (long)in.get(33 + inPos) >> 2 & 63L | (long)in.get(34 + inPos) << 6 & 16383L | (long)in.get(35 + inPos) << 14 & 4194303L | (long)in.get(36 + inPos) << 22 & 1073741823L | (long)in.get(37 + inPos) << 30 & 274877906943L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 274877906943L;
         out[1 + outPos] = (long)in[4 + inPos] >> 6 & 3L | (long)in[5 + inPos] << 2 & 1023L | (long)in[6 + inPos] << 10 & 262143L | (long)in[7 + inPos] << 18 & 67108863L | (long)in[8 + inPos] << 26 & 17179869183L | (long)in[9 + inPos] << 34 & 274877906943L;
         out[2 + outPos] = (long)in[9 + inPos] >> 4 & 15L | (long)in[10 + inPos] << 4 & 4095L | (long)in[11 + inPos] << 12 & 1048575L | (long)in[12 + inPos] << 20 & 268435455L | (long)in[13 + inPos] << 28 & 68719476735L | (long)in[14 + inPos] << 36 & 274877906943L;
         out[3 + outPos] = (long)in[14 + inPos] >> 2 & 63L | (long)in[15 + inPos] << 6 & 16383L | (long)in[16 + inPos] << 14 & 4194303L | (long)in[17 + inPos] << 22 & 1073741823L | (long)in[18 + inPos] << 30 & 274877906943L;
         out[4 + outPos] = (long)in[19 + inPos] & 255L | (long)in[20 + inPos] << 8 & 65535L | (long)in[21 + inPos] << 16 & 16777215L | (long)in[22 + inPos] << 24 & 4294967295L | (long)in[23 + inPos] << 32 & 274877906943L;
         out[5 + outPos] = (long)in[23 + inPos] >> 6 & 3L | (long)in[24 + inPos] << 2 & 1023L | (long)in[25 + inPos] << 10 & 262143L | (long)in[26 + inPos] << 18 & 67108863L | (long)in[27 + inPos] << 26 & 17179869183L | (long)in[28 + inPos] << 34 & 274877906943L;
         out[6 + outPos] = (long)in[28 + inPos] >> 4 & 15L | (long)in[29 + inPos] << 4 & 4095L | (long)in[30 + inPos] << 12 & 1048575L | (long)in[31 + inPos] << 20 & 268435455L | (long)in[32 + inPos] << 28 & 68719476735L | (long)in[33 + inPos] << 36 & 274877906943L;
         out[7 + outPos] = (long)in[33 + inPos] >> 2 & 63L | (long)in[34 + inPos] << 6 & 16383L | (long)in[35 + inPos] << 14 & 4194303L | (long)in[36 + inPos] << 22 & 1073741823L | (long)in[37 + inPos] << 30 & 274877906943L;
         out[8 + outPos] = (long)in[38 + inPos] & 255L | (long)in[39 + inPos] << 8 & 65535L | (long)in[40 + inPos] << 16 & 16777215L | (long)in[41 + inPos] << 24 & 4294967295L | (long)in[42 + inPos] << 32 & 274877906943L;
         out[9 + outPos] = (long)in[42 + inPos] >> 6 & 3L | (long)in[43 + inPos] << 2 & 1023L | (long)in[44 + inPos] << 10 & 262143L | (long)in[45 + inPos] << 18 & 67108863L | (long)in[46 + inPos] << 26 & 17179869183L | (long)in[47 + inPos] << 34 & 274877906943L;
         out[10 + outPos] = (long)in[47 + inPos] >> 4 & 15L | (long)in[48 + inPos] << 4 & 4095L | (long)in[49 + inPos] << 12 & 1048575L | (long)in[50 + inPos] << 20 & 268435455L | (long)in[51 + inPos] << 28 & 68719476735L | (long)in[52 + inPos] << 36 & 274877906943L;
         out[11 + outPos] = (long)in[52 + inPos] >> 2 & 63L | (long)in[53 + inPos] << 6 & 16383L | (long)in[54 + inPos] << 14 & 4194303L | (long)in[55 + inPos] << 22 & 1073741823L | (long)in[56 + inPos] << 30 & 274877906943L;
         out[12 + outPos] = (long)in[57 + inPos] & 255L | (long)in[58 + inPos] << 8 & 65535L | (long)in[59 + inPos] << 16 & 16777215L | (long)in[60 + inPos] << 24 & 4294967295L | (long)in[61 + inPos] << 32 & 274877906943L;
         out[13 + outPos] = (long)in[61 + inPos] >> 6 & 3L | (long)in[62 + inPos] << 2 & 1023L | (long)in[63 + inPos] << 10 & 262143L | (long)in[64 + inPos] << 18 & 67108863L | (long)in[65 + inPos] << 26 & 17179869183L | (long)in[66 + inPos] << 34 & 274877906943L;
         out[14 + outPos] = (long)in[66 + inPos] >> 4 & 15L | (long)in[67 + inPos] << 4 & 4095L | (long)in[68 + inPos] << 12 & 1048575L | (long)in[69 + inPos] << 20 & 268435455L | (long)in[70 + inPos] << 28 & 68719476735L | (long)in[71 + inPos] << 36 & 274877906943L;
         out[15 + outPos] = (long)in[71 + inPos] >> 2 & 63L | (long)in[72 + inPos] << 6 & 16383L | (long)in[73 + inPos] << 14 & 4194303L | (long)in[74 + inPos] << 22 & 1073741823L | (long)in[75 + inPos] << 30 & 274877906943L;
         out[16 + outPos] = (long)in[76 + inPos] & 255L | (long)in[77 + inPos] << 8 & 65535L | (long)in[78 + inPos] << 16 & 16777215L | (long)in[79 + inPos] << 24 & 4294967295L | (long)in[80 + inPos] << 32 & 274877906943L;
         out[17 + outPos] = (long)in[80 + inPos] >> 6 & 3L | (long)in[81 + inPos] << 2 & 1023L | (long)in[82 + inPos] << 10 & 262143L | (long)in[83 + inPos] << 18 & 67108863L | (long)in[84 + inPos] << 26 & 17179869183L | (long)in[85 + inPos] << 34 & 274877906943L;
         out[18 + outPos] = (long)in[85 + inPos] >> 4 & 15L | (long)in[86 + inPos] << 4 & 4095L | (long)in[87 + inPos] << 12 & 1048575L | (long)in[88 + inPos] << 20 & 268435455L | (long)in[89 + inPos] << 28 & 68719476735L | (long)in[90 + inPos] << 36 & 274877906943L;
         out[19 + outPos] = (long)in[90 + inPos] >> 2 & 63L | (long)in[91 + inPos] << 6 & 16383L | (long)in[92 + inPos] << 14 & 4194303L | (long)in[93 + inPos] << 22 & 1073741823L | (long)in[94 + inPos] << 30 & 274877906943L;
         out[20 + outPos] = (long)in[95 + inPos] & 255L | (long)in[96 + inPos] << 8 & 65535L | (long)in[97 + inPos] << 16 & 16777215L | (long)in[98 + inPos] << 24 & 4294967295L | (long)in[99 + inPos] << 32 & 274877906943L;
         out[21 + outPos] = (long)in[99 + inPos] >> 6 & 3L | (long)in[100 + inPos] << 2 & 1023L | (long)in[101 + inPos] << 10 & 262143L | (long)in[102 + inPos] << 18 & 67108863L | (long)in[103 + inPos] << 26 & 17179869183L | (long)in[104 + inPos] << 34 & 274877906943L;
         out[22 + outPos] = (long)in[104 + inPos] >> 4 & 15L | (long)in[105 + inPos] << 4 & 4095L | (long)in[106 + inPos] << 12 & 1048575L | (long)in[107 + inPos] << 20 & 268435455L | (long)in[108 + inPos] << 28 & 68719476735L | (long)in[109 + inPos] << 36 & 274877906943L;
         out[23 + outPos] = (long)in[109 + inPos] >> 2 & 63L | (long)in[110 + inPos] << 6 & 16383L | (long)in[111 + inPos] << 14 & 4194303L | (long)in[112 + inPos] << 22 & 1073741823L | (long)in[113 + inPos] << 30 & 274877906943L;
         out[24 + outPos] = (long)in[114 + inPos] & 255L | (long)in[115 + inPos] << 8 & 65535L | (long)in[116 + inPos] << 16 & 16777215L | (long)in[117 + inPos] << 24 & 4294967295L | (long)in[118 + inPos] << 32 & 274877906943L;
         out[25 + outPos] = (long)in[118 + inPos] >> 6 & 3L | (long)in[119 + inPos] << 2 & 1023L | (long)in[120 + inPos] << 10 & 262143L | (long)in[121 + inPos] << 18 & 67108863L | (long)in[122 + inPos] << 26 & 17179869183L | (long)in[123 + inPos] << 34 & 274877906943L;
         out[26 + outPos] = (long)in[123 + inPos] >> 4 & 15L | (long)in[124 + inPos] << 4 & 4095L | (long)in[125 + inPos] << 12 & 1048575L | (long)in[126 + inPos] << 20 & 268435455L | (long)in[127 + inPos] << 28 & 68719476735L | (long)in[128 + inPos] << 36 & 274877906943L;
         out[27 + outPos] = (long)in[128 + inPos] >> 2 & 63L | (long)in[129 + inPos] << 6 & 16383L | (long)in[130 + inPos] << 14 & 4194303L | (long)in[131 + inPos] << 22 & 1073741823L | (long)in[132 + inPos] << 30 & 274877906943L;
         out[28 + outPos] = (long)in[133 + inPos] & 255L | (long)in[134 + inPos] << 8 & 65535L | (long)in[135 + inPos] << 16 & 16777215L | (long)in[136 + inPos] << 24 & 4294967295L | (long)in[137 + inPos] << 32 & 274877906943L;
         out[29 + outPos] = (long)in[137 + inPos] >> 6 & 3L | (long)in[138 + inPos] << 2 & 1023L | (long)in[139 + inPos] << 10 & 262143L | (long)in[140 + inPos] << 18 & 67108863L | (long)in[141 + inPos] << 26 & 17179869183L | (long)in[142 + inPos] << 34 & 274877906943L;
         out[30 + outPos] = (long)in[142 + inPos] >> 4 & 15L | (long)in[143 + inPos] << 4 & 4095L | (long)in[144 + inPos] << 12 & 1048575L | (long)in[145 + inPos] << 20 & 268435455L | (long)in[146 + inPos] << 28 & 68719476735L | (long)in[147 + inPos] << 36 & 274877906943L;
         out[31 + outPos] = (long)in[147 + inPos] >> 2 & 63L | (long)in[148 + inPos] << 6 & 16383L | (long)in[149 + inPos] << 14 & 4194303L | (long)in[150 + inPos] << 22 & 1073741823L | (long)in[151 + inPos] << 30 & 274877906943L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 274877906943L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 6 & 3L | (long)in.get(5 + inPos) << 2 & 1023L | (long)in.get(6 + inPos) << 10 & 262143L | (long)in.get(7 + inPos) << 18 & 67108863L | (long)in.get(8 + inPos) << 26 & 17179869183L | (long)in.get(9 + inPos) << 34 & 274877906943L;
         out[2 + outPos] = (long)in.get(9 + inPos) >> 4 & 15L | (long)in.get(10 + inPos) << 4 & 4095L | (long)in.get(11 + inPos) << 12 & 1048575L | (long)in.get(12 + inPos) << 20 & 268435455L | (long)in.get(13 + inPos) << 28 & 68719476735L | (long)in.get(14 + inPos) << 36 & 274877906943L;
         out[3 + outPos] = (long)in.get(14 + inPos) >> 2 & 63L | (long)in.get(15 + inPos) << 6 & 16383L | (long)in.get(16 + inPos) << 14 & 4194303L | (long)in.get(17 + inPos) << 22 & 1073741823L | (long)in.get(18 + inPos) << 30 & 274877906943L;
         out[4 + outPos] = (long)in.get(19 + inPos) & 255L | (long)in.get(20 + inPos) << 8 & 65535L | (long)in.get(21 + inPos) << 16 & 16777215L | (long)in.get(22 + inPos) << 24 & 4294967295L | (long)in.get(23 + inPos) << 32 & 274877906943L;
         out[5 + outPos] = (long)in.get(23 + inPos) >> 6 & 3L | (long)in.get(24 + inPos) << 2 & 1023L | (long)in.get(25 + inPos) << 10 & 262143L | (long)in.get(26 + inPos) << 18 & 67108863L | (long)in.get(27 + inPos) << 26 & 17179869183L | (long)in.get(28 + inPos) << 34 & 274877906943L;
         out[6 + outPos] = (long)in.get(28 + inPos) >> 4 & 15L | (long)in.get(29 + inPos) << 4 & 4095L | (long)in.get(30 + inPos) << 12 & 1048575L | (long)in.get(31 + inPos) << 20 & 268435455L | (long)in.get(32 + inPos) << 28 & 68719476735L | (long)in.get(33 + inPos) << 36 & 274877906943L;
         out[7 + outPos] = (long)in.get(33 + inPos) >> 2 & 63L | (long)in.get(34 + inPos) << 6 & 16383L | (long)in.get(35 + inPos) << 14 & 4194303L | (long)in.get(36 + inPos) << 22 & 1073741823L | (long)in.get(37 + inPos) << 30 & 274877906943L;
         out[8 + outPos] = (long)in.get(38 + inPos) & 255L | (long)in.get(39 + inPos) << 8 & 65535L | (long)in.get(40 + inPos) << 16 & 16777215L | (long)in.get(41 + inPos) << 24 & 4294967295L | (long)in.get(42 + inPos) << 32 & 274877906943L;
         out[9 + outPos] = (long)in.get(42 + inPos) >> 6 & 3L | (long)in.get(43 + inPos) << 2 & 1023L | (long)in.get(44 + inPos) << 10 & 262143L | (long)in.get(45 + inPos) << 18 & 67108863L | (long)in.get(46 + inPos) << 26 & 17179869183L | (long)in.get(47 + inPos) << 34 & 274877906943L;
         out[10 + outPos] = (long)in.get(47 + inPos) >> 4 & 15L | (long)in.get(48 + inPos) << 4 & 4095L | (long)in.get(49 + inPos) << 12 & 1048575L | (long)in.get(50 + inPos) << 20 & 268435455L | (long)in.get(51 + inPos) << 28 & 68719476735L | (long)in.get(52 + inPos) << 36 & 274877906943L;
         out[11 + outPos] = (long)in.get(52 + inPos) >> 2 & 63L | (long)in.get(53 + inPos) << 6 & 16383L | (long)in.get(54 + inPos) << 14 & 4194303L | (long)in.get(55 + inPos) << 22 & 1073741823L | (long)in.get(56 + inPos) << 30 & 274877906943L;
         out[12 + outPos] = (long)in.get(57 + inPos) & 255L | (long)in.get(58 + inPos) << 8 & 65535L | (long)in.get(59 + inPos) << 16 & 16777215L | (long)in.get(60 + inPos) << 24 & 4294967295L | (long)in.get(61 + inPos) << 32 & 274877906943L;
         out[13 + outPos] = (long)in.get(61 + inPos) >> 6 & 3L | (long)in.get(62 + inPos) << 2 & 1023L | (long)in.get(63 + inPos) << 10 & 262143L | (long)in.get(64 + inPos) << 18 & 67108863L | (long)in.get(65 + inPos) << 26 & 17179869183L | (long)in.get(66 + inPos) << 34 & 274877906943L;
         out[14 + outPos] = (long)in.get(66 + inPos) >> 4 & 15L | (long)in.get(67 + inPos) << 4 & 4095L | (long)in.get(68 + inPos) << 12 & 1048575L | (long)in.get(69 + inPos) << 20 & 268435455L | (long)in.get(70 + inPos) << 28 & 68719476735L | (long)in.get(71 + inPos) << 36 & 274877906943L;
         out[15 + outPos] = (long)in.get(71 + inPos) >> 2 & 63L | (long)in.get(72 + inPos) << 6 & 16383L | (long)in.get(73 + inPos) << 14 & 4194303L | (long)in.get(74 + inPos) << 22 & 1073741823L | (long)in.get(75 + inPos) << 30 & 274877906943L;
         out[16 + outPos] = (long)in.get(76 + inPos) & 255L | (long)in.get(77 + inPos) << 8 & 65535L | (long)in.get(78 + inPos) << 16 & 16777215L | (long)in.get(79 + inPos) << 24 & 4294967295L | (long)in.get(80 + inPos) << 32 & 274877906943L;
         out[17 + outPos] = (long)in.get(80 + inPos) >> 6 & 3L | (long)in.get(81 + inPos) << 2 & 1023L | (long)in.get(82 + inPos) << 10 & 262143L | (long)in.get(83 + inPos) << 18 & 67108863L | (long)in.get(84 + inPos) << 26 & 17179869183L | (long)in.get(85 + inPos) << 34 & 274877906943L;
         out[18 + outPos] = (long)in.get(85 + inPos) >> 4 & 15L | (long)in.get(86 + inPos) << 4 & 4095L | (long)in.get(87 + inPos) << 12 & 1048575L | (long)in.get(88 + inPos) << 20 & 268435455L | (long)in.get(89 + inPos) << 28 & 68719476735L | (long)in.get(90 + inPos) << 36 & 274877906943L;
         out[19 + outPos] = (long)in.get(90 + inPos) >> 2 & 63L | (long)in.get(91 + inPos) << 6 & 16383L | (long)in.get(92 + inPos) << 14 & 4194303L | (long)in.get(93 + inPos) << 22 & 1073741823L | (long)in.get(94 + inPos) << 30 & 274877906943L;
         out[20 + outPos] = (long)in.get(95 + inPos) & 255L | (long)in.get(96 + inPos) << 8 & 65535L | (long)in.get(97 + inPos) << 16 & 16777215L | (long)in.get(98 + inPos) << 24 & 4294967295L | (long)in.get(99 + inPos) << 32 & 274877906943L;
         out[21 + outPos] = (long)in.get(99 + inPos) >> 6 & 3L | (long)in.get(100 + inPos) << 2 & 1023L | (long)in.get(101 + inPos) << 10 & 262143L | (long)in.get(102 + inPos) << 18 & 67108863L | (long)in.get(103 + inPos) << 26 & 17179869183L | (long)in.get(104 + inPos) << 34 & 274877906943L;
         out[22 + outPos] = (long)in.get(104 + inPos) >> 4 & 15L | (long)in.get(105 + inPos) << 4 & 4095L | (long)in.get(106 + inPos) << 12 & 1048575L | (long)in.get(107 + inPos) << 20 & 268435455L | (long)in.get(108 + inPos) << 28 & 68719476735L | (long)in.get(109 + inPos) << 36 & 274877906943L;
         out[23 + outPos] = (long)in.get(109 + inPos) >> 2 & 63L | (long)in.get(110 + inPos) << 6 & 16383L | (long)in.get(111 + inPos) << 14 & 4194303L | (long)in.get(112 + inPos) << 22 & 1073741823L | (long)in.get(113 + inPos) << 30 & 274877906943L;
         out[24 + outPos] = (long)in.get(114 + inPos) & 255L | (long)in.get(115 + inPos) << 8 & 65535L | (long)in.get(116 + inPos) << 16 & 16777215L | (long)in.get(117 + inPos) << 24 & 4294967295L | (long)in.get(118 + inPos) << 32 & 274877906943L;
         out[25 + outPos] = (long)in.get(118 + inPos) >> 6 & 3L | (long)in.get(119 + inPos) << 2 & 1023L | (long)in.get(120 + inPos) << 10 & 262143L | (long)in.get(121 + inPos) << 18 & 67108863L | (long)in.get(122 + inPos) << 26 & 17179869183L | (long)in.get(123 + inPos) << 34 & 274877906943L;
         out[26 + outPos] = (long)in.get(123 + inPos) >> 4 & 15L | (long)in.get(124 + inPos) << 4 & 4095L | (long)in.get(125 + inPos) << 12 & 1048575L | (long)in.get(126 + inPos) << 20 & 268435455L | (long)in.get(127 + inPos) << 28 & 68719476735L | (long)in.get(128 + inPos) << 36 & 274877906943L;
         out[27 + outPos] = (long)in.get(128 + inPos) >> 2 & 63L | (long)in.get(129 + inPos) << 6 & 16383L | (long)in.get(130 + inPos) << 14 & 4194303L | (long)in.get(131 + inPos) << 22 & 1073741823L | (long)in.get(132 + inPos) << 30 & 274877906943L;
         out[28 + outPos] = (long)in.get(133 + inPos) & 255L | (long)in.get(134 + inPos) << 8 & 65535L | (long)in.get(135 + inPos) << 16 & 16777215L | (long)in.get(136 + inPos) << 24 & 4294967295L | (long)in.get(137 + inPos) << 32 & 274877906943L;
         out[29 + outPos] = (long)in.get(137 + inPos) >> 6 & 3L | (long)in.get(138 + inPos) << 2 & 1023L | (long)in.get(139 + inPos) << 10 & 262143L | (long)in.get(140 + inPos) << 18 & 67108863L | (long)in.get(141 + inPos) << 26 & 17179869183L | (long)in.get(142 + inPos) << 34 & 274877906943L;
         out[30 + outPos] = (long)in.get(142 + inPos) >> 4 & 15L | (long)in.get(143 + inPos) << 4 & 4095L | (long)in.get(144 + inPos) << 12 & 1048575L | (long)in.get(145 + inPos) << 20 & 268435455L | (long)in.get(146 + inPos) << 28 & 68719476735L | (long)in.get(147 + inPos) << 36 & 274877906943L;
         out[31 + outPos] = (long)in.get(147 + inPos) >> 2 & 63L | (long)in.get(148 + inPos) << 6 & 16383L | (long)in.get(149 + inPos) << 14 & 4194303L | (long)in.get(150 + inPos) << 22 & 1073741823L | (long)in.get(151 + inPos) << 30 & 274877906943L;
      }
   }

   private static final class Packer39 extends BytePackerForLong {
      private Packer39() {
         super(39);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 549755813887L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 549755813887L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 549755813887L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 549755813887L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 549755813887L) >>> 32 | (in[1 + inPos] & 549755813887L) << 7) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 549755813887L) >>> 1 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 549755813887L) >>> 9 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 549755813887L) >>> 17 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 549755813887L) >>> 25 & 255L));
         out[9 + outPos] = (byte)((int)(((in[1 + inPos] & 549755813887L) >>> 33 | (in[2 + inPos] & 549755813887L) << 6) & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 549755813887L) >>> 2 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 549755813887L) >>> 10 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 549755813887L) >>> 18 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 549755813887L) >>> 26 & 255L));
         out[14 + outPos] = (byte)((int)(((in[2 + inPos] & 549755813887L) >>> 34 | (in[3 + inPos] & 549755813887L) << 5) & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 549755813887L) >>> 3 & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 549755813887L) >>> 11 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 549755813887L) >>> 19 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 549755813887L) >>> 27 & 255L));
         out[19 + outPos] = (byte)((int)(((in[3 + inPos] & 549755813887L) >>> 35 | (in[4 + inPos] & 549755813887L) << 4) & 255L));
         out[20 + outPos] = (byte)((int)((in[4 + inPos] & 549755813887L) >>> 4 & 255L));
         out[21 + outPos] = (byte)((int)((in[4 + inPos] & 549755813887L) >>> 12 & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 549755813887L) >>> 20 & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 549755813887L) >>> 28 & 255L));
         out[24 + outPos] = (byte)((int)(((in[4 + inPos] & 549755813887L) >>> 36 | (in[5 + inPos] & 549755813887L) << 3) & 255L));
         out[25 + outPos] = (byte)((int)((in[5 + inPos] & 549755813887L) >>> 5 & 255L));
         out[26 + outPos] = (byte)((int)((in[5 + inPos] & 549755813887L) >>> 13 & 255L));
         out[27 + outPos] = (byte)((int)((in[5 + inPos] & 549755813887L) >>> 21 & 255L));
         out[28 + outPos] = (byte)((int)((in[5 + inPos] & 549755813887L) >>> 29 & 255L));
         out[29 + outPos] = (byte)((int)(((in[5 + inPos] & 549755813887L) >>> 37 | (in[6 + inPos] & 549755813887L) << 2) & 255L));
         out[30 + outPos] = (byte)((int)((in[6 + inPos] & 549755813887L) >>> 6 & 255L));
         out[31 + outPos] = (byte)((int)((in[6 + inPos] & 549755813887L) >>> 14 & 255L));
         out[32 + outPos] = (byte)((int)((in[6 + inPos] & 549755813887L) >>> 22 & 255L));
         out[33 + outPos] = (byte)((int)((in[6 + inPos] & 549755813887L) >>> 30 & 255L));
         out[34 + outPos] = (byte)((int)(((in[6 + inPos] & 549755813887L) >>> 38 | (in[7 + inPos] & 549755813887L) << 1) & 255L));
         out[35 + outPos] = (byte)((int)((in[7 + inPos] & 549755813887L) >>> 7 & 255L));
         out[36 + outPos] = (byte)((int)((in[7 + inPos] & 549755813887L) >>> 15 & 255L));
         out[37 + outPos] = (byte)((int)((in[7 + inPos] & 549755813887L) >>> 23 & 255L));
         out[38 + outPos] = (byte)((int)((in[7 + inPos] & 549755813887L) >>> 31 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 549755813887L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 549755813887L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 549755813887L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 549755813887L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)(((in[0 + inPos] & 549755813887L) >>> 32 | (in[1 + inPos] & 549755813887L) << 7) & 255L));
         out[5 + outPos] = (byte)((int)((in[1 + inPos] & 549755813887L) >>> 1 & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 549755813887L) >>> 9 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 549755813887L) >>> 17 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 549755813887L) >>> 25 & 255L));
         out[9 + outPos] = (byte)((int)(((in[1 + inPos] & 549755813887L) >>> 33 | (in[2 + inPos] & 549755813887L) << 6) & 255L));
         out[10 + outPos] = (byte)((int)((in[2 + inPos] & 549755813887L) >>> 2 & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 549755813887L) >>> 10 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 549755813887L) >>> 18 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 549755813887L) >>> 26 & 255L));
         out[14 + outPos] = (byte)((int)(((in[2 + inPos] & 549755813887L) >>> 34 | (in[3 + inPos] & 549755813887L) << 5) & 255L));
         out[15 + outPos] = (byte)((int)((in[3 + inPos] & 549755813887L) >>> 3 & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 549755813887L) >>> 11 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 549755813887L) >>> 19 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 549755813887L) >>> 27 & 255L));
         out[19 + outPos] = (byte)((int)(((in[3 + inPos] & 549755813887L) >>> 35 | (in[4 + inPos] & 549755813887L) << 4) & 255L));
         out[20 + outPos] = (byte)((int)((in[4 + inPos] & 549755813887L) >>> 4 & 255L));
         out[21 + outPos] = (byte)((int)((in[4 + inPos] & 549755813887L) >>> 12 & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 549755813887L) >>> 20 & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 549755813887L) >>> 28 & 255L));
         out[24 + outPos] = (byte)((int)(((in[4 + inPos] & 549755813887L) >>> 36 | (in[5 + inPos] & 549755813887L) << 3) & 255L));
         out[25 + outPos] = (byte)((int)((in[5 + inPos] & 549755813887L) >>> 5 & 255L));
         out[26 + outPos] = (byte)((int)((in[5 + inPos] & 549755813887L) >>> 13 & 255L));
         out[27 + outPos] = (byte)((int)((in[5 + inPos] & 549755813887L) >>> 21 & 255L));
         out[28 + outPos] = (byte)((int)((in[5 + inPos] & 549755813887L) >>> 29 & 255L));
         out[29 + outPos] = (byte)((int)(((in[5 + inPos] & 549755813887L) >>> 37 | (in[6 + inPos] & 549755813887L) << 2) & 255L));
         out[30 + outPos] = (byte)((int)((in[6 + inPos] & 549755813887L) >>> 6 & 255L));
         out[31 + outPos] = (byte)((int)((in[6 + inPos] & 549755813887L) >>> 14 & 255L));
         out[32 + outPos] = (byte)((int)((in[6 + inPos] & 549755813887L) >>> 22 & 255L));
         out[33 + outPos] = (byte)((int)((in[6 + inPos] & 549755813887L) >>> 30 & 255L));
         out[34 + outPos] = (byte)((int)(((in[6 + inPos] & 549755813887L) >>> 38 | (in[7 + inPos] & 549755813887L) << 1) & 255L));
         out[35 + outPos] = (byte)((int)((in[7 + inPos] & 549755813887L) >>> 7 & 255L));
         out[36 + outPos] = (byte)((int)((in[7 + inPos] & 549755813887L) >>> 15 & 255L));
         out[37 + outPos] = (byte)((int)((in[7 + inPos] & 549755813887L) >>> 23 & 255L));
         out[38 + outPos] = (byte)((int)((in[7 + inPos] & 549755813887L) >>> 31 & 255L));
         out[39 + outPos] = (byte)((int)(in[8 + inPos] & 549755813887L & 255L));
         out[40 + outPos] = (byte)((int)((in[8 + inPos] & 549755813887L) >>> 8 & 255L));
         out[41 + outPos] = (byte)((int)((in[8 + inPos] & 549755813887L) >>> 16 & 255L));
         out[42 + outPos] = (byte)((int)((in[8 + inPos] & 549755813887L) >>> 24 & 255L));
         out[43 + outPos] = (byte)((int)(((in[8 + inPos] & 549755813887L) >>> 32 | (in[9 + inPos] & 549755813887L) << 7) & 255L));
         out[44 + outPos] = (byte)((int)((in[9 + inPos] & 549755813887L) >>> 1 & 255L));
         out[45 + outPos] = (byte)((int)((in[9 + inPos] & 549755813887L) >>> 9 & 255L));
         out[46 + outPos] = (byte)((int)((in[9 + inPos] & 549755813887L) >>> 17 & 255L));
         out[47 + outPos] = (byte)((int)((in[9 + inPos] & 549755813887L) >>> 25 & 255L));
         out[48 + outPos] = (byte)((int)(((in[9 + inPos] & 549755813887L) >>> 33 | (in[10 + inPos] & 549755813887L) << 6) & 255L));
         out[49 + outPos] = (byte)((int)((in[10 + inPos] & 549755813887L) >>> 2 & 255L));
         out[50 + outPos] = (byte)((int)((in[10 + inPos] & 549755813887L) >>> 10 & 255L));
         out[51 + outPos] = (byte)((int)((in[10 + inPos] & 549755813887L) >>> 18 & 255L));
         out[52 + outPos] = (byte)((int)((in[10 + inPos] & 549755813887L) >>> 26 & 255L));
         out[53 + outPos] = (byte)((int)(((in[10 + inPos] & 549755813887L) >>> 34 | (in[11 + inPos] & 549755813887L) << 5) & 255L));
         out[54 + outPos] = (byte)((int)((in[11 + inPos] & 549755813887L) >>> 3 & 255L));
         out[55 + outPos] = (byte)((int)((in[11 + inPos] & 549755813887L) >>> 11 & 255L));
         out[56 + outPos] = (byte)((int)((in[11 + inPos] & 549755813887L) >>> 19 & 255L));
         out[57 + outPos] = (byte)((int)((in[11 + inPos] & 549755813887L) >>> 27 & 255L));
         out[58 + outPos] = (byte)((int)(((in[11 + inPos] & 549755813887L) >>> 35 | (in[12 + inPos] & 549755813887L) << 4) & 255L));
         out[59 + outPos] = (byte)((int)((in[12 + inPos] & 549755813887L) >>> 4 & 255L));
         out[60 + outPos] = (byte)((int)((in[12 + inPos] & 549755813887L) >>> 12 & 255L));
         out[61 + outPos] = (byte)((int)((in[12 + inPos] & 549755813887L) >>> 20 & 255L));
         out[62 + outPos] = (byte)((int)((in[12 + inPos] & 549755813887L) >>> 28 & 255L));
         out[63 + outPos] = (byte)((int)(((in[12 + inPos] & 549755813887L) >>> 36 | (in[13 + inPos] & 549755813887L) << 3) & 255L));
         out[64 + outPos] = (byte)((int)((in[13 + inPos] & 549755813887L) >>> 5 & 255L));
         out[65 + outPos] = (byte)((int)((in[13 + inPos] & 549755813887L) >>> 13 & 255L));
         out[66 + outPos] = (byte)((int)((in[13 + inPos] & 549755813887L) >>> 21 & 255L));
         out[67 + outPos] = (byte)((int)((in[13 + inPos] & 549755813887L) >>> 29 & 255L));
         out[68 + outPos] = (byte)((int)(((in[13 + inPos] & 549755813887L) >>> 37 | (in[14 + inPos] & 549755813887L) << 2) & 255L));
         out[69 + outPos] = (byte)((int)((in[14 + inPos] & 549755813887L) >>> 6 & 255L));
         out[70 + outPos] = (byte)((int)((in[14 + inPos] & 549755813887L) >>> 14 & 255L));
         out[71 + outPos] = (byte)((int)((in[14 + inPos] & 549755813887L) >>> 22 & 255L));
         out[72 + outPos] = (byte)((int)((in[14 + inPos] & 549755813887L) >>> 30 & 255L));
         out[73 + outPos] = (byte)((int)(((in[14 + inPos] & 549755813887L) >>> 38 | (in[15 + inPos] & 549755813887L) << 1) & 255L));
         out[74 + outPos] = (byte)((int)((in[15 + inPos] & 549755813887L) >>> 7 & 255L));
         out[75 + outPos] = (byte)((int)((in[15 + inPos] & 549755813887L) >>> 15 & 255L));
         out[76 + outPos] = (byte)((int)((in[15 + inPos] & 549755813887L) >>> 23 & 255L));
         out[77 + outPos] = (byte)((int)((in[15 + inPos] & 549755813887L) >>> 31 & 255L));
         out[78 + outPos] = (byte)((int)(in[16 + inPos] & 549755813887L & 255L));
         out[79 + outPos] = (byte)((int)((in[16 + inPos] & 549755813887L) >>> 8 & 255L));
         out[80 + outPos] = (byte)((int)((in[16 + inPos] & 549755813887L) >>> 16 & 255L));
         out[81 + outPos] = (byte)((int)((in[16 + inPos] & 549755813887L) >>> 24 & 255L));
         out[82 + outPos] = (byte)((int)(((in[16 + inPos] & 549755813887L) >>> 32 | (in[17 + inPos] & 549755813887L) << 7) & 255L));
         out[83 + outPos] = (byte)((int)((in[17 + inPos] & 549755813887L) >>> 1 & 255L));
         out[84 + outPos] = (byte)((int)((in[17 + inPos] & 549755813887L) >>> 9 & 255L));
         out[85 + outPos] = (byte)((int)((in[17 + inPos] & 549755813887L) >>> 17 & 255L));
         out[86 + outPos] = (byte)((int)((in[17 + inPos] & 549755813887L) >>> 25 & 255L));
         out[87 + outPos] = (byte)((int)(((in[17 + inPos] & 549755813887L) >>> 33 | (in[18 + inPos] & 549755813887L) << 6) & 255L));
         out[88 + outPos] = (byte)((int)((in[18 + inPos] & 549755813887L) >>> 2 & 255L));
         out[89 + outPos] = (byte)((int)((in[18 + inPos] & 549755813887L) >>> 10 & 255L));
         out[90 + outPos] = (byte)((int)((in[18 + inPos] & 549755813887L) >>> 18 & 255L));
         out[91 + outPos] = (byte)((int)((in[18 + inPos] & 549755813887L) >>> 26 & 255L));
         out[92 + outPos] = (byte)((int)(((in[18 + inPos] & 549755813887L) >>> 34 | (in[19 + inPos] & 549755813887L) << 5) & 255L));
         out[93 + outPos] = (byte)((int)((in[19 + inPos] & 549755813887L) >>> 3 & 255L));
         out[94 + outPos] = (byte)((int)((in[19 + inPos] & 549755813887L) >>> 11 & 255L));
         out[95 + outPos] = (byte)((int)((in[19 + inPos] & 549755813887L) >>> 19 & 255L));
         out[96 + outPos] = (byte)((int)((in[19 + inPos] & 549755813887L) >>> 27 & 255L));
         out[97 + outPos] = (byte)((int)(((in[19 + inPos] & 549755813887L) >>> 35 | (in[20 + inPos] & 549755813887L) << 4) & 255L));
         out[98 + outPos] = (byte)((int)((in[20 + inPos] & 549755813887L) >>> 4 & 255L));
         out[99 + outPos] = (byte)((int)((in[20 + inPos] & 549755813887L) >>> 12 & 255L));
         out[100 + outPos] = (byte)((int)((in[20 + inPos] & 549755813887L) >>> 20 & 255L));
         out[101 + outPos] = (byte)((int)((in[20 + inPos] & 549755813887L) >>> 28 & 255L));
         out[102 + outPos] = (byte)((int)(((in[20 + inPos] & 549755813887L) >>> 36 | (in[21 + inPos] & 549755813887L) << 3) & 255L));
         out[103 + outPos] = (byte)((int)((in[21 + inPos] & 549755813887L) >>> 5 & 255L));
         out[104 + outPos] = (byte)((int)((in[21 + inPos] & 549755813887L) >>> 13 & 255L));
         out[105 + outPos] = (byte)((int)((in[21 + inPos] & 549755813887L) >>> 21 & 255L));
         out[106 + outPos] = (byte)((int)((in[21 + inPos] & 549755813887L) >>> 29 & 255L));
         out[107 + outPos] = (byte)((int)(((in[21 + inPos] & 549755813887L) >>> 37 | (in[22 + inPos] & 549755813887L) << 2) & 255L));
         out[108 + outPos] = (byte)((int)((in[22 + inPos] & 549755813887L) >>> 6 & 255L));
         out[109 + outPos] = (byte)((int)((in[22 + inPos] & 549755813887L) >>> 14 & 255L));
         out[110 + outPos] = (byte)((int)((in[22 + inPos] & 549755813887L) >>> 22 & 255L));
         out[111 + outPos] = (byte)((int)((in[22 + inPos] & 549755813887L) >>> 30 & 255L));
         out[112 + outPos] = (byte)((int)(((in[22 + inPos] & 549755813887L) >>> 38 | (in[23 + inPos] & 549755813887L) << 1) & 255L));
         out[113 + outPos] = (byte)((int)((in[23 + inPos] & 549755813887L) >>> 7 & 255L));
         out[114 + outPos] = (byte)((int)((in[23 + inPos] & 549755813887L) >>> 15 & 255L));
         out[115 + outPos] = (byte)((int)((in[23 + inPos] & 549755813887L) >>> 23 & 255L));
         out[116 + outPos] = (byte)((int)((in[23 + inPos] & 549755813887L) >>> 31 & 255L));
         out[117 + outPos] = (byte)((int)(in[24 + inPos] & 549755813887L & 255L));
         out[118 + outPos] = (byte)((int)((in[24 + inPos] & 549755813887L) >>> 8 & 255L));
         out[119 + outPos] = (byte)((int)((in[24 + inPos] & 549755813887L) >>> 16 & 255L));
         out[120 + outPos] = (byte)((int)((in[24 + inPos] & 549755813887L) >>> 24 & 255L));
         out[121 + outPos] = (byte)((int)(((in[24 + inPos] & 549755813887L) >>> 32 | (in[25 + inPos] & 549755813887L) << 7) & 255L));
         out[122 + outPos] = (byte)((int)((in[25 + inPos] & 549755813887L) >>> 1 & 255L));
         out[123 + outPos] = (byte)((int)((in[25 + inPos] & 549755813887L) >>> 9 & 255L));
         out[124 + outPos] = (byte)((int)((in[25 + inPos] & 549755813887L) >>> 17 & 255L));
         out[125 + outPos] = (byte)((int)((in[25 + inPos] & 549755813887L) >>> 25 & 255L));
         out[126 + outPos] = (byte)((int)(((in[25 + inPos] & 549755813887L) >>> 33 | (in[26 + inPos] & 549755813887L) << 6) & 255L));
         out[127 + outPos] = (byte)((int)((in[26 + inPos] & 549755813887L) >>> 2 & 255L));
         out[128 + outPos] = (byte)((int)((in[26 + inPos] & 549755813887L) >>> 10 & 255L));
         out[129 + outPos] = (byte)((int)((in[26 + inPos] & 549755813887L) >>> 18 & 255L));
         out[130 + outPos] = (byte)((int)((in[26 + inPos] & 549755813887L) >>> 26 & 255L));
         out[131 + outPos] = (byte)((int)(((in[26 + inPos] & 549755813887L) >>> 34 | (in[27 + inPos] & 549755813887L) << 5) & 255L));
         out[132 + outPos] = (byte)((int)((in[27 + inPos] & 549755813887L) >>> 3 & 255L));
         out[133 + outPos] = (byte)((int)((in[27 + inPos] & 549755813887L) >>> 11 & 255L));
         out[134 + outPos] = (byte)((int)((in[27 + inPos] & 549755813887L) >>> 19 & 255L));
         out[135 + outPos] = (byte)((int)((in[27 + inPos] & 549755813887L) >>> 27 & 255L));
         out[136 + outPos] = (byte)((int)(((in[27 + inPos] & 549755813887L) >>> 35 | (in[28 + inPos] & 549755813887L) << 4) & 255L));
         out[137 + outPos] = (byte)((int)((in[28 + inPos] & 549755813887L) >>> 4 & 255L));
         out[138 + outPos] = (byte)((int)((in[28 + inPos] & 549755813887L) >>> 12 & 255L));
         out[139 + outPos] = (byte)((int)((in[28 + inPos] & 549755813887L) >>> 20 & 255L));
         out[140 + outPos] = (byte)((int)((in[28 + inPos] & 549755813887L) >>> 28 & 255L));
         out[141 + outPos] = (byte)((int)(((in[28 + inPos] & 549755813887L) >>> 36 | (in[29 + inPos] & 549755813887L) << 3) & 255L));
         out[142 + outPos] = (byte)((int)((in[29 + inPos] & 549755813887L) >>> 5 & 255L));
         out[143 + outPos] = (byte)((int)((in[29 + inPos] & 549755813887L) >>> 13 & 255L));
         out[144 + outPos] = (byte)((int)((in[29 + inPos] & 549755813887L) >>> 21 & 255L));
         out[145 + outPos] = (byte)((int)((in[29 + inPos] & 549755813887L) >>> 29 & 255L));
         out[146 + outPos] = (byte)((int)(((in[29 + inPos] & 549755813887L) >>> 37 | (in[30 + inPos] & 549755813887L) << 2) & 255L));
         out[147 + outPos] = (byte)((int)((in[30 + inPos] & 549755813887L) >>> 6 & 255L));
         out[148 + outPos] = (byte)((int)((in[30 + inPos] & 549755813887L) >>> 14 & 255L));
         out[149 + outPos] = (byte)((int)((in[30 + inPos] & 549755813887L) >>> 22 & 255L));
         out[150 + outPos] = (byte)((int)((in[30 + inPos] & 549755813887L) >>> 30 & 255L));
         out[151 + outPos] = (byte)((int)(((in[30 + inPos] & 549755813887L) >>> 38 | (in[31 + inPos] & 549755813887L) << 1) & 255L));
         out[152 + outPos] = (byte)((int)((in[31 + inPos] & 549755813887L) >>> 7 & 255L));
         out[153 + outPos] = (byte)((int)((in[31 + inPos] & 549755813887L) >>> 15 & 255L));
         out[154 + outPos] = (byte)((int)((in[31 + inPos] & 549755813887L) >>> 23 & 255L));
         out[155 + outPos] = (byte)((int)((in[31 + inPos] & 549755813887L) >>> 31 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 549755813887L;
         out[1 + outPos] = (long)in[4 + inPos] >> 7 & 1L | (long)in[5 + inPos] << 1 & 511L | (long)in[6 + inPos] << 9 & 131071L | (long)in[7 + inPos] << 17 & 33554431L | (long)in[8 + inPos] << 25 & 8589934591L | (long)in[9 + inPos] << 33 & 549755813887L;
         out[2 + outPos] = (long)in[9 + inPos] >> 6 & 3L | (long)in[10 + inPos] << 2 & 1023L | (long)in[11 + inPos] << 10 & 262143L | (long)in[12 + inPos] << 18 & 67108863L | (long)in[13 + inPos] << 26 & 17179869183L | (long)in[14 + inPos] << 34 & 549755813887L;
         out[3 + outPos] = (long)in[14 + inPos] >> 5 & 7L | (long)in[15 + inPos] << 3 & 2047L | (long)in[16 + inPos] << 11 & 524287L | (long)in[17 + inPos] << 19 & 134217727L | (long)in[18 + inPos] << 27 & 34359738367L | (long)in[19 + inPos] << 35 & 549755813887L;
         out[4 + outPos] = (long)in[19 + inPos] >> 4 & 15L | (long)in[20 + inPos] << 4 & 4095L | (long)in[21 + inPos] << 12 & 1048575L | (long)in[22 + inPos] << 20 & 268435455L | (long)in[23 + inPos] << 28 & 68719476735L | (long)in[24 + inPos] << 36 & 549755813887L;
         out[5 + outPos] = (long)in[24 + inPos] >> 3 & 31L | (long)in[25 + inPos] << 5 & 8191L | (long)in[26 + inPos] << 13 & 2097151L | (long)in[27 + inPos] << 21 & 536870911L | (long)in[28 + inPos] << 29 & 137438953471L | (long)in[29 + inPos] << 37 & 549755813887L;
         out[6 + outPos] = (long)in[29 + inPos] >> 2 & 63L | (long)in[30 + inPos] << 6 & 16383L | (long)in[31 + inPos] << 14 & 4194303L | (long)in[32 + inPos] << 22 & 1073741823L | (long)in[33 + inPos] << 30 & 274877906943L | (long)in[34 + inPos] << 38 & 549755813887L;
         out[7 + outPos] = (long)in[34 + inPos] >> 1 & 127L | (long)in[35 + inPos] << 7 & 32767L | (long)in[36 + inPos] << 15 & 8388607L | (long)in[37 + inPos] << 23 & 2147483647L | (long)in[38 + inPos] << 31 & 549755813887L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 549755813887L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 7 & 1L | (long)in.get(5 + inPos) << 1 & 511L | (long)in.get(6 + inPos) << 9 & 131071L | (long)in.get(7 + inPos) << 17 & 33554431L | (long)in.get(8 + inPos) << 25 & 8589934591L | (long)in.get(9 + inPos) << 33 & 549755813887L;
         out[2 + outPos] = (long)in.get(9 + inPos) >> 6 & 3L | (long)in.get(10 + inPos) << 2 & 1023L | (long)in.get(11 + inPos) << 10 & 262143L | (long)in.get(12 + inPos) << 18 & 67108863L | (long)in.get(13 + inPos) << 26 & 17179869183L | (long)in.get(14 + inPos) << 34 & 549755813887L;
         out[3 + outPos] = (long)in.get(14 + inPos) >> 5 & 7L | (long)in.get(15 + inPos) << 3 & 2047L | (long)in.get(16 + inPos) << 11 & 524287L | (long)in.get(17 + inPos) << 19 & 134217727L | (long)in.get(18 + inPos) << 27 & 34359738367L | (long)in.get(19 + inPos) << 35 & 549755813887L;
         out[4 + outPos] = (long)in.get(19 + inPos) >> 4 & 15L | (long)in.get(20 + inPos) << 4 & 4095L | (long)in.get(21 + inPos) << 12 & 1048575L | (long)in.get(22 + inPos) << 20 & 268435455L | (long)in.get(23 + inPos) << 28 & 68719476735L | (long)in.get(24 + inPos) << 36 & 549755813887L;
         out[5 + outPos] = (long)in.get(24 + inPos) >> 3 & 31L | (long)in.get(25 + inPos) << 5 & 8191L | (long)in.get(26 + inPos) << 13 & 2097151L | (long)in.get(27 + inPos) << 21 & 536870911L | (long)in.get(28 + inPos) << 29 & 137438953471L | (long)in.get(29 + inPos) << 37 & 549755813887L;
         out[6 + outPos] = (long)in.get(29 + inPos) >> 2 & 63L | (long)in.get(30 + inPos) << 6 & 16383L | (long)in.get(31 + inPos) << 14 & 4194303L | (long)in.get(32 + inPos) << 22 & 1073741823L | (long)in.get(33 + inPos) << 30 & 274877906943L | (long)in.get(34 + inPos) << 38 & 549755813887L;
         out[7 + outPos] = (long)in.get(34 + inPos) >> 1 & 127L | (long)in.get(35 + inPos) << 7 & 32767L | (long)in.get(36 + inPos) << 15 & 8388607L | (long)in.get(37 + inPos) << 23 & 2147483647L | (long)in.get(38 + inPos) << 31 & 549755813887L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 549755813887L;
         out[1 + outPos] = (long)in[4 + inPos] >> 7 & 1L | (long)in[5 + inPos] << 1 & 511L | (long)in[6 + inPos] << 9 & 131071L | (long)in[7 + inPos] << 17 & 33554431L | (long)in[8 + inPos] << 25 & 8589934591L | (long)in[9 + inPos] << 33 & 549755813887L;
         out[2 + outPos] = (long)in[9 + inPos] >> 6 & 3L | (long)in[10 + inPos] << 2 & 1023L | (long)in[11 + inPos] << 10 & 262143L | (long)in[12 + inPos] << 18 & 67108863L | (long)in[13 + inPos] << 26 & 17179869183L | (long)in[14 + inPos] << 34 & 549755813887L;
         out[3 + outPos] = (long)in[14 + inPos] >> 5 & 7L | (long)in[15 + inPos] << 3 & 2047L | (long)in[16 + inPos] << 11 & 524287L | (long)in[17 + inPos] << 19 & 134217727L | (long)in[18 + inPos] << 27 & 34359738367L | (long)in[19 + inPos] << 35 & 549755813887L;
         out[4 + outPos] = (long)in[19 + inPos] >> 4 & 15L | (long)in[20 + inPos] << 4 & 4095L | (long)in[21 + inPos] << 12 & 1048575L | (long)in[22 + inPos] << 20 & 268435455L | (long)in[23 + inPos] << 28 & 68719476735L | (long)in[24 + inPos] << 36 & 549755813887L;
         out[5 + outPos] = (long)in[24 + inPos] >> 3 & 31L | (long)in[25 + inPos] << 5 & 8191L | (long)in[26 + inPos] << 13 & 2097151L | (long)in[27 + inPos] << 21 & 536870911L | (long)in[28 + inPos] << 29 & 137438953471L | (long)in[29 + inPos] << 37 & 549755813887L;
         out[6 + outPos] = (long)in[29 + inPos] >> 2 & 63L | (long)in[30 + inPos] << 6 & 16383L | (long)in[31 + inPos] << 14 & 4194303L | (long)in[32 + inPos] << 22 & 1073741823L | (long)in[33 + inPos] << 30 & 274877906943L | (long)in[34 + inPos] << 38 & 549755813887L;
         out[7 + outPos] = (long)in[34 + inPos] >> 1 & 127L | (long)in[35 + inPos] << 7 & 32767L | (long)in[36 + inPos] << 15 & 8388607L | (long)in[37 + inPos] << 23 & 2147483647L | (long)in[38 + inPos] << 31 & 549755813887L;
         out[8 + outPos] = (long)in[39 + inPos] & 255L | (long)in[40 + inPos] << 8 & 65535L | (long)in[41 + inPos] << 16 & 16777215L | (long)in[42 + inPos] << 24 & 4294967295L | (long)in[43 + inPos] << 32 & 549755813887L;
         out[9 + outPos] = (long)in[43 + inPos] >> 7 & 1L | (long)in[44 + inPos] << 1 & 511L | (long)in[45 + inPos] << 9 & 131071L | (long)in[46 + inPos] << 17 & 33554431L | (long)in[47 + inPos] << 25 & 8589934591L | (long)in[48 + inPos] << 33 & 549755813887L;
         out[10 + outPos] = (long)in[48 + inPos] >> 6 & 3L | (long)in[49 + inPos] << 2 & 1023L | (long)in[50 + inPos] << 10 & 262143L | (long)in[51 + inPos] << 18 & 67108863L | (long)in[52 + inPos] << 26 & 17179869183L | (long)in[53 + inPos] << 34 & 549755813887L;
         out[11 + outPos] = (long)in[53 + inPos] >> 5 & 7L | (long)in[54 + inPos] << 3 & 2047L | (long)in[55 + inPos] << 11 & 524287L | (long)in[56 + inPos] << 19 & 134217727L | (long)in[57 + inPos] << 27 & 34359738367L | (long)in[58 + inPos] << 35 & 549755813887L;
         out[12 + outPos] = (long)in[58 + inPos] >> 4 & 15L | (long)in[59 + inPos] << 4 & 4095L | (long)in[60 + inPos] << 12 & 1048575L | (long)in[61 + inPos] << 20 & 268435455L | (long)in[62 + inPos] << 28 & 68719476735L | (long)in[63 + inPos] << 36 & 549755813887L;
         out[13 + outPos] = (long)in[63 + inPos] >> 3 & 31L | (long)in[64 + inPos] << 5 & 8191L | (long)in[65 + inPos] << 13 & 2097151L | (long)in[66 + inPos] << 21 & 536870911L | (long)in[67 + inPos] << 29 & 137438953471L | (long)in[68 + inPos] << 37 & 549755813887L;
         out[14 + outPos] = (long)in[68 + inPos] >> 2 & 63L | (long)in[69 + inPos] << 6 & 16383L | (long)in[70 + inPos] << 14 & 4194303L | (long)in[71 + inPos] << 22 & 1073741823L | (long)in[72 + inPos] << 30 & 274877906943L | (long)in[73 + inPos] << 38 & 549755813887L;
         out[15 + outPos] = (long)in[73 + inPos] >> 1 & 127L | (long)in[74 + inPos] << 7 & 32767L | (long)in[75 + inPos] << 15 & 8388607L | (long)in[76 + inPos] << 23 & 2147483647L | (long)in[77 + inPos] << 31 & 549755813887L;
         out[16 + outPos] = (long)in[78 + inPos] & 255L | (long)in[79 + inPos] << 8 & 65535L | (long)in[80 + inPos] << 16 & 16777215L | (long)in[81 + inPos] << 24 & 4294967295L | (long)in[82 + inPos] << 32 & 549755813887L;
         out[17 + outPos] = (long)in[82 + inPos] >> 7 & 1L | (long)in[83 + inPos] << 1 & 511L | (long)in[84 + inPos] << 9 & 131071L | (long)in[85 + inPos] << 17 & 33554431L | (long)in[86 + inPos] << 25 & 8589934591L | (long)in[87 + inPos] << 33 & 549755813887L;
         out[18 + outPos] = (long)in[87 + inPos] >> 6 & 3L | (long)in[88 + inPos] << 2 & 1023L | (long)in[89 + inPos] << 10 & 262143L | (long)in[90 + inPos] << 18 & 67108863L | (long)in[91 + inPos] << 26 & 17179869183L | (long)in[92 + inPos] << 34 & 549755813887L;
         out[19 + outPos] = (long)in[92 + inPos] >> 5 & 7L | (long)in[93 + inPos] << 3 & 2047L | (long)in[94 + inPos] << 11 & 524287L | (long)in[95 + inPos] << 19 & 134217727L | (long)in[96 + inPos] << 27 & 34359738367L | (long)in[97 + inPos] << 35 & 549755813887L;
         out[20 + outPos] = (long)in[97 + inPos] >> 4 & 15L | (long)in[98 + inPos] << 4 & 4095L | (long)in[99 + inPos] << 12 & 1048575L | (long)in[100 + inPos] << 20 & 268435455L | (long)in[101 + inPos] << 28 & 68719476735L | (long)in[102 + inPos] << 36 & 549755813887L;
         out[21 + outPos] = (long)in[102 + inPos] >> 3 & 31L | (long)in[103 + inPos] << 5 & 8191L | (long)in[104 + inPos] << 13 & 2097151L | (long)in[105 + inPos] << 21 & 536870911L | (long)in[106 + inPos] << 29 & 137438953471L | (long)in[107 + inPos] << 37 & 549755813887L;
         out[22 + outPos] = (long)in[107 + inPos] >> 2 & 63L | (long)in[108 + inPos] << 6 & 16383L | (long)in[109 + inPos] << 14 & 4194303L | (long)in[110 + inPos] << 22 & 1073741823L | (long)in[111 + inPos] << 30 & 274877906943L | (long)in[112 + inPos] << 38 & 549755813887L;
         out[23 + outPos] = (long)in[112 + inPos] >> 1 & 127L | (long)in[113 + inPos] << 7 & 32767L | (long)in[114 + inPos] << 15 & 8388607L | (long)in[115 + inPos] << 23 & 2147483647L | (long)in[116 + inPos] << 31 & 549755813887L;
         out[24 + outPos] = (long)in[117 + inPos] & 255L | (long)in[118 + inPos] << 8 & 65535L | (long)in[119 + inPos] << 16 & 16777215L | (long)in[120 + inPos] << 24 & 4294967295L | (long)in[121 + inPos] << 32 & 549755813887L;
         out[25 + outPos] = (long)in[121 + inPos] >> 7 & 1L | (long)in[122 + inPos] << 1 & 511L | (long)in[123 + inPos] << 9 & 131071L | (long)in[124 + inPos] << 17 & 33554431L | (long)in[125 + inPos] << 25 & 8589934591L | (long)in[126 + inPos] << 33 & 549755813887L;
         out[26 + outPos] = (long)in[126 + inPos] >> 6 & 3L | (long)in[127 + inPos] << 2 & 1023L | (long)in[128 + inPos] << 10 & 262143L | (long)in[129 + inPos] << 18 & 67108863L | (long)in[130 + inPos] << 26 & 17179869183L | (long)in[131 + inPos] << 34 & 549755813887L;
         out[27 + outPos] = (long)in[131 + inPos] >> 5 & 7L | (long)in[132 + inPos] << 3 & 2047L | (long)in[133 + inPos] << 11 & 524287L | (long)in[134 + inPos] << 19 & 134217727L | (long)in[135 + inPos] << 27 & 34359738367L | (long)in[136 + inPos] << 35 & 549755813887L;
         out[28 + outPos] = (long)in[136 + inPos] >> 4 & 15L | (long)in[137 + inPos] << 4 & 4095L | (long)in[138 + inPos] << 12 & 1048575L | (long)in[139 + inPos] << 20 & 268435455L | (long)in[140 + inPos] << 28 & 68719476735L | (long)in[141 + inPos] << 36 & 549755813887L;
         out[29 + outPos] = (long)in[141 + inPos] >> 3 & 31L | (long)in[142 + inPos] << 5 & 8191L | (long)in[143 + inPos] << 13 & 2097151L | (long)in[144 + inPos] << 21 & 536870911L | (long)in[145 + inPos] << 29 & 137438953471L | (long)in[146 + inPos] << 37 & 549755813887L;
         out[30 + outPos] = (long)in[146 + inPos] >> 2 & 63L | (long)in[147 + inPos] << 6 & 16383L | (long)in[148 + inPos] << 14 & 4194303L | (long)in[149 + inPos] << 22 & 1073741823L | (long)in[150 + inPos] << 30 & 274877906943L | (long)in[151 + inPos] << 38 & 549755813887L;
         out[31 + outPos] = (long)in[151 + inPos] >> 1 & 127L | (long)in[152 + inPos] << 7 & 32767L | (long)in[153 + inPos] << 15 & 8388607L | (long)in[154 + inPos] << 23 & 2147483647L | (long)in[155 + inPos] << 31 & 549755813887L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 549755813887L;
         out[1 + outPos] = (long)in.get(4 + inPos) >> 7 & 1L | (long)in.get(5 + inPos) << 1 & 511L | (long)in.get(6 + inPos) << 9 & 131071L | (long)in.get(7 + inPos) << 17 & 33554431L | (long)in.get(8 + inPos) << 25 & 8589934591L | (long)in.get(9 + inPos) << 33 & 549755813887L;
         out[2 + outPos] = (long)in.get(9 + inPos) >> 6 & 3L | (long)in.get(10 + inPos) << 2 & 1023L | (long)in.get(11 + inPos) << 10 & 262143L | (long)in.get(12 + inPos) << 18 & 67108863L | (long)in.get(13 + inPos) << 26 & 17179869183L | (long)in.get(14 + inPos) << 34 & 549755813887L;
         out[3 + outPos] = (long)in.get(14 + inPos) >> 5 & 7L | (long)in.get(15 + inPos) << 3 & 2047L | (long)in.get(16 + inPos) << 11 & 524287L | (long)in.get(17 + inPos) << 19 & 134217727L | (long)in.get(18 + inPos) << 27 & 34359738367L | (long)in.get(19 + inPos) << 35 & 549755813887L;
         out[4 + outPos] = (long)in.get(19 + inPos) >> 4 & 15L | (long)in.get(20 + inPos) << 4 & 4095L | (long)in.get(21 + inPos) << 12 & 1048575L | (long)in.get(22 + inPos) << 20 & 268435455L | (long)in.get(23 + inPos) << 28 & 68719476735L | (long)in.get(24 + inPos) << 36 & 549755813887L;
         out[5 + outPos] = (long)in.get(24 + inPos) >> 3 & 31L | (long)in.get(25 + inPos) << 5 & 8191L | (long)in.get(26 + inPos) << 13 & 2097151L | (long)in.get(27 + inPos) << 21 & 536870911L | (long)in.get(28 + inPos) << 29 & 137438953471L | (long)in.get(29 + inPos) << 37 & 549755813887L;
         out[6 + outPos] = (long)in.get(29 + inPos) >> 2 & 63L | (long)in.get(30 + inPos) << 6 & 16383L | (long)in.get(31 + inPos) << 14 & 4194303L | (long)in.get(32 + inPos) << 22 & 1073741823L | (long)in.get(33 + inPos) << 30 & 274877906943L | (long)in.get(34 + inPos) << 38 & 549755813887L;
         out[7 + outPos] = (long)in.get(34 + inPos) >> 1 & 127L | (long)in.get(35 + inPos) << 7 & 32767L | (long)in.get(36 + inPos) << 15 & 8388607L | (long)in.get(37 + inPos) << 23 & 2147483647L | (long)in.get(38 + inPos) << 31 & 549755813887L;
         out[8 + outPos] = (long)in.get(39 + inPos) & 255L | (long)in.get(40 + inPos) << 8 & 65535L | (long)in.get(41 + inPos) << 16 & 16777215L | (long)in.get(42 + inPos) << 24 & 4294967295L | (long)in.get(43 + inPos) << 32 & 549755813887L;
         out[9 + outPos] = (long)in.get(43 + inPos) >> 7 & 1L | (long)in.get(44 + inPos) << 1 & 511L | (long)in.get(45 + inPos) << 9 & 131071L | (long)in.get(46 + inPos) << 17 & 33554431L | (long)in.get(47 + inPos) << 25 & 8589934591L | (long)in.get(48 + inPos) << 33 & 549755813887L;
         out[10 + outPos] = (long)in.get(48 + inPos) >> 6 & 3L | (long)in.get(49 + inPos) << 2 & 1023L | (long)in.get(50 + inPos) << 10 & 262143L | (long)in.get(51 + inPos) << 18 & 67108863L | (long)in.get(52 + inPos) << 26 & 17179869183L | (long)in.get(53 + inPos) << 34 & 549755813887L;
         out[11 + outPos] = (long)in.get(53 + inPos) >> 5 & 7L | (long)in.get(54 + inPos) << 3 & 2047L | (long)in.get(55 + inPos) << 11 & 524287L | (long)in.get(56 + inPos) << 19 & 134217727L | (long)in.get(57 + inPos) << 27 & 34359738367L | (long)in.get(58 + inPos) << 35 & 549755813887L;
         out[12 + outPos] = (long)in.get(58 + inPos) >> 4 & 15L | (long)in.get(59 + inPos) << 4 & 4095L | (long)in.get(60 + inPos) << 12 & 1048575L | (long)in.get(61 + inPos) << 20 & 268435455L | (long)in.get(62 + inPos) << 28 & 68719476735L | (long)in.get(63 + inPos) << 36 & 549755813887L;
         out[13 + outPos] = (long)in.get(63 + inPos) >> 3 & 31L | (long)in.get(64 + inPos) << 5 & 8191L | (long)in.get(65 + inPos) << 13 & 2097151L | (long)in.get(66 + inPos) << 21 & 536870911L | (long)in.get(67 + inPos) << 29 & 137438953471L | (long)in.get(68 + inPos) << 37 & 549755813887L;
         out[14 + outPos] = (long)in.get(68 + inPos) >> 2 & 63L | (long)in.get(69 + inPos) << 6 & 16383L | (long)in.get(70 + inPos) << 14 & 4194303L | (long)in.get(71 + inPos) << 22 & 1073741823L | (long)in.get(72 + inPos) << 30 & 274877906943L | (long)in.get(73 + inPos) << 38 & 549755813887L;
         out[15 + outPos] = (long)in.get(73 + inPos) >> 1 & 127L | (long)in.get(74 + inPos) << 7 & 32767L | (long)in.get(75 + inPos) << 15 & 8388607L | (long)in.get(76 + inPos) << 23 & 2147483647L | (long)in.get(77 + inPos) << 31 & 549755813887L;
         out[16 + outPos] = (long)in.get(78 + inPos) & 255L | (long)in.get(79 + inPos) << 8 & 65535L | (long)in.get(80 + inPos) << 16 & 16777215L | (long)in.get(81 + inPos) << 24 & 4294967295L | (long)in.get(82 + inPos) << 32 & 549755813887L;
         out[17 + outPos] = (long)in.get(82 + inPos) >> 7 & 1L | (long)in.get(83 + inPos) << 1 & 511L | (long)in.get(84 + inPos) << 9 & 131071L | (long)in.get(85 + inPos) << 17 & 33554431L | (long)in.get(86 + inPos) << 25 & 8589934591L | (long)in.get(87 + inPos) << 33 & 549755813887L;
         out[18 + outPos] = (long)in.get(87 + inPos) >> 6 & 3L | (long)in.get(88 + inPos) << 2 & 1023L | (long)in.get(89 + inPos) << 10 & 262143L | (long)in.get(90 + inPos) << 18 & 67108863L | (long)in.get(91 + inPos) << 26 & 17179869183L | (long)in.get(92 + inPos) << 34 & 549755813887L;
         out[19 + outPos] = (long)in.get(92 + inPos) >> 5 & 7L | (long)in.get(93 + inPos) << 3 & 2047L | (long)in.get(94 + inPos) << 11 & 524287L | (long)in.get(95 + inPos) << 19 & 134217727L | (long)in.get(96 + inPos) << 27 & 34359738367L | (long)in.get(97 + inPos) << 35 & 549755813887L;
         out[20 + outPos] = (long)in.get(97 + inPos) >> 4 & 15L | (long)in.get(98 + inPos) << 4 & 4095L | (long)in.get(99 + inPos) << 12 & 1048575L | (long)in.get(100 + inPos) << 20 & 268435455L | (long)in.get(101 + inPos) << 28 & 68719476735L | (long)in.get(102 + inPos) << 36 & 549755813887L;
         out[21 + outPos] = (long)in.get(102 + inPos) >> 3 & 31L | (long)in.get(103 + inPos) << 5 & 8191L | (long)in.get(104 + inPos) << 13 & 2097151L | (long)in.get(105 + inPos) << 21 & 536870911L | (long)in.get(106 + inPos) << 29 & 137438953471L | (long)in.get(107 + inPos) << 37 & 549755813887L;
         out[22 + outPos] = (long)in.get(107 + inPos) >> 2 & 63L | (long)in.get(108 + inPos) << 6 & 16383L | (long)in.get(109 + inPos) << 14 & 4194303L | (long)in.get(110 + inPos) << 22 & 1073741823L | (long)in.get(111 + inPos) << 30 & 274877906943L | (long)in.get(112 + inPos) << 38 & 549755813887L;
         out[23 + outPos] = (long)in.get(112 + inPos) >> 1 & 127L | (long)in.get(113 + inPos) << 7 & 32767L | (long)in.get(114 + inPos) << 15 & 8388607L | (long)in.get(115 + inPos) << 23 & 2147483647L | (long)in.get(116 + inPos) << 31 & 549755813887L;
         out[24 + outPos] = (long)in.get(117 + inPos) & 255L | (long)in.get(118 + inPos) << 8 & 65535L | (long)in.get(119 + inPos) << 16 & 16777215L | (long)in.get(120 + inPos) << 24 & 4294967295L | (long)in.get(121 + inPos) << 32 & 549755813887L;
         out[25 + outPos] = (long)in.get(121 + inPos) >> 7 & 1L | (long)in.get(122 + inPos) << 1 & 511L | (long)in.get(123 + inPos) << 9 & 131071L | (long)in.get(124 + inPos) << 17 & 33554431L | (long)in.get(125 + inPos) << 25 & 8589934591L | (long)in.get(126 + inPos) << 33 & 549755813887L;
         out[26 + outPos] = (long)in.get(126 + inPos) >> 6 & 3L | (long)in.get(127 + inPos) << 2 & 1023L | (long)in.get(128 + inPos) << 10 & 262143L | (long)in.get(129 + inPos) << 18 & 67108863L | (long)in.get(130 + inPos) << 26 & 17179869183L | (long)in.get(131 + inPos) << 34 & 549755813887L;
         out[27 + outPos] = (long)in.get(131 + inPos) >> 5 & 7L | (long)in.get(132 + inPos) << 3 & 2047L | (long)in.get(133 + inPos) << 11 & 524287L | (long)in.get(134 + inPos) << 19 & 134217727L | (long)in.get(135 + inPos) << 27 & 34359738367L | (long)in.get(136 + inPos) << 35 & 549755813887L;
         out[28 + outPos] = (long)in.get(136 + inPos) >> 4 & 15L | (long)in.get(137 + inPos) << 4 & 4095L | (long)in.get(138 + inPos) << 12 & 1048575L | (long)in.get(139 + inPos) << 20 & 268435455L | (long)in.get(140 + inPos) << 28 & 68719476735L | (long)in.get(141 + inPos) << 36 & 549755813887L;
         out[29 + outPos] = (long)in.get(141 + inPos) >> 3 & 31L | (long)in.get(142 + inPos) << 5 & 8191L | (long)in.get(143 + inPos) << 13 & 2097151L | (long)in.get(144 + inPos) << 21 & 536870911L | (long)in.get(145 + inPos) << 29 & 137438953471L | (long)in.get(146 + inPos) << 37 & 549755813887L;
         out[30 + outPos] = (long)in.get(146 + inPos) >> 2 & 63L | (long)in.get(147 + inPos) << 6 & 16383L | (long)in.get(148 + inPos) << 14 & 4194303L | (long)in.get(149 + inPos) << 22 & 1073741823L | (long)in.get(150 + inPos) << 30 & 274877906943L | (long)in.get(151 + inPos) << 38 & 549755813887L;
         out[31 + outPos] = (long)in.get(151 + inPos) >> 1 & 127L | (long)in.get(152 + inPos) << 7 & 32767L | (long)in.get(153 + inPos) << 15 & 8388607L | (long)in.get(154 + inPos) << 23 & 2147483647L | (long)in.get(155 + inPos) << 31 & 549755813887L;
      }
   }

   private static final class Packer40 extends BytePackerForLong {
      private Packer40() {
         super(40);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 1099511627775L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(in[1 + inPos] & 1099511627775L & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[10 + outPos] = (byte)((int)(in[2 + inPos] & 1099511627775L & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[15 + outPos] = (byte)((int)(in[3 + inPos] & 1099511627775L & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[20 + outPos] = (byte)((int)(in[4 + inPos] & 1099511627775L & 255L));
         out[21 + outPos] = (byte)((int)((in[4 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[25 + outPos] = (byte)((int)(in[5 + inPos] & 1099511627775L & 255L));
         out[26 + outPos] = (byte)((int)((in[5 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[27 + outPos] = (byte)((int)((in[5 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[28 + outPos] = (byte)((int)((in[5 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[30 + outPos] = (byte)((int)(in[6 + inPos] & 1099511627775L & 255L));
         out[31 + outPos] = (byte)((int)((in[6 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[32 + outPos] = (byte)((int)((in[6 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[33 + outPos] = (byte)((int)((in[6 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[34 + outPos] = (byte)((int)((in[6 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[35 + outPos] = (byte)((int)(in[7 + inPos] & 1099511627775L & 255L));
         out[36 + outPos] = (byte)((int)((in[7 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[37 + outPos] = (byte)((int)((in[7 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[38 + outPos] = (byte)((int)((in[7 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[39 + outPos] = (byte)((int)((in[7 + inPos] & 1099511627775L) >>> 32 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 1099511627775L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(in[1 + inPos] & 1099511627775L & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[10 + outPos] = (byte)((int)(in[2 + inPos] & 1099511627775L & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[15 + outPos] = (byte)((int)(in[3 + inPos] & 1099511627775L & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[20 + outPos] = (byte)((int)(in[4 + inPos] & 1099511627775L & 255L));
         out[21 + outPos] = (byte)((int)((in[4 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[25 + outPos] = (byte)((int)(in[5 + inPos] & 1099511627775L & 255L));
         out[26 + outPos] = (byte)((int)((in[5 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[27 + outPos] = (byte)((int)((in[5 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[28 + outPos] = (byte)((int)((in[5 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[30 + outPos] = (byte)((int)(in[6 + inPos] & 1099511627775L & 255L));
         out[31 + outPos] = (byte)((int)((in[6 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[32 + outPos] = (byte)((int)((in[6 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[33 + outPos] = (byte)((int)((in[6 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[34 + outPos] = (byte)((int)((in[6 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[35 + outPos] = (byte)((int)(in[7 + inPos] & 1099511627775L & 255L));
         out[36 + outPos] = (byte)((int)((in[7 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[37 + outPos] = (byte)((int)((in[7 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[38 + outPos] = (byte)((int)((in[7 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[39 + outPos] = (byte)((int)((in[7 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[40 + outPos] = (byte)((int)(in[8 + inPos] & 1099511627775L & 255L));
         out[41 + outPos] = (byte)((int)((in[8 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[42 + outPos] = (byte)((int)((in[8 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[43 + outPos] = (byte)((int)((in[8 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[44 + outPos] = (byte)((int)((in[8 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[45 + outPos] = (byte)((int)(in[9 + inPos] & 1099511627775L & 255L));
         out[46 + outPos] = (byte)((int)((in[9 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[47 + outPos] = (byte)((int)((in[9 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[48 + outPos] = (byte)((int)((in[9 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[49 + outPos] = (byte)((int)((in[9 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[50 + outPos] = (byte)((int)(in[10 + inPos] & 1099511627775L & 255L));
         out[51 + outPos] = (byte)((int)((in[10 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[52 + outPos] = (byte)((int)((in[10 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[53 + outPos] = (byte)((int)((in[10 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[54 + outPos] = (byte)((int)((in[10 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[55 + outPos] = (byte)((int)(in[11 + inPos] & 1099511627775L & 255L));
         out[56 + outPos] = (byte)((int)((in[11 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[57 + outPos] = (byte)((int)((in[11 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[58 + outPos] = (byte)((int)((in[11 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[59 + outPos] = (byte)((int)((in[11 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[60 + outPos] = (byte)((int)(in[12 + inPos] & 1099511627775L & 255L));
         out[61 + outPos] = (byte)((int)((in[12 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[62 + outPos] = (byte)((int)((in[12 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[63 + outPos] = (byte)((int)((in[12 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[64 + outPos] = (byte)((int)((in[12 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[65 + outPos] = (byte)((int)(in[13 + inPos] & 1099511627775L & 255L));
         out[66 + outPos] = (byte)((int)((in[13 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[67 + outPos] = (byte)((int)((in[13 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[68 + outPos] = (byte)((int)((in[13 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[69 + outPos] = (byte)((int)((in[13 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[70 + outPos] = (byte)((int)(in[14 + inPos] & 1099511627775L & 255L));
         out[71 + outPos] = (byte)((int)((in[14 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[72 + outPos] = (byte)((int)((in[14 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[73 + outPos] = (byte)((int)((in[14 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[74 + outPos] = (byte)((int)((in[14 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[75 + outPos] = (byte)((int)(in[15 + inPos] & 1099511627775L & 255L));
         out[76 + outPos] = (byte)((int)((in[15 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[77 + outPos] = (byte)((int)((in[15 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[78 + outPos] = (byte)((int)((in[15 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[79 + outPos] = (byte)((int)((in[15 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[80 + outPos] = (byte)((int)(in[16 + inPos] & 1099511627775L & 255L));
         out[81 + outPos] = (byte)((int)((in[16 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[82 + outPos] = (byte)((int)((in[16 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[83 + outPos] = (byte)((int)((in[16 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[84 + outPos] = (byte)((int)((in[16 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[85 + outPos] = (byte)((int)(in[17 + inPos] & 1099511627775L & 255L));
         out[86 + outPos] = (byte)((int)((in[17 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[87 + outPos] = (byte)((int)((in[17 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[88 + outPos] = (byte)((int)((in[17 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[89 + outPos] = (byte)((int)((in[17 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[90 + outPos] = (byte)((int)(in[18 + inPos] & 1099511627775L & 255L));
         out[91 + outPos] = (byte)((int)((in[18 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[92 + outPos] = (byte)((int)((in[18 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[93 + outPos] = (byte)((int)((in[18 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[94 + outPos] = (byte)((int)((in[18 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[95 + outPos] = (byte)((int)(in[19 + inPos] & 1099511627775L & 255L));
         out[96 + outPos] = (byte)((int)((in[19 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[97 + outPos] = (byte)((int)((in[19 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[98 + outPos] = (byte)((int)((in[19 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[99 + outPos] = (byte)((int)((in[19 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[100 + outPos] = (byte)((int)(in[20 + inPos] & 1099511627775L & 255L));
         out[101 + outPos] = (byte)((int)((in[20 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[102 + outPos] = (byte)((int)((in[20 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[103 + outPos] = (byte)((int)((in[20 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[104 + outPos] = (byte)((int)((in[20 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[105 + outPos] = (byte)((int)(in[21 + inPos] & 1099511627775L & 255L));
         out[106 + outPos] = (byte)((int)((in[21 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[107 + outPos] = (byte)((int)((in[21 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[108 + outPos] = (byte)((int)((in[21 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[109 + outPos] = (byte)((int)((in[21 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[110 + outPos] = (byte)((int)(in[22 + inPos] & 1099511627775L & 255L));
         out[111 + outPos] = (byte)((int)((in[22 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[112 + outPos] = (byte)((int)((in[22 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[113 + outPos] = (byte)((int)((in[22 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[114 + outPos] = (byte)((int)((in[22 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[115 + outPos] = (byte)((int)(in[23 + inPos] & 1099511627775L & 255L));
         out[116 + outPos] = (byte)((int)((in[23 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[117 + outPos] = (byte)((int)((in[23 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[118 + outPos] = (byte)((int)((in[23 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[119 + outPos] = (byte)((int)((in[23 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[120 + outPos] = (byte)((int)(in[24 + inPos] & 1099511627775L & 255L));
         out[121 + outPos] = (byte)((int)((in[24 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[122 + outPos] = (byte)((int)((in[24 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[123 + outPos] = (byte)((int)((in[24 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[124 + outPos] = (byte)((int)((in[24 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[125 + outPos] = (byte)((int)(in[25 + inPos] & 1099511627775L & 255L));
         out[126 + outPos] = (byte)((int)((in[25 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[127 + outPos] = (byte)((int)((in[25 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[128 + outPos] = (byte)((int)((in[25 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[129 + outPos] = (byte)((int)((in[25 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[130 + outPos] = (byte)((int)(in[26 + inPos] & 1099511627775L & 255L));
         out[131 + outPos] = (byte)((int)((in[26 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[132 + outPos] = (byte)((int)((in[26 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[133 + outPos] = (byte)((int)((in[26 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[134 + outPos] = (byte)((int)((in[26 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[135 + outPos] = (byte)((int)(in[27 + inPos] & 1099511627775L & 255L));
         out[136 + outPos] = (byte)((int)((in[27 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[137 + outPos] = (byte)((int)((in[27 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[138 + outPos] = (byte)((int)((in[27 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[139 + outPos] = (byte)((int)((in[27 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[140 + outPos] = (byte)((int)(in[28 + inPos] & 1099511627775L & 255L));
         out[141 + outPos] = (byte)((int)((in[28 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[142 + outPos] = (byte)((int)((in[28 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[143 + outPos] = (byte)((int)((in[28 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[144 + outPos] = (byte)((int)((in[28 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[145 + outPos] = (byte)((int)(in[29 + inPos] & 1099511627775L & 255L));
         out[146 + outPos] = (byte)((int)((in[29 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[147 + outPos] = (byte)((int)((in[29 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[148 + outPos] = (byte)((int)((in[29 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[149 + outPos] = (byte)((int)((in[29 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[150 + outPos] = (byte)((int)(in[30 + inPos] & 1099511627775L & 255L));
         out[151 + outPos] = (byte)((int)((in[30 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[152 + outPos] = (byte)((int)((in[30 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[153 + outPos] = (byte)((int)((in[30 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[154 + outPos] = (byte)((int)((in[30 + inPos] & 1099511627775L) >>> 32 & 255L));
         out[155 + outPos] = (byte)((int)(in[31 + inPos] & 1099511627775L & 255L));
         out[156 + outPos] = (byte)((int)((in[31 + inPos] & 1099511627775L) >>> 8 & 255L));
         out[157 + outPos] = (byte)((int)((in[31 + inPos] & 1099511627775L) >>> 16 & 255L));
         out[158 + outPos] = (byte)((int)((in[31 + inPos] & 1099511627775L) >>> 24 & 255L));
         out[159 + outPos] = (byte)((int)((in[31 + inPos] & 1099511627775L) >>> 32 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L;
         out[1 + outPos] = (long)in[5 + inPos] & 255L | (long)in[6 + inPos] << 8 & 65535L | (long)in[7 + inPos] << 16 & 16777215L | (long)in[8 + inPos] << 24 & 4294967295L | (long)in[9 + inPos] << 32 & 1099511627775L;
         out[2 + outPos] = (long)in[10 + inPos] & 255L | (long)in[11 + inPos] << 8 & 65535L | (long)in[12 + inPos] << 16 & 16777215L | (long)in[13 + inPos] << 24 & 4294967295L | (long)in[14 + inPos] << 32 & 1099511627775L;
         out[3 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 65535L | (long)in[17 + inPos] << 16 & 16777215L | (long)in[18 + inPos] << 24 & 4294967295L | (long)in[19 + inPos] << 32 & 1099511627775L;
         out[4 + outPos] = (long)in[20 + inPos] & 255L | (long)in[21 + inPos] << 8 & 65535L | (long)in[22 + inPos] << 16 & 16777215L | (long)in[23 + inPos] << 24 & 4294967295L | (long)in[24 + inPos] << 32 & 1099511627775L;
         out[5 + outPos] = (long)in[25 + inPos] & 255L | (long)in[26 + inPos] << 8 & 65535L | (long)in[27 + inPos] << 16 & 16777215L | (long)in[28 + inPos] << 24 & 4294967295L | (long)in[29 + inPos] << 32 & 1099511627775L;
         out[6 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 65535L | (long)in[32 + inPos] << 16 & 16777215L | (long)in[33 + inPos] << 24 & 4294967295L | (long)in[34 + inPos] << 32 & 1099511627775L;
         out[7 + outPos] = (long)in[35 + inPos] & 255L | (long)in[36 + inPos] << 8 & 65535L | (long)in[37 + inPos] << 16 & 16777215L | (long)in[38 + inPos] << 24 & 4294967295L | (long)in[39 + inPos] << 32 & 1099511627775L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L;
         out[1 + outPos] = (long)in.get(5 + inPos) & 255L | (long)in.get(6 + inPos) << 8 & 65535L | (long)in.get(7 + inPos) << 16 & 16777215L | (long)in.get(8 + inPos) << 24 & 4294967295L | (long)in.get(9 + inPos) << 32 & 1099511627775L;
         out[2 + outPos] = (long)in.get(10 + inPos) & 255L | (long)in.get(11 + inPos) << 8 & 65535L | (long)in.get(12 + inPos) << 16 & 16777215L | (long)in.get(13 + inPos) << 24 & 4294967295L | (long)in.get(14 + inPos) << 32 & 1099511627775L;
         out[3 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 65535L | (long)in.get(17 + inPos) << 16 & 16777215L | (long)in.get(18 + inPos) << 24 & 4294967295L | (long)in.get(19 + inPos) << 32 & 1099511627775L;
         out[4 + outPos] = (long)in.get(20 + inPos) & 255L | (long)in.get(21 + inPos) << 8 & 65535L | (long)in.get(22 + inPos) << 16 & 16777215L | (long)in.get(23 + inPos) << 24 & 4294967295L | (long)in.get(24 + inPos) << 32 & 1099511627775L;
         out[5 + outPos] = (long)in.get(25 + inPos) & 255L | (long)in.get(26 + inPos) << 8 & 65535L | (long)in.get(27 + inPos) << 16 & 16777215L | (long)in.get(28 + inPos) << 24 & 4294967295L | (long)in.get(29 + inPos) << 32 & 1099511627775L;
         out[6 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 65535L | (long)in.get(32 + inPos) << 16 & 16777215L | (long)in.get(33 + inPos) << 24 & 4294967295L | (long)in.get(34 + inPos) << 32 & 1099511627775L;
         out[7 + outPos] = (long)in.get(35 + inPos) & 255L | (long)in.get(36 + inPos) << 8 & 65535L | (long)in.get(37 + inPos) << 16 & 16777215L | (long)in.get(38 + inPos) << 24 & 4294967295L | (long)in.get(39 + inPos) << 32 & 1099511627775L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L;
         out[1 + outPos] = (long)in[5 + inPos] & 255L | (long)in[6 + inPos] << 8 & 65535L | (long)in[7 + inPos] << 16 & 16777215L | (long)in[8 + inPos] << 24 & 4294967295L | (long)in[9 + inPos] << 32 & 1099511627775L;
         out[2 + outPos] = (long)in[10 + inPos] & 255L | (long)in[11 + inPos] << 8 & 65535L | (long)in[12 + inPos] << 16 & 16777215L | (long)in[13 + inPos] << 24 & 4294967295L | (long)in[14 + inPos] << 32 & 1099511627775L;
         out[3 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 65535L | (long)in[17 + inPos] << 16 & 16777215L | (long)in[18 + inPos] << 24 & 4294967295L | (long)in[19 + inPos] << 32 & 1099511627775L;
         out[4 + outPos] = (long)in[20 + inPos] & 255L | (long)in[21 + inPos] << 8 & 65535L | (long)in[22 + inPos] << 16 & 16777215L | (long)in[23 + inPos] << 24 & 4294967295L | (long)in[24 + inPos] << 32 & 1099511627775L;
         out[5 + outPos] = (long)in[25 + inPos] & 255L | (long)in[26 + inPos] << 8 & 65535L | (long)in[27 + inPos] << 16 & 16777215L | (long)in[28 + inPos] << 24 & 4294967295L | (long)in[29 + inPos] << 32 & 1099511627775L;
         out[6 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 65535L | (long)in[32 + inPos] << 16 & 16777215L | (long)in[33 + inPos] << 24 & 4294967295L | (long)in[34 + inPos] << 32 & 1099511627775L;
         out[7 + outPos] = (long)in[35 + inPos] & 255L | (long)in[36 + inPos] << 8 & 65535L | (long)in[37 + inPos] << 16 & 16777215L | (long)in[38 + inPos] << 24 & 4294967295L | (long)in[39 + inPos] << 32 & 1099511627775L;
         out[8 + outPos] = (long)in[40 + inPos] & 255L | (long)in[41 + inPos] << 8 & 65535L | (long)in[42 + inPos] << 16 & 16777215L | (long)in[43 + inPos] << 24 & 4294967295L | (long)in[44 + inPos] << 32 & 1099511627775L;
         out[9 + outPos] = (long)in[45 + inPos] & 255L | (long)in[46 + inPos] << 8 & 65535L | (long)in[47 + inPos] << 16 & 16777215L | (long)in[48 + inPos] << 24 & 4294967295L | (long)in[49 + inPos] << 32 & 1099511627775L;
         out[10 + outPos] = (long)in[50 + inPos] & 255L | (long)in[51 + inPos] << 8 & 65535L | (long)in[52 + inPos] << 16 & 16777215L | (long)in[53 + inPos] << 24 & 4294967295L | (long)in[54 + inPos] << 32 & 1099511627775L;
         out[11 + outPos] = (long)in[55 + inPos] & 255L | (long)in[56 + inPos] << 8 & 65535L | (long)in[57 + inPos] << 16 & 16777215L | (long)in[58 + inPos] << 24 & 4294967295L | (long)in[59 + inPos] << 32 & 1099511627775L;
         out[12 + outPos] = (long)in[60 + inPos] & 255L | (long)in[61 + inPos] << 8 & 65535L | (long)in[62 + inPos] << 16 & 16777215L | (long)in[63 + inPos] << 24 & 4294967295L | (long)in[64 + inPos] << 32 & 1099511627775L;
         out[13 + outPos] = (long)in[65 + inPos] & 255L | (long)in[66 + inPos] << 8 & 65535L | (long)in[67 + inPos] << 16 & 16777215L | (long)in[68 + inPos] << 24 & 4294967295L | (long)in[69 + inPos] << 32 & 1099511627775L;
         out[14 + outPos] = (long)in[70 + inPos] & 255L | (long)in[71 + inPos] << 8 & 65535L | (long)in[72 + inPos] << 16 & 16777215L | (long)in[73 + inPos] << 24 & 4294967295L | (long)in[74 + inPos] << 32 & 1099511627775L;
         out[15 + outPos] = (long)in[75 + inPos] & 255L | (long)in[76 + inPos] << 8 & 65535L | (long)in[77 + inPos] << 16 & 16777215L | (long)in[78 + inPos] << 24 & 4294967295L | (long)in[79 + inPos] << 32 & 1099511627775L;
         out[16 + outPos] = (long)in[80 + inPos] & 255L | (long)in[81 + inPos] << 8 & 65535L | (long)in[82 + inPos] << 16 & 16777215L | (long)in[83 + inPos] << 24 & 4294967295L | (long)in[84 + inPos] << 32 & 1099511627775L;
         out[17 + outPos] = (long)in[85 + inPos] & 255L | (long)in[86 + inPos] << 8 & 65535L | (long)in[87 + inPos] << 16 & 16777215L | (long)in[88 + inPos] << 24 & 4294967295L | (long)in[89 + inPos] << 32 & 1099511627775L;
         out[18 + outPos] = (long)in[90 + inPos] & 255L | (long)in[91 + inPos] << 8 & 65535L | (long)in[92 + inPos] << 16 & 16777215L | (long)in[93 + inPos] << 24 & 4294967295L | (long)in[94 + inPos] << 32 & 1099511627775L;
         out[19 + outPos] = (long)in[95 + inPos] & 255L | (long)in[96 + inPos] << 8 & 65535L | (long)in[97 + inPos] << 16 & 16777215L | (long)in[98 + inPos] << 24 & 4294967295L | (long)in[99 + inPos] << 32 & 1099511627775L;
         out[20 + outPos] = (long)in[100 + inPos] & 255L | (long)in[101 + inPos] << 8 & 65535L | (long)in[102 + inPos] << 16 & 16777215L | (long)in[103 + inPos] << 24 & 4294967295L | (long)in[104 + inPos] << 32 & 1099511627775L;
         out[21 + outPos] = (long)in[105 + inPos] & 255L | (long)in[106 + inPos] << 8 & 65535L | (long)in[107 + inPos] << 16 & 16777215L | (long)in[108 + inPos] << 24 & 4294967295L | (long)in[109 + inPos] << 32 & 1099511627775L;
         out[22 + outPos] = (long)in[110 + inPos] & 255L | (long)in[111 + inPos] << 8 & 65535L | (long)in[112 + inPos] << 16 & 16777215L | (long)in[113 + inPos] << 24 & 4294967295L | (long)in[114 + inPos] << 32 & 1099511627775L;
         out[23 + outPos] = (long)in[115 + inPos] & 255L | (long)in[116 + inPos] << 8 & 65535L | (long)in[117 + inPos] << 16 & 16777215L | (long)in[118 + inPos] << 24 & 4294967295L | (long)in[119 + inPos] << 32 & 1099511627775L;
         out[24 + outPos] = (long)in[120 + inPos] & 255L | (long)in[121 + inPos] << 8 & 65535L | (long)in[122 + inPos] << 16 & 16777215L | (long)in[123 + inPos] << 24 & 4294967295L | (long)in[124 + inPos] << 32 & 1099511627775L;
         out[25 + outPos] = (long)in[125 + inPos] & 255L | (long)in[126 + inPos] << 8 & 65535L | (long)in[127 + inPos] << 16 & 16777215L | (long)in[128 + inPos] << 24 & 4294967295L | (long)in[129 + inPos] << 32 & 1099511627775L;
         out[26 + outPos] = (long)in[130 + inPos] & 255L | (long)in[131 + inPos] << 8 & 65535L | (long)in[132 + inPos] << 16 & 16777215L | (long)in[133 + inPos] << 24 & 4294967295L | (long)in[134 + inPos] << 32 & 1099511627775L;
         out[27 + outPos] = (long)in[135 + inPos] & 255L | (long)in[136 + inPos] << 8 & 65535L | (long)in[137 + inPos] << 16 & 16777215L | (long)in[138 + inPos] << 24 & 4294967295L | (long)in[139 + inPos] << 32 & 1099511627775L;
         out[28 + outPos] = (long)in[140 + inPos] & 255L | (long)in[141 + inPos] << 8 & 65535L | (long)in[142 + inPos] << 16 & 16777215L | (long)in[143 + inPos] << 24 & 4294967295L | (long)in[144 + inPos] << 32 & 1099511627775L;
         out[29 + outPos] = (long)in[145 + inPos] & 255L | (long)in[146 + inPos] << 8 & 65535L | (long)in[147 + inPos] << 16 & 16777215L | (long)in[148 + inPos] << 24 & 4294967295L | (long)in[149 + inPos] << 32 & 1099511627775L;
         out[30 + outPos] = (long)in[150 + inPos] & 255L | (long)in[151 + inPos] << 8 & 65535L | (long)in[152 + inPos] << 16 & 16777215L | (long)in[153 + inPos] << 24 & 4294967295L | (long)in[154 + inPos] << 32 & 1099511627775L;
         out[31 + outPos] = (long)in[155 + inPos] & 255L | (long)in[156 + inPos] << 8 & 65535L | (long)in[157 + inPos] << 16 & 16777215L | (long)in[158 + inPos] << 24 & 4294967295L | (long)in[159 + inPos] << 32 & 1099511627775L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L;
         out[1 + outPos] = (long)in.get(5 + inPos) & 255L | (long)in.get(6 + inPos) << 8 & 65535L | (long)in.get(7 + inPos) << 16 & 16777215L | (long)in.get(8 + inPos) << 24 & 4294967295L | (long)in.get(9 + inPos) << 32 & 1099511627775L;
         out[2 + outPos] = (long)in.get(10 + inPos) & 255L | (long)in.get(11 + inPos) << 8 & 65535L | (long)in.get(12 + inPos) << 16 & 16777215L | (long)in.get(13 + inPos) << 24 & 4294967295L | (long)in.get(14 + inPos) << 32 & 1099511627775L;
         out[3 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 65535L | (long)in.get(17 + inPos) << 16 & 16777215L | (long)in.get(18 + inPos) << 24 & 4294967295L | (long)in.get(19 + inPos) << 32 & 1099511627775L;
         out[4 + outPos] = (long)in.get(20 + inPos) & 255L | (long)in.get(21 + inPos) << 8 & 65535L | (long)in.get(22 + inPos) << 16 & 16777215L | (long)in.get(23 + inPos) << 24 & 4294967295L | (long)in.get(24 + inPos) << 32 & 1099511627775L;
         out[5 + outPos] = (long)in.get(25 + inPos) & 255L | (long)in.get(26 + inPos) << 8 & 65535L | (long)in.get(27 + inPos) << 16 & 16777215L | (long)in.get(28 + inPos) << 24 & 4294967295L | (long)in.get(29 + inPos) << 32 & 1099511627775L;
         out[6 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 65535L | (long)in.get(32 + inPos) << 16 & 16777215L | (long)in.get(33 + inPos) << 24 & 4294967295L | (long)in.get(34 + inPos) << 32 & 1099511627775L;
         out[7 + outPos] = (long)in.get(35 + inPos) & 255L | (long)in.get(36 + inPos) << 8 & 65535L | (long)in.get(37 + inPos) << 16 & 16777215L | (long)in.get(38 + inPos) << 24 & 4294967295L | (long)in.get(39 + inPos) << 32 & 1099511627775L;
         out[8 + outPos] = (long)in.get(40 + inPos) & 255L | (long)in.get(41 + inPos) << 8 & 65535L | (long)in.get(42 + inPos) << 16 & 16777215L | (long)in.get(43 + inPos) << 24 & 4294967295L | (long)in.get(44 + inPos) << 32 & 1099511627775L;
         out[9 + outPos] = (long)in.get(45 + inPos) & 255L | (long)in.get(46 + inPos) << 8 & 65535L | (long)in.get(47 + inPos) << 16 & 16777215L | (long)in.get(48 + inPos) << 24 & 4294967295L | (long)in.get(49 + inPos) << 32 & 1099511627775L;
         out[10 + outPos] = (long)in.get(50 + inPos) & 255L | (long)in.get(51 + inPos) << 8 & 65535L | (long)in.get(52 + inPos) << 16 & 16777215L | (long)in.get(53 + inPos) << 24 & 4294967295L | (long)in.get(54 + inPos) << 32 & 1099511627775L;
         out[11 + outPos] = (long)in.get(55 + inPos) & 255L | (long)in.get(56 + inPos) << 8 & 65535L | (long)in.get(57 + inPos) << 16 & 16777215L | (long)in.get(58 + inPos) << 24 & 4294967295L | (long)in.get(59 + inPos) << 32 & 1099511627775L;
         out[12 + outPos] = (long)in.get(60 + inPos) & 255L | (long)in.get(61 + inPos) << 8 & 65535L | (long)in.get(62 + inPos) << 16 & 16777215L | (long)in.get(63 + inPos) << 24 & 4294967295L | (long)in.get(64 + inPos) << 32 & 1099511627775L;
         out[13 + outPos] = (long)in.get(65 + inPos) & 255L | (long)in.get(66 + inPos) << 8 & 65535L | (long)in.get(67 + inPos) << 16 & 16777215L | (long)in.get(68 + inPos) << 24 & 4294967295L | (long)in.get(69 + inPos) << 32 & 1099511627775L;
         out[14 + outPos] = (long)in.get(70 + inPos) & 255L | (long)in.get(71 + inPos) << 8 & 65535L | (long)in.get(72 + inPos) << 16 & 16777215L | (long)in.get(73 + inPos) << 24 & 4294967295L | (long)in.get(74 + inPos) << 32 & 1099511627775L;
         out[15 + outPos] = (long)in.get(75 + inPos) & 255L | (long)in.get(76 + inPos) << 8 & 65535L | (long)in.get(77 + inPos) << 16 & 16777215L | (long)in.get(78 + inPos) << 24 & 4294967295L | (long)in.get(79 + inPos) << 32 & 1099511627775L;
         out[16 + outPos] = (long)in.get(80 + inPos) & 255L | (long)in.get(81 + inPos) << 8 & 65535L | (long)in.get(82 + inPos) << 16 & 16777215L | (long)in.get(83 + inPos) << 24 & 4294967295L | (long)in.get(84 + inPos) << 32 & 1099511627775L;
         out[17 + outPos] = (long)in.get(85 + inPos) & 255L | (long)in.get(86 + inPos) << 8 & 65535L | (long)in.get(87 + inPos) << 16 & 16777215L | (long)in.get(88 + inPos) << 24 & 4294967295L | (long)in.get(89 + inPos) << 32 & 1099511627775L;
         out[18 + outPos] = (long)in.get(90 + inPos) & 255L | (long)in.get(91 + inPos) << 8 & 65535L | (long)in.get(92 + inPos) << 16 & 16777215L | (long)in.get(93 + inPos) << 24 & 4294967295L | (long)in.get(94 + inPos) << 32 & 1099511627775L;
         out[19 + outPos] = (long)in.get(95 + inPos) & 255L | (long)in.get(96 + inPos) << 8 & 65535L | (long)in.get(97 + inPos) << 16 & 16777215L | (long)in.get(98 + inPos) << 24 & 4294967295L | (long)in.get(99 + inPos) << 32 & 1099511627775L;
         out[20 + outPos] = (long)in.get(100 + inPos) & 255L | (long)in.get(101 + inPos) << 8 & 65535L | (long)in.get(102 + inPos) << 16 & 16777215L | (long)in.get(103 + inPos) << 24 & 4294967295L | (long)in.get(104 + inPos) << 32 & 1099511627775L;
         out[21 + outPos] = (long)in.get(105 + inPos) & 255L | (long)in.get(106 + inPos) << 8 & 65535L | (long)in.get(107 + inPos) << 16 & 16777215L | (long)in.get(108 + inPos) << 24 & 4294967295L | (long)in.get(109 + inPos) << 32 & 1099511627775L;
         out[22 + outPos] = (long)in.get(110 + inPos) & 255L | (long)in.get(111 + inPos) << 8 & 65535L | (long)in.get(112 + inPos) << 16 & 16777215L | (long)in.get(113 + inPos) << 24 & 4294967295L | (long)in.get(114 + inPos) << 32 & 1099511627775L;
         out[23 + outPos] = (long)in.get(115 + inPos) & 255L | (long)in.get(116 + inPos) << 8 & 65535L | (long)in.get(117 + inPos) << 16 & 16777215L | (long)in.get(118 + inPos) << 24 & 4294967295L | (long)in.get(119 + inPos) << 32 & 1099511627775L;
         out[24 + outPos] = (long)in.get(120 + inPos) & 255L | (long)in.get(121 + inPos) << 8 & 65535L | (long)in.get(122 + inPos) << 16 & 16777215L | (long)in.get(123 + inPos) << 24 & 4294967295L | (long)in.get(124 + inPos) << 32 & 1099511627775L;
         out[25 + outPos] = (long)in.get(125 + inPos) & 255L | (long)in.get(126 + inPos) << 8 & 65535L | (long)in.get(127 + inPos) << 16 & 16777215L | (long)in.get(128 + inPos) << 24 & 4294967295L | (long)in.get(129 + inPos) << 32 & 1099511627775L;
         out[26 + outPos] = (long)in.get(130 + inPos) & 255L | (long)in.get(131 + inPos) << 8 & 65535L | (long)in.get(132 + inPos) << 16 & 16777215L | (long)in.get(133 + inPos) << 24 & 4294967295L | (long)in.get(134 + inPos) << 32 & 1099511627775L;
         out[27 + outPos] = (long)in.get(135 + inPos) & 255L | (long)in.get(136 + inPos) << 8 & 65535L | (long)in.get(137 + inPos) << 16 & 16777215L | (long)in.get(138 + inPos) << 24 & 4294967295L | (long)in.get(139 + inPos) << 32 & 1099511627775L;
         out[28 + outPos] = (long)in.get(140 + inPos) & 255L | (long)in.get(141 + inPos) << 8 & 65535L | (long)in.get(142 + inPos) << 16 & 16777215L | (long)in.get(143 + inPos) << 24 & 4294967295L | (long)in.get(144 + inPos) << 32 & 1099511627775L;
         out[29 + outPos] = (long)in.get(145 + inPos) & 255L | (long)in.get(146 + inPos) << 8 & 65535L | (long)in.get(147 + inPos) << 16 & 16777215L | (long)in.get(148 + inPos) << 24 & 4294967295L | (long)in.get(149 + inPos) << 32 & 1099511627775L;
         out[30 + outPos] = (long)in.get(150 + inPos) & 255L | (long)in.get(151 + inPos) << 8 & 65535L | (long)in.get(152 + inPos) << 16 & 16777215L | (long)in.get(153 + inPos) << 24 & 4294967295L | (long)in.get(154 + inPos) << 32 & 1099511627775L;
         out[31 + outPos] = (long)in.get(155 + inPos) & 255L | (long)in.get(156 + inPos) << 8 & 65535L | (long)in.get(157 + inPos) << 16 & 16777215L | (long)in.get(158 + inPos) << 24 & 4294967295L | (long)in.get(159 + inPos) << 32 & 1099511627775L;
      }
   }

   private static final class Packer41 extends BytePackerForLong {
      private Packer41() {
         super(41);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 2199023255551L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 2199023255551L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 2199023255551L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 2199023255551L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 2199023255551L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 2199023255551L) >>> 40 | (in[1 + inPos] & 2199023255551L) << 1) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 2199023255551L) >>> 7 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 2199023255551L) >>> 15 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 2199023255551L) >>> 23 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 2199023255551L) >>> 31 & 255L));
         out[10 + outPos] = (byte)((int)(((in[1 + inPos] & 2199023255551L) >>> 39 | (in[2 + inPos] & 2199023255551L) << 2) & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 2199023255551L) >>> 6 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 2199023255551L) >>> 14 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 2199023255551L) >>> 22 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 2199023255551L) >>> 30 & 255L));
         out[15 + outPos] = (byte)((int)(((in[2 + inPos] & 2199023255551L) >>> 38 | (in[3 + inPos] & 2199023255551L) << 3) & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 2199023255551L) >>> 5 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 2199023255551L) >>> 13 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 2199023255551L) >>> 21 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 2199023255551L) >>> 29 & 255L));
         out[20 + outPos] = (byte)((int)(((in[3 + inPos] & 2199023255551L) >>> 37 | (in[4 + inPos] & 2199023255551L) << 4) & 255L));
         out[21 + outPos] = (byte)((int)((in[4 + inPos] & 2199023255551L) >>> 4 & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 2199023255551L) >>> 12 & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 2199023255551L) >>> 20 & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 2199023255551L) >>> 28 & 255L));
         out[25 + outPos] = (byte)((int)(((in[4 + inPos] & 2199023255551L) >>> 36 | (in[5 + inPos] & 2199023255551L) << 5) & 255L));
         out[26 + outPos] = (byte)((int)((in[5 + inPos] & 2199023255551L) >>> 3 & 255L));
         out[27 + outPos] = (byte)((int)((in[5 + inPos] & 2199023255551L) >>> 11 & 255L));
         out[28 + outPos] = (byte)((int)((in[5 + inPos] & 2199023255551L) >>> 19 & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 2199023255551L) >>> 27 & 255L));
         out[30 + outPos] = (byte)((int)(((in[5 + inPos] & 2199023255551L) >>> 35 | (in[6 + inPos] & 2199023255551L) << 6) & 255L));
         out[31 + outPos] = (byte)((int)((in[6 + inPos] & 2199023255551L) >>> 2 & 255L));
         out[32 + outPos] = (byte)((int)((in[6 + inPos] & 2199023255551L) >>> 10 & 255L));
         out[33 + outPos] = (byte)((int)((in[6 + inPos] & 2199023255551L) >>> 18 & 255L));
         out[34 + outPos] = (byte)((int)((in[6 + inPos] & 2199023255551L) >>> 26 & 255L));
         out[35 + outPos] = (byte)((int)(((in[6 + inPos] & 2199023255551L) >>> 34 | (in[7 + inPos] & 2199023255551L) << 7) & 255L));
         out[36 + outPos] = (byte)((int)((in[7 + inPos] & 2199023255551L) >>> 1 & 255L));
         out[37 + outPos] = (byte)((int)((in[7 + inPos] & 2199023255551L) >>> 9 & 255L));
         out[38 + outPos] = (byte)((int)((in[7 + inPos] & 2199023255551L) >>> 17 & 255L));
         out[39 + outPos] = (byte)((int)((in[7 + inPos] & 2199023255551L) >>> 25 & 255L));
         out[40 + outPos] = (byte)((int)((in[7 + inPos] & 2199023255551L) >>> 33 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 2199023255551L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 2199023255551L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 2199023255551L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 2199023255551L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 2199023255551L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 2199023255551L) >>> 40 | (in[1 + inPos] & 2199023255551L) << 1) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 2199023255551L) >>> 7 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 2199023255551L) >>> 15 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 2199023255551L) >>> 23 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 2199023255551L) >>> 31 & 255L));
         out[10 + outPos] = (byte)((int)(((in[1 + inPos] & 2199023255551L) >>> 39 | (in[2 + inPos] & 2199023255551L) << 2) & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 2199023255551L) >>> 6 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 2199023255551L) >>> 14 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 2199023255551L) >>> 22 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 2199023255551L) >>> 30 & 255L));
         out[15 + outPos] = (byte)((int)(((in[2 + inPos] & 2199023255551L) >>> 38 | (in[3 + inPos] & 2199023255551L) << 3) & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 2199023255551L) >>> 5 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 2199023255551L) >>> 13 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 2199023255551L) >>> 21 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 2199023255551L) >>> 29 & 255L));
         out[20 + outPos] = (byte)((int)(((in[3 + inPos] & 2199023255551L) >>> 37 | (in[4 + inPos] & 2199023255551L) << 4) & 255L));
         out[21 + outPos] = (byte)((int)((in[4 + inPos] & 2199023255551L) >>> 4 & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 2199023255551L) >>> 12 & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 2199023255551L) >>> 20 & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 2199023255551L) >>> 28 & 255L));
         out[25 + outPos] = (byte)((int)(((in[4 + inPos] & 2199023255551L) >>> 36 | (in[5 + inPos] & 2199023255551L) << 5) & 255L));
         out[26 + outPos] = (byte)((int)((in[5 + inPos] & 2199023255551L) >>> 3 & 255L));
         out[27 + outPos] = (byte)((int)((in[5 + inPos] & 2199023255551L) >>> 11 & 255L));
         out[28 + outPos] = (byte)((int)((in[5 + inPos] & 2199023255551L) >>> 19 & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 2199023255551L) >>> 27 & 255L));
         out[30 + outPos] = (byte)((int)(((in[5 + inPos] & 2199023255551L) >>> 35 | (in[6 + inPos] & 2199023255551L) << 6) & 255L));
         out[31 + outPos] = (byte)((int)((in[6 + inPos] & 2199023255551L) >>> 2 & 255L));
         out[32 + outPos] = (byte)((int)((in[6 + inPos] & 2199023255551L) >>> 10 & 255L));
         out[33 + outPos] = (byte)((int)((in[6 + inPos] & 2199023255551L) >>> 18 & 255L));
         out[34 + outPos] = (byte)((int)((in[6 + inPos] & 2199023255551L) >>> 26 & 255L));
         out[35 + outPos] = (byte)((int)(((in[6 + inPos] & 2199023255551L) >>> 34 | (in[7 + inPos] & 2199023255551L) << 7) & 255L));
         out[36 + outPos] = (byte)((int)((in[7 + inPos] & 2199023255551L) >>> 1 & 255L));
         out[37 + outPos] = (byte)((int)((in[7 + inPos] & 2199023255551L) >>> 9 & 255L));
         out[38 + outPos] = (byte)((int)((in[7 + inPos] & 2199023255551L) >>> 17 & 255L));
         out[39 + outPos] = (byte)((int)((in[7 + inPos] & 2199023255551L) >>> 25 & 255L));
         out[40 + outPos] = (byte)((int)((in[7 + inPos] & 2199023255551L) >>> 33 & 255L));
         out[41 + outPos] = (byte)((int)(in[8 + inPos] & 2199023255551L & 255L));
         out[42 + outPos] = (byte)((int)((in[8 + inPos] & 2199023255551L) >>> 8 & 255L));
         out[43 + outPos] = (byte)((int)((in[8 + inPos] & 2199023255551L) >>> 16 & 255L));
         out[44 + outPos] = (byte)((int)((in[8 + inPos] & 2199023255551L) >>> 24 & 255L));
         out[45 + outPos] = (byte)((int)((in[8 + inPos] & 2199023255551L) >>> 32 & 255L));
         out[46 + outPos] = (byte)((int)(((in[8 + inPos] & 2199023255551L) >>> 40 | (in[9 + inPos] & 2199023255551L) << 1) & 255L));
         out[47 + outPos] = (byte)((int)((in[9 + inPos] & 2199023255551L) >>> 7 & 255L));
         out[48 + outPos] = (byte)((int)((in[9 + inPos] & 2199023255551L) >>> 15 & 255L));
         out[49 + outPos] = (byte)((int)((in[9 + inPos] & 2199023255551L) >>> 23 & 255L));
         out[50 + outPos] = (byte)((int)((in[9 + inPos] & 2199023255551L) >>> 31 & 255L));
         out[51 + outPos] = (byte)((int)(((in[9 + inPos] & 2199023255551L) >>> 39 | (in[10 + inPos] & 2199023255551L) << 2) & 255L));
         out[52 + outPos] = (byte)((int)((in[10 + inPos] & 2199023255551L) >>> 6 & 255L));
         out[53 + outPos] = (byte)((int)((in[10 + inPos] & 2199023255551L) >>> 14 & 255L));
         out[54 + outPos] = (byte)((int)((in[10 + inPos] & 2199023255551L) >>> 22 & 255L));
         out[55 + outPos] = (byte)((int)((in[10 + inPos] & 2199023255551L) >>> 30 & 255L));
         out[56 + outPos] = (byte)((int)(((in[10 + inPos] & 2199023255551L) >>> 38 | (in[11 + inPos] & 2199023255551L) << 3) & 255L));
         out[57 + outPos] = (byte)((int)((in[11 + inPos] & 2199023255551L) >>> 5 & 255L));
         out[58 + outPos] = (byte)((int)((in[11 + inPos] & 2199023255551L) >>> 13 & 255L));
         out[59 + outPos] = (byte)((int)((in[11 + inPos] & 2199023255551L) >>> 21 & 255L));
         out[60 + outPos] = (byte)((int)((in[11 + inPos] & 2199023255551L) >>> 29 & 255L));
         out[61 + outPos] = (byte)((int)(((in[11 + inPos] & 2199023255551L) >>> 37 | (in[12 + inPos] & 2199023255551L) << 4) & 255L));
         out[62 + outPos] = (byte)((int)((in[12 + inPos] & 2199023255551L) >>> 4 & 255L));
         out[63 + outPos] = (byte)((int)((in[12 + inPos] & 2199023255551L) >>> 12 & 255L));
         out[64 + outPos] = (byte)((int)((in[12 + inPos] & 2199023255551L) >>> 20 & 255L));
         out[65 + outPos] = (byte)((int)((in[12 + inPos] & 2199023255551L) >>> 28 & 255L));
         out[66 + outPos] = (byte)((int)(((in[12 + inPos] & 2199023255551L) >>> 36 | (in[13 + inPos] & 2199023255551L) << 5) & 255L));
         out[67 + outPos] = (byte)((int)((in[13 + inPos] & 2199023255551L) >>> 3 & 255L));
         out[68 + outPos] = (byte)((int)((in[13 + inPos] & 2199023255551L) >>> 11 & 255L));
         out[69 + outPos] = (byte)((int)((in[13 + inPos] & 2199023255551L) >>> 19 & 255L));
         out[70 + outPos] = (byte)((int)((in[13 + inPos] & 2199023255551L) >>> 27 & 255L));
         out[71 + outPos] = (byte)((int)(((in[13 + inPos] & 2199023255551L) >>> 35 | (in[14 + inPos] & 2199023255551L) << 6) & 255L));
         out[72 + outPos] = (byte)((int)((in[14 + inPos] & 2199023255551L) >>> 2 & 255L));
         out[73 + outPos] = (byte)((int)((in[14 + inPos] & 2199023255551L) >>> 10 & 255L));
         out[74 + outPos] = (byte)((int)((in[14 + inPos] & 2199023255551L) >>> 18 & 255L));
         out[75 + outPos] = (byte)((int)((in[14 + inPos] & 2199023255551L) >>> 26 & 255L));
         out[76 + outPos] = (byte)((int)(((in[14 + inPos] & 2199023255551L) >>> 34 | (in[15 + inPos] & 2199023255551L) << 7) & 255L));
         out[77 + outPos] = (byte)((int)((in[15 + inPos] & 2199023255551L) >>> 1 & 255L));
         out[78 + outPos] = (byte)((int)((in[15 + inPos] & 2199023255551L) >>> 9 & 255L));
         out[79 + outPos] = (byte)((int)((in[15 + inPos] & 2199023255551L) >>> 17 & 255L));
         out[80 + outPos] = (byte)((int)((in[15 + inPos] & 2199023255551L) >>> 25 & 255L));
         out[81 + outPos] = (byte)((int)((in[15 + inPos] & 2199023255551L) >>> 33 & 255L));
         out[82 + outPos] = (byte)((int)(in[16 + inPos] & 2199023255551L & 255L));
         out[83 + outPos] = (byte)((int)((in[16 + inPos] & 2199023255551L) >>> 8 & 255L));
         out[84 + outPos] = (byte)((int)((in[16 + inPos] & 2199023255551L) >>> 16 & 255L));
         out[85 + outPos] = (byte)((int)((in[16 + inPos] & 2199023255551L) >>> 24 & 255L));
         out[86 + outPos] = (byte)((int)((in[16 + inPos] & 2199023255551L) >>> 32 & 255L));
         out[87 + outPos] = (byte)((int)(((in[16 + inPos] & 2199023255551L) >>> 40 | (in[17 + inPos] & 2199023255551L) << 1) & 255L));
         out[88 + outPos] = (byte)((int)((in[17 + inPos] & 2199023255551L) >>> 7 & 255L));
         out[89 + outPos] = (byte)((int)((in[17 + inPos] & 2199023255551L) >>> 15 & 255L));
         out[90 + outPos] = (byte)((int)((in[17 + inPos] & 2199023255551L) >>> 23 & 255L));
         out[91 + outPos] = (byte)((int)((in[17 + inPos] & 2199023255551L) >>> 31 & 255L));
         out[92 + outPos] = (byte)((int)(((in[17 + inPos] & 2199023255551L) >>> 39 | (in[18 + inPos] & 2199023255551L) << 2) & 255L));
         out[93 + outPos] = (byte)((int)((in[18 + inPos] & 2199023255551L) >>> 6 & 255L));
         out[94 + outPos] = (byte)((int)((in[18 + inPos] & 2199023255551L) >>> 14 & 255L));
         out[95 + outPos] = (byte)((int)((in[18 + inPos] & 2199023255551L) >>> 22 & 255L));
         out[96 + outPos] = (byte)((int)((in[18 + inPos] & 2199023255551L) >>> 30 & 255L));
         out[97 + outPos] = (byte)((int)(((in[18 + inPos] & 2199023255551L) >>> 38 | (in[19 + inPos] & 2199023255551L) << 3) & 255L));
         out[98 + outPos] = (byte)((int)((in[19 + inPos] & 2199023255551L) >>> 5 & 255L));
         out[99 + outPos] = (byte)((int)((in[19 + inPos] & 2199023255551L) >>> 13 & 255L));
         out[100 + outPos] = (byte)((int)((in[19 + inPos] & 2199023255551L) >>> 21 & 255L));
         out[101 + outPos] = (byte)((int)((in[19 + inPos] & 2199023255551L) >>> 29 & 255L));
         out[102 + outPos] = (byte)((int)(((in[19 + inPos] & 2199023255551L) >>> 37 | (in[20 + inPos] & 2199023255551L) << 4) & 255L));
         out[103 + outPos] = (byte)((int)((in[20 + inPos] & 2199023255551L) >>> 4 & 255L));
         out[104 + outPos] = (byte)((int)((in[20 + inPos] & 2199023255551L) >>> 12 & 255L));
         out[105 + outPos] = (byte)((int)((in[20 + inPos] & 2199023255551L) >>> 20 & 255L));
         out[106 + outPos] = (byte)((int)((in[20 + inPos] & 2199023255551L) >>> 28 & 255L));
         out[107 + outPos] = (byte)((int)(((in[20 + inPos] & 2199023255551L) >>> 36 | (in[21 + inPos] & 2199023255551L) << 5) & 255L));
         out[108 + outPos] = (byte)((int)((in[21 + inPos] & 2199023255551L) >>> 3 & 255L));
         out[109 + outPos] = (byte)((int)((in[21 + inPos] & 2199023255551L) >>> 11 & 255L));
         out[110 + outPos] = (byte)((int)((in[21 + inPos] & 2199023255551L) >>> 19 & 255L));
         out[111 + outPos] = (byte)((int)((in[21 + inPos] & 2199023255551L) >>> 27 & 255L));
         out[112 + outPos] = (byte)((int)(((in[21 + inPos] & 2199023255551L) >>> 35 | (in[22 + inPos] & 2199023255551L) << 6) & 255L));
         out[113 + outPos] = (byte)((int)((in[22 + inPos] & 2199023255551L) >>> 2 & 255L));
         out[114 + outPos] = (byte)((int)((in[22 + inPos] & 2199023255551L) >>> 10 & 255L));
         out[115 + outPos] = (byte)((int)((in[22 + inPos] & 2199023255551L) >>> 18 & 255L));
         out[116 + outPos] = (byte)((int)((in[22 + inPos] & 2199023255551L) >>> 26 & 255L));
         out[117 + outPos] = (byte)((int)(((in[22 + inPos] & 2199023255551L) >>> 34 | (in[23 + inPos] & 2199023255551L) << 7) & 255L));
         out[118 + outPos] = (byte)((int)((in[23 + inPos] & 2199023255551L) >>> 1 & 255L));
         out[119 + outPos] = (byte)((int)((in[23 + inPos] & 2199023255551L) >>> 9 & 255L));
         out[120 + outPos] = (byte)((int)((in[23 + inPos] & 2199023255551L) >>> 17 & 255L));
         out[121 + outPos] = (byte)((int)((in[23 + inPos] & 2199023255551L) >>> 25 & 255L));
         out[122 + outPos] = (byte)((int)((in[23 + inPos] & 2199023255551L) >>> 33 & 255L));
         out[123 + outPos] = (byte)((int)(in[24 + inPos] & 2199023255551L & 255L));
         out[124 + outPos] = (byte)((int)((in[24 + inPos] & 2199023255551L) >>> 8 & 255L));
         out[125 + outPos] = (byte)((int)((in[24 + inPos] & 2199023255551L) >>> 16 & 255L));
         out[126 + outPos] = (byte)((int)((in[24 + inPos] & 2199023255551L) >>> 24 & 255L));
         out[127 + outPos] = (byte)((int)((in[24 + inPos] & 2199023255551L) >>> 32 & 255L));
         out[128 + outPos] = (byte)((int)(((in[24 + inPos] & 2199023255551L) >>> 40 | (in[25 + inPos] & 2199023255551L) << 1) & 255L));
         out[129 + outPos] = (byte)((int)((in[25 + inPos] & 2199023255551L) >>> 7 & 255L));
         out[130 + outPos] = (byte)((int)((in[25 + inPos] & 2199023255551L) >>> 15 & 255L));
         out[131 + outPos] = (byte)((int)((in[25 + inPos] & 2199023255551L) >>> 23 & 255L));
         out[132 + outPos] = (byte)((int)((in[25 + inPos] & 2199023255551L) >>> 31 & 255L));
         out[133 + outPos] = (byte)((int)(((in[25 + inPos] & 2199023255551L) >>> 39 | (in[26 + inPos] & 2199023255551L) << 2) & 255L));
         out[134 + outPos] = (byte)((int)((in[26 + inPos] & 2199023255551L) >>> 6 & 255L));
         out[135 + outPos] = (byte)((int)((in[26 + inPos] & 2199023255551L) >>> 14 & 255L));
         out[136 + outPos] = (byte)((int)((in[26 + inPos] & 2199023255551L) >>> 22 & 255L));
         out[137 + outPos] = (byte)((int)((in[26 + inPos] & 2199023255551L) >>> 30 & 255L));
         out[138 + outPos] = (byte)((int)(((in[26 + inPos] & 2199023255551L) >>> 38 | (in[27 + inPos] & 2199023255551L) << 3) & 255L));
         out[139 + outPos] = (byte)((int)((in[27 + inPos] & 2199023255551L) >>> 5 & 255L));
         out[140 + outPos] = (byte)((int)((in[27 + inPos] & 2199023255551L) >>> 13 & 255L));
         out[141 + outPos] = (byte)((int)((in[27 + inPos] & 2199023255551L) >>> 21 & 255L));
         out[142 + outPos] = (byte)((int)((in[27 + inPos] & 2199023255551L) >>> 29 & 255L));
         out[143 + outPos] = (byte)((int)(((in[27 + inPos] & 2199023255551L) >>> 37 | (in[28 + inPos] & 2199023255551L) << 4) & 255L));
         out[144 + outPos] = (byte)((int)((in[28 + inPos] & 2199023255551L) >>> 4 & 255L));
         out[145 + outPos] = (byte)((int)((in[28 + inPos] & 2199023255551L) >>> 12 & 255L));
         out[146 + outPos] = (byte)((int)((in[28 + inPos] & 2199023255551L) >>> 20 & 255L));
         out[147 + outPos] = (byte)((int)((in[28 + inPos] & 2199023255551L) >>> 28 & 255L));
         out[148 + outPos] = (byte)((int)(((in[28 + inPos] & 2199023255551L) >>> 36 | (in[29 + inPos] & 2199023255551L) << 5) & 255L));
         out[149 + outPos] = (byte)((int)((in[29 + inPos] & 2199023255551L) >>> 3 & 255L));
         out[150 + outPos] = (byte)((int)((in[29 + inPos] & 2199023255551L) >>> 11 & 255L));
         out[151 + outPos] = (byte)((int)((in[29 + inPos] & 2199023255551L) >>> 19 & 255L));
         out[152 + outPos] = (byte)((int)((in[29 + inPos] & 2199023255551L) >>> 27 & 255L));
         out[153 + outPos] = (byte)((int)(((in[29 + inPos] & 2199023255551L) >>> 35 | (in[30 + inPos] & 2199023255551L) << 6) & 255L));
         out[154 + outPos] = (byte)((int)((in[30 + inPos] & 2199023255551L) >>> 2 & 255L));
         out[155 + outPos] = (byte)((int)((in[30 + inPos] & 2199023255551L) >>> 10 & 255L));
         out[156 + outPos] = (byte)((int)((in[30 + inPos] & 2199023255551L) >>> 18 & 255L));
         out[157 + outPos] = (byte)((int)((in[30 + inPos] & 2199023255551L) >>> 26 & 255L));
         out[158 + outPos] = (byte)((int)(((in[30 + inPos] & 2199023255551L) >>> 34 | (in[31 + inPos] & 2199023255551L) << 7) & 255L));
         out[159 + outPos] = (byte)((int)((in[31 + inPos] & 2199023255551L) >>> 1 & 255L));
         out[160 + outPos] = (byte)((int)((in[31 + inPos] & 2199023255551L) >>> 9 & 255L));
         out[161 + outPos] = (byte)((int)((in[31 + inPos] & 2199023255551L) >>> 17 & 255L));
         out[162 + outPos] = (byte)((int)((in[31 + inPos] & 2199023255551L) >>> 25 & 255L));
         out[163 + outPos] = (byte)((int)((in[31 + inPos] & 2199023255551L) >>> 33 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 2199023255551L;
         out[1 + outPos] = (long)in[5 + inPos] >> 1 & 127L | (long)in[6 + inPos] << 7 & 32767L | (long)in[7 + inPos] << 15 & 8388607L | (long)in[8 + inPos] << 23 & 2147483647L | (long)in[9 + inPos] << 31 & 549755813887L | (long)in[10 + inPos] << 39 & 2199023255551L;
         out[2 + outPos] = (long)in[10 + inPos] >> 2 & 63L | (long)in[11 + inPos] << 6 & 16383L | (long)in[12 + inPos] << 14 & 4194303L | (long)in[13 + inPos] << 22 & 1073741823L | (long)in[14 + inPos] << 30 & 274877906943L | (long)in[15 + inPos] << 38 & 2199023255551L;
         out[3 + outPos] = (long)in[15 + inPos] >> 3 & 31L | (long)in[16 + inPos] << 5 & 8191L | (long)in[17 + inPos] << 13 & 2097151L | (long)in[18 + inPos] << 21 & 536870911L | (long)in[19 + inPos] << 29 & 137438953471L | (long)in[20 + inPos] << 37 & 2199023255551L;
         out[4 + outPos] = (long)in[20 + inPos] >> 4 & 15L | (long)in[21 + inPos] << 4 & 4095L | (long)in[22 + inPos] << 12 & 1048575L | (long)in[23 + inPos] << 20 & 268435455L | (long)in[24 + inPos] << 28 & 68719476735L | (long)in[25 + inPos] << 36 & 2199023255551L;
         out[5 + outPos] = (long)in[25 + inPos] >> 5 & 7L | (long)in[26 + inPos] << 3 & 2047L | (long)in[27 + inPos] << 11 & 524287L | (long)in[28 + inPos] << 19 & 134217727L | (long)in[29 + inPos] << 27 & 34359738367L | (long)in[30 + inPos] << 35 & 2199023255551L;
         out[6 + outPos] = (long)in[30 + inPos] >> 6 & 3L | (long)in[31 + inPos] << 2 & 1023L | (long)in[32 + inPos] << 10 & 262143L | (long)in[33 + inPos] << 18 & 67108863L | (long)in[34 + inPos] << 26 & 17179869183L | (long)in[35 + inPos] << 34 & 2199023255551L;
         out[7 + outPos] = (long)in[35 + inPos] >> 7 & 1L | (long)in[36 + inPos] << 1 & 511L | (long)in[37 + inPos] << 9 & 131071L | (long)in[38 + inPos] << 17 & 33554431L | (long)in[39 + inPos] << 25 & 8589934591L | (long)in[40 + inPos] << 33 & 2199023255551L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 2199023255551L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 1 & 127L | (long)in.get(6 + inPos) << 7 & 32767L | (long)in.get(7 + inPos) << 15 & 8388607L | (long)in.get(8 + inPos) << 23 & 2147483647L | (long)in.get(9 + inPos) << 31 & 549755813887L | (long)in.get(10 + inPos) << 39 & 2199023255551L;
         out[2 + outPos] = (long)in.get(10 + inPos) >> 2 & 63L | (long)in.get(11 + inPos) << 6 & 16383L | (long)in.get(12 + inPos) << 14 & 4194303L | (long)in.get(13 + inPos) << 22 & 1073741823L | (long)in.get(14 + inPos) << 30 & 274877906943L | (long)in.get(15 + inPos) << 38 & 2199023255551L;
         out[3 + outPos] = (long)in.get(15 + inPos) >> 3 & 31L | (long)in.get(16 + inPos) << 5 & 8191L | (long)in.get(17 + inPos) << 13 & 2097151L | (long)in.get(18 + inPos) << 21 & 536870911L | (long)in.get(19 + inPos) << 29 & 137438953471L | (long)in.get(20 + inPos) << 37 & 2199023255551L;
         out[4 + outPos] = (long)in.get(20 + inPos) >> 4 & 15L | (long)in.get(21 + inPos) << 4 & 4095L | (long)in.get(22 + inPos) << 12 & 1048575L | (long)in.get(23 + inPos) << 20 & 268435455L | (long)in.get(24 + inPos) << 28 & 68719476735L | (long)in.get(25 + inPos) << 36 & 2199023255551L;
         out[5 + outPos] = (long)in.get(25 + inPos) >> 5 & 7L | (long)in.get(26 + inPos) << 3 & 2047L | (long)in.get(27 + inPos) << 11 & 524287L | (long)in.get(28 + inPos) << 19 & 134217727L | (long)in.get(29 + inPos) << 27 & 34359738367L | (long)in.get(30 + inPos) << 35 & 2199023255551L;
         out[6 + outPos] = (long)in.get(30 + inPos) >> 6 & 3L | (long)in.get(31 + inPos) << 2 & 1023L | (long)in.get(32 + inPos) << 10 & 262143L | (long)in.get(33 + inPos) << 18 & 67108863L | (long)in.get(34 + inPos) << 26 & 17179869183L | (long)in.get(35 + inPos) << 34 & 2199023255551L;
         out[7 + outPos] = (long)in.get(35 + inPos) >> 7 & 1L | (long)in.get(36 + inPos) << 1 & 511L | (long)in.get(37 + inPos) << 9 & 131071L | (long)in.get(38 + inPos) << 17 & 33554431L | (long)in.get(39 + inPos) << 25 & 8589934591L | (long)in.get(40 + inPos) << 33 & 2199023255551L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 2199023255551L;
         out[1 + outPos] = (long)in[5 + inPos] >> 1 & 127L | (long)in[6 + inPos] << 7 & 32767L | (long)in[7 + inPos] << 15 & 8388607L | (long)in[8 + inPos] << 23 & 2147483647L | (long)in[9 + inPos] << 31 & 549755813887L | (long)in[10 + inPos] << 39 & 2199023255551L;
         out[2 + outPos] = (long)in[10 + inPos] >> 2 & 63L | (long)in[11 + inPos] << 6 & 16383L | (long)in[12 + inPos] << 14 & 4194303L | (long)in[13 + inPos] << 22 & 1073741823L | (long)in[14 + inPos] << 30 & 274877906943L | (long)in[15 + inPos] << 38 & 2199023255551L;
         out[3 + outPos] = (long)in[15 + inPos] >> 3 & 31L | (long)in[16 + inPos] << 5 & 8191L | (long)in[17 + inPos] << 13 & 2097151L | (long)in[18 + inPos] << 21 & 536870911L | (long)in[19 + inPos] << 29 & 137438953471L | (long)in[20 + inPos] << 37 & 2199023255551L;
         out[4 + outPos] = (long)in[20 + inPos] >> 4 & 15L | (long)in[21 + inPos] << 4 & 4095L | (long)in[22 + inPos] << 12 & 1048575L | (long)in[23 + inPos] << 20 & 268435455L | (long)in[24 + inPos] << 28 & 68719476735L | (long)in[25 + inPos] << 36 & 2199023255551L;
         out[5 + outPos] = (long)in[25 + inPos] >> 5 & 7L | (long)in[26 + inPos] << 3 & 2047L | (long)in[27 + inPos] << 11 & 524287L | (long)in[28 + inPos] << 19 & 134217727L | (long)in[29 + inPos] << 27 & 34359738367L | (long)in[30 + inPos] << 35 & 2199023255551L;
         out[6 + outPos] = (long)in[30 + inPos] >> 6 & 3L | (long)in[31 + inPos] << 2 & 1023L | (long)in[32 + inPos] << 10 & 262143L | (long)in[33 + inPos] << 18 & 67108863L | (long)in[34 + inPos] << 26 & 17179869183L | (long)in[35 + inPos] << 34 & 2199023255551L;
         out[7 + outPos] = (long)in[35 + inPos] >> 7 & 1L | (long)in[36 + inPos] << 1 & 511L | (long)in[37 + inPos] << 9 & 131071L | (long)in[38 + inPos] << 17 & 33554431L | (long)in[39 + inPos] << 25 & 8589934591L | (long)in[40 + inPos] << 33 & 2199023255551L;
         out[8 + outPos] = (long)in[41 + inPos] & 255L | (long)in[42 + inPos] << 8 & 65535L | (long)in[43 + inPos] << 16 & 16777215L | (long)in[44 + inPos] << 24 & 4294967295L | (long)in[45 + inPos] << 32 & 1099511627775L | (long)in[46 + inPos] << 40 & 2199023255551L;
         out[9 + outPos] = (long)in[46 + inPos] >> 1 & 127L | (long)in[47 + inPos] << 7 & 32767L | (long)in[48 + inPos] << 15 & 8388607L | (long)in[49 + inPos] << 23 & 2147483647L | (long)in[50 + inPos] << 31 & 549755813887L | (long)in[51 + inPos] << 39 & 2199023255551L;
         out[10 + outPos] = (long)in[51 + inPos] >> 2 & 63L | (long)in[52 + inPos] << 6 & 16383L | (long)in[53 + inPos] << 14 & 4194303L | (long)in[54 + inPos] << 22 & 1073741823L | (long)in[55 + inPos] << 30 & 274877906943L | (long)in[56 + inPos] << 38 & 2199023255551L;
         out[11 + outPos] = (long)in[56 + inPos] >> 3 & 31L | (long)in[57 + inPos] << 5 & 8191L | (long)in[58 + inPos] << 13 & 2097151L | (long)in[59 + inPos] << 21 & 536870911L | (long)in[60 + inPos] << 29 & 137438953471L | (long)in[61 + inPos] << 37 & 2199023255551L;
         out[12 + outPos] = (long)in[61 + inPos] >> 4 & 15L | (long)in[62 + inPos] << 4 & 4095L | (long)in[63 + inPos] << 12 & 1048575L | (long)in[64 + inPos] << 20 & 268435455L | (long)in[65 + inPos] << 28 & 68719476735L | (long)in[66 + inPos] << 36 & 2199023255551L;
         out[13 + outPos] = (long)in[66 + inPos] >> 5 & 7L | (long)in[67 + inPos] << 3 & 2047L | (long)in[68 + inPos] << 11 & 524287L | (long)in[69 + inPos] << 19 & 134217727L | (long)in[70 + inPos] << 27 & 34359738367L | (long)in[71 + inPos] << 35 & 2199023255551L;
         out[14 + outPos] = (long)in[71 + inPos] >> 6 & 3L | (long)in[72 + inPos] << 2 & 1023L | (long)in[73 + inPos] << 10 & 262143L | (long)in[74 + inPos] << 18 & 67108863L | (long)in[75 + inPos] << 26 & 17179869183L | (long)in[76 + inPos] << 34 & 2199023255551L;
         out[15 + outPos] = (long)in[76 + inPos] >> 7 & 1L | (long)in[77 + inPos] << 1 & 511L | (long)in[78 + inPos] << 9 & 131071L | (long)in[79 + inPos] << 17 & 33554431L | (long)in[80 + inPos] << 25 & 8589934591L | (long)in[81 + inPos] << 33 & 2199023255551L;
         out[16 + outPos] = (long)in[82 + inPos] & 255L | (long)in[83 + inPos] << 8 & 65535L | (long)in[84 + inPos] << 16 & 16777215L | (long)in[85 + inPos] << 24 & 4294967295L | (long)in[86 + inPos] << 32 & 1099511627775L | (long)in[87 + inPos] << 40 & 2199023255551L;
         out[17 + outPos] = (long)in[87 + inPos] >> 1 & 127L | (long)in[88 + inPos] << 7 & 32767L | (long)in[89 + inPos] << 15 & 8388607L | (long)in[90 + inPos] << 23 & 2147483647L | (long)in[91 + inPos] << 31 & 549755813887L | (long)in[92 + inPos] << 39 & 2199023255551L;
         out[18 + outPos] = (long)in[92 + inPos] >> 2 & 63L | (long)in[93 + inPos] << 6 & 16383L | (long)in[94 + inPos] << 14 & 4194303L | (long)in[95 + inPos] << 22 & 1073741823L | (long)in[96 + inPos] << 30 & 274877906943L | (long)in[97 + inPos] << 38 & 2199023255551L;
         out[19 + outPos] = (long)in[97 + inPos] >> 3 & 31L | (long)in[98 + inPos] << 5 & 8191L | (long)in[99 + inPos] << 13 & 2097151L | (long)in[100 + inPos] << 21 & 536870911L | (long)in[101 + inPos] << 29 & 137438953471L | (long)in[102 + inPos] << 37 & 2199023255551L;
         out[20 + outPos] = (long)in[102 + inPos] >> 4 & 15L | (long)in[103 + inPos] << 4 & 4095L | (long)in[104 + inPos] << 12 & 1048575L | (long)in[105 + inPos] << 20 & 268435455L | (long)in[106 + inPos] << 28 & 68719476735L | (long)in[107 + inPos] << 36 & 2199023255551L;
         out[21 + outPos] = (long)in[107 + inPos] >> 5 & 7L | (long)in[108 + inPos] << 3 & 2047L | (long)in[109 + inPos] << 11 & 524287L | (long)in[110 + inPos] << 19 & 134217727L | (long)in[111 + inPos] << 27 & 34359738367L | (long)in[112 + inPos] << 35 & 2199023255551L;
         out[22 + outPos] = (long)in[112 + inPos] >> 6 & 3L | (long)in[113 + inPos] << 2 & 1023L | (long)in[114 + inPos] << 10 & 262143L | (long)in[115 + inPos] << 18 & 67108863L | (long)in[116 + inPos] << 26 & 17179869183L | (long)in[117 + inPos] << 34 & 2199023255551L;
         out[23 + outPos] = (long)in[117 + inPos] >> 7 & 1L | (long)in[118 + inPos] << 1 & 511L | (long)in[119 + inPos] << 9 & 131071L | (long)in[120 + inPos] << 17 & 33554431L | (long)in[121 + inPos] << 25 & 8589934591L | (long)in[122 + inPos] << 33 & 2199023255551L;
         out[24 + outPos] = (long)in[123 + inPos] & 255L | (long)in[124 + inPos] << 8 & 65535L | (long)in[125 + inPos] << 16 & 16777215L | (long)in[126 + inPos] << 24 & 4294967295L | (long)in[127 + inPos] << 32 & 1099511627775L | (long)in[128 + inPos] << 40 & 2199023255551L;
         out[25 + outPos] = (long)in[128 + inPos] >> 1 & 127L | (long)in[129 + inPos] << 7 & 32767L | (long)in[130 + inPos] << 15 & 8388607L | (long)in[131 + inPos] << 23 & 2147483647L | (long)in[132 + inPos] << 31 & 549755813887L | (long)in[133 + inPos] << 39 & 2199023255551L;
         out[26 + outPos] = (long)in[133 + inPos] >> 2 & 63L | (long)in[134 + inPos] << 6 & 16383L | (long)in[135 + inPos] << 14 & 4194303L | (long)in[136 + inPos] << 22 & 1073741823L | (long)in[137 + inPos] << 30 & 274877906943L | (long)in[138 + inPos] << 38 & 2199023255551L;
         out[27 + outPos] = (long)in[138 + inPos] >> 3 & 31L | (long)in[139 + inPos] << 5 & 8191L | (long)in[140 + inPos] << 13 & 2097151L | (long)in[141 + inPos] << 21 & 536870911L | (long)in[142 + inPos] << 29 & 137438953471L | (long)in[143 + inPos] << 37 & 2199023255551L;
         out[28 + outPos] = (long)in[143 + inPos] >> 4 & 15L | (long)in[144 + inPos] << 4 & 4095L | (long)in[145 + inPos] << 12 & 1048575L | (long)in[146 + inPos] << 20 & 268435455L | (long)in[147 + inPos] << 28 & 68719476735L | (long)in[148 + inPos] << 36 & 2199023255551L;
         out[29 + outPos] = (long)in[148 + inPos] >> 5 & 7L | (long)in[149 + inPos] << 3 & 2047L | (long)in[150 + inPos] << 11 & 524287L | (long)in[151 + inPos] << 19 & 134217727L | (long)in[152 + inPos] << 27 & 34359738367L | (long)in[153 + inPos] << 35 & 2199023255551L;
         out[30 + outPos] = (long)in[153 + inPos] >> 6 & 3L | (long)in[154 + inPos] << 2 & 1023L | (long)in[155 + inPos] << 10 & 262143L | (long)in[156 + inPos] << 18 & 67108863L | (long)in[157 + inPos] << 26 & 17179869183L | (long)in[158 + inPos] << 34 & 2199023255551L;
         out[31 + outPos] = (long)in[158 + inPos] >> 7 & 1L | (long)in[159 + inPos] << 1 & 511L | (long)in[160 + inPos] << 9 & 131071L | (long)in[161 + inPos] << 17 & 33554431L | (long)in[162 + inPos] << 25 & 8589934591L | (long)in[163 + inPos] << 33 & 2199023255551L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 2199023255551L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 1 & 127L | (long)in.get(6 + inPos) << 7 & 32767L | (long)in.get(7 + inPos) << 15 & 8388607L | (long)in.get(8 + inPos) << 23 & 2147483647L | (long)in.get(9 + inPos) << 31 & 549755813887L | (long)in.get(10 + inPos) << 39 & 2199023255551L;
         out[2 + outPos] = (long)in.get(10 + inPos) >> 2 & 63L | (long)in.get(11 + inPos) << 6 & 16383L | (long)in.get(12 + inPos) << 14 & 4194303L | (long)in.get(13 + inPos) << 22 & 1073741823L | (long)in.get(14 + inPos) << 30 & 274877906943L | (long)in.get(15 + inPos) << 38 & 2199023255551L;
         out[3 + outPos] = (long)in.get(15 + inPos) >> 3 & 31L | (long)in.get(16 + inPos) << 5 & 8191L | (long)in.get(17 + inPos) << 13 & 2097151L | (long)in.get(18 + inPos) << 21 & 536870911L | (long)in.get(19 + inPos) << 29 & 137438953471L | (long)in.get(20 + inPos) << 37 & 2199023255551L;
         out[4 + outPos] = (long)in.get(20 + inPos) >> 4 & 15L | (long)in.get(21 + inPos) << 4 & 4095L | (long)in.get(22 + inPos) << 12 & 1048575L | (long)in.get(23 + inPos) << 20 & 268435455L | (long)in.get(24 + inPos) << 28 & 68719476735L | (long)in.get(25 + inPos) << 36 & 2199023255551L;
         out[5 + outPos] = (long)in.get(25 + inPos) >> 5 & 7L | (long)in.get(26 + inPos) << 3 & 2047L | (long)in.get(27 + inPos) << 11 & 524287L | (long)in.get(28 + inPos) << 19 & 134217727L | (long)in.get(29 + inPos) << 27 & 34359738367L | (long)in.get(30 + inPos) << 35 & 2199023255551L;
         out[6 + outPos] = (long)in.get(30 + inPos) >> 6 & 3L | (long)in.get(31 + inPos) << 2 & 1023L | (long)in.get(32 + inPos) << 10 & 262143L | (long)in.get(33 + inPos) << 18 & 67108863L | (long)in.get(34 + inPos) << 26 & 17179869183L | (long)in.get(35 + inPos) << 34 & 2199023255551L;
         out[7 + outPos] = (long)in.get(35 + inPos) >> 7 & 1L | (long)in.get(36 + inPos) << 1 & 511L | (long)in.get(37 + inPos) << 9 & 131071L | (long)in.get(38 + inPos) << 17 & 33554431L | (long)in.get(39 + inPos) << 25 & 8589934591L | (long)in.get(40 + inPos) << 33 & 2199023255551L;
         out[8 + outPos] = (long)in.get(41 + inPos) & 255L | (long)in.get(42 + inPos) << 8 & 65535L | (long)in.get(43 + inPos) << 16 & 16777215L | (long)in.get(44 + inPos) << 24 & 4294967295L | (long)in.get(45 + inPos) << 32 & 1099511627775L | (long)in.get(46 + inPos) << 40 & 2199023255551L;
         out[9 + outPos] = (long)in.get(46 + inPos) >> 1 & 127L | (long)in.get(47 + inPos) << 7 & 32767L | (long)in.get(48 + inPos) << 15 & 8388607L | (long)in.get(49 + inPos) << 23 & 2147483647L | (long)in.get(50 + inPos) << 31 & 549755813887L | (long)in.get(51 + inPos) << 39 & 2199023255551L;
         out[10 + outPos] = (long)in.get(51 + inPos) >> 2 & 63L | (long)in.get(52 + inPos) << 6 & 16383L | (long)in.get(53 + inPos) << 14 & 4194303L | (long)in.get(54 + inPos) << 22 & 1073741823L | (long)in.get(55 + inPos) << 30 & 274877906943L | (long)in.get(56 + inPos) << 38 & 2199023255551L;
         out[11 + outPos] = (long)in.get(56 + inPos) >> 3 & 31L | (long)in.get(57 + inPos) << 5 & 8191L | (long)in.get(58 + inPos) << 13 & 2097151L | (long)in.get(59 + inPos) << 21 & 536870911L | (long)in.get(60 + inPos) << 29 & 137438953471L | (long)in.get(61 + inPos) << 37 & 2199023255551L;
         out[12 + outPos] = (long)in.get(61 + inPos) >> 4 & 15L | (long)in.get(62 + inPos) << 4 & 4095L | (long)in.get(63 + inPos) << 12 & 1048575L | (long)in.get(64 + inPos) << 20 & 268435455L | (long)in.get(65 + inPos) << 28 & 68719476735L | (long)in.get(66 + inPos) << 36 & 2199023255551L;
         out[13 + outPos] = (long)in.get(66 + inPos) >> 5 & 7L | (long)in.get(67 + inPos) << 3 & 2047L | (long)in.get(68 + inPos) << 11 & 524287L | (long)in.get(69 + inPos) << 19 & 134217727L | (long)in.get(70 + inPos) << 27 & 34359738367L | (long)in.get(71 + inPos) << 35 & 2199023255551L;
         out[14 + outPos] = (long)in.get(71 + inPos) >> 6 & 3L | (long)in.get(72 + inPos) << 2 & 1023L | (long)in.get(73 + inPos) << 10 & 262143L | (long)in.get(74 + inPos) << 18 & 67108863L | (long)in.get(75 + inPos) << 26 & 17179869183L | (long)in.get(76 + inPos) << 34 & 2199023255551L;
         out[15 + outPos] = (long)in.get(76 + inPos) >> 7 & 1L | (long)in.get(77 + inPos) << 1 & 511L | (long)in.get(78 + inPos) << 9 & 131071L | (long)in.get(79 + inPos) << 17 & 33554431L | (long)in.get(80 + inPos) << 25 & 8589934591L | (long)in.get(81 + inPos) << 33 & 2199023255551L;
         out[16 + outPos] = (long)in.get(82 + inPos) & 255L | (long)in.get(83 + inPos) << 8 & 65535L | (long)in.get(84 + inPos) << 16 & 16777215L | (long)in.get(85 + inPos) << 24 & 4294967295L | (long)in.get(86 + inPos) << 32 & 1099511627775L | (long)in.get(87 + inPos) << 40 & 2199023255551L;
         out[17 + outPos] = (long)in.get(87 + inPos) >> 1 & 127L | (long)in.get(88 + inPos) << 7 & 32767L | (long)in.get(89 + inPos) << 15 & 8388607L | (long)in.get(90 + inPos) << 23 & 2147483647L | (long)in.get(91 + inPos) << 31 & 549755813887L | (long)in.get(92 + inPos) << 39 & 2199023255551L;
         out[18 + outPos] = (long)in.get(92 + inPos) >> 2 & 63L | (long)in.get(93 + inPos) << 6 & 16383L | (long)in.get(94 + inPos) << 14 & 4194303L | (long)in.get(95 + inPos) << 22 & 1073741823L | (long)in.get(96 + inPos) << 30 & 274877906943L | (long)in.get(97 + inPos) << 38 & 2199023255551L;
         out[19 + outPos] = (long)in.get(97 + inPos) >> 3 & 31L | (long)in.get(98 + inPos) << 5 & 8191L | (long)in.get(99 + inPos) << 13 & 2097151L | (long)in.get(100 + inPos) << 21 & 536870911L | (long)in.get(101 + inPos) << 29 & 137438953471L | (long)in.get(102 + inPos) << 37 & 2199023255551L;
         out[20 + outPos] = (long)in.get(102 + inPos) >> 4 & 15L | (long)in.get(103 + inPos) << 4 & 4095L | (long)in.get(104 + inPos) << 12 & 1048575L | (long)in.get(105 + inPos) << 20 & 268435455L | (long)in.get(106 + inPos) << 28 & 68719476735L | (long)in.get(107 + inPos) << 36 & 2199023255551L;
         out[21 + outPos] = (long)in.get(107 + inPos) >> 5 & 7L | (long)in.get(108 + inPos) << 3 & 2047L | (long)in.get(109 + inPos) << 11 & 524287L | (long)in.get(110 + inPos) << 19 & 134217727L | (long)in.get(111 + inPos) << 27 & 34359738367L | (long)in.get(112 + inPos) << 35 & 2199023255551L;
         out[22 + outPos] = (long)in.get(112 + inPos) >> 6 & 3L | (long)in.get(113 + inPos) << 2 & 1023L | (long)in.get(114 + inPos) << 10 & 262143L | (long)in.get(115 + inPos) << 18 & 67108863L | (long)in.get(116 + inPos) << 26 & 17179869183L | (long)in.get(117 + inPos) << 34 & 2199023255551L;
         out[23 + outPos] = (long)in.get(117 + inPos) >> 7 & 1L | (long)in.get(118 + inPos) << 1 & 511L | (long)in.get(119 + inPos) << 9 & 131071L | (long)in.get(120 + inPos) << 17 & 33554431L | (long)in.get(121 + inPos) << 25 & 8589934591L | (long)in.get(122 + inPos) << 33 & 2199023255551L;
         out[24 + outPos] = (long)in.get(123 + inPos) & 255L | (long)in.get(124 + inPos) << 8 & 65535L | (long)in.get(125 + inPos) << 16 & 16777215L | (long)in.get(126 + inPos) << 24 & 4294967295L | (long)in.get(127 + inPos) << 32 & 1099511627775L | (long)in.get(128 + inPos) << 40 & 2199023255551L;
         out[25 + outPos] = (long)in.get(128 + inPos) >> 1 & 127L | (long)in.get(129 + inPos) << 7 & 32767L | (long)in.get(130 + inPos) << 15 & 8388607L | (long)in.get(131 + inPos) << 23 & 2147483647L | (long)in.get(132 + inPos) << 31 & 549755813887L | (long)in.get(133 + inPos) << 39 & 2199023255551L;
         out[26 + outPos] = (long)in.get(133 + inPos) >> 2 & 63L | (long)in.get(134 + inPos) << 6 & 16383L | (long)in.get(135 + inPos) << 14 & 4194303L | (long)in.get(136 + inPos) << 22 & 1073741823L | (long)in.get(137 + inPos) << 30 & 274877906943L | (long)in.get(138 + inPos) << 38 & 2199023255551L;
         out[27 + outPos] = (long)in.get(138 + inPos) >> 3 & 31L | (long)in.get(139 + inPos) << 5 & 8191L | (long)in.get(140 + inPos) << 13 & 2097151L | (long)in.get(141 + inPos) << 21 & 536870911L | (long)in.get(142 + inPos) << 29 & 137438953471L | (long)in.get(143 + inPos) << 37 & 2199023255551L;
         out[28 + outPos] = (long)in.get(143 + inPos) >> 4 & 15L | (long)in.get(144 + inPos) << 4 & 4095L | (long)in.get(145 + inPos) << 12 & 1048575L | (long)in.get(146 + inPos) << 20 & 268435455L | (long)in.get(147 + inPos) << 28 & 68719476735L | (long)in.get(148 + inPos) << 36 & 2199023255551L;
         out[29 + outPos] = (long)in.get(148 + inPos) >> 5 & 7L | (long)in.get(149 + inPos) << 3 & 2047L | (long)in.get(150 + inPos) << 11 & 524287L | (long)in.get(151 + inPos) << 19 & 134217727L | (long)in.get(152 + inPos) << 27 & 34359738367L | (long)in.get(153 + inPos) << 35 & 2199023255551L;
         out[30 + outPos] = (long)in.get(153 + inPos) >> 6 & 3L | (long)in.get(154 + inPos) << 2 & 1023L | (long)in.get(155 + inPos) << 10 & 262143L | (long)in.get(156 + inPos) << 18 & 67108863L | (long)in.get(157 + inPos) << 26 & 17179869183L | (long)in.get(158 + inPos) << 34 & 2199023255551L;
         out[31 + outPos] = (long)in.get(158 + inPos) >> 7 & 1L | (long)in.get(159 + inPos) << 1 & 511L | (long)in.get(160 + inPos) << 9 & 131071L | (long)in.get(161 + inPos) << 17 & 33554431L | (long)in.get(162 + inPos) << 25 & 8589934591L | (long)in.get(163 + inPos) << 33 & 2199023255551L;
      }
   }

   private static final class Packer42 extends BytePackerForLong {
      private Packer42() {
         super(42);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 4398046511103L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 4398046511103L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 4398046511103L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 4398046511103L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 4398046511103L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 4398046511103L) >>> 40 | (in[1 + inPos] & 4398046511103L) << 2) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 4398046511103L) >>> 6 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 4398046511103L) >>> 14 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 4398046511103L) >>> 22 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 4398046511103L) >>> 30 & 255L));
         out[10 + outPos] = (byte)((int)(((in[1 + inPos] & 4398046511103L) >>> 38 | (in[2 + inPos] & 4398046511103L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 4398046511103L) >>> 4 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 4398046511103L) >>> 12 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 4398046511103L) >>> 20 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 4398046511103L) >>> 28 & 255L));
         out[15 + outPos] = (byte)((int)(((in[2 + inPos] & 4398046511103L) >>> 36 | (in[3 + inPos] & 4398046511103L) << 6) & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 4398046511103L) >>> 2 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 4398046511103L) >>> 10 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 4398046511103L) >>> 18 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 4398046511103L) >>> 26 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 4398046511103L) >>> 34 & 255L));
         out[21 + outPos] = (byte)((int)(in[4 + inPos] & 4398046511103L & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 4398046511103L) >>> 8 & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 4398046511103L) >>> 16 & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 4398046511103L) >>> 24 & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 4398046511103L) >>> 32 & 255L));
         out[26 + outPos] = (byte)((int)(((in[4 + inPos] & 4398046511103L) >>> 40 | (in[5 + inPos] & 4398046511103L) << 2) & 255L));
         out[27 + outPos] = (byte)((int)((in[5 + inPos] & 4398046511103L) >>> 6 & 255L));
         out[28 + outPos] = (byte)((int)((in[5 + inPos] & 4398046511103L) >>> 14 & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 4398046511103L) >>> 22 & 255L));
         out[30 + outPos] = (byte)((int)((in[5 + inPos] & 4398046511103L) >>> 30 & 255L));
         out[31 + outPos] = (byte)((int)(((in[5 + inPos] & 4398046511103L) >>> 38 | (in[6 + inPos] & 4398046511103L) << 4) & 255L));
         out[32 + outPos] = (byte)((int)((in[6 + inPos] & 4398046511103L) >>> 4 & 255L));
         out[33 + outPos] = (byte)((int)((in[6 + inPos] & 4398046511103L) >>> 12 & 255L));
         out[34 + outPos] = (byte)((int)((in[6 + inPos] & 4398046511103L) >>> 20 & 255L));
         out[35 + outPos] = (byte)((int)((in[6 + inPos] & 4398046511103L) >>> 28 & 255L));
         out[36 + outPos] = (byte)((int)(((in[6 + inPos] & 4398046511103L) >>> 36 | (in[7 + inPos] & 4398046511103L) << 6) & 255L));
         out[37 + outPos] = (byte)((int)((in[7 + inPos] & 4398046511103L) >>> 2 & 255L));
         out[38 + outPos] = (byte)((int)((in[7 + inPos] & 4398046511103L) >>> 10 & 255L));
         out[39 + outPos] = (byte)((int)((in[7 + inPos] & 4398046511103L) >>> 18 & 255L));
         out[40 + outPos] = (byte)((int)((in[7 + inPos] & 4398046511103L) >>> 26 & 255L));
         out[41 + outPos] = (byte)((int)((in[7 + inPos] & 4398046511103L) >>> 34 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 4398046511103L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 4398046511103L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 4398046511103L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 4398046511103L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 4398046511103L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 4398046511103L) >>> 40 | (in[1 + inPos] & 4398046511103L) << 2) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 4398046511103L) >>> 6 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 4398046511103L) >>> 14 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 4398046511103L) >>> 22 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 4398046511103L) >>> 30 & 255L));
         out[10 + outPos] = (byte)((int)(((in[1 + inPos] & 4398046511103L) >>> 38 | (in[2 + inPos] & 4398046511103L) << 4) & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 4398046511103L) >>> 4 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 4398046511103L) >>> 12 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 4398046511103L) >>> 20 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 4398046511103L) >>> 28 & 255L));
         out[15 + outPos] = (byte)((int)(((in[2 + inPos] & 4398046511103L) >>> 36 | (in[3 + inPos] & 4398046511103L) << 6) & 255L));
         out[16 + outPos] = (byte)((int)((in[3 + inPos] & 4398046511103L) >>> 2 & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 4398046511103L) >>> 10 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 4398046511103L) >>> 18 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 4398046511103L) >>> 26 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 4398046511103L) >>> 34 & 255L));
         out[21 + outPos] = (byte)((int)(in[4 + inPos] & 4398046511103L & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 4398046511103L) >>> 8 & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 4398046511103L) >>> 16 & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 4398046511103L) >>> 24 & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 4398046511103L) >>> 32 & 255L));
         out[26 + outPos] = (byte)((int)(((in[4 + inPos] & 4398046511103L) >>> 40 | (in[5 + inPos] & 4398046511103L) << 2) & 255L));
         out[27 + outPos] = (byte)((int)((in[5 + inPos] & 4398046511103L) >>> 6 & 255L));
         out[28 + outPos] = (byte)((int)((in[5 + inPos] & 4398046511103L) >>> 14 & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 4398046511103L) >>> 22 & 255L));
         out[30 + outPos] = (byte)((int)((in[5 + inPos] & 4398046511103L) >>> 30 & 255L));
         out[31 + outPos] = (byte)((int)(((in[5 + inPos] & 4398046511103L) >>> 38 | (in[6 + inPos] & 4398046511103L) << 4) & 255L));
         out[32 + outPos] = (byte)((int)((in[6 + inPos] & 4398046511103L) >>> 4 & 255L));
         out[33 + outPos] = (byte)((int)((in[6 + inPos] & 4398046511103L) >>> 12 & 255L));
         out[34 + outPos] = (byte)((int)((in[6 + inPos] & 4398046511103L) >>> 20 & 255L));
         out[35 + outPos] = (byte)((int)((in[6 + inPos] & 4398046511103L) >>> 28 & 255L));
         out[36 + outPos] = (byte)((int)(((in[6 + inPos] & 4398046511103L) >>> 36 | (in[7 + inPos] & 4398046511103L) << 6) & 255L));
         out[37 + outPos] = (byte)((int)((in[7 + inPos] & 4398046511103L) >>> 2 & 255L));
         out[38 + outPos] = (byte)((int)((in[7 + inPos] & 4398046511103L) >>> 10 & 255L));
         out[39 + outPos] = (byte)((int)((in[7 + inPos] & 4398046511103L) >>> 18 & 255L));
         out[40 + outPos] = (byte)((int)((in[7 + inPos] & 4398046511103L) >>> 26 & 255L));
         out[41 + outPos] = (byte)((int)((in[7 + inPos] & 4398046511103L) >>> 34 & 255L));
         out[42 + outPos] = (byte)((int)(in[8 + inPos] & 4398046511103L & 255L));
         out[43 + outPos] = (byte)((int)((in[8 + inPos] & 4398046511103L) >>> 8 & 255L));
         out[44 + outPos] = (byte)((int)((in[8 + inPos] & 4398046511103L) >>> 16 & 255L));
         out[45 + outPos] = (byte)((int)((in[8 + inPos] & 4398046511103L) >>> 24 & 255L));
         out[46 + outPos] = (byte)((int)((in[8 + inPos] & 4398046511103L) >>> 32 & 255L));
         out[47 + outPos] = (byte)((int)(((in[8 + inPos] & 4398046511103L) >>> 40 | (in[9 + inPos] & 4398046511103L) << 2) & 255L));
         out[48 + outPos] = (byte)((int)((in[9 + inPos] & 4398046511103L) >>> 6 & 255L));
         out[49 + outPos] = (byte)((int)((in[9 + inPos] & 4398046511103L) >>> 14 & 255L));
         out[50 + outPos] = (byte)((int)((in[9 + inPos] & 4398046511103L) >>> 22 & 255L));
         out[51 + outPos] = (byte)((int)((in[9 + inPos] & 4398046511103L) >>> 30 & 255L));
         out[52 + outPos] = (byte)((int)(((in[9 + inPos] & 4398046511103L) >>> 38 | (in[10 + inPos] & 4398046511103L) << 4) & 255L));
         out[53 + outPos] = (byte)((int)((in[10 + inPos] & 4398046511103L) >>> 4 & 255L));
         out[54 + outPos] = (byte)((int)((in[10 + inPos] & 4398046511103L) >>> 12 & 255L));
         out[55 + outPos] = (byte)((int)((in[10 + inPos] & 4398046511103L) >>> 20 & 255L));
         out[56 + outPos] = (byte)((int)((in[10 + inPos] & 4398046511103L) >>> 28 & 255L));
         out[57 + outPos] = (byte)((int)(((in[10 + inPos] & 4398046511103L) >>> 36 | (in[11 + inPos] & 4398046511103L) << 6) & 255L));
         out[58 + outPos] = (byte)((int)((in[11 + inPos] & 4398046511103L) >>> 2 & 255L));
         out[59 + outPos] = (byte)((int)((in[11 + inPos] & 4398046511103L) >>> 10 & 255L));
         out[60 + outPos] = (byte)((int)((in[11 + inPos] & 4398046511103L) >>> 18 & 255L));
         out[61 + outPos] = (byte)((int)((in[11 + inPos] & 4398046511103L) >>> 26 & 255L));
         out[62 + outPos] = (byte)((int)((in[11 + inPos] & 4398046511103L) >>> 34 & 255L));
         out[63 + outPos] = (byte)((int)(in[12 + inPos] & 4398046511103L & 255L));
         out[64 + outPos] = (byte)((int)((in[12 + inPos] & 4398046511103L) >>> 8 & 255L));
         out[65 + outPos] = (byte)((int)((in[12 + inPos] & 4398046511103L) >>> 16 & 255L));
         out[66 + outPos] = (byte)((int)((in[12 + inPos] & 4398046511103L) >>> 24 & 255L));
         out[67 + outPos] = (byte)((int)((in[12 + inPos] & 4398046511103L) >>> 32 & 255L));
         out[68 + outPos] = (byte)((int)(((in[12 + inPos] & 4398046511103L) >>> 40 | (in[13 + inPos] & 4398046511103L) << 2) & 255L));
         out[69 + outPos] = (byte)((int)((in[13 + inPos] & 4398046511103L) >>> 6 & 255L));
         out[70 + outPos] = (byte)((int)((in[13 + inPos] & 4398046511103L) >>> 14 & 255L));
         out[71 + outPos] = (byte)((int)((in[13 + inPos] & 4398046511103L) >>> 22 & 255L));
         out[72 + outPos] = (byte)((int)((in[13 + inPos] & 4398046511103L) >>> 30 & 255L));
         out[73 + outPos] = (byte)((int)(((in[13 + inPos] & 4398046511103L) >>> 38 | (in[14 + inPos] & 4398046511103L) << 4) & 255L));
         out[74 + outPos] = (byte)((int)((in[14 + inPos] & 4398046511103L) >>> 4 & 255L));
         out[75 + outPos] = (byte)((int)((in[14 + inPos] & 4398046511103L) >>> 12 & 255L));
         out[76 + outPos] = (byte)((int)((in[14 + inPos] & 4398046511103L) >>> 20 & 255L));
         out[77 + outPos] = (byte)((int)((in[14 + inPos] & 4398046511103L) >>> 28 & 255L));
         out[78 + outPos] = (byte)((int)(((in[14 + inPos] & 4398046511103L) >>> 36 | (in[15 + inPos] & 4398046511103L) << 6) & 255L));
         out[79 + outPos] = (byte)((int)((in[15 + inPos] & 4398046511103L) >>> 2 & 255L));
         out[80 + outPos] = (byte)((int)((in[15 + inPos] & 4398046511103L) >>> 10 & 255L));
         out[81 + outPos] = (byte)((int)((in[15 + inPos] & 4398046511103L) >>> 18 & 255L));
         out[82 + outPos] = (byte)((int)((in[15 + inPos] & 4398046511103L) >>> 26 & 255L));
         out[83 + outPos] = (byte)((int)((in[15 + inPos] & 4398046511103L) >>> 34 & 255L));
         out[84 + outPos] = (byte)((int)(in[16 + inPos] & 4398046511103L & 255L));
         out[85 + outPos] = (byte)((int)((in[16 + inPos] & 4398046511103L) >>> 8 & 255L));
         out[86 + outPos] = (byte)((int)((in[16 + inPos] & 4398046511103L) >>> 16 & 255L));
         out[87 + outPos] = (byte)((int)((in[16 + inPos] & 4398046511103L) >>> 24 & 255L));
         out[88 + outPos] = (byte)((int)((in[16 + inPos] & 4398046511103L) >>> 32 & 255L));
         out[89 + outPos] = (byte)((int)(((in[16 + inPos] & 4398046511103L) >>> 40 | (in[17 + inPos] & 4398046511103L) << 2) & 255L));
         out[90 + outPos] = (byte)((int)((in[17 + inPos] & 4398046511103L) >>> 6 & 255L));
         out[91 + outPos] = (byte)((int)((in[17 + inPos] & 4398046511103L) >>> 14 & 255L));
         out[92 + outPos] = (byte)((int)((in[17 + inPos] & 4398046511103L) >>> 22 & 255L));
         out[93 + outPos] = (byte)((int)((in[17 + inPos] & 4398046511103L) >>> 30 & 255L));
         out[94 + outPos] = (byte)((int)(((in[17 + inPos] & 4398046511103L) >>> 38 | (in[18 + inPos] & 4398046511103L) << 4) & 255L));
         out[95 + outPos] = (byte)((int)((in[18 + inPos] & 4398046511103L) >>> 4 & 255L));
         out[96 + outPos] = (byte)((int)((in[18 + inPos] & 4398046511103L) >>> 12 & 255L));
         out[97 + outPos] = (byte)((int)((in[18 + inPos] & 4398046511103L) >>> 20 & 255L));
         out[98 + outPos] = (byte)((int)((in[18 + inPos] & 4398046511103L) >>> 28 & 255L));
         out[99 + outPos] = (byte)((int)(((in[18 + inPos] & 4398046511103L) >>> 36 | (in[19 + inPos] & 4398046511103L) << 6) & 255L));
         out[100 + outPos] = (byte)((int)((in[19 + inPos] & 4398046511103L) >>> 2 & 255L));
         out[101 + outPos] = (byte)((int)((in[19 + inPos] & 4398046511103L) >>> 10 & 255L));
         out[102 + outPos] = (byte)((int)((in[19 + inPos] & 4398046511103L) >>> 18 & 255L));
         out[103 + outPos] = (byte)((int)((in[19 + inPos] & 4398046511103L) >>> 26 & 255L));
         out[104 + outPos] = (byte)((int)((in[19 + inPos] & 4398046511103L) >>> 34 & 255L));
         out[105 + outPos] = (byte)((int)(in[20 + inPos] & 4398046511103L & 255L));
         out[106 + outPos] = (byte)((int)((in[20 + inPos] & 4398046511103L) >>> 8 & 255L));
         out[107 + outPos] = (byte)((int)((in[20 + inPos] & 4398046511103L) >>> 16 & 255L));
         out[108 + outPos] = (byte)((int)((in[20 + inPos] & 4398046511103L) >>> 24 & 255L));
         out[109 + outPos] = (byte)((int)((in[20 + inPos] & 4398046511103L) >>> 32 & 255L));
         out[110 + outPos] = (byte)((int)(((in[20 + inPos] & 4398046511103L) >>> 40 | (in[21 + inPos] & 4398046511103L) << 2) & 255L));
         out[111 + outPos] = (byte)((int)((in[21 + inPos] & 4398046511103L) >>> 6 & 255L));
         out[112 + outPos] = (byte)((int)((in[21 + inPos] & 4398046511103L) >>> 14 & 255L));
         out[113 + outPos] = (byte)((int)((in[21 + inPos] & 4398046511103L) >>> 22 & 255L));
         out[114 + outPos] = (byte)((int)((in[21 + inPos] & 4398046511103L) >>> 30 & 255L));
         out[115 + outPos] = (byte)((int)(((in[21 + inPos] & 4398046511103L) >>> 38 | (in[22 + inPos] & 4398046511103L) << 4) & 255L));
         out[116 + outPos] = (byte)((int)((in[22 + inPos] & 4398046511103L) >>> 4 & 255L));
         out[117 + outPos] = (byte)((int)((in[22 + inPos] & 4398046511103L) >>> 12 & 255L));
         out[118 + outPos] = (byte)((int)((in[22 + inPos] & 4398046511103L) >>> 20 & 255L));
         out[119 + outPos] = (byte)((int)((in[22 + inPos] & 4398046511103L) >>> 28 & 255L));
         out[120 + outPos] = (byte)((int)(((in[22 + inPos] & 4398046511103L) >>> 36 | (in[23 + inPos] & 4398046511103L) << 6) & 255L));
         out[121 + outPos] = (byte)((int)((in[23 + inPos] & 4398046511103L) >>> 2 & 255L));
         out[122 + outPos] = (byte)((int)((in[23 + inPos] & 4398046511103L) >>> 10 & 255L));
         out[123 + outPos] = (byte)((int)((in[23 + inPos] & 4398046511103L) >>> 18 & 255L));
         out[124 + outPos] = (byte)((int)((in[23 + inPos] & 4398046511103L) >>> 26 & 255L));
         out[125 + outPos] = (byte)((int)((in[23 + inPos] & 4398046511103L) >>> 34 & 255L));
         out[126 + outPos] = (byte)((int)(in[24 + inPos] & 4398046511103L & 255L));
         out[127 + outPos] = (byte)((int)((in[24 + inPos] & 4398046511103L) >>> 8 & 255L));
         out[128 + outPos] = (byte)((int)((in[24 + inPos] & 4398046511103L) >>> 16 & 255L));
         out[129 + outPos] = (byte)((int)((in[24 + inPos] & 4398046511103L) >>> 24 & 255L));
         out[130 + outPos] = (byte)((int)((in[24 + inPos] & 4398046511103L) >>> 32 & 255L));
         out[131 + outPos] = (byte)((int)(((in[24 + inPos] & 4398046511103L) >>> 40 | (in[25 + inPos] & 4398046511103L) << 2) & 255L));
         out[132 + outPos] = (byte)((int)((in[25 + inPos] & 4398046511103L) >>> 6 & 255L));
         out[133 + outPos] = (byte)((int)((in[25 + inPos] & 4398046511103L) >>> 14 & 255L));
         out[134 + outPos] = (byte)((int)((in[25 + inPos] & 4398046511103L) >>> 22 & 255L));
         out[135 + outPos] = (byte)((int)((in[25 + inPos] & 4398046511103L) >>> 30 & 255L));
         out[136 + outPos] = (byte)((int)(((in[25 + inPos] & 4398046511103L) >>> 38 | (in[26 + inPos] & 4398046511103L) << 4) & 255L));
         out[137 + outPos] = (byte)((int)((in[26 + inPos] & 4398046511103L) >>> 4 & 255L));
         out[138 + outPos] = (byte)((int)((in[26 + inPos] & 4398046511103L) >>> 12 & 255L));
         out[139 + outPos] = (byte)((int)((in[26 + inPos] & 4398046511103L) >>> 20 & 255L));
         out[140 + outPos] = (byte)((int)((in[26 + inPos] & 4398046511103L) >>> 28 & 255L));
         out[141 + outPos] = (byte)((int)(((in[26 + inPos] & 4398046511103L) >>> 36 | (in[27 + inPos] & 4398046511103L) << 6) & 255L));
         out[142 + outPos] = (byte)((int)((in[27 + inPos] & 4398046511103L) >>> 2 & 255L));
         out[143 + outPos] = (byte)((int)((in[27 + inPos] & 4398046511103L) >>> 10 & 255L));
         out[144 + outPos] = (byte)((int)((in[27 + inPos] & 4398046511103L) >>> 18 & 255L));
         out[145 + outPos] = (byte)((int)((in[27 + inPos] & 4398046511103L) >>> 26 & 255L));
         out[146 + outPos] = (byte)((int)((in[27 + inPos] & 4398046511103L) >>> 34 & 255L));
         out[147 + outPos] = (byte)((int)(in[28 + inPos] & 4398046511103L & 255L));
         out[148 + outPos] = (byte)((int)((in[28 + inPos] & 4398046511103L) >>> 8 & 255L));
         out[149 + outPos] = (byte)((int)((in[28 + inPos] & 4398046511103L) >>> 16 & 255L));
         out[150 + outPos] = (byte)((int)((in[28 + inPos] & 4398046511103L) >>> 24 & 255L));
         out[151 + outPos] = (byte)((int)((in[28 + inPos] & 4398046511103L) >>> 32 & 255L));
         out[152 + outPos] = (byte)((int)(((in[28 + inPos] & 4398046511103L) >>> 40 | (in[29 + inPos] & 4398046511103L) << 2) & 255L));
         out[153 + outPos] = (byte)((int)((in[29 + inPos] & 4398046511103L) >>> 6 & 255L));
         out[154 + outPos] = (byte)((int)((in[29 + inPos] & 4398046511103L) >>> 14 & 255L));
         out[155 + outPos] = (byte)((int)((in[29 + inPos] & 4398046511103L) >>> 22 & 255L));
         out[156 + outPos] = (byte)((int)((in[29 + inPos] & 4398046511103L) >>> 30 & 255L));
         out[157 + outPos] = (byte)((int)(((in[29 + inPos] & 4398046511103L) >>> 38 | (in[30 + inPos] & 4398046511103L) << 4) & 255L));
         out[158 + outPos] = (byte)((int)((in[30 + inPos] & 4398046511103L) >>> 4 & 255L));
         out[159 + outPos] = (byte)((int)((in[30 + inPos] & 4398046511103L) >>> 12 & 255L));
         out[160 + outPos] = (byte)((int)((in[30 + inPos] & 4398046511103L) >>> 20 & 255L));
         out[161 + outPos] = (byte)((int)((in[30 + inPos] & 4398046511103L) >>> 28 & 255L));
         out[162 + outPos] = (byte)((int)(((in[30 + inPos] & 4398046511103L) >>> 36 | (in[31 + inPos] & 4398046511103L) << 6) & 255L));
         out[163 + outPos] = (byte)((int)((in[31 + inPos] & 4398046511103L) >>> 2 & 255L));
         out[164 + outPos] = (byte)((int)((in[31 + inPos] & 4398046511103L) >>> 10 & 255L));
         out[165 + outPos] = (byte)((int)((in[31 + inPos] & 4398046511103L) >>> 18 & 255L));
         out[166 + outPos] = (byte)((int)((in[31 + inPos] & 4398046511103L) >>> 26 & 255L));
         out[167 + outPos] = (byte)((int)((in[31 + inPos] & 4398046511103L) >>> 34 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 4398046511103L;
         out[1 + outPos] = (long)in[5 + inPos] >> 2 & 63L | (long)in[6 + inPos] << 6 & 16383L | (long)in[7 + inPos] << 14 & 4194303L | (long)in[8 + inPos] << 22 & 1073741823L | (long)in[9 + inPos] << 30 & 274877906943L | (long)in[10 + inPos] << 38 & 4398046511103L;
         out[2 + outPos] = (long)in[10 + inPos] >> 4 & 15L | (long)in[11 + inPos] << 4 & 4095L | (long)in[12 + inPos] << 12 & 1048575L | (long)in[13 + inPos] << 20 & 268435455L | (long)in[14 + inPos] << 28 & 68719476735L | (long)in[15 + inPos] << 36 & 4398046511103L;
         out[3 + outPos] = (long)in[15 + inPos] >> 6 & 3L | (long)in[16 + inPos] << 2 & 1023L | (long)in[17 + inPos] << 10 & 262143L | (long)in[18 + inPos] << 18 & 67108863L | (long)in[19 + inPos] << 26 & 17179869183L | (long)in[20 + inPos] << 34 & 4398046511103L;
         out[4 + outPos] = (long)in[21 + inPos] & 255L | (long)in[22 + inPos] << 8 & 65535L | (long)in[23 + inPos] << 16 & 16777215L | (long)in[24 + inPos] << 24 & 4294967295L | (long)in[25 + inPos] << 32 & 1099511627775L | (long)in[26 + inPos] << 40 & 4398046511103L;
         out[5 + outPos] = (long)in[26 + inPos] >> 2 & 63L | (long)in[27 + inPos] << 6 & 16383L | (long)in[28 + inPos] << 14 & 4194303L | (long)in[29 + inPos] << 22 & 1073741823L | (long)in[30 + inPos] << 30 & 274877906943L | (long)in[31 + inPos] << 38 & 4398046511103L;
         out[6 + outPos] = (long)in[31 + inPos] >> 4 & 15L | (long)in[32 + inPos] << 4 & 4095L | (long)in[33 + inPos] << 12 & 1048575L | (long)in[34 + inPos] << 20 & 268435455L | (long)in[35 + inPos] << 28 & 68719476735L | (long)in[36 + inPos] << 36 & 4398046511103L;
         out[7 + outPos] = (long)in[36 + inPos] >> 6 & 3L | (long)in[37 + inPos] << 2 & 1023L | (long)in[38 + inPos] << 10 & 262143L | (long)in[39 + inPos] << 18 & 67108863L | (long)in[40 + inPos] << 26 & 17179869183L | (long)in[41 + inPos] << 34 & 4398046511103L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 4398046511103L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 2 & 63L | (long)in.get(6 + inPos) << 6 & 16383L | (long)in.get(7 + inPos) << 14 & 4194303L | (long)in.get(8 + inPos) << 22 & 1073741823L | (long)in.get(9 + inPos) << 30 & 274877906943L | (long)in.get(10 + inPos) << 38 & 4398046511103L;
         out[2 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L | (long)in.get(11 + inPos) << 4 & 4095L | (long)in.get(12 + inPos) << 12 & 1048575L | (long)in.get(13 + inPos) << 20 & 268435455L | (long)in.get(14 + inPos) << 28 & 68719476735L | (long)in.get(15 + inPos) << 36 & 4398046511103L;
         out[3 + outPos] = (long)in.get(15 + inPos) >> 6 & 3L | (long)in.get(16 + inPos) << 2 & 1023L | (long)in.get(17 + inPos) << 10 & 262143L | (long)in.get(18 + inPos) << 18 & 67108863L | (long)in.get(19 + inPos) << 26 & 17179869183L | (long)in.get(20 + inPos) << 34 & 4398046511103L;
         out[4 + outPos] = (long)in.get(21 + inPos) & 255L | (long)in.get(22 + inPos) << 8 & 65535L | (long)in.get(23 + inPos) << 16 & 16777215L | (long)in.get(24 + inPos) << 24 & 4294967295L | (long)in.get(25 + inPos) << 32 & 1099511627775L | (long)in.get(26 + inPos) << 40 & 4398046511103L;
         out[5 + outPos] = (long)in.get(26 + inPos) >> 2 & 63L | (long)in.get(27 + inPos) << 6 & 16383L | (long)in.get(28 + inPos) << 14 & 4194303L | (long)in.get(29 + inPos) << 22 & 1073741823L | (long)in.get(30 + inPos) << 30 & 274877906943L | (long)in.get(31 + inPos) << 38 & 4398046511103L;
         out[6 + outPos] = (long)in.get(31 + inPos) >> 4 & 15L | (long)in.get(32 + inPos) << 4 & 4095L | (long)in.get(33 + inPos) << 12 & 1048575L | (long)in.get(34 + inPos) << 20 & 268435455L | (long)in.get(35 + inPos) << 28 & 68719476735L | (long)in.get(36 + inPos) << 36 & 4398046511103L;
         out[7 + outPos] = (long)in.get(36 + inPos) >> 6 & 3L | (long)in.get(37 + inPos) << 2 & 1023L | (long)in.get(38 + inPos) << 10 & 262143L | (long)in.get(39 + inPos) << 18 & 67108863L | (long)in.get(40 + inPos) << 26 & 17179869183L | (long)in.get(41 + inPos) << 34 & 4398046511103L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 4398046511103L;
         out[1 + outPos] = (long)in[5 + inPos] >> 2 & 63L | (long)in[6 + inPos] << 6 & 16383L | (long)in[7 + inPos] << 14 & 4194303L | (long)in[8 + inPos] << 22 & 1073741823L | (long)in[9 + inPos] << 30 & 274877906943L | (long)in[10 + inPos] << 38 & 4398046511103L;
         out[2 + outPos] = (long)in[10 + inPos] >> 4 & 15L | (long)in[11 + inPos] << 4 & 4095L | (long)in[12 + inPos] << 12 & 1048575L | (long)in[13 + inPos] << 20 & 268435455L | (long)in[14 + inPos] << 28 & 68719476735L | (long)in[15 + inPos] << 36 & 4398046511103L;
         out[3 + outPos] = (long)in[15 + inPos] >> 6 & 3L | (long)in[16 + inPos] << 2 & 1023L | (long)in[17 + inPos] << 10 & 262143L | (long)in[18 + inPos] << 18 & 67108863L | (long)in[19 + inPos] << 26 & 17179869183L | (long)in[20 + inPos] << 34 & 4398046511103L;
         out[4 + outPos] = (long)in[21 + inPos] & 255L | (long)in[22 + inPos] << 8 & 65535L | (long)in[23 + inPos] << 16 & 16777215L | (long)in[24 + inPos] << 24 & 4294967295L | (long)in[25 + inPos] << 32 & 1099511627775L | (long)in[26 + inPos] << 40 & 4398046511103L;
         out[5 + outPos] = (long)in[26 + inPos] >> 2 & 63L | (long)in[27 + inPos] << 6 & 16383L | (long)in[28 + inPos] << 14 & 4194303L | (long)in[29 + inPos] << 22 & 1073741823L | (long)in[30 + inPos] << 30 & 274877906943L | (long)in[31 + inPos] << 38 & 4398046511103L;
         out[6 + outPos] = (long)in[31 + inPos] >> 4 & 15L | (long)in[32 + inPos] << 4 & 4095L | (long)in[33 + inPos] << 12 & 1048575L | (long)in[34 + inPos] << 20 & 268435455L | (long)in[35 + inPos] << 28 & 68719476735L | (long)in[36 + inPos] << 36 & 4398046511103L;
         out[7 + outPos] = (long)in[36 + inPos] >> 6 & 3L | (long)in[37 + inPos] << 2 & 1023L | (long)in[38 + inPos] << 10 & 262143L | (long)in[39 + inPos] << 18 & 67108863L | (long)in[40 + inPos] << 26 & 17179869183L | (long)in[41 + inPos] << 34 & 4398046511103L;
         out[8 + outPos] = (long)in[42 + inPos] & 255L | (long)in[43 + inPos] << 8 & 65535L | (long)in[44 + inPos] << 16 & 16777215L | (long)in[45 + inPos] << 24 & 4294967295L | (long)in[46 + inPos] << 32 & 1099511627775L | (long)in[47 + inPos] << 40 & 4398046511103L;
         out[9 + outPos] = (long)in[47 + inPos] >> 2 & 63L | (long)in[48 + inPos] << 6 & 16383L | (long)in[49 + inPos] << 14 & 4194303L | (long)in[50 + inPos] << 22 & 1073741823L | (long)in[51 + inPos] << 30 & 274877906943L | (long)in[52 + inPos] << 38 & 4398046511103L;
         out[10 + outPos] = (long)in[52 + inPos] >> 4 & 15L | (long)in[53 + inPos] << 4 & 4095L | (long)in[54 + inPos] << 12 & 1048575L | (long)in[55 + inPos] << 20 & 268435455L | (long)in[56 + inPos] << 28 & 68719476735L | (long)in[57 + inPos] << 36 & 4398046511103L;
         out[11 + outPos] = (long)in[57 + inPos] >> 6 & 3L | (long)in[58 + inPos] << 2 & 1023L | (long)in[59 + inPos] << 10 & 262143L | (long)in[60 + inPos] << 18 & 67108863L | (long)in[61 + inPos] << 26 & 17179869183L | (long)in[62 + inPos] << 34 & 4398046511103L;
         out[12 + outPos] = (long)in[63 + inPos] & 255L | (long)in[64 + inPos] << 8 & 65535L | (long)in[65 + inPos] << 16 & 16777215L | (long)in[66 + inPos] << 24 & 4294967295L | (long)in[67 + inPos] << 32 & 1099511627775L | (long)in[68 + inPos] << 40 & 4398046511103L;
         out[13 + outPos] = (long)in[68 + inPos] >> 2 & 63L | (long)in[69 + inPos] << 6 & 16383L | (long)in[70 + inPos] << 14 & 4194303L | (long)in[71 + inPos] << 22 & 1073741823L | (long)in[72 + inPos] << 30 & 274877906943L | (long)in[73 + inPos] << 38 & 4398046511103L;
         out[14 + outPos] = (long)in[73 + inPos] >> 4 & 15L | (long)in[74 + inPos] << 4 & 4095L | (long)in[75 + inPos] << 12 & 1048575L | (long)in[76 + inPos] << 20 & 268435455L | (long)in[77 + inPos] << 28 & 68719476735L | (long)in[78 + inPos] << 36 & 4398046511103L;
         out[15 + outPos] = (long)in[78 + inPos] >> 6 & 3L | (long)in[79 + inPos] << 2 & 1023L | (long)in[80 + inPos] << 10 & 262143L | (long)in[81 + inPos] << 18 & 67108863L | (long)in[82 + inPos] << 26 & 17179869183L | (long)in[83 + inPos] << 34 & 4398046511103L;
         out[16 + outPos] = (long)in[84 + inPos] & 255L | (long)in[85 + inPos] << 8 & 65535L | (long)in[86 + inPos] << 16 & 16777215L | (long)in[87 + inPos] << 24 & 4294967295L | (long)in[88 + inPos] << 32 & 1099511627775L | (long)in[89 + inPos] << 40 & 4398046511103L;
         out[17 + outPos] = (long)in[89 + inPos] >> 2 & 63L | (long)in[90 + inPos] << 6 & 16383L | (long)in[91 + inPos] << 14 & 4194303L | (long)in[92 + inPos] << 22 & 1073741823L | (long)in[93 + inPos] << 30 & 274877906943L | (long)in[94 + inPos] << 38 & 4398046511103L;
         out[18 + outPos] = (long)in[94 + inPos] >> 4 & 15L | (long)in[95 + inPos] << 4 & 4095L | (long)in[96 + inPos] << 12 & 1048575L | (long)in[97 + inPos] << 20 & 268435455L | (long)in[98 + inPos] << 28 & 68719476735L | (long)in[99 + inPos] << 36 & 4398046511103L;
         out[19 + outPos] = (long)in[99 + inPos] >> 6 & 3L | (long)in[100 + inPos] << 2 & 1023L | (long)in[101 + inPos] << 10 & 262143L | (long)in[102 + inPos] << 18 & 67108863L | (long)in[103 + inPos] << 26 & 17179869183L | (long)in[104 + inPos] << 34 & 4398046511103L;
         out[20 + outPos] = (long)in[105 + inPos] & 255L | (long)in[106 + inPos] << 8 & 65535L | (long)in[107 + inPos] << 16 & 16777215L | (long)in[108 + inPos] << 24 & 4294967295L | (long)in[109 + inPos] << 32 & 1099511627775L | (long)in[110 + inPos] << 40 & 4398046511103L;
         out[21 + outPos] = (long)in[110 + inPos] >> 2 & 63L | (long)in[111 + inPos] << 6 & 16383L | (long)in[112 + inPos] << 14 & 4194303L | (long)in[113 + inPos] << 22 & 1073741823L | (long)in[114 + inPos] << 30 & 274877906943L | (long)in[115 + inPos] << 38 & 4398046511103L;
         out[22 + outPos] = (long)in[115 + inPos] >> 4 & 15L | (long)in[116 + inPos] << 4 & 4095L | (long)in[117 + inPos] << 12 & 1048575L | (long)in[118 + inPos] << 20 & 268435455L | (long)in[119 + inPos] << 28 & 68719476735L | (long)in[120 + inPos] << 36 & 4398046511103L;
         out[23 + outPos] = (long)in[120 + inPos] >> 6 & 3L | (long)in[121 + inPos] << 2 & 1023L | (long)in[122 + inPos] << 10 & 262143L | (long)in[123 + inPos] << 18 & 67108863L | (long)in[124 + inPos] << 26 & 17179869183L | (long)in[125 + inPos] << 34 & 4398046511103L;
         out[24 + outPos] = (long)in[126 + inPos] & 255L | (long)in[127 + inPos] << 8 & 65535L | (long)in[128 + inPos] << 16 & 16777215L | (long)in[129 + inPos] << 24 & 4294967295L | (long)in[130 + inPos] << 32 & 1099511627775L | (long)in[131 + inPos] << 40 & 4398046511103L;
         out[25 + outPos] = (long)in[131 + inPos] >> 2 & 63L | (long)in[132 + inPos] << 6 & 16383L | (long)in[133 + inPos] << 14 & 4194303L | (long)in[134 + inPos] << 22 & 1073741823L | (long)in[135 + inPos] << 30 & 274877906943L | (long)in[136 + inPos] << 38 & 4398046511103L;
         out[26 + outPos] = (long)in[136 + inPos] >> 4 & 15L | (long)in[137 + inPos] << 4 & 4095L | (long)in[138 + inPos] << 12 & 1048575L | (long)in[139 + inPos] << 20 & 268435455L | (long)in[140 + inPos] << 28 & 68719476735L | (long)in[141 + inPos] << 36 & 4398046511103L;
         out[27 + outPos] = (long)in[141 + inPos] >> 6 & 3L | (long)in[142 + inPos] << 2 & 1023L | (long)in[143 + inPos] << 10 & 262143L | (long)in[144 + inPos] << 18 & 67108863L | (long)in[145 + inPos] << 26 & 17179869183L | (long)in[146 + inPos] << 34 & 4398046511103L;
         out[28 + outPos] = (long)in[147 + inPos] & 255L | (long)in[148 + inPos] << 8 & 65535L | (long)in[149 + inPos] << 16 & 16777215L | (long)in[150 + inPos] << 24 & 4294967295L | (long)in[151 + inPos] << 32 & 1099511627775L | (long)in[152 + inPos] << 40 & 4398046511103L;
         out[29 + outPos] = (long)in[152 + inPos] >> 2 & 63L | (long)in[153 + inPos] << 6 & 16383L | (long)in[154 + inPos] << 14 & 4194303L | (long)in[155 + inPos] << 22 & 1073741823L | (long)in[156 + inPos] << 30 & 274877906943L | (long)in[157 + inPos] << 38 & 4398046511103L;
         out[30 + outPos] = (long)in[157 + inPos] >> 4 & 15L | (long)in[158 + inPos] << 4 & 4095L | (long)in[159 + inPos] << 12 & 1048575L | (long)in[160 + inPos] << 20 & 268435455L | (long)in[161 + inPos] << 28 & 68719476735L | (long)in[162 + inPos] << 36 & 4398046511103L;
         out[31 + outPos] = (long)in[162 + inPos] >> 6 & 3L | (long)in[163 + inPos] << 2 & 1023L | (long)in[164 + inPos] << 10 & 262143L | (long)in[165 + inPos] << 18 & 67108863L | (long)in[166 + inPos] << 26 & 17179869183L | (long)in[167 + inPos] << 34 & 4398046511103L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 4398046511103L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 2 & 63L | (long)in.get(6 + inPos) << 6 & 16383L | (long)in.get(7 + inPos) << 14 & 4194303L | (long)in.get(8 + inPos) << 22 & 1073741823L | (long)in.get(9 + inPos) << 30 & 274877906943L | (long)in.get(10 + inPos) << 38 & 4398046511103L;
         out[2 + outPos] = (long)in.get(10 + inPos) >> 4 & 15L | (long)in.get(11 + inPos) << 4 & 4095L | (long)in.get(12 + inPos) << 12 & 1048575L | (long)in.get(13 + inPos) << 20 & 268435455L | (long)in.get(14 + inPos) << 28 & 68719476735L | (long)in.get(15 + inPos) << 36 & 4398046511103L;
         out[3 + outPos] = (long)in.get(15 + inPos) >> 6 & 3L | (long)in.get(16 + inPos) << 2 & 1023L | (long)in.get(17 + inPos) << 10 & 262143L | (long)in.get(18 + inPos) << 18 & 67108863L | (long)in.get(19 + inPos) << 26 & 17179869183L | (long)in.get(20 + inPos) << 34 & 4398046511103L;
         out[4 + outPos] = (long)in.get(21 + inPos) & 255L | (long)in.get(22 + inPos) << 8 & 65535L | (long)in.get(23 + inPos) << 16 & 16777215L | (long)in.get(24 + inPos) << 24 & 4294967295L | (long)in.get(25 + inPos) << 32 & 1099511627775L | (long)in.get(26 + inPos) << 40 & 4398046511103L;
         out[5 + outPos] = (long)in.get(26 + inPos) >> 2 & 63L | (long)in.get(27 + inPos) << 6 & 16383L | (long)in.get(28 + inPos) << 14 & 4194303L | (long)in.get(29 + inPos) << 22 & 1073741823L | (long)in.get(30 + inPos) << 30 & 274877906943L | (long)in.get(31 + inPos) << 38 & 4398046511103L;
         out[6 + outPos] = (long)in.get(31 + inPos) >> 4 & 15L | (long)in.get(32 + inPos) << 4 & 4095L | (long)in.get(33 + inPos) << 12 & 1048575L | (long)in.get(34 + inPos) << 20 & 268435455L | (long)in.get(35 + inPos) << 28 & 68719476735L | (long)in.get(36 + inPos) << 36 & 4398046511103L;
         out[7 + outPos] = (long)in.get(36 + inPos) >> 6 & 3L | (long)in.get(37 + inPos) << 2 & 1023L | (long)in.get(38 + inPos) << 10 & 262143L | (long)in.get(39 + inPos) << 18 & 67108863L | (long)in.get(40 + inPos) << 26 & 17179869183L | (long)in.get(41 + inPos) << 34 & 4398046511103L;
         out[8 + outPos] = (long)in.get(42 + inPos) & 255L | (long)in.get(43 + inPos) << 8 & 65535L | (long)in.get(44 + inPos) << 16 & 16777215L | (long)in.get(45 + inPos) << 24 & 4294967295L | (long)in.get(46 + inPos) << 32 & 1099511627775L | (long)in.get(47 + inPos) << 40 & 4398046511103L;
         out[9 + outPos] = (long)in.get(47 + inPos) >> 2 & 63L | (long)in.get(48 + inPos) << 6 & 16383L | (long)in.get(49 + inPos) << 14 & 4194303L | (long)in.get(50 + inPos) << 22 & 1073741823L | (long)in.get(51 + inPos) << 30 & 274877906943L | (long)in.get(52 + inPos) << 38 & 4398046511103L;
         out[10 + outPos] = (long)in.get(52 + inPos) >> 4 & 15L | (long)in.get(53 + inPos) << 4 & 4095L | (long)in.get(54 + inPos) << 12 & 1048575L | (long)in.get(55 + inPos) << 20 & 268435455L | (long)in.get(56 + inPos) << 28 & 68719476735L | (long)in.get(57 + inPos) << 36 & 4398046511103L;
         out[11 + outPos] = (long)in.get(57 + inPos) >> 6 & 3L | (long)in.get(58 + inPos) << 2 & 1023L | (long)in.get(59 + inPos) << 10 & 262143L | (long)in.get(60 + inPos) << 18 & 67108863L | (long)in.get(61 + inPos) << 26 & 17179869183L | (long)in.get(62 + inPos) << 34 & 4398046511103L;
         out[12 + outPos] = (long)in.get(63 + inPos) & 255L | (long)in.get(64 + inPos) << 8 & 65535L | (long)in.get(65 + inPos) << 16 & 16777215L | (long)in.get(66 + inPos) << 24 & 4294967295L | (long)in.get(67 + inPos) << 32 & 1099511627775L | (long)in.get(68 + inPos) << 40 & 4398046511103L;
         out[13 + outPos] = (long)in.get(68 + inPos) >> 2 & 63L | (long)in.get(69 + inPos) << 6 & 16383L | (long)in.get(70 + inPos) << 14 & 4194303L | (long)in.get(71 + inPos) << 22 & 1073741823L | (long)in.get(72 + inPos) << 30 & 274877906943L | (long)in.get(73 + inPos) << 38 & 4398046511103L;
         out[14 + outPos] = (long)in.get(73 + inPos) >> 4 & 15L | (long)in.get(74 + inPos) << 4 & 4095L | (long)in.get(75 + inPos) << 12 & 1048575L | (long)in.get(76 + inPos) << 20 & 268435455L | (long)in.get(77 + inPos) << 28 & 68719476735L | (long)in.get(78 + inPos) << 36 & 4398046511103L;
         out[15 + outPos] = (long)in.get(78 + inPos) >> 6 & 3L | (long)in.get(79 + inPos) << 2 & 1023L | (long)in.get(80 + inPos) << 10 & 262143L | (long)in.get(81 + inPos) << 18 & 67108863L | (long)in.get(82 + inPos) << 26 & 17179869183L | (long)in.get(83 + inPos) << 34 & 4398046511103L;
         out[16 + outPos] = (long)in.get(84 + inPos) & 255L | (long)in.get(85 + inPos) << 8 & 65535L | (long)in.get(86 + inPos) << 16 & 16777215L | (long)in.get(87 + inPos) << 24 & 4294967295L | (long)in.get(88 + inPos) << 32 & 1099511627775L | (long)in.get(89 + inPos) << 40 & 4398046511103L;
         out[17 + outPos] = (long)in.get(89 + inPos) >> 2 & 63L | (long)in.get(90 + inPos) << 6 & 16383L | (long)in.get(91 + inPos) << 14 & 4194303L | (long)in.get(92 + inPos) << 22 & 1073741823L | (long)in.get(93 + inPos) << 30 & 274877906943L | (long)in.get(94 + inPos) << 38 & 4398046511103L;
         out[18 + outPos] = (long)in.get(94 + inPos) >> 4 & 15L | (long)in.get(95 + inPos) << 4 & 4095L | (long)in.get(96 + inPos) << 12 & 1048575L | (long)in.get(97 + inPos) << 20 & 268435455L | (long)in.get(98 + inPos) << 28 & 68719476735L | (long)in.get(99 + inPos) << 36 & 4398046511103L;
         out[19 + outPos] = (long)in.get(99 + inPos) >> 6 & 3L | (long)in.get(100 + inPos) << 2 & 1023L | (long)in.get(101 + inPos) << 10 & 262143L | (long)in.get(102 + inPos) << 18 & 67108863L | (long)in.get(103 + inPos) << 26 & 17179869183L | (long)in.get(104 + inPos) << 34 & 4398046511103L;
         out[20 + outPos] = (long)in.get(105 + inPos) & 255L | (long)in.get(106 + inPos) << 8 & 65535L | (long)in.get(107 + inPos) << 16 & 16777215L | (long)in.get(108 + inPos) << 24 & 4294967295L | (long)in.get(109 + inPos) << 32 & 1099511627775L | (long)in.get(110 + inPos) << 40 & 4398046511103L;
         out[21 + outPos] = (long)in.get(110 + inPos) >> 2 & 63L | (long)in.get(111 + inPos) << 6 & 16383L | (long)in.get(112 + inPos) << 14 & 4194303L | (long)in.get(113 + inPos) << 22 & 1073741823L | (long)in.get(114 + inPos) << 30 & 274877906943L | (long)in.get(115 + inPos) << 38 & 4398046511103L;
         out[22 + outPos] = (long)in.get(115 + inPos) >> 4 & 15L | (long)in.get(116 + inPos) << 4 & 4095L | (long)in.get(117 + inPos) << 12 & 1048575L | (long)in.get(118 + inPos) << 20 & 268435455L | (long)in.get(119 + inPos) << 28 & 68719476735L | (long)in.get(120 + inPos) << 36 & 4398046511103L;
         out[23 + outPos] = (long)in.get(120 + inPos) >> 6 & 3L | (long)in.get(121 + inPos) << 2 & 1023L | (long)in.get(122 + inPos) << 10 & 262143L | (long)in.get(123 + inPos) << 18 & 67108863L | (long)in.get(124 + inPos) << 26 & 17179869183L | (long)in.get(125 + inPos) << 34 & 4398046511103L;
         out[24 + outPos] = (long)in.get(126 + inPos) & 255L | (long)in.get(127 + inPos) << 8 & 65535L | (long)in.get(128 + inPos) << 16 & 16777215L | (long)in.get(129 + inPos) << 24 & 4294967295L | (long)in.get(130 + inPos) << 32 & 1099511627775L | (long)in.get(131 + inPos) << 40 & 4398046511103L;
         out[25 + outPos] = (long)in.get(131 + inPos) >> 2 & 63L | (long)in.get(132 + inPos) << 6 & 16383L | (long)in.get(133 + inPos) << 14 & 4194303L | (long)in.get(134 + inPos) << 22 & 1073741823L | (long)in.get(135 + inPos) << 30 & 274877906943L | (long)in.get(136 + inPos) << 38 & 4398046511103L;
         out[26 + outPos] = (long)in.get(136 + inPos) >> 4 & 15L | (long)in.get(137 + inPos) << 4 & 4095L | (long)in.get(138 + inPos) << 12 & 1048575L | (long)in.get(139 + inPos) << 20 & 268435455L | (long)in.get(140 + inPos) << 28 & 68719476735L | (long)in.get(141 + inPos) << 36 & 4398046511103L;
         out[27 + outPos] = (long)in.get(141 + inPos) >> 6 & 3L | (long)in.get(142 + inPos) << 2 & 1023L | (long)in.get(143 + inPos) << 10 & 262143L | (long)in.get(144 + inPos) << 18 & 67108863L | (long)in.get(145 + inPos) << 26 & 17179869183L | (long)in.get(146 + inPos) << 34 & 4398046511103L;
         out[28 + outPos] = (long)in.get(147 + inPos) & 255L | (long)in.get(148 + inPos) << 8 & 65535L | (long)in.get(149 + inPos) << 16 & 16777215L | (long)in.get(150 + inPos) << 24 & 4294967295L | (long)in.get(151 + inPos) << 32 & 1099511627775L | (long)in.get(152 + inPos) << 40 & 4398046511103L;
         out[29 + outPos] = (long)in.get(152 + inPos) >> 2 & 63L | (long)in.get(153 + inPos) << 6 & 16383L | (long)in.get(154 + inPos) << 14 & 4194303L | (long)in.get(155 + inPos) << 22 & 1073741823L | (long)in.get(156 + inPos) << 30 & 274877906943L | (long)in.get(157 + inPos) << 38 & 4398046511103L;
         out[30 + outPos] = (long)in.get(157 + inPos) >> 4 & 15L | (long)in.get(158 + inPos) << 4 & 4095L | (long)in.get(159 + inPos) << 12 & 1048575L | (long)in.get(160 + inPos) << 20 & 268435455L | (long)in.get(161 + inPos) << 28 & 68719476735L | (long)in.get(162 + inPos) << 36 & 4398046511103L;
         out[31 + outPos] = (long)in.get(162 + inPos) >> 6 & 3L | (long)in.get(163 + inPos) << 2 & 1023L | (long)in.get(164 + inPos) << 10 & 262143L | (long)in.get(165 + inPos) << 18 & 67108863L | (long)in.get(166 + inPos) << 26 & 17179869183L | (long)in.get(167 + inPos) << 34 & 4398046511103L;
      }
   }

   private static final class Packer43 extends BytePackerForLong {
      private Packer43() {
         super(43);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 8796093022207L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 8796093022207L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 8796093022207L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 8796093022207L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 8796093022207L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 8796093022207L) >>> 40 | (in[1 + inPos] & 8796093022207L) << 3) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 8796093022207L) >>> 5 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 8796093022207L) >>> 13 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 8796093022207L) >>> 21 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 8796093022207L) >>> 29 & 255L));
         out[10 + outPos] = (byte)((int)(((in[1 + inPos] & 8796093022207L) >>> 37 | (in[2 + inPos] & 8796093022207L) << 6) & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 8796093022207L) >>> 2 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 8796093022207L) >>> 10 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 8796093022207L) >>> 18 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 8796093022207L) >>> 26 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 8796093022207L) >>> 34 & 255L));
         out[16 + outPos] = (byte)((int)(((in[2 + inPos] & 8796093022207L) >>> 42 | (in[3 + inPos] & 8796093022207L) << 1) & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 8796093022207L) >>> 7 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 8796093022207L) >>> 15 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 8796093022207L) >>> 23 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 8796093022207L) >>> 31 & 255L));
         out[21 + outPos] = (byte)((int)(((in[3 + inPos] & 8796093022207L) >>> 39 | (in[4 + inPos] & 8796093022207L) << 4) & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 8796093022207L) >>> 4 & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 8796093022207L) >>> 12 & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 8796093022207L) >>> 20 & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 8796093022207L) >>> 28 & 255L));
         out[26 + outPos] = (byte)((int)(((in[4 + inPos] & 8796093022207L) >>> 36 | (in[5 + inPos] & 8796093022207L) << 7) & 255L));
         out[27 + outPos] = (byte)((int)((in[5 + inPos] & 8796093022207L) >>> 1 & 255L));
         out[28 + outPos] = (byte)((int)((in[5 + inPos] & 8796093022207L) >>> 9 & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 8796093022207L) >>> 17 & 255L));
         out[30 + outPos] = (byte)((int)((in[5 + inPos] & 8796093022207L) >>> 25 & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 8796093022207L) >>> 33 & 255L));
         out[32 + outPos] = (byte)((int)(((in[5 + inPos] & 8796093022207L) >>> 41 | (in[6 + inPos] & 8796093022207L) << 2) & 255L));
         out[33 + outPos] = (byte)((int)((in[6 + inPos] & 8796093022207L) >>> 6 & 255L));
         out[34 + outPos] = (byte)((int)((in[6 + inPos] & 8796093022207L) >>> 14 & 255L));
         out[35 + outPos] = (byte)((int)((in[6 + inPos] & 8796093022207L) >>> 22 & 255L));
         out[36 + outPos] = (byte)((int)((in[6 + inPos] & 8796093022207L) >>> 30 & 255L));
         out[37 + outPos] = (byte)((int)(((in[6 + inPos] & 8796093022207L) >>> 38 | (in[7 + inPos] & 8796093022207L) << 5) & 255L));
         out[38 + outPos] = (byte)((int)((in[7 + inPos] & 8796093022207L) >>> 3 & 255L));
         out[39 + outPos] = (byte)((int)((in[7 + inPos] & 8796093022207L) >>> 11 & 255L));
         out[40 + outPos] = (byte)((int)((in[7 + inPos] & 8796093022207L) >>> 19 & 255L));
         out[41 + outPos] = (byte)((int)((in[7 + inPos] & 8796093022207L) >>> 27 & 255L));
         out[42 + outPos] = (byte)((int)((in[7 + inPos] & 8796093022207L) >>> 35 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 8796093022207L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 8796093022207L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 8796093022207L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 8796093022207L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 8796093022207L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 8796093022207L) >>> 40 | (in[1 + inPos] & 8796093022207L) << 3) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 8796093022207L) >>> 5 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 8796093022207L) >>> 13 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 8796093022207L) >>> 21 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 8796093022207L) >>> 29 & 255L));
         out[10 + outPos] = (byte)((int)(((in[1 + inPos] & 8796093022207L) >>> 37 | (in[2 + inPos] & 8796093022207L) << 6) & 255L));
         out[11 + outPos] = (byte)((int)((in[2 + inPos] & 8796093022207L) >>> 2 & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 8796093022207L) >>> 10 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 8796093022207L) >>> 18 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 8796093022207L) >>> 26 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 8796093022207L) >>> 34 & 255L));
         out[16 + outPos] = (byte)((int)(((in[2 + inPos] & 8796093022207L) >>> 42 | (in[3 + inPos] & 8796093022207L) << 1) & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 8796093022207L) >>> 7 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 8796093022207L) >>> 15 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 8796093022207L) >>> 23 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 8796093022207L) >>> 31 & 255L));
         out[21 + outPos] = (byte)((int)(((in[3 + inPos] & 8796093022207L) >>> 39 | (in[4 + inPos] & 8796093022207L) << 4) & 255L));
         out[22 + outPos] = (byte)((int)((in[4 + inPos] & 8796093022207L) >>> 4 & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 8796093022207L) >>> 12 & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 8796093022207L) >>> 20 & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 8796093022207L) >>> 28 & 255L));
         out[26 + outPos] = (byte)((int)(((in[4 + inPos] & 8796093022207L) >>> 36 | (in[5 + inPos] & 8796093022207L) << 7) & 255L));
         out[27 + outPos] = (byte)((int)((in[5 + inPos] & 8796093022207L) >>> 1 & 255L));
         out[28 + outPos] = (byte)((int)((in[5 + inPos] & 8796093022207L) >>> 9 & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 8796093022207L) >>> 17 & 255L));
         out[30 + outPos] = (byte)((int)((in[5 + inPos] & 8796093022207L) >>> 25 & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 8796093022207L) >>> 33 & 255L));
         out[32 + outPos] = (byte)((int)(((in[5 + inPos] & 8796093022207L) >>> 41 | (in[6 + inPos] & 8796093022207L) << 2) & 255L));
         out[33 + outPos] = (byte)((int)((in[6 + inPos] & 8796093022207L) >>> 6 & 255L));
         out[34 + outPos] = (byte)((int)((in[6 + inPos] & 8796093022207L) >>> 14 & 255L));
         out[35 + outPos] = (byte)((int)((in[6 + inPos] & 8796093022207L) >>> 22 & 255L));
         out[36 + outPos] = (byte)((int)((in[6 + inPos] & 8796093022207L) >>> 30 & 255L));
         out[37 + outPos] = (byte)((int)(((in[6 + inPos] & 8796093022207L) >>> 38 | (in[7 + inPos] & 8796093022207L) << 5) & 255L));
         out[38 + outPos] = (byte)((int)((in[7 + inPos] & 8796093022207L) >>> 3 & 255L));
         out[39 + outPos] = (byte)((int)((in[7 + inPos] & 8796093022207L) >>> 11 & 255L));
         out[40 + outPos] = (byte)((int)((in[7 + inPos] & 8796093022207L) >>> 19 & 255L));
         out[41 + outPos] = (byte)((int)((in[7 + inPos] & 8796093022207L) >>> 27 & 255L));
         out[42 + outPos] = (byte)((int)((in[7 + inPos] & 8796093022207L) >>> 35 & 255L));
         out[43 + outPos] = (byte)((int)(in[8 + inPos] & 8796093022207L & 255L));
         out[44 + outPos] = (byte)((int)((in[8 + inPos] & 8796093022207L) >>> 8 & 255L));
         out[45 + outPos] = (byte)((int)((in[8 + inPos] & 8796093022207L) >>> 16 & 255L));
         out[46 + outPos] = (byte)((int)((in[8 + inPos] & 8796093022207L) >>> 24 & 255L));
         out[47 + outPos] = (byte)((int)((in[8 + inPos] & 8796093022207L) >>> 32 & 255L));
         out[48 + outPos] = (byte)((int)(((in[8 + inPos] & 8796093022207L) >>> 40 | (in[9 + inPos] & 8796093022207L) << 3) & 255L));
         out[49 + outPos] = (byte)((int)((in[9 + inPos] & 8796093022207L) >>> 5 & 255L));
         out[50 + outPos] = (byte)((int)((in[9 + inPos] & 8796093022207L) >>> 13 & 255L));
         out[51 + outPos] = (byte)((int)((in[9 + inPos] & 8796093022207L) >>> 21 & 255L));
         out[52 + outPos] = (byte)((int)((in[9 + inPos] & 8796093022207L) >>> 29 & 255L));
         out[53 + outPos] = (byte)((int)(((in[9 + inPos] & 8796093022207L) >>> 37 | (in[10 + inPos] & 8796093022207L) << 6) & 255L));
         out[54 + outPos] = (byte)((int)((in[10 + inPos] & 8796093022207L) >>> 2 & 255L));
         out[55 + outPos] = (byte)((int)((in[10 + inPos] & 8796093022207L) >>> 10 & 255L));
         out[56 + outPos] = (byte)((int)((in[10 + inPos] & 8796093022207L) >>> 18 & 255L));
         out[57 + outPos] = (byte)((int)((in[10 + inPos] & 8796093022207L) >>> 26 & 255L));
         out[58 + outPos] = (byte)((int)((in[10 + inPos] & 8796093022207L) >>> 34 & 255L));
         out[59 + outPos] = (byte)((int)(((in[10 + inPos] & 8796093022207L) >>> 42 | (in[11 + inPos] & 8796093022207L) << 1) & 255L));
         out[60 + outPos] = (byte)((int)((in[11 + inPos] & 8796093022207L) >>> 7 & 255L));
         out[61 + outPos] = (byte)((int)((in[11 + inPos] & 8796093022207L) >>> 15 & 255L));
         out[62 + outPos] = (byte)((int)((in[11 + inPos] & 8796093022207L) >>> 23 & 255L));
         out[63 + outPos] = (byte)((int)((in[11 + inPos] & 8796093022207L) >>> 31 & 255L));
         out[64 + outPos] = (byte)((int)(((in[11 + inPos] & 8796093022207L) >>> 39 | (in[12 + inPos] & 8796093022207L) << 4) & 255L));
         out[65 + outPos] = (byte)((int)((in[12 + inPos] & 8796093022207L) >>> 4 & 255L));
         out[66 + outPos] = (byte)((int)((in[12 + inPos] & 8796093022207L) >>> 12 & 255L));
         out[67 + outPos] = (byte)((int)((in[12 + inPos] & 8796093022207L) >>> 20 & 255L));
         out[68 + outPos] = (byte)((int)((in[12 + inPos] & 8796093022207L) >>> 28 & 255L));
         out[69 + outPos] = (byte)((int)(((in[12 + inPos] & 8796093022207L) >>> 36 | (in[13 + inPos] & 8796093022207L) << 7) & 255L));
         out[70 + outPos] = (byte)((int)((in[13 + inPos] & 8796093022207L) >>> 1 & 255L));
         out[71 + outPos] = (byte)((int)((in[13 + inPos] & 8796093022207L) >>> 9 & 255L));
         out[72 + outPos] = (byte)((int)((in[13 + inPos] & 8796093022207L) >>> 17 & 255L));
         out[73 + outPos] = (byte)((int)((in[13 + inPos] & 8796093022207L) >>> 25 & 255L));
         out[74 + outPos] = (byte)((int)((in[13 + inPos] & 8796093022207L) >>> 33 & 255L));
         out[75 + outPos] = (byte)((int)(((in[13 + inPos] & 8796093022207L) >>> 41 | (in[14 + inPos] & 8796093022207L) << 2) & 255L));
         out[76 + outPos] = (byte)((int)((in[14 + inPos] & 8796093022207L) >>> 6 & 255L));
         out[77 + outPos] = (byte)((int)((in[14 + inPos] & 8796093022207L) >>> 14 & 255L));
         out[78 + outPos] = (byte)((int)((in[14 + inPos] & 8796093022207L) >>> 22 & 255L));
         out[79 + outPos] = (byte)((int)((in[14 + inPos] & 8796093022207L) >>> 30 & 255L));
         out[80 + outPos] = (byte)((int)(((in[14 + inPos] & 8796093022207L) >>> 38 | (in[15 + inPos] & 8796093022207L) << 5) & 255L));
         out[81 + outPos] = (byte)((int)((in[15 + inPos] & 8796093022207L) >>> 3 & 255L));
         out[82 + outPos] = (byte)((int)((in[15 + inPos] & 8796093022207L) >>> 11 & 255L));
         out[83 + outPos] = (byte)((int)((in[15 + inPos] & 8796093022207L) >>> 19 & 255L));
         out[84 + outPos] = (byte)((int)((in[15 + inPos] & 8796093022207L) >>> 27 & 255L));
         out[85 + outPos] = (byte)((int)((in[15 + inPos] & 8796093022207L) >>> 35 & 255L));
         out[86 + outPos] = (byte)((int)(in[16 + inPos] & 8796093022207L & 255L));
         out[87 + outPos] = (byte)((int)((in[16 + inPos] & 8796093022207L) >>> 8 & 255L));
         out[88 + outPos] = (byte)((int)((in[16 + inPos] & 8796093022207L) >>> 16 & 255L));
         out[89 + outPos] = (byte)((int)((in[16 + inPos] & 8796093022207L) >>> 24 & 255L));
         out[90 + outPos] = (byte)((int)((in[16 + inPos] & 8796093022207L) >>> 32 & 255L));
         out[91 + outPos] = (byte)((int)(((in[16 + inPos] & 8796093022207L) >>> 40 | (in[17 + inPos] & 8796093022207L) << 3) & 255L));
         out[92 + outPos] = (byte)((int)((in[17 + inPos] & 8796093022207L) >>> 5 & 255L));
         out[93 + outPos] = (byte)((int)((in[17 + inPos] & 8796093022207L) >>> 13 & 255L));
         out[94 + outPos] = (byte)((int)((in[17 + inPos] & 8796093022207L) >>> 21 & 255L));
         out[95 + outPos] = (byte)((int)((in[17 + inPos] & 8796093022207L) >>> 29 & 255L));
         out[96 + outPos] = (byte)((int)(((in[17 + inPos] & 8796093022207L) >>> 37 | (in[18 + inPos] & 8796093022207L) << 6) & 255L));
         out[97 + outPos] = (byte)((int)((in[18 + inPos] & 8796093022207L) >>> 2 & 255L));
         out[98 + outPos] = (byte)((int)((in[18 + inPos] & 8796093022207L) >>> 10 & 255L));
         out[99 + outPos] = (byte)((int)((in[18 + inPos] & 8796093022207L) >>> 18 & 255L));
         out[100 + outPos] = (byte)((int)((in[18 + inPos] & 8796093022207L) >>> 26 & 255L));
         out[101 + outPos] = (byte)((int)((in[18 + inPos] & 8796093022207L) >>> 34 & 255L));
         out[102 + outPos] = (byte)((int)(((in[18 + inPos] & 8796093022207L) >>> 42 | (in[19 + inPos] & 8796093022207L) << 1) & 255L));
         out[103 + outPos] = (byte)((int)((in[19 + inPos] & 8796093022207L) >>> 7 & 255L));
         out[104 + outPos] = (byte)((int)((in[19 + inPos] & 8796093022207L) >>> 15 & 255L));
         out[105 + outPos] = (byte)((int)((in[19 + inPos] & 8796093022207L) >>> 23 & 255L));
         out[106 + outPos] = (byte)((int)((in[19 + inPos] & 8796093022207L) >>> 31 & 255L));
         out[107 + outPos] = (byte)((int)(((in[19 + inPos] & 8796093022207L) >>> 39 | (in[20 + inPos] & 8796093022207L) << 4) & 255L));
         out[108 + outPos] = (byte)((int)((in[20 + inPos] & 8796093022207L) >>> 4 & 255L));
         out[109 + outPos] = (byte)((int)((in[20 + inPos] & 8796093022207L) >>> 12 & 255L));
         out[110 + outPos] = (byte)((int)((in[20 + inPos] & 8796093022207L) >>> 20 & 255L));
         out[111 + outPos] = (byte)((int)((in[20 + inPos] & 8796093022207L) >>> 28 & 255L));
         out[112 + outPos] = (byte)((int)(((in[20 + inPos] & 8796093022207L) >>> 36 | (in[21 + inPos] & 8796093022207L) << 7) & 255L));
         out[113 + outPos] = (byte)((int)((in[21 + inPos] & 8796093022207L) >>> 1 & 255L));
         out[114 + outPos] = (byte)((int)((in[21 + inPos] & 8796093022207L) >>> 9 & 255L));
         out[115 + outPos] = (byte)((int)((in[21 + inPos] & 8796093022207L) >>> 17 & 255L));
         out[116 + outPos] = (byte)((int)((in[21 + inPos] & 8796093022207L) >>> 25 & 255L));
         out[117 + outPos] = (byte)((int)((in[21 + inPos] & 8796093022207L) >>> 33 & 255L));
         out[118 + outPos] = (byte)((int)(((in[21 + inPos] & 8796093022207L) >>> 41 | (in[22 + inPos] & 8796093022207L) << 2) & 255L));
         out[119 + outPos] = (byte)((int)((in[22 + inPos] & 8796093022207L) >>> 6 & 255L));
         out[120 + outPos] = (byte)((int)((in[22 + inPos] & 8796093022207L) >>> 14 & 255L));
         out[121 + outPos] = (byte)((int)((in[22 + inPos] & 8796093022207L) >>> 22 & 255L));
         out[122 + outPos] = (byte)((int)((in[22 + inPos] & 8796093022207L) >>> 30 & 255L));
         out[123 + outPos] = (byte)((int)(((in[22 + inPos] & 8796093022207L) >>> 38 | (in[23 + inPos] & 8796093022207L) << 5) & 255L));
         out[124 + outPos] = (byte)((int)((in[23 + inPos] & 8796093022207L) >>> 3 & 255L));
         out[125 + outPos] = (byte)((int)((in[23 + inPos] & 8796093022207L) >>> 11 & 255L));
         out[126 + outPos] = (byte)((int)((in[23 + inPos] & 8796093022207L) >>> 19 & 255L));
         out[127 + outPos] = (byte)((int)((in[23 + inPos] & 8796093022207L) >>> 27 & 255L));
         out[128 + outPos] = (byte)((int)((in[23 + inPos] & 8796093022207L) >>> 35 & 255L));
         out[129 + outPos] = (byte)((int)(in[24 + inPos] & 8796093022207L & 255L));
         out[130 + outPos] = (byte)((int)((in[24 + inPos] & 8796093022207L) >>> 8 & 255L));
         out[131 + outPos] = (byte)((int)((in[24 + inPos] & 8796093022207L) >>> 16 & 255L));
         out[132 + outPos] = (byte)((int)((in[24 + inPos] & 8796093022207L) >>> 24 & 255L));
         out[133 + outPos] = (byte)((int)((in[24 + inPos] & 8796093022207L) >>> 32 & 255L));
         out[134 + outPos] = (byte)((int)(((in[24 + inPos] & 8796093022207L) >>> 40 | (in[25 + inPos] & 8796093022207L) << 3) & 255L));
         out[135 + outPos] = (byte)((int)((in[25 + inPos] & 8796093022207L) >>> 5 & 255L));
         out[136 + outPos] = (byte)((int)((in[25 + inPos] & 8796093022207L) >>> 13 & 255L));
         out[137 + outPos] = (byte)((int)((in[25 + inPos] & 8796093022207L) >>> 21 & 255L));
         out[138 + outPos] = (byte)((int)((in[25 + inPos] & 8796093022207L) >>> 29 & 255L));
         out[139 + outPos] = (byte)((int)(((in[25 + inPos] & 8796093022207L) >>> 37 | (in[26 + inPos] & 8796093022207L) << 6) & 255L));
         out[140 + outPos] = (byte)((int)((in[26 + inPos] & 8796093022207L) >>> 2 & 255L));
         out[141 + outPos] = (byte)((int)((in[26 + inPos] & 8796093022207L) >>> 10 & 255L));
         out[142 + outPos] = (byte)((int)((in[26 + inPos] & 8796093022207L) >>> 18 & 255L));
         out[143 + outPos] = (byte)((int)((in[26 + inPos] & 8796093022207L) >>> 26 & 255L));
         out[144 + outPos] = (byte)((int)((in[26 + inPos] & 8796093022207L) >>> 34 & 255L));
         out[145 + outPos] = (byte)((int)(((in[26 + inPos] & 8796093022207L) >>> 42 | (in[27 + inPos] & 8796093022207L) << 1) & 255L));
         out[146 + outPos] = (byte)((int)((in[27 + inPos] & 8796093022207L) >>> 7 & 255L));
         out[147 + outPos] = (byte)((int)((in[27 + inPos] & 8796093022207L) >>> 15 & 255L));
         out[148 + outPos] = (byte)((int)((in[27 + inPos] & 8796093022207L) >>> 23 & 255L));
         out[149 + outPos] = (byte)((int)((in[27 + inPos] & 8796093022207L) >>> 31 & 255L));
         out[150 + outPos] = (byte)((int)(((in[27 + inPos] & 8796093022207L) >>> 39 | (in[28 + inPos] & 8796093022207L) << 4) & 255L));
         out[151 + outPos] = (byte)((int)((in[28 + inPos] & 8796093022207L) >>> 4 & 255L));
         out[152 + outPos] = (byte)((int)((in[28 + inPos] & 8796093022207L) >>> 12 & 255L));
         out[153 + outPos] = (byte)((int)((in[28 + inPos] & 8796093022207L) >>> 20 & 255L));
         out[154 + outPos] = (byte)((int)((in[28 + inPos] & 8796093022207L) >>> 28 & 255L));
         out[155 + outPos] = (byte)((int)(((in[28 + inPos] & 8796093022207L) >>> 36 | (in[29 + inPos] & 8796093022207L) << 7) & 255L));
         out[156 + outPos] = (byte)((int)((in[29 + inPos] & 8796093022207L) >>> 1 & 255L));
         out[157 + outPos] = (byte)((int)((in[29 + inPos] & 8796093022207L) >>> 9 & 255L));
         out[158 + outPos] = (byte)((int)((in[29 + inPos] & 8796093022207L) >>> 17 & 255L));
         out[159 + outPos] = (byte)((int)((in[29 + inPos] & 8796093022207L) >>> 25 & 255L));
         out[160 + outPos] = (byte)((int)((in[29 + inPos] & 8796093022207L) >>> 33 & 255L));
         out[161 + outPos] = (byte)((int)(((in[29 + inPos] & 8796093022207L) >>> 41 | (in[30 + inPos] & 8796093022207L) << 2) & 255L));
         out[162 + outPos] = (byte)((int)((in[30 + inPos] & 8796093022207L) >>> 6 & 255L));
         out[163 + outPos] = (byte)((int)((in[30 + inPos] & 8796093022207L) >>> 14 & 255L));
         out[164 + outPos] = (byte)((int)((in[30 + inPos] & 8796093022207L) >>> 22 & 255L));
         out[165 + outPos] = (byte)((int)((in[30 + inPos] & 8796093022207L) >>> 30 & 255L));
         out[166 + outPos] = (byte)((int)(((in[30 + inPos] & 8796093022207L) >>> 38 | (in[31 + inPos] & 8796093022207L) << 5) & 255L));
         out[167 + outPos] = (byte)((int)((in[31 + inPos] & 8796093022207L) >>> 3 & 255L));
         out[168 + outPos] = (byte)((int)((in[31 + inPos] & 8796093022207L) >>> 11 & 255L));
         out[169 + outPos] = (byte)((int)((in[31 + inPos] & 8796093022207L) >>> 19 & 255L));
         out[170 + outPos] = (byte)((int)((in[31 + inPos] & 8796093022207L) >>> 27 & 255L));
         out[171 + outPos] = (byte)((int)((in[31 + inPos] & 8796093022207L) >>> 35 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 8796093022207L;
         out[1 + outPos] = (long)in[5 + inPos] >> 3 & 31L | (long)in[6 + inPos] << 5 & 8191L | (long)in[7 + inPos] << 13 & 2097151L | (long)in[8 + inPos] << 21 & 536870911L | (long)in[9 + inPos] << 29 & 137438953471L | (long)in[10 + inPos] << 37 & 8796093022207L;
         out[2 + outPos] = (long)in[10 + inPos] >> 6 & 3L | (long)in[11 + inPos] << 2 & 1023L | (long)in[12 + inPos] << 10 & 262143L | (long)in[13 + inPos] << 18 & 67108863L | (long)in[14 + inPos] << 26 & 17179869183L | (long)in[15 + inPos] << 34 & 4398046511103L | (long)in[16 + inPos] << 42 & 8796093022207L;
         out[3 + outPos] = (long)in[16 + inPos] >> 1 & 127L | (long)in[17 + inPos] << 7 & 32767L | (long)in[18 + inPos] << 15 & 8388607L | (long)in[19 + inPos] << 23 & 2147483647L | (long)in[20 + inPos] << 31 & 549755813887L | (long)in[21 + inPos] << 39 & 8796093022207L;
         out[4 + outPos] = (long)in[21 + inPos] >> 4 & 15L | (long)in[22 + inPos] << 4 & 4095L | (long)in[23 + inPos] << 12 & 1048575L | (long)in[24 + inPos] << 20 & 268435455L | (long)in[25 + inPos] << 28 & 68719476735L | (long)in[26 + inPos] << 36 & 8796093022207L;
         out[5 + outPos] = (long)in[26 + inPos] >> 7 & 1L | (long)in[27 + inPos] << 1 & 511L | (long)in[28 + inPos] << 9 & 131071L | (long)in[29 + inPos] << 17 & 33554431L | (long)in[30 + inPos] << 25 & 8589934591L | (long)in[31 + inPos] << 33 & 2199023255551L | (long)in[32 + inPos] << 41 & 8796093022207L;
         out[6 + outPos] = (long)in[32 + inPos] >> 2 & 63L | (long)in[33 + inPos] << 6 & 16383L | (long)in[34 + inPos] << 14 & 4194303L | (long)in[35 + inPos] << 22 & 1073741823L | (long)in[36 + inPos] << 30 & 274877906943L | (long)in[37 + inPos] << 38 & 8796093022207L;
         out[7 + outPos] = (long)in[37 + inPos] >> 5 & 7L | (long)in[38 + inPos] << 3 & 2047L | (long)in[39 + inPos] << 11 & 524287L | (long)in[40 + inPos] << 19 & 134217727L | (long)in[41 + inPos] << 27 & 34359738367L | (long)in[42 + inPos] << 35 & 8796093022207L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 8796093022207L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 3 & 31L | (long)in.get(6 + inPos) << 5 & 8191L | (long)in.get(7 + inPos) << 13 & 2097151L | (long)in.get(8 + inPos) << 21 & 536870911L | (long)in.get(9 + inPos) << 29 & 137438953471L | (long)in.get(10 + inPos) << 37 & 8796093022207L;
         out[2 + outPos] = (long)in.get(10 + inPos) >> 6 & 3L | (long)in.get(11 + inPos) << 2 & 1023L | (long)in.get(12 + inPos) << 10 & 262143L | (long)in.get(13 + inPos) << 18 & 67108863L | (long)in.get(14 + inPos) << 26 & 17179869183L | (long)in.get(15 + inPos) << 34 & 4398046511103L | (long)in.get(16 + inPos) << 42 & 8796093022207L;
         out[3 + outPos] = (long)in.get(16 + inPos) >> 1 & 127L | (long)in.get(17 + inPos) << 7 & 32767L | (long)in.get(18 + inPos) << 15 & 8388607L | (long)in.get(19 + inPos) << 23 & 2147483647L | (long)in.get(20 + inPos) << 31 & 549755813887L | (long)in.get(21 + inPos) << 39 & 8796093022207L;
         out[4 + outPos] = (long)in.get(21 + inPos) >> 4 & 15L | (long)in.get(22 + inPos) << 4 & 4095L | (long)in.get(23 + inPos) << 12 & 1048575L | (long)in.get(24 + inPos) << 20 & 268435455L | (long)in.get(25 + inPos) << 28 & 68719476735L | (long)in.get(26 + inPos) << 36 & 8796093022207L;
         out[5 + outPos] = (long)in.get(26 + inPos) >> 7 & 1L | (long)in.get(27 + inPos) << 1 & 511L | (long)in.get(28 + inPos) << 9 & 131071L | (long)in.get(29 + inPos) << 17 & 33554431L | (long)in.get(30 + inPos) << 25 & 8589934591L | (long)in.get(31 + inPos) << 33 & 2199023255551L | (long)in.get(32 + inPos) << 41 & 8796093022207L;
         out[6 + outPos] = (long)in.get(32 + inPos) >> 2 & 63L | (long)in.get(33 + inPos) << 6 & 16383L | (long)in.get(34 + inPos) << 14 & 4194303L | (long)in.get(35 + inPos) << 22 & 1073741823L | (long)in.get(36 + inPos) << 30 & 274877906943L | (long)in.get(37 + inPos) << 38 & 8796093022207L;
         out[7 + outPos] = (long)in.get(37 + inPos) >> 5 & 7L | (long)in.get(38 + inPos) << 3 & 2047L | (long)in.get(39 + inPos) << 11 & 524287L | (long)in.get(40 + inPos) << 19 & 134217727L | (long)in.get(41 + inPos) << 27 & 34359738367L | (long)in.get(42 + inPos) << 35 & 8796093022207L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 8796093022207L;
         out[1 + outPos] = (long)in[5 + inPos] >> 3 & 31L | (long)in[6 + inPos] << 5 & 8191L | (long)in[7 + inPos] << 13 & 2097151L | (long)in[8 + inPos] << 21 & 536870911L | (long)in[9 + inPos] << 29 & 137438953471L | (long)in[10 + inPos] << 37 & 8796093022207L;
         out[2 + outPos] = (long)in[10 + inPos] >> 6 & 3L | (long)in[11 + inPos] << 2 & 1023L | (long)in[12 + inPos] << 10 & 262143L | (long)in[13 + inPos] << 18 & 67108863L | (long)in[14 + inPos] << 26 & 17179869183L | (long)in[15 + inPos] << 34 & 4398046511103L | (long)in[16 + inPos] << 42 & 8796093022207L;
         out[3 + outPos] = (long)in[16 + inPos] >> 1 & 127L | (long)in[17 + inPos] << 7 & 32767L | (long)in[18 + inPos] << 15 & 8388607L | (long)in[19 + inPos] << 23 & 2147483647L | (long)in[20 + inPos] << 31 & 549755813887L | (long)in[21 + inPos] << 39 & 8796093022207L;
         out[4 + outPos] = (long)in[21 + inPos] >> 4 & 15L | (long)in[22 + inPos] << 4 & 4095L | (long)in[23 + inPos] << 12 & 1048575L | (long)in[24 + inPos] << 20 & 268435455L | (long)in[25 + inPos] << 28 & 68719476735L | (long)in[26 + inPos] << 36 & 8796093022207L;
         out[5 + outPos] = (long)in[26 + inPos] >> 7 & 1L | (long)in[27 + inPos] << 1 & 511L | (long)in[28 + inPos] << 9 & 131071L | (long)in[29 + inPos] << 17 & 33554431L | (long)in[30 + inPos] << 25 & 8589934591L | (long)in[31 + inPos] << 33 & 2199023255551L | (long)in[32 + inPos] << 41 & 8796093022207L;
         out[6 + outPos] = (long)in[32 + inPos] >> 2 & 63L | (long)in[33 + inPos] << 6 & 16383L | (long)in[34 + inPos] << 14 & 4194303L | (long)in[35 + inPos] << 22 & 1073741823L | (long)in[36 + inPos] << 30 & 274877906943L | (long)in[37 + inPos] << 38 & 8796093022207L;
         out[7 + outPos] = (long)in[37 + inPos] >> 5 & 7L | (long)in[38 + inPos] << 3 & 2047L | (long)in[39 + inPos] << 11 & 524287L | (long)in[40 + inPos] << 19 & 134217727L | (long)in[41 + inPos] << 27 & 34359738367L | (long)in[42 + inPos] << 35 & 8796093022207L;
         out[8 + outPos] = (long)in[43 + inPos] & 255L | (long)in[44 + inPos] << 8 & 65535L | (long)in[45 + inPos] << 16 & 16777215L | (long)in[46 + inPos] << 24 & 4294967295L | (long)in[47 + inPos] << 32 & 1099511627775L | (long)in[48 + inPos] << 40 & 8796093022207L;
         out[9 + outPos] = (long)in[48 + inPos] >> 3 & 31L | (long)in[49 + inPos] << 5 & 8191L | (long)in[50 + inPos] << 13 & 2097151L | (long)in[51 + inPos] << 21 & 536870911L | (long)in[52 + inPos] << 29 & 137438953471L | (long)in[53 + inPos] << 37 & 8796093022207L;
         out[10 + outPos] = (long)in[53 + inPos] >> 6 & 3L | (long)in[54 + inPos] << 2 & 1023L | (long)in[55 + inPos] << 10 & 262143L | (long)in[56 + inPos] << 18 & 67108863L | (long)in[57 + inPos] << 26 & 17179869183L | (long)in[58 + inPos] << 34 & 4398046511103L | (long)in[59 + inPos] << 42 & 8796093022207L;
         out[11 + outPos] = (long)in[59 + inPos] >> 1 & 127L | (long)in[60 + inPos] << 7 & 32767L | (long)in[61 + inPos] << 15 & 8388607L | (long)in[62 + inPos] << 23 & 2147483647L | (long)in[63 + inPos] << 31 & 549755813887L | (long)in[64 + inPos] << 39 & 8796093022207L;
         out[12 + outPos] = (long)in[64 + inPos] >> 4 & 15L | (long)in[65 + inPos] << 4 & 4095L | (long)in[66 + inPos] << 12 & 1048575L | (long)in[67 + inPos] << 20 & 268435455L | (long)in[68 + inPos] << 28 & 68719476735L | (long)in[69 + inPos] << 36 & 8796093022207L;
         out[13 + outPos] = (long)in[69 + inPos] >> 7 & 1L | (long)in[70 + inPos] << 1 & 511L | (long)in[71 + inPos] << 9 & 131071L | (long)in[72 + inPos] << 17 & 33554431L | (long)in[73 + inPos] << 25 & 8589934591L | (long)in[74 + inPos] << 33 & 2199023255551L | (long)in[75 + inPos] << 41 & 8796093022207L;
         out[14 + outPos] = (long)in[75 + inPos] >> 2 & 63L | (long)in[76 + inPos] << 6 & 16383L | (long)in[77 + inPos] << 14 & 4194303L | (long)in[78 + inPos] << 22 & 1073741823L | (long)in[79 + inPos] << 30 & 274877906943L | (long)in[80 + inPos] << 38 & 8796093022207L;
         out[15 + outPos] = (long)in[80 + inPos] >> 5 & 7L | (long)in[81 + inPos] << 3 & 2047L | (long)in[82 + inPos] << 11 & 524287L | (long)in[83 + inPos] << 19 & 134217727L | (long)in[84 + inPos] << 27 & 34359738367L | (long)in[85 + inPos] << 35 & 8796093022207L;
         out[16 + outPos] = (long)in[86 + inPos] & 255L | (long)in[87 + inPos] << 8 & 65535L | (long)in[88 + inPos] << 16 & 16777215L | (long)in[89 + inPos] << 24 & 4294967295L | (long)in[90 + inPos] << 32 & 1099511627775L | (long)in[91 + inPos] << 40 & 8796093022207L;
         out[17 + outPos] = (long)in[91 + inPos] >> 3 & 31L | (long)in[92 + inPos] << 5 & 8191L | (long)in[93 + inPos] << 13 & 2097151L | (long)in[94 + inPos] << 21 & 536870911L | (long)in[95 + inPos] << 29 & 137438953471L | (long)in[96 + inPos] << 37 & 8796093022207L;
         out[18 + outPos] = (long)in[96 + inPos] >> 6 & 3L | (long)in[97 + inPos] << 2 & 1023L | (long)in[98 + inPos] << 10 & 262143L | (long)in[99 + inPos] << 18 & 67108863L | (long)in[100 + inPos] << 26 & 17179869183L | (long)in[101 + inPos] << 34 & 4398046511103L | (long)in[102 + inPos] << 42 & 8796093022207L;
         out[19 + outPos] = (long)in[102 + inPos] >> 1 & 127L | (long)in[103 + inPos] << 7 & 32767L | (long)in[104 + inPos] << 15 & 8388607L | (long)in[105 + inPos] << 23 & 2147483647L | (long)in[106 + inPos] << 31 & 549755813887L | (long)in[107 + inPos] << 39 & 8796093022207L;
         out[20 + outPos] = (long)in[107 + inPos] >> 4 & 15L | (long)in[108 + inPos] << 4 & 4095L | (long)in[109 + inPos] << 12 & 1048575L | (long)in[110 + inPos] << 20 & 268435455L | (long)in[111 + inPos] << 28 & 68719476735L | (long)in[112 + inPos] << 36 & 8796093022207L;
         out[21 + outPos] = (long)in[112 + inPos] >> 7 & 1L | (long)in[113 + inPos] << 1 & 511L | (long)in[114 + inPos] << 9 & 131071L | (long)in[115 + inPos] << 17 & 33554431L | (long)in[116 + inPos] << 25 & 8589934591L | (long)in[117 + inPos] << 33 & 2199023255551L | (long)in[118 + inPos] << 41 & 8796093022207L;
         out[22 + outPos] = (long)in[118 + inPos] >> 2 & 63L | (long)in[119 + inPos] << 6 & 16383L | (long)in[120 + inPos] << 14 & 4194303L | (long)in[121 + inPos] << 22 & 1073741823L | (long)in[122 + inPos] << 30 & 274877906943L | (long)in[123 + inPos] << 38 & 8796093022207L;
         out[23 + outPos] = (long)in[123 + inPos] >> 5 & 7L | (long)in[124 + inPos] << 3 & 2047L | (long)in[125 + inPos] << 11 & 524287L | (long)in[126 + inPos] << 19 & 134217727L | (long)in[127 + inPos] << 27 & 34359738367L | (long)in[128 + inPos] << 35 & 8796093022207L;
         out[24 + outPos] = (long)in[129 + inPos] & 255L | (long)in[130 + inPos] << 8 & 65535L | (long)in[131 + inPos] << 16 & 16777215L | (long)in[132 + inPos] << 24 & 4294967295L | (long)in[133 + inPos] << 32 & 1099511627775L | (long)in[134 + inPos] << 40 & 8796093022207L;
         out[25 + outPos] = (long)in[134 + inPos] >> 3 & 31L | (long)in[135 + inPos] << 5 & 8191L | (long)in[136 + inPos] << 13 & 2097151L | (long)in[137 + inPos] << 21 & 536870911L | (long)in[138 + inPos] << 29 & 137438953471L | (long)in[139 + inPos] << 37 & 8796093022207L;
         out[26 + outPos] = (long)in[139 + inPos] >> 6 & 3L | (long)in[140 + inPos] << 2 & 1023L | (long)in[141 + inPos] << 10 & 262143L | (long)in[142 + inPos] << 18 & 67108863L | (long)in[143 + inPos] << 26 & 17179869183L | (long)in[144 + inPos] << 34 & 4398046511103L | (long)in[145 + inPos] << 42 & 8796093022207L;
         out[27 + outPos] = (long)in[145 + inPos] >> 1 & 127L | (long)in[146 + inPos] << 7 & 32767L | (long)in[147 + inPos] << 15 & 8388607L | (long)in[148 + inPos] << 23 & 2147483647L | (long)in[149 + inPos] << 31 & 549755813887L | (long)in[150 + inPos] << 39 & 8796093022207L;
         out[28 + outPos] = (long)in[150 + inPos] >> 4 & 15L | (long)in[151 + inPos] << 4 & 4095L | (long)in[152 + inPos] << 12 & 1048575L | (long)in[153 + inPos] << 20 & 268435455L | (long)in[154 + inPos] << 28 & 68719476735L | (long)in[155 + inPos] << 36 & 8796093022207L;
         out[29 + outPos] = (long)in[155 + inPos] >> 7 & 1L | (long)in[156 + inPos] << 1 & 511L | (long)in[157 + inPos] << 9 & 131071L | (long)in[158 + inPos] << 17 & 33554431L | (long)in[159 + inPos] << 25 & 8589934591L | (long)in[160 + inPos] << 33 & 2199023255551L | (long)in[161 + inPos] << 41 & 8796093022207L;
         out[30 + outPos] = (long)in[161 + inPos] >> 2 & 63L | (long)in[162 + inPos] << 6 & 16383L | (long)in[163 + inPos] << 14 & 4194303L | (long)in[164 + inPos] << 22 & 1073741823L | (long)in[165 + inPos] << 30 & 274877906943L | (long)in[166 + inPos] << 38 & 8796093022207L;
         out[31 + outPos] = (long)in[166 + inPos] >> 5 & 7L | (long)in[167 + inPos] << 3 & 2047L | (long)in[168 + inPos] << 11 & 524287L | (long)in[169 + inPos] << 19 & 134217727L | (long)in[170 + inPos] << 27 & 34359738367L | (long)in[171 + inPos] << 35 & 8796093022207L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 8796093022207L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 3 & 31L | (long)in.get(6 + inPos) << 5 & 8191L | (long)in.get(7 + inPos) << 13 & 2097151L | (long)in.get(8 + inPos) << 21 & 536870911L | (long)in.get(9 + inPos) << 29 & 137438953471L | (long)in.get(10 + inPos) << 37 & 8796093022207L;
         out[2 + outPos] = (long)in.get(10 + inPos) >> 6 & 3L | (long)in.get(11 + inPos) << 2 & 1023L | (long)in.get(12 + inPos) << 10 & 262143L | (long)in.get(13 + inPos) << 18 & 67108863L | (long)in.get(14 + inPos) << 26 & 17179869183L | (long)in.get(15 + inPos) << 34 & 4398046511103L | (long)in.get(16 + inPos) << 42 & 8796093022207L;
         out[3 + outPos] = (long)in.get(16 + inPos) >> 1 & 127L | (long)in.get(17 + inPos) << 7 & 32767L | (long)in.get(18 + inPos) << 15 & 8388607L | (long)in.get(19 + inPos) << 23 & 2147483647L | (long)in.get(20 + inPos) << 31 & 549755813887L | (long)in.get(21 + inPos) << 39 & 8796093022207L;
         out[4 + outPos] = (long)in.get(21 + inPos) >> 4 & 15L | (long)in.get(22 + inPos) << 4 & 4095L | (long)in.get(23 + inPos) << 12 & 1048575L | (long)in.get(24 + inPos) << 20 & 268435455L | (long)in.get(25 + inPos) << 28 & 68719476735L | (long)in.get(26 + inPos) << 36 & 8796093022207L;
         out[5 + outPos] = (long)in.get(26 + inPos) >> 7 & 1L | (long)in.get(27 + inPos) << 1 & 511L | (long)in.get(28 + inPos) << 9 & 131071L | (long)in.get(29 + inPos) << 17 & 33554431L | (long)in.get(30 + inPos) << 25 & 8589934591L | (long)in.get(31 + inPos) << 33 & 2199023255551L | (long)in.get(32 + inPos) << 41 & 8796093022207L;
         out[6 + outPos] = (long)in.get(32 + inPos) >> 2 & 63L | (long)in.get(33 + inPos) << 6 & 16383L | (long)in.get(34 + inPos) << 14 & 4194303L | (long)in.get(35 + inPos) << 22 & 1073741823L | (long)in.get(36 + inPos) << 30 & 274877906943L | (long)in.get(37 + inPos) << 38 & 8796093022207L;
         out[7 + outPos] = (long)in.get(37 + inPos) >> 5 & 7L | (long)in.get(38 + inPos) << 3 & 2047L | (long)in.get(39 + inPos) << 11 & 524287L | (long)in.get(40 + inPos) << 19 & 134217727L | (long)in.get(41 + inPos) << 27 & 34359738367L | (long)in.get(42 + inPos) << 35 & 8796093022207L;
         out[8 + outPos] = (long)in.get(43 + inPos) & 255L | (long)in.get(44 + inPos) << 8 & 65535L | (long)in.get(45 + inPos) << 16 & 16777215L | (long)in.get(46 + inPos) << 24 & 4294967295L | (long)in.get(47 + inPos) << 32 & 1099511627775L | (long)in.get(48 + inPos) << 40 & 8796093022207L;
         out[9 + outPos] = (long)in.get(48 + inPos) >> 3 & 31L | (long)in.get(49 + inPos) << 5 & 8191L | (long)in.get(50 + inPos) << 13 & 2097151L | (long)in.get(51 + inPos) << 21 & 536870911L | (long)in.get(52 + inPos) << 29 & 137438953471L | (long)in.get(53 + inPos) << 37 & 8796093022207L;
         out[10 + outPos] = (long)in.get(53 + inPos) >> 6 & 3L | (long)in.get(54 + inPos) << 2 & 1023L | (long)in.get(55 + inPos) << 10 & 262143L | (long)in.get(56 + inPos) << 18 & 67108863L | (long)in.get(57 + inPos) << 26 & 17179869183L | (long)in.get(58 + inPos) << 34 & 4398046511103L | (long)in.get(59 + inPos) << 42 & 8796093022207L;
         out[11 + outPos] = (long)in.get(59 + inPos) >> 1 & 127L | (long)in.get(60 + inPos) << 7 & 32767L | (long)in.get(61 + inPos) << 15 & 8388607L | (long)in.get(62 + inPos) << 23 & 2147483647L | (long)in.get(63 + inPos) << 31 & 549755813887L | (long)in.get(64 + inPos) << 39 & 8796093022207L;
         out[12 + outPos] = (long)in.get(64 + inPos) >> 4 & 15L | (long)in.get(65 + inPos) << 4 & 4095L | (long)in.get(66 + inPos) << 12 & 1048575L | (long)in.get(67 + inPos) << 20 & 268435455L | (long)in.get(68 + inPos) << 28 & 68719476735L | (long)in.get(69 + inPos) << 36 & 8796093022207L;
         out[13 + outPos] = (long)in.get(69 + inPos) >> 7 & 1L | (long)in.get(70 + inPos) << 1 & 511L | (long)in.get(71 + inPos) << 9 & 131071L | (long)in.get(72 + inPos) << 17 & 33554431L | (long)in.get(73 + inPos) << 25 & 8589934591L | (long)in.get(74 + inPos) << 33 & 2199023255551L | (long)in.get(75 + inPos) << 41 & 8796093022207L;
         out[14 + outPos] = (long)in.get(75 + inPos) >> 2 & 63L | (long)in.get(76 + inPos) << 6 & 16383L | (long)in.get(77 + inPos) << 14 & 4194303L | (long)in.get(78 + inPos) << 22 & 1073741823L | (long)in.get(79 + inPos) << 30 & 274877906943L | (long)in.get(80 + inPos) << 38 & 8796093022207L;
         out[15 + outPos] = (long)in.get(80 + inPos) >> 5 & 7L | (long)in.get(81 + inPos) << 3 & 2047L | (long)in.get(82 + inPos) << 11 & 524287L | (long)in.get(83 + inPos) << 19 & 134217727L | (long)in.get(84 + inPos) << 27 & 34359738367L | (long)in.get(85 + inPos) << 35 & 8796093022207L;
         out[16 + outPos] = (long)in.get(86 + inPos) & 255L | (long)in.get(87 + inPos) << 8 & 65535L | (long)in.get(88 + inPos) << 16 & 16777215L | (long)in.get(89 + inPos) << 24 & 4294967295L | (long)in.get(90 + inPos) << 32 & 1099511627775L | (long)in.get(91 + inPos) << 40 & 8796093022207L;
         out[17 + outPos] = (long)in.get(91 + inPos) >> 3 & 31L | (long)in.get(92 + inPos) << 5 & 8191L | (long)in.get(93 + inPos) << 13 & 2097151L | (long)in.get(94 + inPos) << 21 & 536870911L | (long)in.get(95 + inPos) << 29 & 137438953471L | (long)in.get(96 + inPos) << 37 & 8796093022207L;
         out[18 + outPos] = (long)in.get(96 + inPos) >> 6 & 3L | (long)in.get(97 + inPos) << 2 & 1023L | (long)in.get(98 + inPos) << 10 & 262143L | (long)in.get(99 + inPos) << 18 & 67108863L | (long)in.get(100 + inPos) << 26 & 17179869183L | (long)in.get(101 + inPos) << 34 & 4398046511103L | (long)in.get(102 + inPos) << 42 & 8796093022207L;
         out[19 + outPos] = (long)in.get(102 + inPos) >> 1 & 127L | (long)in.get(103 + inPos) << 7 & 32767L | (long)in.get(104 + inPos) << 15 & 8388607L | (long)in.get(105 + inPos) << 23 & 2147483647L | (long)in.get(106 + inPos) << 31 & 549755813887L | (long)in.get(107 + inPos) << 39 & 8796093022207L;
         out[20 + outPos] = (long)in.get(107 + inPos) >> 4 & 15L | (long)in.get(108 + inPos) << 4 & 4095L | (long)in.get(109 + inPos) << 12 & 1048575L | (long)in.get(110 + inPos) << 20 & 268435455L | (long)in.get(111 + inPos) << 28 & 68719476735L | (long)in.get(112 + inPos) << 36 & 8796093022207L;
         out[21 + outPos] = (long)in.get(112 + inPos) >> 7 & 1L | (long)in.get(113 + inPos) << 1 & 511L | (long)in.get(114 + inPos) << 9 & 131071L | (long)in.get(115 + inPos) << 17 & 33554431L | (long)in.get(116 + inPos) << 25 & 8589934591L | (long)in.get(117 + inPos) << 33 & 2199023255551L | (long)in.get(118 + inPos) << 41 & 8796093022207L;
         out[22 + outPos] = (long)in.get(118 + inPos) >> 2 & 63L | (long)in.get(119 + inPos) << 6 & 16383L | (long)in.get(120 + inPos) << 14 & 4194303L | (long)in.get(121 + inPos) << 22 & 1073741823L | (long)in.get(122 + inPos) << 30 & 274877906943L | (long)in.get(123 + inPos) << 38 & 8796093022207L;
         out[23 + outPos] = (long)in.get(123 + inPos) >> 5 & 7L | (long)in.get(124 + inPos) << 3 & 2047L | (long)in.get(125 + inPos) << 11 & 524287L | (long)in.get(126 + inPos) << 19 & 134217727L | (long)in.get(127 + inPos) << 27 & 34359738367L | (long)in.get(128 + inPos) << 35 & 8796093022207L;
         out[24 + outPos] = (long)in.get(129 + inPos) & 255L | (long)in.get(130 + inPos) << 8 & 65535L | (long)in.get(131 + inPos) << 16 & 16777215L | (long)in.get(132 + inPos) << 24 & 4294967295L | (long)in.get(133 + inPos) << 32 & 1099511627775L | (long)in.get(134 + inPos) << 40 & 8796093022207L;
         out[25 + outPos] = (long)in.get(134 + inPos) >> 3 & 31L | (long)in.get(135 + inPos) << 5 & 8191L | (long)in.get(136 + inPos) << 13 & 2097151L | (long)in.get(137 + inPos) << 21 & 536870911L | (long)in.get(138 + inPos) << 29 & 137438953471L | (long)in.get(139 + inPos) << 37 & 8796093022207L;
         out[26 + outPos] = (long)in.get(139 + inPos) >> 6 & 3L | (long)in.get(140 + inPos) << 2 & 1023L | (long)in.get(141 + inPos) << 10 & 262143L | (long)in.get(142 + inPos) << 18 & 67108863L | (long)in.get(143 + inPos) << 26 & 17179869183L | (long)in.get(144 + inPos) << 34 & 4398046511103L | (long)in.get(145 + inPos) << 42 & 8796093022207L;
         out[27 + outPos] = (long)in.get(145 + inPos) >> 1 & 127L | (long)in.get(146 + inPos) << 7 & 32767L | (long)in.get(147 + inPos) << 15 & 8388607L | (long)in.get(148 + inPos) << 23 & 2147483647L | (long)in.get(149 + inPos) << 31 & 549755813887L | (long)in.get(150 + inPos) << 39 & 8796093022207L;
         out[28 + outPos] = (long)in.get(150 + inPos) >> 4 & 15L | (long)in.get(151 + inPos) << 4 & 4095L | (long)in.get(152 + inPos) << 12 & 1048575L | (long)in.get(153 + inPos) << 20 & 268435455L | (long)in.get(154 + inPos) << 28 & 68719476735L | (long)in.get(155 + inPos) << 36 & 8796093022207L;
         out[29 + outPos] = (long)in.get(155 + inPos) >> 7 & 1L | (long)in.get(156 + inPos) << 1 & 511L | (long)in.get(157 + inPos) << 9 & 131071L | (long)in.get(158 + inPos) << 17 & 33554431L | (long)in.get(159 + inPos) << 25 & 8589934591L | (long)in.get(160 + inPos) << 33 & 2199023255551L | (long)in.get(161 + inPos) << 41 & 8796093022207L;
         out[30 + outPos] = (long)in.get(161 + inPos) >> 2 & 63L | (long)in.get(162 + inPos) << 6 & 16383L | (long)in.get(163 + inPos) << 14 & 4194303L | (long)in.get(164 + inPos) << 22 & 1073741823L | (long)in.get(165 + inPos) << 30 & 274877906943L | (long)in.get(166 + inPos) << 38 & 8796093022207L;
         out[31 + outPos] = (long)in.get(166 + inPos) >> 5 & 7L | (long)in.get(167 + inPos) << 3 & 2047L | (long)in.get(168 + inPos) << 11 & 524287L | (long)in.get(169 + inPos) << 19 & 134217727L | (long)in.get(170 + inPos) << 27 & 34359738367L | (long)in.get(171 + inPos) << 35 & 8796093022207L;
      }
   }

   private static final class Packer44 extends BytePackerForLong {
      private Packer44() {
         super(44);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 17592186044415L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 17592186044415L) >>> 40 | (in[1 + inPos] & 17592186044415L) << 4) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[11 + outPos] = (byte)((int)(in[2 + inPos] & 17592186044415L & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[16 + outPos] = (byte)((int)(((in[2 + inPos] & 17592186044415L) >>> 40 | (in[3 + inPos] & 17592186044415L) << 4) & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[22 + outPos] = (byte)((int)(in[4 + inPos] & 17592186044415L & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[27 + outPos] = (byte)((int)(((in[4 + inPos] & 17592186044415L) >>> 40 | (in[5 + inPos] & 17592186044415L) << 4) & 255L));
         out[28 + outPos] = (byte)((int)((in[5 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[30 + outPos] = (byte)((int)((in[5 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[33 + outPos] = (byte)((int)(in[6 + inPos] & 17592186044415L & 255L));
         out[34 + outPos] = (byte)((int)((in[6 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[35 + outPos] = (byte)((int)((in[6 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[36 + outPos] = (byte)((int)((in[6 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[37 + outPos] = (byte)((int)((in[6 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[38 + outPos] = (byte)((int)(((in[6 + inPos] & 17592186044415L) >>> 40 | (in[7 + inPos] & 17592186044415L) << 4) & 255L));
         out[39 + outPos] = (byte)((int)((in[7 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[40 + outPos] = (byte)((int)((in[7 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[41 + outPos] = (byte)((int)((in[7 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[42 + outPos] = (byte)((int)((in[7 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[43 + outPos] = (byte)((int)((in[7 + inPos] & 17592186044415L) >>> 36 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 17592186044415L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 17592186044415L) >>> 40 | (in[1 + inPos] & 17592186044415L) << 4) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[11 + outPos] = (byte)((int)(in[2 + inPos] & 17592186044415L & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[16 + outPos] = (byte)((int)(((in[2 + inPos] & 17592186044415L) >>> 40 | (in[3 + inPos] & 17592186044415L) << 4) & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[22 + outPos] = (byte)((int)(in[4 + inPos] & 17592186044415L & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[27 + outPos] = (byte)((int)(((in[4 + inPos] & 17592186044415L) >>> 40 | (in[5 + inPos] & 17592186044415L) << 4) & 255L));
         out[28 + outPos] = (byte)((int)((in[5 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[30 + outPos] = (byte)((int)((in[5 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[33 + outPos] = (byte)((int)(in[6 + inPos] & 17592186044415L & 255L));
         out[34 + outPos] = (byte)((int)((in[6 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[35 + outPos] = (byte)((int)((in[6 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[36 + outPos] = (byte)((int)((in[6 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[37 + outPos] = (byte)((int)((in[6 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[38 + outPos] = (byte)((int)(((in[6 + inPos] & 17592186044415L) >>> 40 | (in[7 + inPos] & 17592186044415L) << 4) & 255L));
         out[39 + outPos] = (byte)((int)((in[7 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[40 + outPos] = (byte)((int)((in[7 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[41 + outPos] = (byte)((int)((in[7 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[42 + outPos] = (byte)((int)((in[7 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[43 + outPos] = (byte)((int)((in[7 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[44 + outPos] = (byte)((int)(in[8 + inPos] & 17592186044415L & 255L));
         out[45 + outPos] = (byte)((int)((in[8 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[46 + outPos] = (byte)((int)((in[8 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[47 + outPos] = (byte)((int)((in[8 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[48 + outPos] = (byte)((int)((in[8 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[49 + outPos] = (byte)((int)(((in[8 + inPos] & 17592186044415L) >>> 40 | (in[9 + inPos] & 17592186044415L) << 4) & 255L));
         out[50 + outPos] = (byte)((int)((in[9 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[51 + outPos] = (byte)((int)((in[9 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[52 + outPos] = (byte)((int)((in[9 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[53 + outPos] = (byte)((int)((in[9 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[54 + outPos] = (byte)((int)((in[9 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[55 + outPos] = (byte)((int)(in[10 + inPos] & 17592186044415L & 255L));
         out[56 + outPos] = (byte)((int)((in[10 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[57 + outPos] = (byte)((int)((in[10 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[58 + outPos] = (byte)((int)((in[10 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[59 + outPos] = (byte)((int)((in[10 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[60 + outPos] = (byte)((int)(((in[10 + inPos] & 17592186044415L) >>> 40 | (in[11 + inPos] & 17592186044415L) << 4) & 255L));
         out[61 + outPos] = (byte)((int)((in[11 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[62 + outPos] = (byte)((int)((in[11 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[63 + outPos] = (byte)((int)((in[11 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[64 + outPos] = (byte)((int)((in[11 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[65 + outPos] = (byte)((int)((in[11 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[66 + outPos] = (byte)((int)(in[12 + inPos] & 17592186044415L & 255L));
         out[67 + outPos] = (byte)((int)((in[12 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[68 + outPos] = (byte)((int)((in[12 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[69 + outPos] = (byte)((int)((in[12 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[70 + outPos] = (byte)((int)((in[12 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[71 + outPos] = (byte)((int)(((in[12 + inPos] & 17592186044415L) >>> 40 | (in[13 + inPos] & 17592186044415L) << 4) & 255L));
         out[72 + outPos] = (byte)((int)((in[13 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[73 + outPos] = (byte)((int)((in[13 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[74 + outPos] = (byte)((int)((in[13 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[75 + outPos] = (byte)((int)((in[13 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[76 + outPos] = (byte)((int)((in[13 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[77 + outPos] = (byte)((int)(in[14 + inPos] & 17592186044415L & 255L));
         out[78 + outPos] = (byte)((int)((in[14 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[79 + outPos] = (byte)((int)((in[14 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[80 + outPos] = (byte)((int)((in[14 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[81 + outPos] = (byte)((int)((in[14 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[82 + outPos] = (byte)((int)(((in[14 + inPos] & 17592186044415L) >>> 40 | (in[15 + inPos] & 17592186044415L) << 4) & 255L));
         out[83 + outPos] = (byte)((int)((in[15 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[84 + outPos] = (byte)((int)((in[15 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[85 + outPos] = (byte)((int)((in[15 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[86 + outPos] = (byte)((int)((in[15 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[87 + outPos] = (byte)((int)((in[15 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[88 + outPos] = (byte)((int)(in[16 + inPos] & 17592186044415L & 255L));
         out[89 + outPos] = (byte)((int)((in[16 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[90 + outPos] = (byte)((int)((in[16 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[91 + outPos] = (byte)((int)((in[16 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[92 + outPos] = (byte)((int)((in[16 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[93 + outPos] = (byte)((int)(((in[16 + inPos] & 17592186044415L) >>> 40 | (in[17 + inPos] & 17592186044415L) << 4) & 255L));
         out[94 + outPos] = (byte)((int)((in[17 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[95 + outPos] = (byte)((int)((in[17 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[96 + outPos] = (byte)((int)((in[17 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[97 + outPos] = (byte)((int)((in[17 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[98 + outPos] = (byte)((int)((in[17 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[99 + outPos] = (byte)((int)(in[18 + inPos] & 17592186044415L & 255L));
         out[100 + outPos] = (byte)((int)((in[18 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[101 + outPos] = (byte)((int)((in[18 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[102 + outPos] = (byte)((int)((in[18 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[103 + outPos] = (byte)((int)((in[18 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[104 + outPos] = (byte)((int)(((in[18 + inPos] & 17592186044415L) >>> 40 | (in[19 + inPos] & 17592186044415L) << 4) & 255L));
         out[105 + outPos] = (byte)((int)((in[19 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[106 + outPos] = (byte)((int)((in[19 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[107 + outPos] = (byte)((int)((in[19 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[108 + outPos] = (byte)((int)((in[19 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[109 + outPos] = (byte)((int)((in[19 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[110 + outPos] = (byte)((int)(in[20 + inPos] & 17592186044415L & 255L));
         out[111 + outPos] = (byte)((int)((in[20 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[112 + outPos] = (byte)((int)((in[20 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[113 + outPos] = (byte)((int)((in[20 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[114 + outPos] = (byte)((int)((in[20 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[115 + outPos] = (byte)((int)(((in[20 + inPos] & 17592186044415L) >>> 40 | (in[21 + inPos] & 17592186044415L) << 4) & 255L));
         out[116 + outPos] = (byte)((int)((in[21 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[117 + outPos] = (byte)((int)((in[21 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[118 + outPos] = (byte)((int)((in[21 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[119 + outPos] = (byte)((int)((in[21 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[120 + outPos] = (byte)((int)((in[21 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[121 + outPos] = (byte)((int)(in[22 + inPos] & 17592186044415L & 255L));
         out[122 + outPos] = (byte)((int)((in[22 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[123 + outPos] = (byte)((int)((in[22 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[124 + outPos] = (byte)((int)((in[22 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[125 + outPos] = (byte)((int)((in[22 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[126 + outPos] = (byte)((int)(((in[22 + inPos] & 17592186044415L) >>> 40 | (in[23 + inPos] & 17592186044415L) << 4) & 255L));
         out[127 + outPos] = (byte)((int)((in[23 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[128 + outPos] = (byte)((int)((in[23 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[129 + outPos] = (byte)((int)((in[23 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[130 + outPos] = (byte)((int)((in[23 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[131 + outPos] = (byte)((int)((in[23 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[132 + outPos] = (byte)((int)(in[24 + inPos] & 17592186044415L & 255L));
         out[133 + outPos] = (byte)((int)((in[24 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[134 + outPos] = (byte)((int)((in[24 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[135 + outPos] = (byte)((int)((in[24 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[136 + outPos] = (byte)((int)((in[24 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[137 + outPos] = (byte)((int)(((in[24 + inPos] & 17592186044415L) >>> 40 | (in[25 + inPos] & 17592186044415L) << 4) & 255L));
         out[138 + outPos] = (byte)((int)((in[25 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[139 + outPos] = (byte)((int)((in[25 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[140 + outPos] = (byte)((int)((in[25 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[141 + outPos] = (byte)((int)((in[25 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[142 + outPos] = (byte)((int)((in[25 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[143 + outPos] = (byte)((int)(in[26 + inPos] & 17592186044415L & 255L));
         out[144 + outPos] = (byte)((int)((in[26 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[145 + outPos] = (byte)((int)((in[26 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[146 + outPos] = (byte)((int)((in[26 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[147 + outPos] = (byte)((int)((in[26 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[148 + outPos] = (byte)((int)(((in[26 + inPos] & 17592186044415L) >>> 40 | (in[27 + inPos] & 17592186044415L) << 4) & 255L));
         out[149 + outPos] = (byte)((int)((in[27 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[150 + outPos] = (byte)((int)((in[27 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[151 + outPos] = (byte)((int)((in[27 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[152 + outPos] = (byte)((int)((in[27 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[153 + outPos] = (byte)((int)((in[27 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[154 + outPos] = (byte)((int)(in[28 + inPos] & 17592186044415L & 255L));
         out[155 + outPos] = (byte)((int)((in[28 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[156 + outPos] = (byte)((int)((in[28 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[157 + outPos] = (byte)((int)((in[28 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[158 + outPos] = (byte)((int)((in[28 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[159 + outPos] = (byte)((int)(((in[28 + inPos] & 17592186044415L) >>> 40 | (in[29 + inPos] & 17592186044415L) << 4) & 255L));
         out[160 + outPos] = (byte)((int)((in[29 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[161 + outPos] = (byte)((int)((in[29 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[162 + outPos] = (byte)((int)((in[29 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[163 + outPos] = (byte)((int)((in[29 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[164 + outPos] = (byte)((int)((in[29 + inPos] & 17592186044415L) >>> 36 & 255L));
         out[165 + outPos] = (byte)((int)(in[30 + inPos] & 17592186044415L & 255L));
         out[166 + outPos] = (byte)((int)((in[30 + inPos] & 17592186044415L) >>> 8 & 255L));
         out[167 + outPos] = (byte)((int)((in[30 + inPos] & 17592186044415L) >>> 16 & 255L));
         out[168 + outPos] = (byte)((int)((in[30 + inPos] & 17592186044415L) >>> 24 & 255L));
         out[169 + outPos] = (byte)((int)((in[30 + inPos] & 17592186044415L) >>> 32 & 255L));
         out[170 + outPos] = (byte)((int)(((in[30 + inPos] & 17592186044415L) >>> 40 | (in[31 + inPos] & 17592186044415L) << 4) & 255L));
         out[171 + outPos] = (byte)((int)((in[31 + inPos] & 17592186044415L) >>> 4 & 255L));
         out[172 + outPos] = (byte)((int)((in[31 + inPos] & 17592186044415L) >>> 12 & 255L));
         out[173 + outPos] = (byte)((int)((in[31 + inPos] & 17592186044415L) >>> 20 & 255L));
         out[174 + outPos] = (byte)((int)((in[31 + inPos] & 17592186044415L) >>> 28 & 255L));
         out[175 + outPos] = (byte)((int)((in[31 + inPos] & 17592186044415L) >>> 36 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 17592186044415L;
         out[1 + outPos] = (long)in[5 + inPos] >> 4 & 15L | (long)in[6 + inPos] << 4 & 4095L | (long)in[7 + inPos] << 12 & 1048575L | (long)in[8 + inPos] << 20 & 268435455L | (long)in[9 + inPos] << 28 & 68719476735L | (long)in[10 + inPos] << 36 & 17592186044415L;
         out[2 + outPos] = (long)in[11 + inPos] & 255L | (long)in[12 + inPos] << 8 & 65535L | (long)in[13 + inPos] << 16 & 16777215L | (long)in[14 + inPos] << 24 & 4294967295L | (long)in[15 + inPos] << 32 & 1099511627775L | (long)in[16 + inPos] << 40 & 17592186044415L;
         out[3 + outPos] = (long)in[16 + inPos] >> 4 & 15L | (long)in[17 + inPos] << 4 & 4095L | (long)in[18 + inPos] << 12 & 1048575L | (long)in[19 + inPos] << 20 & 268435455L | (long)in[20 + inPos] << 28 & 68719476735L | (long)in[21 + inPos] << 36 & 17592186044415L;
         out[4 + outPos] = (long)in[22 + inPos] & 255L | (long)in[23 + inPos] << 8 & 65535L | (long)in[24 + inPos] << 16 & 16777215L | (long)in[25 + inPos] << 24 & 4294967295L | (long)in[26 + inPos] << 32 & 1099511627775L | (long)in[27 + inPos] << 40 & 17592186044415L;
         out[5 + outPos] = (long)in[27 + inPos] >> 4 & 15L | (long)in[28 + inPos] << 4 & 4095L | (long)in[29 + inPos] << 12 & 1048575L | (long)in[30 + inPos] << 20 & 268435455L | (long)in[31 + inPos] << 28 & 68719476735L | (long)in[32 + inPos] << 36 & 17592186044415L;
         out[6 + outPos] = (long)in[33 + inPos] & 255L | (long)in[34 + inPos] << 8 & 65535L | (long)in[35 + inPos] << 16 & 16777215L | (long)in[36 + inPos] << 24 & 4294967295L | (long)in[37 + inPos] << 32 & 1099511627775L | (long)in[38 + inPos] << 40 & 17592186044415L;
         out[7 + outPos] = (long)in[38 + inPos] >> 4 & 15L | (long)in[39 + inPos] << 4 & 4095L | (long)in[40 + inPos] << 12 & 1048575L | (long)in[41 + inPos] << 20 & 268435455L | (long)in[42 + inPos] << 28 & 68719476735L | (long)in[43 + inPos] << 36 & 17592186044415L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 17592186044415L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 4 & 15L | (long)in.get(6 + inPos) << 4 & 4095L | (long)in.get(7 + inPos) << 12 & 1048575L | (long)in.get(8 + inPos) << 20 & 268435455L | (long)in.get(9 + inPos) << 28 & 68719476735L | (long)in.get(10 + inPos) << 36 & 17592186044415L;
         out[2 + outPos] = (long)in.get(11 + inPos) & 255L | (long)in.get(12 + inPos) << 8 & 65535L | (long)in.get(13 + inPos) << 16 & 16777215L | (long)in.get(14 + inPos) << 24 & 4294967295L | (long)in.get(15 + inPos) << 32 & 1099511627775L | (long)in.get(16 + inPos) << 40 & 17592186044415L;
         out[3 + outPos] = (long)in.get(16 + inPos) >> 4 & 15L | (long)in.get(17 + inPos) << 4 & 4095L | (long)in.get(18 + inPos) << 12 & 1048575L | (long)in.get(19 + inPos) << 20 & 268435455L | (long)in.get(20 + inPos) << 28 & 68719476735L | (long)in.get(21 + inPos) << 36 & 17592186044415L;
         out[4 + outPos] = (long)in.get(22 + inPos) & 255L | (long)in.get(23 + inPos) << 8 & 65535L | (long)in.get(24 + inPos) << 16 & 16777215L | (long)in.get(25 + inPos) << 24 & 4294967295L | (long)in.get(26 + inPos) << 32 & 1099511627775L | (long)in.get(27 + inPos) << 40 & 17592186044415L;
         out[5 + outPos] = (long)in.get(27 + inPos) >> 4 & 15L | (long)in.get(28 + inPos) << 4 & 4095L | (long)in.get(29 + inPos) << 12 & 1048575L | (long)in.get(30 + inPos) << 20 & 268435455L | (long)in.get(31 + inPos) << 28 & 68719476735L | (long)in.get(32 + inPos) << 36 & 17592186044415L;
         out[6 + outPos] = (long)in.get(33 + inPos) & 255L | (long)in.get(34 + inPos) << 8 & 65535L | (long)in.get(35 + inPos) << 16 & 16777215L | (long)in.get(36 + inPos) << 24 & 4294967295L | (long)in.get(37 + inPos) << 32 & 1099511627775L | (long)in.get(38 + inPos) << 40 & 17592186044415L;
         out[7 + outPos] = (long)in.get(38 + inPos) >> 4 & 15L | (long)in.get(39 + inPos) << 4 & 4095L | (long)in.get(40 + inPos) << 12 & 1048575L | (long)in.get(41 + inPos) << 20 & 268435455L | (long)in.get(42 + inPos) << 28 & 68719476735L | (long)in.get(43 + inPos) << 36 & 17592186044415L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 17592186044415L;
         out[1 + outPos] = (long)in[5 + inPos] >> 4 & 15L | (long)in[6 + inPos] << 4 & 4095L | (long)in[7 + inPos] << 12 & 1048575L | (long)in[8 + inPos] << 20 & 268435455L | (long)in[9 + inPos] << 28 & 68719476735L | (long)in[10 + inPos] << 36 & 17592186044415L;
         out[2 + outPos] = (long)in[11 + inPos] & 255L | (long)in[12 + inPos] << 8 & 65535L | (long)in[13 + inPos] << 16 & 16777215L | (long)in[14 + inPos] << 24 & 4294967295L | (long)in[15 + inPos] << 32 & 1099511627775L | (long)in[16 + inPos] << 40 & 17592186044415L;
         out[3 + outPos] = (long)in[16 + inPos] >> 4 & 15L | (long)in[17 + inPos] << 4 & 4095L | (long)in[18 + inPos] << 12 & 1048575L | (long)in[19 + inPos] << 20 & 268435455L | (long)in[20 + inPos] << 28 & 68719476735L | (long)in[21 + inPos] << 36 & 17592186044415L;
         out[4 + outPos] = (long)in[22 + inPos] & 255L | (long)in[23 + inPos] << 8 & 65535L | (long)in[24 + inPos] << 16 & 16777215L | (long)in[25 + inPos] << 24 & 4294967295L | (long)in[26 + inPos] << 32 & 1099511627775L | (long)in[27 + inPos] << 40 & 17592186044415L;
         out[5 + outPos] = (long)in[27 + inPos] >> 4 & 15L | (long)in[28 + inPos] << 4 & 4095L | (long)in[29 + inPos] << 12 & 1048575L | (long)in[30 + inPos] << 20 & 268435455L | (long)in[31 + inPos] << 28 & 68719476735L | (long)in[32 + inPos] << 36 & 17592186044415L;
         out[6 + outPos] = (long)in[33 + inPos] & 255L | (long)in[34 + inPos] << 8 & 65535L | (long)in[35 + inPos] << 16 & 16777215L | (long)in[36 + inPos] << 24 & 4294967295L | (long)in[37 + inPos] << 32 & 1099511627775L | (long)in[38 + inPos] << 40 & 17592186044415L;
         out[7 + outPos] = (long)in[38 + inPos] >> 4 & 15L | (long)in[39 + inPos] << 4 & 4095L | (long)in[40 + inPos] << 12 & 1048575L | (long)in[41 + inPos] << 20 & 268435455L | (long)in[42 + inPos] << 28 & 68719476735L | (long)in[43 + inPos] << 36 & 17592186044415L;
         out[8 + outPos] = (long)in[44 + inPos] & 255L | (long)in[45 + inPos] << 8 & 65535L | (long)in[46 + inPos] << 16 & 16777215L | (long)in[47 + inPos] << 24 & 4294967295L | (long)in[48 + inPos] << 32 & 1099511627775L | (long)in[49 + inPos] << 40 & 17592186044415L;
         out[9 + outPos] = (long)in[49 + inPos] >> 4 & 15L | (long)in[50 + inPos] << 4 & 4095L | (long)in[51 + inPos] << 12 & 1048575L | (long)in[52 + inPos] << 20 & 268435455L | (long)in[53 + inPos] << 28 & 68719476735L | (long)in[54 + inPos] << 36 & 17592186044415L;
         out[10 + outPos] = (long)in[55 + inPos] & 255L | (long)in[56 + inPos] << 8 & 65535L | (long)in[57 + inPos] << 16 & 16777215L | (long)in[58 + inPos] << 24 & 4294967295L | (long)in[59 + inPos] << 32 & 1099511627775L | (long)in[60 + inPos] << 40 & 17592186044415L;
         out[11 + outPos] = (long)in[60 + inPos] >> 4 & 15L | (long)in[61 + inPos] << 4 & 4095L | (long)in[62 + inPos] << 12 & 1048575L | (long)in[63 + inPos] << 20 & 268435455L | (long)in[64 + inPos] << 28 & 68719476735L | (long)in[65 + inPos] << 36 & 17592186044415L;
         out[12 + outPos] = (long)in[66 + inPos] & 255L | (long)in[67 + inPos] << 8 & 65535L | (long)in[68 + inPos] << 16 & 16777215L | (long)in[69 + inPos] << 24 & 4294967295L | (long)in[70 + inPos] << 32 & 1099511627775L | (long)in[71 + inPos] << 40 & 17592186044415L;
         out[13 + outPos] = (long)in[71 + inPos] >> 4 & 15L | (long)in[72 + inPos] << 4 & 4095L | (long)in[73 + inPos] << 12 & 1048575L | (long)in[74 + inPos] << 20 & 268435455L | (long)in[75 + inPos] << 28 & 68719476735L | (long)in[76 + inPos] << 36 & 17592186044415L;
         out[14 + outPos] = (long)in[77 + inPos] & 255L | (long)in[78 + inPos] << 8 & 65535L | (long)in[79 + inPos] << 16 & 16777215L | (long)in[80 + inPos] << 24 & 4294967295L | (long)in[81 + inPos] << 32 & 1099511627775L | (long)in[82 + inPos] << 40 & 17592186044415L;
         out[15 + outPos] = (long)in[82 + inPos] >> 4 & 15L | (long)in[83 + inPos] << 4 & 4095L | (long)in[84 + inPos] << 12 & 1048575L | (long)in[85 + inPos] << 20 & 268435455L | (long)in[86 + inPos] << 28 & 68719476735L | (long)in[87 + inPos] << 36 & 17592186044415L;
         out[16 + outPos] = (long)in[88 + inPos] & 255L | (long)in[89 + inPos] << 8 & 65535L | (long)in[90 + inPos] << 16 & 16777215L | (long)in[91 + inPos] << 24 & 4294967295L | (long)in[92 + inPos] << 32 & 1099511627775L | (long)in[93 + inPos] << 40 & 17592186044415L;
         out[17 + outPos] = (long)in[93 + inPos] >> 4 & 15L | (long)in[94 + inPos] << 4 & 4095L | (long)in[95 + inPos] << 12 & 1048575L | (long)in[96 + inPos] << 20 & 268435455L | (long)in[97 + inPos] << 28 & 68719476735L | (long)in[98 + inPos] << 36 & 17592186044415L;
         out[18 + outPos] = (long)in[99 + inPos] & 255L | (long)in[100 + inPos] << 8 & 65535L | (long)in[101 + inPos] << 16 & 16777215L | (long)in[102 + inPos] << 24 & 4294967295L | (long)in[103 + inPos] << 32 & 1099511627775L | (long)in[104 + inPos] << 40 & 17592186044415L;
         out[19 + outPos] = (long)in[104 + inPos] >> 4 & 15L | (long)in[105 + inPos] << 4 & 4095L | (long)in[106 + inPos] << 12 & 1048575L | (long)in[107 + inPos] << 20 & 268435455L | (long)in[108 + inPos] << 28 & 68719476735L | (long)in[109 + inPos] << 36 & 17592186044415L;
         out[20 + outPos] = (long)in[110 + inPos] & 255L | (long)in[111 + inPos] << 8 & 65535L | (long)in[112 + inPos] << 16 & 16777215L | (long)in[113 + inPos] << 24 & 4294967295L | (long)in[114 + inPos] << 32 & 1099511627775L | (long)in[115 + inPos] << 40 & 17592186044415L;
         out[21 + outPos] = (long)in[115 + inPos] >> 4 & 15L | (long)in[116 + inPos] << 4 & 4095L | (long)in[117 + inPos] << 12 & 1048575L | (long)in[118 + inPos] << 20 & 268435455L | (long)in[119 + inPos] << 28 & 68719476735L | (long)in[120 + inPos] << 36 & 17592186044415L;
         out[22 + outPos] = (long)in[121 + inPos] & 255L | (long)in[122 + inPos] << 8 & 65535L | (long)in[123 + inPos] << 16 & 16777215L | (long)in[124 + inPos] << 24 & 4294967295L | (long)in[125 + inPos] << 32 & 1099511627775L | (long)in[126 + inPos] << 40 & 17592186044415L;
         out[23 + outPos] = (long)in[126 + inPos] >> 4 & 15L | (long)in[127 + inPos] << 4 & 4095L | (long)in[128 + inPos] << 12 & 1048575L | (long)in[129 + inPos] << 20 & 268435455L | (long)in[130 + inPos] << 28 & 68719476735L | (long)in[131 + inPos] << 36 & 17592186044415L;
         out[24 + outPos] = (long)in[132 + inPos] & 255L | (long)in[133 + inPos] << 8 & 65535L | (long)in[134 + inPos] << 16 & 16777215L | (long)in[135 + inPos] << 24 & 4294967295L | (long)in[136 + inPos] << 32 & 1099511627775L | (long)in[137 + inPos] << 40 & 17592186044415L;
         out[25 + outPos] = (long)in[137 + inPos] >> 4 & 15L | (long)in[138 + inPos] << 4 & 4095L | (long)in[139 + inPos] << 12 & 1048575L | (long)in[140 + inPos] << 20 & 268435455L | (long)in[141 + inPos] << 28 & 68719476735L | (long)in[142 + inPos] << 36 & 17592186044415L;
         out[26 + outPos] = (long)in[143 + inPos] & 255L | (long)in[144 + inPos] << 8 & 65535L | (long)in[145 + inPos] << 16 & 16777215L | (long)in[146 + inPos] << 24 & 4294967295L | (long)in[147 + inPos] << 32 & 1099511627775L | (long)in[148 + inPos] << 40 & 17592186044415L;
         out[27 + outPos] = (long)in[148 + inPos] >> 4 & 15L | (long)in[149 + inPos] << 4 & 4095L | (long)in[150 + inPos] << 12 & 1048575L | (long)in[151 + inPos] << 20 & 268435455L | (long)in[152 + inPos] << 28 & 68719476735L | (long)in[153 + inPos] << 36 & 17592186044415L;
         out[28 + outPos] = (long)in[154 + inPos] & 255L | (long)in[155 + inPos] << 8 & 65535L | (long)in[156 + inPos] << 16 & 16777215L | (long)in[157 + inPos] << 24 & 4294967295L | (long)in[158 + inPos] << 32 & 1099511627775L | (long)in[159 + inPos] << 40 & 17592186044415L;
         out[29 + outPos] = (long)in[159 + inPos] >> 4 & 15L | (long)in[160 + inPos] << 4 & 4095L | (long)in[161 + inPos] << 12 & 1048575L | (long)in[162 + inPos] << 20 & 268435455L | (long)in[163 + inPos] << 28 & 68719476735L | (long)in[164 + inPos] << 36 & 17592186044415L;
         out[30 + outPos] = (long)in[165 + inPos] & 255L | (long)in[166 + inPos] << 8 & 65535L | (long)in[167 + inPos] << 16 & 16777215L | (long)in[168 + inPos] << 24 & 4294967295L | (long)in[169 + inPos] << 32 & 1099511627775L | (long)in[170 + inPos] << 40 & 17592186044415L;
         out[31 + outPos] = (long)in[170 + inPos] >> 4 & 15L | (long)in[171 + inPos] << 4 & 4095L | (long)in[172 + inPos] << 12 & 1048575L | (long)in[173 + inPos] << 20 & 268435455L | (long)in[174 + inPos] << 28 & 68719476735L | (long)in[175 + inPos] << 36 & 17592186044415L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 17592186044415L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 4 & 15L | (long)in.get(6 + inPos) << 4 & 4095L | (long)in.get(7 + inPos) << 12 & 1048575L | (long)in.get(8 + inPos) << 20 & 268435455L | (long)in.get(9 + inPos) << 28 & 68719476735L | (long)in.get(10 + inPos) << 36 & 17592186044415L;
         out[2 + outPos] = (long)in.get(11 + inPos) & 255L | (long)in.get(12 + inPos) << 8 & 65535L | (long)in.get(13 + inPos) << 16 & 16777215L | (long)in.get(14 + inPos) << 24 & 4294967295L | (long)in.get(15 + inPos) << 32 & 1099511627775L | (long)in.get(16 + inPos) << 40 & 17592186044415L;
         out[3 + outPos] = (long)in.get(16 + inPos) >> 4 & 15L | (long)in.get(17 + inPos) << 4 & 4095L | (long)in.get(18 + inPos) << 12 & 1048575L | (long)in.get(19 + inPos) << 20 & 268435455L | (long)in.get(20 + inPos) << 28 & 68719476735L | (long)in.get(21 + inPos) << 36 & 17592186044415L;
         out[4 + outPos] = (long)in.get(22 + inPos) & 255L | (long)in.get(23 + inPos) << 8 & 65535L | (long)in.get(24 + inPos) << 16 & 16777215L | (long)in.get(25 + inPos) << 24 & 4294967295L | (long)in.get(26 + inPos) << 32 & 1099511627775L | (long)in.get(27 + inPos) << 40 & 17592186044415L;
         out[5 + outPos] = (long)in.get(27 + inPos) >> 4 & 15L | (long)in.get(28 + inPos) << 4 & 4095L | (long)in.get(29 + inPos) << 12 & 1048575L | (long)in.get(30 + inPos) << 20 & 268435455L | (long)in.get(31 + inPos) << 28 & 68719476735L | (long)in.get(32 + inPos) << 36 & 17592186044415L;
         out[6 + outPos] = (long)in.get(33 + inPos) & 255L | (long)in.get(34 + inPos) << 8 & 65535L | (long)in.get(35 + inPos) << 16 & 16777215L | (long)in.get(36 + inPos) << 24 & 4294967295L | (long)in.get(37 + inPos) << 32 & 1099511627775L | (long)in.get(38 + inPos) << 40 & 17592186044415L;
         out[7 + outPos] = (long)in.get(38 + inPos) >> 4 & 15L | (long)in.get(39 + inPos) << 4 & 4095L | (long)in.get(40 + inPos) << 12 & 1048575L | (long)in.get(41 + inPos) << 20 & 268435455L | (long)in.get(42 + inPos) << 28 & 68719476735L | (long)in.get(43 + inPos) << 36 & 17592186044415L;
         out[8 + outPos] = (long)in.get(44 + inPos) & 255L | (long)in.get(45 + inPos) << 8 & 65535L | (long)in.get(46 + inPos) << 16 & 16777215L | (long)in.get(47 + inPos) << 24 & 4294967295L | (long)in.get(48 + inPos) << 32 & 1099511627775L | (long)in.get(49 + inPos) << 40 & 17592186044415L;
         out[9 + outPos] = (long)in.get(49 + inPos) >> 4 & 15L | (long)in.get(50 + inPos) << 4 & 4095L | (long)in.get(51 + inPos) << 12 & 1048575L | (long)in.get(52 + inPos) << 20 & 268435455L | (long)in.get(53 + inPos) << 28 & 68719476735L | (long)in.get(54 + inPos) << 36 & 17592186044415L;
         out[10 + outPos] = (long)in.get(55 + inPos) & 255L | (long)in.get(56 + inPos) << 8 & 65535L | (long)in.get(57 + inPos) << 16 & 16777215L | (long)in.get(58 + inPos) << 24 & 4294967295L | (long)in.get(59 + inPos) << 32 & 1099511627775L | (long)in.get(60 + inPos) << 40 & 17592186044415L;
         out[11 + outPos] = (long)in.get(60 + inPos) >> 4 & 15L | (long)in.get(61 + inPos) << 4 & 4095L | (long)in.get(62 + inPos) << 12 & 1048575L | (long)in.get(63 + inPos) << 20 & 268435455L | (long)in.get(64 + inPos) << 28 & 68719476735L | (long)in.get(65 + inPos) << 36 & 17592186044415L;
         out[12 + outPos] = (long)in.get(66 + inPos) & 255L | (long)in.get(67 + inPos) << 8 & 65535L | (long)in.get(68 + inPos) << 16 & 16777215L | (long)in.get(69 + inPos) << 24 & 4294967295L | (long)in.get(70 + inPos) << 32 & 1099511627775L | (long)in.get(71 + inPos) << 40 & 17592186044415L;
         out[13 + outPos] = (long)in.get(71 + inPos) >> 4 & 15L | (long)in.get(72 + inPos) << 4 & 4095L | (long)in.get(73 + inPos) << 12 & 1048575L | (long)in.get(74 + inPos) << 20 & 268435455L | (long)in.get(75 + inPos) << 28 & 68719476735L | (long)in.get(76 + inPos) << 36 & 17592186044415L;
         out[14 + outPos] = (long)in.get(77 + inPos) & 255L | (long)in.get(78 + inPos) << 8 & 65535L | (long)in.get(79 + inPos) << 16 & 16777215L | (long)in.get(80 + inPos) << 24 & 4294967295L | (long)in.get(81 + inPos) << 32 & 1099511627775L | (long)in.get(82 + inPos) << 40 & 17592186044415L;
         out[15 + outPos] = (long)in.get(82 + inPos) >> 4 & 15L | (long)in.get(83 + inPos) << 4 & 4095L | (long)in.get(84 + inPos) << 12 & 1048575L | (long)in.get(85 + inPos) << 20 & 268435455L | (long)in.get(86 + inPos) << 28 & 68719476735L | (long)in.get(87 + inPos) << 36 & 17592186044415L;
         out[16 + outPos] = (long)in.get(88 + inPos) & 255L | (long)in.get(89 + inPos) << 8 & 65535L | (long)in.get(90 + inPos) << 16 & 16777215L | (long)in.get(91 + inPos) << 24 & 4294967295L | (long)in.get(92 + inPos) << 32 & 1099511627775L | (long)in.get(93 + inPos) << 40 & 17592186044415L;
         out[17 + outPos] = (long)in.get(93 + inPos) >> 4 & 15L | (long)in.get(94 + inPos) << 4 & 4095L | (long)in.get(95 + inPos) << 12 & 1048575L | (long)in.get(96 + inPos) << 20 & 268435455L | (long)in.get(97 + inPos) << 28 & 68719476735L | (long)in.get(98 + inPos) << 36 & 17592186044415L;
         out[18 + outPos] = (long)in.get(99 + inPos) & 255L | (long)in.get(100 + inPos) << 8 & 65535L | (long)in.get(101 + inPos) << 16 & 16777215L | (long)in.get(102 + inPos) << 24 & 4294967295L | (long)in.get(103 + inPos) << 32 & 1099511627775L | (long)in.get(104 + inPos) << 40 & 17592186044415L;
         out[19 + outPos] = (long)in.get(104 + inPos) >> 4 & 15L | (long)in.get(105 + inPos) << 4 & 4095L | (long)in.get(106 + inPos) << 12 & 1048575L | (long)in.get(107 + inPos) << 20 & 268435455L | (long)in.get(108 + inPos) << 28 & 68719476735L | (long)in.get(109 + inPos) << 36 & 17592186044415L;
         out[20 + outPos] = (long)in.get(110 + inPos) & 255L | (long)in.get(111 + inPos) << 8 & 65535L | (long)in.get(112 + inPos) << 16 & 16777215L | (long)in.get(113 + inPos) << 24 & 4294967295L | (long)in.get(114 + inPos) << 32 & 1099511627775L | (long)in.get(115 + inPos) << 40 & 17592186044415L;
         out[21 + outPos] = (long)in.get(115 + inPos) >> 4 & 15L | (long)in.get(116 + inPos) << 4 & 4095L | (long)in.get(117 + inPos) << 12 & 1048575L | (long)in.get(118 + inPos) << 20 & 268435455L | (long)in.get(119 + inPos) << 28 & 68719476735L | (long)in.get(120 + inPos) << 36 & 17592186044415L;
         out[22 + outPos] = (long)in.get(121 + inPos) & 255L | (long)in.get(122 + inPos) << 8 & 65535L | (long)in.get(123 + inPos) << 16 & 16777215L | (long)in.get(124 + inPos) << 24 & 4294967295L | (long)in.get(125 + inPos) << 32 & 1099511627775L | (long)in.get(126 + inPos) << 40 & 17592186044415L;
         out[23 + outPos] = (long)in.get(126 + inPos) >> 4 & 15L | (long)in.get(127 + inPos) << 4 & 4095L | (long)in.get(128 + inPos) << 12 & 1048575L | (long)in.get(129 + inPos) << 20 & 268435455L | (long)in.get(130 + inPos) << 28 & 68719476735L | (long)in.get(131 + inPos) << 36 & 17592186044415L;
         out[24 + outPos] = (long)in.get(132 + inPos) & 255L | (long)in.get(133 + inPos) << 8 & 65535L | (long)in.get(134 + inPos) << 16 & 16777215L | (long)in.get(135 + inPos) << 24 & 4294967295L | (long)in.get(136 + inPos) << 32 & 1099511627775L | (long)in.get(137 + inPos) << 40 & 17592186044415L;
         out[25 + outPos] = (long)in.get(137 + inPos) >> 4 & 15L | (long)in.get(138 + inPos) << 4 & 4095L | (long)in.get(139 + inPos) << 12 & 1048575L | (long)in.get(140 + inPos) << 20 & 268435455L | (long)in.get(141 + inPos) << 28 & 68719476735L | (long)in.get(142 + inPos) << 36 & 17592186044415L;
         out[26 + outPos] = (long)in.get(143 + inPos) & 255L | (long)in.get(144 + inPos) << 8 & 65535L | (long)in.get(145 + inPos) << 16 & 16777215L | (long)in.get(146 + inPos) << 24 & 4294967295L | (long)in.get(147 + inPos) << 32 & 1099511627775L | (long)in.get(148 + inPos) << 40 & 17592186044415L;
         out[27 + outPos] = (long)in.get(148 + inPos) >> 4 & 15L | (long)in.get(149 + inPos) << 4 & 4095L | (long)in.get(150 + inPos) << 12 & 1048575L | (long)in.get(151 + inPos) << 20 & 268435455L | (long)in.get(152 + inPos) << 28 & 68719476735L | (long)in.get(153 + inPos) << 36 & 17592186044415L;
         out[28 + outPos] = (long)in.get(154 + inPos) & 255L | (long)in.get(155 + inPos) << 8 & 65535L | (long)in.get(156 + inPos) << 16 & 16777215L | (long)in.get(157 + inPos) << 24 & 4294967295L | (long)in.get(158 + inPos) << 32 & 1099511627775L | (long)in.get(159 + inPos) << 40 & 17592186044415L;
         out[29 + outPos] = (long)in.get(159 + inPos) >> 4 & 15L | (long)in.get(160 + inPos) << 4 & 4095L | (long)in.get(161 + inPos) << 12 & 1048575L | (long)in.get(162 + inPos) << 20 & 268435455L | (long)in.get(163 + inPos) << 28 & 68719476735L | (long)in.get(164 + inPos) << 36 & 17592186044415L;
         out[30 + outPos] = (long)in.get(165 + inPos) & 255L | (long)in.get(166 + inPos) << 8 & 65535L | (long)in.get(167 + inPos) << 16 & 16777215L | (long)in.get(168 + inPos) << 24 & 4294967295L | (long)in.get(169 + inPos) << 32 & 1099511627775L | (long)in.get(170 + inPos) << 40 & 17592186044415L;
         out[31 + outPos] = (long)in.get(170 + inPos) >> 4 & 15L | (long)in.get(171 + inPos) << 4 & 4095L | (long)in.get(172 + inPos) << 12 & 1048575L | (long)in.get(173 + inPos) << 20 & 268435455L | (long)in.get(174 + inPos) << 28 & 68719476735L | (long)in.get(175 + inPos) << 36 & 17592186044415L;
      }
   }

   private static final class Packer45 extends BytePackerForLong {
      private Packer45() {
         super(45);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 35184372088831L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 35184372088831L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 35184372088831L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 35184372088831L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 35184372088831L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 35184372088831L) >>> 40 | (in[1 + inPos] & 35184372088831L) << 5) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 35184372088831L) >>> 3 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 35184372088831L) >>> 11 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 35184372088831L) >>> 19 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 35184372088831L) >>> 27 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 35184372088831L) >>> 35 & 255L));
         out[11 + outPos] = (byte)((int)(((in[1 + inPos] & 35184372088831L) >>> 43 | (in[2 + inPos] & 35184372088831L) << 2) & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 35184372088831L) >>> 6 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 35184372088831L) >>> 14 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 35184372088831L) >>> 22 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 35184372088831L) >>> 30 & 255L));
         out[16 + outPos] = (byte)((int)(((in[2 + inPos] & 35184372088831L) >>> 38 | (in[3 + inPos] & 35184372088831L) << 7) & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 35184372088831L) >>> 1 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 35184372088831L) >>> 9 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 35184372088831L) >>> 17 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 35184372088831L) >>> 25 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 35184372088831L) >>> 33 & 255L));
         out[22 + outPos] = (byte)((int)(((in[3 + inPos] & 35184372088831L) >>> 41 | (in[4 + inPos] & 35184372088831L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 35184372088831L) >>> 4 & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 35184372088831L) >>> 12 & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 35184372088831L) >>> 20 & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 35184372088831L) >>> 28 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 35184372088831L) >>> 36 & 255L));
         out[28 + outPos] = (byte)((int)(((in[4 + inPos] & 35184372088831L) >>> 44 | (in[5 + inPos] & 35184372088831L) << 1) & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 35184372088831L) >>> 7 & 255L));
         out[30 + outPos] = (byte)((int)((in[5 + inPos] & 35184372088831L) >>> 15 & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 35184372088831L) >>> 23 & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 35184372088831L) >>> 31 & 255L));
         out[33 + outPos] = (byte)((int)(((in[5 + inPos] & 35184372088831L) >>> 39 | (in[6 + inPos] & 35184372088831L) << 6) & 255L));
         out[34 + outPos] = (byte)((int)((in[6 + inPos] & 35184372088831L) >>> 2 & 255L));
         out[35 + outPos] = (byte)((int)((in[6 + inPos] & 35184372088831L) >>> 10 & 255L));
         out[36 + outPos] = (byte)((int)((in[6 + inPos] & 35184372088831L) >>> 18 & 255L));
         out[37 + outPos] = (byte)((int)((in[6 + inPos] & 35184372088831L) >>> 26 & 255L));
         out[38 + outPos] = (byte)((int)((in[6 + inPos] & 35184372088831L) >>> 34 & 255L));
         out[39 + outPos] = (byte)((int)(((in[6 + inPos] & 35184372088831L) >>> 42 | (in[7 + inPos] & 35184372088831L) << 3) & 255L));
         out[40 + outPos] = (byte)((int)((in[7 + inPos] & 35184372088831L) >>> 5 & 255L));
         out[41 + outPos] = (byte)((int)((in[7 + inPos] & 35184372088831L) >>> 13 & 255L));
         out[42 + outPos] = (byte)((int)((in[7 + inPos] & 35184372088831L) >>> 21 & 255L));
         out[43 + outPos] = (byte)((int)((in[7 + inPos] & 35184372088831L) >>> 29 & 255L));
         out[44 + outPos] = (byte)((int)((in[7 + inPos] & 35184372088831L) >>> 37 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 35184372088831L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 35184372088831L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 35184372088831L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 35184372088831L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 35184372088831L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 35184372088831L) >>> 40 | (in[1 + inPos] & 35184372088831L) << 5) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 35184372088831L) >>> 3 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 35184372088831L) >>> 11 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 35184372088831L) >>> 19 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 35184372088831L) >>> 27 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 35184372088831L) >>> 35 & 255L));
         out[11 + outPos] = (byte)((int)(((in[1 + inPos] & 35184372088831L) >>> 43 | (in[2 + inPos] & 35184372088831L) << 2) & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 35184372088831L) >>> 6 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 35184372088831L) >>> 14 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 35184372088831L) >>> 22 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 35184372088831L) >>> 30 & 255L));
         out[16 + outPos] = (byte)((int)(((in[2 + inPos] & 35184372088831L) >>> 38 | (in[3 + inPos] & 35184372088831L) << 7) & 255L));
         out[17 + outPos] = (byte)((int)((in[3 + inPos] & 35184372088831L) >>> 1 & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 35184372088831L) >>> 9 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 35184372088831L) >>> 17 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 35184372088831L) >>> 25 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 35184372088831L) >>> 33 & 255L));
         out[22 + outPos] = (byte)((int)(((in[3 + inPos] & 35184372088831L) >>> 41 | (in[4 + inPos] & 35184372088831L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)((in[4 + inPos] & 35184372088831L) >>> 4 & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 35184372088831L) >>> 12 & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 35184372088831L) >>> 20 & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 35184372088831L) >>> 28 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 35184372088831L) >>> 36 & 255L));
         out[28 + outPos] = (byte)((int)(((in[4 + inPos] & 35184372088831L) >>> 44 | (in[5 + inPos] & 35184372088831L) << 1) & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 35184372088831L) >>> 7 & 255L));
         out[30 + outPos] = (byte)((int)((in[5 + inPos] & 35184372088831L) >>> 15 & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 35184372088831L) >>> 23 & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 35184372088831L) >>> 31 & 255L));
         out[33 + outPos] = (byte)((int)(((in[5 + inPos] & 35184372088831L) >>> 39 | (in[6 + inPos] & 35184372088831L) << 6) & 255L));
         out[34 + outPos] = (byte)((int)((in[6 + inPos] & 35184372088831L) >>> 2 & 255L));
         out[35 + outPos] = (byte)((int)((in[6 + inPos] & 35184372088831L) >>> 10 & 255L));
         out[36 + outPos] = (byte)((int)((in[6 + inPos] & 35184372088831L) >>> 18 & 255L));
         out[37 + outPos] = (byte)((int)((in[6 + inPos] & 35184372088831L) >>> 26 & 255L));
         out[38 + outPos] = (byte)((int)((in[6 + inPos] & 35184372088831L) >>> 34 & 255L));
         out[39 + outPos] = (byte)((int)(((in[6 + inPos] & 35184372088831L) >>> 42 | (in[7 + inPos] & 35184372088831L) << 3) & 255L));
         out[40 + outPos] = (byte)((int)((in[7 + inPos] & 35184372088831L) >>> 5 & 255L));
         out[41 + outPos] = (byte)((int)((in[7 + inPos] & 35184372088831L) >>> 13 & 255L));
         out[42 + outPos] = (byte)((int)((in[7 + inPos] & 35184372088831L) >>> 21 & 255L));
         out[43 + outPos] = (byte)((int)((in[7 + inPos] & 35184372088831L) >>> 29 & 255L));
         out[44 + outPos] = (byte)((int)((in[7 + inPos] & 35184372088831L) >>> 37 & 255L));
         out[45 + outPos] = (byte)((int)(in[8 + inPos] & 35184372088831L & 255L));
         out[46 + outPos] = (byte)((int)((in[8 + inPos] & 35184372088831L) >>> 8 & 255L));
         out[47 + outPos] = (byte)((int)((in[8 + inPos] & 35184372088831L) >>> 16 & 255L));
         out[48 + outPos] = (byte)((int)((in[8 + inPos] & 35184372088831L) >>> 24 & 255L));
         out[49 + outPos] = (byte)((int)((in[8 + inPos] & 35184372088831L) >>> 32 & 255L));
         out[50 + outPos] = (byte)((int)(((in[8 + inPos] & 35184372088831L) >>> 40 | (in[9 + inPos] & 35184372088831L) << 5) & 255L));
         out[51 + outPos] = (byte)((int)((in[9 + inPos] & 35184372088831L) >>> 3 & 255L));
         out[52 + outPos] = (byte)((int)((in[9 + inPos] & 35184372088831L) >>> 11 & 255L));
         out[53 + outPos] = (byte)((int)((in[9 + inPos] & 35184372088831L) >>> 19 & 255L));
         out[54 + outPos] = (byte)((int)((in[9 + inPos] & 35184372088831L) >>> 27 & 255L));
         out[55 + outPos] = (byte)((int)((in[9 + inPos] & 35184372088831L) >>> 35 & 255L));
         out[56 + outPos] = (byte)((int)(((in[9 + inPos] & 35184372088831L) >>> 43 | (in[10 + inPos] & 35184372088831L) << 2) & 255L));
         out[57 + outPos] = (byte)((int)((in[10 + inPos] & 35184372088831L) >>> 6 & 255L));
         out[58 + outPos] = (byte)((int)((in[10 + inPos] & 35184372088831L) >>> 14 & 255L));
         out[59 + outPos] = (byte)((int)((in[10 + inPos] & 35184372088831L) >>> 22 & 255L));
         out[60 + outPos] = (byte)((int)((in[10 + inPos] & 35184372088831L) >>> 30 & 255L));
         out[61 + outPos] = (byte)((int)(((in[10 + inPos] & 35184372088831L) >>> 38 | (in[11 + inPos] & 35184372088831L) << 7) & 255L));
         out[62 + outPos] = (byte)((int)((in[11 + inPos] & 35184372088831L) >>> 1 & 255L));
         out[63 + outPos] = (byte)((int)((in[11 + inPos] & 35184372088831L) >>> 9 & 255L));
         out[64 + outPos] = (byte)((int)((in[11 + inPos] & 35184372088831L) >>> 17 & 255L));
         out[65 + outPos] = (byte)((int)((in[11 + inPos] & 35184372088831L) >>> 25 & 255L));
         out[66 + outPos] = (byte)((int)((in[11 + inPos] & 35184372088831L) >>> 33 & 255L));
         out[67 + outPos] = (byte)((int)(((in[11 + inPos] & 35184372088831L) >>> 41 | (in[12 + inPos] & 35184372088831L) << 4) & 255L));
         out[68 + outPos] = (byte)((int)((in[12 + inPos] & 35184372088831L) >>> 4 & 255L));
         out[69 + outPos] = (byte)((int)((in[12 + inPos] & 35184372088831L) >>> 12 & 255L));
         out[70 + outPos] = (byte)((int)((in[12 + inPos] & 35184372088831L) >>> 20 & 255L));
         out[71 + outPos] = (byte)((int)((in[12 + inPos] & 35184372088831L) >>> 28 & 255L));
         out[72 + outPos] = (byte)((int)((in[12 + inPos] & 35184372088831L) >>> 36 & 255L));
         out[73 + outPos] = (byte)((int)(((in[12 + inPos] & 35184372088831L) >>> 44 | (in[13 + inPos] & 35184372088831L) << 1) & 255L));
         out[74 + outPos] = (byte)((int)((in[13 + inPos] & 35184372088831L) >>> 7 & 255L));
         out[75 + outPos] = (byte)((int)((in[13 + inPos] & 35184372088831L) >>> 15 & 255L));
         out[76 + outPos] = (byte)((int)((in[13 + inPos] & 35184372088831L) >>> 23 & 255L));
         out[77 + outPos] = (byte)((int)((in[13 + inPos] & 35184372088831L) >>> 31 & 255L));
         out[78 + outPos] = (byte)((int)(((in[13 + inPos] & 35184372088831L) >>> 39 | (in[14 + inPos] & 35184372088831L) << 6) & 255L));
         out[79 + outPos] = (byte)((int)((in[14 + inPos] & 35184372088831L) >>> 2 & 255L));
         out[80 + outPos] = (byte)((int)((in[14 + inPos] & 35184372088831L) >>> 10 & 255L));
         out[81 + outPos] = (byte)((int)((in[14 + inPos] & 35184372088831L) >>> 18 & 255L));
         out[82 + outPos] = (byte)((int)((in[14 + inPos] & 35184372088831L) >>> 26 & 255L));
         out[83 + outPos] = (byte)((int)((in[14 + inPos] & 35184372088831L) >>> 34 & 255L));
         out[84 + outPos] = (byte)((int)(((in[14 + inPos] & 35184372088831L) >>> 42 | (in[15 + inPos] & 35184372088831L) << 3) & 255L));
         out[85 + outPos] = (byte)((int)((in[15 + inPos] & 35184372088831L) >>> 5 & 255L));
         out[86 + outPos] = (byte)((int)((in[15 + inPos] & 35184372088831L) >>> 13 & 255L));
         out[87 + outPos] = (byte)((int)((in[15 + inPos] & 35184372088831L) >>> 21 & 255L));
         out[88 + outPos] = (byte)((int)((in[15 + inPos] & 35184372088831L) >>> 29 & 255L));
         out[89 + outPos] = (byte)((int)((in[15 + inPos] & 35184372088831L) >>> 37 & 255L));
         out[90 + outPos] = (byte)((int)(in[16 + inPos] & 35184372088831L & 255L));
         out[91 + outPos] = (byte)((int)((in[16 + inPos] & 35184372088831L) >>> 8 & 255L));
         out[92 + outPos] = (byte)((int)((in[16 + inPos] & 35184372088831L) >>> 16 & 255L));
         out[93 + outPos] = (byte)((int)((in[16 + inPos] & 35184372088831L) >>> 24 & 255L));
         out[94 + outPos] = (byte)((int)((in[16 + inPos] & 35184372088831L) >>> 32 & 255L));
         out[95 + outPos] = (byte)((int)(((in[16 + inPos] & 35184372088831L) >>> 40 | (in[17 + inPos] & 35184372088831L) << 5) & 255L));
         out[96 + outPos] = (byte)((int)((in[17 + inPos] & 35184372088831L) >>> 3 & 255L));
         out[97 + outPos] = (byte)((int)((in[17 + inPos] & 35184372088831L) >>> 11 & 255L));
         out[98 + outPos] = (byte)((int)((in[17 + inPos] & 35184372088831L) >>> 19 & 255L));
         out[99 + outPos] = (byte)((int)((in[17 + inPos] & 35184372088831L) >>> 27 & 255L));
         out[100 + outPos] = (byte)((int)((in[17 + inPos] & 35184372088831L) >>> 35 & 255L));
         out[101 + outPos] = (byte)((int)(((in[17 + inPos] & 35184372088831L) >>> 43 | (in[18 + inPos] & 35184372088831L) << 2) & 255L));
         out[102 + outPos] = (byte)((int)((in[18 + inPos] & 35184372088831L) >>> 6 & 255L));
         out[103 + outPos] = (byte)((int)((in[18 + inPos] & 35184372088831L) >>> 14 & 255L));
         out[104 + outPos] = (byte)((int)((in[18 + inPos] & 35184372088831L) >>> 22 & 255L));
         out[105 + outPos] = (byte)((int)((in[18 + inPos] & 35184372088831L) >>> 30 & 255L));
         out[106 + outPos] = (byte)((int)(((in[18 + inPos] & 35184372088831L) >>> 38 | (in[19 + inPos] & 35184372088831L) << 7) & 255L));
         out[107 + outPos] = (byte)((int)((in[19 + inPos] & 35184372088831L) >>> 1 & 255L));
         out[108 + outPos] = (byte)((int)((in[19 + inPos] & 35184372088831L) >>> 9 & 255L));
         out[109 + outPos] = (byte)((int)((in[19 + inPos] & 35184372088831L) >>> 17 & 255L));
         out[110 + outPos] = (byte)((int)((in[19 + inPos] & 35184372088831L) >>> 25 & 255L));
         out[111 + outPos] = (byte)((int)((in[19 + inPos] & 35184372088831L) >>> 33 & 255L));
         out[112 + outPos] = (byte)((int)(((in[19 + inPos] & 35184372088831L) >>> 41 | (in[20 + inPos] & 35184372088831L) << 4) & 255L));
         out[113 + outPos] = (byte)((int)((in[20 + inPos] & 35184372088831L) >>> 4 & 255L));
         out[114 + outPos] = (byte)((int)((in[20 + inPos] & 35184372088831L) >>> 12 & 255L));
         out[115 + outPos] = (byte)((int)((in[20 + inPos] & 35184372088831L) >>> 20 & 255L));
         out[116 + outPos] = (byte)((int)((in[20 + inPos] & 35184372088831L) >>> 28 & 255L));
         out[117 + outPos] = (byte)((int)((in[20 + inPos] & 35184372088831L) >>> 36 & 255L));
         out[118 + outPos] = (byte)((int)(((in[20 + inPos] & 35184372088831L) >>> 44 | (in[21 + inPos] & 35184372088831L) << 1) & 255L));
         out[119 + outPos] = (byte)((int)((in[21 + inPos] & 35184372088831L) >>> 7 & 255L));
         out[120 + outPos] = (byte)((int)((in[21 + inPos] & 35184372088831L) >>> 15 & 255L));
         out[121 + outPos] = (byte)((int)((in[21 + inPos] & 35184372088831L) >>> 23 & 255L));
         out[122 + outPos] = (byte)((int)((in[21 + inPos] & 35184372088831L) >>> 31 & 255L));
         out[123 + outPos] = (byte)((int)(((in[21 + inPos] & 35184372088831L) >>> 39 | (in[22 + inPos] & 35184372088831L) << 6) & 255L));
         out[124 + outPos] = (byte)((int)((in[22 + inPos] & 35184372088831L) >>> 2 & 255L));
         out[125 + outPos] = (byte)((int)((in[22 + inPos] & 35184372088831L) >>> 10 & 255L));
         out[126 + outPos] = (byte)((int)((in[22 + inPos] & 35184372088831L) >>> 18 & 255L));
         out[127 + outPos] = (byte)((int)((in[22 + inPos] & 35184372088831L) >>> 26 & 255L));
         out[128 + outPos] = (byte)((int)((in[22 + inPos] & 35184372088831L) >>> 34 & 255L));
         out[129 + outPos] = (byte)((int)(((in[22 + inPos] & 35184372088831L) >>> 42 | (in[23 + inPos] & 35184372088831L) << 3) & 255L));
         out[130 + outPos] = (byte)((int)((in[23 + inPos] & 35184372088831L) >>> 5 & 255L));
         out[131 + outPos] = (byte)((int)((in[23 + inPos] & 35184372088831L) >>> 13 & 255L));
         out[132 + outPos] = (byte)((int)((in[23 + inPos] & 35184372088831L) >>> 21 & 255L));
         out[133 + outPos] = (byte)((int)((in[23 + inPos] & 35184372088831L) >>> 29 & 255L));
         out[134 + outPos] = (byte)((int)((in[23 + inPos] & 35184372088831L) >>> 37 & 255L));
         out[135 + outPos] = (byte)((int)(in[24 + inPos] & 35184372088831L & 255L));
         out[136 + outPos] = (byte)((int)((in[24 + inPos] & 35184372088831L) >>> 8 & 255L));
         out[137 + outPos] = (byte)((int)((in[24 + inPos] & 35184372088831L) >>> 16 & 255L));
         out[138 + outPos] = (byte)((int)((in[24 + inPos] & 35184372088831L) >>> 24 & 255L));
         out[139 + outPos] = (byte)((int)((in[24 + inPos] & 35184372088831L) >>> 32 & 255L));
         out[140 + outPos] = (byte)((int)(((in[24 + inPos] & 35184372088831L) >>> 40 | (in[25 + inPos] & 35184372088831L) << 5) & 255L));
         out[141 + outPos] = (byte)((int)((in[25 + inPos] & 35184372088831L) >>> 3 & 255L));
         out[142 + outPos] = (byte)((int)((in[25 + inPos] & 35184372088831L) >>> 11 & 255L));
         out[143 + outPos] = (byte)((int)((in[25 + inPos] & 35184372088831L) >>> 19 & 255L));
         out[144 + outPos] = (byte)((int)((in[25 + inPos] & 35184372088831L) >>> 27 & 255L));
         out[145 + outPos] = (byte)((int)((in[25 + inPos] & 35184372088831L) >>> 35 & 255L));
         out[146 + outPos] = (byte)((int)(((in[25 + inPos] & 35184372088831L) >>> 43 | (in[26 + inPos] & 35184372088831L) << 2) & 255L));
         out[147 + outPos] = (byte)((int)((in[26 + inPos] & 35184372088831L) >>> 6 & 255L));
         out[148 + outPos] = (byte)((int)((in[26 + inPos] & 35184372088831L) >>> 14 & 255L));
         out[149 + outPos] = (byte)((int)((in[26 + inPos] & 35184372088831L) >>> 22 & 255L));
         out[150 + outPos] = (byte)((int)((in[26 + inPos] & 35184372088831L) >>> 30 & 255L));
         out[151 + outPos] = (byte)((int)(((in[26 + inPos] & 35184372088831L) >>> 38 | (in[27 + inPos] & 35184372088831L) << 7) & 255L));
         out[152 + outPos] = (byte)((int)((in[27 + inPos] & 35184372088831L) >>> 1 & 255L));
         out[153 + outPos] = (byte)((int)((in[27 + inPos] & 35184372088831L) >>> 9 & 255L));
         out[154 + outPos] = (byte)((int)((in[27 + inPos] & 35184372088831L) >>> 17 & 255L));
         out[155 + outPos] = (byte)((int)((in[27 + inPos] & 35184372088831L) >>> 25 & 255L));
         out[156 + outPos] = (byte)((int)((in[27 + inPos] & 35184372088831L) >>> 33 & 255L));
         out[157 + outPos] = (byte)((int)(((in[27 + inPos] & 35184372088831L) >>> 41 | (in[28 + inPos] & 35184372088831L) << 4) & 255L));
         out[158 + outPos] = (byte)((int)((in[28 + inPos] & 35184372088831L) >>> 4 & 255L));
         out[159 + outPos] = (byte)((int)((in[28 + inPos] & 35184372088831L) >>> 12 & 255L));
         out[160 + outPos] = (byte)((int)((in[28 + inPos] & 35184372088831L) >>> 20 & 255L));
         out[161 + outPos] = (byte)((int)((in[28 + inPos] & 35184372088831L) >>> 28 & 255L));
         out[162 + outPos] = (byte)((int)((in[28 + inPos] & 35184372088831L) >>> 36 & 255L));
         out[163 + outPos] = (byte)((int)(((in[28 + inPos] & 35184372088831L) >>> 44 | (in[29 + inPos] & 35184372088831L) << 1) & 255L));
         out[164 + outPos] = (byte)((int)((in[29 + inPos] & 35184372088831L) >>> 7 & 255L));
         out[165 + outPos] = (byte)((int)((in[29 + inPos] & 35184372088831L) >>> 15 & 255L));
         out[166 + outPos] = (byte)((int)((in[29 + inPos] & 35184372088831L) >>> 23 & 255L));
         out[167 + outPos] = (byte)((int)((in[29 + inPos] & 35184372088831L) >>> 31 & 255L));
         out[168 + outPos] = (byte)((int)(((in[29 + inPos] & 35184372088831L) >>> 39 | (in[30 + inPos] & 35184372088831L) << 6) & 255L));
         out[169 + outPos] = (byte)((int)((in[30 + inPos] & 35184372088831L) >>> 2 & 255L));
         out[170 + outPos] = (byte)((int)((in[30 + inPos] & 35184372088831L) >>> 10 & 255L));
         out[171 + outPos] = (byte)((int)((in[30 + inPos] & 35184372088831L) >>> 18 & 255L));
         out[172 + outPos] = (byte)((int)((in[30 + inPos] & 35184372088831L) >>> 26 & 255L));
         out[173 + outPos] = (byte)((int)((in[30 + inPos] & 35184372088831L) >>> 34 & 255L));
         out[174 + outPos] = (byte)((int)(((in[30 + inPos] & 35184372088831L) >>> 42 | (in[31 + inPos] & 35184372088831L) << 3) & 255L));
         out[175 + outPos] = (byte)((int)((in[31 + inPos] & 35184372088831L) >>> 5 & 255L));
         out[176 + outPos] = (byte)((int)((in[31 + inPos] & 35184372088831L) >>> 13 & 255L));
         out[177 + outPos] = (byte)((int)((in[31 + inPos] & 35184372088831L) >>> 21 & 255L));
         out[178 + outPos] = (byte)((int)((in[31 + inPos] & 35184372088831L) >>> 29 & 255L));
         out[179 + outPos] = (byte)((int)((in[31 + inPos] & 35184372088831L) >>> 37 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 35184372088831L;
         out[1 + outPos] = (long)in[5 + inPos] >> 5 & 7L | (long)in[6 + inPos] << 3 & 2047L | (long)in[7 + inPos] << 11 & 524287L | (long)in[8 + inPos] << 19 & 134217727L | (long)in[9 + inPos] << 27 & 34359738367L | (long)in[10 + inPos] << 35 & 8796093022207L | (long)in[11 + inPos] << 43 & 35184372088831L;
         out[2 + outPos] = (long)in[11 + inPos] >> 2 & 63L | (long)in[12 + inPos] << 6 & 16383L | (long)in[13 + inPos] << 14 & 4194303L | (long)in[14 + inPos] << 22 & 1073741823L | (long)in[15 + inPos] << 30 & 274877906943L | (long)in[16 + inPos] << 38 & 35184372088831L;
         out[3 + outPos] = (long)in[16 + inPos] >> 7 & 1L | (long)in[17 + inPos] << 1 & 511L | (long)in[18 + inPos] << 9 & 131071L | (long)in[19 + inPos] << 17 & 33554431L | (long)in[20 + inPos] << 25 & 8589934591L | (long)in[21 + inPos] << 33 & 2199023255551L | (long)in[22 + inPos] << 41 & 35184372088831L;
         out[4 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 4095L | (long)in[24 + inPos] << 12 & 1048575L | (long)in[25 + inPos] << 20 & 268435455L | (long)in[26 + inPos] << 28 & 68719476735L | (long)in[27 + inPos] << 36 & 17592186044415L | (long)in[28 + inPos] << 44 & 35184372088831L;
         out[5 + outPos] = (long)in[28 + inPos] >> 1 & 127L | (long)in[29 + inPos] << 7 & 32767L | (long)in[30 + inPos] << 15 & 8388607L | (long)in[31 + inPos] << 23 & 2147483647L | (long)in[32 + inPos] << 31 & 549755813887L | (long)in[33 + inPos] << 39 & 35184372088831L;
         out[6 + outPos] = (long)in[33 + inPos] >> 6 & 3L | (long)in[34 + inPos] << 2 & 1023L | (long)in[35 + inPos] << 10 & 262143L | (long)in[36 + inPos] << 18 & 67108863L | (long)in[37 + inPos] << 26 & 17179869183L | (long)in[38 + inPos] << 34 & 4398046511103L | (long)in[39 + inPos] << 42 & 35184372088831L;
         out[7 + outPos] = (long)in[39 + inPos] >> 3 & 31L | (long)in[40 + inPos] << 5 & 8191L | (long)in[41 + inPos] << 13 & 2097151L | (long)in[42 + inPos] << 21 & 536870911L | (long)in[43 + inPos] << 29 & 137438953471L | (long)in[44 + inPos] << 37 & 35184372088831L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 35184372088831L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 5 & 7L | (long)in.get(6 + inPos) << 3 & 2047L | (long)in.get(7 + inPos) << 11 & 524287L | (long)in.get(8 + inPos) << 19 & 134217727L | (long)in.get(9 + inPos) << 27 & 34359738367L | (long)in.get(10 + inPos) << 35 & 8796093022207L | (long)in.get(11 + inPos) << 43 & 35184372088831L;
         out[2 + outPos] = (long)in.get(11 + inPos) >> 2 & 63L | (long)in.get(12 + inPos) << 6 & 16383L | (long)in.get(13 + inPos) << 14 & 4194303L | (long)in.get(14 + inPos) << 22 & 1073741823L | (long)in.get(15 + inPos) << 30 & 274877906943L | (long)in.get(16 + inPos) << 38 & 35184372088831L;
         out[3 + outPos] = (long)in.get(16 + inPos) >> 7 & 1L | (long)in.get(17 + inPos) << 1 & 511L | (long)in.get(18 + inPos) << 9 & 131071L | (long)in.get(19 + inPos) << 17 & 33554431L | (long)in.get(20 + inPos) << 25 & 8589934591L | (long)in.get(21 + inPos) << 33 & 2199023255551L | (long)in.get(22 + inPos) << 41 & 35184372088831L;
         out[4 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 4095L | (long)in.get(24 + inPos) << 12 & 1048575L | (long)in.get(25 + inPos) << 20 & 268435455L | (long)in.get(26 + inPos) << 28 & 68719476735L | (long)in.get(27 + inPos) << 36 & 17592186044415L | (long)in.get(28 + inPos) << 44 & 35184372088831L;
         out[5 + outPos] = (long)in.get(28 + inPos) >> 1 & 127L | (long)in.get(29 + inPos) << 7 & 32767L | (long)in.get(30 + inPos) << 15 & 8388607L | (long)in.get(31 + inPos) << 23 & 2147483647L | (long)in.get(32 + inPos) << 31 & 549755813887L | (long)in.get(33 + inPos) << 39 & 35184372088831L;
         out[6 + outPos] = (long)in.get(33 + inPos) >> 6 & 3L | (long)in.get(34 + inPos) << 2 & 1023L | (long)in.get(35 + inPos) << 10 & 262143L | (long)in.get(36 + inPos) << 18 & 67108863L | (long)in.get(37 + inPos) << 26 & 17179869183L | (long)in.get(38 + inPos) << 34 & 4398046511103L | (long)in.get(39 + inPos) << 42 & 35184372088831L;
         out[7 + outPos] = (long)in.get(39 + inPos) >> 3 & 31L | (long)in.get(40 + inPos) << 5 & 8191L | (long)in.get(41 + inPos) << 13 & 2097151L | (long)in.get(42 + inPos) << 21 & 536870911L | (long)in.get(43 + inPos) << 29 & 137438953471L | (long)in.get(44 + inPos) << 37 & 35184372088831L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 35184372088831L;
         out[1 + outPos] = (long)in[5 + inPos] >> 5 & 7L | (long)in[6 + inPos] << 3 & 2047L | (long)in[7 + inPos] << 11 & 524287L | (long)in[8 + inPos] << 19 & 134217727L | (long)in[9 + inPos] << 27 & 34359738367L | (long)in[10 + inPos] << 35 & 8796093022207L | (long)in[11 + inPos] << 43 & 35184372088831L;
         out[2 + outPos] = (long)in[11 + inPos] >> 2 & 63L | (long)in[12 + inPos] << 6 & 16383L | (long)in[13 + inPos] << 14 & 4194303L | (long)in[14 + inPos] << 22 & 1073741823L | (long)in[15 + inPos] << 30 & 274877906943L | (long)in[16 + inPos] << 38 & 35184372088831L;
         out[3 + outPos] = (long)in[16 + inPos] >> 7 & 1L | (long)in[17 + inPos] << 1 & 511L | (long)in[18 + inPos] << 9 & 131071L | (long)in[19 + inPos] << 17 & 33554431L | (long)in[20 + inPos] << 25 & 8589934591L | (long)in[21 + inPos] << 33 & 2199023255551L | (long)in[22 + inPos] << 41 & 35184372088831L;
         out[4 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 4095L | (long)in[24 + inPos] << 12 & 1048575L | (long)in[25 + inPos] << 20 & 268435455L | (long)in[26 + inPos] << 28 & 68719476735L | (long)in[27 + inPos] << 36 & 17592186044415L | (long)in[28 + inPos] << 44 & 35184372088831L;
         out[5 + outPos] = (long)in[28 + inPos] >> 1 & 127L | (long)in[29 + inPos] << 7 & 32767L | (long)in[30 + inPos] << 15 & 8388607L | (long)in[31 + inPos] << 23 & 2147483647L | (long)in[32 + inPos] << 31 & 549755813887L | (long)in[33 + inPos] << 39 & 35184372088831L;
         out[6 + outPos] = (long)in[33 + inPos] >> 6 & 3L | (long)in[34 + inPos] << 2 & 1023L | (long)in[35 + inPos] << 10 & 262143L | (long)in[36 + inPos] << 18 & 67108863L | (long)in[37 + inPos] << 26 & 17179869183L | (long)in[38 + inPos] << 34 & 4398046511103L | (long)in[39 + inPos] << 42 & 35184372088831L;
         out[7 + outPos] = (long)in[39 + inPos] >> 3 & 31L | (long)in[40 + inPos] << 5 & 8191L | (long)in[41 + inPos] << 13 & 2097151L | (long)in[42 + inPos] << 21 & 536870911L | (long)in[43 + inPos] << 29 & 137438953471L | (long)in[44 + inPos] << 37 & 35184372088831L;
         out[8 + outPos] = (long)in[45 + inPos] & 255L | (long)in[46 + inPos] << 8 & 65535L | (long)in[47 + inPos] << 16 & 16777215L | (long)in[48 + inPos] << 24 & 4294967295L | (long)in[49 + inPos] << 32 & 1099511627775L | (long)in[50 + inPos] << 40 & 35184372088831L;
         out[9 + outPos] = (long)in[50 + inPos] >> 5 & 7L | (long)in[51 + inPos] << 3 & 2047L | (long)in[52 + inPos] << 11 & 524287L | (long)in[53 + inPos] << 19 & 134217727L | (long)in[54 + inPos] << 27 & 34359738367L | (long)in[55 + inPos] << 35 & 8796093022207L | (long)in[56 + inPos] << 43 & 35184372088831L;
         out[10 + outPos] = (long)in[56 + inPos] >> 2 & 63L | (long)in[57 + inPos] << 6 & 16383L | (long)in[58 + inPos] << 14 & 4194303L | (long)in[59 + inPos] << 22 & 1073741823L | (long)in[60 + inPos] << 30 & 274877906943L | (long)in[61 + inPos] << 38 & 35184372088831L;
         out[11 + outPos] = (long)in[61 + inPos] >> 7 & 1L | (long)in[62 + inPos] << 1 & 511L | (long)in[63 + inPos] << 9 & 131071L | (long)in[64 + inPos] << 17 & 33554431L | (long)in[65 + inPos] << 25 & 8589934591L | (long)in[66 + inPos] << 33 & 2199023255551L | (long)in[67 + inPos] << 41 & 35184372088831L;
         out[12 + outPos] = (long)in[67 + inPos] >> 4 & 15L | (long)in[68 + inPos] << 4 & 4095L | (long)in[69 + inPos] << 12 & 1048575L | (long)in[70 + inPos] << 20 & 268435455L | (long)in[71 + inPos] << 28 & 68719476735L | (long)in[72 + inPos] << 36 & 17592186044415L | (long)in[73 + inPos] << 44 & 35184372088831L;
         out[13 + outPos] = (long)in[73 + inPos] >> 1 & 127L | (long)in[74 + inPos] << 7 & 32767L | (long)in[75 + inPos] << 15 & 8388607L | (long)in[76 + inPos] << 23 & 2147483647L | (long)in[77 + inPos] << 31 & 549755813887L | (long)in[78 + inPos] << 39 & 35184372088831L;
         out[14 + outPos] = (long)in[78 + inPos] >> 6 & 3L | (long)in[79 + inPos] << 2 & 1023L | (long)in[80 + inPos] << 10 & 262143L | (long)in[81 + inPos] << 18 & 67108863L | (long)in[82 + inPos] << 26 & 17179869183L | (long)in[83 + inPos] << 34 & 4398046511103L | (long)in[84 + inPos] << 42 & 35184372088831L;
         out[15 + outPos] = (long)in[84 + inPos] >> 3 & 31L | (long)in[85 + inPos] << 5 & 8191L | (long)in[86 + inPos] << 13 & 2097151L | (long)in[87 + inPos] << 21 & 536870911L | (long)in[88 + inPos] << 29 & 137438953471L | (long)in[89 + inPos] << 37 & 35184372088831L;
         out[16 + outPos] = (long)in[90 + inPos] & 255L | (long)in[91 + inPos] << 8 & 65535L | (long)in[92 + inPos] << 16 & 16777215L | (long)in[93 + inPos] << 24 & 4294967295L | (long)in[94 + inPos] << 32 & 1099511627775L | (long)in[95 + inPos] << 40 & 35184372088831L;
         out[17 + outPos] = (long)in[95 + inPos] >> 5 & 7L | (long)in[96 + inPos] << 3 & 2047L | (long)in[97 + inPos] << 11 & 524287L | (long)in[98 + inPos] << 19 & 134217727L | (long)in[99 + inPos] << 27 & 34359738367L | (long)in[100 + inPos] << 35 & 8796093022207L | (long)in[101 + inPos] << 43 & 35184372088831L;
         out[18 + outPos] = (long)in[101 + inPos] >> 2 & 63L | (long)in[102 + inPos] << 6 & 16383L | (long)in[103 + inPos] << 14 & 4194303L | (long)in[104 + inPos] << 22 & 1073741823L | (long)in[105 + inPos] << 30 & 274877906943L | (long)in[106 + inPos] << 38 & 35184372088831L;
         out[19 + outPos] = (long)in[106 + inPos] >> 7 & 1L | (long)in[107 + inPos] << 1 & 511L | (long)in[108 + inPos] << 9 & 131071L | (long)in[109 + inPos] << 17 & 33554431L | (long)in[110 + inPos] << 25 & 8589934591L | (long)in[111 + inPos] << 33 & 2199023255551L | (long)in[112 + inPos] << 41 & 35184372088831L;
         out[20 + outPos] = (long)in[112 + inPos] >> 4 & 15L | (long)in[113 + inPos] << 4 & 4095L | (long)in[114 + inPos] << 12 & 1048575L | (long)in[115 + inPos] << 20 & 268435455L | (long)in[116 + inPos] << 28 & 68719476735L | (long)in[117 + inPos] << 36 & 17592186044415L | (long)in[118 + inPos] << 44 & 35184372088831L;
         out[21 + outPos] = (long)in[118 + inPos] >> 1 & 127L | (long)in[119 + inPos] << 7 & 32767L | (long)in[120 + inPos] << 15 & 8388607L | (long)in[121 + inPos] << 23 & 2147483647L | (long)in[122 + inPos] << 31 & 549755813887L | (long)in[123 + inPos] << 39 & 35184372088831L;
         out[22 + outPos] = (long)in[123 + inPos] >> 6 & 3L | (long)in[124 + inPos] << 2 & 1023L | (long)in[125 + inPos] << 10 & 262143L | (long)in[126 + inPos] << 18 & 67108863L | (long)in[127 + inPos] << 26 & 17179869183L | (long)in[128 + inPos] << 34 & 4398046511103L | (long)in[129 + inPos] << 42 & 35184372088831L;
         out[23 + outPos] = (long)in[129 + inPos] >> 3 & 31L | (long)in[130 + inPos] << 5 & 8191L | (long)in[131 + inPos] << 13 & 2097151L | (long)in[132 + inPos] << 21 & 536870911L | (long)in[133 + inPos] << 29 & 137438953471L | (long)in[134 + inPos] << 37 & 35184372088831L;
         out[24 + outPos] = (long)in[135 + inPos] & 255L | (long)in[136 + inPos] << 8 & 65535L | (long)in[137 + inPos] << 16 & 16777215L | (long)in[138 + inPos] << 24 & 4294967295L | (long)in[139 + inPos] << 32 & 1099511627775L | (long)in[140 + inPos] << 40 & 35184372088831L;
         out[25 + outPos] = (long)in[140 + inPos] >> 5 & 7L | (long)in[141 + inPos] << 3 & 2047L | (long)in[142 + inPos] << 11 & 524287L | (long)in[143 + inPos] << 19 & 134217727L | (long)in[144 + inPos] << 27 & 34359738367L | (long)in[145 + inPos] << 35 & 8796093022207L | (long)in[146 + inPos] << 43 & 35184372088831L;
         out[26 + outPos] = (long)in[146 + inPos] >> 2 & 63L | (long)in[147 + inPos] << 6 & 16383L | (long)in[148 + inPos] << 14 & 4194303L | (long)in[149 + inPos] << 22 & 1073741823L | (long)in[150 + inPos] << 30 & 274877906943L | (long)in[151 + inPos] << 38 & 35184372088831L;
         out[27 + outPos] = (long)in[151 + inPos] >> 7 & 1L | (long)in[152 + inPos] << 1 & 511L | (long)in[153 + inPos] << 9 & 131071L | (long)in[154 + inPos] << 17 & 33554431L | (long)in[155 + inPos] << 25 & 8589934591L | (long)in[156 + inPos] << 33 & 2199023255551L | (long)in[157 + inPos] << 41 & 35184372088831L;
         out[28 + outPos] = (long)in[157 + inPos] >> 4 & 15L | (long)in[158 + inPos] << 4 & 4095L | (long)in[159 + inPos] << 12 & 1048575L | (long)in[160 + inPos] << 20 & 268435455L | (long)in[161 + inPos] << 28 & 68719476735L | (long)in[162 + inPos] << 36 & 17592186044415L | (long)in[163 + inPos] << 44 & 35184372088831L;
         out[29 + outPos] = (long)in[163 + inPos] >> 1 & 127L | (long)in[164 + inPos] << 7 & 32767L | (long)in[165 + inPos] << 15 & 8388607L | (long)in[166 + inPos] << 23 & 2147483647L | (long)in[167 + inPos] << 31 & 549755813887L | (long)in[168 + inPos] << 39 & 35184372088831L;
         out[30 + outPos] = (long)in[168 + inPos] >> 6 & 3L | (long)in[169 + inPos] << 2 & 1023L | (long)in[170 + inPos] << 10 & 262143L | (long)in[171 + inPos] << 18 & 67108863L | (long)in[172 + inPos] << 26 & 17179869183L | (long)in[173 + inPos] << 34 & 4398046511103L | (long)in[174 + inPos] << 42 & 35184372088831L;
         out[31 + outPos] = (long)in[174 + inPos] >> 3 & 31L | (long)in[175 + inPos] << 5 & 8191L | (long)in[176 + inPos] << 13 & 2097151L | (long)in[177 + inPos] << 21 & 536870911L | (long)in[178 + inPos] << 29 & 137438953471L | (long)in[179 + inPos] << 37 & 35184372088831L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 35184372088831L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 5 & 7L | (long)in.get(6 + inPos) << 3 & 2047L | (long)in.get(7 + inPos) << 11 & 524287L | (long)in.get(8 + inPos) << 19 & 134217727L | (long)in.get(9 + inPos) << 27 & 34359738367L | (long)in.get(10 + inPos) << 35 & 8796093022207L | (long)in.get(11 + inPos) << 43 & 35184372088831L;
         out[2 + outPos] = (long)in.get(11 + inPos) >> 2 & 63L | (long)in.get(12 + inPos) << 6 & 16383L | (long)in.get(13 + inPos) << 14 & 4194303L | (long)in.get(14 + inPos) << 22 & 1073741823L | (long)in.get(15 + inPos) << 30 & 274877906943L | (long)in.get(16 + inPos) << 38 & 35184372088831L;
         out[3 + outPos] = (long)in.get(16 + inPos) >> 7 & 1L | (long)in.get(17 + inPos) << 1 & 511L | (long)in.get(18 + inPos) << 9 & 131071L | (long)in.get(19 + inPos) << 17 & 33554431L | (long)in.get(20 + inPos) << 25 & 8589934591L | (long)in.get(21 + inPos) << 33 & 2199023255551L | (long)in.get(22 + inPos) << 41 & 35184372088831L;
         out[4 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 4095L | (long)in.get(24 + inPos) << 12 & 1048575L | (long)in.get(25 + inPos) << 20 & 268435455L | (long)in.get(26 + inPos) << 28 & 68719476735L | (long)in.get(27 + inPos) << 36 & 17592186044415L | (long)in.get(28 + inPos) << 44 & 35184372088831L;
         out[5 + outPos] = (long)in.get(28 + inPos) >> 1 & 127L | (long)in.get(29 + inPos) << 7 & 32767L | (long)in.get(30 + inPos) << 15 & 8388607L | (long)in.get(31 + inPos) << 23 & 2147483647L | (long)in.get(32 + inPos) << 31 & 549755813887L | (long)in.get(33 + inPos) << 39 & 35184372088831L;
         out[6 + outPos] = (long)in.get(33 + inPos) >> 6 & 3L | (long)in.get(34 + inPos) << 2 & 1023L | (long)in.get(35 + inPos) << 10 & 262143L | (long)in.get(36 + inPos) << 18 & 67108863L | (long)in.get(37 + inPos) << 26 & 17179869183L | (long)in.get(38 + inPos) << 34 & 4398046511103L | (long)in.get(39 + inPos) << 42 & 35184372088831L;
         out[7 + outPos] = (long)in.get(39 + inPos) >> 3 & 31L | (long)in.get(40 + inPos) << 5 & 8191L | (long)in.get(41 + inPos) << 13 & 2097151L | (long)in.get(42 + inPos) << 21 & 536870911L | (long)in.get(43 + inPos) << 29 & 137438953471L | (long)in.get(44 + inPos) << 37 & 35184372088831L;
         out[8 + outPos] = (long)in.get(45 + inPos) & 255L | (long)in.get(46 + inPos) << 8 & 65535L | (long)in.get(47 + inPos) << 16 & 16777215L | (long)in.get(48 + inPos) << 24 & 4294967295L | (long)in.get(49 + inPos) << 32 & 1099511627775L | (long)in.get(50 + inPos) << 40 & 35184372088831L;
         out[9 + outPos] = (long)in.get(50 + inPos) >> 5 & 7L | (long)in.get(51 + inPos) << 3 & 2047L | (long)in.get(52 + inPos) << 11 & 524287L | (long)in.get(53 + inPos) << 19 & 134217727L | (long)in.get(54 + inPos) << 27 & 34359738367L | (long)in.get(55 + inPos) << 35 & 8796093022207L | (long)in.get(56 + inPos) << 43 & 35184372088831L;
         out[10 + outPos] = (long)in.get(56 + inPos) >> 2 & 63L | (long)in.get(57 + inPos) << 6 & 16383L | (long)in.get(58 + inPos) << 14 & 4194303L | (long)in.get(59 + inPos) << 22 & 1073741823L | (long)in.get(60 + inPos) << 30 & 274877906943L | (long)in.get(61 + inPos) << 38 & 35184372088831L;
         out[11 + outPos] = (long)in.get(61 + inPos) >> 7 & 1L | (long)in.get(62 + inPos) << 1 & 511L | (long)in.get(63 + inPos) << 9 & 131071L | (long)in.get(64 + inPos) << 17 & 33554431L | (long)in.get(65 + inPos) << 25 & 8589934591L | (long)in.get(66 + inPos) << 33 & 2199023255551L | (long)in.get(67 + inPos) << 41 & 35184372088831L;
         out[12 + outPos] = (long)in.get(67 + inPos) >> 4 & 15L | (long)in.get(68 + inPos) << 4 & 4095L | (long)in.get(69 + inPos) << 12 & 1048575L | (long)in.get(70 + inPos) << 20 & 268435455L | (long)in.get(71 + inPos) << 28 & 68719476735L | (long)in.get(72 + inPos) << 36 & 17592186044415L | (long)in.get(73 + inPos) << 44 & 35184372088831L;
         out[13 + outPos] = (long)in.get(73 + inPos) >> 1 & 127L | (long)in.get(74 + inPos) << 7 & 32767L | (long)in.get(75 + inPos) << 15 & 8388607L | (long)in.get(76 + inPos) << 23 & 2147483647L | (long)in.get(77 + inPos) << 31 & 549755813887L | (long)in.get(78 + inPos) << 39 & 35184372088831L;
         out[14 + outPos] = (long)in.get(78 + inPos) >> 6 & 3L | (long)in.get(79 + inPos) << 2 & 1023L | (long)in.get(80 + inPos) << 10 & 262143L | (long)in.get(81 + inPos) << 18 & 67108863L | (long)in.get(82 + inPos) << 26 & 17179869183L | (long)in.get(83 + inPos) << 34 & 4398046511103L | (long)in.get(84 + inPos) << 42 & 35184372088831L;
         out[15 + outPos] = (long)in.get(84 + inPos) >> 3 & 31L | (long)in.get(85 + inPos) << 5 & 8191L | (long)in.get(86 + inPos) << 13 & 2097151L | (long)in.get(87 + inPos) << 21 & 536870911L | (long)in.get(88 + inPos) << 29 & 137438953471L | (long)in.get(89 + inPos) << 37 & 35184372088831L;
         out[16 + outPos] = (long)in.get(90 + inPos) & 255L | (long)in.get(91 + inPos) << 8 & 65535L | (long)in.get(92 + inPos) << 16 & 16777215L | (long)in.get(93 + inPos) << 24 & 4294967295L | (long)in.get(94 + inPos) << 32 & 1099511627775L | (long)in.get(95 + inPos) << 40 & 35184372088831L;
         out[17 + outPos] = (long)in.get(95 + inPos) >> 5 & 7L | (long)in.get(96 + inPos) << 3 & 2047L | (long)in.get(97 + inPos) << 11 & 524287L | (long)in.get(98 + inPos) << 19 & 134217727L | (long)in.get(99 + inPos) << 27 & 34359738367L | (long)in.get(100 + inPos) << 35 & 8796093022207L | (long)in.get(101 + inPos) << 43 & 35184372088831L;
         out[18 + outPos] = (long)in.get(101 + inPos) >> 2 & 63L | (long)in.get(102 + inPos) << 6 & 16383L | (long)in.get(103 + inPos) << 14 & 4194303L | (long)in.get(104 + inPos) << 22 & 1073741823L | (long)in.get(105 + inPos) << 30 & 274877906943L | (long)in.get(106 + inPos) << 38 & 35184372088831L;
         out[19 + outPos] = (long)in.get(106 + inPos) >> 7 & 1L | (long)in.get(107 + inPos) << 1 & 511L | (long)in.get(108 + inPos) << 9 & 131071L | (long)in.get(109 + inPos) << 17 & 33554431L | (long)in.get(110 + inPos) << 25 & 8589934591L | (long)in.get(111 + inPos) << 33 & 2199023255551L | (long)in.get(112 + inPos) << 41 & 35184372088831L;
         out[20 + outPos] = (long)in.get(112 + inPos) >> 4 & 15L | (long)in.get(113 + inPos) << 4 & 4095L | (long)in.get(114 + inPos) << 12 & 1048575L | (long)in.get(115 + inPos) << 20 & 268435455L | (long)in.get(116 + inPos) << 28 & 68719476735L | (long)in.get(117 + inPos) << 36 & 17592186044415L | (long)in.get(118 + inPos) << 44 & 35184372088831L;
         out[21 + outPos] = (long)in.get(118 + inPos) >> 1 & 127L | (long)in.get(119 + inPos) << 7 & 32767L | (long)in.get(120 + inPos) << 15 & 8388607L | (long)in.get(121 + inPos) << 23 & 2147483647L | (long)in.get(122 + inPos) << 31 & 549755813887L | (long)in.get(123 + inPos) << 39 & 35184372088831L;
         out[22 + outPos] = (long)in.get(123 + inPos) >> 6 & 3L | (long)in.get(124 + inPos) << 2 & 1023L | (long)in.get(125 + inPos) << 10 & 262143L | (long)in.get(126 + inPos) << 18 & 67108863L | (long)in.get(127 + inPos) << 26 & 17179869183L | (long)in.get(128 + inPos) << 34 & 4398046511103L | (long)in.get(129 + inPos) << 42 & 35184372088831L;
         out[23 + outPos] = (long)in.get(129 + inPos) >> 3 & 31L | (long)in.get(130 + inPos) << 5 & 8191L | (long)in.get(131 + inPos) << 13 & 2097151L | (long)in.get(132 + inPos) << 21 & 536870911L | (long)in.get(133 + inPos) << 29 & 137438953471L | (long)in.get(134 + inPos) << 37 & 35184372088831L;
         out[24 + outPos] = (long)in.get(135 + inPos) & 255L | (long)in.get(136 + inPos) << 8 & 65535L | (long)in.get(137 + inPos) << 16 & 16777215L | (long)in.get(138 + inPos) << 24 & 4294967295L | (long)in.get(139 + inPos) << 32 & 1099511627775L | (long)in.get(140 + inPos) << 40 & 35184372088831L;
         out[25 + outPos] = (long)in.get(140 + inPos) >> 5 & 7L | (long)in.get(141 + inPos) << 3 & 2047L | (long)in.get(142 + inPos) << 11 & 524287L | (long)in.get(143 + inPos) << 19 & 134217727L | (long)in.get(144 + inPos) << 27 & 34359738367L | (long)in.get(145 + inPos) << 35 & 8796093022207L | (long)in.get(146 + inPos) << 43 & 35184372088831L;
         out[26 + outPos] = (long)in.get(146 + inPos) >> 2 & 63L | (long)in.get(147 + inPos) << 6 & 16383L | (long)in.get(148 + inPos) << 14 & 4194303L | (long)in.get(149 + inPos) << 22 & 1073741823L | (long)in.get(150 + inPos) << 30 & 274877906943L | (long)in.get(151 + inPos) << 38 & 35184372088831L;
         out[27 + outPos] = (long)in.get(151 + inPos) >> 7 & 1L | (long)in.get(152 + inPos) << 1 & 511L | (long)in.get(153 + inPos) << 9 & 131071L | (long)in.get(154 + inPos) << 17 & 33554431L | (long)in.get(155 + inPos) << 25 & 8589934591L | (long)in.get(156 + inPos) << 33 & 2199023255551L | (long)in.get(157 + inPos) << 41 & 35184372088831L;
         out[28 + outPos] = (long)in.get(157 + inPos) >> 4 & 15L | (long)in.get(158 + inPos) << 4 & 4095L | (long)in.get(159 + inPos) << 12 & 1048575L | (long)in.get(160 + inPos) << 20 & 268435455L | (long)in.get(161 + inPos) << 28 & 68719476735L | (long)in.get(162 + inPos) << 36 & 17592186044415L | (long)in.get(163 + inPos) << 44 & 35184372088831L;
         out[29 + outPos] = (long)in.get(163 + inPos) >> 1 & 127L | (long)in.get(164 + inPos) << 7 & 32767L | (long)in.get(165 + inPos) << 15 & 8388607L | (long)in.get(166 + inPos) << 23 & 2147483647L | (long)in.get(167 + inPos) << 31 & 549755813887L | (long)in.get(168 + inPos) << 39 & 35184372088831L;
         out[30 + outPos] = (long)in.get(168 + inPos) >> 6 & 3L | (long)in.get(169 + inPos) << 2 & 1023L | (long)in.get(170 + inPos) << 10 & 262143L | (long)in.get(171 + inPos) << 18 & 67108863L | (long)in.get(172 + inPos) << 26 & 17179869183L | (long)in.get(173 + inPos) << 34 & 4398046511103L | (long)in.get(174 + inPos) << 42 & 35184372088831L;
         out[31 + outPos] = (long)in.get(174 + inPos) >> 3 & 31L | (long)in.get(175 + inPos) << 5 & 8191L | (long)in.get(176 + inPos) << 13 & 2097151L | (long)in.get(177 + inPos) << 21 & 536870911L | (long)in.get(178 + inPos) << 29 & 137438953471L | (long)in.get(179 + inPos) << 37 & 35184372088831L;
      }
   }

   private static final class Packer46 extends BytePackerForLong {
      private Packer46() {
         super(46);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 70368744177663L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 70368744177663L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 70368744177663L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 70368744177663L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 70368744177663L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 70368744177663L) >>> 40 | (in[1 + inPos] & 70368744177663L) << 6) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 70368744177663L) >>> 2 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 70368744177663L) >>> 10 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 70368744177663L) >>> 18 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 70368744177663L) >>> 26 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 70368744177663L) >>> 34 & 255L));
         out[11 + outPos] = (byte)((int)(((in[1 + inPos] & 70368744177663L) >>> 42 | (in[2 + inPos] & 70368744177663L) << 4) & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 70368744177663L) >>> 4 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 70368744177663L) >>> 12 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 70368744177663L) >>> 20 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 70368744177663L) >>> 28 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 70368744177663L) >>> 36 & 255L));
         out[17 + outPos] = (byte)((int)(((in[2 + inPos] & 70368744177663L) >>> 44 | (in[3 + inPos] & 70368744177663L) << 2) & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 70368744177663L) >>> 6 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 70368744177663L) >>> 14 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 70368744177663L) >>> 22 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 70368744177663L) >>> 30 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 70368744177663L) >>> 38 & 255L));
         out[23 + outPos] = (byte)((int)(in[4 + inPos] & 70368744177663L & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 70368744177663L) >>> 8 & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 70368744177663L) >>> 16 & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 70368744177663L) >>> 24 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 70368744177663L) >>> 32 & 255L));
         out[28 + outPos] = (byte)((int)(((in[4 + inPos] & 70368744177663L) >>> 40 | (in[5 + inPos] & 70368744177663L) << 6) & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 70368744177663L) >>> 2 & 255L));
         out[30 + outPos] = (byte)((int)((in[5 + inPos] & 70368744177663L) >>> 10 & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 70368744177663L) >>> 18 & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 70368744177663L) >>> 26 & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 70368744177663L) >>> 34 & 255L));
         out[34 + outPos] = (byte)((int)(((in[5 + inPos] & 70368744177663L) >>> 42 | (in[6 + inPos] & 70368744177663L) << 4) & 255L));
         out[35 + outPos] = (byte)((int)((in[6 + inPos] & 70368744177663L) >>> 4 & 255L));
         out[36 + outPos] = (byte)((int)((in[6 + inPos] & 70368744177663L) >>> 12 & 255L));
         out[37 + outPos] = (byte)((int)((in[6 + inPos] & 70368744177663L) >>> 20 & 255L));
         out[38 + outPos] = (byte)((int)((in[6 + inPos] & 70368744177663L) >>> 28 & 255L));
         out[39 + outPos] = (byte)((int)((in[6 + inPos] & 70368744177663L) >>> 36 & 255L));
         out[40 + outPos] = (byte)((int)(((in[6 + inPos] & 70368744177663L) >>> 44 | (in[7 + inPos] & 70368744177663L) << 2) & 255L));
         out[41 + outPos] = (byte)((int)((in[7 + inPos] & 70368744177663L) >>> 6 & 255L));
         out[42 + outPos] = (byte)((int)((in[7 + inPos] & 70368744177663L) >>> 14 & 255L));
         out[43 + outPos] = (byte)((int)((in[7 + inPos] & 70368744177663L) >>> 22 & 255L));
         out[44 + outPos] = (byte)((int)((in[7 + inPos] & 70368744177663L) >>> 30 & 255L));
         out[45 + outPos] = (byte)((int)((in[7 + inPos] & 70368744177663L) >>> 38 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 70368744177663L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 70368744177663L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 70368744177663L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 70368744177663L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 70368744177663L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 70368744177663L) >>> 40 | (in[1 + inPos] & 70368744177663L) << 6) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 70368744177663L) >>> 2 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 70368744177663L) >>> 10 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 70368744177663L) >>> 18 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 70368744177663L) >>> 26 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 70368744177663L) >>> 34 & 255L));
         out[11 + outPos] = (byte)((int)(((in[1 + inPos] & 70368744177663L) >>> 42 | (in[2 + inPos] & 70368744177663L) << 4) & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 70368744177663L) >>> 4 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 70368744177663L) >>> 12 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 70368744177663L) >>> 20 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 70368744177663L) >>> 28 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 70368744177663L) >>> 36 & 255L));
         out[17 + outPos] = (byte)((int)(((in[2 + inPos] & 70368744177663L) >>> 44 | (in[3 + inPos] & 70368744177663L) << 2) & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 70368744177663L) >>> 6 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 70368744177663L) >>> 14 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 70368744177663L) >>> 22 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 70368744177663L) >>> 30 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 70368744177663L) >>> 38 & 255L));
         out[23 + outPos] = (byte)((int)(in[4 + inPos] & 70368744177663L & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 70368744177663L) >>> 8 & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 70368744177663L) >>> 16 & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 70368744177663L) >>> 24 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 70368744177663L) >>> 32 & 255L));
         out[28 + outPos] = (byte)((int)(((in[4 + inPos] & 70368744177663L) >>> 40 | (in[5 + inPos] & 70368744177663L) << 6) & 255L));
         out[29 + outPos] = (byte)((int)((in[5 + inPos] & 70368744177663L) >>> 2 & 255L));
         out[30 + outPos] = (byte)((int)((in[5 + inPos] & 70368744177663L) >>> 10 & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 70368744177663L) >>> 18 & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 70368744177663L) >>> 26 & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 70368744177663L) >>> 34 & 255L));
         out[34 + outPos] = (byte)((int)(((in[5 + inPos] & 70368744177663L) >>> 42 | (in[6 + inPos] & 70368744177663L) << 4) & 255L));
         out[35 + outPos] = (byte)((int)((in[6 + inPos] & 70368744177663L) >>> 4 & 255L));
         out[36 + outPos] = (byte)((int)((in[6 + inPos] & 70368744177663L) >>> 12 & 255L));
         out[37 + outPos] = (byte)((int)((in[6 + inPos] & 70368744177663L) >>> 20 & 255L));
         out[38 + outPos] = (byte)((int)((in[6 + inPos] & 70368744177663L) >>> 28 & 255L));
         out[39 + outPos] = (byte)((int)((in[6 + inPos] & 70368744177663L) >>> 36 & 255L));
         out[40 + outPos] = (byte)((int)(((in[6 + inPos] & 70368744177663L) >>> 44 | (in[7 + inPos] & 70368744177663L) << 2) & 255L));
         out[41 + outPos] = (byte)((int)((in[7 + inPos] & 70368744177663L) >>> 6 & 255L));
         out[42 + outPos] = (byte)((int)((in[7 + inPos] & 70368744177663L) >>> 14 & 255L));
         out[43 + outPos] = (byte)((int)((in[7 + inPos] & 70368744177663L) >>> 22 & 255L));
         out[44 + outPos] = (byte)((int)((in[7 + inPos] & 70368744177663L) >>> 30 & 255L));
         out[45 + outPos] = (byte)((int)((in[7 + inPos] & 70368744177663L) >>> 38 & 255L));
         out[46 + outPos] = (byte)((int)(in[8 + inPos] & 70368744177663L & 255L));
         out[47 + outPos] = (byte)((int)((in[8 + inPos] & 70368744177663L) >>> 8 & 255L));
         out[48 + outPos] = (byte)((int)((in[8 + inPos] & 70368744177663L) >>> 16 & 255L));
         out[49 + outPos] = (byte)((int)((in[8 + inPos] & 70368744177663L) >>> 24 & 255L));
         out[50 + outPos] = (byte)((int)((in[8 + inPos] & 70368744177663L) >>> 32 & 255L));
         out[51 + outPos] = (byte)((int)(((in[8 + inPos] & 70368744177663L) >>> 40 | (in[9 + inPos] & 70368744177663L) << 6) & 255L));
         out[52 + outPos] = (byte)((int)((in[9 + inPos] & 70368744177663L) >>> 2 & 255L));
         out[53 + outPos] = (byte)((int)((in[9 + inPos] & 70368744177663L) >>> 10 & 255L));
         out[54 + outPos] = (byte)((int)((in[9 + inPos] & 70368744177663L) >>> 18 & 255L));
         out[55 + outPos] = (byte)((int)((in[9 + inPos] & 70368744177663L) >>> 26 & 255L));
         out[56 + outPos] = (byte)((int)((in[9 + inPos] & 70368744177663L) >>> 34 & 255L));
         out[57 + outPos] = (byte)((int)(((in[9 + inPos] & 70368744177663L) >>> 42 | (in[10 + inPos] & 70368744177663L) << 4) & 255L));
         out[58 + outPos] = (byte)((int)((in[10 + inPos] & 70368744177663L) >>> 4 & 255L));
         out[59 + outPos] = (byte)((int)((in[10 + inPos] & 70368744177663L) >>> 12 & 255L));
         out[60 + outPos] = (byte)((int)((in[10 + inPos] & 70368744177663L) >>> 20 & 255L));
         out[61 + outPos] = (byte)((int)((in[10 + inPos] & 70368744177663L) >>> 28 & 255L));
         out[62 + outPos] = (byte)((int)((in[10 + inPos] & 70368744177663L) >>> 36 & 255L));
         out[63 + outPos] = (byte)((int)(((in[10 + inPos] & 70368744177663L) >>> 44 | (in[11 + inPos] & 70368744177663L) << 2) & 255L));
         out[64 + outPos] = (byte)((int)((in[11 + inPos] & 70368744177663L) >>> 6 & 255L));
         out[65 + outPos] = (byte)((int)((in[11 + inPos] & 70368744177663L) >>> 14 & 255L));
         out[66 + outPos] = (byte)((int)((in[11 + inPos] & 70368744177663L) >>> 22 & 255L));
         out[67 + outPos] = (byte)((int)((in[11 + inPos] & 70368744177663L) >>> 30 & 255L));
         out[68 + outPos] = (byte)((int)((in[11 + inPos] & 70368744177663L) >>> 38 & 255L));
         out[69 + outPos] = (byte)((int)(in[12 + inPos] & 70368744177663L & 255L));
         out[70 + outPos] = (byte)((int)((in[12 + inPos] & 70368744177663L) >>> 8 & 255L));
         out[71 + outPos] = (byte)((int)((in[12 + inPos] & 70368744177663L) >>> 16 & 255L));
         out[72 + outPos] = (byte)((int)((in[12 + inPos] & 70368744177663L) >>> 24 & 255L));
         out[73 + outPos] = (byte)((int)((in[12 + inPos] & 70368744177663L) >>> 32 & 255L));
         out[74 + outPos] = (byte)((int)(((in[12 + inPos] & 70368744177663L) >>> 40 | (in[13 + inPos] & 70368744177663L) << 6) & 255L));
         out[75 + outPos] = (byte)((int)((in[13 + inPos] & 70368744177663L) >>> 2 & 255L));
         out[76 + outPos] = (byte)((int)((in[13 + inPos] & 70368744177663L) >>> 10 & 255L));
         out[77 + outPos] = (byte)((int)((in[13 + inPos] & 70368744177663L) >>> 18 & 255L));
         out[78 + outPos] = (byte)((int)((in[13 + inPos] & 70368744177663L) >>> 26 & 255L));
         out[79 + outPos] = (byte)((int)((in[13 + inPos] & 70368744177663L) >>> 34 & 255L));
         out[80 + outPos] = (byte)((int)(((in[13 + inPos] & 70368744177663L) >>> 42 | (in[14 + inPos] & 70368744177663L) << 4) & 255L));
         out[81 + outPos] = (byte)((int)((in[14 + inPos] & 70368744177663L) >>> 4 & 255L));
         out[82 + outPos] = (byte)((int)((in[14 + inPos] & 70368744177663L) >>> 12 & 255L));
         out[83 + outPos] = (byte)((int)((in[14 + inPos] & 70368744177663L) >>> 20 & 255L));
         out[84 + outPos] = (byte)((int)((in[14 + inPos] & 70368744177663L) >>> 28 & 255L));
         out[85 + outPos] = (byte)((int)((in[14 + inPos] & 70368744177663L) >>> 36 & 255L));
         out[86 + outPos] = (byte)((int)(((in[14 + inPos] & 70368744177663L) >>> 44 | (in[15 + inPos] & 70368744177663L) << 2) & 255L));
         out[87 + outPos] = (byte)((int)((in[15 + inPos] & 70368744177663L) >>> 6 & 255L));
         out[88 + outPos] = (byte)((int)((in[15 + inPos] & 70368744177663L) >>> 14 & 255L));
         out[89 + outPos] = (byte)((int)((in[15 + inPos] & 70368744177663L) >>> 22 & 255L));
         out[90 + outPos] = (byte)((int)((in[15 + inPos] & 70368744177663L) >>> 30 & 255L));
         out[91 + outPos] = (byte)((int)((in[15 + inPos] & 70368744177663L) >>> 38 & 255L));
         out[92 + outPos] = (byte)((int)(in[16 + inPos] & 70368744177663L & 255L));
         out[93 + outPos] = (byte)((int)((in[16 + inPos] & 70368744177663L) >>> 8 & 255L));
         out[94 + outPos] = (byte)((int)((in[16 + inPos] & 70368744177663L) >>> 16 & 255L));
         out[95 + outPos] = (byte)((int)((in[16 + inPos] & 70368744177663L) >>> 24 & 255L));
         out[96 + outPos] = (byte)((int)((in[16 + inPos] & 70368744177663L) >>> 32 & 255L));
         out[97 + outPos] = (byte)((int)(((in[16 + inPos] & 70368744177663L) >>> 40 | (in[17 + inPos] & 70368744177663L) << 6) & 255L));
         out[98 + outPos] = (byte)((int)((in[17 + inPos] & 70368744177663L) >>> 2 & 255L));
         out[99 + outPos] = (byte)((int)((in[17 + inPos] & 70368744177663L) >>> 10 & 255L));
         out[100 + outPos] = (byte)((int)((in[17 + inPos] & 70368744177663L) >>> 18 & 255L));
         out[101 + outPos] = (byte)((int)((in[17 + inPos] & 70368744177663L) >>> 26 & 255L));
         out[102 + outPos] = (byte)((int)((in[17 + inPos] & 70368744177663L) >>> 34 & 255L));
         out[103 + outPos] = (byte)((int)(((in[17 + inPos] & 70368744177663L) >>> 42 | (in[18 + inPos] & 70368744177663L) << 4) & 255L));
         out[104 + outPos] = (byte)((int)((in[18 + inPos] & 70368744177663L) >>> 4 & 255L));
         out[105 + outPos] = (byte)((int)((in[18 + inPos] & 70368744177663L) >>> 12 & 255L));
         out[106 + outPos] = (byte)((int)((in[18 + inPos] & 70368744177663L) >>> 20 & 255L));
         out[107 + outPos] = (byte)((int)((in[18 + inPos] & 70368744177663L) >>> 28 & 255L));
         out[108 + outPos] = (byte)((int)((in[18 + inPos] & 70368744177663L) >>> 36 & 255L));
         out[109 + outPos] = (byte)((int)(((in[18 + inPos] & 70368744177663L) >>> 44 | (in[19 + inPos] & 70368744177663L) << 2) & 255L));
         out[110 + outPos] = (byte)((int)((in[19 + inPos] & 70368744177663L) >>> 6 & 255L));
         out[111 + outPos] = (byte)((int)((in[19 + inPos] & 70368744177663L) >>> 14 & 255L));
         out[112 + outPos] = (byte)((int)((in[19 + inPos] & 70368744177663L) >>> 22 & 255L));
         out[113 + outPos] = (byte)((int)((in[19 + inPos] & 70368744177663L) >>> 30 & 255L));
         out[114 + outPos] = (byte)((int)((in[19 + inPos] & 70368744177663L) >>> 38 & 255L));
         out[115 + outPos] = (byte)((int)(in[20 + inPos] & 70368744177663L & 255L));
         out[116 + outPos] = (byte)((int)((in[20 + inPos] & 70368744177663L) >>> 8 & 255L));
         out[117 + outPos] = (byte)((int)((in[20 + inPos] & 70368744177663L) >>> 16 & 255L));
         out[118 + outPos] = (byte)((int)((in[20 + inPos] & 70368744177663L) >>> 24 & 255L));
         out[119 + outPos] = (byte)((int)((in[20 + inPos] & 70368744177663L) >>> 32 & 255L));
         out[120 + outPos] = (byte)((int)(((in[20 + inPos] & 70368744177663L) >>> 40 | (in[21 + inPos] & 70368744177663L) << 6) & 255L));
         out[121 + outPos] = (byte)((int)((in[21 + inPos] & 70368744177663L) >>> 2 & 255L));
         out[122 + outPos] = (byte)((int)((in[21 + inPos] & 70368744177663L) >>> 10 & 255L));
         out[123 + outPos] = (byte)((int)((in[21 + inPos] & 70368744177663L) >>> 18 & 255L));
         out[124 + outPos] = (byte)((int)((in[21 + inPos] & 70368744177663L) >>> 26 & 255L));
         out[125 + outPos] = (byte)((int)((in[21 + inPos] & 70368744177663L) >>> 34 & 255L));
         out[126 + outPos] = (byte)((int)(((in[21 + inPos] & 70368744177663L) >>> 42 | (in[22 + inPos] & 70368744177663L) << 4) & 255L));
         out[127 + outPos] = (byte)((int)((in[22 + inPos] & 70368744177663L) >>> 4 & 255L));
         out[128 + outPos] = (byte)((int)((in[22 + inPos] & 70368744177663L) >>> 12 & 255L));
         out[129 + outPos] = (byte)((int)((in[22 + inPos] & 70368744177663L) >>> 20 & 255L));
         out[130 + outPos] = (byte)((int)((in[22 + inPos] & 70368744177663L) >>> 28 & 255L));
         out[131 + outPos] = (byte)((int)((in[22 + inPos] & 70368744177663L) >>> 36 & 255L));
         out[132 + outPos] = (byte)((int)(((in[22 + inPos] & 70368744177663L) >>> 44 | (in[23 + inPos] & 70368744177663L) << 2) & 255L));
         out[133 + outPos] = (byte)((int)((in[23 + inPos] & 70368744177663L) >>> 6 & 255L));
         out[134 + outPos] = (byte)((int)((in[23 + inPos] & 70368744177663L) >>> 14 & 255L));
         out[135 + outPos] = (byte)((int)((in[23 + inPos] & 70368744177663L) >>> 22 & 255L));
         out[136 + outPos] = (byte)((int)((in[23 + inPos] & 70368744177663L) >>> 30 & 255L));
         out[137 + outPos] = (byte)((int)((in[23 + inPos] & 70368744177663L) >>> 38 & 255L));
         out[138 + outPos] = (byte)((int)(in[24 + inPos] & 70368744177663L & 255L));
         out[139 + outPos] = (byte)((int)((in[24 + inPos] & 70368744177663L) >>> 8 & 255L));
         out[140 + outPos] = (byte)((int)((in[24 + inPos] & 70368744177663L) >>> 16 & 255L));
         out[141 + outPos] = (byte)((int)((in[24 + inPos] & 70368744177663L) >>> 24 & 255L));
         out[142 + outPos] = (byte)((int)((in[24 + inPos] & 70368744177663L) >>> 32 & 255L));
         out[143 + outPos] = (byte)((int)(((in[24 + inPos] & 70368744177663L) >>> 40 | (in[25 + inPos] & 70368744177663L) << 6) & 255L));
         out[144 + outPos] = (byte)((int)((in[25 + inPos] & 70368744177663L) >>> 2 & 255L));
         out[145 + outPos] = (byte)((int)((in[25 + inPos] & 70368744177663L) >>> 10 & 255L));
         out[146 + outPos] = (byte)((int)((in[25 + inPos] & 70368744177663L) >>> 18 & 255L));
         out[147 + outPos] = (byte)((int)((in[25 + inPos] & 70368744177663L) >>> 26 & 255L));
         out[148 + outPos] = (byte)((int)((in[25 + inPos] & 70368744177663L) >>> 34 & 255L));
         out[149 + outPos] = (byte)((int)(((in[25 + inPos] & 70368744177663L) >>> 42 | (in[26 + inPos] & 70368744177663L) << 4) & 255L));
         out[150 + outPos] = (byte)((int)((in[26 + inPos] & 70368744177663L) >>> 4 & 255L));
         out[151 + outPos] = (byte)((int)((in[26 + inPos] & 70368744177663L) >>> 12 & 255L));
         out[152 + outPos] = (byte)((int)((in[26 + inPos] & 70368744177663L) >>> 20 & 255L));
         out[153 + outPos] = (byte)((int)((in[26 + inPos] & 70368744177663L) >>> 28 & 255L));
         out[154 + outPos] = (byte)((int)((in[26 + inPos] & 70368744177663L) >>> 36 & 255L));
         out[155 + outPos] = (byte)((int)(((in[26 + inPos] & 70368744177663L) >>> 44 | (in[27 + inPos] & 70368744177663L) << 2) & 255L));
         out[156 + outPos] = (byte)((int)((in[27 + inPos] & 70368744177663L) >>> 6 & 255L));
         out[157 + outPos] = (byte)((int)((in[27 + inPos] & 70368744177663L) >>> 14 & 255L));
         out[158 + outPos] = (byte)((int)((in[27 + inPos] & 70368744177663L) >>> 22 & 255L));
         out[159 + outPos] = (byte)((int)((in[27 + inPos] & 70368744177663L) >>> 30 & 255L));
         out[160 + outPos] = (byte)((int)((in[27 + inPos] & 70368744177663L) >>> 38 & 255L));
         out[161 + outPos] = (byte)((int)(in[28 + inPos] & 70368744177663L & 255L));
         out[162 + outPos] = (byte)((int)((in[28 + inPos] & 70368744177663L) >>> 8 & 255L));
         out[163 + outPos] = (byte)((int)((in[28 + inPos] & 70368744177663L) >>> 16 & 255L));
         out[164 + outPos] = (byte)((int)((in[28 + inPos] & 70368744177663L) >>> 24 & 255L));
         out[165 + outPos] = (byte)((int)((in[28 + inPos] & 70368744177663L) >>> 32 & 255L));
         out[166 + outPos] = (byte)((int)(((in[28 + inPos] & 70368744177663L) >>> 40 | (in[29 + inPos] & 70368744177663L) << 6) & 255L));
         out[167 + outPos] = (byte)((int)((in[29 + inPos] & 70368744177663L) >>> 2 & 255L));
         out[168 + outPos] = (byte)((int)((in[29 + inPos] & 70368744177663L) >>> 10 & 255L));
         out[169 + outPos] = (byte)((int)((in[29 + inPos] & 70368744177663L) >>> 18 & 255L));
         out[170 + outPos] = (byte)((int)((in[29 + inPos] & 70368744177663L) >>> 26 & 255L));
         out[171 + outPos] = (byte)((int)((in[29 + inPos] & 70368744177663L) >>> 34 & 255L));
         out[172 + outPos] = (byte)((int)(((in[29 + inPos] & 70368744177663L) >>> 42 | (in[30 + inPos] & 70368744177663L) << 4) & 255L));
         out[173 + outPos] = (byte)((int)((in[30 + inPos] & 70368744177663L) >>> 4 & 255L));
         out[174 + outPos] = (byte)((int)((in[30 + inPos] & 70368744177663L) >>> 12 & 255L));
         out[175 + outPos] = (byte)((int)((in[30 + inPos] & 70368744177663L) >>> 20 & 255L));
         out[176 + outPos] = (byte)((int)((in[30 + inPos] & 70368744177663L) >>> 28 & 255L));
         out[177 + outPos] = (byte)((int)((in[30 + inPos] & 70368744177663L) >>> 36 & 255L));
         out[178 + outPos] = (byte)((int)(((in[30 + inPos] & 70368744177663L) >>> 44 | (in[31 + inPos] & 70368744177663L) << 2) & 255L));
         out[179 + outPos] = (byte)((int)((in[31 + inPos] & 70368744177663L) >>> 6 & 255L));
         out[180 + outPos] = (byte)((int)((in[31 + inPos] & 70368744177663L) >>> 14 & 255L));
         out[181 + outPos] = (byte)((int)((in[31 + inPos] & 70368744177663L) >>> 22 & 255L));
         out[182 + outPos] = (byte)((int)((in[31 + inPos] & 70368744177663L) >>> 30 & 255L));
         out[183 + outPos] = (byte)((int)((in[31 + inPos] & 70368744177663L) >>> 38 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 70368744177663L;
         out[1 + outPos] = (long)in[5 + inPos] >> 6 & 3L | (long)in[6 + inPos] << 2 & 1023L | (long)in[7 + inPos] << 10 & 262143L | (long)in[8 + inPos] << 18 & 67108863L | (long)in[9 + inPos] << 26 & 17179869183L | (long)in[10 + inPos] << 34 & 4398046511103L | (long)in[11 + inPos] << 42 & 70368744177663L;
         out[2 + outPos] = (long)in[11 + inPos] >> 4 & 15L | (long)in[12 + inPos] << 4 & 4095L | (long)in[13 + inPos] << 12 & 1048575L | (long)in[14 + inPos] << 20 & 268435455L | (long)in[15 + inPos] << 28 & 68719476735L | (long)in[16 + inPos] << 36 & 17592186044415L | (long)in[17 + inPos] << 44 & 70368744177663L;
         out[3 + outPos] = (long)in[17 + inPos] >> 2 & 63L | (long)in[18 + inPos] << 6 & 16383L | (long)in[19 + inPos] << 14 & 4194303L | (long)in[20 + inPos] << 22 & 1073741823L | (long)in[21 + inPos] << 30 & 274877906943L | (long)in[22 + inPos] << 38 & 70368744177663L;
         out[4 + outPos] = (long)in[23 + inPos] & 255L | (long)in[24 + inPos] << 8 & 65535L | (long)in[25 + inPos] << 16 & 16777215L | (long)in[26 + inPos] << 24 & 4294967295L | (long)in[27 + inPos] << 32 & 1099511627775L | (long)in[28 + inPos] << 40 & 70368744177663L;
         out[5 + outPos] = (long)in[28 + inPos] >> 6 & 3L | (long)in[29 + inPos] << 2 & 1023L | (long)in[30 + inPos] << 10 & 262143L | (long)in[31 + inPos] << 18 & 67108863L | (long)in[32 + inPos] << 26 & 17179869183L | (long)in[33 + inPos] << 34 & 4398046511103L | (long)in[34 + inPos] << 42 & 70368744177663L;
         out[6 + outPos] = (long)in[34 + inPos] >> 4 & 15L | (long)in[35 + inPos] << 4 & 4095L | (long)in[36 + inPos] << 12 & 1048575L | (long)in[37 + inPos] << 20 & 268435455L | (long)in[38 + inPos] << 28 & 68719476735L | (long)in[39 + inPos] << 36 & 17592186044415L | (long)in[40 + inPos] << 44 & 70368744177663L;
         out[7 + outPos] = (long)in[40 + inPos] >> 2 & 63L | (long)in[41 + inPos] << 6 & 16383L | (long)in[42 + inPos] << 14 & 4194303L | (long)in[43 + inPos] << 22 & 1073741823L | (long)in[44 + inPos] << 30 & 274877906943L | (long)in[45 + inPos] << 38 & 70368744177663L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 70368744177663L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 6 & 3L | (long)in.get(6 + inPos) << 2 & 1023L | (long)in.get(7 + inPos) << 10 & 262143L | (long)in.get(8 + inPos) << 18 & 67108863L | (long)in.get(9 + inPos) << 26 & 17179869183L | (long)in.get(10 + inPos) << 34 & 4398046511103L | (long)in.get(11 + inPos) << 42 & 70368744177663L;
         out[2 + outPos] = (long)in.get(11 + inPos) >> 4 & 15L | (long)in.get(12 + inPos) << 4 & 4095L | (long)in.get(13 + inPos) << 12 & 1048575L | (long)in.get(14 + inPos) << 20 & 268435455L | (long)in.get(15 + inPos) << 28 & 68719476735L | (long)in.get(16 + inPos) << 36 & 17592186044415L | (long)in.get(17 + inPos) << 44 & 70368744177663L;
         out[3 + outPos] = (long)in.get(17 + inPos) >> 2 & 63L | (long)in.get(18 + inPos) << 6 & 16383L | (long)in.get(19 + inPos) << 14 & 4194303L | (long)in.get(20 + inPos) << 22 & 1073741823L | (long)in.get(21 + inPos) << 30 & 274877906943L | (long)in.get(22 + inPos) << 38 & 70368744177663L;
         out[4 + outPos] = (long)in.get(23 + inPos) & 255L | (long)in.get(24 + inPos) << 8 & 65535L | (long)in.get(25 + inPos) << 16 & 16777215L | (long)in.get(26 + inPos) << 24 & 4294967295L | (long)in.get(27 + inPos) << 32 & 1099511627775L | (long)in.get(28 + inPos) << 40 & 70368744177663L;
         out[5 + outPos] = (long)in.get(28 + inPos) >> 6 & 3L | (long)in.get(29 + inPos) << 2 & 1023L | (long)in.get(30 + inPos) << 10 & 262143L | (long)in.get(31 + inPos) << 18 & 67108863L | (long)in.get(32 + inPos) << 26 & 17179869183L | (long)in.get(33 + inPos) << 34 & 4398046511103L | (long)in.get(34 + inPos) << 42 & 70368744177663L;
         out[6 + outPos] = (long)in.get(34 + inPos) >> 4 & 15L | (long)in.get(35 + inPos) << 4 & 4095L | (long)in.get(36 + inPos) << 12 & 1048575L | (long)in.get(37 + inPos) << 20 & 268435455L | (long)in.get(38 + inPos) << 28 & 68719476735L | (long)in.get(39 + inPos) << 36 & 17592186044415L | (long)in.get(40 + inPos) << 44 & 70368744177663L;
         out[7 + outPos] = (long)in.get(40 + inPos) >> 2 & 63L | (long)in.get(41 + inPos) << 6 & 16383L | (long)in.get(42 + inPos) << 14 & 4194303L | (long)in.get(43 + inPos) << 22 & 1073741823L | (long)in.get(44 + inPos) << 30 & 274877906943L | (long)in.get(45 + inPos) << 38 & 70368744177663L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 70368744177663L;
         out[1 + outPos] = (long)in[5 + inPos] >> 6 & 3L | (long)in[6 + inPos] << 2 & 1023L | (long)in[7 + inPos] << 10 & 262143L | (long)in[8 + inPos] << 18 & 67108863L | (long)in[9 + inPos] << 26 & 17179869183L | (long)in[10 + inPos] << 34 & 4398046511103L | (long)in[11 + inPos] << 42 & 70368744177663L;
         out[2 + outPos] = (long)in[11 + inPos] >> 4 & 15L | (long)in[12 + inPos] << 4 & 4095L | (long)in[13 + inPos] << 12 & 1048575L | (long)in[14 + inPos] << 20 & 268435455L | (long)in[15 + inPos] << 28 & 68719476735L | (long)in[16 + inPos] << 36 & 17592186044415L | (long)in[17 + inPos] << 44 & 70368744177663L;
         out[3 + outPos] = (long)in[17 + inPos] >> 2 & 63L | (long)in[18 + inPos] << 6 & 16383L | (long)in[19 + inPos] << 14 & 4194303L | (long)in[20 + inPos] << 22 & 1073741823L | (long)in[21 + inPos] << 30 & 274877906943L | (long)in[22 + inPos] << 38 & 70368744177663L;
         out[4 + outPos] = (long)in[23 + inPos] & 255L | (long)in[24 + inPos] << 8 & 65535L | (long)in[25 + inPos] << 16 & 16777215L | (long)in[26 + inPos] << 24 & 4294967295L | (long)in[27 + inPos] << 32 & 1099511627775L | (long)in[28 + inPos] << 40 & 70368744177663L;
         out[5 + outPos] = (long)in[28 + inPos] >> 6 & 3L | (long)in[29 + inPos] << 2 & 1023L | (long)in[30 + inPos] << 10 & 262143L | (long)in[31 + inPos] << 18 & 67108863L | (long)in[32 + inPos] << 26 & 17179869183L | (long)in[33 + inPos] << 34 & 4398046511103L | (long)in[34 + inPos] << 42 & 70368744177663L;
         out[6 + outPos] = (long)in[34 + inPos] >> 4 & 15L | (long)in[35 + inPos] << 4 & 4095L | (long)in[36 + inPos] << 12 & 1048575L | (long)in[37 + inPos] << 20 & 268435455L | (long)in[38 + inPos] << 28 & 68719476735L | (long)in[39 + inPos] << 36 & 17592186044415L | (long)in[40 + inPos] << 44 & 70368744177663L;
         out[7 + outPos] = (long)in[40 + inPos] >> 2 & 63L | (long)in[41 + inPos] << 6 & 16383L | (long)in[42 + inPos] << 14 & 4194303L | (long)in[43 + inPos] << 22 & 1073741823L | (long)in[44 + inPos] << 30 & 274877906943L | (long)in[45 + inPos] << 38 & 70368744177663L;
         out[8 + outPos] = (long)in[46 + inPos] & 255L | (long)in[47 + inPos] << 8 & 65535L | (long)in[48 + inPos] << 16 & 16777215L | (long)in[49 + inPos] << 24 & 4294967295L | (long)in[50 + inPos] << 32 & 1099511627775L | (long)in[51 + inPos] << 40 & 70368744177663L;
         out[9 + outPos] = (long)in[51 + inPos] >> 6 & 3L | (long)in[52 + inPos] << 2 & 1023L | (long)in[53 + inPos] << 10 & 262143L | (long)in[54 + inPos] << 18 & 67108863L | (long)in[55 + inPos] << 26 & 17179869183L | (long)in[56 + inPos] << 34 & 4398046511103L | (long)in[57 + inPos] << 42 & 70368744177663L;
         out[10 + outPos] = (long)in[57 + inPos] >> 4 & 15L | (long)in[58 + inPos] << 4 & 4095L | (long)in[59 + inPos] << 12 & 1048575L | (long)in[60 + inPos] << 20 & 268435455L | (long)in[61 + inPos] << 28 & 68719476735L | (long)in[62 + inPos] << 36 & 17592186044415L | (long)in[63 + inPos] << 44 & 70368744177663L;
         out[11 + outPos] = (long)in[63 + inPos] >> 2 & 63L | (long)in[64 + inPos] << 6 & 16383L | (long)in[65 + inPos] << 14 & 4194303L | (long)in[66 + inPos] << 22 & 1073741823L | (long)in[67 + inPos] << 30 & 274877906943L | (long)in[68 + inPos] << 38 & 70368744177663L;
         out[12 + outPos] = (long)in[69 + inPos] & 255L | (long)in[70 + inPos] << 8 & 65535L | (long)in[71 + inPos] << 16 & 16777215L | (long)in[72 + inPos] << 24 & 4294967295L | (long)in[73 + inPos] << 32 & 1099511627775L | (long)in[74 + inPos] << 40 & 70368744177663L;
         out[13 + outPos] = (long)in[74 + inPos] >> 6 & 3L | (long)in[75 + inPos] << 2 & 1023L | (long)in[76 + inPos] << 10 & 262143L | (long)in[77 + inPos] << 18 & 67108863L | (long)in[78 + inPos] << 26 & 17179869183L | (long)in[79 + inPos] << 34 & 4398046511103L | (long)in[80 + inPos] << 42 & 70368744177663L;
         out[14 + outPos] = (long)in[80 + inPos] >> 4 & 15L | (long)in[81 + inPos] << 4 & 4095L | (long)in[82 + inPos] << 12 & 1048575L | (long)in[83 + inPos] << 20 & 268435455L | (long)in[84 + inPos] << 28 & 68719476735L | (long)in[85 + inPos] << 36 & 17592186044415L | (long)in[86 + inPos] << 44 & 70368744177663L;
         out[15 + outPos] = (long)in[86 + inPos] >> 2 & 63L | (long)in[87 + inPos] << 6 & 16383L | (long)in[88 + inPos] << 14 & 4194303L | (long)in[89 + inPos] << 22 & 1073741823L | (long)in[90 + inPos] << 30 & 274877906943L | (long)in[91 + inPos] << 38 & 70368744177663L;
         out[16 + outPos] = (long)in[92 + inPos] & 255L | (long)in[93 + inPos] << 8 & 65535L | (long)in[94 + inPos] << 16 & 16777215L | (long)in[95 + inPos] << 24 & 4294967295L | (long)in[96 + inPos] << 32 & 1099511627775L | (long)in[97 + inPos] << 40 & 70368744177663L;
         out[17 + outPos] = (long)in[97 + inPos] >> 6 & 3L | (long)in[98 + inPos] << 2 & 1023L | (long)in[99 + inPos] << 10 & 262143L | (long)in[100 + inPos] << 18 & 67108863L | (long)in[101 + inPos] << 26 & 17179869183L | (long)in[102 + inPos] << 34 & 4398046511103L | (long)in[103 + inPos] << 42 & 70368744177663L;
         out[18 + outPos] = (long)in[103 + inPos] >> 4 & 15L | (long)in[104 + inPos] << 4 & 4095L | (long)in[105 + inPos] << 12 & 1048575L | (long)in[106 + inPos] << 20 & 268435455L | (long)in[107 + inPos] << 28 & 68719476735L | (long)in[108 + inPos] << 36 & 17592186044415L | (long)in[109 + inPos] << 44 & 70368744177663L;
         out[19 + outPos] = (long)in[109 + inPos] >> 2 & 63L | (long)in[110 + inPos] << 6 & 16383L | (long)in[111 + inPos] << 14 & 4194303L | (long)in[112 + inPos] << 22 & 1073741823L | (long)in[113 + inPos] << 30 & 274877906943L | (long)in[114 + inPos] << 38 & 70368744177663L;
         out[20 + outPos] = (long)in[115 + inPos] & 255L | (long)in[116 + inPos] << 8 & 65535L | (long)in[117 + inPos] << 16 & 16777215L | (long)in[118 + inPos] << 24 & 4294967295L | (long)in[119 + inPos] << 32 & 1099511627775L | (long)in[120 + inPos] << 40 & 70368744177663L;
         out[21 + outPos] = (long)in[120 + inPos] >> 6 & 3L | (long)in[121 + inPos] << 2 & 1023L | (long)in[122 + inPos] << 10 & 262143L | (long)in[123 + inPos] << 18 & 67108863L | (long)in[124 + inPos] << 26 & 17179869183L | (long)in[125 + inPos] << 34 & 4398046511103L | (long)in[126 + inPos] << 42 & 70368744177663L;
         out[22 + outPos] = (long)in[126 + inPos] >> 4 & 15L | (long)in[127 + inPos] << 4 & 4095L | (long)in[128 + inPos] << 12 & 1048575L | (long)in[129 + inPos] << 20 & 268435455L | (long)in[130 + inPos] << 28 & 68719476735L | (long)in[131 + inPos] << 36 & 17592186044415L | (long)in[132 + inPos] << 44 & 70368744177663L;
         out[23 + outPos] = (long)in[132 + inPos] >> 2 & 63L | (long)in[133 + inPos] << 6 & 16383L | (long)in[134 + inPos] << 14 & 4194303L | (long)in[135 + inPos] << 22 & 1073741823L | (long)in[136 + inPos] << 30 & 274877906943L | (long)in[137 + inPos] << 38 & 70368744177663L;
         out[24 + outPos] = (long)in[138 + inPos] & 255L | (long)in[139 + inPos] << 8 & 65535L | (long)in[140 + inPos] << 16 & 16777215L | (long)in[141 + inPos] << 24 & 4294967295L | (long)in[142 + inPos] << 32 & 1099511627775L | (long)in[143 + inPos] << 40 & 70368744177663L;
         out[25 + outPos] = (long)in[143 + inPos] >> 6 & 3L | (long)in[144 + inPos] << 2 & 1023L | (long)in[145 + inPos] << 10 & 262143L | (long)in[146 + inPos] << 18 & 67108863L | (long)in[147 + inPos] << 26 & 17179869183L | (long)in[148 + inPos] << 34 & 4398046511103L | (long)in[149 + inPos] << 42 & 70368744177663L;
         out[26 + outPos] = (long)in[149 + inPos] >> 4 & 15L | (long)in[150 + inPos] << 4 & 4095L | (long)in[151 + inPos] << 12 & 1048575L | (long)in[152 + inPos] << 20 & 268435455L | (long)in[153 + inPos] << 28 & 68719476735L | (long)in[154 + inPos] << 36 & 17592186044415L | (long)in[155 + inPos] << 44 & 70368744177663L;
         out[27 + outPos] = (long)in[155 + inPos] >> 2 & 63L | (long)in[156 + inPos] << 6 & 16383L | (long)in[157 + inPos] << 14 & 4194303L | (long)in[158 + inPos] << 22 & 1073741823L | (long)in[159 + inPos] << 30 & 274877906943L | (long)in[160 + inPos] << 38 & 70368744177663L;
         out[28 + outPos] = (long)in[161 + inPos] & 255L | (long)in[162 + inPos] << 8 & 65535L | (long)in[163 + inPos] << 16 & 16777215L | (long)in[164 + inPos] << 24 & 4294967295L | (long)in[165 + inPos] << 32 & 1099511627775L | (long)in[166 + inPos] << 40 & 70368744177663L;
         out[29 + outPos] = (long)in[166 + inPos] >> 6 & 3L | (long)in[167 + inPos] << 2 & 1023L | (long)in[168 + inPos] << 10 & 262143L | (long)in[169 + inPos] << 18 & 67108863L | (long)in[170 + inPos] << 26 & 17179869183L | (long)in[171 + inPos] << 34 & 4398046511103L | (long)in[172 + inPos] << 42 & 70368744177663L;
         out[30 + outPos] = (long)in[172 + inPos] >> 4 & 15L | (long)in[173 + inPos] << 4 & 4095L | (long)in[174 + inPos] << 12 & 1048575L | (long)in[175 + inPos] << 20 & 268435455L | (long)in[176 + inPos] << 28 & 68719476735L | (long)in[177 + inPos] << 36 & 17592186044415L | (long)in[178 + inPos] << 44 & 70368744177663L;
         out[31 + outPos] = (long)in[178 + inPos] >> 2 & 63L | (long)in[179 + inPos] << 6 & 16383L | (long)in[180 + inPos] << 14 & 4194303L | (long)in[181 + inPos] << 22 & 1073741823L | (long)in[182 + inPos] << 30 & 274877906943L | (long)in[183 + inPos] << 38 & 70368744177663L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 70368744177663L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 6 & 3L | (long)in.get(6 + inPos) << 2 & 1023L | (long)in.get(7 + inPos) << 10 & 262143L | (long)in.get(8 + inPos) << 18 & 67108863L | (long)in.get(9 + inPos) << 26 & 17179869183L | (long)in.get(10 + inPos) << 34 & 4398046511103L | (long)in.get(11 + inPos) << 42 & 70368744177663L;
         out[2 + outPos] = (long)in.get(11 + inPos) >> 4 & 15L | (long)in.get(12 + inPos) << 4 & 4095L | (long)in.get(13 + inPos) << 12 & 1048575L | (long)in.get(14 + inPos) << 20 & 268435455L | (long)in.get(15 + inPos) << 28 & 68719476735L | (long)in.get(16 + inPos) << 36 & 17592186044415L | (long)in.get(17 + inPos) << 44 & 70368744177663L;
         out[3 + outPos] = (long)in.get(17 + inPos) >> 2 & 63L | (long)in.get(18 + inPos) << 6 & 16383L | (long)in.get(19 + inPos) << 14 & 4194303L | (long)in.get(20 + inPos) << 22 & 1073741823L | (long)in.get(21 + inPos) << 30 & 274877906943L | (long)in.get(22 + inPos) << 38 & 70368744177663L;
         out[4 + outPos] = (long)in.get(23 + inPos) & 255L | (long)in.get(24 + inPos) << 8 & 65535L | (long)in.get(25 + inPos) << 16 & 16777215L | (long)in.get(26 + inPos) << 24 & 4294967295L | (long)in.get(27 + inPos) << 32 & 1099511627775L | (long)in.get(28 + inPos) << 40 & 70368744177663L;
         out[5 + outPos] = (long)in.get(28 + inPos) >> 6 & 3L | (long)in.get(29 + inPos) << 2 & 1023L | (long)in.get(30 + inPos) << 10 & 262143L | (long)in.get(31 + inPos) << 18 & 67108863L | (long)in.get(32 + inPos) << 26 & 17179869183L | (long)in.get(33 + inPos) << 34 & 4398046511103L | (long)in.get(34 + inPos) << 42 & 70368744177663L;
         out[6 + outPos] = (long)in.get(34 + inPos) >> 4 & 15L | (long)in.get(35 + inPos) << 4 & 4095L | (long)in.get(36 + inPos) << 12 & 1048575L | (long)in.get(37 + inPos) << 20 & 268435455L | (long)in.get(38 + inPos) << 28 & 68719476735L | (long)in.get(39 + inPos) << 36 & 17592186044415L | (long)in.get(40 + inPos) << 44 & 70368744177663L;
         out[7 + outPos] = (long)in.get(40 + inPos) >> 2 & 63L | (long)in.get(41 + inPos) << 6 & 16383L | (long)in.get(42 + inPos) << 14 & 4194303L | (long)in.get(43 + inPos) << 22 & 1073741823L | (long)in.get(44 + inPos) << 30 & 274877906943L | (long)in.get(45 + inPos) << 38 & 70368744177663L;
         out[8 + outPos] = (long)in.get(46 + inPos) & 255L | (long)in.get(47 + inPos) << 8 & 65535L | (long)in.get(48 + inPos) << 16 & 16777215L | (long)in.get(49 + inPos) << 24 & 4294967295L | (long)in.get(50 + inPos) << 32 & 1099511627775L | (long)in.get(51 + inPos) << 40 & 70368744177663L;
         out[9 + outPos] = (long)in.get(51 + inPos) >> 6 & 3L | (long)in.get(52 + inPos) << 2 & 1023L | (long)in.get(53 + inPos) << 10 & 262143L | (long)in.get(54 + inPos) << 18 & 67108863L | (long)in.get(55 + inPos) << 26 & 17179869183L | (long)in.get(56 + inPos) << 34 & 4398046511103L | (long)in.get(57 + inPos) << 42 & 70368744177663L;
         out[10 + outPos] = (long)in.get(57 + inPos) >> 4 & 15L | (long)in.get(58 + inPos) << 4 & 4095L | (long)in.get(59 + inPos) << 12 & 1048575L | (long)in.get(60 + inPos) << 20 & 268435455L | (long)in.get(61 + inPos) << 28 & 68719476735L | (long)in.get(62 + inPos) << 36 & 17592186044415L | (long)in.get(63 + inPos) << 44 & 70368744177663L;
         out[11 + outPos] = (long)in.get(63 + inPos) >> 2 & 63L | (long)in.get(64 + inPos) << 6 & 16383L | (long)in.get(65 + inPos) << 14 & 4194303L | (long)in.get(66 + inPos) << 22 & 1073741823L | (long)in.get(67 + inPos) << 30 & 274877906943L | (long)in.get(68 + inPos) << 38 & 70368744177663L;
         out[12 + outPos] = (long)in.get(69 + inPos) & 255L | (long)in.get(70 + inPos) << 8 & 65535L | (long)in.get(71 + inPos) << 16 & 16777215L | (long)in.get(72 + inPos) << 24 & 4294967295L | (long)in.get(73 + inPos) << 32 & 1099511627775L | (long)in.get(74 + inPos) << 40 & 70368744177663L;
         out[13 + outPos] = (long)in.get(74 + inPos) >> 6 & 3L | (long)in.get(75 + inPos) << 2 & 1023L | (long)in.get(76 + inPos) << 10 & 262143L | (long)in.get(77 + inPos) << 18 & 67108863L | (long)in.get(78 + inPos) << 26 & 17179869183L | (long)in.get(79 + inPos) << 34 & 4398046511103L | (long)in.get(80 + inPos) << 42 & 70368744177663L;
         out[14 + outPos] = (long)in.get(80 + inPos) >> 4 & 15L | (long)in.get(81 + inPos) << 4 & 4095L | (long)in.get(82 + inPos) << 12 & 1048575L | (long)in.get(83 + inPos) << 20 & 268435455L | (long)in.get(84 + inPos) << 28 & 68719476735L | (long)in.get(85 + inPos) << 36 & 17592186044415L | (long)in.get(86 + inPos) << 44 & 70368744177663L;
         out[15 + outPos] = (long)in.get(86 + inPos) >> 2 & 63L | (long)in.get(87 + inPos) << 6 & 16383L | (long)in.get(88 + inPos) << 14 & 4194303L | (long)in.get(89 + inPos) << 22 & 1073741823L | (long)in.get(90 + inPos) << 30 & 274877906943L | (long)in.get(91 + inPos) << 38 & 70368744177663L;
         out[16 + outPos] = (long)in.get(92 + inPos) & 255L | (long)in.get(93 + inPos) << 8 & 65535L | (long)in.get(94 + inPos) << 16 & 16777215L | (long)in.get(95 + inPos) << 24 & 4294967295L | (long)in.get(96 + inPos) << 32 & 1099511627775L | (long)in.get(97 + inPos) << 40 & 70368744177663L;
         out[17 + outPos] = (long)in.get(97 + inPos) >> 6 & 3L | (long)in.get(98 + inPos) << 2 & 1023L | (long)in.get(99 + inPos) << 10 & 262143L | (long)in.get(100 + inPos) << 18 & 67108863L | (long)in.get(101 + inPos) << 26 & 17179869183L | (long)in.get(102 + inPos) << 34 & 4398046511103L | (long)in.get(103 + inPos) << 42 & 70368744177663L;
         out[18 + outPos] = (long)in.get(103 + inPos) >> 4 & 15L | (long)in.get(104 + inPos) << 4 & 4095L | (long)in.get(105 + inPos) << 12 & 1048575L | (long)in.get(106 + inPos) << 20 & 268435455L | (long)in.get(107 + inPos) << 28 & 68719476735L | (long)in.get(108 + inPos) << 36 & 17592186044415L | (long)in.get(109 + inPos) << 44 & 70368744177663L;
         out[19 + outPos] = (long)in.get(109 + inPos) >> 2 & 63L | (long)in.get(110 + inPos) << 6 & 16383L | (long)in.get(111 + inPos) << 14 & 4194303L | (long)in.get(112 + inPos) << 22 & 1073741823L | (long)in.get(113 + inPos) << 30 & 274877906943L | (long)in.get(114 + inPos) << 38 & 70368744177663L;
         out[20 + outPos] = (long)in.get(115 + inPos) & 255L | (long)in.get(116 + inPos) << 8 & 65535L | (long)in.get(117 + inPos) << 16 & 16777215L | (long)in.get(118 + inPos) << 24 & 4294967295L | (long)in.get(119 + inPos) << 32 & 1099511627775L | (long)in.get(120 + inPos) << 40 & 70368744177663L;
         out[21 + outPos] = (long)in.get(120 + inPos) >> 6 & 3L | (long)in.get(121 + inPos) << 2 & 1023L | (long)in.get(122 + inPos) << 10 & 262143L | (long)in.get(123 + inPos) << 18 & 67108863L | (long)in.get(124 + inPos) << 26 & 17179869183L | (long)in.get(125 + inPos) << 34 & 4398046511103L | (long)in.get(126 + inPos) << 42 & 70368744177663L;
         out[22 + outPos] = (long)in.get(126 + inPos) >> 4 & 15L | (long)in.get(127 + inPos) << 4 & 4095L | (long)in.get(128 + inPos) << 12 & 1048575L | (long)in.get(129 + inPos) << 20 & 268435455L | (long)in.get(130 + inPos) << 28 & 68719476735L | (long)in.get(131 + inPos) << 36 & 17592186044415L | (long)in.get(132 + inPos) << 44 & 70368744177663L;
         out[23 + outPos] = (long)in.get(132 + inPos) >> 2 & 63L | (long)in.get(133 + inPos) << 6 & 16383L | (long)in.get(134 + inPos) << 14 & 4194303L | (long)in.get(135 + inPos) << 22 & 1073741823L | (long)in.get(136 + inPos) << 30 & 274877906943L | (long)in.get(137 + inPos) << 38 & 70368744177663L;
         out[24 + outPos] = (long)in.get(138 + inPos) & 255L | (long)in.get(139 + inPos) << 8 & 65535L | (long)in.get(140 + inPos) << 16 & 16777215L | (long)in.get(141 + inPos) << 24 & 4294967295L | (long)in.get(142 + inPos) << 32 & 1099511627775L | (long)in.get(143 + inPos) << 40 & 70368744177663L;
         out[25 + outPos] = (long)in.get(143 + inPos) >> 6 & 3L | (long)in.get(144 + inPos) << 2 & 1023L | (long)in.get(145 + inPos) << 10 & 262143L | (long)in.get(146 + inPos) << 18 & 67108863L | (long)in.get(147 + inPos) << 26 & 17179869183L | (long)in.get(148 + inPos) << 34 & 4398046511103L | (long)in.get(149 + inPos) << 42 & 70368744177663L;
         out[26 + outPos] = (long)in.get(149 + inPos) >> 4 & 15L | (long)in.get(150 + inPos) << 4 & 4095L | (long)in.get(151 + inPos) << 12 & 1048575L | (long)in.get(152 + inPos) << 20 & 268435455L | (long)in.get(153 + inPos) << 28 & 68719476735L | (long)in.get(154 + inPos) << 36 & 17592186044415L | (long)in.get(155 + inPos) << 44 & 70368744177663L;
         out[27 + outPos] = (long)in.get(155 + inPos) >> 2 & 63L | (long)in.get(156 + inPos) << 6 & 16383L | (long)in.get(157 + inPos) << 14 & 4194303L | (long)in.get(158 + inPos) << 22 & 1073741823L | (long)in.get(159 + inPos) << 30 & 274877906943L | (long)in.get(160 + inPos) << 38 & 70368744177663L;
         out[28 + outPos] = (long)in.get(161 + inPos) & 255L | (long)in.get(162 + inPos) << 8 & 65535L | (long)in.get(163 + inPos) << 16 & 16777215L | (long)in.get(164 + inPos) << 24 & 4294967295L | (long)in.get(165 + inPos) << 32 & 1099511627775L | (long)in.get(166 + inPos) << 40 & 70368744177663L;
         out[29 + outPos] = (long)in.get(166 + inPos) >> 6 & 3L | (long)in.get(167 + inPos) << 2 & 1023L | (long)in.get(168 + inPos) << 10 & 262143L | (long)in.get(169 + inPos) << 18 & 67108863L | (long)in.get(170 + inPos) << 26 & 17179869183L | (long)in.get(171 + inPos) << 34 & 4398046511103L | (long)in.get(172 + inPos) << 42 & 70368744177663L;
         out[30 + outPos] = (long)in.get(172 + inPos) >> 4 & 15L | (long)in.get(173 + inPos) << 4 & 4095L | (long)in.get(174 + inPos) << 12 & 1048575L | (long)in.get(175 + inPos) << 20 & 268435455L | (long)in.get(176 + inPos) << 28 & 68719476735L | (long)in.get(177 + inPos) << 36 & 17592186044415L | (long)in.get(178 + inPos) << 44 & 70368744177663L;
         out[31 + outPos] = (long)in.get(178 + inPos) >> 2 & 63L | (long)in.get(179 + inPos) << 6 & 16383L | (long)in.get(180 + inPos) << 14 & 4194303L | (long)in.get(181 + inPos) << 22 & 1073741823L | (long)in.get(182 + inPos) << 30 & 274877906943L | (long)in.get(183 + inPos) << 38 & 70368744177663L;
      }
   }

   private static final class Packer47 extends BytePackerForLong {
      private Packer47() {
         super(47);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 140737488355327L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 140737488355327L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 140737488355327L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 140737488355327L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 140737488355327L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 140737488355327L) >>> 40 | (in[1 + inPos] & 140737488355327L) << 7) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 140737488355327L) >>> 1 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 140737488355327L) >>> 9 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 140737488355327L) >>> 17 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 140737488355327L) >>> 25 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 140737488355327L) >>> 33 & 255L));
         out[11 + outPos] = (byte)((int)(((in[1 + inPos] & 140737488355327L) >>> 41 | (in[2 + inPos] & 140737488355327L) << 6) & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 140737488355327L) >>> 2 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 140737488355327L) >>> 10 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 140737488355327L) >>> 18 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 140737488355327L) >>> 26 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 140737488355327L) >>> 34 & 255L));
         out[17 + outPos] = (byte)((int)(((in[2 + inPos] & 140737488355327L) >>> 42 | (in[3 + inPos] & 140737488355327L) << 5) & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 140737488355327L) >>> 3 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 140737488355327L) >>> 11 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 140737488355327L) >>> 19 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 140737488355327L) >>> 27 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 140737488355327L) >>> 35 & 255L));
         out[23 + outPos] = (byte)((int)(((in[3 + inPos] & 140737488355327L) >>> 43 | (in[4 + inPos] & 140737488355327L) << 4) & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 140737488355327L) >>> 4 & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 140737488355327L) >>> 12 & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 140737488355327L) >>> 20 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 140737488355327L) >>> 28 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 140737488355327L) >>> 36 & 255L));
         out[29 + outPos] = (byte)((int)(((in[4 + inPos] & 140737488355327L) >>> 44 | (in[5 + inPos] & 140737488355327L) << 3) & 255L));
         out[30 + outPos] = (byte)((int)((in[5 + inPos] & 140737488355327L) >>> 5 & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 140737488355327L) >>> 13 & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 140737488355327L) >>> 21 & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 140737488355327L) >>> 29 & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 140737488355327L) >>> 37 & 255L));
         out[35 + outPos] = (byte)((int)(((in[5 + inPos] & 140737488355327L) >>> 45 | (in[6 + inPos] & 140737488355327L) << 2) & 255L));
         out[36 + outPos] = (byte)((int)((in[6 + inPos] & 140737488355327L) >>> 6 & 255L));
         out[37 + outPos] = (byte)((int)((in[6 + inPos] & 140737488355327L) >>> 14 & 255L));
         out[38 + outPos] = (byte)((int)((in[6 + inPos] & 140737488355327L) >>> 22 & 255L));
         out[39 + outPos] = (byte)((int)((in[6 + inPos] & 140737488355327L) >>> 30 & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 140737488355327L) >>> 38 & 255L));
         out[41 + outPos] = (byte)((int)(((in[6 + inPos] & 140737488355327L) >>> 46 | (in[7 + inPos] & 140737488355327L) << 1) & 255L));
         out[42 + outPos] = (byte)((int)((in[7 + inPos] & 140737488355327L) >>> 7 & 255L));
         out[43 + outPos] = (byte)((int)((in[7 + inPos] & 140737488355327L) >>> 15 & 255L));
         out[44 + outPos] = (byte)((int)((in[7 + inPos] & 140737488355327L) >>> 23 & 255L));
         out[45 + outPos] = (byte)((int)((in[7 + inPos] & 140737488355327L) >>> 31 & 255L));
         out[46 + outPos] = (byte)((int)((in[7 + inPos] & 140737488355327L) >>> 39 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 140737488355327L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 140737488355327L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 140737488355327L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 140737488355327L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 140737488355327L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)(((in[0 + inPos] & 140737488355327L) >>> 40 | (in[1 + inPos] & 140737488355327L) << 7) & 255L));
         out[6 + outPos] = (byte)((int)((in[1 + inPos] & 140737488355327L) >>> 1 & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 140737488355327L) >>> 9 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 140737488355327L) >>> 17 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 140737488355327L) >>> 25 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 140737488355327L) >>> 33 & 255L));
         out[11 + outPos] = (byte)((int)(((in[1 + inPos] & 140737488355327L) >>> 41 | (in[2 + inPos] & 140737488355327L) << 6) & 255L));
         out[12 + outPos] = (byte)((int)((in[2 + inPos] & 140737488355327L) >>> 2 & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 140737488355327L) >>> 10 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 140737488355327L) >>> 18 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 140737488355327L) >>> 26 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 140737488355327L) >>> 34 & 255L));
         out[17 + outPos] = (byte)((int)(((in[2 + inPos] & 140737488355327L) >>> 42 | (in[3 + inPos] & 140737488355327L) << 5) & 255L));
         out[18 + outPos] = (byte)((int)((in[3 + inPos] & 140737488355327L) >>> 3 & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 140737488355327L) >>> 11 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 140737488355327L) >>> 19 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 140737488355327L) >>> 27 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 140737488355327L) >>> 35 & 255L));
         out[23 + outPos] = (byte)((int)(((in[3 + inPos] & 140737488355327L) >>> 43 | (in[4 + inPos] & 140737488355327L) << 4) & 255L));
         out[24 + outPos] = (byte)((int)((in[4 + inPos] & 140737488355327L) >>> 4 & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 140737488355327L) >>> 12 & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 140737488355327L) >>> 20 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 140737488355327L) >>> 28 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 140737488355327L) >>> 36 & 255L));
         out[29 + outPos] = (byte)((int)(((in[4 + inPos] & 140737488355327L) >>> 44 | (in[5 + inPos] & 140737488355327L) << 3) & 255L));
         out[30 + outPos] = (byte)((int)((in[5 + inPos] & 140737488355327L) >>> 5 & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 140737488355327L) >>> 13 & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 140737488355327L) >>> 21 & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 140737488355327L) >>> 29 & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 140737488355327L) >>> 37 & 255L));
         out[35 + outPos] = (byte)((int)(((in[5 + inPos] & 140737488355327L) >>> 45 | (in[6 + inPos] & 140737488355327L) << 2) & 255L));
         out[36 + outPos] = (byte)((int)((in[6 + inPos] & 140737488355327L) >>> 6 & 255L));
         out[37 + outPos] = (byte)((int)((in[6 + inPos] & 140737488355327L) >>> 14 & 255L));
         out[38 + outPos] = (byte)((int)((in[6 + inPos] & 140737488355327L) >>> 22 & 255L));
         out[39 + outPos] = (byte)((int)((in[6 + inPos] & 140737488355327L) >>> 30 & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 140737488355327L) >>> 38 & 255L));
         out[41 + outPos] = (byte)((int)(((in[6 + inPos] & 140737488355327L) >>> 46 | (in[7 + inPos] & 140737488355327L) << 1) & 255L));
         out[42 + outPos] = (byte)((int)((in[7 + inPos] & 140737488355327L) >>> 7 & 255L));
         out[43 + outPos] = (byte)((int)((in[7 + inPos] & 140737488355327L) >>> 15 & 255L));
         out[44 + outPos] = (byte)((int)((in[7 + inPos] & 140737488355327L) >>> 23 & 255L));
         out[45 + outPos] = (byte)((int)((in[7 + inPos] & 140737488355327L) >>> 31 & 255L));
         out[46 + outPos] = (byte)((int)((in[7 + inPos] & 140737488355327L) >>> 39 & 255L));
         out[47 + outPos] = (byte)((int)(in[8 + inPos] & 140737488355327L & 255L));
         out[48 + outPos] = (byte)((int)((in[8 + inPos] & 140737488355327L) >>> 8 & 255L));
         out[49 + outPos] = (byte)((int)((in[8 + inPos] & 140737488355327L) >>> 16 & 255L));
         out[50 + outPos] = (byte)((int)((in[8 + inPos] & 140737488355327L) >>> 24 & 255L));
         out[51 + outPos] = (byte)((int)((in[8 + inPos] & 140737488355327L) >>> 32 & 255L));
         out[52 + outPos] = (byte)((int)(((in[8 + inPos] & 140737488355327L) >>> 40 | (in[9 + inPos] & 140737488355327L) << 7) & 255L));
         out[53 + outPos] = (byte)((int)((in[9 + inPos] & 140737488355327L) >>> 1 & 255L));
         out[54 + outPos] = (byte)((int)((in[9 + inPos] & 140737488355327L) >>> 9 & 255L));
         out[55 + outPos] = (byte)((int)((in[9 + inPos] & 140737488355327L) >>> 17 & 255L));
         out[56 + outPos] = (byte)((int)((in[9 + inPos] & 140737488355327L) >>> 25 & 255L));
         out[57 + outPos] = (byte)((int)((in[9 + inPos] & 140737488355327L) >>> 33 & 255L));
         out[58 + outPos] = (byte)((int)(((in[9 + inPos] & 140737488355327L) >>> 41 | (in[10 + inPos] & 140737488355327L) << 6) & 255L));
         out[59 + outPos] = (byte)((int)((in[10 + inPos] & 140737488355327L) >>> 2 & 255L));
         out[60 + outPos] = (byte)((int)((in[10 + inPos] & 140737488355327L) >>> 10 & 255L));
         out[61 + outPos] = (byte)((int)((in[10 + inPos] & 140737488355327L) >>> 18 & 255L));
         out[62 + outPos] = (byte)((int)((in[10 + inPos] & 140737488355327L) >>> 26 & 255L));
         out[63 + outPos] = (byte)((int)((in[10 + inPos] & 140737488355327L) >>> 34 & 255L));
         out[64 + outPos] = (byte)((int)(((in[10 + inPos] & 140737488355327L) >>> 42 | (in[11 + inPos] & 140737488355327L) << 5) & 255L));
         out[65 + outPos] = (byte)((int)((in[11 + inPos] & 140737488355327L) >>> 3 & 255L));
         out[66 + outPos] = (byte)((int)((in[11 + inPos] & 140737488355327L) >>> 11 & 255L));
         out[67 + outPos] = (byte)((int)((in[11 + inPos] & 140737488355327L) >>> 19 & 255L));
         out[68 + outPos] = (byte)((int)((in[11 + inPos] & 140737488355327L) >>> 27 & 255L));
         out[69 + outPos] = (byte)((int)((in[11 + inPos] & 140737488355327L) >>> 35 & 255L));
         out[70 + outPos] = (byte)((int)(((in[11 + inPos] & 140737488355327L) >>> 43 | (in[12 + inPos] & 140737488355327L) << 4) & 255L));
         out[71 + outPos] = (byte)((int)((in[12 + inPos] & 140737488355327L) >>> 4 & 255L));
         out[72 + outPos] = (byte)((int)((in[12 + inPos] & 140737488355327L) >>> 12 & 255L));
         out[73 + outPos] = (byte)((int)((in[12 + inPos] & 140737488355327L) >>> 20 & 255L));
         out[74 + outPos] = (byte)((int)((in[12 + inPos] & 140737488355327L) >>> 28 & 255L));
         out[75 + outPos] = (byte)((int)((in[12 + inPos] & 140737488355327L) >>> 36 & 255L));
         out[76 + outPos] = (byte)((int)(((in[12 + inPos] & 140737488355327L) >>> 44 | (in[13 + inPos] & 140737488355327L) << 3) & 255L));
         out[77 + outPos] = (byte)((int)((in[13 + inPos] & 140737488355327L) >>> 5 & 255L));
         out[78 + outPos] = (byte)((int)((in[13 + inPos] & 140737488355327L) >>> 13 & 255L));
         out[79 + outPos] = (byte)((int)((in[13 + inPos] & 140737488355327L) >>> 21 & 255L));
         out[80 + outPos] = (byte)((int)((in[13 + inPos] & 140737488355327L) >>> 29 & 255L));
         out[81 + outPos] = (byte)((int)((in[13 + inPos] & 140737488355327L) >>> 37 & 255L));
         out[82 + outPos] = (byte)((int)(((in[13 + inPos] & 140737488355327L) >>> 45 | (in[14 + inPos] & 140737488355327L) << 2) & 255L));
         out[83 + outPos] = (byte)((int)((in[14 + inPos] & 140737488355327L) >>> 6 & 255L));
         out[84 + outPos] = (byte)((int)((in[14 + inPos] & 140737488355327L) >>> 14 & 255L));
         out[85 + outPos] = (byte)((int)((in[14 + inPos] & 140737488355327L) >>> 22 & 255L));
         out[86 + outPos] = (byte)((int)((in[14 + inPos] & 140737488355327L) >>> 30 & 255L));
         out[87 + outPos] = (byte)((int)((in[14 + inPos] & 140737488355327L) >>> 38 & 255L));
         out[88 + outPos] = (byte)((int)(((in[14 + inPos] & 140737488355327L) >>> 46 | (in[15 + inPos] & 140737488355327L) << 1) & 255L));
         out[89 + outPos] = (byte)((int)((in[15 + inPos] & 140737488355327L) >>> 7 & 255L));
         out[90 + outPos] = (byte)((int)((in[15 + inPos] & 140737488355327L) >>> 15 & 255L));
         out[91 + outPos] = (byte)((int)((in[15 + inPos] & 140737488355327L) >>> 23 & 255L));
         out[92 + outPos] = (byte)((int)((in[15 + inPos] & 140737488355327L) >>> 31 & 255L));
         out[93 + outPos] = (byte)((int)((in[15 + inPos] & 140737488355327L) >>> 39 & 255L));
         out[94 + outPos] = (byte)((int)(in[16 + inPos] & 140737488355327L & 255L));
         out[95 + outPos] = (byte)((int)((in[16 + inPos] & 140737488355327L) >>> 8 & 255L));
         out[96 + outPos] = (byte)((int)((in[16 + inPos] & 140737488355327L) >>> 16 & 255L));
         out[97 + outPos] = (byte)((int)((in[16 + inPos] & 140737488355327L) >>> 24 & 255L));
         out[98 + outPos] = (byte)((int)((in[16 + inPos] & 140737488355327L) >>> 32 & 255L));
         out[99 + outPos] = (byte)((int)(((in[16 + inPos] & 140737488355327L) >>> 40 | (in[17 + inPos] & 140737488355327L) << 7) & 255L));
         out[100 + outPos] = (byte)((int)((in[17 + inPos] & 140737488355327L) >>> 1 & 255L));
         out[101 + outPos] = (byte)((int)((in[17 + inPos] & 140737488355327L) >>> 9 & 255L));
         out[102 + outPos] = (byte)((int)((in[17 + inPos] & 140737488355327L) >>> 17 & 255L));
         out[103 + outPos] = (byte)((int)((in[17 + inPos] & 140737488355327L) >>> 25 & 255L));
         out[104 + outPos] = (byte)((int)((in[17 + inPos] & 140737488355327L) >>> 33 & 255L));
         out[105 + outPos] = (byte)((int)(((in[17 + inPos] & 140737488355327L) >>> 41 | (in[18 + inPos] & 140737488355327L) << 6) & 255L));
         out[106 + outPos] = (byte)((int)((in[18 + inPos] & 140737488355327L) >>> 2 & 255L));
         out[107 + outPos] = (byte)((int)((in[18 + inPos] & 140737488355327L) >>> 10 & 255L));
         out[108 + outPos] = (byte)((int)((in[18 + inPos] & 140737488355327L) >>> 18 & 255L));
         out[109 + outPos] = (byte)((int)((in[18 + inPos] & 140737488355327L) >>> 26 & 255L));
         out[110 + outPos] = (byte)((int)((in[18 + inPos] & 140737488355327L) >>> 34 & 255L));
         out[111 + outPos] = (byte)((int)(((in[18 + inPos] & 140737488355327L) >>> 42 | (in[19 + inPos] & 140737488355327L) << 5) & 255L));
         out[112 + outPos] = (byte)((int)((in[19 + inPos] & 140737488355327L) >>> 3 & 255L));
         out[113 + outPos] = (byte)((int)((in[19 + inPos] & 140737488355327L) >>> 11 & 255L));
         out[114 + outPos] = (byte)((int)((in[19 + inPos] & 140737488355327L) >>> 19 & 255L));
         out[115 + outPos] = (byte)((int)((in[19 + inPos] & 140737488355327L) >>> 27 & 255L));
         out[116 + outPos] = (byte)((int)((in[19 + inPos] & 140737488355327L) >>> 35 & 255L));
         out[117 + outPos] = (byte)((int)(((in[19 + inPos] & 140737488355327L) >>> 43 | (in[20 + inPos] & 140737488355327L) << 4) & 255L));
         out[118 + outPos] = (byte)((int)((in[20 + inPos] & 140737488355327L) >>> 4 & 255L));
         out[119 + outPos] = (byte)((int)((in[20 + inPos] & 140737488355327L) >>> 12 & 255L));
         out[120 + outPos] = (byte)((int)((in[20 + inPos] & 140737488355327L) >>> 20 & 255L));
         out[121 + outPos] = (byte)((int)((in[20 + inPos] & 140737488355327L) >>> 28 & 255L));
         out[122 + outPos] = (byte)((int)((in[20 + inPos] & 140737488355327L) >>> 36 & 255L));
         out[123 + outPos] = (byte)((int)(((in[20 + inPos] & 140737488355327L) >>> 44 | (in[21 + inPos] & 140737488355327L) << 3) & 255L));
         out[124 + outPos] = (byte)((int)((in[21 + inPos] & 140737488355327L) >>> 5 & 255L));
         out[125 + outPos] = (byte)((int)((in[21 + inPos] & 140737488355327L) >>> 13 & 255L));
         out[126 + outPos] = (byte)((int)((in[21 + inPos] & 140737488355327L) >>> 21 & 255L));
         out[127 + outPos] = (byte)((int)((in[21 + inPos] & 140737488355327L) >>> 29 & 255L));
         out[128 + outPos] = (byte)((int)((in[21 + inPos] & 140737488355327L) >>> 37 & 255L));
         out[129 + outPos] = (byte)((int)(((in[21 + inPos] & 140737488355327L) >>> 45 | (in[22 + inPos] & 140737488355327L) << 2) & 255L));
         out[130 + outPos] = (byte)((int)((in[22 + inPos] & 140737488355327L) >>> 6 & 255L));
         out[131 + outPos] = (byte)((int)((in[22 + inPos] & 140737488355327L) >>> 14 & 255L));
         out[132 + outPos] = (byte)((int)((in[22 + inPos] & 140737488355327L) >>> 22 & 255L));
         out[133 + outPos] = (byte)((int)((in[22 + inPos] & 140737488355327L) >>> 30 & 255L));
         out[134 + outPos] = (byte)((int)((in[22 + inPos] & 140737488355327L) >>> 38 & 255L));
         out[135 + outPos] = (byte)((int)(((in[22 + inPos] & 140737488355327L) >>> 46 | (in[23 + inPos] & 140737488355327L) << 1) & 255L));
         out[136 + outPos] = (byte)((int)((in[23 + inPos] & 140737488355327L) >>> 7 & 255L));
         out[137 + outPos] = (byte)((int)((in[23 + inPos] & 140737488355327L) >>> 15 & 255L));
         out[138 + outPos] = (byte)((int)((in[23 + inPos] & 140737488355327L) >>> 23 & 255L));
         out[139 + outPos] = (byte)((int)((in[23 + inPos] & 140737488355327L) >>> 31 & 255L));
         out[140 + outPos] = (byte)((int)((in[23 + inPos] & 140737488355327L) >>> 39 & 255L));
         out[141 + outPos] = (byte)((int)(in[24 + inPos] & 140737488355327L & 255L));
         out[142 + outPos] = (byte)((int)((in[24 + inPos] & 140737488355327L) >>> 8 & 255L));
         out[143 + outPos] = (byte)((int)((in[24 + inPos] & 140737488355327L) >>> 16 & 255L));
         out[144 + outPos] = (byte)((int)((in[24 + inPos] & 140737488355327L) >>> 24 & 255L));
         out[145 + outPos] = (byte)((int)((in[24 + inPos] & 140737488355327L) >>> 32 & 255L));
         out[146 + outPos] = (byte)((int)(((in[24 + inPos] & 140737488355327L) >>> 40 | (in[25 + inPos] & 140737488355327L) << 7) & 255L));
         out[147 + outPos] = (byte)((int)((in[25 + inPos] & 140737488355327L) >>> 1 & 255L));
         out[148 + outPos] = (byte)((int)((in[25 + inPos] & 140737488355327L) >>> 9 & 255L));
         out[149 + outPos] = (byte)((int)((in[25 + inPos] & 140737488355327L) >>> 17 & 255L));
         out[150 + outPos] = (byte)((int)((in[25 + inPos] & 140737488355327L) >>> 25 & 255L));
         out[151 + outPos] = (byte)((int)((in[25 + inPos] & 140737488355327L) >>> 33 & 255L));
         out[152 + outPos] = (byte)((int)(((in[25 + inPos] & 140737488355327L) >>> 41 | (in[26 + inPos] & 140737488355327L) << 6) & 255L));
         out[153 + outPos] = (byte)((int)((in[26 + inPos] & 140737488355327L) >>> 2 & 255L));
         out[154 + outPos] = (byte)((int)((in[26 + inPos] & 140737488355327L) >>> 10 & 255L));
         out[155 + outPos] = (byte)((int)((in[26 + inPos] & 140737488355327L) >>> 18 & 255L));
         out[156 + outPos] = (byte)((int)((in[26 + inPos] & 140737488355327L) >>> 26 & 255L));
         out[157 + outPos] = (byte)((int)((in[26 + inPos] & 140737488355327L) >>> 34 & 255L));
         out[158 + outPos] = (byte)((int)(((in[26 + inPos] & 140737488355327L) >>> 42 | (in[27 + inPos] & 140737488355327L) << 5) & 255L));
         out[159 + outPos] = (byte)((int)((in[27 + inPos] & 140737488355327L) >>> 3 & 255L));
         out[160 + outPos] = (byte)((int)((in[27 + inPos] & 140737488355327L) >>> 11 & 255L));
         out[161 + outPos] = (byte)((int)((in[27 + inPos] & 140737488355327L) >>> 19 & 255L));
         out[162 + outPos] = (byte)((int)((in[27 + inPos] & 140737488355327L) >>> 27 & 255L));
         out[163 + outPos] = (byte)((int)((in[27 + inPos] & 140737488355327L) >>> 35 & 255L));
         out[164 + outPos] = (byte)((int)(((in[27 + inPos] & 140737488355327L) >>> 43 | (in[28 + inPos] & 140737488355327L) << 4) & 255L));
         out[165 + outPos] = (byte)((int)((in[28 + inPos] & 140737488355327L) >>> 4 & 255L));
         out[166 + outPos] = (byte)((int)((in[28 + inPos] & 140737488355327L) >>> 12 & 255L));
         out[167 + outPos] = (byte)((int)((in[28 + inPos] & 140737488355327L) >>> 20 & 255L));
         out[168 + outPos] = (byte)((int)((in[28 + inPos] & 140737488355327L) >>> 28 & 255L));
         out[169 + outPos] = (byte)((int)((in[28 + inPos] & 140737488355327L) >>> 36 & 255L));
         out[170 + outPos] = (byte)((int)(((in[28 + inPos] & 140737488355327L) >>> 44 | (in[29 + inPos] & 140737488355327L) << 3) & 255L));
         out[171 + outPos] = (byte)((int)((in[29 + inPos] & 140737488355327L) >>> 5 & 255L));
         out[172 + outPos] = (byte)((int)((in[29 + inPos] & 140737488355327L) >>> 13 & 255L));
         out[173 + outPos] = (byte)((int)((in[29 + inPos] & 140737488355327L) >>> 21 & 255L));
         out[174 + outPos] = (byte)((int)((in[29 + inPos] & 140737488355327L) >>> 29 & 255L));
         out[175 + outPos] = (byte)((int)((in[29 + inPos] & 140737488355327L) >>> 37 & 255L));
         out[176 + outPos] = (byte)((int)(((in[29 + inPos] & 140737488355327L) >>> 45 | (in[30 + inPos] & 140737488355327L) << 2) & 255L));
         out[177 + outPos] = (byte)((int)((in[30 + inPos] & 140737488355327L) >>> 6 & 255L));
         out[178 + outPos] = (byte)((int)((in[30 + inPos] & 140737488355327L) >>> 14 & 255L));
         out[179 + outPos] = (byte)((int)((in[30 + inPos] & 140737488355327L) >>> 22 & 255L));
         out[180 + outPos] = (byte)((int)((in[30 + inPos] & 140737488355327L) >>> 30 & 255L));
         out[181 + outPos] = (byte)((int)((in[30 + inPos] & 140737488355327L) >>> 38 & 255L));
         out[182 + outPos] = (byte)((int)(((in[30 + inPos] & 140737488355327L) >>> 46 | (in[31 + inPos] & 140737488355327L) << 1) & 255L));
         out[183 + outPos] = (byte)((int)((in[31 + inPos] & 140737488355327L) >>> 7 & 255L));
         out[184 + outPos] = (byte)((int)((in[31 + inPos] & 140737488355327L) >>> 15 & 255L));
         out[185 + outPos] = (byte)((int)((in[31 + inPos] & 140737488355327L) >>> 23 & 255L));
         out[186 + outPos] = (byte)((int)((in[31 + inPos] & 140737488355327L) >>> 31 & 255L));
         out[187 + outPos] = (byte)((int)((in[31 + inPos] & 140737488355327L) >>> 39 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 140737488355327L;
         out[1 + outPos] = (long)in[5 + inPos] >> 7 & 1L | (long)in[6 + inPos] << 1 & 511L | (long)in[7 + inPos] << 9 & 131071L | (long)in[8 + inPos] << 17 & 33554431L | (long)in[9 + inPos] << 25 & 8589934591L | (long)in[10 + inPos] << 33 & 2199023255551L | (long)in[11 + inPos] << 41 & 140737488355327L;
         out[2 + outPos] = (long)in[11 + inPos] >> 6 & 3L | (long)in[12 + inPos] << 2 & 1023L | (long)in[13 + inPos] << 10 & 262143L | (long)in[14 + inPos] << 18 & 67108863L | (long)in[15 + inPos] << 26 & 17179869183L | (long)in[16 + inPos] << 34 & 4398046511103L | (long)in[17 + inPos] << 42 & 140737488355327L;
         out[3 + outPos] = (long)in[17 + inPos] >> 5 & 7L | (long)in[18 + inPos] << 3 & 2047L | (long)in[19 + inPos] << 11 & 524287L | (long)in[20 + inPos] << 19 & 134217727L | (long)in[21 + inPos] << 27 & 34359738367L | (long)in[22 + inPos] << 35 & 8796093022207L | (long)in[23 + inPos] << 43 & 140737488355327L;
         out[4 + outPos] = (long)in[23 + inPos] >> 4 & 15L | (long)in[24 + inPos] << 4 & 4095L | (long)in[25 + inPos] << 12 & 1048575L | (long)in[26 + inPos] << 20 & 268435455L | (long)in[27 + inPos] << 28 & 68719476735L | (long)in[28 + inPos] << 36 & 17592186044415L | (long)in[29 + inPos] << 44 & 140737488355327L;
         out[5 + outPos] = (long)in[29 + inPos] >> 3 & 31L | (long)in[30 + inPos] << 5 & 8191L | (long)in[31 + inPos] << 13 & 2097151L | (long)in[32 + inPos] << 21 & 536870911L | (long)in[33 + inPos] << 29 & 137438953471L | (long)in[34 + inPos] << 37 & 35184372088831L | (long)in[35 + inPos] << 45 & 140737488355327L;
         out[6 + outPos] = (long)in[35 + inPos] >> 2 & 63L | (long)in[36 + inPos] << 6 & 16383L | (long)in[37 + inPos] << 14 & 4194303L | (long)in[38 + inPos] << 22 & 1073741823L | (long)in[39 + inPos] << 30 & 274877906943L | (long)in[40 + inPos] << 38 & 70368744177663L | (long)in[41 + inPos] << 46 & 140737488355327L;
         out[7 + outPos] = (long)in[41 + inPos] >> 1 & 127L | (long)in[42 + inPos] << 7 & 32767L | (long)in[43 + inPos] << 15 & 8388607L | (long)in[44 + inPos] << 23 & 2147483647L | (long)in[45 + inPos] << 31 & 549755813887L | (long)in[46 + inPos] << 39 & 140737488355327L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 140737488355327L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 7 & 1L | (long)in.get(6 + inPos) << 1 & 511L | (long)in.get(7 + inPos) << 9 & 131071L | (long)in.get(8 + inPos) << 17 & 33554431L | (long)in.get(9 + inPos) << 25 & 8589934591L | (long)in.get(10 + inPos) << 33 & 2199023255551L | (long)in.get(11 + inPos) << 41 & 140737488355327L;
         out[2 + outPos] = (long)in.get(11 + inPos) >> 6 & 3L | (long)in.get(12 + inPos) << 2 & 1023L | (long)in.get(13 + inPos) << 10 & 262143L | (long)in.get(14 + inPos) << 18 & 67108863L | (long)in.get(15 + inPos) << 26 & 17179869183L | (long)in.get(16 + inPos) << 34 & 4398046511103L | (long)in.get(17 + inPos) << 42 & 140737488355327L;
         out[3 + outPos] = (long)in.get(17 + inPos) >> 5 & 7L | (long)in.get(18 + inPos) << 3 & 2047L | (long)in.get(19 + inPos) << 11 & 524287L | (long)in.get(20 + inPos) << 19 & 134217727L | (long)in.get(21 + inPos) << 27 & 34359738367L | (long)in.get(22 + inPos) << 35 & 8796093022207L | (long)in.get(23 + inPos) << 43 & 140737488355327L;
         out[4 + outPos] = (long)in.get(23 + inPos) >> 4 & 15L | (long)in.get(24 + inPos) << 4 & 4095L | (long)in.get(25 + inPos) << 12 & 1048575L | (long)in.get(26 + inPos) << 20 & 268435455L | (long)in.get(27 + inPos) << 28 & 68719476735L | (long)in.get(28 + inPos) << 36 & 17592186044415L | (long)in.get(29 + inPos) << 44 & 140737488355327L;
         out[5 + outPos] = (long)in.get(29 + inPos) >> 3 & 31L | (long)in.get(30 + inPos) << 5 & 8191L | (long)in.get(31 + inPos) << 13 & 2097151L | (long)in.get(32 + inPos) << 21 & 536870911L | (long)in.get(33 + inPos) << 29 & 137438953471L | (long)in.get(34 + inPos) << 37 & 35184372088831L | (long)in.get(35 + inPos) << 45 & 140737488355327L;
         out[6 + outPos] = (long)in.get(35 + inPos) >> 2 & 63L | (long)in.get(36 + inPos) << 6 & 16383L | (long)in.get(37 + inPos) << 14 & 4194303L | (long)in.get(38 + inPos) << 22 & 1073741823L | (long)in.get(39 + inPos) << 30 & 274877906943L | (long)in.get(40 + inPos) << 38 & 70368744177663L | (long)in.get(41 + inPos) << 46 & 140737488355327L;
         out[7 + outPos] = (long)in.get(41 + inPos) >> 1 & 127L | (long)in.get(42 + inPos) << 7 & 32767L | (long)in.get(43 + inPos) << 15 & 8388607L | (long)in.get(44 + inPos) << 23 & 2147483647L | (long)in.get(45 + inPos) << 31 & 549755813887L | (long)in.get(46 + inPos) << 39 & 140737488355327L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 140737488355327L;
         out[1 + outPos] = (long)in[5 + inPos] >> 7 & 1L | (long)in[6 + inPos] << 1 & 511L | (long)in[7 + inPos] << 9 & 131071L | (long)in[8 + inPos] << 17 & 33554431L | (long)in[9 + inPos] << 25 & 8589934591L | (long)in[10 + inPos] << 33 & 2199023255551L | (long)in[11 + inPos] << 41 & 140737488355327L;
         out[2 + outPos] = (long)in[11 + inPos] >> 6 & 3L | (long)in[12 + inPos] << 2 & 1023L | (long)in[13 + inPos] << 10 & 262143L | (long)in[14 + inPos] << 18 & 67108863L | (long)in[15 + inPos] << 26 & 17179869183L | (long)in[16 + inPos] << 34 & 4398046511103L | (long)in[17 + inPos] << 42 & 140737488355327L;
         out[3 + outPos] = (long)in[17 + inPos] >> 5 & 7L | (long)in[18 + inPos] << 3 & 2047L | (long)in[19 + inPos] << 11 & 524287L | (long)in[20 + inPos] << 19 & 134217727L | (long)in[21 + inPos] << 27 & 34359738367L | (long)in[22 + inPos] << 35 & 8796093022207L | (long)in[23 + inPos] << 43 & 140737488355327L;
         out[4 + outPos] = (long)in[23 + inPos] >> 4 & 15L | (long)in[24 + inPos] << 4 & 4095L | (long)in[25 + inPos] << 12 & 1048575L | (long)in[26 + inPos] << 20 & 268435455L | (long)in[27 + inPos] << 28 & 68719476735L | (long)in[28 + inPos] << 36 & 17592186044415L | (long)in[29 + inPos] << 44 & 140737488355327L;
         out[5 + outPos] = (long)in[29 + inPos] >> 3 & 31L | (long)in[30 + inPos] << 5 & 8191L | (long)in[31 + inPos] << 13 & 2097151L | (long)in[32 + inPos] << 21 & 536870911L | (long)in[33 + inPos] << 29 & 137438953471L | (long)in[34 + inPos] << 37 & 35184372088831L | (long)in[35 + inPos] << 45 & 140737488355327L;
         out[6 + outPos] = (long)in[35 + inPos] >> 2 & 63L | (long)in[36 + inPos] << 6 & 16383L | (long)in[37 + inPos] << 14 & 4194303L | (long)in[38 + inPos] << 22 & 1073741823L | (long)in[39 + inPos] << 30 & 274877906943L | (long)in[40 + inPos] << 38 & 70368744177663L | (long)in[41 + inPos] << 46 & 140737488355327L;
         out[7 + outPos] = (long)in[41 + inPos] >> 1 & 127L | (long)in[42 + inPos] << 7 & 32767L | (long)in[43 + inPos] << 15 & 8388607L | (long)in[44 + inPos] << 23 & 2147483647L | (long)in[45 + inPos] << 31 & 549755813887L | (long)in[46 + inPos] << 39 & 140737488355327L;
         out[8 + outPos] = (long)in[47 + inPos] & 255L | (long)in[48 + inPos] << 8 & 65535L | (long)in[49 + inPos] << 16 & 16777215L | (long)in[50 + inPos] << 24 & 4294967295L | (long)in[51 + inPos] << 32 & 1099511627775L | (long)in[52 + inPos] << 40 & 140737488355327L;
         out[9 + outPos] = (long)in[52 + inPos] >> 7 & 1L | (long)in[53 + inPos] << 1 & 511L | (long)in[54 + inPos] << 9 & 131071L | (long)in[55 + inPos] << 17 & 33554431L | (long)in[56 + inPos] << 25 & 8589934591L | (long)in[57 + inPos] << 33 & 2199023255551L | (long)in[58 + inPos] << 41 & 140737488355327L;
         out[10 + outPos] = (long)in[58 + inPos] >> 6 & 3L | (long)in[59 + inPos] << 2 & 1023L | (long)in[60 + inPos] << 10 & 262143L | (long)in[61 + inPos] << 18 & 67108863L | (long)in[62 + inPos] << 26 & 17179869183L | (long)in[63 + inPos] << 34 & 4398046511103L | (long)in[64 + inPos] << 42 & 140737488355327L;
         out[11 + outPos] = (long)in[64 + inPos] >> 5 & 7L | (long)in[65 + inPos] << 3 & 2047L | (long)in[66 + inPos] << 11 & 524287L | (long)in[67 + inPos] << 19 & 134217727L | (long)in[68 + inPos] << 27 & 34359738367L | (long)in[69 + inPos] << 35 & 8796093022207L | (long)in[70 + inPos] << 43 & 140737488355327L;
         out[12 + outPos] = (long)in[70 + inPos] >> 4 & 15L | (long)in[71 + inPos] << 4 & 4095L | (long)in[72 + inPos] << 12 & 1048575L | (long)in[73 + inPos] << 20 & 268435455L | (long)in[74 + inPos] << 28 & 68719476735L | (long)in[75 + inPos] << 36 & 17592186044415L | (long)in[76 + inPos] << 44 & 140737488355327L;
         out[13 + outPos] = (long)in[76 + inPos] >> 3 & 31L | (long)in[77 + inPos] << 5 & 8191L | (long)in[78 + inPos] << 13 & 2097151L | (long)in[79 + inPos] << 21 & 536870911L | (long)in[80 + inPos] << 29 & 137438953471L | (long)in[81 + inPos] << 37 & 35184372088831L | (long)in[82 + inPos] << 45 & 140737488355327L;
         out[14 + outPos] = (long)in[82 + inPos] >> 2 & 63L | (long)in[83 + inPos] << 6 & 16383L | (long)in[84 + inPos] << 14 & 4194303L | (long)in[85 + inPos] << 22 & 1073741823L | (long)in[86 + inPos] << 30 & 274877906943L | (long)in[87 + inPos] << 38 & 70368744177663L | (long)in[88 + inPos] << 46 & 140737488355327L;
         out[15 + outPos] = (long)in[88 + inPos] >> 1 & 127L | (long)in[89 + inPos] << 7 & 32767L | (long)in[90 + inPos] << 15 & 8388607L | (long)in[91 + inPos] << 23 & 2147483647L | (long)in[92 + inPos] << 31 & 549755813887L | (long)in[93 + inPos] << 39 & 140737488355327L;
         out[16 + outPos] = (long)in[94 + inPos] & 255L | (long)in[95 + inPos] << 8 & 65535L | (long)in[96 + inPos] << 16 & 16777215L | (long)in[97 + inPos] << 24 & 4294967295L | (long)in[98 + inPos] << 32 & 1099511627775L | (long)in[99 + inPos] << 40 & 140737488355327L;
         out[17 + outPos] = (long)in[99 + inPos] >> 7 & 1L | (long)in[100 + inPos] << 1 & 511L | (long)in[101 + inPos] << 9 & 131071L | (long)in[102 + inPos] << 17 & 33554431L | (long)in[103 + inPos] << 25 & 8589934591L | (long)in[104 + inPos] << 33 & 2199023255551L | (long)in[105 + inPos] << 41 & 140737488355327L;
         out[18 + outPos] = (long)in[105 + inPos] >> 6 & 3L | (long)in[106 + inPos] << 2 & 1023L | (long)in[107 + inPos] << 10 & 262143L | (long)in[108 + inPos] << 18 & 67108863L | (long)in[109 + inPos] << 26 & 17179869183L | (long)in[110 + inPos] << 34 & 4398046511103L | (long)in[111 + inPos] << 42 & 140737488355327L;
         out[19 + outPos] = (long)in[111 + inPos] >> 5 & 7L | (long)in[112 + inPos] << 3 & 2047L | (long)in[113 + inPos] << 11 & 524287L | (long)in[114 + inPos] << 19 & 134217727L | (long)in[115 + inPos] << 27 & 34359738367L | (long)in[116 + inPos] << 35 & 8796093022207L | (long)in[117 + inPos] << 43 & 140737488355327L;
         out[20 + outPos] = (long)in[117 + inPos] >> 4 & 15L | (long)in[118 + inPos] << 4 & 4095L | (long)in[119 + inPos] << 12 & 1048575L | (long)in[120 + inPos] << 20 & 268435455L | (long)in[121 + inPos] << 28 & 68719476735L | (long)in[122 + inPos] << 36 & 17592186044415L | (long)in[123 + inPos] << 44 & 140737488355327L;
         out[21 + outPos] = (long)in[123 + inPos] >> 3 & 31L | (long)in[124 + inPos] << 5 & 8191L | (long)in[125 + inPos] << 13 & 2097151L | (long)in[126 + inPos] << 21 & 536870911L | (long)in[127 + inPos] << 29 & 137438953471L | (long)in[128 + inPos] << 37 & 35184372088831L | (long)in[129 + inPos] << 45 & 140737488355327L;
         out[22 + outPos] = (long)in[129 + inPos] >> 2 & 63L | (long)in[130 + inPos] << 6 & 16383L | (long)in[131 + inPos] << 14 & 4194303L | (long)in[132 + inPos] << 22 & 1073741823L | (long)in[133 + inPos] << 30 & 274877906943L | (long)in[134 + inPos] << 38 & 70368744177663L | (long)in[135 + inPos] << 46 & 140737488355327L;
         out[23 + outPos] = (long)in[135 + inPos] >> 1 & 127L | (long)in[136 + inPos] << 7 & 32767L | (long)in[137 + inPos] << 15 & 8388607L | (long)in[138 + inPos] << 23 & 2147483647L | (long)in[139 + inPos] << 31 & 549755813887L | (long)in[140 + inPos] << 39 & 140737488355327L;
         out[24 + outPos] = (long)in[141 + inPos] & 255L | (long)in[142 + inPos] << 8 & 65535L | (long)in[143 + inPos] << 16 & 16777215L | (long)in[144 + inPos] << 24 & 4294967295L | (long)in[145 + inPos] << 32 & 1099511627775L | (long)in[146 + inPos] << 40 & 140737488355327L;
         out[25 + outPos] = (long)in[146 + inPos] >> 7 & 1L | (long)in[147 + inPos] << 1 & 511L | (long)in[148 + inPos] << 9 & 131071L | (long)in[149 + inPos] << 17 & 33554431L | (long)in[150 + inPos] << 25 & 8589934591L | (long)in[151 + inPos] << 33 & 2199023255551L | (long)in[152 + inPos] << 41 & 140737488355327L;
         out[26 + outPos] = (long)in[152 + inPos] >> 6 & 3L | (long)in[153 + inPos] << 2 & 1023L | (long)in[154 + inPos] << 10 & 262143L | (long)in[155 + inPos] << 18 & 67108863L | (long)in[156 + inPos] << 26 & 17179869183L | (long)in[157 + inPos] << 34 & 4398046511103L | (long)in[158 + inPos] << 42 & 140737488355327L;
         out[27 + outPos] = (long)in[158 + inPos] >> 5 & 7L | (long)in[159 + inPos] << 3 & 2047L | (long)in[160 + inPos] << 11 & 524287L | (long)in[161 + inPos] << 19 & 134217727L | (long)in[162 + inPos] << 27 & 34359738367L | (long)in[163 + inPos] << 35 & 8796093022207L | (long)in[164 + inPos] << 43 & 140737488355327L;
         out[28 + outPos] = (long)in[164 + inPos] >> 4 & 15L | (long)in[165 + inPos] << 4 & 4095L | (long)in[166 + inPos] << 12 & 1048575L | (long)in[167 + inPos] << 20 & 268435455L | (long)in[168 + inPos] << 28 & 68719476735L | (long)in[169 + inPos] << 36 & 17592186044415L | (long)in[170 + inPos] << 44 & 140737488355327L;
         out[29 + outPos] = (long)in[170 + inPos] >> 3 & 31L | (long)in[171 + inPos] << 5 & 8191L | (long)in[172 + inPos] << 13 & 2097151L | (long)in[173 + inPos] << 21 & 536870911L | (long)in[174 + inPos] << 29 & 137438953471L | (long)in[175 + inPos] << 37 & 35184372088831L | (long)in[176 + inPos] << 45 & 140737488355327L;
         out[30 + outPos] = (long)in[176 + inPos] >> 2 & 63L | (long)in[177 + inPos] << 6 & 16383L | (long)in[178 + inPos] << 14 & 4194303L | (long)in[179 + inPos] << 22 & 1073741823L | (long)in[180 + inPos] << 30 & 274877906943L | (long)in[181 + inPos] << 38 & 70368744177663L | (long)in[182 + inPos] << 46 & 140737488355327L;
         out[31 + outPos] = (long)in[182 + inPos] >> 1 & 127L | (long)in[183 + inPos] << 7 & 32767L | (long)in[184 + inPos] << 15 & 8388607L | (long)in[185 + inPos] << 23 & 2147483647L | (long)in[186 + inPos] << 31 & 549755813887L | (long)in[187 + inPos] << 39 & 140737488355327L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 140737488355327L;
         out[1 + outPos] = (long)in.get(5 + inPos) >> 7 & 1L | (long)in.get(6 + inPos) << 1 & 511L | (long)in.get(7 + inPos) << 9 & 131071L | (long)in.get(8 + inPos) << 17 & 33554431L | (long)in.get(9 + inPos) << 25 & 8589934591L | (long)in.get(10 + inPos) << 33 & 2199023255551L | (long)in.get(11 + inPos) << 41 & 140737488355327L;
         out[2 + outPos] = (long)in.get(11 + inPos) >> 6 & 3L | (long)in.get(12 + inPos) << 2 & 1023L | (long)in.get(13 + inPos) << 10 & 262143L | (long)in.get(14 + inPos) << 18 & 67108863L | (long)in.get(15 + inPos) << 26 & 17179869183L | (long)in.get(16 + inPos) << 34 & 4398046511103L | (long)in.get(17 + inPos) << 42 & 140737488355327L;
         out[3 + outPos] = (long)in.get(17 + inPos) >> 5 & 7L | (long)in.get(18 + inPos) << 3 & 2047L | (long)in.get(19 + inPos) << 11 & 524287L | (long)in.get(20 + inPos) << 19 & 134217727L | (long)in.get(21 + inPos) << 27 & 34359738367L | (long)in.get(22 + inPos) << 35 & 8796093022207L | (long)in.get(23 + inPos) << 43 & 140737488355327L;
         out[4 + outPos] = (long)in.get(23 + inPos) >> 4 & 15L | (long)in.get(24 + inPos) << 4 & 4095L | (long)in.get(25 + inPos) << 12 & 1048575L | (long)in.get(26 + inPos) << 20 & 268435455L | (long)in.get(27 + inPos) << 28 & 68719476735L | (long)in.get(28 + inPos) << 36 & 17592186044415L | (long)in.get(29 + inPos) << 44 & 140737488355327L;
         out[5 + outPos] = (long)in.get(29 + inPos) >> 3 & 31L | (long)in.get(30 + inPos) << 5 & 8191L | (long)in.get(31 + inPos) << 13 & 2097151L | (long)in.get(32 + inPos) << 21 & 536870911L | (long)in.get(33 + inPos) << 29 & 137438953471L | (long)in.get(34 + inPos) << 37 & 35184372088831L | (long)in.get(35 + inPos) << 45 & 140737488355327L;
         out[6 + outPos] = (long)in.get(35 + inPos) >> 2 & 63L | (long)in.get(36 + inPos) << 6 & 16383L | (long)in.get(37 + inPos) << 14 & 4194303L | (long)in.get(38 + inPos) << 22 & 1073741823L | (long)in.get(39 + inPos) << 30 & 274877906943L | (long)in.get(40 + inPos) << 38 & 70368744177663L | (long)in.get(41 + inPos) << 46 & 140737488355327L;
         out[7 + outPos] = (long)in.get(41 + inPos) >> 1 & 127L | (long)in.get(42 + inPos) << 7 & 32767L | (long)in.get(43 + inPos) << 15 & 8388607L | (long)in.get(44 + inPos) << 23 & 2147483647L | (long)in.get(45 + inPos) << 31 & 549755813887L | (long)in.get(46 + inPos) << 39 & 140737488355327L;
         out[8 + outPos] = (long)in.get(47 + inPos) & 255L | (long)in.get(48 + inPos) << 8 & 65535L | (long)in.get(49 + inPos) << 16 & 16777215L | (long)in.get(50 + inPos) << 24 & 4294967295L | (long)in.get(51 + inPos) << 32 & 1099511627775L | (long)in.get(52 + inPos) << 40 & 140737488355327L;
         out[9 + outPos] = (long)in.get(52 + inPos) >> 7 & 1L | (long)in.get(53 + inPos) << 1 & 511L | (long)in.get(54 + inPos) << 9 & 131071L | (long)in.get(55 + inPos) << 17 & 33554431L | (long)in.get(56 + inPos) << 25 & 8589934591L | (long)in.get(57 + inPos) << 33 & 2199023255551L | (long)in.get(58 + inPos) << 41 & 140737488355327L;
         out[10 + outPos] = (long)in.get(58 + inPos) >> 6 & 3L | (long)in.get(59 + inPos) << 2 & 1023L | (long)in.get(60 + inPos) << 10 & 262143L | (long)in.get(61 + inPos) << 18 & 67108863L | (long)in.get(62 + inPos) << 26 & 17179869183L | (long)in.get(63 + inPos) << 34 & 4398046511103L | (long)in.get(64 + inPos) << 42 & 140737488355327L;
         out[11 + outPos] = (long)in.get(64 + inPos) >> 5 & 7L | (long)in.get(65 + inPos) << 3 & 2047L | (long)in.get(66 + inPos) << 11 & 524287L | (long)in.get(67 + inPos) << 19 & 134217727L | (long)in.get(68 + inPos) << 27 & 34359738367L | (long)in.get(69 + inPos) << 35 & 8796093022207L | (long)in.get(70 + inPos) << 43 & 140737488355327L;
         out[12 + outPos] = (long)in.get(70 + inPos) >> 4 & 15L | (long)in.get(71 + inPos) << 4 & 4095L | (long)in.get(72 + inPos) << 12 & 1048575L | (long)in.get(73 + inPos) << 20 & 268435455L | (long)in.get(74 + inPos) << 28 & 68719476735L | (long)in.get(75 + inPos) << 36 & 17592186044415L | (long)in.get(76 + inPos) << 44 & 140737488355327L;
         out[13 + outPos] = (long)in.get(76 + inPos) >> 3 & 31L | (long)in.get(77 + inPos) << 5 & 8191L | (long)in.get(78 + inPos) << 13 & 2097151L | (long)in.get(79 + inPos) << 21 & 536870911L | (long)in.get(80 + inPos) << 29 & 137438953471L | (long)in.get(81 + inPos) << 37 & 35184372088831L | (long)in.get(82 + inPos) << 45 & 140737488355327L;
         out[14 + outPos] = (long)in.get(82 + inPos) >> 2 & 63L | (long)in.get(83 + inPos) << 6 & 16383L | (long)in.get(84 + inPos) << 14 & 4194303L | (long)in.get(85 + inPos) << 22 & 1073741823L | (long)in.get(86 + inPos) << 30 & 274877906943L | (long)in.get(87 + inPos) << 38 & 70368744177663L | (long)in.get(88 + inPos) << 46 & 140737488355327L;
         out[15 + outPos] = (long)in.get(88 + inPos) >> 1 & 127L | (long)in.get(89 + inPos) << 7 & 32767L | (long)in.get(90 + inPos) << 15 & 8388607L | (long)in.get(91 + inPos) << 23 & 2147483647L | (long)in.get(92 + inPos) << 31 & 549755813887L | (long)in.get(93 + inPos) << 39 & 140737488355327L;
         out[16 + outPos] = (long)in.get(94 + inPos) & 255L | (long)in.get(95 + inPos) << 8 & 65535L | (long)in.get(96 + inPos) << 16 & 16777215L | (long)in.get(97 + inPos) << 24 & 4294967295L | (long)in.get(98 + inPos) << 32 & 1099511627775L | (long)in.get(99 + inPos) << 40 & 140737488355327L;
         out[17 + outPos] = (long)in.get(99 + inPos) >> 7 & 1L | (long)in.get(100 + inPos) << 1 & 511L | (long)in.get(101 + inPos) << 9 & 131071L | (long)in.get(102 + inPos) << 17 & 33554431L | (long)in.get(103 + inPos) << 25 & 8589934591L | (long)in.get(104 + inPos) << 33 & 2199023255551L | (long)in.get(105 + inPos) << 41 & 140737488355327L;
         out[18 + outPos] = (long)in.get(105 + inPos) >> 6 & 3L | (long)in.get(106 + inPos) << 2 & 1023L | (long)in.get(107 + inPos) << 10 & 262143L | (long)in.get(108 + inPos) << 18 & 67108863L | (long)in.get(109 + inPos) << 26 & 17179869183L | (long)in.get(110 + inPos) << 34 & 4398046511103L | (long)in.get(111 + inPos) << 42 & 140737488355327L;
         out[19 + outPos] = (long)in.get(111 + inPos) >> 5 & 7L | (long)in.get(112 + inPos) << 3 & 2047L | (long)in.get(113 + inPos) << 11 & 524287L | (long)in.get(114 + inPos) << 19 & 134217727L | (long)in.get(115 + inPos) << 27 & 34359738367L | (long)in.get(116 + inPos) << 35 & 8796093022207L | (long)in.get(117 + inPos) << 43 & 140737488355327L;
         out[20 + outPos] = (long)in.get(117 + inPos) >> 4 & 15L | (long)in.get(118 + inPos) << 4 & 4095L | (long)in.get(119 + inPos) << 12 & 1048575L | (long)in.get(120 + inPos) << 20 & 268435455L | (long)in.get(121 + inPos) << 28 & 68719476735L | (long)in.get(122 + inPos) << 36 & 17592186044415L | (long)in.get(123 + inPos) << 44 & 140737488355327L;
         out[21 + outPos] = (long)in.get(123 + inPos) >> 3 & 31L | (long)in.get(124 + inPos) << 5 & 8191L | (long)in.get(125 + inPos) << 13 & 2097151L | (long)in.get(126 + inPos) << 21 & 536870911L | (long)in.get(127 + inPos) << 29 & 137438953471L | (long)in.get(128 + inPos) << 37 & 35184372088831L | (long)in.get(129 + inPos) << 45 & 140737488355327L;
         out[22 + outPos] = (long)in.get(129 + inPos) >> 2 & 63L | (long)in.get(130 + inPos) << 6 & 16383L | (long)in.get(131 + inPos) << 14 & 4194303L | (long)in.get(132 + inPos) << 22 & 1073741823L | (long)in.get(133 + inPos) << 30 & 274877906943L | (long)in.get(134 + inPos) << 38 & 70368744177663L | (long)in.get(135 + inPos) << 46 & 140737488355327L;
         out[23 + outPos] = (long)in.get(135 + inPos) >> 1 & 127L | (long)in.get(136 + inPos) << 7 & 32767L | (long)in.get(137 + inPos) << 15 & 8388607L | (long)in.get(138 + inPos) << 23 & 2147483647L | (long)in.get(139 + inPos) << 31 & 549755813887L | (long)in.get(140 + inPos) << 39 & 140737488355327L;
         out[24 + outPos] = (long)in.get(141 + inPos) & 255L | (long)in.get(142 + inPos) << 8 & 65535L | (long)in.get(143 + inPos) << 16 & 16777215L | (long)in.get(144 + inPos) << 24 & 4294967295L | (long)in.get(145 + inPos) << 32 & 1099511627775L | (long)in.get(146 + inPos) << 40 & 140737488355327L;
         out[25 + outPos] = (long)in.get(146 + inPos) >> 7 & 1L | (long)in.get(147 + inPos) << 1 & 511L | (long)in.get(148 + inPos) << 9 & 131071L | (long)in.get(149 + inPos) << 17 & 33554431L | (long)in.get(150 + inPos) << 25 & 8589934591L | (long)in.get(151 + inPos) << 33 & 2199023255551L | (long)in.get(152 + inPos) << 41 & 140737488355327L;
         out[26 + outPos] = (long)in.get(152 + inPos) >> 6 & 3L | (long)in.get(153 + inPos) << 2 & 1023L | (long)in.get(154 + inPos) << 10 & 262143L | (long)in.get(155 + inPos) << 18 & 67108863L | (long)in.get(156 + inPos) << 26 & 17179869183L | (long)in.get(157 + inPos) << 34 & 4398046511103L | (long)in.get(158 + inPos) << 42 & 140737488355327L;
         out[27 + outPos] = (long)in.get(158 + inPos) >> 5 & 7L | (long)in.get(159 + inPos) << 3 & 2047L | (long)in.get(160 + inPos) << 11 & 524287L | (long)in.get(161 + inPos) << 19 & 134217727L | (long)in.get(162 + inPos) << 27 & 34359738367L | (long)in.get(163 + inPos) << 35 & 8796093022207L | (long)in.get(164 + inPos) << 43 & 140737488355327L;
         out[28 + outPos] = (long)in.get(164 + inPos) >> 4 & 15L | (long)in.get(165 + inPos) << 4 & 4095L | (long)in.get(166 + inPos) << 12 & 1048575L | (long)in.get(167 + inPos) << 20 & 268435455L | (long)in.get(168 + inPos) << 28 & 68719476735L | (long)in.get(169 + inPos) << 36 & 17592186044415L | (long)in.get(170 + inPos) << 44 & 140737488355327L;
         out[29 + outPos] = (long)in.get(170 + inPos) >> 3 & 31L | (long)in.get(171 + inPos) << 5 & 8191L | (long)in.get(172 + inPos) << 13 & 2097151L | (long)in.get(173 + inPos) << 21 & 536870911L | (long)in.get(174 + inPos) << 29 & 137438953471L | (long)in.get(175 + inPos) << 37 & 35184372088831L | (long)in.get(176 + inPos) << 45 & 140737488355327L;
         out[30 + outPos] = (long)in.get(176 + inPos) >> 2 & 63L | (long)in.get(177 + inPos) << 6 & 16383L | (long)in.get(178 + inPos) << 14 & 4194303L | (long)in.get(179 + inPos) << 22 & 1073741823L | (long)in.get(180 + inPos) << 30 & 274877906943L | (long)in.get(181 + inPos) << 38 & 70368744177663L | (long)in.get(182 + inPos) << 46 & 140737488355327L;
         out[31 + outPos] = (long)in.get(182 + inPos) >> 1 & 127L | (long)in.get(183 + inPos) << 7 & 32767L | (long)in.get(184 + inPos) << 15 & 8388607L | (long)in.get(185 + inPos) << 23 & 2147483647L | (long)in.get(186 + inPos) << 31 & 549755813887L | (long)in.get(187 + inPos) << 39 & 140737488355327L;
      }
   }

   private static final class Packer48 extends BytePackerForLong {
      private Packer48() {
         super(48);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 281474976710655L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(in[1 + inPos] & 281474976710655L & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[12 + outPos] = (byte)((int)(in[2 + inPos] & 281474976710655L & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[18 + outPos] = (byte)((int)(in[3 + inPos] & 281474976710655L & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[24 + outPos] = (byte)((int)(in[4 + inPos] & 281474976710655L & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[30 + outPos] = (byte)((int)(in[5 + inPos] & 281474976710655L & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[36 + outPos] = (byte)((int)(in[6 + inPos] & 281474976710655L & 255L));
         out[37 + outPos] = (byte)((int)((in[6 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[38 + outPos] = (byte)((int)((in[6 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[39 + outPos] = (byte)((int)((in[6 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[42 + outPos] = (byte)((int)(in[7 + inPos] & 281474976710655L & 255L));
         out[43 + outPos] = (byte)((int)((in[7 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[44 + outPos] = (byte)((int)((in[7 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[45 + outPos] = (byte)((int)((in[7 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[46 + outPos] = (byte)((int)((in[7 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[47 + outPos] = (byte)((int)((in[7 + inPos] & 281474976710655L) >>> 40 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 281474976710655L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(in[1 + inPos] & 281474976710655L & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[12 + outPos] = (byte)((int)(in[2 + inPos] & 281474976710655L & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[18 + outPos] = (byte)((int)(in[3 + inPos] & 281474976710655L & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[24 + outPos] = (byte)((int)(in[4 + inPos] & 281474976710655L & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[30 + outPos] = (byte)((int)(in[5 + inPos] & 281474976710655L & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[36 + outPos] = (byte)((int)(in[6 + inPos] & 281474976710655L & 255L));
         out[37 + outPos] = (byte)((int)((in[6 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[38 + outPos] = (byte)((int)((in[6 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[39 + outPos] = (byte)((int)((in[6 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[42 + outPos] = (byte)((int)(in[7 + inPos] & 281474976710655L & 255L));
         out[43 + outPos] = (byte)((int)((in[7 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[44 + outPos] = (byte)((int)((in[7 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[45 + outPos] = (byte)((int)((in[7 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[46 + outPos] = (byte)((int)((in[7 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[47 + outPos] = (byte)((int)((in[7 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[48 + outPos] = (byte)((int)(in[8 + inPos] & 281474976710655L & 255L));
         out[49 + outPos] = (byte)((int)((in[8 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[50 + outPos] = (byte)((int)((in[8 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[51 + outPos] = (byte)((int)((in[8 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[52 + outPos] = (byte)((int)((in[8 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[53 + outPos] = (byte)((int)((in[8 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[54 + outPos] = (byte)((int)(in[9 + inPos] & 281474976710655L & 255L));
         out[55 + outPos] = (byte)((int)((in[9 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[56 + outPos] = (byte)((int)((in[9 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[57 + outPos] = (byte)((int)((in[9 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[58 + outPos] = (byte)((int)((in[9 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[59 + outPos] = (byte)((int)((in[9 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[60 + outPos] = (byte)((int)(in[10 + inPos] & 281474976710655L & 255L));
         out[61 + outPos] = (byte)((int)((in[10 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[62 + outPos] = (byte)((int)((in[10 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[63 + outPos] = (byte)((int)((in[10 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[64 + outPos] = (byte)((int)((in[10 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[65 + outPos] = (byte)((int)((in[10 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[66 + outPos] = (byte)((int)(in[11 + inPos] & 281474976710655L & 255L));
         out[67 + outPos] = (byte)((int)((in[11 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[68 + outPos] = (byte)((int)((in[11 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[69 + outPos] = (byte)((int)((in[11 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[70 + outPos] = (byte)((int)((in[11 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[71 + outPos] = (byte)((int)((in[11 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[72 + outPos] = (byte)((int)(in[12 + inPos] & 281474976710655L & 255L));
         out[73 + outPos] = (byte)((int)((in[12 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[74 + outPos] = (byte)((int)((in[12 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[75 + outPos] = (byte)((int)((in[12 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[76 + outPos] = (byte)((int)((in[12 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[77 + outPos] = (byte)((int)((in[12 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[78 + outPos] = (byte)((int)(in[13 + inPos] & 281474976710655L & 255L));
         out[79 + outPos] = (byte)((int)((in[13 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[80 + outPos] = (byte)((int)((in[13 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[81 + outPos] = (byte)((int)((in[13 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[82 + outPos] = (byte)((int)((in[13 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[83 + outPos] = (byte)((int)((in[13 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[84 + outPos] = (byte)((int)(in[14 + inPos] & 281474976710655L & 255L));
         out[85 + outPos] = (byte)((int)((in[14 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[86 + outPos] = (byte)((int)((in[14 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[87 + outPos] = (byte)((int)((in[14 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[88 + outPos] = (byte)((int)((in[14 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[89 + outPos] = (byte)((int)((in[14 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[90 + outPos] = (byte)((int)(in[15 + inPos] & 281474976710655L & 255L));
         out[91 + outPos] = (byte)((int)((in[15 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[92 + outPos] = (byte)((int)((in[15 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[93 + outPos] = (byte)((int)((in[15 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[94 + outPos] = (byte)((int)((in[15 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[95 + outPos] = (byte)((int)((in[15 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[96 + outPos] = (byte)((int)(in[16 + inPos] & 281474976710655L & 255L));
         out[97 + outPos] = (byte)((int)((in[16 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[98 + outPos] = (byte)((int)((in[16 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[99 + outPos] = (byte)((int)((in[16 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[100 + outPos] = (byte)((int)((in[16 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[101 + outPos] = (byte)((int)((in[16 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[102 + outPos] = (byte)((int)(in[17 + inPos] & 281474976710655L & 255L));
         out[103 + outPos] = (byte)((int)((in[17 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[104 + outPos] = (byte)((int)((in[17 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[105 + outPos] = (byte)((int)((in[17 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[106 + outPos] = (byte)((int)((in[17 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[107 + outPos] = (byte)((int)((in[17 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[108 + outPos] = (byte)((int)(in[18 + inPos] & 281474976710655L & 255L));
         out[109 + outPos] = (byte)((int)((in[18 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[110 + outPos] = (byte)((int)((in[18 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[111 + outPos] = (byte)((int)((in[18 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[112 + outPos] = (byte)((int)((in[18 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[113 + outPos] = (byte)((int)((in[18 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[114 + outPos] = (byte)((int)(in[19 + inPos] & 281474976710655L & 255L));
         out[115 + outPos] = (byte)((int)((in[19 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[116 + outPos] = (byte)((int)((in[19 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[117 + outPos] = (byte)((int)((in[19 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[118 + outPos] = (byte)((int)((in[19 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[119 + outPos] = (byte)((int)((in[19 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[120 + outPos] = (byte)((int)(in[20 + inPos] & 281474976710655L & 255L));
         out[121 + outPos] = (byte)((int)((in[20 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[122 + outPos] = (byte)((int)((in[20 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[123 + outPos] = (byte)((int)((in[20 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[124 + outPos] = (byte)((int)((in[20 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[125 + outPos] = (byte)((int)((in[20 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[126 + outPos] = (byte)((int)(in[21 + inPos] & 281474976710655L & 255L));
         out[127 + outPos] = (byte)((int)((in[21 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[128 + outPos] = (byte)((int)((in[21 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[129 + outPos] = (byte)((int)((in[21 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[130 + outPos] = (byte)((int)((in[21 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[131 + outPos] = (byte)((int)((in[21 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[132 + outPos] = (byte)((int)(in[22 + inPos] & 281474976710655L & 255L));
         out[133 + outPos] = (byte)((int)((in[22 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[134 + outPos] = (byte)((int)((in[22 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[135 + outPos] = (byte)((int)((in[22 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[136 + outPos] = (byte)((int)((in[22 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[137 + outPos] = (byte)((int)((in[22 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[138 + outPos] = (byte)((int)(in[23 + inPos] & 281474976710655L & 255L));
         out[139 + outPos] = (byte)((int)((in[23 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[140 + outPos] = (byte)((int)((in[23 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[141 + outPos] = (byte)((int)((in[23 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[142 + outPos] = (byte)((int)((in[23 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[143 + outPos] = (byte)((int)((in[23 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[144 + outPos] = (byte)((int)(in[24 + inPos] & 281474976710655L & 255L));
         out[145 + outPos] = (byte)((int)((in[24 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[146 + outPos] = (byte)((int)((in[24 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[147 + outPos] = (byte)((int)((in[24 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[148 + outPos] = (byte)((int)((in[24 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[149 + outPos] = (byte)((int)((in[24 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[150 + outPos] = (byte)((int)(in[25 + inPos] & 281474976710655L & 255L));
         out[151 + outPos] = (byte)((int)((in[25 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[152 + outPos] = (byte)((int)((in[25 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[153 + outPos] = (byte)((int)((in[25 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[154 + outPos] = (byte)((int)((in[25 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[155 + outPos] = (byte)((int)((in[25 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[156 + outPos] = (byte)((int)(in[26 + inPos] & 281474976710655L & 255L));
         out[157 + outPos] = (byte)((int)((in[26 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[158 + outPos] = (byte)((int)((in[26 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[159 + outPos] = (byte)((int)((in[26 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[160 + outPos] = (byte)((int)((in[26 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[161 + outPos] = (byte)((int)((in[26 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[162 + outPos] = (byte)((int)(in[27 + inPos] & 281474976710655L & 255L));
         out[163 + outPos] = (byte)((int)((in[27 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[164 + outPos] = (byte)((int)((in[27 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[165 + outPos] = (byte)((int)((in[27 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[166 + outPos] = (byte)((int)((in[27 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[167 + outPos] = (byte)((int)((in[27 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[168 + outPos] = (byte)((int)(in[28 + inPos] & 281474976710655L & 255L));
         out[169 + outPos] = (byte)((int)((in[28 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[170 + outPos] = (byte)((int)((in[28 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[171 + outPos] = (byte)((int)((in[28 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[172 + outPos] = (byte)((int)((in[28 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[173 + outPos] = (byte)((int)((in[28 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[174 + outPos] = (byte)((int)(in[29 + inPos] & 281474976710655L & 255L));
         out[175 + outPos] = (byte)((int)((in[29 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[176 + outPos] = (byte)((int)((in[29 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[177 + outPos] = (byte)((int)((in[29 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[178 + outPos] = (byte)((int)((in[29 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[179 + outPos] = (byte)((int)((in[29 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[180 + outPos] = (byte)((int)(in[30 + inPos] & 281474976710655L & 255L));
         out[181 + outPos] = (byte)((int)((in[30 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[182 + outPos] = (byte)((int)((in[30 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[183 + outPos] = (byte)((int)((in[30 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[184 + outPos] = (byte)((int)((in[30 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[185 + outPos] = (byte)((int)((in[30 + inPos] & 281474976710655L) >>> 40 & 255L));
         out[186 + outPos] = (byte)((int)(in[31 + inPos] & 281474976710655L & 255L));
         out[187 + outPos] = (byte)((int)((in[31 + inPos] & 281474976710655L) >>> 8 & 255L));
         out[188 + outPos] = (byte)((int)((in[31 + inPos] & 281474976710655L) >>> 16 & 255L));
         out[189 + outPos] = (byte)((int)((in[31 + inPos] & 281474976710655L) >>> 24 & 255L));
         out[190 + outPos] = (byte)((int)((in[31 + inPos] & 281474976710655L) >>> 32 & 255L));
         out[191 + outPos] = (byte)((int)((in[31 + inPos] & 281474976710655L) >>> 40 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L;
         out[1 + outPos] = (long)in[6 + inPos] & 255L | (long)in[7 + inPos] << 8 & 65535L | (long)in[8 + inPos] << 16 & 16777215L | (long)in[9 + inPos] << 24 & 4294967295L | (long)in[10 + inPos] << 32 & 1099511627775L | (long)in[11 + inPos] << 40 & 281474976710655L;
         out[2 + outPos] = (long)in[12 + inPos] & 255L | (long)in[13 + inPos] << 8 & 65535L | (long)in[14 + inPos] << 16 & 16777215L | (long)in[15 + inPos] << 24 & 4294967295L | (long)in[16 + inPos] << 32 & 1099511627775L | (long)in[17 + inPos] << 40 & 281474976710655L;
         out[3 + outPos] = (long)in[18 + inPos] & 255L | (long)in[19 + inPos] << 8 & 65535L | (long)in[20 + inPos] << 16 & 16777215L | (long)in[21 + inPos] << 24 & 4294967295L | (long)in[22 + inPos] << 32 & 1099511627775L | (long)in[23 + inPos] << 40 & 281474976710655L;
         out[4 + outPos] = (long)in[24 + inPos] & 255L | (long)in[25 + inPos] << 8 & 65535L | (long)in[26 + inPos] << 16 & 16777215L | (long)in[27 + inPos] << 24 & 4294967295L | (long)in[28 + inPos] << 32 & 1099511627775L | (long)in[29 + inPos] << 40 & 281474976710655L;
         out[5 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 65535L | (long)in[32 + inPos] << 16 & 16777215L | (long)in[33 + inPos] << 24 & 4294967295L | (long)in[34 + inPos] << 32 & 1099511627775L | (long)in[35 + inPos] << 40 & 281474976710655L;
         out[6 + outPos] = (long)in[36 + inPos] & 255L | (long)in[37 + inPos] << 8 & 65535L | (long)in[38 + inPos] << 16 & 16777215L | (long)in[39 + inPos] << 24 & 4294967295L | (long)in[40 + inPos] << 32 & 1099511627775L | (long)in[41 + inPos] << 40 & 281474976710655L;
         out[7 + outPos] = (long)in[42 + inPos] & 255L | (long)in[43 + inPos] << 8 & 65535L | (long)in[44 + inPos] << 16 & 16777215L | (long)in[45 + inPos] << 24 & 4294967295L | (long)in[46 + inPos] << 32 & 1099511627775L | (long)in[47 + inPos] << 40 & 281474976710655L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L;
         out[1 + outPos] = (long)in.get(6 + inPos) & 255L | (long)in.get(7 + inPos) << 8 & 65535L | (long)in.get(8 + inPos) << 16 & 16777215L | (long)in.get(9 + inPos) << 24 & 4294967295L | (long)in.get(10 + inPos) << 32 & 1099511627775L | (long)in.get(11 + inPos) << 40 & 281474976710655L;
         out[2 + outPos] = (long)in.get(12 + inPos) & 255L | (long)in.get(13 + inPos) << 8 & 65535L | (long)in.get(14 + inPos) << 16 & 16777215L | (long)in.get(15 + inPos) << 24 & 4294967295L | (long)in.get(16 + inPos) << 32 & 1099511627775L | (long)in.get(17 + inPos) << 40 & 281474976710655L;
         out[3 + outPos] = (long)in.get(18 + inPos) & 255L | (long)in.get(19 + inPos) << 8 & 65535L | (long)in.get(20 + inPos) << 16 & 16777215L | (long)in.get(21 + inPos) << 24 & 4294967295L | (long)in.get(22 + inPos) << 32 & 1099511627775L | (long)in.get(23 + inPos) << 40 & 281474976710655L;
         out[4 + outPos] = (long)in.get(24 + inPos) & 255L | (long)in.get(25 + inPos) << 8 & 65535L | (long)in.get(26 + inPos) << 16 & 16777215L | (long)in.get(27 + inPos) << 24 & 4294967295L | (long)in.get(28 + inPos) << 32 & 1099511627775L | (long)in.get(29 + inPos) << 40 & 281474976710655L;
         out[5 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 65535L | (long)in.get(32 + inPos) << 16 & 16777215L | (long)in.get(33 + inPos) << 24 & 4294967295L | (long)in.get(34 + inPos) << 32 & 1099511627775L | (long)in.get(35 + inPos) << 40 & 281474976710655L;
         out[6 + outPos] = (long)in.get(36 + inPos) & 255L | (long)in.get(37 + inPos) << 8 & 65535L | (long)in.get(38 + inPos) << 16 & 16777215L | (long)in.get(39 + inPos) << 24 & 4294967295L | (long)in.get(40 + inPos) << 32 & 1099511627775L | (long)in.get(41 + inPos) << 40 & 281474976710655L;
         out[7 + outPos] = (long)in.get(42 + inPos) & 255L | (long)in.get(43 + inPos) << 8 & 65535L | (long)in.get(44 + inPos) << 16 & 16777215L | (long)in.get(45 + inPos) << 24 & 4294967295L | (long)in.get(46 + inPos) << 32 & 1099511627775L | (long)in.get(47 + inPos) << 40 & 281474976710655L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L;
         out[1 + outPos] = (long)in[6 + inPos] & 255L | (long)in[7 + inPos] << 8 & 65535L | (long)in[8 + inPos] << 16 & 16777215L | (long)in[9 + inPos] << 24 & 4294967295L | (long)in[10 + inPos] << 32 & 1099511627775L | (long)in[11 + inPos] << 40 & 281474976710655L;
         out[2 + outPos] = (long)in[12 + inPos] & 255L | (long)in[13 + inPos] << 8 & 65535L | (long)in[14 + inPos] << 16 & 16777215L | (long)in[15 + inPos] << 24 & 4294967295L | (long)in[16 + inPos] << 32 & 1099511627775L | (long)in[17 + inPos] << 40 & 281474976710655L;
         out[3 + outPos] = (long)in[18 + inPos] & 255L | (long)in[19 + inPos] << 8 & 65535L | (long)in[20 + inPos] << 16 & 16777215L | (long)in[21 + inPos] << 24 & 4294967295L | (long)in[22 + inPos] << 32 & 1099511627775L | (long)in[23 + inPos] << 40 & 281474976710655L;
         out[4 + outPos] = (long)in[24 + inPos] & 255L | (long)in[25 + inPos] << 8 & 65535L | (long)in[26 + inPos] << 16 & 16777215L | (long)in[27 + inPos] << 24 & 4294967295L | (long)in[28 + inPos] << 32 & 1099511627775L | (long)in[29 + inPos] << 40 & 281474976710655L;
         out[5 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 65535L | (long)in[32 + inPos] << 16 & 16777215L | (long)in[33 + inPos] << 24 & 4294967295L | (long)in[34 + inPos] << 32 & 1099511627775L | (long)in[35 + inPos] << 40 & 281474976710655L;
         out[6 + outPos] = (long)in[36 + inPos] & 255L | (long)in[37 + inPos] << 8 & 65535L | (long)in[38 + inPos] << 16 & 16777215L | (long)in[39 + inPos] << 24 & 4294967295L | (long)in[40 + inPos] << 32 & 1099511627775L | (long)in[41 + inPos] << 40 & 281474976710655L;
         out[7 + outPos] = (long)in[42 + inPos] & 255L | (long)in[43 + inPos] << 8 & 65535L | (long)in[44 + inPos] << 16 & 16777215L | (long)in[45 + inPos] << 24 & 4294967295L | (long)in[46 + inPos] << 32 & 1099511627775L | (long)in[47 + inPos] << 40 & 281474976710655L;
         out[8 + outPos] = (long)in[48 + inPos] & 255L | (long)in[49 + inPos] << 8 & 65535L | (long)in[50 + inPos] << 16 & 16777215L | (long)in[51 + inPos] << 24 & 4294967295L | (long)in[52 + inPos] << 32 & 1099511627775L | (long)in[53 + inPos] << 40 & 281474976710655L;
         out[9 + outPos] = (long)in[54 + inPos] & 255L | (long)in[55 + inPos] << 8 & 65535L | (long)in[56 + inPos] << 16 & 16777215L | (long)in[57 + inPos] << 24 & 4294967295L | (long)in[58 + inPos] << 32 & 1099511627775L | (long)in[59 + inPos] << 40 & 281474976710655L;
         out[10 + outPos] = (long)in[60 + inPos] & 255L | (long)in[61 + inPos] << 8 & 65535L | (long)in[62 + inPos] << 16 & 16777215L | (long)in[63 + inPos] << 24 & 4294967295L | (long)in[64 + inPos] << 32 & 1099511627775L | (long)in[65 + inPos] << 40 & 281474976710655L;
         out[11 + outPos] = (long)in[66 + inPos] & 255L | (long)in[67 + inPos] << 8 & 65535L | (long)in[68 + inPos] << 16 & 16777215L | (long)in[69 + inPos] << 24 & 4294967295L | (long)in[70 + inPos] << 32 & 1099511627775L | (long)in[71 + inPos] << 40 & 281474976710655L;
         out[12 + outPos] = (long)in[72 + inPos] & 255L | (long)in[73 + inPos] << 8 & 65535L | (long)in[74 + inPos] << 16 & 16777215L | (long)in[75 + inPos] << 24 & 4294967295L | (long)in[76 + inPos] << 32 & 1099511627775L | (long)in[77 + inPos] << 40 & 281474976710655L;
         out[13 + outPos] = (long)in[78 + inPos] & 255L | (long)in[79 + inPos] << 8 & 65535L | (long)in[80 + inPos] << 16 & 16777215L | (long)in[81 + inPos] << 24 & 4294967295L | (long)in[82 + inPos] << 32 & 1099511627775L | (long)in[83 + inPos] << 40 & 281474976710655L;
         out[14 + outPos] = (long)in[84 + inPos] & 255L | (long)in[85 + inPos] << 8 & 65535L | (long)in[86 + inPos] << 16 & 16777215L | (long)in[87 + inPos] << 24 & 4294967295L | (long)in[88 + inPos] << 32 & 1099511627775L | (long)in[89 + inPos] << 40 & 281474976710655L;
         out[15 + outPos] = (long)in[90 + inPos] & 255L | (long)in[91 + inPos] << 8 & 65535L | (long)in[92 + inPos] << 16 & 16777215L | (long)in[93 + inPos] << 24 & 4294967295L | (long)in[94 + inPos] << 32 & 1099511627775L | (long)in[95 + inPos] << 40 & 281474976710655L;
         out[16 + outPos] = (long)in[96 + inPos] & 255L | (long)in[97 + inPos] << 8 & 65535L | (long)in[98 + inPos] << 16 & 16777215L | (long)in[99 + inPos] << 24 & 4294967295L | (long)in[100 + inPos] << 32 & 1099511627775L | (long)in[101 + inPos] << 40 & 281474976710655L;
         out[17 + outPos] = (long)in[102 + inPos] & 255L | (long)in[103 + inPos] << 8 & 65535L | (long)in[104 + inPos] << 16 & 16777215L | (long)in[105 + inPos] << 24 & 4294967295L | (long)in[106 + inPos] << 32 & 1099511627775L | (long)in[107 + inPos] << 40 & 281474976710655L;
         out[18 + outPos] = (long)in[108 + inPos] & 255L | (long)in[109 + inPos] << 8 & 65535L | (long)in[110 + inPos] << 16 & 16777215L | (long)in[111 + inPos] << 24 & 4294967295L | (long)in[112 + inPos] << 32 & 1099511627775L | (long)in[113 + inPos] << 40 & 281474976710655L;
         out[19 + outPos] = (long)in[114 + inPos] & 255L | (long)in[115 + inPos] << 8 & 65535L | (long)in[116 + inPos] << 16 & 16777215L | (long)in[117 + inPos] << 24 & 4294967295L | (long)in[118 + inPos] << 32 & 1099511627775L | (long)in[119 + inPos] << 40 & 281474976710655L;
         out[20 + outPos] = (long)in[120 + inPos] & 255L | (long)in[121 + inPos] << 8 & 65535L | (long)in[122 + inPos] << 16 & 16777215L | (long)in[123 + inPos] << 24 & 4294967295L | (long)in[124 + inPos] << 32 & 1099511627775L | (long)in[125 + inPos] << 40 & 281474976710655L;
         out[21 + outPos] = (long)in[126 + inPos] & 255L | (long)in[127 + inPos] << 8 & 65535L | (long)in[128 + inPos] << 16 & 16777215L | (long)in[129 + inPos] << 24 & 4294967295L | (long)in[130 + inPos] << 32 & 1099511627775L | (long)in[131 + inPos] << 40 & 281474976710655L;
         out[22 + outPos] = (long)in[132 + inPos] & 255L | (long)in[133 + inPos] << 8 & 65535L | (long)in[134 + inPos] << 16 & 16777215L | (long)in[135 + inPos] << 24 & 4294967295L | (long)in[136 + inPos] << 32 & 1099511627775L | (long)in[137 + inPos] << 40 & 281474976710655L;
         out[23 + outPos] = (long)in[138 + inPos] & 255L | (long)in[139 + inPos] << 8 & 65535L | (long)in[140 + inPos] << 16 & 16777215L | (long)in[141 + inPos] << 24 & 4294967295L | (long)in[142 + inPos] << 32 & 1099511627775L | (long)in[143 + inPos] << 40 & 281474976710655L;
         out[24 + outPos] = (long)in[144 + inPos] & 255L | (long)in[145 + inPos] << 8 & 65535L | (long)in[146 + inPos] << 16 & 16777215L | (long)in[147 + inPos] << 24 & 4294967295L | (long)in[148 + inPos] << 32 & 1099511627775L | (long)in[149 + inPos] << 40 & 281474976710655L;
         out[25 + outPos] = (long)in[150 + inPos] & 255L | (long)in[151 + inPos] << 8 & 65535L | (long)in[152 + inPos] << 16 & 16777215L | (long)in[153 + inPos] << 24 & 4294967295L | (long)in[154 + inPos] << 32 & 1099511627775L | (long)in[155 + inPos] << 40 & 281474976710655L;
         out[26 + outPos] = (long)in[156 + inPos] & 255L | (long)in[157 + inPos] << 8 & 65535L | (long)in[158 + inPos] << 16 & 16777215L | (long)in[159 + inPos] << 24 & 4294967295L | (long)in[160 + inPos] << 32 & 1099511627775L | (long)in[161 + inPos] << 40 & 281474976710655L;
         out[27 + outPos] = (long)in[162 + inPos] & 255L | (long)in[163 + inPos] << 8 & 65535L | (long)in[164 + inPos] << 16 & 16777215L | (long)in[165 + inPos] << 24 & 4294967295L | (long)in[166 + inPos] << 32 & 1099511627775L | (long)in[167 + inPos] << 40 & 281474976710655L;
         out[28 + outPos] = (long)in[168 + inPos] & 255L | (long)in[169 + inPos] << 8 & 65535L | (long)in[170 + inPos] << 16 & 16777215L | (long)in[171 + inPos] << 24 & 4294967295L | (long)in[172 + inPos] << 32 & 1099511627775L | (long)in[173 + inPos] << 40 & 281474976710655L;
         out[29 + outPos] = (long)in[174 + inPos] & 255L | (long)in[175 + inPos] << 8 & 65535L | (long)in[176 + inPos] << 16 & 16777215L | (long)in[177 + inPos] << 24 & 4294967295L | (long)in[178 + inPos] << 32 & 1099511627775L | (long)in[179 + inPos] << 40 & 281474976710655L;
         out[30 + outPos] = (long)in[180 + inPos] & 255L | (long)in[181 + inPos] << 8 & 65535L | (long)in[182 + inPos] << 16 & 16777215L | (long)in[183 + inPos] << 24 & 4294967295L | (long)in[184 + inPos] << 32 & 1099511627775L | (long)in[185 + inPos] << 40 & 281474976710655L;
         out[31 + outPos] = (long)in[186 + inPos] & 255L | (long)in[187 + inPos] << 8 & 65535L | (long)in[188 + inPos] << 16 & 16777215L | (long)in[189 + inPos] << 24 & 4294967295L | (long)in[190 + inPos] << 32 & 1099511627775L | (long)in[191 + inPos] << 40 & 281474976710655L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L;
         out[1 + outPos] = (long)in.get(6 + inPos) & 255L | (long)in.get(7 + inPos) << 8 & 65535L | (long)in.get(8 + inPos) << 16 & 16777215L | (long)in.get(9 + inPos) << 24 & 4294967295L | (long)in.get(10 + inPos) << 32 & 1099511627775L | (long)in.get(11 + inPos) << 40 & 281474976710655L;
         out[2 + outPos] = (long)in.get(12 + inPos) & 255L | (long)in.get(13 + inPos) << 8 & 65535L | (long)in.get(14 + inPos) << 16 & 16777215L | (long)in.get(15 + inPos) << 24 & 4294967295L | (long)in.get(16 + inPos) << 32 & 1099511627775L | (long)in.get(17 + inPos) << 40 & 281474976710655L;
         out[3 + outPos] = (long)in.get(18 + inPos) & 255L | (long)in.get(19 + inPos) << 8 & 65535L | (long)in.get(20 + inPos) << 16 & 16777215L | (long)in.get(21 + inPos) << 24 & 4294967295L | (long)in.get(22 + inPos) << 32 & 1099511627775L | (long)in.get(23 + inPos) << 40 & 281474976710655L;
         out[4 + outPos] = (long)in.get(24 + inPos) & 255L | (long)in.get(25 + inPos) << 8 & 65535L | (long)in.get(26 + inPos) << 16 & 16777215L | (long)in.get(27 + inPos) << 24 & 4294967295L | (long)in.get(28 + inPos) << 32 & 1099511627775L | (long)in.get(29 + inPos) << 40 & 281474976710655L;
         out[5 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 65535L | (long)in.get(32 + inPos) << 16 & 16777215L | (long)in.get(33 + inPos) << 24 & 4294967295L | (long)in.get(34 + inPos) << 32 & 1099511627775L | (long)in.get(35 + inPos) << 40 & 281474976710655L;
         out[6 + outPos] = (long)in.get(36 + inPos) & 255L | (long)in.get(37 + inPos) << 8 & 65535L | (long)in.get(38 + inPos) << 16 & 16777215L | (long)in.get(39 + inPos) << 24 & 4294967295L | (long)in.get(40 + inPos) << 32 & 1099511627775L | (long)in.get(41 + inPos) << 40 & 281474976710655L;
         out[7 + outPos] = (long)in.get(42 + inPos) & 255L | (long)in.get(43 + inPos) << 8 & 65535L | (long)in.get(44 + inPos) << 16 & 16777215L | (long)in.get(45 + inPos) << 24 & 4294967295L | (long)in.get(46 + inPos) << 32 & 1099511627775L | (long)in.get(47 + inPos) << 40 & 281474976710655L;
         out[8 + outPos] = (long)in.get(48 + inPos) & 255L | (long)in.get(49 + inPos) << 8 & 65535L | (long)in.get(50 + inPos) << 16 & 16777215L | (long)in.get(51 + inPos) << 24 & 4294967295L | (long)in.get(52 + inPos) << 32 & 1099511627775L | (long)in.get(53 + inPos) << 40 & 281474976710655L;
         out[9 + outPos] = (long)in.get(54 + inPos) & 255L | (long)in.get(55 + inPos) << 8 & 65535L | (long)in.get(56 + inPos) << 16 & 16777215L | (long)in.get(57 + inPos) << 24 & 4294967295L | (long)in.get(58 + inPos) << 32 & 1099511627775L | (long)in.get(59 + inPos) << 40 & 281474976710655L;
         out[10 + outPos] = (long)in.get(60 + inPos) & 255L | (long)in.get(61 + inPos) << 8 & 65535L | (long)in.get(62 + inPos) << 16 & 16777215L | (long)in.get(63 + inPos) << 24 & 4294967295L | (long)in.get(64 + inPos) << 32 & 1099511627775L | (long)in.get(65 + inPos) << 40 & 281474976710655L;
         out[11 + outPos] = (long)in.get(66 + inPos) & 255L | (long)in.get(67 + inPos) << 8 & 65535L | (long)in.get(68 + inPos) << 16 & 16777215L | (long)in.get(69 + inPos) << 24 & 4294967295L | (long)in.get(70 + inPos) << 32 & 1099511627775L | (long)in.get(71 + inPos) << 40 & 281474976710655L;
         out[12 + outPos] = (long)in.get(72 + inPos) & 255L | (long)in.get(73 + inPos) << 8 & 65535L | (long)in.get(74 + inPos) << 16 & 16777215L | (long)in.get(75 + inPos) << 24 & 4294967295L | (long)in.get(76 + inPos) << 32 & 1099511627775L | (long)in.get(77 + inPos) << 40 & 281474976710655L;
         out[13 + outPos] = (long)in.get(78 + inPos) & 255L | (long)in.get(79 + inPos) << 8 & 65535L | (long)in.get(80 + inPos) << 16 & 16777215L | (long)in.get(81 + inPos) << 24 & 4294967295L | (long)in.get(82 + inPos) << 32 & 1099511627775L | (long)in.get(83 + inPos) << 40 & 281474976710655L;
         out[14 + outPos] = (long)in.get(84 + inPos) & 255L | (long)in.get(85 + inPos) << 8 & 65535L | (long)in.get(86 + inPos) << 16 & 16777215L | (long)in.get(87 + inPos) << 24 & 4294967295L | (long)in.get(88 + inPos) << 32 & 1099511627775L | (long)in.get(89 + inPos) << 40 & 281474976710655L;
         out[15 + outPos] = (long)in.get(90 + inPos) & 255L | (long)in.get(91 + inPos) << 8 & 65535L | (long)in.get(92 + inPos) << 16 & 16777215L | (long)in.get(93 + inPos) << 24 & 4294967295L | (long)in.get(94 + inPos) << 32 & 1099511627775L | (long)in.get(95 + inPos) << 40 & 281474976710655L;
         out[16 + outPos] = (long)in.get(96 + inPos) & 255L | (long)in.get(97 + inPos) << 8 & 65535L | (long)in.get(98 + inPos) << 16 & 16777215L | (long)in.get(99 + inPos) << 24 & 4294967295L | (long)in.get(100 + inPos) << 32 & 1099511627775L | (long)in.get(101 + inPos) << 40 & 281474976710655L;
         out[17 + outPos] = (long)in.get(102 + inPos) & 255L | (long)in.get(103 + inPos) << 8 & 65535L | (long)in.get(104 + inPos) << 16 & 16777215L | (long)in.get(105 + inPos) << 24 & 4294967295L | (long)in.get(106 + inPos) << 32 & 1099511627775L | (long)in.get(107 + inPos) << 40 & 281474976710655L;
         out[18 + outPos] = (long)in.get(108 + inPos) & 255L | (long)in.get(109 + inPos) << 8 & 65535L | (long)in.get(110 + inPos) << 16 & 16777215L | (long)in.get(111 + inPos) << 24 & 4294967295L | (long)in.get(112 + inPos) << 32 & 1099511627775L | (long)in.get(113 + inPos) << 40 & 281474976710655L;
         out[19 + outPos] = (long)in.get(114 + inPos) & 255L | (long)in.get(115 + inPos) << 8 & 65535L | (long)in.get(116 + inPos) << 16 & 16777215L | (long)in.get(117 + inPos) << 24 & 4294967295L | (long)in.get(118 + inPos) << 32 & 1099511627775L | (long)in.get(119 + inPos) << 40 & 281474976710655L;
         out[20 + outPos] = (long)in.get(120 + inPos) & 255L | (long)in.get(121 + inPos) << 8 & 65535L | (long)in.get(122 + inPos) << 16 & 16777215L | (long)in.get(123 + inPos) << 24 & 4294967295L | (long)in.get(124 + inPos) << 32 & 1099511627775L | (long)in.get(125 + inPos) << 40 & 281474976710655L;
         out[21 + outPos] = (long)in.get(126 + inPos) & 255L | (long)in.get(127 + inPos) << 8 & 65535L | (long)in.get(128 + inPos) << 16 & 16777215L | (long)in.get(129 + inPos) << 24 & 4294967295L | (long)in.get(130 + inPos) << 32 & 1099511627775L | (long)in.get(131 + inPos) << 40 & 281474976710655L;
         out[22 + outPos] = (long)in.get(132 + inPos) & 255L | (long)in.get(133 + inPos) << 8 & 65535L | (long)in.get(134 + inPos) << 16 & 16777215L | (long)in.get(135 + inPos) << 24 & 4294967295L | (long)in.get(136 + inPos) << 32 & 1099511627775L | (long)in.get(137 + inPos) << 40 & 281474976710655L;
         out[23 + outPos] = (long)in.get(138 + inPos) & 255L | (long)in.get(139 + inPos) << 8 & 65535L | (long)in.get(140 + inPos) << 16 & 16777215L | (long)in.get(141 + inPos) << 24 & 4294967295L | (long)in.get(142 + inPos) << 32 & 1099511627775L | (long)in.get(143 + inPos) << 40 & 281474976710655L;
         out[24 + outPos] = (long)in.get(144 + inPos) & 255L | (long)in.get(145 + inPos) << 8 & 65535L | (long)in.get(146 + inPos) << 16 & 16777215L | (long)in.get(147 + inPos) << 24 & 4294967295L | (long)in.get(148 + inPos) << 32 & 1099511627775L | (long)in.get(149 + inPos) << 40 & 281474976710655L;
         out[25 + outPos] = (long)in.get(150 + inPos) & 255L | (long)in.get(151 + inPos) << 8 & 65535L | (long)in.get(152 + inPos) << 16 & 16777215L | (long)in.get(153 + inPos) << 24 & 4294967295L | (long)in.get(154 + inPos) << 32 & 1099511627775L | (long)in.get(155 + inPos) << 40 & 281474976710655L;
         out[26 + outPos] = (long)in.get(156 + inPos) & 255L | (long)in.get(157 + inPos) << 8 & 65535L | (long)in.get(158 + inPos) << 16 & 16777215L | (long)in.get(159 + inPos) << 24 & 4294967295L | (long)in.get(160 + inPos) << 32 & 1099511627775L | (long)in.get(161 + inPos) << 40 & 281474976710655L;
         out[27 + outPos] = (long)in.get(162 + inPos) & 255L | (long)in.get(163 + inPos) << 8 & 65535L | (long)in.get(164 + inPos) << 16 & 16777215L | (long)in.get(165 + inPos) << 24 & 4294967295L | (long)in.get(166 + inPos) << 32 & 1099511627775L | (long)in.get(167 + inPos) << 40 & 281474976710655L;
         out[28 + outPos] = (long)in.get(168 + inPos) & 255L | (long)in.get(169 + inPos) << 8 & 65535L | (long)in.get(170 + inPos) << 16 & 16777215L | (long)in.get(171 + inPos) << 24 & 4294967295L | (long)in.get(172 + inPos) << 32 & 1099511627775L | (long)in.get(173 + inPos) << 40 & 281474976710655L;
         out[29 + outPos] = (long)in.get(174 + inPos) & 255L | (long)in.get(175 + inPos) << 8 & 65535L | (long)in.get(176 + inPos) << 16 & 16777215L | (long)in.get(177 + inPos) << 24 & 4294967295L | (long)in.get(178 + inPos) << 32 & 1099511627775L | (long)in.get(179 + inPos) << 40 & 281474976710655L;
         out[30 + outPos] = (long)in.get(180 + inPos) & 255L | (long)in.get(181 + inPos) << 8 & 65535L | (long)in.get(182 + inPos) << 16 & 16777215L | (long)in.get(183 + inPos) << 24 & 4294967295L | (long)in.get(184 + inPos) << 32 & 1099511627775L | (long)in.get(185 + inPos) << 40 & 281474976710655L;
         out[31 + outPos] = (long)in.get(186 + inPos) & 255L | (long)in.get(187 + inPos) << 8 & 65535L | (long)in.get(188 + inPos) << 16 & 16777215L | (long)in.get(189 + inPos) << 24 & 4294967295L | (long)in.get(190 + inPos) << 32 & 1099511627775L | (long)in.get(191 + inPos) << 40 & 281474976710655L;
      }
   }

   private static final class Packer49 extends BytePackerForLong {
      private Packer49() {
         super(49);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 562949953421311L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 562949953421311L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 562949953421311L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 562949953421311L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 562949953421311L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 562949953421311L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 562949953421311L) >>> 48 | (in[1 + inPos] & 562949953421311L) << 1) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 562949953421311L) >>> 7 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 562949953421311L) >>> 15 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 562949953421311L) >>> 23 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 562949953421311L) >>> 31 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 562949953421311L) >>> 39 & 255L));
         out[12 + outPos] = (byte)((int)(((in[1 + inPos] & 562949953421311L) >>> 47 | (in[2 + inPos] & 562949953421311L) << 2) & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 562949953421311L) >>> 6 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 562949953421311L) >>> 14 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 562949953421311L) >>> 22 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 562949953421311L) >>> 30 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 562949953421311L) >>> 38 & 255L));
         out[18 + outPos] = (byte)((int)(((in[2 + inPos] & 562949953421311L) >>> 46 | (in[3 + inPos] & 562949953421311L) << 3) & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 562949953421311L) >>> 5 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 562949953421311L) >>> 13 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 562949953421311L) >>> 21 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 562949953421311L) >>> 29 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 562949953421311L) >>> 37 & 255L));
         out[24 + outPos] = (byte)((int)(((in[3 + inPos] & 562949953421311L) >>> 45 | (in[4 + inPos] & 562949953421311L) << 4) & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 562949953421311L) >>> 4 & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 562949953421311L) >>> 12 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 562949953421311L) >>> 20 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 562949953421311L) >>> 28 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 562949953421311L) >>> 36 & 255L));
         out[30 + outPos] = (byte)((int)(((in[4 + inPos] & 562949953421311L) >>> 44 | (in[5 + inPos] & 562949953421311L) << 5) & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 562949953421311L) >>> 3 & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 562949953421311L) >>> 11 & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 562949953421311L) >>> 19 & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 562949953421311L) >>> 27 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 562949953421311L) >>> 35 & 255L));
         out[36 + outPos] = (byte)((int)(((in[5 + inPos] & 562949953421311L) >>> 43 | (in[6 + inPos] & 562949953421311L) << 6) & 255L));
         out[37 + outPos] = (byte)((int)((in[6 + inPos] & 562949953421311L) >>> 2 & 255L));
         out[38 + outPos] = (byte)((int)((in[6 + inPos] & 562949953421311L) >>> 10 & 255L));
         out[39 + outPos] = (byte)((int)((in[6 + inPos] & 562949953421311L) >>> 18 & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 562949953421311L) >>> 26 & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 562949953421311L) >>> 34 & 255L));
         out[42 + outPos] = (byte)((int)(((in[6 + inPos] & 562949953421311L) >>> 42 | (in[7 + inPos] & 562949953421311L) << 7) & 255L));
         out[43 + outPos] = (byte)((int)((in[7 + inPos] & 562949953421311L) >>> 1 & 255L));
         out[44 + outPos] = (byte)((int)((in[7 + inPos] & 562949953421311L) >>> 9 & 255L));
         out[45 + outPos] = (byte)((int)((in[7 + inPos] & 562949953421311L) >>> 17 & 255L));
         out[46 + outPos] = (byte)((int)((in[7 + inPos] & 562949953421311L) >>> 25 & 255L));
         out[47 + outPos] = (byte)((int)((in[7 + inPos] & 562949953421311L) >>> 33 & 255L));
         out[48 + outPos] = (byte)((int)((in[7 + inPos] & 562949953421311L) >>> 41 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 562949953421311L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 562949953421311L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 562949953421311L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 562949953421311L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 562949953421311L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 562949953421311L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 562949953421311L) >>> 48 | (in[1 + inPos] & 562949953421311L) << 1) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 562949953421311L) >>> 7 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 562949953421311L) >>> 15 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 562949953421311L) >>> 23 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 562949953421311L) >>> 31 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 562949953421311L) >>> 39 & 255L));
         out[12 + outPos] = (byte)((int)(((in[1 + inPos] & 562949953421311L) >>> 47 | (in[2 + inPos] & 562949953421311L) << 2) & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 562949953421311L) >>> 6 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 562949953421311L) >>> 14 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 562949953421311L) >>> 22 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 562949953421311L) >>> 30 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 562949953421311L) >>> 38 & 255L));
         out[18 + outPos] = (byte)((int)(((in[2 + inPos] & 562949953421311L) >>> 46 | (in[3 + inPos] & 562949953421311L) << 3) & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 562949953421311L) >>> 5 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 562949953421311L) >>> 13 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 562949953421311L) >>> 21 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 562949953421311L) >>> 29 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 562949953421311L) >>> 37 & 255L));
         out[24 + outPos] = (byte)((int)(((in[3 + inPos] & 562949953421311L) >>> 45 | (in[4 + inPos] & 562949953421311L) << 4) & 255L));
         out[25 + outPos] = (byte)((int)((in[4 + inPos] & 562949953421311L) >>> 4 & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 562949953421311L) >>> 12 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 562949953421311L) >>> 20 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 562949953421311L) >>> 28 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 562949953421311L) >>> 36 & 255L));
         out[30 + outPos] = (byte)((int)(((in[4 + inPos] & 562949953421311L) >>> 44 | (in[5 + inPos] & 562949953421311L) << 5) & 255L));
         out[31 + outPos] = (byte)((int)((in[5 + inPos] & 562949953421311L) >>> 3 & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 562949953421311L) >>> 11 & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 562949953421311L) >>> 19 & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 562949953421311L) >>> 27 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 562949953421311L) >>> 35 & 255L));
         out[36 + outPos] = (byte)((int)(((in[5 + inPos] & 562949953421311L) >>> 43 | (in[6 + inPos] & 562949953421311L) << 6) & 255L));
         out[37 + outPos] = (byte)((int)((in[6 + inPos] & 562949953421311L) >>> 2 & 255L));
         out[38 + outPos] = (byte)((int)((in[6 + inPos] & 562949953421311L) >>> 10 & 255L));
         out[39 + outPos] = (byte)((int)((in[6 + inPos] & 562949953421311L) >>> 18 & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 562949953421311L) >>> 26 & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 562949953421311L) >>> 34 & 255L));
         out[42 + outPos] = (byte)((int)(((in[6 + inPos] & 562949953421311L) >>> 42 | (in[7 + inPos] & 562949953421311L) << 7) & 255L));
         out[43 + outPos] = (byte)((int)((in[7 + inPos] & 562949953421311L) >>> 1 & 255L));
         out[44 + outPos] = (byte)((int)((in[7 + inPos] & 562949953421311L) >>> 9 & 255L));
         out[45 + outPos] = (byte)((int)((in[7 + inPos] & 562949953421311L) >>> 17 & 255L));
         out[46 + outPos] = (byte)((int)((in[7 + inPos] & 562949953421311L) >>> 25 & 255L));
         out[47 + outPos] = (byte)((int)((in[7 + inPos] & 562949953421311L) >>> 33 & 255L));
         out[48 + outPos] = (byte)((int)((in[7 + inPos] & 562949953421311L) >>> 41 & 255L));
         out[49 + outPos] = (byte)((int)(in[8 + inPos] & 562949953421311L & 255L));
         out[50 + outPos] = (byte)((int)((in[8 + inPos] & 562949953421311L) >>> 8 & 255L));
         out[51 + outPos] = (byte)((int)((in[8 + inPos] & 562949953421311L) >>> 16 & 255L));
         out[52 + outPos] = (byte)((int)((in[8 + inPos] & 562949953421311L) >>> 24 & 255L));
         out[53 + outPos] = (byte)((int)((in[8 + inPos] & 562949953421311L) >>> 32 & 255L));
         out[54 + outPos] = (byte)((int)((in[8 + inPos] & 562949953421311L) >>> 40 & 255L));
         out[55 + outPos] = (byte)((int)(((in[8 + inPos] & 562949953421311L) >>> 48 | (in[9 + inPos] & 562949953421311L) << 1) & 255L));
         out[56 + outPos] = (byte)((int)((in[9 + inPos] & 562949953421311L) >>> 7 & 255L));
         out[57 + outPos] = (byte)((int)((in[9 + inPos] & 562949953421311L) >>> 15 & 255L));
         out[58 + outPos] = (byte)((int)((in[9 + inPos] & 562949953421311L) >>> 23 & 255L));
         out[59 + outPos] = (byte)((int)((in[9 + inPos] & 562949953421311L) >>> 31 & 255L));
         out[60 + outPos] = (byte)((int)((in[9 + inPos] & 562949953421311L) >>> 39 & 255L));
         out[61 + outPos] = (byte)((int)(((in[9 + inPos] & 562949953421311L) >>> 47 | (in[10 + inPos] & 562949953421311L) << 2) & 255L));
         out[62 + outPos] = (byte)((int)((in[10 + inPos] & 562949953421311L) >>> 6 & 255L));
         out[63 + outPos] = (byte)((int)((in[10 + inPos] & 562949953421311L) >>> 14 & 255L));
         out[64 + outPos] = (byte)((int)((in[10 + inPos] & 562949953421311L) >>> 22 & 255L));
         out[65 + outPos] = (byte)((int)((in[10 + inPos] & 562949953421311L) >>> 30 & 255L));
         out[66 + outPos] = (byte)((int)((in[10 + inPos] & 562949953421311L) >>> 38 & 255L));
         out[67 + outPos] = (byte)((int)(((in[10 + inPos] & 562949953421311L) >>> 46 | (in[11 + inPos] & 562949953421311L) << 3) & 255L));
         out[68 + outPos] = (byte)((int)((in[11 + inPos] & 562949953421311L) >>> 5 & 255L));
         out[69 + outPos] = (byte)((int)((in[11 + inPos] & 562949953421311L) >>> 13 & 255L));
         out[70 + outPos] = (byte)((int)((in[11 + inPos] & 562949953421311L) >>> 21 & 255L));
         out[71 + outPos] = (byte)((int)((in[11 + inPos] & 562949953421311L) >>> 29 & 255L));
         out[72 + outPos] = (byte)((int)((in[11 + inPos] & 562949953421311L) >>> 37 & 255L));
         out[73 + outPos] = (byte)((int)(((in[11 + inPos] & 562949953421311L) >>> 45 | (in[12 + inPos] & 562949953421311L) << 4) & 255L));
         out[74 + outPos] = (byte)((int)((in[12 + inPos] & 562949953421311L) >>> 4 & 255L));
         out[75 + outPos] = (byte)((int)((in[12 + inPos] & 562949953421311L) >>> 12 & 255L));
         out[76 + outPos] = (byte)((int)((in[12 + inPos] & 562949953421311L) >>> 20 & 255L));
         out[77 + outPos] = (byte)((int)((in[12 + inPos] & 562949953421311L) >>> 28 & 255L));
         out[78 + outPos] = (byte)((int)((in[12 + inPos] & 562949953421311L) >>> 36 & 255L));
         out[79 + outPos] = (byte)((int)(((in[12 + inPos] & 562949953421311L) >>> 44 | (in[13 + inPos] & 562949953421311L) << 5) & 255L));
         out[80 + outPos] = (byte)((int)((in[13 + inPos] & 562949953421311L) >>> 3 & 255L));
         out[81 + outPos] = (byte)((int)((in[13 + inPos] & 562949953421311L) >>> 11 & 255L));
         out[82 + outPos] = (byte)((int)((in[13 + inPos] & 562949953421311L) >>> 19 & 255L));
         out[83 + outPos] = (byte)((int)((in[13 + inPos] & 562949953421311L) >>> 27 & 255L));
         out[84 + outPos] = (byte)((int)((in[13 + inPos] & 562949953421311L) >>> 35 & 255L));
         out[85 + outPos] = (byte)((int)(((in[13 + inPos] & 562949953421311L) >>> 43 | (in[14 + inPos] & 562949953421311L) << 6) & 255L));
         out[86 + outPos] = (byte)((int)((in[14 + inPos] & 562949953421311L) >>> 2 & 255L));
         out[87 + outPos] = (byte)((int)((in[14 + inPos] & 562949953421311L) >>> 10 & 255L));
         out[88 + outPos] = (byte)((int)((in[14 + inPos] & 562949953421311L) >>> 18 & 255L));
         out[89 + outPos] = (byte)((int)((in[14 + inPos] & 562949953421311L) >>> 26 & 255L));
         out[90 + outPos] = (byte)((int)((in[14 + inPos] & 562949953421311L) >>> 34 & 255L));
         out[91 + outPos] = (byte)((int)(((in[14 + inPos] & 562949953421311L) >>> 42 | (in[15 + inPos] & 562949953421311L) << 7) & 255L));
         out[92 + outPos] = (byte)((int)((in[15 + inPos] & 562949953421311L) >>> 1 & 255L));
         out[93 + outPos] = (byte)((int)((in[15 + inPos] & 562949953421311L) >>> 9 & 255L));
         out[94 + outPos] = (byte)((int)((in[15 + inPos] & 562949953421311L) >>> 17 & 255L));
         out[95 + outPos] = (byte)((int)((in[15 + inPos] & 562949953421311L) >>> 25 & 255L));
         out[96 + outPos] = (byte)((int)((in[15 + inPos] & 562949953421311L) >>> 33 & 255L));
         out[97 + outPos] = (byte)((int)((in[15 + inPos] & 562949953421311L) >>> 41 & 255L));
         out[98 + outPos] = (byte)((int)(in[16 + inPos] & 562949953421311L & 255L));
         out[99 + outPos] = (byte)((int)((in[16 + inPos] & 562949953421311L) >>> 8 & 255L));
         out[100 + outPos] = (byte)((int)((in[16 + inPos] & 562949953421311L) >>> 16 & 255L));
         out[101 + outPos] = (byte)((int)((in[16 + inPos] & 562949953421311L) >>> 24 & 255L));
         out[102 + outPos] = (byte)((int)((in[16 + inPos] & 562949953421311L) >>> 32 & 255L));
         out[103 + outPos] = (byte)((int)((in[16 + inPos] & 562949953421311L) >>> 40 & 255L));
         out[104 + outPos] = (byte)((int)(((in[16 + inPos] & 562949953421311L) >>> 48 | (in[17 + inPos] & 562949953421311L) << 1) & 255L));
         out[105 + outPos] = (byte)((int)((in[17 + inPos] & 562949953421311L) >>> 7 & 255L));
         out[106 + outPos] = (byte)((int)((in[17 + inPos] & 562949953421311L) >>> 15 & 255L));
         out[107 + outPos] = (byte)((int)((in[17 + inPos] & 562949953421311L) >>> 23 & 255L));
         out[108 + outPos] = (byte)((int)((in[17 + inPos] & 562949953421311L) >>> 31 & 255L));
         out[109 + outPos] = (byte)((int)((in[17 + inPos] & 562949953421311L) >>> 39 & 255L));
         out[110 + outPos] = (byte)((int)(((in[17 + inPos] & 562949953421311L) >>> 47 | (in[18 + inPos] & 562949953421311L) << 2) & 255L));
         out[111 + outPos] = (byte)((int)((in[18 + inPos] & 562949953421311L) >>> 6 & 255L));
         out[112 + outPos] = (byte)((int)((in[18 + inPos] & 562949953421311L) >>> 14 & 255L));
         out[113 + outPos] = (byte)((int)((in[18 + inPos] & 562949953421311L) >>> 22 & 255L));
         out[114 + outPos] = (byte)((int)((in[18 + inPos] & 562949953421311L) >>> 30 & 255L));
         out[115 + outPos] = (byte)((int)((in[18 + inPos] & 562949953421311L) >>> 38 & 255L));
         out[116 + outPos] = (byte)((int)(((in[18 + inPos] & 562949953421311L) >>> 46 | (in[19 + inPos] & 562949953421311L) << 3) & 255L));
         out[117 + outPos] = (byte)((int)((in[19 + inPos] & 562949953421311L) >>> 5 & 255L));
         out[118 + outPos] = (byte)((int)((in[19 + inPos] & 562949953421311L) >>> 13 & 255L));
         out[119 + outPos] = (byte)((int)((in[19 + inPos] & 562949953421311L) >>> 21 & 255L));
         out[120 + outPos] = (byte)((int)((in[19 + inPos] & 562949953421311L) >>> 29 & 255L));
         out[121 + outPos] = (byte)((int)((in[19 + inPos] & 562949953421311L) >>> 37 & 255L));
         out[122 + outPos] = (byte)((int)(((in[19 + inPos] & 562949953421311L) >>> 45 | (in[20 + inPos] & 562949953421311L) << 4) & 255L));
         out[123 + outPos] = (byte)((int)((in[20 + inPos] & 562949953421311L) >>> 4 & 255L));
         out[124 + outPos] = (byte)((int)((in[20 + inPos] & 562949953421311L) >>> 12 & 255L));
         out[125 + outPos] = (byte)((int)((in[20 + inPos] & 562949953421311L) >>> 20 & 255L));
         out[126 + outPos] = (byte)((int)((in[20 + inPos] & 562949953421311L) >>> 28 & 255L));
         out[127 + outPos] = (byte)((int)((in[20 + inPos] & 562949953421311L) >>> 36 & 255L));
         out[128 + outPos] = (byte)((int)(((in[20 + inPos] & 562949953421311L) >>> 44 | (in[21 + inPos] & 562949953421311L) << 5) & 255L));
         out[129 + outPos] = (byte)((int)((in[21 + inPos] & 562949953421311L) >>> 3 & 255L));
         out[130 + outPos] = (byte)((int)((in[21 + inPos] & 562949953421311L) >>> 11 & 255L));
         out[131 + outPos] = (byte)((int)((in[21 + inPos] & 562949953421311L) >>> 19 & 255L));
         out[132 + outPos] = (byte)((int)((in[21 + inPos] & 562949953421311L) >>> 27 & 255L));
         out[133 + outPos] = (byte)((int)((in[21 + inPos] & 562949953421311L) >>> 35 & 255L));
         out[134 + outPos] = (byte)((int)(((in[21 + inPos] & 562949953421311L) >>> 43 | (in[22 + inPos] & 562949953421311L) << 6) & 255L));
         out[135 + outPos] = (byte)((int)((in[22 + inPos] & 562949953421311L) >>> 2 & 255L));
         out[136 + outPos] = (byte)((int)((in[22 + inPos] & 562949953421311L) >>> 10 & 255L));
         out[137 + outPos] = (byte)((int)((in[22 + inPos] & 562949953421311L) >>> 18 & 255L));
         out[138 + outPos] = (byte)((int)((in[22 + inPos] & 562949953421311L) >>> 26 & 255L));
         out[139 + outPos] = (byte)((int)((in[22 + inPos] & 562949953421311L) >>> 34 & 255L));
         out[140 + outPos] = (byte)((int)(((in[22 + inPos] & 562949953421311L) >>> 42 | (in[23 + inPos] & 562949953421311L) << 7) & 255L));
         out[141 + outPos] = (byte)((int)((in[23 + inPos] & 562949953421311L) >>> 1 & 255L));
         out[142 + outPos] = (byte)((int)((in[23 + inPos] & 562949953421311L) >>> 9 & 255L));
         out[143 + outPos] = (byte)((int)((in[23 + inPos] & 562949953421311L) >>> 17 & 255L));
         out[144 + outPos] = (byte)((int)((in[23 + inPos] & 562949953421311L) >>> 25 & 255L));
         out[145 + outPos] = (byte)((int)((in[23 + inPos] & 562949953421311L) >>> 33 & 255L));
         out[146 + outPos] = (byte)((int)((in[23 + inPos] & 562949953421311L) >>> 41 & 255L));
         out[147 + outPos] = (byte)((int)(in[24 + inPos] & 562949953421311L & 255L));
         out[148 + outPos] = (byte)((int)((in[24 + inPos] & 562949953421311L) >>> 8 & 255L));
         out[149 + outPos] = (byte)((int)((in[24 + inPos] & 562949953421311L) >>> 16 & 255L));
         out[150 + outPos] = (byte)((int)((in[24 + inPos] & 562949953421311L) >>> 24 & 255L));
         out[151 + outPos] = (byte)((int)((in[24 + inPos] & 562949953421311L) >>> 32 & 255L));
         out[152 + outPos] = (byte)((int)((in[24 + inPos] & 562949953421311L) >>> 40 & 255L));
         out[153 + outPos] = (byte)((int)(((in[24 + inPos] & 562949953421311L) >>> 48 | (in[25 + inPos] & 562949953421311L) << 1) & 255L));
         out[154 + outPos] = (byte)((int)((in[25 + inPos] & 562949953421311L) >>> 7 & 255L));
         out[155 + outPos] = (byte)((int)((in[25 + inPos] & 562949953421311L) >>> 15 & 255L));
         out[156 + outPos] = (byte)((int)((in[25 + inPos] & 562949953421311L) >>> 23 & 255L));
         out[157 + outPos] = (byte)((int)((in[25 + inPos] & 562949953421311L) >>> 31 & 255L));
         out[158 + outPos] = (byte)((int)((in[25 + inPos] & 562949953421311L) >>> 39 & 255L));
         out[159 + outPos] = (byte)((int)(((in[25 + inPos] & 562949953421311L) >>> 47 | (in[26 + inPos] & 562949953421311L) << 2) & 255L));
         out[160 + outPos] = (byte)((int)((in[26 + inPos] & 562949953421311L) >>> 6 & 255L));
         out[161 + outPos] = (byte)((int)((in[26 + inPos] & 562949953421311L) >>> 14 & 255L));
         out[162 + outPos] = (byte)((int)((in[26 + inPos] & 562949953421311L) >>> 22 & 255L));
         out[163 + outPos] = (byte)((int)((in[26 + inPos] & 562949953421311L) >>> 30 & 255L));
         out[164 + outPos] = (byte)((int)((in[26 + inPos] & 562949953421311L) >>> 38 & 255L));
         out[165 + outPos] = (byte)((int)(((in[26 + inPos] & 562949953421311L) >>> 46 | (in[27 + inPos] & 562949953421311L) << 3) & 255L));
         out[166 + outPos] = (byte)((int)((in[27 + inPos] & 562949953421311L) >>> 5 & 255L));
         out[167 + outPos] = (byte)((int)((in[27 + inPos] & 562949953421311L) >>> 13 & 255L));
         out[168 + outPos] = (byte)((int)((in[27 + inPos] & 562949953421311L) >>> 21 & 255L));
         out[169 + outPos] = (byte)((int)((in[27 + inPos] & 562949953421311L) >>> 29 & 255L));
         out[170 + outPos] = (byte)((int)((in[27 + inPos] & 562949953421311L) >>> 37 & 255L));
         out[171 + outPos] = (byte)((int)(((in[27 + inPos] & 562949953421311L) >>> 45 | (in[28 + inPos] & 562949953421311L) << 4) & 255L));
         out[172 + outPos] = (byte)((int)((in[28 + inPos] & 562949953421311L) >>> 4 & 255L));
         out[173 + outPos] = (byte)((int)((in[28 + inPos] & 562949953421311L) >>> 12 & 255L));
         out[174 + outPos] = (byte)((int)((in[28 + inPos] & 562949953421311L) >>> 20 & 255L));
         out[175 + outPos] = (byte)((int)((in[28 + inPos] & 562949953421311L) >>> 28 & 255L));
         out[176 + outPos] = (byte)((int)((in[28 + inPos] & 562949953421311L) >>> 36 & 255L));
         out[177 + outPos] = (byte)((int)(((in[28 + inPos] & 562949953421311L) >>> 44 | (in[29 + inPos] & 562949953421311L) << 5) & 255L));
         out[178 + outPos] = (byte)((int)((in[29 + inPos] & 562949953421311L) >>> 3 & 255L));
         out[179 + outPos] = (byte)((int)((in[29 + inPos] & 562949953421311L) >>> 11 & 255L));
         out[180 + outPos] = (byte)((int)((in[29 + inPos] & 562949953421311L) >>> 19 & 255L));
         out[181 + outPos] = (byte)((int)((in[29 + inPos] & 562949953421311L) >>> 27 & 255L));
         out[182 + outPos] = (byte)((int)((in[29 + inPos] & 562949953421311L) >>> 35 & 255L));
         out[183 + outPos] = (byte)((int)(((in[29 + inPos] & 562949953421311L) >>> 43 | (in[30 + inPos] & 562949953421311L) << 6) & 255L));
         out[184 + outPos] = (byte)((int)((in[30 + inPos] & 562949953421311L) >>> 2 & 255L));
         out[185 + outPos] = (byte)((int)((in[30 + inPos] & 562949953421311L) >>> 10 & 255L));
         out[186 + outPos] = (byte)((int)((in[30 + inPos] & 562949953421311L) >>> 18 & 255L));
         out[187 + outPos] = (byte)((int)((in[30 + inPos] & 562949953421311L) >>> 26 & 255L));
         out[188 + outPos] = (byte)((int)((in[30 + inPos] & 562949953421311L) >>> 34 & 255L));
         out[189 + outPos] = (byte)((int)(((in[30 + inPos] & 562949953421311L) >>> 42 | (in[31 + inPos] & 562949953421311L) << 7) & 255L));
         out[190 + outPos] = (byte)((int)((in[31 + inPos] & 562949953421311L) >>> 1 & 255L));
         out[191 + outPos] = (byte)((int)((in[31 + inPos] & 562949953421311L) >>> 9 & 255L));
         out[192 + outPos] = (byte)((int)((in[31 + inPos] & 562949953421311L) >>> 17 & 255L));
         out[193 + outPos] = (byte)((int)((in[31 + inPos] & 562949953421311L) >>> 25 & 255L));
         out[194 + outPos] = (byte)((int)((in[31 + inPos] & 562949953421311L) >>> 33 & 255L));
         out[195 + outPos] = (byte)((int)((in[31 + inPos] & 562949953421311L) >>> 41 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 562949953421311L;
         out[1 + outPos] = (long)in[6 + inPos] >> 1 & 127L | (long)in[7 + inPos] << 7 & 32767L | (long)in[8 + inPos] << 15 & 8388607L | (long)in[9 + inPos] << 23 & 2147483647L | (long)in[10 + inPos] << 31 & 549755813887L | (long)in[11 + inPos] << 39 & 140737488355327L | (long)in[12 + inPos] << 47 & 562949953421311L;
         out[2 + outPos] = (long)in[12 + inPos] >> 2 & 63L | (long)in[13 + inPos] << 6 & 16383L | (long)in[14 + inPos] << 14 & 4194303L | (long)in[15 + inPos] << 22 & 1073741823L | (long)in[16 + inPos] << 30 & 274877906943L | (long)in[17 + inPos] << 38 & 70368744177663L | (long)in[18 + inPos] << 46 & 562949953421311L;
         out[3 + outPos] = (long)in[18 + inPos] >> 3 & 31L | (long)in[19 + inPos] << 5 & 8191L | (long)in[20 + inPos] << 13 & 2097151L | (long)in[21 + inPos] << 21 & 536870911L | (long)in[22 + inPos] << 29 & 137438953471L | (long)in[23 + inPos] << 37 & 35184372088831L | (long)in[24 + inPos] << 45 & 562949953421311L;
         out[4 + outPos] = (long)in[24 + inPos] >> 4 & 15L | (long)in[25 + inPos] << 4 & 4095L | (long)in[26 + inPos] << 12 & 1048575L | (long)in[27 + inPos] << 20 & 268435455L | (long)in[28 + inPos] << 28 & 68719476735L | (long)in[29 + inPos] << 36 & 17592186044415L | (long)in[30 + inPos] << 44 & 562949953421311L;
         out[5 + outPos] = (long)in[30 + inPos] >> 5 & 7L | (long)in[31 + inPos] << 3 & 2047L | (long)in[32 + inPos] << 11 & 524287L | (long)in[33 + inPos] << 19 & 134217727L | (long)in[34 + inPos] << 27 & 34359738367L | (long)in[35 + inPos] << 35 & 8796093022207L | (long)in[36 + inPos] << 43 & 562949953421311L;
         out[6 + outPos] = (long)in[36 + inPos] >> 6 & 3L | (long)in[37 + inPos] << 2 & 1023L | (long)in[38 + inPos] << 10 & 262143L | (long)in[39 + inPos] << 18 & 67108863L | (long)in[40 + inPos] << 26 & 17179869183L | (long)in[41 + inPos] << 34 & 4398046511103L | (long)in[42 + inPos] << 42 & 562949953421311L;
         out[7 + outPos] = (long)in[42 + inPos] >> 7 & 1L | (long)in[43 + inPos] << 1 & 511L | (long)in[44 + inPos] << 9 & 131071L | (long)in[45 + inPos] << 17 & 33554431L | (long)in[46 + inPos] << 25 & 8589934591L | (long)in[47 + inPos] << 33 & 2199023255551L | (long)in[48 + inPos] << 41 & 562949953421311L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 562949953421311L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 1 & 127L | (long)in.get(7 + inPos) << 7 & 32767L | (long)in.get(8 + inPos) << 15 & 8388607L | (long)in.get(9 + inPos) << 23 & 2147483647L | (long)in.get(10 + inPos) << 31 & 549755813887L | (long)in.get(11 + inPos) << 39 & 140737488355327L | (long)in.get(12 + inPos) << 47 & 562949953421311L;
         out[2 + outPos] = (long)in.get(12 + inPos) >> 2 & 63L | (long)in.get(13 + inPos) << 6 & 16383L | (long)in.get(14 + inPos) << 14 & 4194303L | (long)in.get(15 + inPos) << 22 & 1073741823L | (long)in.get(16 + inPos) << 30 & 274877906943L | (long)in.get(17 + inPos) << 38 & 70368744177663L | (long)in.get(18 + inPos) << 46 & 562949953421311L;
         out[3 + outPos] = (long)in.get(18 + inPos) >> 3 & 31L | (long)in.get(19 + inPos) << 5 & 8191L | (long)in.get(20 + inPos) << 13 & 2097151L | (long)in.get(21 + inPos) << 21 & 536870911L | (long)in.get(22 + inPos) << 29 & 137438953471L | (long)in.get(23 + inPos) << 37 & 35184372088831L | (long)in.get(24 + inPos) << 45 & 562949953421311L;
         out[4 + outPos] = (long)in.get(24 + inPos) >> 4 & 15L | (long)in.get(25 + inPos) << 4 & 4095L | (long)in.get(26 + inPos) << 12 & 1048575L | (long)in.get(27 + inPos) << 20 & 268435455L | (long)in.get(28 + inPos) << 28 & 68719476735L | (long)in.get(29 + inPos) << 36 & 17592186044415L | (long)in.get(30 + inPos) << 44 & 562949953421311L;
         out[5 + outPos] = (long)in.get(30 + inPos) >> 5 & 7L | (long)in.get(31 + inPos) << 3 & 2047L | (long)in.get(32 + inPos) << 11 & 524287L | (long)in.get(33 + inPos) << 19 & 134217727L | (long)in.get(34 + inPos) << 27 & 34359738367L | (long)in.get(35 + inPos) << 35 & 8796093022207L | (long)in.get(36 + inPos) << 43 & 562949953421311L;
         out[6 + outPos] = (long)in.get(36 + inPos) >> 6 & 3L | (long)in.get(37 + inPos) << 2 & 1023L | (long)in.get(38 + inPos) << 10 & 262143L | (long)in.get(39 + inPos) << 18 & 67108863L | (long)in.get(40 + inPos) << 26 & 17179869183L | (long)in.get(41 + inPos) << 34 & 4398046511103L | (long)in.get(42 + inPos) << 42 & 562949953421311L;
         out[7 + outPos] = (long)in.get(42 + inPos) >> 7 & 1L | (long)in.get(43 + inPos) << 1 & 511L | (long)in.get(44 + inPos) << 9 & 131071L | (long)in.get(45 + inPos) << 17 & 33554431L | (long)in.get(46 + inPos) << 25 & 8589934591L | (long)in.get(47 + inPos) << 33 & 2199023255551L | (long)in.get(48 + inPos) << 41 & 562949953421311L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 562949953421311L;
         out[1 + outPos] = (long)in[6 + inPos] >> 1 & 127L | (long)in[7 + inPos] << 7 & 32767L | (long)in[8 + inPos] << 15 & 8388607L | (long)in[9 + inPos] << 23 & 2147483647L | (long)in[10 + inPos] << 31 & 549755813887L | (long)in[11 + inPos] << 39 & 140737488355327L | (long)in[12 + inPos] << 47 & 562949953421311L;
         out[2 + outPos] = (long)in[12 + inPos] >> 2 & 63L | (long)in[13 + inPos] << 6 & 16383L | (long)in[14 + inPos] << 14 & 4194303L | (long)in[15 + inPos] << 22 & 1073741823L | (long)in[16 + inPos] << 30 & 274877906943L | (long)in[17 + inPos] << 38 & 70368744177663L | (long)in[18 + inPos] << 46 & 562949953421311L;
         out[3 + outPos] = (long)in[18 + inPos] >> 3 & 31L | (long)in[19 + inPos] << 5 & 8191L | (long)in[20 + inPos] << 13 & 2097151L | (long)in[21 + inPos] << 21 & 536870911L | (long)in[22 + inPos] << 29 & 137438953471L | (long)in[23 + inPos] << 37 & 35184372088831L | (long)in[24 + inPos] << 45 & 562949953421311L;
         out[4 + outPos] = (long)in[24 + inPos] >> 4 & 15L | (long)in[25 + inPos] << 4 & 4095L | (long)in[26 + inPos] << 12 & 1048575L | (long)in[27 + inPos] << 20 & 268435455L | (long)in[28 + inPos] << 28 & 68719476735L | (long)in[29 + inPos] << 36 & 17592186044415L | (long)in[30 + inPos] << 44 & 562949953421311L;
         out[5 + outPos] = (long)in[30 + inPos] >> 5 & 7L | (long)in[31 + inPos] << 3 & 2047L | (long)in[32 + inPos] << 11 & 524287L | (long)in[33 + inPos] << 19 & 134217727L | (long)in[34 + inPos] << 27 & 34359738367L | (long)in[35 + inPos] << 35 & 8796093022207L | (long)in[36 + inPos] << 43 & 562949953421311L;
         out[6 + outPos] = (long)in[36 + inPos] >> 6 & 3L | (long)in[37 + inPos] << 2 & 1023L | (long)in[38 + inPos] << 10 & 262143L | (long)in[39 + inPos] << 18 & 67108863L | (long)in[40 + inPos] << 26 & 17179869183L | (long)in[41 + inPos] << 34 & 4398046511103L | (long)in[42 + inPos] << 42 & 562949953421311L;
         out[7 + outPos] = (long)in[42 + inPos] >> 7 & 1L | (long)in[43 + inPos] << 1 & 511L | (long)in[44 + inPos] << 9 & 131071L | (long)in[45 + inPos] << 17 & 33554431L | (long)in[46 + inPos] << 25 & 8589934591L | (long)in[47 + inPos] << 33 & 2199023255551L | (long)in[48 + inPos] << 41 & 562949953421311L;
         out[8 + outPos] = (long)in[49 + inPos] & 255L | (long)in[50 + inPos] << 8 & 65535L | (long)in[51 + inPos] << 16 & 16777215L | (long)in[52 + inPos] << 24 & 4294967295L | (long)in[53 + inPos] << 32 & 1099511627775L | (long)in[54 + inPos] << 40 & 281474976710655L | (long)in[55 + inPos] << 48 & 562949953421311L;
         out[9 + outPos] = (long)in[55 + inPos] >> 1 & 127L | (long)in[56 + inPos] << 7 & 32767L | (long)in[57 + inPos] << 15 & 8388607L | (long)in[58 + inPos] << 23 & 2147483647L | (long)in[59 + inPos] << 31 & 549755813887L | (long)in[60 + inPos] << 39 & 140737488355327L | (long)in[61 + inPos] << 47 & 562949953421311L;
         out[10 + outPos] = (long)in[61 + inPos] >> 2 & 63L | (long)in[62 + inPos] << 6 & 16383L | (long)in[63 + inPos] << 14 & 4194303L | (long)in[64 + inPos] << 22 & 1073741823L | (long)in[65 + inPos] << 30 & 274877906943L | (long)in[66 + inPos] << 38 & 70368744177663L | (long)in[67 + inPos] << 46 & 562949953421311L;
         out[11 + outPos] = (long)in[67 + inPos] >> 3 & 31L | (long)in[68 + inPos] << 5 & 8191L | (long)in[69 + inPos] << 13 & 2097151L | (long)in[70 + inPos] << 21 & 536870911L | (long)in[71 + inPos] << 29 & 137438953471L | (long)in[72 + inPos] << 37 & 35184372088831L | (long)in[73 + inPos] << 45 & 562949953421311L;
         out[12 + outPos] = (long)in[73 + inPos] >> 4 & 15L | (long)in[74 + inPos] << 4 & 4095L | (long)in[75 + inPos] << 12 & 1048575L | (long)in[76 + inPos] << 20 & 268435455L | (long)in[77 + inPos] << 28 & 68719476735L | (long)in[78 + inPos] << 36 & 17592186044415L | (long)in[79 + inPos] << 44 & 562949953421311L;
         out[13 + outPos] = (long)in[79 + inPos] >> 5 & 7L | (long)in[80 + inPos] << 3 & 2047L | (long)in[81 + inPos] << 11 & 524287L | (long)in[82 + inPos] << 19 & 134217727L | (long)in[83 + inPos] << 27 & 34359738367L | (long)in[84 + inPos] << 35 & 8796093022207L | (long)in[85 + inPos] << 43 & 562949953421311L;
         out[14 + outPos] = (long)in[85 + inPos] >> 6 & 3L | (long)in[86 + inPos] << 2 & 1023L | (long)in[87 + inPos] << 10 & 262143L | (long)in[88 + inPos] << 18 & 67108863L | (long)in[89 + inPos] << 26 & 17179869183L | (long)in[90 + inPos] << 34 & 4398046511103L | (long)in[91 + inPos] << 42 & 562949953421311L;
         out[15 + outPos] = (long)in[91 + inPos] >> 7 & 1L | (long)in[92 + inPos] << 1 & 511L | (long)in[93 + inPos] << 9 & 131071L | (long)in[94 + inPos] << 17 & 33554431L | (long)in[95 + inPos] << 25 & 8589934591L | (long)in[96 + inPos] << 33 & 2199023255551L | (long)in[97 + inPos] << 41 & 562949953421311L;
         out[16 + outPos] = (long)in[98 + inPos] & 255L | (long)in[99 + inPos] << 8 & 65535L | (long)in[100 + inPos] << 16 & 16777215L | (long)in[101 + inPos] << 24 & 4294967295L | (long)in[102 + inPos] << 32 & 1099511627775L | (long)in[103 + inPos] << 40 & 281474976710655L | (long)in[104 + inPos] << 48 & 562949953421311L;
         out[17 + outPos] = (long)in[104 + inPos] >> 1 & 127L | (long)in[105 + inPos] << 7 & 32767L | (long)in[106 + inPos] << 15 & 8388607L | (long)in[107 + inPos] << 23 & 2147483647L | (long)in[108 + inPos] << 31 & 549755813887L | (long)in[109 + inPos] << 39 & 140737488355327L | (long)in[110 + inPos] << 47 & 562949953421311L;
         out[18 + outPos] = (long)in[110 + inPos] >> 2 & 63L | (long)in[111 + inPos] << 6 & 16383L | (long)in[112 + inPos] << 14 & 4194303L | (long)in[113 + inPos] << 22 & 1073741823L | (long)in[114 + inPos] << 30 & 274877906943L | (long)in[115 + inPos] << 38 & 70368744177663L | (long)in[116 + inPos] << 46 & 562949953421311L;
         out[19 + outPos] = (long)in[116 + inPos] >> 3 & 31L | (long)in[117 + inPos] << 5 & 8191L | (long)in[118 + inPos] << 13 & 2097151L | (long)in[119 + inPos] << 21 & 536870911L | (long)in[120 + inPos] << 29 & 137438953471L | (long)in[121 + inPos] << 37 & 35184372088831L | (long)in[122 + inPos] << 45 & 562949953421311L;
         out[20 + outPos] = (long)in[122 + inPos] >> 4 & 15L | (long)in[123 + inPos] << 4 & 4095L | (long)in[124 + inPos] << 12 & 1048575L | (long)in[125 + inPos] << 20 & 268435455L | (long)in[126 + inPos] << 28 & 68719476735L | (long)in[127 + inPos] << 36 & 17592186044415L | (long)in[128 + inPos] << 44 & 562949953421311L;
         out[21 + outPos] = (long)in[128 + inPos] >> 5 & 7L | (long)in[129 + inPos] << 3 & 2047L | (long)in[130 + inPos] << 11 & 524287L | (long)in[131 + inPos] << 19 & 134217727L | (long)in[132 + inPos] << 27 & 34359738367L | (long)in[133 + inPos] << 35 & 8796093022207L | (long)in[134 + inPos] << 43 & 562949953421311L;
         out[22 + outPos] = (long)in[134 + inPos] >> 6 & 3L | (long)in[135 + inPos] << 2 & 1023L | (long)in[136 + inPos] << 10 & 262143L | (long)in[137 + inPos] << 18 & 67108863L | (long)in[138 + inPos] << 26 & 17179869183L | (long)in[139 + inPos] << 34 & 4398046511103L | (long)in[140 + inPos] << 42 & 562949953421311L;
         out[23 + outPos] = (long)in[140 + inPos] >> 7 & 1L | (long)in[141 + inPos] << 1 & 511L | (long)in[142 + inPos] << 9 & 131071L | (long)in[143 + inPos] << 17 & 33554431L | (long)in[144 + inPos] << 25 & 8589934591L | (long)in[145 + inPos] << 33 & 2199023255551L | (long)in[146 + inPos] << 41 & 562949953421311L;
         out[24 + outPos] = (long)in[147 + inPos] & 255L | (long)in[148 + inPos] << 8 & 65535L | (long)in[149 + inPos] << 16 & 16777215L | (long)in[150 + inPos] << 24 & 4294967295L | (long)in[151 + inPos] << 32 & 1099511627775L | (long)in[152 + inPos] << 40 & 281474976710655L | (long)in[153 + inPos] << 48 & 562949953421311L;
         out[25 + outPos] = (long)in[153 + inPos] >> 1 & 127L | (long)in[154 + inPos] << 7 & 32767L | (long)in[155 + inPos] << 15 & 8388607L | (long)in[156 + inPos] << 23 & 2147483647L | (long)in[157 + inPos] << 31 & 549755813887L | (long)in[158 + inPos] << 39 & 140737488355327L | (long)in[159 + inPos] << 47 & 562949953421311L;
         out[26 + outPos] = (long)in[159 + inPos] >> 2 & 63L | (long)in[160 + inPos] << 6 & 16383L | (long)in[161 + inPos] << 14 & 4194303L | (long)in[162 + inPos] << 22 & 1073741823L | (long)in[163 + inPos] << 30 & 274877906943L | (long)in[164 + inPos] << 38 & 70368744177663L | (long)in[165 + inPos] << 46 & 562949953421311L;
         out[27 + outPos] = (long)in[165 + inPos] >> 3 & 31L | (long)in[166 + inPos] << 5 & 8191L | (long)in[167 + inPos] << 13 & 2097151L | (long)in[168 + inPos] << 21 & 536870911L | (long)in[169 + inPos] << 29 & 137438953471L | (long)in[170 + inPos] << 37 & 35184372088831L | (long)in[171 + inPos] << 45 & 562949953421311L;
         out[28 + outPos] = (long)in[171 + inPos] >> 4 & 15L | (long)in[172 + inPos] << 4 & 4095L | (long)in[173 + inPos] << 12 & 1048575L | (long)in[174 + inPos] << 20 & 268435455L | (long)in[175 + inPos] << 28 & 68719476735L | (long)in[176 + inPos] << 36 & 17592186044415L | (long)in[177 + inPos] << 44 & 562949953421311L;
         out[29 + outPos] = (long)in[177 + inPos] >> 5 & 7L | (long)in[178 + inPos] << 3 & 2047L | (long)in[179 + inPos] << 11 & 524287L | (long)in[180 + inPos] << 19 & 134217727L | (long)in[181 + inPos] << 27 & 34359738367L | (long)in[182 + inPos] << 35 & 8796093022207L | (long)in[183 + inPos] << 43 & 562949953421311L;
         out[30 + outPos] = (long)in[183 + inPos] >> 6 & 3L | (long)in[184 + inPos] << 2 & 1023L | (long)in[185 + inPos] << 10 & 262143L | (long)in[186 + inPos] << 18 & 67108863L | (long)in[187 + inPos] << 26 & 17179869183L | (long)in[188 + inPos] << 34 & 4398046511103L | (long)in[189 + inPos] << 42 & 562949953421311L;
         out[31 + outPos] = (long)in[189 + inPos] >> 7 & 1L | (long)in[190 + inPos] << 1 & 511L | (long)in[191 + inPos] << 9 & 131071L | (long)in[192 + inPos] << 17 & 33554431L | (long)in[193 + inPos] << 25 & 8589934591L | (long)in[194 + inPos] << 33 & 2199023255551L | (long)in[195 + inPos] << 41 & 562949953421311L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 562949953421311L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 1 & 127L | (long)in.get(7 + inPos) << 7 & 32767L | (long)in.get(8 + inPos) << 15 & 8388607L | (long)in.get(9 + inPos) << 23 & 2147483647L | (long)in.get(10 + inPos) << 31 & 549755813887L | (long)in.get(11 + inPos) << 39 & 140737488355327L | (long)in.get(12 + inPos) << 47 & 562949953421311L;
         out[2 + outPos] = (long)in.get(12 + inPos) >> 2 & 63L | (long)in.get(13 + inPos) << 6 & 16383L | (long)in.get(14 + inPos) << 14 & 4194303L | (long)in.get(15 + inPos) << 22 & 1073741823L | (long)in.get(16 + inPos) << 30 & 274877906943L | (long)in.get(17 + inPos) << 38 & 70368744177663L | (long)in.get(18 + inPos) << 46 & 562949953421311L;
         out[3 + outPos] = (long)in.get(18 + inPos) >> 3 & 31L | (long)in.get(19 + inPos) << 5 & 8191L | (long)in.get(20 + inPos) << 13 & 2097151L | (long)in.get(21 + inPos) << 21 & 536870911L | (long)in.get(22 + inPos) << 29 & 137438953471L | (long)in.get(23 + inPos) << 37 & 35184372088831L | (long)in.get(24 + inPos) << 45 & 562949953421311L;
         out[4 + outPos] = (long)in.get(24 + inPos) >> 4 & 15L | (long)in.get(25 + inPos) << 4 & 4095L | (long)in.get(26 + inPos) << 12 & 1048575L | (long)in.get(27 + inPos) << 20 & 268435455L | (long)in.get(28 + inPos) << 28 & 68719476735L | (long)in.get(29 + inPos) << 36 & 17592186044415L | (long)in.get(30 + inPos) << 44 & 562949953421311L;
         out[5 + outPos] = (long)in.get(30 + inPos) >> 5 & 7L | (long)in.get(31 + inPos) << 3 & 2047L | (long)in.get(32 + inPos) << 11 & 524287L | (long)in.get(33 + inPos) << 19 & 134217727L | (long)in.get(34 + inPos) << 27 & 34359738367L | (long)in.get(35 + inPos) << 35 & 8796093022207L | (long)in.get(36 + inPos) << 43 & 562949953421311L;
         out[6 + outPos] = (long)in.get(36 + inPos) >> 6 & 3L | (long)in.get(37 + inPos) << 2 & 1023L | (long)in.get(38 + inPos) << 10 & 262143L | (long)in.get(39 + inPos) << 18 & 67108863L | (long)in.get(40 + inPos) << 26 & 17179869183L | (long)in.get(41 + inPos) << 34 & 4398046511103L | (long)in.get(42 + inPos) << 42 & 562949953421311L;
         out[7 + outPos] = (long)in.get(42 + inPos) >> 7 & 1L | (long)in.get(43 + inPos) << 1 & 511L | (long)in.get(44 + inPos) << 9 & 131071L | (long)in.get(45 + inPos) << 17 & 33554431L | (long)in.get(46 + inPos) << 25 & 8589934591L | (long)in.get(47 + inPos) << 33 & 2199023255551L | (long)in.get(48 + inPos) << 41 & 562949953421311L;
         out[8 + outPos] = (long)in.get(49 + inPos) & 255L | (long)in.get(50 + inPos) << 8 & 65535L | (long)in.get(51 + inPos) << 16 & 16777215L | (long)in.get(52 + inPos) << 24 & 4294967295L | (long)in.get(53 + inPos) << 32 & 1099511627775L | (long)in.get(54 + inPos) << 40 & 281474976710655L | (long)in.get(55 + inPos) << 48 & 562949953421311L;
         out[9 + outPos] = (long)in.get(55 + inPos) >> 1 & 127L | (long)in.get(56 + inPos) << 7 & 32767L | (long)in.get(57 + inPos) << 15 & 8388607L | (long)in.get(58 + inPos) << 23 & 2147483647L | (long)in.get(59 + inPos) << 31 & 549755813887L | (long)in.get(60 + inPos) << 39 & 140737488355327L | (long)in.get(61 + inPos) << 47 & 562949953421311L;
         out[10 + outPos] = (long)in.get(61 + inPos) >> 2 & 63L | (long)in.get(62 + inPos) << 6 & 16383L | (long)in.get(63 + inPos) << 14 & 4194303L | (long)in.get(64 + inPos) << 22 & 1073741823L | (long)in.get(65 + inPos) << 30 & 274877906943L | (long)in.get(66 + inPos) << 38 & 70368744177663L | (long)in.get(67 + inPos) << 46 & 562949953421311L;
         out[11 + outPos] = (long)in.get(67 + inPos) >> 3 & 31L | (long)in.get(68 + inPos) << 5 & 8191L | (long)in.get(69 + inPos) << 13 & 2097151L | (long)in.get(70 + inPos) << 21 & 536870911L | (long)in.get(71 + inPos) << 29 & 137438953471L | (long)in.get(72 + inPos) << 37 & 35184372088831L | (long)in.get(73 + inPos) << 45 & 562949953421311L;
         out[12 + outPos] = (long)in.get(73 + inPos) >> 4 & 15L | (long)in.get(74 + inPos) << 4 & 4095L | (long)in.get(75 + inPos) << 12 & 1048575L | (long)in.get(76 + inPos) << 20 & 268435455L | (long)in.get(77 + inPos) << 28 & 68719476735L | (long)in.get(78 + inPos) << 36 & 17592186044415L | (long)in.get(79 + inPos) << 44 & 562949953421311L;
         out[13 + outPos] = (long)in.get(79 + inPos) >> 5 & 7L | (long)in.get(80 + inPos) << 3 & 2047L | (long)in.get(81 + inPos) << 11 & 524287L | (long)in.get(82 + inPos) << 19 & 134217727L | (long)in.get(83 + inPos) << 27 & 34359738367L | (long)in.get(84 + inPos) << 35 & 8796093022207L | (long)in.get(85 + inPos) << 43 & 562949953421311L;
         out[14 + outPos] = (long)in.get(85 + inPos) >> 6 & 3L | (long)in.get(86 + inPos) << 2 & 1023L | (long)in.get(87 + inPos) << 10 & 262143L | (long)in.get(88 + inPos) << 18 & 67108863L | (long)in.get(89 + inPos) << 26 & 17179869183L | (long)in.get(90 + inPos) << 34 & 4398046511103L | (long)in.get(91 + inPos) << 42 & 562949953421311L;
         out[15 + outPos] = (long)in.get(91 + inPos) >> 7 & 1L | (long)in.get(92 + inPos) << 1 & 511L | (long)in.get(93 + inPos) << 9 & 131071L | (long)in.get(94 + inPos) << 17 & 33554431L | (long)in.get(95 + inPos) << 25 & 8589934591L | (long)in.get(96 + inPos) << 33 & 2199023255551L | (long)in.get(97 + inPos) << 41 & 562949953421311L;
         out[16 + outPos] = (long)in.get(98 + inPos) & 255L | (long)in.get(99 + inPos) << 8 & 65535L | (long)in.get(100 + inPos) << 16 & 16777215L | (long)in.get(101 + inPos) << 24 & 4294967295L | (long)in.get(102 + inPos) << 32 & 1099511627775L | (long)in.get(103 + inPos) << 40 & 281474976710655L | (long)in.get(104 + inPos) << 48 & 562949953421311L;
         out[17 + outPos] = (long)in.get(104 + inPos) >> 1 & 127L | (long)in.get(105 + inPos) << 7 & 32767L | (long)in.get(106 + inPos) << 15 & 8388607L | (long)in.get(107 + inPos) << 23 & 2147483647L | (long)in.get(108 + inPos) << 31 & 549755813887L | (long)in.get(109 + inPos) << 39 & 140737488355327L | (long)in.get(110 + inPos) << 47 & 562949953421311L;
         out[18 + outPos] = (long)in.get(110 + inPos) >> 2 & 63L | (long)in.get(111 + inPos) << 6 & 16383L | (long)in.get(112 + inPos) << 14 & 4194303L | (long)in.get(113 + inPos) << 22 & 1073741823L | (long)in.get(114 + inPos) << 30 & 274877906943L | (long)in.get(115 + inPos) << 38 & 70368744177663L | (long)in.get(116 + inPos) << 46 & 562949953421311L;
         out[19 + outPos] = (long)in.get(116 + inPos) >> 3 & 31L | (long)in.get(117 + inPos) << 5 & 8191L | (long)in.get(118 + inPos) << 13 & 2097151L | (long)in.get(119 + inPos) << 21 & 536870911L | (long)in.get(120 + inPos) << 29 & 137438953471L | (long)in.get(121 + inPos) << 37 & 35184372088831L | (long)in.get(122 + inPos) << 45 & 562949953421311L;
         out[20 + outPos] = (long)in.get(122 + inPos) >> 4 & 15L | (long)in.get(123 + inPos) << 4 & 4095L | (long)in.get(124 + inPos) << 12 & 1048575L | (long)in.get(125 + inPos) << 20 & 268435455L | (long)in.get(126 + inPos) << 28 & 68719476735L | (long)in.get(127 + inPos) << 36 & 17592186044415L | (long)in.get(128 + inPos) << 44 & 562949953421311L;
         out[21 + outPos] = (long)in.get(128 + inPos) >> 5 & 7L | (long)in.get(129 + inPos) << 3 & 2047L | (long)in.get(130 + inPos) << 11 & 524287L | (long)in.get(131 + inPos) << 19 & 134217727L | (long)in.get(132 + inPos) << 27 & 34359738367L | (long)in.get(133 + inPos) << 35 & 8796093022207L | (long)in.get(134 + inPos) << 43 & 562949953421311L;
         out[22 + outPos] = (long)in.get(134 + inPos) >> 6 & 3L | (long)in.get(135 + inPos) << 2 & 1023L | (long)in.get(136 + inPos) << 10 & 262143L | (long)in.get(137 + inPos) << 18 & 67108863L | (long)in.get(138 + inPos) << 26 & 17179869183L | (long)in.get(139 + inPos) << 34 & 4398046511103L | (long)in.get(140 + inPos) << 42 & 562949953421311L;
         out[23 + outPos] = (long)in.get(140 + inPos) >> 7 & 1L | (long)in.get(141 + inPos) << 1 & 511L | (long)in.get(142 + inPos) << 9 & 131071L | (long)in.get(143 + inPos) << 17 & 33554431L | (long)in.get(144 + inPos) << 25 & 8589934591L | (long)in.get(145 + inPos) << 33 & 2199023255551L | (long)in.get(146 + inPos) << 41 & 562949953421311L;
         out[24 + outPos] = (long)in.get(147 + inPos) & 255L | (long)in.get(148 + inPos) << 8 & 65535L | (long)in.get(149 + inPos) << 16 & 16777215L | (long)in.get(150 + inPos) << 24 & 4294967295L | (long)in.get(151 + inPos) << 32 & 1099511627775L | (long)in.get(152 + inPos) << 40 & 281474976710655L | (long)in.get(153 + inPos) << 48 & 562949953421311L;
         out[25 + outPos] = (long)in.get(153 + inPos) >> 1 & 127L | (long)in.get(154 + inPos) << 7 & 32767L | (long)in.get(155 + inPos) << 15 & 8388607L | (long)in.get(156 + inPos) << 23 & 2147483647L | (long)in.get(157 + inPos) << 31 & 549755813887L | (long)in.get(158 + inPos) << 39 & 140737488355327L | (long)in.get(159 + inPos) << 47 & 562949953421311L;
         out[26 + outPos] = (long)in.get(159 + inPos) >> 2 & 63L | (long)in.get(160 + inPos) << 6 & 16383L | (long)in.get(161 + inPos) << 14 & 4194303L | (long)in.get(162 + inPos) << 22 & 1073741823L | (long)in.get(163 + inPos) << 30 & 274877906943L | (long)in.get(164 + inPos) << 38 & 70368744177663L | (long)in.get(165 + inPos) << 46 & 562949953421311L;
         out[27 + outPos] = (long)in.get(165 + inPos) >> 3 & 31L | (long)in.get(166 + inPos) << 5 & 8191L | (long)in.get(167 + inPos) << 13 & 2097151L | (long)in.get(168 + inPos) << 21 & 536870911L | (long)in.get(169 + inPos) << 29 & 137438953471L | (long)in.get(170 + inPos) << 37 & 35184372088831L | (long)in.get(171 + inPos) << 45 & 562949953421311L;
         out[28 + outPos] = (long)in.get(171 + inPos) >> 4 & 15L | (long)in.get(172 + inPos) << 4 & 4095L | (long)in.get(173 + inPos) << 12 & 1048575L | (long)in.get(174 + inPos) << 20 & 268435455L | (long)in.get(175 + inPos) << 28 & 68719476735L | (long)in.get(176 + inPos) << 36 & 17592186044415L | (long)in.get(177 + inPos) << 44 & 562949953421311L;
         out[29 + outPos] = (long)in.get(177 + inPos) >> 5 & 7L | (long)in.get(178 + inPos) << 3 & 2047L | (long)in.get(179 + inPos) << 11 & 524287L | (long)in.get(180 + inPos) << 19 & 134217727L | (long)in.get(181 + inPos) << 27 & 34359738367L | (long)in.get(182 + inPos) << 35 & 8796093022207L | (long)in.get(183 + inPos) << 43 & 562949953421311L;
         out[30 + outPos] = (long)in.get(183 + inPos) >> 6 & 3L | (long)in.get(184 + inPos) << 2 & 1023L | (long)in.get(185 + inPos) << 10 & 262143L | (long)in.get(186 + inPos) << 18 & 67108863L | (long)in.get(187 + inPos) << 26 & 17179869183L | (long)in.get(188 + inPos) << 34 & 4398046511103L | (long)in.get(189 + inPos) << 42 & 562949953421311L;
         out[31 + outPos] = (long)in.get(189 + inPos) >> 7 & 1L | (long)in.get(190 + inPos) << 1 & 511L | (long)in.get(191 + inPos) << 9 & 131071L | (long)in.get(192 + inPos) << 17 & 33554431L | (long)in.get(193 + inPos) << 25 & 8589934591L | (long)in.get(194 + inPos) << 33 & 2199023255551L | (long)in.get(195 + inPos) << 41 & 562949953421311L;
      }
   }

   private static final class Packer50 extends BytePackerForLong {
      private Packer50() {
         super(50);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 1125899906842623L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 1125899906842623L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 1125899906842623L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 1125899906842623L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 1125899906842623L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 1125899906842623L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 1125899906842623L) >>> 48 | (in[1 + inPos] & 1125899906842623L) << 2) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 1125899906842623L) >>> 6 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 1125899906842623L) >>> 14 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 1125899906842623L) >>> 22 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 1125899906842623L) >>> 30 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 1125899906842623L) >>> 38 & 255L));
         out[12 + outPos] = (byte)((int)(((in[1 + inPos] & 1125899906842623L) >>> 46 | (in[2 + inPos] & 1125899906842623L) << 4) & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 1125899906842623L) >>> 4 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 1125899906842623L) >>> 12 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 1125899906842623L) >>> 20 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 1125899906842623L) >>> 28 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 1125899906842623L) >>> 36 & 255L));
         out[18 + outPos] = (byte)((int)(((in[2 + inPos] & 1125899906842623L) >>> 44 | (in[3 + inPos] & 1125899906842623L) << 6) & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 1125899906842623L) >>> 2 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 1125899906842623L) >>> 10 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 1125899906842623L) >>> 18 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 1125899906842623L) >>> 26 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 1125899906842623L) >>> 34 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 1125899906842623L) >>> 42 & 255L));
         out[25 + outPos] = (byte)((int)(in[4 + inPos] & 1125899906842623L & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 1125899906842623L) >>> 8 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 1125899906842623L) >>> 16 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 1125899906842623L) >>> 24 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 1125899906842623L) >>> 32 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 1125899906842623L) >>> 40 & 255L));
         out[31 + outPos] = (byte)((int)(((in[4 + inPos] & 1125899906842623L) >>> 48 | (in[5 + inPos] & 1125899906842623L) << 2) & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 1125899906842623L) >>> 6 & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 1125899906842623L) >>> 14 & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 1125899906842623L) >>> 22 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 1125899906842623L) >>> 30 & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 1125899906842623L) >>> 38 & 255L));
         out[37 + outPos] = (byte)((int)(((in[5 + inPos] & 1125899906842623L) >>> 46 | (in[6 + inPos] & 1125899906842623L) << 4) & 255L));
         out[38 + outPos] = (byte)((int)((in[6 + inPos] & 1125899906842623L) >>> 4 & 255L));
         out[39 + outPos] = (byte)((int)((in[6 + inPos] & 1125899906842623L) >>> 12 & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 1125899906842623L) >>> 20 & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 1125899906842623L) >>> 28 & 255L));
         out[42 + outPos] = (byte)((int)((in[6 + inPos] & 1125899906842623L) >>> 36 & 255L));
         out[43 + outPos] = (byte)((int)(((in[6 + inPos] & 1125899906842623L) >>> 44 | (in[7 + inPos] & 1125899906842623L) << 6) & 255L));
         out[44 + outPos] = (byte)((int)((in[7 + inPos] & 1125899906842623L) >>> 2 & 255L));
         out[45 + outPos] = (byte)((int)((in[7 + inPos] & 1125899906842623L) >>> 10 & 255L));
         out[46 + outPos] = (byte)((int)((in[7 + inPos] & 1125899906842623L) >>> 18 & 255L));
         out[47 + outPos] = (byte)((int)((in[7 + inPos] & 1125899906842623L) >>> 26 & 255L));
         out[48 + outPos] = (byte)((int)((in[7 + inPos] & 1125899906842623L) >>> 34 & 255L));
         out[49 + outPos] = (byte)((int)((in[7 + inPos] & 1125899906842623L) >>> 42 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 1125899906842623L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 1125899906842623L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 1125899906842623L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 1125899906842623L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 1125899906842623L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 1125899906842623L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 1125899906842623L) >>> 48 | (in[1 + inPos] & 1125899906842623L) << 2) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 1125899906842623L) >>> 6 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 1125899906842623L) >>> 14 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 1125899906842623L) >>> 22 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 1125899906842623L) >>> 30 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 1125899906842623L) >>> 38 & 255L));
         out[12 + outPos] = (byte)((int)(((in[1 + inPos] & 1125899906842623L) >>> 46 | (in[2 + inPos] & 1125899906842623L) << 4) & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 1125899906842623L) >>> 4 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 1125899906842623L) >>> 12 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 1125899906842623L) >>> 20 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 1125899906842623L) >>> 28 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 1125899906842623L) >>> 36 & 255L));
         out[18 + outPos] = (byte)((int)(((in[2 + inPos] & 1125899906842623L) >>> 44 | (in[3 + inPos] & 1125899906842623L) << 6) & 255L));
         out[19 + outPos] = (byte)((int)((in[3 + inPos] & 1125899906842623L) >>> 2 & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 1125899906842623L) >>> 10 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 1125899906842623L) >>> 18 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 1125899906842623L) >>> 26 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 1125899906842623L) >>> 34 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 1125899906842623L) >>> 42 & 255L));
         out[25 + outPos] = (byte)((int)(in[4 + inPos] & 1125899906842623L & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 1125899906842623L) >>> 8 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 1125899906842623L) >>> 16 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 1125899906842623L) >>> 24 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 1125899906842623L) >>> 32 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 1125899906842623L) >>> 40 & 255L));
         out[31 + outPos] = (byte)((int)(((in[4 + inPos] & 1125899906842623L) >>> 48 | (in[5 + inPos] & 1125899906842623L) << 2) & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 1125899906842623L) >>> 6 & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 1125899906842623L) >>> 14 & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 1125899906842623L) >>> 22 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 1125899906842623L) >>> 30 & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 1125899906842623L) >>> 38 & 255L));
         out[37 + outPos] = (byte)((int)(((in[5 + inPos] & 1125899906842623L) >>> 46 | (in[6 + inPos] & 1125899906842623L) << 4) & 255L));
         out[38 + outPos] = (byte)((int)((in[6 + inPos] & 1125899906842623L) >>> 4 & 255L));
         out[39 + outPos] = (byte)((int)((in[6 + inPos] & 1125899906842623L) >>> 12 & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 1125899906842623L) >>> 20 & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 1125899906842623L) >>> 28 & 255L));
         out[42 + outPos] = (byte)((int)((in[6 + inPos] & 1125899906842623L) >>> 36 & 255L));
         out[43 + outPos] = (byte)((int)(((in[6 + inPos] & 1125899906842623L) >>> 44 | (in[7 + inPos] & 1125899906842623L) << 6) & 255L));
         out[44 + outPos] = (byte)((int)((in[7 + inPos] & 1125899906842623L) >>> 2 & 255L));
         out[45 + outPos] = (byte)((int)((in[7 + inPos] & 1125899906842623L) >>> 10 & 255L));
         out[46 + outPos] = (byte)((int)((in[7 + inPos] & 1125899906842623L) >>> 18 & 255L));
         out[47 + outPos] = (byte)((int)((in[7 + inPos] & 1125899906842623L) >>> 26 & 255L));
         out[48 + outPos] = (byte)((int)((in[7 + inPos] & 1125899906842623L) >>> 34 & 255L));
         out[49 + outPos] = (byte)((int)((in[7 + inPos] & 1125899906842623L) >>> 42 & 255L));
         out[50 + outPos] = (byte)((int)(in[8 + inPos] & 1125899906842623L & 255L));
         out[51 + outPos] = (byte)((int)((in[8 + inPos] & 1125899906842623L) >>> 8 & 255L));
         out[52 + outPos] = (byte)((int)((in[8 + inPos] & 1125899906842623L) >>> 16 & 255L));
         out[53 + outPos] = (byte)((int)((in[8 + inPos] & 1125899906842623L) >>> 24 & 255L));
         out[54 + outPos] = (byte)((int)((in[8 + inPos] & 1125899906842623L) >>> 32 & 255L));
         out[55 + outPos] = (byte)((int)((in[8 + inPos] & 1125899906842623L) >>> 40 & 255L));
         out[56 + outPos] = (byte)((int)(((in[8 + inPos] & 1125899906842623L) >>> 48 | (in[9 + inPos] & 1125899906842623L) << 2) & 255L));
         out[57 + outPos] = (byte)((int)((in[9 + inPos] & 1125899906842623L) >>> 6 & 255L));
         out[58 + outPos] = (byte)((int)((in[9 + inPos] & 1125899906842623L) >>> 14 & 255L));
         out[59 + outPos] = (byte)((int)((in[9 + inPos] & 1125899906842623L) >>> 22 & 255L));
         out[60 + outPos] = (byte)((int)((in[9 + inPos] & 1125899906842623L) >>> 30 & 255L));
         out[61 + outPos] = (byte)((int)((in[9 + inPos] & 1125899906842623L) >>> 38 & 255L));
         out[62 + outPos] = (byte)((int)(((in[9 + inPos] & 1125899906842623L) >>> 46 | (in[10 + inPos] & 1125899906842623L) << 4) & 255L));
         out[63 + outPos] = (byte)((int)((in[10 + inPos] & 1125899906842623L) >>> 4 & 255L));
         out[64 + outPos] = (byte)((int)((in[10 + inPos] & 1125899906842623L) >>> 12 & 255L));
         out[65 + outPos] = (byte)((int)((in[10 + inPos] & 1125899906842623L) >>> 20 & 255L));
         out[66 + outPos] = (byte)((int)((in[10 + inPos] & 1125899906842623L) >>> 28 & 255L));
         out[67 + outPos] = (byte)((int)((in[10 + inPos] & 1125899906842623L) >>> 36 & 255L));
         out[68 + outPos] = (byte)((int)(((in[10 + inPos] & 1125899906842623L) >>> 44 | (in[11 + inPos] & 1125899906842623L) << 6) & 255L));
         out[69 + outPos] = (byte)((int)((in[11 + inPos] & 1125899906842623L) >>> 2 & 255L));
         out[70 + outPos] = (byte)((int)((in[11 + inPos] & 1125899906842623L) >>> 10 & 255L));
         out[71 + outPos] = (byte)((int)((in[11 + inPos] & 1125899906842623L) >>> 18 & 255L));
         out[72 + outPos] = (byte)((int)((in[11 + inPos] & 1125899906842623L) >>> 26 & 255L));
         out[73 + outPos] = (byte)((int)((in[11 + inPos] & 1125899906842623L) >>> 34 & 255L));
         out[74 + outPos] = (byte)((int)((in[11 + inPos] & 1125899906842623L) >>> 42 & 255L));
         out[75 + outPos] = (byte)((int)(in[12 + inPos] & 1125899906842623L & 255L));
         out[76 + outPos] = (byte)((int)((in[12 + inPos] & 1125899906842623L) >>> 8 & 255L));
         out[77 + outPos] = (byte)((int)((in[12 + inPos] & 1125899906842623L) >>> 16 & 255L));
         out[78 + outPos] = (byte)((int)((in[12 + inPos] & 1125899906842623L) >>> 24 & 255L));
         out[79 + outPos] = (byte)((int)((in[12 + inPos] & 1125899906842623L) >>> 32 & 255L));
         out[80 + outPos] = (byte)((int)((in[12 + inPos] & 1125899906842623L) >>> 40 & 255L));
         out[81 + outPos] = (byte)((int)(((in[12 + inPos] & 1125899906842623L) >>> 48 | (in[13 + inPos] & 1125899906842623L) << 2) & 255L));
         out[82 + outPos] = (byte)((int)((in[13 + inPos] & 1125899906842623L) >>> 6 & 255L));
         out[83 + outPos] = (byte)((int)((in[13 + inPos] & 1125899906842623L) >>> 14 & 255L));
         out[84 + outPos] = (byte)((int)((in[13 + inPos] & 1125899906842623L) >>> 22 & 255L));
         out[85 + outPos] = (byte)((int)((in[13 + inPos] & 1125899906842623L) >>> 30 & 255L));
         out[86 + outPos] = (byte)((int)((in[13 + inPos] & 1125899906842623L) >>> 38 & 255L));
         out[87 + outPos] = (byte)((int)(((in[13 + inPos] & 1125899906842623L) >>> 46 | (in[14 + inPos] & 1125899906842623L) << 4) & 255L));
         out[88 + outPos] = (byte)((int)((in[14 + inPos] & 1125899906842623L) >>> 4 & 255L));
         out[89 + outPos] = (byte)((int)((in[14 + inPos] & 1125899906842623L) >>> 12 & 255L));
         out[90 + outPos] = (byte)((int)((in[14 + inPos] & 1125899906842623L) >>> 20 & 255L));
         out[91 + outPos] = (byte)((int)((in[14 + inPos] & 1125899906842623L) >>> 28 & 255L));
         out[92 + outPos] = (byte)((int)((in[14 + inPos] & 1125899906842623L) >>> 36 & 255L));
         out[93 + outPos] = (byte)((int)(((in[14 + inPos] & 1125899906842623L) >>> 44 | (in[15 + inPos] & 1125899906842623L) << 6) & 255L));
         out[94 + outPos] = (byte)((int)((in[15 + inPos] & 1125899906842623L) >>> 2 & 255L));
         out[95 + outPos] = (byte)((int)((in[15 + inPos] & 1125899906842623L) >>> 10 & 255L));
         out[96 + outPos] = (byte)((int)((in[15 + inPos] & 1125899906842623L) >>> 18 & 255L));
         out[97 + outPos] = (byte)((int)((in[15 + inPos] & 1125899906842623L) >>> 26 & 255L));
         out[98 + outPos] = (byte)((int)((in[15 + inPos] & 1125899906842623L) >>> 34 & 255L));
         out[99 + outPos] = (byte)((int)((in[15 + inPos] & 1125899906842623L) >>> 42 & 255L));
         out[100 + outPos] = (byte)((int)(in[16 + inPos] & 1125899906842623L & 255L));
         out[101 + outPos] = (byte)((int)((in[16 + inPos] & 1125899906842623L) >>> 8 & 255L));
         out[102 + outPos] = (byte)((int)((in[16 + inPos] & 1125899906842623L) >>> 16 & 255L));
         out[103 + outPos] = (byte)((int)((in[16 + inPos] & 1125899906842623L) >>> 24 & 255L));
         out[104 + outPos] = (byte)((int)((in[16 + inPos] & 1125899906842623L) >>> 32 & 255L));
         out[105 + outPos] = (byte)((int)((in[16 + inPos] & 1125899906842623L) >>> 40 & 255L));
         out[106 + outPos] = (byte)((int)(((in[16 + inPos] & 1125899906842623L) >>> 48 | (in[17 + inPos] & 1125899906842623L) << 2) & 255L));
         out[107 + outPos] = (byte)((int)((in[17 + inPos] & 1125899906842623L) >>> 6 & 255L));
         out[108 + outPos] = (byte)((int)((in[17 + inPos] & 1125899906842623L) >>> 14 & 255L));
         out[109 + outPos] = (byte)((int)((in[17 + inPos] & 1125899906842623L) >>> 22 & 255L));
         out[110 + outPos] = (byte)((int)((in[17 + inPos] & 1125899906842623L) >>> 30 & 255L));
         out[111 + outPos] = (byte)((int)((in[17 + inPos] & 1125899906842623L) >>> 38 & 255L));
         out[112 + outPos] = (byte)((int)(((in[17 + inPos] & 1125899906842623L) >>> 46 | (in[18 + inPos] & 1125899906842623L) << 4) & 255L));
         out[113 + outPos] = (byte)((int)((in[18 + inPos] & 1125899906842623L) >>> 4 & 255L));
         out[114 + outPos] = (byte)((int)((in[18 + inPos] & 1125899906842623L) >>> 12 & 255L));
         out[115 + outPos] = (byte)((int)((in[18 + inPos] & 1125899906842623L) >>> 20 & 255L));
         out[116 + outPos] = (byte)((int)((in[18 + inPos] & 1125899906842623L) >>> 28 & 255L));
         out[117 + outPos] = (byte)((int)((in[18 + inPos] & 1125899906842623L) >>> 36 & 255L));
         out[118 + outPos] = (byte)((int)(((in[18 + inPos] & 1125899906842623L) >>> 44 | (in[19 + inPos] & 1125899906842623L) << 6) & 255L));
         out[119 + outPos] = (byte)((int)((in[19 + inPos] & 1125899906842623L) >>> 2 & 255L));
         out[120 + outPos] = (byte)((int)((in[19 + inPos] & 1125899906842623L) >>> 10 & 255L));
         out[121 + outPos] = (byte)((int)((in[19 + inPos] & 1125899906842623L) >>> 18 & 255L));
         out[122 + outPos] = (byte)((int)((in[19 + inPos] & 1125899906842623L) >>> 26 & 255L));
         out[123 + outPos] = (byte)((int)((in[19 + inPos] & 1125899906842623L) >>> 34 & 255L));
         out[124 + outPos] = (byte)((int)((in[19 + inPos] & 1125899906842623L) >>> 42 & 255L));
         out[125 + outPos] = (byte)((int)(in[20 + inPos] & 1125899906842623L & 255L));
         out[126 + outPos] = (byte)((int)((in[20 + inPos] & 1125899906842623L) >>> 8 & 255L));
         out[127 + outPos] = (byte)((int)((in[20 + inPos] & 1125899906842623L) >>> 16 & 255L));
         out[128 + outPos] = (byte)((int)((in[20 + inPos] & 1125899906842623L) >>> 24 & 255L));
         out[129 + outPos] = (byte)((int)((in[20 + inPos] & 1125899906842623L) >>> 32 & 255L));
         out[130 + outPos] = (byte)((int)((in[20 + inPos] & 1125899906842623L) >>> 40 & 255L));
         out[131 + outPos] = (byte)((int)(((in[20 + inPos] & 1125899906842623L) >>> 48 | (in[21 + inPos] & 1125899906842623L) << 2) & 255L));
         out[132 + outPos] = (byte)((int)((in[21 + inPos] & 1125899906842623L) >>> 6 & 255L));
         out[133 + outPos] = (byte)((int)((in[21 + inPos] & 1125899906842623L) >>> 14 & 255L));
         out[134 + outPos] = (byte)((int)((in[21 + inPos] & 1125899906842623L) >>> 22 & 255L));
         out[135 + outPos] = (byte)((int)((in[21 + inPos] & 1125899906842623L) >>> 30 & 255L));
         out[136 + outPos] = (byte)((int)((in[21 + inPos] & 1125899906842623L) >>> 38 & 255L));
         out[137 + outPos] = (byte)((int)(((in[21 + inPos] & 1125899906842623L) >>> 46 | (in[22 + inPos] & 1125899906842623L) << 4) & 255L));
         out[138 + outPos] = (byte)((int)((in[22 + inPos] & 1125899906842623L) >>> 4 & 255L));
         out[139 + outPos] = (byte)((int)((in[22 + inPos] & 1125899906842623L) >>> 12 & 255L));
         out[140 + outPos] = (byte)((int)((in[22 + inPos] & 1125899906842623L) >>> 20 & 255L));
         out[141 + outPos] = (byte)((int)((in[22 + inPos] & 1125899906842623L) >>> 28 & 255L));
         out[142 + outPos] = (byte)((int)((in[22 + inPos] & 1125899906842623L) >>> 36 & 255L));
         out[143 + outPos] = (byte)((int)(((in[22 + inPos] & 1125899906842623L) >>> 44 | (in[23 + inPos] & 1125899906842623L) << 6) & 255L));
         out[144 + outPos] = (byte)((int)((in[23 + inPos] & 1125899906842623L) >>> 2 & 255L));
         out[145 + outPos] = (byte)((int)((in[23 + inPos] & 1125899906842623L) >>> 10 & 255L));
         out[146 + outPos] = (byte)((int)((in[23 + inPos] & 1125899906842623L) >>> 18 & 255L));
         out[147 + outPos] = (byte)((int)((in[23 + inPos] & 1125899906842623L) >>> 26 & 255L));
         out[148 + outPos] = (byte)((int)((in[23 + inPos] & 1125899906842623L) >>> 34 & 255L));
         out[149 + outPos] = (byte)((int)((in[23 + inPos] & 1125899906842623L) >>> 42 & 255L));
         out[150 + outPos] = (byte)((int)(in[24 + inPos] & 1125899906842623L & 255L));
         out[151 + outPos] = (byte)((int)((in[24 + inPos] & 1125899906842623L) >>> 8 & 255L));
         out[152 + outPos] = (byte)((int)((in[24 + inPos] & 1125899906842623L) >>> 16 & 255L));
         out[153 + outPos] = (byte)((int)((in[24 + inPos] & 1125899906842623L) >>> 24 & 255L));
         out[154 + outPos] = (byte)((int)((in[24 + inPos] & 1125899906842623L) >>> 32 & 255L));
         out[155 + outPos] = (byte)((int)((in[24 + inPos] & 1125899906842623L) >>> 40 & 255L));
         out[156 + outPos] = (byte)((int)(((in[24 + inPos] & 1125899906842623L) >>> 48 | (in[25 + inPos] & 1125899906842623L) << 2) & 255L));
         out[157 + outPos] = (byte)((int)((in[25 + inPos] & 1125899906842623L) >>> 6 & 255L));
         out[158 + outPos] = (byte)((int)((in[25 + inPos] & 1125899906842623L) >>> 14 & 255L));
         out[159 + outPos] = (byte)((int)((in[25 + inPos] & 1125899906842623L) >>> 22 & 255L));
         out[160 + outPos] = (byte)((int)((in[25 + inPos] & 1125899906842623L) >>> 30 & 255L));
         out[161 + outPos] = (byte)((int)((in[25 + inPos] & 1125899906842623L) >>> 38 & 255L));
         out[162 + outPos] = (byte)((int)(((in[25 + inPos] & 1125899906842623L) >>> 46 | (in[26 + inPos] & 1125899906842623L) << 4) & 255L));
         out[163 + outPos] = (byte)((int)((in[26 + inPos] & 1125899906842623L) >>> 4 & 255L));
         out[164 + outPos] = (byte)((int)((in[26 + inPos] & 1125899906842623L) >>> 12 & 255L));
         out[165 + outPos] = (byte)((int)((in[26 + inPos] & 1125899906842623L) >>> 20 & 255L));
         out[166 + outPos] = (byte)((int)((in[26 + inPos] & 1125899906842623L) >>> 28 & 255L));
         out[167 + outPos] = (byte)((int)((in[26 + inPos] & 1125899906842623L) >>> 36 & 255L));
         out[168 + outPos] = (byte)((int)(((in[26 + inPos] & 1125899906842623L) >>> 44 | (in[27 + inPos] & 1125899906842623L) << 6) & 255L));
         out[169 + outPos] = (byte)((int)((in[27 + inPos] & 1125899906842623L) >>> 2 & 255L));
         out[170 + outPos] = (byte)((int)((in[27 + inPos] & 1125899906842623L) >>> 10 & 255L));
         out[171 + outPos] = (byte)((int)((in[27 + inPos] & 1125899906842623L) >>> 18 & 255L));
         out[172 + outPos] = (byte)((int)((in[27 + inPos] & 1125899906842623L) >>> 26 & 255L));
         out[173 + outPos] = (byte)((int)((in[27 + inPos] & 1125899906842623L) >>> 34 & 255L));
         out[174 + outPos] = (byte)((int)((in[27 + inPos] & 1125899906842623L) >>> 42 & 255L));
         out[175 + outPos] = (byte)((int)(in[28 + inPos] & 1125899906842623L & 255L));
         out[176 + outPos] = (byte)((int)((in[28 + inPos] & 1125899906842623L) >>> 8 & 255L));
         out[177 + outPos] = (byte)((int)((in[28 + inPos] & 1125899906842623L) >>> 16 & 255L));
         out[178 + outPos] = (byte)((int)((in[28 + inPos] & 1125899906842623L) >>> 24 & 255L));
         out[179 + outPos] = (byte)((int)((in[28 + inPos] & 1125899906842623L) >>> 32 & 255L));
         out[180 + outPos] = (byte)((int)((in[28 + inPos] & 1125899906842623L) >>> 40 & 255L));
         out[181 + outPos] = (byte)((int)(((in[28 + inPos] & 1125899906842623L) >>> 48 | (in[29 + inPos] & 1125899906842623L) << 2) & 255L));
         out[182 + outPos] = (byte)((int)((in[29 + inPos] & 1125899906842623L) >>> 6 & 255L));
         out[183 + outPos] = (byte)((int)((in[29 + inPos] & 1125899906842623L) >>> 14 & 255L));
         out[184 + outPos] = (byte)((int)((in[29 + inPos] & 1125899906842623L) >>> 22 & 255L));
         out[185 + outPos] = (byte)((int)((in[29 + inPos] & 1125899906842623L) >>> 30 & 255L));
         out[186 + outPos] = (byte)((int)((in[29 + inPos] & 1125899906842623L) >>> 38 & 255L));
         out[187 + outPos] = (byte)((int)(((in[29 + inPos] & 1125899906842623L) >>> 46 | (in[30 + inPos] & 1125899906842623L) << 4) & 255L));
         out[188 + outPos] = (byte)((int)((in[30 + inPos] & 1125899906842623L) >>> 4 & 255L));
         out[189 + outPos] = (byte)((int)((in[30 + inPos] & 1125899906842623L) >>> 12 & 255L));
         out[190 + outPos] = (byte)((int)((in[30 + inPos] & 1125899906842623L) >>> 20 & 255L));
         out[191 + outPos] = (byte)((int)((in[30 + inPos] & 1125899906842623L) >>> 28 & 255L));
         out[192 + outPos] = (byte)((int)((in[30 + inPos] & 1125899906842623L) >>> 36 & 255L));
         out[193 + outPos] = (byte)((int)(((in[30 + inPos] & 1125899906842623L) >>> 44 | (in[31 + inPos] & 1125899906842623L) << 6) & 255L));
         out[194 + outPos] = (byte)((int)((in[31 + inPos] & 1125899906842623L) >>> 2 & 255L));
         out[195 + outPos] = (byte)((int)((in[31 + inPos] & 1125899906842623L) >>> 10 & 255L));
         out[196 + outPos] = (byte)((int)((in[31 + inPos] & 1125899906842623L) >>> 18 & 255L));
         out[197 + outPos] = (byte)((int)((in[31 + inPos] & 1125899906842623L) >>> 26 & 255L));
         out[198 + outPos] = (byte)((int)((in[31 + inPos] & 1125899906842623L) >>> 34 & 255L));
         out[199 + outPos] = (byte)((int)((in[31 + inPos] & 1125899906842623L) >>> 42 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 1125899906842623L;
         out[1 + outPos] = (long)in[6 + inPos] >> 2 & 63L | (long)in[7 + inPos] << 6 & 16383L | (long)in[8 + inPos] << 14 & 4194303L | (long)in[9 + inPos] << 22 & 1073741823L | (long)in[10 + inPos] << 30 & 274877906943L | (long)in[11 + inPos] << 38 & 70368744177663L | (long)in[12 + inPos] << 46 & 1125899906842623L;
         out[2 + outPos] = (long)in[12 + inPos] >> 4 & 15L | (long)in[13 + inPos] << 4 & 4095L | (long)in[14 + inPos] << 12 & 1048575L | (long)in[15 + inPos] << 20 & 268435455L | (long)in[16 + inPos] << 28 & 68719476735L | (long)in[17 + inPos] << 36 & 17592186044415L | (long)in[18 + inPos] << 44 & 1125899906842623L;
         out[3 + outPos] = (long)in[18 + inPos] >> 6 & 3L | (long)in[19 + inPos] << 2 & 1023L | (long)in[20 + inPos] << 10 & 262143L | (long)in[21 + inPos] << 18 & 67108863L | (long)in[22 + inPos] << 26 & 17179869183L | (long)in[23 + inPos] << 34 & 4398046511103L | (long)in[24 + inPos] << 42 & 1125899906842623L;
         out[4 + outPos] = (long)in[25 + inPos] & 255L | (long)in[26 + inPos] << 8 & 65535L | (long)in[27 + inPos] << 16 & 16777215L | (long)in[28 + inPos] << 24 & 4294967295L | (long)in[29 + inPos] << 32 & 1099511627775L | (long)in[30 + inPos] << 40 & 281474976710655L | (long)in[31 + inPos] << 48 & 1125899906842623L;
         out[5 + outPos] = (long)in[31 + inPos] >> 2 & 63L | (long)in[32 + inPos] << 6 & 16383L | (long)in[33 + inPos] << 14 & 4194303L | (long)in[34 + inPos] << 22 & 1073741823L | (long)in[35 + inPos] << 30 & 274877906943L | (long)in[36 + inPos] << 38 & 70368744177663L | (long)in[37 + inPos] << 46 & 1125899906842623L;
         out[6 + outPos] = (long)in[37 + inPos] >> 4 & 15L | (long)in[38 + inPos] << 4 & 4095L | (long)in[39 + inPos] << 12 & 1048575L | (long)in[40 + inPos] << 20 & 268435455L | (long)in[41 + inPos] << 28 & 68719476735L | (long)in[42 + inPos] << 36 & 17592186044415L | (long)in[43 + inPos] << 44 & 1125899906842623L;
         out[7 + outPos] = (long)in[43 + inPos] >> 6 & 3L | (long)in[44 + inPos] << 2 & 1023L | (long)in[45 + inPos] << 10 & 262143L | (long)in[46 + inPos] << 18 & 67108863L | (long)in[47 + inPos] << 26 & 17179869183L | (long)in[48 + inPos] << 34 & 4398046511103L | (long)in[49 + inPos] << 42 & 1125899906842623L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 1125899906842623L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 2 & 63L | (long)in.get(7 + inPos) << 6 & 16383L | (long)in.get(8 + inPos) << 14 & 4194303L | (long)in.get(9 + inPos) << 22 & 1073741823L | (long)in.get(10 + inPos) << 30 & 274877906943L | (long)in.get(11 + inPos) << 38 & 70368744177663L | (long)in.get(12 + inPos) << 46 & 1125899906842623L;
         out[2 + outPos] = (long)in.get(12 + inPos) >> 4 & 15L | (long)in.get(13 + inPos) << 4 & 4095L | (long)in.get(14 + inPos) << 12 & 1048575L | (long)in.get(15 + inPos) << 20 & 268435455L | (long)in.get(16 + inPos) << 28 & 68719476735L | (long)in.get(17 + inPos) << 36 & 17592186044415L | (long)in.get(18 + inPos) << 44 & 1125899906842623L;
         out[3 + outPos] = (long)in.get(18 + inPos) >> 6 & 3L | (long)in.get(19 + inPos) << 2 & 1023L | (long)in.get(20 + inPos) << 10 & 262143L | (long)in.get(21 + inPos) << 18 & 67108863L | (long)in.get(22 + inPos) << 26 & 17179869183L | (long)in.get(23 + inPos) << 34 & 4398046511103L | (long)in.get(24 + inPos) << 42 & 1125899906842623L;
         out[4 + outPos] = (long)in.get(25 + inPos) & 255L | (long)in.get(26 + inPos) << 8 & 65535L | (long)in.get(27 + inPos) << 16 & 16777215L | (long)in.get(28 + inPos) << 24 & 4294967295L | (long)in.get(29 + inPos) << 32 & 1099511627775L | (long)in.get(30 + inPos) << 40 & 281474976710655L | (long)in.get(31 + inPos) << 48 & 1125899906842623L;
         out[5 + outPos] = (long)in.get(31 + inPos) >> 2 & 63L | (long)in.get(32 + inPos) << 6 & 16383L | (long)in.get(33 + inPos) << 14 & 4194303L | (long)in.get(34 + inPos) << 22 & 1073741823L | (long)in.get(35 + inPos) << 30 & 274877906943L | (long)in.get(36 + inPos) << 38 & 70368744177663L | (long)in.get(37 + inPos) << 46 & 1125899906842623L;
         out[6 + outPos] = (long)in.get(37 + inPos) >> 4 & 15L | (long)in.get(38 + inPos) << 4 & 4095L | (long)in.get(39 + inPos) << 12 & 1048575L | (long)in.get(40 + inPos) << 20 & 268435455L | (long)in.get(41 + inPos) << 28 & 68719476735L | (long)in.get(42 + inPos) << 36 & 17592186044415L | (long)in.get(43 + inPos) << 44 & 1125899906842623L;
         out[7 + outPos] = (long)in.get(43 + inPos) >> 6 & 3L | (long)in.get(44 + inPos) << 2 & 1023L | (long)in.get(45 + inPos) << 10 & 262143L | (long)in.get(46 + inPos) << 18 & 67108863L | (long)in.get(47 + inPos) << 26 & 17179869183L | (long)in.get(48 + inPos) << 34 & 4398046511103L | (long)in.get(49 + inPos) << 42 & 1125899906842623L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 1125899906842623L;
         out[1 + outPos] = (long)in[6 + inPos] >> 2 & 63L | (long)in[7 + inPos] << 6 & 16383L | (long)in[8 + inPos] << 14 & 4194303L | (long)in[9 + inPos] << 22 & 1073741823L | (long)in[10 + inPos] << 30 & 274877906943L | (long)in[11 + inPos] << 38 & 70368744177663L | (long)in[12 + inPos] << 46 & 1125899906842623L;
         out[2 + outPos] = (long)in[12 + inPos] >> 4 & 15L | (long)in[13 + inPos] << 4 & 4095L | (long)in[14 + inPos] << 12 & 1048575L | (long)in[15 + inPos] << 20 & 268435455L | (long)in[16 + inPos] << 28 & 68719476735L | (long)in[17 + inPos] << 36 & 17592186044415L | (long)in[18 + inPos] << 44 & 1125899906842623L;
         out[3 + outPos] = (long)in[18 + inPos] >> 6 & 3L | (long)in[19 + inPos] << 2 & 1023L | (long)in[20 + inPos] << 10 & 262143L | (long)in[21 + inPos] << 18 & 67108863L | (long)in[22 + inPos] << 26 & 17179869183L | (long)in[23 + inPos] << 34 & 4398046511103L | (long)in[24 + inPos] << 42 & 1125899906842623L;
         out[4 + outPos] = (long)in[25 + inPos] & 255L | (long)in[26 + inPos] << 8 & 65535L | (long)in[27 + inPos] << 16 & 16777215L | (long)in[28 + inPos] << 24 & 4294967295L | (long)in[29 + inPos] << 32 & 1099511627775L | (long)in[30 + inPos] << 40 & 281474976710655L | (long)in[31 + inPos] << 48 & 1125899906842623L;
         out[5 + outPos] = (long)in[31 + inPos] >> 2 & 63L | (long)in[32 + inPos] << 6 & 16383L | (long)in[33 + inPos] << 14 & 4194303L | (long)in[34 + inPos] << 22 & 1073741823L | (long)in[35 + inPos] << 30 & 274877906943L | (long)in[36 + inPos] << 38 & 70368744177663L | (long)in[37 + inPos] << 46 & 1125899906842623L;
         out[6 + outPos] = (long)in[37 + inPos] >> 4 & 15L | (long)in[38 + inPos] << 4 & 4095L | (long)in[39 + inPos] << 12 & 1048575L | (long)in[40 + inPos] << 20 & 268435455L | (long)in[41 + inPos] << 28 & 68719476735L | (long)in[42 + inPos] << 36 & 17592186044415L | (long)in[43 + inPos] << 44 & 1125899906842623L;
         out[7 + outPos] = (long)in[43 + inPos] >> 6 & 3L | (long)in[44 + inPos] << 2 & 1023L | (long)in[45 + inPos] << 10 & 262143L | (long)in[46 + inPos] << 18 & 67108863L | (long)in[47 + inPos] << 26 & 17179869183L | (long)in[48 + inPos] << 34 & 4398046511103L | (long)in[49 + inPos] << 42 & 1125899906842623L;
         out[8 + outPos] = (long)in[50 + inPos] & 255L | (long)in[51 + inPos] << 8 & 65535L | (long)in[52 + inPos] << 16 & 16777215L | (long)in[53 + inPos] << 24 & 4294967295L | (long)in[54 + inPos] << 32 & 1099511627775L | (long)in[55 + inPos] << 40 & 281474976710655L | (long)in[56 + inPos] << 48 & 1125899906842623L;
         out[9 + outPos] = (long)in[56 + inPos] >> 2 & 63L | (long)in[57 + inPos] << 6 & 16383L | (long)in[58 + inPos] << 14 & 4194303L | (long)in[59 + inPos] << 22 & 1073741823L | (long)in[60 + inPos] << 30 & 274877906943L | (long)in[61 + inPos] << 38 & 70368744177663L | (long)in[62 + inPos] << 46 & 1125899906842623L;
         out[10 + outPos] = (long)in[62 + inPos] >> 4 & 15L | (long)in[63 + inPos] << 4 & 4095L | (long)in[64 + inPos] << 12 & 1048575L | (long)in[65 + inPos] << 20 & 268435455L | (long)in[66 + inPos] << 28 & 68719476735L | (long)in[67 + inPos] << 36 & 17592186044415L | (long)in[68 + inPos] << 44 & 1125899906842623L;
         out[11 + outPos] = (long)in[68 + inPos] >> 6 & 3L | (long)in[69 + inPos] << 2 & 1023L | (long)in[70 + inPos] << 10 & 262143L | (long)in[71 + inPos] << 18 & 67108863L | (long)in[72 + inPos] << 26 & 17179869183L | (long)in[73 + inPos] << 34 & 4398046511103L | (long)in[74 + inPos] << 42 & 1125899906842623L;
         out[12 + outPos] = (long)in[75 + inPos] & 255L | (long)in[76 + inPos] << 8 & 65535L | (long)in[77 + inPos] << 16 & 16777215L | (long)in[78 + inPos] << 24 & 4294967295L | (long)in[79 + inPos] << 32 & 1099511627775L | (long)in[80 + inPos] << 40 & 281474976710655L | (long)in[81 + inPos] << 48 & 1125899906842623L;
         out[13 + outPos] = (long)in[81 + inPos] >> 2 & 63L | (long)in[82 + inPos] << 6 & 16383L | (long)in[83 + inPos] << 14 & 4194303L | (long)in[84 + inPos] << 22 & 1073741823L | (long)in[85 + inPos] << 30 & 274877906943L | (long)in[86 + inPos] << 38 & 70368744177663L | (long)in[87 + inPos] << 46 & 1125899906842623L;
         out[14 + outPos] = (long)in[87 + inPos] >> 4 & 15L | (long)in[88 + inPos] << 4 & 4095L | (long)in[89 + inPos] << 12 & 1048575L | (long)in[90 + inPos] << 20 & 268435455L | (long)in[91 + inPos] << 28 & 68719476735L | (long)in[92 + inPos] << 36 & 17592186044415L | (long)in[93 + inPos] << 44 & 1125899906842623L;
         out[15 + outPos] = (long)in[93 + inPos] >> 6 & 3L | (long)in[94 + inPos] << 2 & 1023L | (long)in[95 + inPos] << 10 & 262143L | (long)in[96 + inPos] << 18 & 67108863L | (long)in[97 + inPos] << 26 & 17179869183L | (long)in[98 + inPos] << 34 & 4398046511103L | (long)in[99 + inPos] << 42 & 1125899906842623L;
         out[16 + outPos] = (long)in[100 + inPos] & 255L | (long)in[101 + inPos] << 8 & 65535L | (long)in[102 + inPos] << 16 & 16777215L | (long)in[103 + inPos] << 24 & 4294967295L | (long)in[104 + inPos] << 32 & 1099511627775L | (long)in[105 + inPos] << 40 & 281474976710655L | (long)in[106 + inPos] << 48 & 1125899906842623L;
         out[17 + outPos] = (long)in[106 + inPos] >> 2 & 63L | (long)in[107 + inPos] << 6 & 16383L | (long)in[108 + inPos] << 14 & 4194303L | (long)in[109 + inPos] << 22 & 1073741823L | (long)in[110 + inPos] << 30 & 274877906943L | (long)in[111 + inPos] << 38 & 70368744177663L | (long)in[112 + inPos] << 46 & 1125899906842623L;
         out[18 + outPos] = (long)in[112 + inPos] >> 4 & 15L | (long)in[113 + inPos] << 4 & 4095L | (long)in[114 + inPos] << 12 & 1048575L | (long)in[115 + inPos] << 20 & 268435455L | (long)in[116 + inPos] << 28 & 68719476735L | (long)in[117 + inPos] << 36 & 17592186044415L | (long)in[118 + inPos] << 44 & 1125899906842623L;
         out[19 + outPos] = (long)in[118 + inPos] >> 6 & 3L | (long)in[119 + inPos] << 2 & 1023L | (long)in[120 + inPos] << 10 & 262143L | (long)in[121 + inPos] << 18 & 67108863L | (long)in[122 + inPos] << 26 & 17179869183L | (long)in[123 + inPos] << 34 & 4398046511103L | (long)in[124 + inPos] << 42 & 1125899906842623L;
         out[20 + outPos] = (long)in[125 + inPos] & 255L | (long)in[126 + inPos] << 8 & 65535L | (long)in[127 + inPos] << 16 & 16777215L | (long)in[128 + inPos] << 24 & 4294967295L | (long)in[129 + inPos] << 32 & 1099511627775L | (long)in[130 + inPos] << 40 & 281474976710655L | (long)in[131 + inPos] << 48 & 1125899906842623L;
         out[21 + outPos] = (long)in[131 + inPos] >> 2 & 63L | (long)in[132 + inPos] << 6 & 16383L | (long)in[133 + inPos] << 14 & 4194303L | (long)in[134 + inPos] << 22 & 1073741823L | (long)in[135 + inPos] << 30 & 274877906943L | (long)in[136 + inPos] << 38 & 70368744177663L | (long)in[137 + inPos] << 46 & 1125899906842623L;
         out[22 + outPos] = (long)in[137 + inPos] >> 4 & 15L | (long)in[138 + inPos] << 4 & 4095L | (long)in[139 + inPos] << 12 & 1048575L | (long)in[140 + inPos] << 20 & 268435455L | (long)in[141 + inPos] << 28 & 68719476735L | (long)in[142 + inPos] << 36 & 17592186044415L | (long)in[143 + inPos] << 44 & 1125899906842623L;
         out[23 + outPos] = (long)in[143 + inPos] >> 6 & 3L | (long)in[144 + inPos] << 2 & 1023L | (long)in[145 + inPos] << 10 & 262143L | (long)in[146 + inPos] << 18 & 67108863L | (long)in[147 + inPos] << 26 & 17179869183L | (long)in[148 + inPos] << 34 & 4398046511103L | (long)in[149 + inPos] << 42 & 1125899906842623L;
         out[24 + outPos] = (long)in[150 + inPos] & 255L | (long)in[151 + inPos] << 8 & 65535L | (long)in[152 + inPos] << 16 & 16777215L | (long)in[153 + inPos] << 24 & 4294967295L | (long)in[154 + inPos] << 32 & 1099511627775L | (long)in[155 + inPos] << 40 & 281474976710655L | (long)in[156 + inPos] << 48 & 1125899906842623L;
         out[25 + outPos] = (long)in[156 + inPos] >> 2 & 63L | (long)in[157 + inPos] << 6 & 16383L | (long)in[158 + inPos] << 14 & 4194303L | (long)in[159 + inPos] << 22 & 1073741823L | (long)in[160 + inPos] << 30 & 274877906943L | (long)in[161 + inPos] << 38 & 70368744177663L | (long)in[162 + inPos] << 46 & 1125899906842623L;
         out[26 + outPos] = (long)in[162 + inPos] >> 4 & 15L | (long)in[163 + inPos] << 4 & 4095L | (long)in[164 + inPos] << 12 & 1048575L | (long)in[165 + inPos] << 20 & 268435455L | (long)in[166 + inPos] << 28 & 68719476735L | (long)in[167 + inPos] << 36 & 17592186044415L | (long)in[168 + inPos] << 44 & 1125899906842623L;
         out[27 + outPos] = (long)in[168 + inPos] >> 6 & 3L | (long)in[169 + inPos] << 2 & 1023L | (long)in[170 + inPos] << 10 & 262143L | (long)in[171 + inPos] << 18 & 67108863L | (long)in[172 + inPos] << 26 & 17179869183L | (long)in[173 + inPos] << 34 & 4398046511103L | (long)in[174 + inPos] << 42 & 1125899906842623L;
         out[28 + outPos] = (long)in[175 + inPos] & 255L | (long)in[176 + inPos] << 8 & 65535L | (long)in[177 + inPos] << 16 & 16777215L | (long)in[178 + inPos] << 24 & 4294967295L | (long)in[179 + inPos] << 32 & 1099511627775L | (long)in[180 + inPos] << 40 & 281474976710655L | (long)in[181 + inPos] << 48 & 1125899906842623L;
         out[29 + outPos] = (long)in[181 + inPos] >> 2 & 63L | (long)in[182 + inPos] << 6 & 16383L | (long)in[183 + inPos] << 14 & 4194303L | (long)in[184 + inPos] << 22 & 1073741823L | (long)in[185 + inPos] << 30 & 274877906943L | (long)in[186 + inPos] << 38 & 70368744177663L | (long)in[187 + inPos] << 46 & 1125899906842623L;
         out[30 + outPos] = (long)in[187 + inPos] >> 4 & 15L | (long)in[188 + inPos] << 4 & 4095L | (long)in[189 + inPos] << 12 & 1048575L | (long)in[190 + inPos] << 20 & 268435455L | (long)in[191 + inPos] << 28 & 68719476735L | (long)in[192 + inPos] << 36 & 17592186044415L | (long)in[193 + inPos] << 44 & 1125899906842623L;
         out[31 + outPos] = (long)in[193 + inPos] >> 6 & 3L | (long)in[194 + inPos] << 2 & 1023L | (long)in[195 + inPos] << 10 & 262143L | (long)in[196 + inPos] << 18 & 67108863L | (long)in[197 + inPos] << 26 & 17179869183L | (long)in[198 + inPos] << 34 & 4398046511103L | (long)in[199 + inPos] << 42 & 1125899906842623L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 1125899906842623L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 2 & 63L | (long)in.get(7 + inPos) << 6 & 16383L | (long)in.get(8 + inPos) << 14 & 4194303L | (long)in.get(9 + inPos) << 22 & 1073741823L | (long)in.get(10 + inPos) << 30 & 274877906943L | (long)in.get(11 + inPos) << 38 & 70368744177663L | (long)in.get(12 + inPos) << 46 & 1125899906842623L;
         out[2 + outPos] = (long)in.get(12 + inPos) >> 4 & 15L | (long)in.get(13 + inPos) << 4 & 4095L | (long)in.get(14 + inPos) << 12 & 1048575L | (long)in.get(15 + inPos) << 20 & 268435455L | (long)in.get(16 + inPos) << 28 & 68719476735L | (long)in.get(17 + inPos) << 36 & 17592186044415L | (long)in.get(18 + inPos) << 44 & 1125899906842623L;
         out[3 + outPos] = (long)in.get(18 + inPos) >> 6 & 3L | (long)in.get(19 + inPos) << 2 & 1023L | (long)in.get(20 + inPos) << 10 & 262143L | (long)in.get(21 + inPos) << 18 & 67108863L | (long)in.get(22 + inPos) << 26 & 17179869183L | (long)in.get(23 + inPos) << 34 & 4398046511103L | (long)in.get(24 + inPos) << 42 & 1125899906842623L;
         out[4 + outPos] = (long)in.get(25 + inPos) & 255L | (long)in.get(26 + inPos) << 8 & 65535L | (long)in.get(27 + inPos) << 16 & 16777215L | (long)in.get(28 + inPos) << 24 & 4294967295L | (long)in.get(29 + inPos) << 32 & 1099511627775L | (long)in.get(30 + inPos) << 40 & 281474976710655L | (long)in.get(31 + inPos) << 48 & 1125899906842623L;
         out[5 + outPos] = (long)in.get(31 + inPos) >> 2 & 63L | (long)in.get(32 + inPos) << 6 & 16383L | (long)in.get(33 + inPos) << 14 & 4194303L | (long)in.get(34 + inPos) << 22 & 1073741823L | (long)in.get(35 + inPos) << 30 & 274877906943L | (long)in.get(36 + inPos) << 38 & 70368744177663L | (long)in.get(37 + inPos) << 46 & 1125899906842623L;
         out[6 + outPos] = (long)in.get(37 + inPos) >> 4 & 15L | (long)in.get(38 + inPos) << 4 & 4095L | (long)in.get(39 + inPos) << 12 & 1048575L | (long)in.get(40 + inPos) << 20 & 268435455L | (long)in.get(41 + inPos) << 28 & 68719476735L | (long)in.get(42 + inPos) << 36 & 17592186044415L | (long)in.get(43 + inPos) << 44 & 1125899906842623L;
         out[7 + outPos] = (long)in.get(43 + inPos) >> 6 & 3L | (long)in.get(44 + inPos) << 2 & 1023L | (long)in.get(45 + inPos) << 10 & 262143L | (long)in.get(46 + inPos) << 18 & 67108863L | (long)in.get(47 + inPos) << 26 & 17179869183L | (long)in.get(48 + inPos) << 34 & 4398046511103L | (long)in.get(49 + inPos) << 42 & 1125899906842623L;
         out[8 + outPos] = (long)in.get(50 + inPos) & 255L | (long)in.get(51 + inPos) << 8 & 65535L | (long)in.get(52 + inPos) << 16 & 16777215L | (long)in.get(53 + inPos) << 24 & 4294967295L | (long)in.get(54 + inPos) << 32 & 1099511627775L | (long)in.get(55 + inPos) << 40 & 281474976710655L | (long)in.get(56 + inPos) << 48 & 1125899906842623L;
         out[9 + outPos] = (long)in.get(56 + inPos) >> 2 & 63L | (long)in.get(57 + inPos) << 6 & 16383L | (long)in.get(58 + inPos) << 14 & 4194303L | (long)in.get(59 + inPos) << 22 & 1073741823L | (long)in.get(60 + inPos) << 30 & 274877906943L | (long)in.get(61 + inPos) << 38 & 70368744177663L | (long)in.get(62 + inPos) << 46 & 1125899906842623L;
         out[10 + outPos] = (long)in.get(62 + inPos) >> 4 & 15L | (long)in.get(63 + inPos) << 4 & 4095L | (long)in.get(64 + inPos) << 12 & 1048575L | (long)in.get(65 + inPos) << 20 & 268435455L | (long)in.get(66 + inPos) << 28 & 68719476735L | (long)in.get(67 + inPos) << 36 & 17592186044415L | (long)in.get(68 + inPos) << 44 & 1125899906842623L;
         out[11 + outPos] = (long)in.get(68 + inPos) >> 6 & 3L | (long)in.get(69 + inPos) << 2 & 1023L | (long)in.get(70 + inPos) << 10 & 262143L | (long)in.get(71 + inPos) << 18 & 67108863L | (long)in.get(72 + inPos) << 26 & 17179869183L | (long)in.get(73 + inPos) << 34 & 4398046511103L | (long)in.get(74 + inPos) << 42 & 1125899906842623L;
         out[12 + outPos] = (long)in.get(75 + inPos) & 255L | (long)in.get(76 + inPos) << 8 & 65535L | (long)in.get(77 + inPos) << 16 & 16777215L | (long)in.get(78 + inPos) << 24 & 4294967295L | (long)in.get(79 + inPos) << 32 & 1099511627775L | (long)in.get(80 + inPos) << 40 & 281474976710655L | (long)in.get(81 + inPos) << 48 & 1125899906842623L;
         out[13 + outPos] = (long)in.get(81 + inPos) >> 2 & 63L | (long)in.get(82 + inPos) << 6 & 16383L | (long)in.get(83 + inPos) << 14 & 4194303L | (long)in.get(84 + inPos) << 22 & 1073741823L | (long)in.get(85 + inPos) << 30 & 274877906943L | (long)in.get(86 + inPos) << 38 & 70368744177663L | (long)in.get(87 + inPos) << 46 & 1125899906842623L;
         out[14 + outPos] = (long)in.get(87 + inPos) >> 4 & 15L | (long)in.get(88 + inPos) << 4 & 4095L | (long)in.get(89 + inPos) << 12 & 1048575L | (long)in.get(90 + inPos) << 20 & 268435455L | (long)in.get(91 + inPos) << 28 & 68719476735L | (long)in.get(92 + inPos) << 36 & 17592186044415L | (long)in.get(93 + inPos) << 44 & 1125899906842623L;
         out[15 + outPos] = (long)in.get(93 + inPos) >> 6 & 3L | (long)in.get(94 + inPos) << 2 & 1023L | (long)in.get(95 + inPos) << 10 & 262143L | (long)in.get(96 + inPos) << 18 & 67108863L | (long)in.get(97 + inPos) << 26 & 17179869183L | (long)in.get(98 + inPos) << 34 & 4398046511103L | (long)in.get(99 + inPos) << 42 & 1125899906842623L;
         out[16 + outPos] = (long)in.get(100 + inPos) & 255L | (long)in.get(101 + inPos) << 8 & 65535L | (long)in.get(102 + inPos) << 16 & 16777215L | (long)in.get(103 + inPos) << 24 & 4294967295L | (long)in.get(104 + inPos) << 32 & 1099511627775L | (long)in.get(105 + inPos) << 40 & 281474976710655L | (long)in.get(106 + inPos) << 48 & 1125899906842623L;
         out[17 + outPos] = (long)in.get(106 + inPos) >> 2 & 63L | (long)in.get(107 + inPos) << 6 & 16383L | (long)in.get(108 + inPos) << 14 & 4194303L | (long)in.get(109 + inPos) << 22 & 1073741823L | (long)in.get(110 + inPos) << 30 & 274877906943L | (long)in.get(111 + inPos) << 38 & 70368744177663L | (long)in.get(112 + inPos) << 46 & 1125899906842623L;
         out[18 + outPos] = (long)in.get(112 + inPos) >> 4 & 15L | (long)in.get(113 + inPos) << 4 & 4095L | (long)in.get(114 + inPos) << 12 & 1048575L | (long)in.get(115 + inPos) << 20 & 268435455L | (long)in.get(116 + inPos) << 28 & 68719476735L | (long)in.get(117 + inPos) << 36 & 17592186044415L | (long)in.get(118 + inPos) << 44 & 1125899906842623L;
         out[19 + outPos] = (long)in.get(118 + inPos) >> 6 & 3L | (long)in.get(119 + inPos) << 2 & 1023L | (long)in.get(120 + inPos) << 10 & 262143L | (long)in.get(121 + inPos) << 18 & 67108863L | (long)in.get(122 + inPos) << 26 & 17179869183L | (long)in.get(123 + inPos) << 34 & 4398046511103L | (long)in.get(124 + inPos) << 42 & 1125899906842623L;
         out[20 + outPos] = (long)in.get(125 + inPos) & 255L | (long)in.get(126 + inPos) << 8 & 65535L | (long)in.get(127 + inPos) << 16 & 16777215L | (long)in.get(128 + inPos) << 24 & 4294967295L | (long)in.get(129 + inPos) << 32 & 1099511627775L | (long)in.get(130 + inPos) << 40 & 281474976710655L | (long)in.get(131 + inPos) << 48 & 1125899906842623L;
         out[21 + outPos] = (long)in.get(131 + inPos) >> 2 & 63L | (long)in.get(132 + inPos) << 6 & 16383L | (long)in.get(133 + inPos) << 14 & 4194303L | (long)in.get(134 + inPos) << 22 & 1073741823L | (long)in.get(135 + inPos) << 30 & 274877906943L | (long)in.get(136 + inPos) << 38 & 70368744177663L | (long)in.get(137 + inPos) << 46 & 1125899906842623L;
         out[22 + outPos] = (long)in.get(137 + inPos) >> 4 & 15L | (long)in.get(138 + inPos) << 4 & 4095L | (long)in.get(139 + inPos) << 12 & 1048575L | (long)in.get(140 + inPos) << 20 & 268435455L | (long)in.get(141 + inPos) << 28 & 68719476735L | (long)in.get(142 + inPos) << 36 & 17592186044415L | (long)in.get(143 + inPos) << 44 & 1125899906842623L;
         out[23 + outPos] = (long)in.get(143 + inPos) >> 6 & 3L | (long)in.get(144 + inPos) << 2 & 1023L | (long)in.get(145 + inPos) << 10 & 262143L | (long)in.get(146 + inPos) << 18 & 67108863L | (long)in.get(147 + inPos) << 26 & 17179869183L | (long)in.get(148 + inPos) << 34 & 4398046511103L | (long)in.get(149 + inPos) << 42 & 1125899906842623L;
         out[24 + outPos] = (long)in.get(150 + inPos) & 255L | (long)in.get(151 + inPos) << 8 & 65535L | (long)in.get(152 + inPos) << 16 & 16777215L | (long)in.get(153 + inPos) << 24 & 4294967295L | (long)in.get(154 + inPos) << 32 & 1099511627775L | (long)in.get(155 + inPos) << 40 & 281474976710655L | (long)in.get(156 + inPos) << 48 & 1125899906842623L;
         out[25 + outPos] = (long)in.get(156 + inPos) >> 2 & 63L | (long)in.get(157 + inPos) << 6 & 16383L | (long)in.get(158 + inPos) << 14 & 4194303L | (long)in.get(159 + inPos) << 22 & 1073741823L | (long)in.get(160 + inPos) << 30 & 274877906943L | (long)in.get(161 + inPos) << 38 & 70368744177663L | (long)in.get(162 + inPos) << 46 & 1125899906842623L;
         out[26 + outPos] = (long)in.get(162 + inPos) >> 4 & 15L | (long)in.get(163 + inPos) << 4 & 4095L | (long)in.get(164 + inPos) << 12 & 1048575L | (long)in.get(165 + inPos) << 20 & 268435455L | (long)in.get(166 + inPos) << 28 & 68719476735L | (long)in.get(167 + inPos) << 36 & 17592186044415L | (long)in.get(168 + inPos) << 44 & 1125899906842623L;
         out[27 + outPos] = (long)in.get(168 + inPos) >> 6 & 3L | (long)in.get(169 + inPos) << 2 & 1023L | (long)in.get(170 + inPos) << 10 & 262143L | (long)in.get(171 + inPos) << 18 & 67108863L | (long)in.get(172 + inPos) << 26 & 17179869183L | (long)in.get(173 + inPos) << 34 & 4398046511103L | (long)in.get(174 + inPos) << 42 & 1125899906842623L;
         out[28 + outPos] = (long)in.get(175 + inPos) & 255L | (long)in.get(176 + inPos) << 8 & 65535L | (long)in.get(177 + inPos) << 16 & 16777215L | (long)in.get(178 + inPos) << 24 & 4294967295L | (long)in.get(179 + inPos) << 32 & 1099511627775L | (long)in.get(180 + inPos) << 40 & 281474976710655L | (long)in.get(181 + inPos) << 48 & 1125899906842623L;
         out[29 + outPos] = (long)in.get(181 + inPos) >> 2 & 63L | (long)in.get(182 + inPos) << 6 & 16383L | (long)in.get(183 + inPos) << 14 & 4194303L | (long)in.get(184 + inPos) << 22 & 1073741823L | (long)in.get(185 + inPos) << 30 & 274877906943L | (long)in.get(186 + inPos) << 38 & 70368744177663L | (long)in.get(187 + inPos) << 46 & 1125899906842623L;
         out[30 + outPos] = (long)in.get(187 + inPos) >> 4 & 15L | (long)in.get(188 + inPos) << 4 & 4095L | (long)in.get(189 + inPos) << 12 & 1048575L | (long)in.get(190 + inPos) << 20 & 268435455L | (long)in.get(191 + inPos) << 28 & 68719476735L | (long)in.get(192 + inPos) << 36 & 17592186044415L | (long)in.get(193 + inPos) << 44 & 1125899906842623L;
         out[31 + outPos] = (long)in.get(193 + inPos) >> 6 & 3L | (long)in.get(194 + inPos) << 2 & 1023L | (long)in.get(195 + inPos) << 10 & 262143L | (long)in.get(196 + inPos) << 18 & 67108863L | (long)in.get(197 + inPos) << 26 & 17179869183L | (long)in.get(198 + inPos) << 34 & 4398046511103L | (long)in.get(199 + inPos) << 42 & 1125899906842623L;
      }
   }

   private static final class Packer51 extends BytePackerForLong {
      private Packer51() {
         super(51);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 2251799813685247L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 2251799813685247L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 2251799813685247L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 2251799813685247L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 2251799813685247L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 2251799813685247L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 2251799813685247L) >>> 48 | (in[1 + inPos] & 2251799813685247L) << 3) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 2251799813685247L) >>> 5 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 2251799813685247L) >>> 13 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 2251799813685247L) >>> 21 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 2251799813685247L) >>> 29 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 2251799813685247L) >>> 37 & 255L));
         out[12 + outPos] = (byte)((int)(((in[1 + inPos] & 2251799813685247L) >>> 45 | (in[2 + inPos] & 2251799813685247L) << 6) & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 2251799813685247L) >>> 2 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 2251799813685247L) >>> 10 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 2251799813685247L) >>> 18 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 2251799813685247L) >>> 26 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 2251799813685247L) >>> 34 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 2251799813685247L) >>> 42 & 255L));
         out[19 + outPos] = (byte)((int)(((in[2 + inPos] & 2251799813685247L) >>> 50 | (in[3 + inPos] & 2251799813685247L) << 1) & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 2251799813685247L) >>> 7 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 2251799813685247L) >>> 15 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 2251799813685247L) >>> 23 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 2251799813685247L) >>> 31 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 2251799813685247L) >>> 39 & 255L));
         out[25 + outPos] = (byte)((int)(((in[3 + inPos] & 2251799813685247L) >>> 47 | (in[4 + inPos] & 2251799813685247L) << 4) & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 2251799813685247L) >>> 4 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 2251799813685247L) >>> 12 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 2251799813685247L) >>> 20 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 2251799813685247L) >>> 28 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 2251799813685247L) >>> 36 & 255L));
         out[31 + outPos] = (byte)((int)(((in[4 + inPos] & 2251799813685247L) >>> 44 | (in[5 + inPos] & 2251799813685247L) << 7) & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 2251799813685247L) >>> 1 & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 2251799813685247L) >>> 9 & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 2251799813685247L) >>> 17 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 2251799813685247L) >>> 25 & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 2251799813685247L) >>> 33 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 2251799813685247L) >>> 41 & 255L));
         out[38 + outPos] = (byte)((int)(((in[5 + inPos] & 2251799813685247L) >>> 49 | (in[6 + inPos] & 2251799813685247L) << 2) & 255L));
         out[39 + outPos] = (byte)((int)((in[6 + inPos] & 2251799813685247L) >>> 6 & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 2251799813685247L) >>> 14 & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 2251799813685247L) >>> 22 & 255L));
         out[42 + outPos] = (byte)((int)((in[6 + inPos] & 2251799813685247L) >>> 30 & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 2251799813685247L) >>> 38 & 255L));
         out[44 + outPos] = (byte)((int)(((in[6 + inPos] & 2251799813685247L) >>> 46 | (in[7 + inPos] & 2251799813685247L) << 5) & 255L));
         out[45 + outPos] = (byte)((int)((in[7 + inPos] & 2251799813685247L) >>> 3 & 255L));
         out[46 + outPos] = (byte)((int)((in[7 + inPos] & 2251799813685247L) >>> 11 & 255L));
         out[47 + outPos] = (byte)((int)((in[7 + inPos] & 2251799813685247L) >>> 19 & 255L));
         out[48 + outPos] = (byte)((int)((in[7 + inPos] & 2251799813685247L) >>> 27 & 255L));
         out[49 + outPos] = (byte)((int)((in[7 + inPos] & 2251799813685247L) >>> 35 & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 2251799813685247L) >>> 43 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 2251799813685247L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 2251799813685247L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 2251799813685247L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 2251799813685247L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 2251799813685247L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 2251799813685247L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 2251799813685247L) >>> 48 | (in[1 + inPos] & 2251799813685247L) << 3) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 2251799813685247L) >>> 5 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 2251799813685247L) >>> 13 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 2251799813685247L) >>> 21 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 2251799813685247L) >>> 29 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 2251799813685247L) >>> 37 & 255L));
         out[12 + outPos] = (byte)((int)(((in[1 + inPos] & 2251799813685247L) >>> 45 | (in[2 + inPos] & 2251799813685247L) << 6) & 255L));
         out[13 + outPos] = (byte)((int)((in[2 + inPos] & 2251799813685247L) >>> 2 & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 2251799813685247L) >>> 10 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 2251799813685247L) >>> 18 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 2251799813685247L) >>> 26 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 2251799813685247L) >>> 34 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 2251799813685247L) >>> 42 & 255L));
         out[19 + outPos] = (byte)((int)(((in[2 + inPos] & 2251799813685247L) >>> 50 | (in[3 + inPos] & 2251799813685247L) << 1) & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 2251799813685247L) >>> 7 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 2251799813685247L) >>> 15 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 2251799813685247L) >>> 23 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 2251799813685247L) >>> 31 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 2251799813685247L) >>> 39 & 255L));
         out[25 + outPos] = (byte)((int)(((in[3 + inPos] & 2251799813685247L) >>> 47 | (in[4 + inPos] & 2251799813685247L) << 4) & 255L));
         out[26 + outPos] = (byte)((int)((in[4 + inPos] & 2251799813685247L) >>> 4 & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 2251799813685247L) >>> 12 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 2251799813685247L) >>> 20 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 2251799813685247L) >>> 28 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 2251799813685247L) >>> 36 & 255L));
         out[31 + outPos] = (byte)((int)(((in[4 + inPos] & 2251799813685247L) >>> 44 | (in[5 + inPos] & 2251799813685247L) << 7) & 255L));
         out[32 + outPos] = (byte)((int)((in[5 + inPos] & 2251799813685247L) >>> 1 & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 2251799813685247L) >>> 9 & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 2251799813685247L) >>> 17 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 2251799813685247L) >>> 25 & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 2251799813685247L) >>> 33 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 2251799813685247L) >>> 41 & 255L));
         out[38 + outPos] = (byte)((int)(((in[5 + inPos] & 2251799813685247L) >>> 49 | (in[6 + inPos] & 2251799813685247L) << 2) & 255L));
         out[39 + outPos] = (byte)((int)((in[6 + inPos] & 2251799813685247L) >>> 6 & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 2251799813685247L) >>> 14 & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 2251799813685247L) >>> 22 & 255L));
         out[42 + outPos] = (byte)((int)((in[6 + inPos] & 2251799813685247L) >>> 30 & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 2251799813685247L) >>> 38 & 255L));
         out[44 + outPos] = (byte)((int)(((in[6 + inPos] & 2251799813685247L) >>> 46 | (in[7 + inPos] & 2251799813685247L) << 5) & 255L));
         out[45 + outPos] = (byte)((int)((in[7 + inPos] & 2251799813685247L) >>> 3 & 255L));
         out[46 + outPos] = (byte)((int)((in[7 + inPos] & 2251799813685247L) >>> 11 & 255L));
         out[47 + outPos] = (byte)((int)((in[7 + inPos] & 2251799813685247L) >>> 19 & 255L));
         out[48 + outPos] = (byte)((int)((in[7 + inPos] & 2251799813685247L) >>> 27 & 255L));
         out[49 + outPos] = (byte)((int)((in[7 + inPos] & 2251799813685247L) >>> 35 & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 2251799813685247L) >>> 43 & 255L));
         out[51 + outPos] = (byte)((int)(in[8 + inPos] & 2251799813685247L & 255L));
         out[52 + outPos] = (byte)((int)((in[8 + inPos] & 2251799813685247L) >>> 8 & 255L));
         out[53 + outPos] = (byte)((int)((in[8 + inPos] & 2251799813685247L) >>> 16 & 255L));
         out[54 + outPos] = (byte)((int)((in[8 + inPos] & 2251799813685247L) >>> 24 & 255L));
         out[55 + outPos] = (byte)((int)((in[8 + inPos] & 2251799813685247L) >>> 32 & 255L));
         out[56 + outPos] = (byte)((int)((in[8 + inPos] & 2251799813685247L) >>> 40 & 255L));
         out[57 + outPos] = (byte)((int)(((in[8 + inPos] & 2251799813685247L) >>> 48 | (in[9 + inPos] & 2251799813685247L) << 3) & 255L));
         out[58 + outPos] = (byte)((int)((in[9 + inPos] & 2251799813685247L) >>> 5 & 255L));
         out[59 + outPos] = (byte)((int)((in[9 + inPos] & 2251799813685247L) >>> 13 & 255L));
         out[60 + outPos] = (byte)((int)((in[9 + inPos] & 2251799813685247L) >>> 21 & 255L));
         out[61 + outPos] = (byte)((int)((in[9 + inPos] & 2251799813685247L) >>> 29 & 255L));
         out[62 + outPos] = (byte)((int)((in[9 + inPos] & 2251799813685247L) >>> 37 & 255L));
         out[63 + outPos] = (byte)((int)(((in[9 + inPos] & 2251799813685247L) >>> 45 | (in[10 + inPos] & 2251799813685247L) << 6) & 255L));
         out[64 + outPos] = (byte)((int)((in[10 + inPos] & 2251799813685247L) >>> 2 & 255L));
         out[65 + outPos] = (byte)((int)((in[10 + inPos] & 2251799813685247L) >>> 10 & 255L));
         out[66 + outPos] = (byte)((int)((in[10 + inPos] & 2251799813685247L) >>> 18 & 255L));
         out[67 + outPos] = (byte)((int)((in[10 + inPos] & 2251799813685247L) >>> 26 & 255L));
         out[68 + outPos] = (byte)((int)((in[10 + inPos] & 2251799813685247L) >>> 34 & 255L));
         out[69 + outPos] = (byte)((int)((in[10 + inPos] & 2251799813685247L) >>> 42 & 255L));
         out[70 + outPos] = (byte)((int)(((in[10 + inPos] & 2251799813685247L) >>> 50 | (in[11 + inPos] & 2251799813685247L) << 1) & 255L));
         out[71 + outPos] = (byte)((int)((in[11 + inPos] & 2251799813685247L) >>> 7 & 255L));
         out[72 + outPos] = (byte)((int)((in[11 + inPos] & 2251799813685247L) >>> 15 & 255L));
         out[73 + outPos] = (byte)((int)((in[11 + inPos] & 2251799813685247L) >>> 23 & 255L));
         out[74 + outPos] = (byte)((int)((in[11 + inPos] & 2251799813685247L) >>> 31 & 255L));
         out[75 + outPos] = (byte)((int)((in[11 + inPos] & 2251799813685247L) >>> 39 & 255L));
         out[76 + outPos] = (byte)((int)(((in[11 + inPos] & 2251799813685247L) >>> 47 | (in[12 + inPos] & 2251799813685247L) << 4) & 255L));
         out[77 + outPos] = (byte)((int)((in[12 + inPos] & 2251799813685247L) >>> 4 & 255L));
         out[78 + outPos] = (byte)((int)((in[12 + inPos] & 2251799813685247L) >>> 12 & 255L));
         out[79 + outPos] = (byte)((int)((in[12 + inPos] & 2251799813685247L) >>> 20 & 255L));
         out[80 + outPos] = (byte)((int)((in[12 + inPos] & 2251799813685247L) >>> 28 & 255L));
         out[81 + outPos] = (byte)((int)((in[12 + inPos] & 2251799813685247L) >>> 36 & 255L));
         out[82 + outPos] = (byte)((int)(((in[12 + inPos] & 2251799813685247L) >>> 44 | (in[13 + inPos] & 2251799813685247L) << 7) & 255L));
         out[83 + outPos] = (byte)((int)((in[13 + inPos] & 2251799813685247L) >>> 1 & 255L));
         out[84 + outPos] = (byte)((int)((in[13 + inPos] & 2251799813685247L) >>> 9 & 255L));
         out[85 + outPos] = (byte)((int)((in[13 + inPos] & 2251799813685247L) >>> 17 & 255L));
         out[86 + outPos] = (byte)((int)((in[13 + inPos] & 2251799813685247L) >>> 25 & 255L));
         out[87 + outPos] = (byte)((int)((in[13 + inPos] & 2251799813685247L) >>> 33 & 255L));
         out[88 + outPos] = (byte)((int)((in[13 + inPos] & 2251799813685247L) >>> 41 & 255L));
         out[89 + outPos] = (byte)((int)(((in[13 + inPos] & 2251799813685247L) >>> 49 | (in[14 + inPos] & 2251799813685247L) << 2) & 255L));
         out[90 + outPos] = (byte)((int)((in[14 + inPos] & 2251799813685247L) >>> 6 & 255L));
         out[91 + outPos] = (byte)((int)((in[14 + inPos] & 2251799813685247L) >>> 14 & 255L));
         out[92 + outPos] = (byte)((int)((in[14 + inPos] & 2251799813685247L) >>> 22 & 255L));
         out[93 + outPos] = (byte)((int)((in[14 + inPos] & 2251799813685247L) >>> 30 & 255L));
         out[94 + outPos] = (byte)((int)((in[14 + inPos] & 2251799813685247L) >>> 38 & 255L));
         out[95 + outPos] = (byte)((int)(((in[14 + inPos] & 2251799813685247L) >>> 46 | (in[15 + inPos] & 2251799813685247L) << 5) & 255L));
         out[96 + outPos] = (byte)((int)((in[15 + inPos] & 2251799813685247L) >>> 3 & 255L));
         out[97 + outPos] = (byte)((int)((in[15 + inPos] & 2251799813685247L) >>> 11 & 255L));
         out[98 + outPos] = (byte)((int)((in[15 + inPos] & 2251799813685247L) >>> 19 & 255L));
         out[99 + outPos] = (byte)((int)((in[15 + inPos] & 2251799813685247L) >>> 27 & 255L));
         out[100 + outPos] = (byte)((int)((in[15 + inPos] & 2251799813685247L) >>> 35 & 255L));
         out[101 + outPos] = (byte)((int)((in[15 + inPos] & 2251799813685247L) >>> 43 & 255L));
         out[102 + outPos] = (byte)((int)(in[16 + inPos] & 2251799813685247L & 255L));
         out[103 + outPos] = (byte)((int)((in[16 + inPos] & 2251799813685247L) >>> 8 & 255L));
         out[104 + outPos] = (byte)((int)((in[16 + inPos] & 2251799813685247L) >>> 16 & 255L));
         out[105 + outPos] = (byte)((int)((in[16 + inPos] & 2251799813685247L) >>> 24 & 255L));
         out[106 + outPos] = (byte)((int)((in[16 + inPos] & 2251799813685247L) >>> 32 & 255L));
         out[107 + outPos] = (byte)((int)((in[16 + inPos] & 2251799813685247L) >>> 40 & 255L));
         out[108 + outPos] = (byte)((int)(((in[16 + inPos] & 2251799813685247L) >>> 48 | (in[17 + inPos] & 2251799813685247L) << 3) & 255L));
         out[109 + outPos] = (byte)((int)((in[17 + inPos] & 2251799813685247L) >>> 5 & 255L));
         out[110 + outPos] = (byte)((int)((in[17 + inPos] & 2251799813685247L) >>> 13 & 255L));
         out[111 + outPos] = (byte)((int)((in[17 + inPos] & 2251799813685247L) >>> 21 & 255L));
         out[112 + outPos] = (byte)((int)((in[17 + inPos] & 2251799813685247L) >>> 29 & 255L));
         out[113 + outPos] = (byte)((int)((in[17 + inPos] & 2251799813685247L) >>> 37 & 255L));
         out[114 + outPos] = (byte)((int)(((in[17 + inPos] & 2251799813685247L) >>> 45 | (in[18 + inPos] & 2251799813685247L) << 6) & 255L));
         out[115 + outPos] = (byte)((int)((in[18 + inPos] & 2251799813685247L) >>> 2 & 255L));
         out[116 + outPos] = (byte)((int)((in[18 + inPos] & 2251799813685247L) >>> 10 & 255L));
         out[117 + outPos] = (byte)((int)((in[18 + inPos] & 2251799813685247L) >>> 18 & 255L));
         out[118 + outPos] = (byte)((int)((in[18 + inPos] & 2251799813685247L) >>> 26 & 255L));
         out[119 + outPos] = (byte)((int)((in[18 + inPos] & 2251799813685247L) >>> 34 & 255L));
         out[120 + outPos] = (byte)((int)((in[18 + inPos] & 2251799813685247L) >>> 42 & 255L));
         out[121 + outPos] = (byte)((int)(((in[18 + inPos] & 2251799813685247L) >>> 50 | (in[19 + inPos] & 2251799813685247L) << 1) & 255L));
         out[122 + outPos] = (byte)((int)((in[19 + inPos] & 2251799813685247L) >>> 7 & 255L));
         out[123 + outPos] = (byte)((int)((in[19 + inPos] & 2251799813685247L) >>> 15 & 255L));
         out[124 + outPos] = (byte)((int)((in[19 + inPos] & 2251799813685247L) >>> 23 & 255L));
         out[125 + outPos] = (byte)((int)((in[19 + inPos] & 2251799813685247L) >>> 31 & 255L));
         out[126 + outPos] = (byte)((int)((in[19 + inPos] & 2251799813685247L) >>> 39 & 255L));
         out[127 + outPos] = (byte)((int)(((in[19 + inPos] & 2251799813685247L) >>> 47 | (in[20 + inPos] & 2251799813685247L) << 4) & 255L));
         out[128 + outPos] = (byte)((int)((in[20 + inPos] & 2251799813685247L) >>> 4 & 255L));
         out[129 + outPos] = (byte)((int)((in[20 + inPos] & 2251799813685247L) >>> 12 & 255L));
         out[130 + outPos] = (byte)((int)((in[20 + inPos] & 2251799813685247L) >>> 20 & 255L));
         out[131 + outPos] = (byte)((int)((in[20 + inPos] & 2251799813685247L) >>> 28 & 255L));
         out[132 + outPos] = (byte)((int)((in[20 + inPos] & 2251799813685247L) >>> 36 & 255L));
         out[133 + outPos] = (byte)((int)(((in[20 + inPos] & 2251799813685247L) >>> 44 | (in[21 + inPos] & 2251799813685247L) << 7) & 255L));
         out[134 + outPos] = (byte)((int)((in[21 + inPos] & 2251799813685247L) >>> 1 & 255L));
         out[135 + outPos] = (byte)((int)((in[21 + inPos] & 2251799813685247L) >>> 9 & 255L));
         out[136 + outPos] = (byte)((int)((in[21 + inPos] & 2251799813685247L) >>> 17 & 255L));
         out[137 + outPos] = (byte)((int)((in[21 + inPos] & 2251799813685247L) >>> 25 & 255L));
         out[138 + outPos] = (byte)((int)((in[21 + inPos] & 2251799813685247L) >>> 33 & 255L));
         out[139 + outPos] = (byte)((int)((in[21 + inPos] & 2251799813685247L) >>> 41 & 255L));
         out[140 + outPos] = (byte)((int)(((in[21 + inPos] & 2251799813685247L) >>> 49 | (in[22 + inPos] & 2251799813685247L) << 2) & 255L));
         out[141 + outPos] = (byte)((int)((in[22 + inPos] & 2251799813685247L) >>> 6 & 255L));
         out[142 + outPos] = (byte)((int)((in[22 + inPos] & 2251799813685247L) >>> 14 & 255L));
         out[143 + outPos] = (byte)((int)((in[22 + inPos] & 2251799813685247L) >>> 22 & 255L));
         out[144 + outPos] = (byte)((int)((in[22 + inPos] & 2251799813685247L) >>> 30 & 255L));
         out[145 + outPos] = (byte)((int)((in[22 + inPos] & 2251799813685247L) >>> 38 & 255L));
         out[146 + outPos] = (byte)((int)(((in[22 + inPos] & 2251799813685247L) >>> 46 | (in[23 + inPos] & 2251799813685247L) << 5) & 255L));
         out[147 + outPos] = (byte)((int)((in[23 + inPos] & 2251799813685247L) >>> 3 & 255L));
         out[148 + outPos] = (byte)((int)((in[23 + inPos] & 2251799813685247L) >>> 11 & 255L));
         out[149 + outPos] = (byte)((int)((in[23 + inPos] & 2251799813685247L) >>> 19 & 255L));
         out[150 + outPos] = (byte)((int)((in[23 + inPos] & 2251799813685247L) >>> 27 & 255L));
         out[151 + outPos] = (byte)((int)((in[23 + inPos] & 2251799813685247L) >>> 35 & 255L));
         out[152 + outPos] = (byte)((int)((in[23 + inPos] & 2251799813685247L) >>> 43 & 255L));
         out[153 + outPos] = (byte)((int)(in[24 + inPos] & 2251799813685247L & 255L));
         out[154 + outPos] = (byte)((int)((in[24 + inPos] & 2251799813685247L) >>> 8 & 255L));
         out[155 + outPos] = (byte)((int)((in[24 + inPos] & 2251799813685247L) >>> 16 & 255L));
         out[156 + outPos] = (byte)((int)((in[24 + inPos] & 2251799813685247L) >>> 24 & 255L));
         out[157 + outPos] = (byte)((int)((in[24 + inPos] & 2251799813685247L) >>> 32 & 255L));
         out[158 + outPos] = (byte)((int)((in[24 + inPos] & 2251799813685247L) >>> 40 & 255L));
         out[159 + outPos] = (byte)((int)(((in[24 + inPos] & 2251799813685247L) >>> 48 | (in[25 + inPos] & 2251799813685247L) << 3) & 255L));
         out[160 + outPos] = (byte)((int)((in[25 + inPos] & 2251799813685247L) >>> 5 & 255L));
         out[161 + outPos] = (byte)((int)((in[25 + inPos] & 2251799813685247L) >>> 13 & 255L));
         out[162 + outPos] = (byte)((int)((in[25 + inPos] & 2251799813685247L) >>> 21 & 255L));
         out[163 + outPos] = (byte)((int)((in[25 + inPos] & 2251799813685247L) >>> 29 & 255L));
         out[164 + outPos] = (byte)((int)((in[25 + inPos] & 2251799813685247L) >>> 37 & 255L));
         out[165 + outPos] = (byte)((int)(((in[25 + inPos] & 2251799813685247L) >>> 45 | (in[26 + inPos] & 2251799813685247L) << 6) & 255L));
         out[166 + outPos] = (byte)((int)((in[26 + inPos] & 2251799813685247L) >>> 2 & 255L));
         out[167 + outPos] = (byte)((int)((in[26 + inPos] & 2251799813685247L) >>> 10 & 255L));
         out[168 + outPos] = (byte)((int)((in[26 + inPos] & 2251799813685247L) >>> 18 & 255L));
         out[169 + outPos] = (byte)((int)((in[26 + inPos] & 2251799813685247L) >>> 26 & 255L));
         out[170 + outPos] = (byte)((int)((in[26 + inPos] & 2251799813685247L) >>> 34 & 255L));
         out[171 + outPos] = (byte)((int)((in[26 + inPos] & 2251799813685247L) >>> 42 & 255L));
         out[172 + outPos] = (byte)((int)(((in[26 + inPos] & 2251799813685247L) >>> 50 | (in[27 + inPos] & 2251799813685247L) << 1) & 255L));
         out[173 + outPos] = (byte)((int)((in[27 + inPos] & 2251799813685247L) >>> 7 & 255L));
         out[174 + outPos] = (byte)((int)((in[27 + inPos] & 2251799813685247L) >>> 15 & 255L));
         out[175 + outPos] = (byte)((int)((in[27 + inPos] & 2251799813685247L) >>> 23 & 255L));
         out[176 + outPos] = (byte)((int)((in[27 + inPos] & 2251799813685247L) >>> 31 & 255L));
         out[177 + outPos] = (byte)((int)((in[27 + inPos] & 2251799813685247L) >>> 39 & 255L));
         out[178 + outPos] = (byte)((int)(((in[27 + inPos] & 2251799813685247L) >>> 47 | (in[28 + inPos] & 2251799813685247L) << 4) & 255L));
         out[179 + outPos] = (byte)((int)((in[28 + inPos] & 2251799813685247L) >>> 4 & 255L));
         out[180 + outPos] = (byte)((int)((in[28 + inPos] & 2251799813685247L) >>> 12 & 255L));
         out[181 + outPos] = (byte)((int)((in[28 + inPos] & 2251799813685247L) >>> 20 & 255L));
         out[182 + outPos] = (byte)((int)((in[28 + inPos] & 2251799813685247L) >>> 28 & 255L));
         out[183 + outPos] = (byte)((int)((in[28 + inPos] & 2251799813685247L) >>> 36 & 255L));
         out[184 + outPos] = (byte)((int)(((in[28 + inPos] & 2251799813685247L) >>> 44 | (in[29 + inPos] & 2251799813685247L) << 7) & 255L));
         out[185 + outPos] = (byte)((int)((in[29 + inPos] & 2251799813685247L) >>> 1 & 255L));
         out[186 + outPos] = (byte)((int)((in[29 + inPos] & 2251799813685247L) >>> 9 & 255L));
         out[187 + outPos] = (byte)((int)((in[29 + inPos] & 2251799813685247L) >>> 17 & 255L));
         out[188 + outPos] = (byte)((int)((in[29 + inPos] & 2251799813685247L) >>> 25 & 255L));
         out[189 + outPos] = (byte)((int)((in[29 + inPos] & 2251799813685247L) >>> 33 & 255L));
         out[190 + outPos] = (byte)((int)((in[29 + inPos] & 2251799813685247L) >>> 41 & 255L));
         out[191 + outPos] = (byte)((int)(((in[29 + inPos] & 2251799813685247L) >>> 49 | (in[30 + inPos] & 2251799813685247L) << 2) & 255L));
         out[192 + outPos] = (byte)((int)((in[30 + inPos] & 2251799813685247L) >>> 6 & 255L));
         out[193 + outPos] = (byte)((int)((in[30 + inPos] & 2251799813685247L) >>> 14 & 255L));
         out[194 + outPos] = (byte)((int)((in[30 + inPos] & 2251799813685247L) >>> 22 & 255L));
         out[195 + outPos] = (byte)((int)((in[30 + inPos] & 2251799813685247L) >>> 30 & 255L));
         out[196 + outPos] = (byte)((int)((in[30 + inPos] & 2251799813685247L) >>> 38 & 255L));
         out[197 + outPos] = (byte)((int)(((in[30 + inPos] & 2251799813685247L) >>> 46 | (in[31 + inPos] & 2251799813685247L) << 5) & 255L));
         out[198 + outPos] = (byte)((int)((in[31 + inPos] & 2251799813685247L) >>> 3 & 255L));
         out[199 + outPos] = (byte)((int)((in[31 + inPos] & 2251799813685247L) >>> 11 & 255L));
         out[200 + outPos] = (byte)((int)((in[31 + inPos] & 2251799813685247L) >>> 19 & 255L));
         out[201 + outPos] = (byte)((int)((in[31 + inPos] & 2251799813685247L) >>> 27 & 255L));
         out[202 + outPos] = (byte)((int)((in[31 + inPos] & 2251799813685247L) >>> 35 & 255L));
         out[203 + outPos] = (byte)((int)((in[31 + inPos] & 2251799813685247L) >>> 43 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 2251799813685247L;
         out[1 + outPos] = (long)in[6 + inPos] >> 3 & 31L | (long)in[7 + inPos] << 5 & 8191L | (long)in[8 + inPos] << 13 & 2097151L | (long)in[9 + inPos] << 21 & 536870911L | (long)in[10 + inPos] << 29 & 137438953471L | (long)in[11 + inPos] << 37 & 35184372088831L | (long)in[12 + inPos] << 45 & 2251799813685247L;
         out[2 + outPos] = (long)in[12 + inPos] >> 6 & 3L | (long)in[13 + inPos] << 2 & 1023L | (long)in[14 + inPos] << 10 & 262143L | (long)in[15 + inPos] << 18 & 67108863L | (long)in[16 + inPos] << 26 & 17179869183L | (long)in[17 + inPos] << 34 & 4398046511103L | (long)in[18 + inPos] << 42 & 1125899906842623L | (long)in[19 + inPos] << 50 & 2251799813685247L;
         out[3 + outPos] = (long)in[19 + inPos] >> 1 & 127L | (long)in[20 + inPos] << 7 & 32767L | (long)in[21 + inPos] << 15 & 8388607L | (long)in[22 + inPos] << 23 & 2147483647L | (long)in[23 + inPos] << 31 & 549755813887L | (long)in[24 + inPos] << 39 & 140737488355327L | (long)in[25 + inPos] << 47 & 2251799813685247L;
         out[4 + outPos] = (long)in[25 + inPos] >> 4 & 15L | (long)in[26 + inPos] << 4 & 4095L | (long)in[27 + inPos] << 12 & 1048575L | (long)in[28 + inPos] << 20 & 268435455L | (long)in[29 + inPos] << 28 & 68719476735L | (long)in[30 + inPos] << 36 & 17592186044415L | (long)in[31 + inPos] << 44 & 2251799813685247L;
         out[5 + outPos] = (long)in[31 + inPos] >> 7 & 1L | (long)in[32 + inPos] << 1 & 511L | (long)in[33 + inPos] << 9 & 131071L | (long)in[34 + inPos] << 17 & 33554431L | (long)in[35 + inPos] << 25 & 8589934591L | (long)in[36 + inPos] << 33 & 2199023255551L | (long)in[37 + inPos] << 41 & 562949953421311L | (long)in[38 + inPos] << 49 & 2251799813685247L;
         out[6 + outPos] = (long)in[38 + inPos] >> 2 & 63L | (long)in[39 + inPos] << 6 & 16383L | (long)in[40 + inPos] << 14 & 4194303L | (long)in[41 + inPos] << 22 & 1073741823L | (long)in[42 + inPos] << 30 & 274877906943L | (long)in[43 + inPos] << 38 & 70368744177663L | (long)in[44 + inPos] << 46 & 2251799813685247L;
         out[7 + outPos] = (long)in[44 + inPos] >> 5 & 7L | (long)in[45 + inPos] << 3 & 2047L | (long)in[46 + inPos] << 11 & 524287L | (long)in[47 + inPos] << 19 & 134217727L | (long)in[48 + inPos] << 27 & 34359738367L | (long)in[49 + inPos] << 35 & 8796093022207L | (long)in[50 + inPos] << 43 & 2251799813685247L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 2251799813685247L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 3 & 31L | (long)in.get(7 + inPos) << 5 & 8191L | (long)in.get(8 + inPos) << 13 & 2097151L | (long)in.get(9 + inPos) << 21 & 536870911L | (long)in.get(10 + inPos) << 29 & 137438953471L | (long)in.get(11 + inPos) << 37 & 35184372088831L | (long)in.get(12 + inPos) << 45 & 2251799813685247L;
         out[2 + outPos] = (long)in.get(12 + inPos) >> 6 & 3L | (long)in.get(13 + inPos) << 2 & 1023L | (long)in.get(14 + inPos) << 10 & 262143L | (long)in.get(15 + inPos) << 18 & 67108863L | (long)in.get(16 + inPos) << 26 & 17179869183L | (long)in.get(17 + inPos) << 34 & 4398046511103L | (long)in.get(18 + inPos) << 42 & 1125899906842623L | (long)in.get(19 + inPos) << 50 & 2251799813685247L;
         out[3 + outPos] = (long)in.get(19 + inPos) >> 1 & 127L | (long)in.get(20 + inPos) << 7 & 32767L | (long)in.get(21 + inPos) << 15 & 8388607L | (long)in.get(22 + inPos) << 23 & 2147483647L | (long)in.get(23 + inPos) << 31 & 549755813887L | (long)in.get(24 + inPos) << 39 & 140737488355327L | (long)in.get(25 + inPos) << 47 & 2251799813685247L;
         out[4 + outPos] = (long)in.get(25 + inPos) >> 4 & 15L | (long)in.get(26 + inPos) << 4 & 4095L | (long)in.get(27 + inPos) << 12 & 1048575L | (long)in.get(28 + inPos) << 20 & 268435455L | (long)in.get(29 + inPos) << 28 & 68719476735L | (long)in.get(30 + inPos) << 36 & 17592186044415L | (long)in.get(31 + inPos) << 44 & 2251799813685247L;
         out[5 + outPos] = (long)in.get(31 + inPos) >> 7 & 1L | (long)in.get(32 + inPos) << 1 & 511L | (long)in.get(33 + inPos) << 9 & 131071L | (long)in.get(34 + inPos) << 17 & 33554431L | (long)in.get(35 + inPos) << 25 & 8589934591L | (long)in.get(36 + inPos) << 33 & 2199023255551L | (long)in.get(37 + inPos) << 41 & 562949953421311L | (long)in.get(38 + inPos) << 49 & 2251799813685247L;
         out[6 + outPos] = (long)in.get(38 + inPos) >> 2 & 63L | (long)in.get(39 + inPos) << 6 & 16383L | (long)in.get(40 + inPos) << 14 & 4194303L | (long)in.get(41 + inPos) << 22 & 1073741823L | (long)in.get(42 + inPos) << 30 & 274877906943L | (long)in.get(43 + inPos) << 38 & 70368744177663L | (long)in.get(44 + inPos) << 46 & 2251799813685247L;
         out[7 + outPos] = (long)in.get(44 + inPos) >> 5 & 7L | (long)in.get(45 + inPos) << 3 & 2047L | (long)in.get(46 + inPos) << 11 & 524287L | (long)in.get(47 + inPos) << 19 & 134217727L | (long)in.get(48 + inPos) << 27 & 34359738367L | (long)in.get(49 + inPos) << 35 & 8796093022207L | (long)in.get(50 + inPos) << 43 & 2251799813685247L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 2251799813685247L;
         out[1 + outPos] = (long)in[6 + inPos] >> 3 & 31L | (long)in[7 + inPos] << 5 & 8191L | (long)in[8 + inPos] << 13 & 2097151L | (long)in[9 + inPos] << 21 & 536870911L | (long)in[10 + inPos] << 29 & 137438953471L | (long)in[11 + inPos] << 37 & 35184372088831L | (long)in[12 + inPos] << 45 & 2251799813685247L;
         out[2 + outPos] = (long)in[12 + inPos] >> 6 & 3L | (long)in[13 + inPos] << 2 & 1023L | (long)in[14 + inPos] << 10 & 262143L | (long)in[15 + inPos] << 18 & 67108863L | (long)in[16 + inPos] << 26 & 17179869183L | (long)in[17 + inPos] << 34 & 4398046511103L | (long)in[18 + inPos] << 42 & 1125899906842623L | (long)in[19 + inPos] << 50 & 2251799813685247L;
         out[3 + outPos] = (long)in[19 + inPos] >> 1 & 127L | (long)in[20 + inPos] << 7 & 32767L | (long)in[21 + inPos] << 15 & 8388607L | (long)in[22 + inPos] << 23 & 2147483647L | (long)in[23 + inPos] << 31 & 549755813887L | (long)in[24 + inPos] << 39 & 140737488355327L | (long)in[25 + inPos] << 47 & 2251799813685247L;
         out[4 + outPos] = (long)in[25 + inPos] >> 4 & 15L | (long)in[26 + inPos] << 4 & 4095L | (long)in[27 + inPos] << 12 & 1048575L | (long)in[28 + inPos] << 20 & 268435455L | (long)in[29 + inPos] << 28 & 68719476735L | (long)in[30 + inPos] << 36 & 17592186044415L | (long)in[31 + inPos] << 44 & 2251799813685247L;
         out[5 + outPos] = (long)in[31 + inPos] >> 7 & 1L | (long)in[32 + inPos] << 1 & 511L | (long)in[33 + inPos] << 9 & 131071L | (long)in[34 + inPos] << 17 & 33554431L | (long)in[35 + inPos] << 25 & 8589934591L | (long)in[36 + inPos] << 33 & 2199023255551L | (long)in[37 + inPos] << 41 & 562949953421311L | (long)in[38 + inPos] << 49 & 2251799813685247L;
         out[6 + outPos] = (long)in[38 + inPos] >> 2 & 63L | (long)in[39 + inPos] << 6 & 16383L | (long)in[40 + inPos] << 14 & 4194303L | (long)in[41 + inPos] << 22 & 1073741823L | (long)in[42 + inPos] << 30 & 274877906943L | (long)in[43 + inPos] << 38 & 70368744177663L | (long)in[44 + inPos] << 46 & 2251799813685247L;
         out[7 + outPos] = (long)in[44 + inPos] >> 5 & 7L | (long)in[45 + inPos] << 3 & 2047L | (long)in[46 + inPos] << 11 & 524287L | (long)in[47 + inPos] << 19 & 134217727L | (long)in[48 + inPos] << 27 & 34359738367L | (long)in[49 + inPos] << 35 & 8796093022207L | (long)in[50 + inPos] << 43 & 2251799813685247L;
         out[8 + outPos] = (long)in[51 + inPos] & 255L | (long)in[52 + inPos] << 8 & 65535L | (long)in[53 + inPos] << 16 & 16777215L | (long)in[54 + inPos] << 24 & 4294967295L | (long)in[55 + inPos] << 32 & 1099511627775L | (long)in[56 + inPos] << 40 & 281474976710655L | (long)in[57 + inPos] << 48 & 2251799813685247L;
         out[9 + outPos] = (long)in[57 + inPos] >> 3 & 31L | (long)in[58 + inPos] << 5 & 8191L | (long)in[59 + inPos] << 13 & 2097151L | (long)in[60 + inPos] << 21 & 536870911L | (long)in[61 + inPos] << 29 & 137438953471L | (long)in[62 + inPos] << 37 & 35184372088831L | (long)in[63 + inPos] << 45 & 2251799813685247L;
         out[10 + outPos] = (long)in[63 + inPos] >> 6 & 3L | (long)in[64 + inPos] << 2 & 1023L | (long)in[65 + inPos] << 10 & 262143L | (long)in[66 + inPos] << 18 & 67108863L | (long)in[67 + inPos] << 26 & 17179869183L | (long)in[68 + inPos] << 34 & 4398046511103L | (long)in[69 + inPos] << 42 & 1125899906842623L | (long)in[70 + inPos] << 50 & 2251799813685247L;
         out[11 + outPos] = (long)in[70 + inPos] >> 1 & 127L | (long)in[71 + inPos] << 7 & 32767L | (long)in[72 + inPos] << 15 & 8388607L | (long)in[73 + inPos] << 23 & 2147483647L | (long)in[74 + inPos] << 31 & 549755813887L | (long)in[75 + inPos] << 39 & 140737488355327L | (long)in[76 + inPos] << 47 & 2251799813685247L;
         out[12 + outPos] = (long)in[76 + inPos] >> 4 & 15L | (long)in[77 + inPos] << 4 & 4095L | (long)in[78 + inPos] << 12 & 1048575L | (long)in[79 + inPos] << 20 & 268435455L | (long)in[80 + inPos] << 28 & 68719476735L | (long)in[81 + inPos] << 36 & 17592186044415L | (long)in[82 + inPos] << 44 & 2251799813685247L;
         out[13 + outPos] = (long)in[82 + inPos] >> 7 & 1L | (long)in[83 + inPos] << 1 & 511L | (long)in[84 + inPos] << 9 & 131071L | (long)in[85 + inPos] << 17 & 33554431L | (long)in[86 + inPos] << 25 & 8589934591L | (long)in[87 + inPos] << 33 & 2199023255551L | (long)in[88 + inPos] << 41 & 562949953421311L | (long)in[89 + inPos] << 49 & 2251799813685247L;
         out[14 + outPos] = (long)in[89 + inPos] >> 2 & 63L | (long)in[90 + inPos] << 6 & 16383L | (long)in[91 + inPos] << 14 & 4194303L | (long)in[92 + inPos] << 22 & 1073741823L | (long)in[93 + inPos] << 30 & 274877906943L | (long)in[94 + inPos] << 38 & 70368744177663L | (long)in[95 + inPos] << 46 & 2251799813685247L;
         out[15 + outPos] = (long)in[95 + inPos] >> 5 & 7L | (long)in[96 + inPos] << 3 & 2047L | (long)in[97 + inPos] << 11 & 524287L | (long)in[98 + inPos] << 19 & 134217727L | (long)in[99 + inPos] << 27 & 34359738367L | (long)in[100 + inPos] << 35 & 8796093022207L | (long)in[101 + inPos] << 43 & 2251799813685247L;
         out[16 + outPos] = (long)in[102 + inPos] & 255L | (long)in[103 + inPos] << 8 & 65535L | (long)in[104 + inPos] << 16 & 16777215L | (long)in[105 + inPos] << 24 & 4294967295L | (long)in[106 + inPos] << 32 & 1099511627775L | (long)in[107 + inPos] << 40 & 281474976710655L | (long)in[108 + inPos] << 48 & 2251799813685247L;
         out[17 + outPos] = (long)in[108 + inPos] >> 3 & 31L | (long)in[109 + inPos] << 5 & 8191L | (long)in[110 + inPos] << 13 & 2097151L | (long)in[111 + inPos] << 21 & 536870911L | (long)in[112 + inPos] << 29 & 137438953471L | (long)in[113 + inPos] << 37 & 35184372088831L | (long)in[114 + inPos] << 45 & 2251799813685247L;
         out[18 + outPos] = (long)in[114 + inPos] >> 6 & 3L | (long)in[115 + inPos] << 2 & 1023L | (long)in[116 + inPos] << 10 & 262143L | (long)in[117 + inPos] << 18 & 67108863L | (long)in[118 + inPos] << 26 & 17179869183L | (long)in[119 + inPos] << 34 & 4398046511103L | (long)in[120 + inPos] << 42 & 1125899906842623L | (long)in[121 + inPos] << 50 & 2251799813685247L;
         out[19 + outPos] = (long)in[121 + inPos] >> 1 & 127L | (long)in[122 + inPos] << 7 & 32767L | (long)in[123 + inPos] << 15 & 8388607L | (long)in[124 + inPos] << 23 & 2147483647L | (long)in[125 + inPos] << 31 & 549755813887L | (long)in[126 + inPos] << 39 & 140737488355327L | (long)in[127 + inPos] << 47 & 2251799813685247L;
         out[20 + outPos] = (long)in[127 + inPos] >> 4 & 15L | (long)in[128 + inPos] << 4 & 4095L | (long)in[129 + inPos] << 12 & 1048575L | (long)in[130 + inPos] << 20 & 268435455L | (long)in[131 + inPos] << 28 & 68719476735L | (long)in[132 + inPos] << 36 & 17592186044415L | (long)in[133 + inPos] << 44 & 2251799813685247L;
         out[21 + outPos] = (long)in[133 + inPos] >> 7 & 1L | (long)in[134 + inPos] << 1 & 511L | (long)in[135 + inPos] << 9 & 131071L | (long)in[136 + inPos] << 17 & 33554431L | (long)in[137 + inPos] << 25 & 8589934591L | (long)in[138 + inPos] << 33 & 2199023255551L | (long)in[139 + inPos] << 41 & 562949953421311L | (long)in[140 + inPos] << 49 & 2251799813685247L;
         out[22 + outPos] = (long)in[140 + inPos] >> 2 & 63L | (long)in[141 + inPos] << 6 & 16383L | (long)in[142 + inPos] << 14 & 4194303L | (long)in[143 + inPos] << 22 & 1073741823L | (long)in[144 + inPos] << 30 & 274877906943L | (long)in[145 + inPos] << 38 & 70368744177663L | (long)in[146 + inPos] << 46 & 2251799813685247L;
         out[23 + outPos] = (long)in[146 + inPos] >> 5 & 7L | (long)in[147 + inPos] << 3 & 2047L | (long)in[148 + inPos] << 11 & 524287L | (long)in[149 + inPos] << 19 & 134217727L | (long)in[150 + inPos] << 27 & 34359738367L | (long)in[151 + inPos] << 35 & 8796093022207L | (long)in[152 + inPos] << 43 & 2251799813685247L;
         out[24 + outPos] = (long)in[153 + inPos] & 255L | (long)in[154 + inPos] << 8 & 65535L | (long)in[155 + inPos] << 16 & 16777215L | (long)in[156 + inPos] << 24 & 4294967295L | (long)in[157 + inPos] << 32 & 1099511627775L | (long)in[158 + inPos] << 40 & 281474976710655L | (long)in[159 + inPos] << 48 & 2251799813685247L;
         out[25 + outPos] = (long)in[159 + inPos] >> 3 & 31L | (long)in[160 + inPos] << 5 & 8191L | (long)in[161 + inPos] << 13 & 2097151L | (long)in[162 + inPos] << 21 & 536870911L | (long)in[163 + inPos] << 29 & 137438953471L | (long)in[164 + inPos] << 37 & 35184372088831L | (long)in[165 + inPos] << 45 & 2251799813685247L;
         out[26 + outPos] = (long)in[165 + inPos] >> 6 & 3L | (long)in[166 + inPos] << 2 & 1023L | (long)in[167 + inPos] << 10 & 262143L | (long)in[168 + inPos] << 18 & 67108863L | (long)in[169 + inPos] << 26 & 17179869183L | (long)in[170 + inPos] << 34 & 4398046511103L | (long)in[171 + inPos] << 42 & 1125899906842623L | (long)in[172 + inPos] << 50 & 2251799813685247L;
         out[27 + outPos] = (long)in[172 + inPos] >> 1 & 127L | (long)in[173 + inPos] << 7 & 32767L | (long)in[174 + inPos] << 15 & 8388607L | (long)in[175 + inPos] << 23 & 2147483647L | (long)in[176 + inPos] << 31 & 549755813887L | (long)in[177 + inPos] << 39 & 140737488355327L | (long)in[178 + inPos] << 47 & 2251799813685247L;
         out[28 + outPos] = (long)in[178 + inPos] >> 4 & 15L | (long)in[179 + inPos] << 4 & 4095L | (long)in[180 + inPos] << 12 & 1048575L | (long)in[181 + inPos] << 20 & 268435455L | (long)in[182 + inPos] << 28 & 68719476735L | (long)in[183 + inPos] << 36 & 17592186044415L | (long)in[184 + inPos] << 44 & 2251799813685247L;
         out[29 + outPos] = (long)in[184 + inPos] >> 7 & 1L | (long)in[185 + inPos] << 1 & 511L | (long)in[186 + inPos] << 9 & 131071L | (long)in[187 + inPos] << 17 & 33554431L | (long)in[188 + inPos] << 25 & 8589934591L | (long)in[189 + inPos] << 33 & 2199023255551L | (long)in[190 + inPos] << 41 & 562949953421311L | (long)in[191 + inPos] << 49 & 2251799813685247L;
         out[30 + outPos] = (long)in[191 + inPos] >> 2 & 63L | (long)in[192 + inPos] << 6 & 16383L | (long)in[193 + inPos] << 14 & 4194303L | (long)in[194 + inPos] << 22 & 1073741823L | (long)in[195 + inPos] << 30 & 274877906943L | (long)in[196 + inPos] << 38 & 70368744177663L | (long)in[197 + inPos] << 46 & 2251799813685247L;
         out[31 + outPos] = (long)in[197 + inPos] >> 5 & 7L | (long)in[198 + inPos] << 3 & 2047L | (long)in[199 + inPos] << 11 & 524287L | (long)in[200 + inPos] << 19 & 134217727L | (long)in[201 + inPos] << 27 & 34359738367L | (long)in[202 + inPos] << 35 & 8796093022207L | (long)in[203 + inPos] << 43 & 2251799813685247L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 2251799813685247L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 3 & 31L | (long)in.get(7 + inPos) << 5 & 8191L | (long)in.get(8 + inPos) << 13 & 2097151L | (long)in.get(9 + inPos) << 21 & 536870911L | (long)in.get(10 + inPos) << 29 & 137438953471L | (long)in.get(11 + inPos) << 37 & 35184372088831L | (long)in.get(12 + inPos) << 45 & 2251799813685247L;
         out[2 + outPos] = (long)in.get(12 + inPos) >> 6 & 3L | (long)in.get(13 + inPos) << 2 & 1023L | (long)in.get(14 + inPos) << 10 & 262143L | (long)in.get(15 + inPos) << 18 & 67108863L | (long)in.get(16 + inPos) << 26 & 17179869183L | (long)in.get(17 + inPos) << 34 & 4398046511103L | (long)in.get(18 + inPos) << 42 & 1125899906842623L | (long)in.get(19 + inPos) << 50 & 2251799813685247L;
         out[3 + outPos] = (long)in.get(19 + inPos) >> 1 & 127L | (long)in.get(20 + inPos) << 7 & 32767L | (long)in.get(21 + inPos) << 15 & 8388607L | (long)in.get(22 + inPos) << 23 & 2147483647L | (long)in.get(23 + inPos) << 31 & 549755813887L | (long)in.get(24 + inPos) << 39 & 140737488355327L | (long)in.get(25 + inPos) << 47 & 2251799813685247L;
         out[4 + outPos] = (long)in.get(25 + inPos) >> 4 & 15L | (long)in.get(26 + inPos) << 4 & 4095L | (long)in.get(27 + inPos) << 12 & 1048575L | (long)in.get(28 + inPos) << 20 & 268435455L | (long)in.get(29 + inPos) << 28 & 68719476735L | (long)in.get(30 + inPos) << 36 & 17592186044415L | (long)in.get(31 + inPos) << 44 & 2251799813685247L;
         out[5 + outPos] = (long)in.get(31 + inPos) >> 7 & 1L | (long)in.get(32 + inPos) << 1 & 511L | (long)in.get(33 + inPos) << 9 & 131071L | (long)in.get(34 + inPos) << 17 & 33554431L | (long)in.get(35 + inPos) << 25 & 8589934591L | (long)in.get(36 + inPos) << 33 & 2199023255551L | (long)in.get(37 + inPos) << 41 & 562949953421311L | (long)in.get(38 + inPos) << 49 & 2251799813685247L;
         out[6 + outPos] = (long)in.get(38 + inPos) >> 2 & 63L | (long)in.get(39 + inPos) << 6 & 16383L | (long)in.get(40 + inPos) << 14 & 4194303L | (long)in.get(41 + inPos) << 22 & 1073741823L | (long)in.get(42 + inPos) << 30 & 274877906943L | (long)in.get(43 + inPos) << 38 & 70368744177663L | (long)in.get(44 + inPos) << 46 & 2251799813685247L;
         out[7 + outPos] = (long)in.get(44 + inPos) >> 5 & 7L | (long)in.get(45 + inPos) << 3 & 2047L | (long)in.get(46 + inPos) << 11 & 524287L | (long)in.get(47 + inPos) << 19 & 134217727L | (long)in.get(48 + inPos) << 27 & 34359738367L | (long)in.get(49 + inPos) << 35 & 8796093022207L | (long)in.get(50 + inPos) << 43 & 2251799813685247L;
         out[8 + outPos] = (long)in.get(51 + inPos) & 255L | (long)in.get(52 + inPos) << 8 & 65535L | (long)in.get(53 + inPos) << 16 & 16777215L | (long)in.get(54 + inPos) << 24 & 4294967295L | (long)in.get(55 + inPos) << 32 & 1099511627775L | (long)in.get(56 + inPos) << 40 & 281474976710655L | (long)in.get(57 + inPos) << 48 & 2251799813685247L;
         out[9 + outPos] = (long)in.get(57 + inPos) >> 3 & 31L | (long)in.get(58 + inPos) << 5 & 8191L | (long)in.get(59 + inPos) << 13 & 2097151L | (long)in.get(60 + inPos) << 21 & 536870911L | (long)in.get(61 + inPos) << 29 & 137438953471L | (long)in.get(62 + inPos) << 37 & 35184372088831L | (long)in.get(63 + inPos) << 45 & 2251799813685247L;
         out[10 + outPos] = (long)in.get(63 + inPos) >> 6 & 3L | (long)in.get(64 + inPos) << 2 & 1023L | (long)in.get(65 + inPos) << 10 & 262143L | (long)in.get(66 + inPos) << 18 & 67108863L | (long)in.get(67 + inPos) << 26 & 17179869183L | (long)in.get(68 + inPos) << 34 & 4398046511103L | (long)in.get(69 + inPos) << 42 & 1125899906842623L | (long)in.get(70 + inPos) << 50 & 2251799813685247L;
         out[11 + outPos] = (long)in.get(70 + inPos) >> 1 & 127L | (long)in.get(71 + inPos) << 7 & 32767L | (long)in.get(72 + inPos) << 15 & 8388607L | (long)in.get(73 + inPos) << 23 & 2147483647L | (long)in.get(74 + inPos) << 31 & 549755813887L | (long)in.get(75 + inPos) << 39 & 140737488355327L | (long)in.get(76 + inPos) << 47 & 2251799813685247L;
         out[12 + outPos] = (long)in.get(76 + inPos) >> 4 & 15L | (long)in.get(77 + inPos) << 4 & 4095L | (long)in.get(78 + inPos) << 12 & 1048575L | (long)in.get(79 + inPos) << 20 & 268435455L | (long)in.get(80 + inPos) << 28 & 68719476735L | (long)in.get(81 + inPos) << 36 & 17592186044415L | (long)in.get(82 + inPos) << 44 & 2251799813685247L;
         out[13 + outPos] = (long)in.get(82 + inPos) >> 7 & 1L | (long)in.get(83 + inPos) << 1 & 511L | (long)in.get(84 + inPos) << 9 & 131071L | (long)in.get(85 + inPos) << 17 & 33554431L | (long)in.get(86 + inPos) << 25 & 8589934591L | (long)in.get(87 + inPos) << 33 & 2199023255551L | (long)in.get(88 + inPos) << 41 & 562949953421311L | (long)in.get(89 + inPos) << 49 & 2251799813685247L;
         out[14 + outPos] = (long)in.get(89 + inPos) >> 2 & 63L | (long)in.get(90 + inPos) << 6 & 16383L | (long)in.get(91 + inPos) << 14 & 4194303L | (long)in.get(92 + inPos) << 22 & 1073741823L | (long)in.get(93 + inPos) << 30 & 274877906943L | (long)in.get(94 + inPos) << 38 & 70368744177663L | (long)in.get(95 + inPos) << 46 & 2251799813685247L;
         out[15 + outPos] = (long)in.get(95 + inPos) >> 5 & 7L | (long)in.get(96 + inPos) << 3 & 2047L | (long)in.get(97 + inPos) << 11 & 524287L | (long)in.get(98 + inPos) << 19 & 134217727L | (long)in.get(99 + inPos) << 27 & 34359738367L | (long)in.get(100 + inPos) << 35 & 8796093022207L | (long)in.get(101 + inPos) << 43 & 2251799813685247L;
         out[16 + outPos] = (long)in.get(102 + inPos) & 255L | (long)in.get(103 + inPos) << 8 & 65535L | (long)in.get(104 + inPos) << 16 & 16777215L | (long)in.get(105 + inPos) << 24 & 4294967295L | (long)in.get(106 + inPos) << 32 & 1099511627775L | (long)in.get(107 + inPos) << 40 & 281474976710655L | (long)in.get(108 + inPos) << 48 & 2251799813685247L;
         out[17 + outPos] = (long)in.get(108 + inPos) >> 3 & 31L | (long)in.get(109 + inPos) << 5 & 8191L | (long)in.get(110 + inPos) << 13 & 2097151L | (long)in.get(111 + inPos) << 21 & 536870911L | (long)in.get(112 + inPos) << 29 & 137438953471L | (long)in.get(113 + inPos) << 37 & 35184372088831L | (long)in.get(114 + inPos) << 45 & 2251799813685247L;
         out[18 + outPos] = (long)in.get(114 + inPos) >> 6 & 3L | (long)in.get(115 + inPos) << 2 & 1023L | (long)in.get(116 + inPos) << 10 & 262143L | (long)in.get(117 + inPos) << 18 & 67108863L | (long)in.get(118 + inPos) << 26 & 17179869183L | (long)in.get(119 + inPos) << 34 & 4398046511103L | (long)in.get(120 + inPos) << 42 & 1125899906842623L | (long)in.get(121 + inPos) << 50 & 2251799813685247L;
         out[19 + outPos] = (long)in.get(121 + inPos) >> 1 & 127L | (long)in.get(122 + inPos) << 7 & 32767L | (long)in.get(123 + inPos) << 15 & 8388607L | (long)in.get(124 + inPos) << 23 & 2147483647L | (long)in.get(125 + inPos) << 31 & 549755813887L | (long)in.get(126 + inPos) << 39 & 140737488355327L | (long)in.get(127 + inPos) << 47 & 2251799813685247L;
         out[20 + outPos] = (long)in.get(127 + inPos) >> 4 & 15L | (long)in.get(128 + inPos) << 4 & 4095L | (long)in.get(129 + inPos) << 12 & 1048575L | (long)in.get(130 + inPos) << 20 & 268435455L | (long)in.get(131 + inPos) << 28 & 68719476735L | (long)in.get(132 + inPos) << 36 & 17592186044415L | (long)in.get(133 + inPos) << 44 & 2251799813685247L;
         out[21 + outPos] = (long)in.get(133 + inPos) >> 7 & 1L | (long)in.get(134 + inPos) << 1 & 511L | (long)in.get(135 + inPos) << 9 & 131071L | (long)in.get(136 + inPos) << 17 & 33554431L | (long)in.get(137 + inPos) << 25 & 8589934591L | (long)in.get(138 + inPos) << 33 & 2199023255551L | (long)in.get(139 + inPos) << 41 & 562949953421311L | (long)in.get(140 + inPos) << 49 & 2251799813685247L;
         out[22 + outPos] = (long)in.get(140 + inPos) >> 2 & 63L | (long)in.get(141 + inPos) << 6 & 16383L | (long)in.get(142 + inPos) << 14 & 4194303L | (long)in.get(143 + inPos) << 22 & 1073741823L | (long)in.get(144 + inPos) << 30 & 274877906943L | (long)in.get(145 + inPos) << 38 & 70368744177663L | (long)in.get(146 + inPos) << 46 & 2251799813685247L;
         out[23 + outPos] = (long)in.get(146 + inPos) >> 5 & 7L | (long)in.get(147 + inPos) << 3 & 2047L | (long)in.get(148 + inPos) << 11 & 524287L | (long)in.get(149 + inPos) << 19 & 134217727L | (long)in.get(150 + inPos) << 27 & 34359738367L | (long)in.get(151 + inPos) << 35 & 8796093022207L | (long)in.get(152 + inPos) << 43 & 2251799813685247L;
         out[24 + outPos] = (long)in.get(153 + inPos) & 255L | (long)in.get(154 + inPos) << 8 & 65535L | (long)in.get(155 + inPos) << 16 & 16777215L | (long)in.get(156 + inPos) << 24 & 4294967295L | (long)in.get(157 + inPos) << 32 & 1099511627775L | (long)in.get(158 + inPos) << 40 & 281474976710655L | (long)in.get(159 + inPos) << 48 & 2251799813685247L;
         out[25 + outPos] = (long)in.get(159 + inPos) >> 3 & 31L | (long)in.get(160 + inPos) << 5 & 8191L | (long)in.get(161 + inPos) << 13 & 2097151L | (long)in.get(162 + inPos) << 21 & 536870911L | (long)in.get(163 + inPos) << 29 & 137438953471L | (long)in.get(164 + inPos) << 37 & 35184372088831L | (long)in.get(165 + inPos) << 45 & 2251799813685247L;
         out[26 + outPos] = (long)in.get(165 + inPos) >> 6 & 3L | (long)in.get(166 + inPos) << 2 & 1023L | (long)in.get(167 + inPos) << 10 & 262143L | (long)in.get(168 + inPos) << 18 & 67108863L | (long)in.get(169 + inPos) << 26 & 17179869183L | (long)in.get(170 + inPos) << 34 & 4398046511103L | (long)in.get(171 + inPos) << 42 & 1125899906842623L | (long)in.get(172 + inPos) << 50 & 2251799813685247L;
         out[27 + outPos] = (long)in.get(172 + inPos) >> 1 & 127L | (long)in.get(173 + inPos) << 7 & 32767L | (long)in.get(174 + inPos) << 15 & 8388607L | (long)in.get(175 + inPos) << 23 & 2147483647L | (long)in.get(176 + inPos) << 31 & 549755813887L | (long)in.get(177 + inPos) << 39 & 140737488355327L | (long)in.get(178 + inPos) << 47 & 2251799813685247L;
         out[28 + outPos] = (long)in.get(178 + inPos) >> 4 & 15L | (long)in.get(179 + inPos) << 4 & 4095L | (long)in.get(180 + inPos) << 12 & 1048575L | (long)in.get(181 + inPos) << 20 & 268435455L | (long)in.get(182 + inPos) << 28 & 68719476735L | (long)in.get(183 + inPos) << 36 & 17592186044415L | (long)in.get(184 + inPos) << 44 & 2251799813685247L;
         out[29 + outPos] = (long)in.get(184 + inPos) >> 7 & 1L | (long)in.get(185 + inPos) << 1 & 511L | (long)in.get(186 + inPos) << 9 & 131071L | (long)in.get(187 + inPos) << 17 & 33554431L | (long)in.get(188 + inPos) << 25 & 8589934591L | (long)in.get(189 + inPos) << 33 & 2199023255551L | (long)in.get(190 + inPos) << 41 & 562949953421311L | (long)in.get(191 + inPos) << 49 & 2251799813685247L;
         out[30 + outPos] = (long)in.get(191 + inPos) >> 2 & 63L | (long)in.get(192 + inPos) << 6 & 16383L | (long)in.get(193 + inPos) << 14 & 4194303L | (long)in.get(194 + inPos) << 22 & 1073741823L | (long)in.get(195 + inPos) << 30 & 274877906943L | (long)in.get(196 + inPos) << 38 & 70368744177663L | (long)in.get(197 + inPos) << 46 & 2251799813685247L;
         out[31 + outPos] = (long)in.get(197 + inPos) >> 5 & 7L | (long)in.get(198 + inPos) << 3 & 2047L | (long)in.get(199 + inPos) << 11 & 524287L | (long)in.get(200 + inPos) << 19 & 134217727L | (long)in.get(201 + inPos) << 27 & 34359738367L | (long)in.get(202 + inPos) << 35 & 8796093022207L | (long)in.get(203 + inPos) << 43 & 2251799813685247L;
      }
   }

   private static final class Packer52 extends BytePackerForLong {
      private Packer52() {
         super(52);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 4503599627370495L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 4503599627370495L) >>> 48 | (in[1 + inPos] & 4503599627370495L) << 4) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[13 + outPos] = (byte)((int)(in[2 + inPos] & 4503599627370495L & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[19 + outPos] = (byte)((int)(((in[2 + inPos] & 4503599627370495L) >>> 48 | (in[3 + inPos] & 4503599627370495L) << 4) & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[26 + outPos] = (byte)((int)(in[4 + inPos] & 4503599627370495L & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[32 + outPos] = (byte)((int)(((in[4 + inPos] & 4503599627370495L) >>> 48 | (in[5 + inPos] & 4503599627370495L) << 4) & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[39 + outPos] = (byte)((int)(in[6 + inPos] & 4503599627370495L & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[42 + outPos] = (byte)((int)((in[6 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[45 + outPos] = (byte)((int)(((in[6 + inPos] & 4503599627370495L) >>> 48 | (in[7 + inPos] & 4503599627370495L) << 4) & 255L));
         out[46 + outPos] = (byte)((int)((in[7 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[47 + outPos] = (byte)((int)((in[7 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[48 + outPos] = (byte)((int)((in[7 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[49 + outPos] = (byte)((int)((in[7 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 4503599627370495L) >>> 44 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 4503599627370495L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 4503599627370495L) >>> 48 | (in[1 + inPos] & 4503599627370495L) << 4) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[13 + outPos] = (byte)((int)(in[2 + inPos] & 4503599627370495L & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[19 + outPos] = (byte)((int)(((in[2 + inPos] & 4503599627370495L) >>> 48 | (in[3 + inPos] & 4503599627370495L) << 4) & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[26 + outPos] = (byte)((int)(in[4 + inPos] & 4503599627370495L & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[32 + outPos] = (byte)((int)(((in[4 + inPos] & 4503599627370495L) >>> 48 | (in[5 + inPos] & 4503599627370495L) << 4) & 255L));
         out[33 + outPos] = (byte)((int)((in[5 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[39 + outPos] = (byte)((int)(in[6 + inPos] & 4503599627370495L & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[42 + outPos] = (byte)((int)((in[6 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[45 + outPos] = (byte)((int)(((in[6 + inPos] & 4503599627370495L) >>> 48 | (in[7 + inPos] & 4503599627370495L) << 4) & 255L));
         out[46 + outPos] = (byte)((int)((in[7 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[47 + outPos] = (byte)((int)((in[7 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[48 + outPos] = (byte)((int)((in[7 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[49 + outPos] = (byte)((int)((in[7 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[52 + outPos] = (byte)((int)(in[8 + inPos] & 4503599627370495L & 255L));
         out[53 + outPos] = (byte)((int)((in[8 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[54 + outPos] = (byte)((int)((in[8 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[55 + outPos] = (byte)((int)((in[8 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[56 + outPos] = (byte)((int)((in[8 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[57 + outPos] = (byte)((int)((in[8 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[58 + outPos] = (byte)((int)(((in[8 + inPos] & 4503599627370495L) >>> 48 | (in[9 + inPos] & 4503599627370495L) << 4) & 255L));
         out[59 + outPos] = (byte)((int)((in[9 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[60 + outPos] = (byte)((int)((in[9 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[61 + outPos] = (byte)((int)((in[9 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[62 + outPos] = (byte)((int)((in[9 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[63 + outPos] = (byte)((int)((in[9 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[64 + outPos] = (byte)((int)((in[9 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[65 + outPos] = (byte)((int)(in[10 + inPos] & 4503599627370495L & 255L));
         out[66 + outPos] = (byte)((int)((in[10 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[67 + outPos] = (byte)((int)((in[10 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[68 + outPos] = (byte)((int)((in[10 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[69 + outPos] = (byte)((int)((in[10 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[70 + outPos] = (byte)((int)((in[10 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[71 + outPos] = (byte)((int)(((in[10 + inPos] & 4503599627370495L) >>> 48 | (in[11 + inPos] & 4503599627370495L) << 4) & 255L));
         out[72 + outPos] = (byte)((int)((in[11 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[73 + outPos] = (byte)((int)((in[11 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[74 + outPos] = (byte)((int)((in[11 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[75 + outPos] = (byte)((int)((in[11 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[76 + outPos] = (byte)((int)((in[11 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[77 + outPos] = (byte)((int)((in[11 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[78 + outPos] = (byte)((int)(in[12 + inPos] & 4503599627370495L & 255L));
         out[79 + outPos] = (byte)((int)((in[12 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[80 + outPos] = (byte)((int)((in[12 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[81 + outPos] = (byte)((int)((in[12 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[82 + outPos] = (byte)((int)((in[12 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[83 + outPos] = (byte)((int)((in[12 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[84 + outPos] = (byte)((int)(((in[12 + inPos] & 4503599627370495L) >>> 48 | (in[13 + inPos] & 4503599627370495L) << 4) & 255L));
         out[85 + outPos] = (byte)((int)((in[13 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[86 + outPos] = (byte)((int)((in[13 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[87 + outPos] = (byte)((int)((in[13 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[88 + outPos] = (byte)((int)((in[13 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[89 + outPos] = (byte)((int)((in[13 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[90 + outPos] = (byte)((int)((in[13 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[91 + outPos] = (byte)((int)(in[14 + inPos] & 4503599627370495L & 255L));
         out[92 + outPos] = (byte)((int)((in[14 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[93 + outPos] = (byte)((int)((in[14 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[94 + outPos] = (byte)((int)((in[14 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[95 + outPos] = (byte)((int)((in[14 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[96 + outPos] = (byte)((int)((in[14 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[97 + outPos] = (byte)((int)(((in[14 + inPos] & 4503599627370495L) >>> 48 | (in[15 + inPos] & 4503599627370495L) << 4) & 255L));
         out[98 + outPos] = (byte)((int)((in[15 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[99 + outPos] = (byte)((int)((in[15 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[100 + outPos] = (byte)((int)((in[15 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[101 + outPos] = (byte)((int)((in[15 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[102 + outPos] = (byte)((int)((in[15 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[103 + outPos] = (byte)((int)((in[15 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[104 + outPos] = (byte)((int)(in[16 + inPos] & 4503599627370495L & 255L));
         out[105 + outPos] = (byte)((int)((in[16 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[106 + outPos] = (byte)((int)((in[16 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[107 + outPos] = (byte)((int)((in[16 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[108 + outPos] = (byte)((int)((in[16 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[109 + outPos] = (byte)((int)((in[16 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[110 + outPos] = (byte)((int)(((in[16 + inPos] & 4503599627370495L) >>> 48 | (in[17 + inPos] & 4503599627370495L) << 4) & 255L));
         out[111 + outPos] = (byte)((int)((in[17 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[112 + outPos] = (byte)((int)((in[17 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[113 + outPos] = (byte)((int)((in[17 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[114 + outPos] = (byte)((int)((in[17 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[115 + outPos] = (byte)((int)((in[17 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[116 + outPos] = (byte)((int)((in[17 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[117 + outPos] = (byte)((int)(in[18 + inPos] & 4503599627370495L & 255L));
         out[118 + outPos] = (byte)((int)((in[18 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[119 + outPos] = (byte)((int)((in[18 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[120 + outPos] = (byte)((int)((in[18 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[121 + outPos] = (byte)((int)((in[18 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[122 + outPos] = (byte)((int)((in[18 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[123 + outPos] = (byte)((int)(((in[18 + inPos] & 4503599627370495L) >>> 48 | (in[19 + inPos] & 4503599627370495L) << 4) & 255L));
         out[124 + outPos] = (byte)((int)((in[19 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[125 + outPos] = (byte)((int)((in[19 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[126 + outPos] = (byte)((int)((in[19 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[127 + outPos] = (byte)((int)((in[19 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[128 + outPos] = (byte)((int)((in[19 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[129 + outPos] = (byte)((int)((in[19 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[130 + outPos] = (byte)((int)(in[20 + inPos] & 4503599627370495L & 255L));
         out[131 + outPos] = (byte)((int)((in[20 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[132 + outPos] = (byte)((int)((in[20 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[133 + outPos] = (byte)((int)((in[20 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[134 + outPos] = (byte)((int)((in[20 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[135 + outPos] = (byte)((int)((in[20 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[136 + outPos] = (byte)((int)(((in[20 + inPos] & 4503599627370495L) >>> 48 | (in[21 + inPos] & 4503599627370495L) << 4) & 255L));
         out[137 + outPos] = (byte)((int)((in[21 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[138 + outPos] = (byte)((int)((in[21 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[139 + outPos] = (byte)((int)((in[21 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[140 + outPos] = (byte)((int)((in[21 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[141 + outPos] = (byte)((int)((in[21 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[142 + outPos] = (byte)((int)((in[21 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[143 + outPos] = (byte)((int)(in[22 + inPos] & 4503599627370495L & 255L));
         out[144 + outPos] = (byte)((int)((in[22 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[145 + outPos] = (byte)((int)((in[22 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[146 + outPos] = (byte)((int)((in[22 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[147 + outPos] = (byte)((int)((in[22 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[148 + outPos] = (byte)((int)((in[22 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[149 + outPos] = (byte)((int)(((in[22 + inPos] & 4503599627370495L) >>> 48 | (in[23 + inPos] & 4503599627370495L) << 4) & 255L));
         out[150 + outPos] = (byte)((int)((in[23 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[151 + outPos] = (byte)((int)((in[23 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[152 + outPos] = (byte)((int)((in[23 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[153 + outPos] = (byte)((int)((in[23 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[154 + outPos] = (byte)((int)((in[23 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[155 + outPos] = (byte)((int)((in[23 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[156 + outPos] = (byte)((int)(in[24 + inPos] & 4503599627370495L & 255L));
         out[157 + outPos] = (byte)((int)((in[24 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[158 + outPos] = (byte)((int)((in[24 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[159 + outPos] = (byte)((int)((in[24 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[160 + outPos] = (byte)((int)((in[24 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[161 + outPos] = (byte)((int)((in[24 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[162 + outPos] = (byte)((int)(((in[24 + inPos] & 4503599627370495L) >>> 48 | (in[25 + inPos] & 4503599627370495L) << 4) & 255L));
         out[163 + outPos] = (byte)((int)((in[25 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[164 + outPos] = (byte)((int)((in[25 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[165 + outPos] = (byte)((int)((in[25 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[166 + outPos] = (byte)((int)((in[25 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[167 + outPos] = (byte)((int)((in[25 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[168 + outPos] = (byte)((int)((in[25 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[169 + outPos] = (byte)((int)(in[26 + inPos] & 4503599627370495L & 255L));
         out[170 + outPos] = (byte)((int)((in[26 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[171 + outPos] = (byte)((int)((in[26 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[172 + outPos] = (byte)((int)((in[26 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[173 + outPos] = (byte)((int)((in[26 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[174 + outPos] = (byte)((int)((in[26 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[175 + outPos] = (byte)((int)(((in[26 + inPos] & 4503599627370495L) >>> 48 | (in[27 + inPos] & 4503599627370495L) << 4) & 255L));
         out[176 + outPos] = (byte)((int)((in[27 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[177 + outPos] = (byte)((int)((in[27 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[178 + outPos] = (byte)((int)((in[27 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[179 + outPos] = (byte)((int)((in[27 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[180 + outPos] = (byte)((int)((in[27 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[181 + outPos] = (byte)((int)((in[27 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[182 + outPos] = (byte)((int)(in[28 + inPos] & 4503599627370495L & 255L));
         out[183 + outPos] = (byte)((int)((in[28 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[184 + outPos] = (byte)((int)((in[28 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[185 + outPos] = (byte)((int)((in[28 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[186 + outPos] = (byte)((int)((in[28 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[187 + outPos] = (byte)((int)((in[28 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[188 + outPos] = (byte)((int)(((in[28 + inPos] & 4503599627370495L) >>> 48 | (in[29 + inPos] & 4503599627370495L) << 4) & 255L));
         out[189 + outPos] = (byte)((int)((in[29 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[190 + outPos] = (byte)((int)((in[29 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[191 + outPos] = (byte)((int)((in[29 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[192 + outPos] = (byte)((int)((in[29 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[193 + outPos] = (byte)((int)((in[29 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[194 + outPos] = (byte)((int)((in[29 + inPos] & 4503599627370495L) >>> 44 & 255L));
         out[195 + outPos] = (byte)((int)(in[30 + inPos] & 4503599627370495L & 255L));
         out[196 + outPos] = (byte)((int)((in[30 + inPos] & 4503599627370495L) >>> 8 & 255L));
         out[197 + outPos] = (byte)((int)((in[30 + inPos] & 4503599627370495L) >>> 16 & 255L));
         out[198 + outPos] = (byte)((int)((in[30 + inPos] & 4503599627370495L) >>> 24 & 255L));
         out[199 + outPos] = (byte)((int)((in[30 + inPos] & 4503599627370495L) >>> 32 & 255L));
         out[200 + outPos] = (byte)((int)((in[30 + inPos] & 4503599627370495L) >>> 40 & 255L));
         out[201 + outPos] = (byte)((int)(((in[30 + inPos] & 4503599627370495L) >>> 48 | (in[31 + inPos] & 4503599627370495L) << 4) & 255L));
         out[202 + outPos] = (byte)((int)((in[31 + inPos] & 4503599627370495L) >>> 4 & 255L));
         out[203 + outPos] = (byte)((int)((in[31 + inPos] & 4503599627370495L) >>> 12 & 255L));
         out[204 + outPos] = (byte)((int)((in[31 + inPos] & 4503599627370495L) >>> 20 & 255L));
         out[205 + outPos] = (byte)((int)((in[31 + inPos] & 4503599627370495L) >>> 28 & 255L));
         out[206 + outPos] = (byte)((int)((in[31 + inPos] & 4503599627370495L) >>> 36 & 255L));
         out[207 + outPos] = (byte)((int)((in[31 + inPos] & 4503599627370495L) >>> 44 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 4503599627370495L;
         out[1 + outPos] = (long)in[6 + inPos] >> 4 & 15L | (long)in[7 + inPos] << 4 & 4095L | (long)in[8 + inPos] << 12 & 1048575L | (long)in[9 + inPos] << 20 & 268435455L | (long)in[10 + inPos] << 28 & 68719476735L | (long)in[11 + inPos] << 36 & 17592186044415L | (long)in[12 + inPos] << 44 & 4503599627370495L;
         out[2 + outPos] = (long)in[13 + inPos] & 255L | (long)in[14 + inPos] << 8 & 65535L | (long)in[15 + inPos] << 16 & 16777215L | (long)in[16 + inPos] << 24 & 4294967295L | (long)in[17 + inPos] << 32 & 1099511627775L | (long)in[18 + inPos] << 40 & 281474976710655L | (long)in[19 + inPos] << 48 & 4503599627370495L;
         out[3 + outPos] = (long)in[19 + inPos] >> 4 & 15L | (long)in[20 + inPos] << 4 & 4095L | (long)in[21 + inPos] << 12 & 1048575L | (long)in[22 + inPos] << 20 & 268435455L | (long)in[23 + inPos] << 28 & 68719476735L | (long)in[24 + inPos] << 36 & 17592186044415L | (long)in[25 + inPos] << 44 & 4503599627370495L;
         out[4 + outPos] = (long)in[26 + inPos] & 255L | (long)in[27 + inPos] << 8 & 65535L | (long)in[28 + inPos] << 16 & 16777215L | (long)in[29 + inPos] << 24 & 4294967295L | (long)in[30 + inPos] << 32 & 1099511627775L | (long)in[31 + inPos] << 40 & 281474976710655L | (long)in[32 + inPos] << 48 & 4503599627370495L;
         out[5 + outPos] = (long)in[32 + inPos] >> 4 & 15L | (long)in[33 + inPos] << 4 & 4095L | (long)in[34 + inPos] << 12 & 1048575L | (long)in[35 + inPos] << 20 & 268435455L | (long)in[36 + inPos] << 28 & 68719476735L | (long)in[37 + inPos] << 36 & 17592186044415L | (long)in[38 + inPos] << 44 & 4503599627370495L;
         out[6 + outPos] = (long)in[39 + inPos] & 255L | (long)in[40 + inPos] << 8 & 65535L | (long)in[41 + inPos] << 16 & 16777215L | (long)in[42 + inPos] << 24 & 4294967295L | (long)in[43 + inPos] << 32 & 1099511627775L | (long)in[44 + inPos] << 40 & 281474976710655L | (long)in[45 + inPos] << 48 & 4503599627370495L;
         out[7 + outPos] = (long)in[45 + inPos] >> 4 & 15L | (long)in[46 + inPos] << 4 & 4095L | (long)in[47 + inPos] << 12 & 1048575L | (long)in[48 + inPos] << 20 & 268435455L | (long)in[49 + inPos] << 28 & 68719476735L | (long)in[50 + inPos] << 36 & 17592186044415L | (long)in[51 + inPos] << 44 & 4503599627370495L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 4503599627370495L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 4 & 15L | (long)in.get(7 + inPos) << 4 & 4095L | (long)in.get(8 + inPos) << 12 & 1048575L | (long)in.get(9 + inPos) << 20 & 268435455L | (long)in.get(10 + inPos) << 28 & 68719476735L | (long)in.get(11 + inPos) << 36 & 17592186044415L | (long)in.get(12 + inPos) << 44 & 4503599627370495L;
         out[2 + outPos] = (long)in.get(13 + inPos) & 255L | (long)in.get(14 + inPos) << 8 & 65535L | (long)in.get(15 + inPos) << 16 & 16777215L | (long)in.get(16 + inPos) << 24 & 4294967295L | (long)in.get(17 + inPos) << 32 & 1099511627775L | (long)in.get(18 + inPos) << 40 & 281474976710655L | (long)in.get(19 + inPos) << 48 & 4503599627370495L;
         out[3 + outPos] = (long)in.get(19 + inPos) >> 4 & 15L | (long)in.get(20 + inPos) << 4 & 4095L | (long)in.get(21 + inPos) << 12 & 1048575L | (long)in.get(22 + inPos) << 20 & 268435455L | (long)in.get(23 + inPos) << 28 & 68719476735L | (long)in.get(24 + inPos) << 36 & 17592186044415L | (long)in.get(25 + inPos) << 44 & 4503599627370495L;
         out[4 + outPos] = (long)in.get(26 + inPos) & 255L | (long)in.get(27 + inPos) << 8 & 65535L | (long)in.get(28 + inPos) << 16 & 16777215L | (long)in.get(29 + inPos) << 24 & 4294967295L | (long)in.get(30 + inPos) << 32 & 1099511627775L | (long)in.get(31 + inPos) << 40 & 281474976710655L | (long)in.get(32 + inPos) << 48 & 4503599627370495L;
         out[5 + outPos] = (long)in.get(32 + inPos) >> 4 & 15L | (long)in.get(33 + inPos) << 4 & 4095L | (long)in.get(34 + inPos) << 12 & 1048575L | (long)in.get(35 + inPos) << 20 & 268435455L | (long)in.get(36 + inPos) << 28 & 68719476735L | (long)in.get(37 + inPos) << 36 & 17592186044415L | (long)in.get(38 + inPos) << 44 & 4503599627370495L;
         out[6 + outPos] = (long)in.get(39 + inPos) & 255L | (long)in.get(40 + inPos) << 8 & 65535L | (long)in.get(41 + inPos) << 16 & 16777215L | (long)in.get(42 + inPos) << 24 & 4294967295L | (long)in.get(43 + inPos) << 32 & 1099511627775L | (long)in.get(44 + inPos) << 40 & 281474976710655L | (long)in.get(45 + inPos) << 48 & 4503599627370495L;
         out[7 + outPos] = (long)in.get(45 + inPos) >> 4 & 15L | (long)in.get(46 + inPos) << 4 & 4095L | (long)in.get(47 + inPos) << 12 & 1048575L | (long)in.get(48 + inPos) << 20 & 268435455L | (long)in.get(49 + inPos) << 28 & 68719476735L | (long)in.get(50 + inPos) << 36 & 17592186044415L | (long)in.get(51 + inPos) << 44 & 4503599627370495L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 4503599627370495L;
         out[1 + outPos] = (long)in[6 + inPos] >> 4 & 15L | (long)in[7 + inPos] << 4 & 4095L | (long)in[8 + inPos] << 12 & 1048575L | (long)in[9 + inPos] << 20 & 268435455L | (long)in[10 + inPos] << 28 & 68719476735L | (long)in[11 + inPos] << 36 & 17592186044415L | (long)in[12 + inPos] << 44 & 4503599627370495L;
         out[2 + outPos] = (long)in[13 + inPos] & 255L | (long)in[14 + inPos] << 8 & 65535L | (long)in[15 + inPos] << 16 & 16777215L | (long)in[16 + inPos] << 24 & 4294967295L | (long)in[17 + inPos] << 32 & 1099511627775L | (long)in[18 + inPos] << 40 & 281474976710655L | (long)in[19 + inPos] << 48 & 4503599627370495L;
         out[3 + outPos] = (long)in[19 + inPos] >> 4 & 15L | (long)in[20 + inPos] << 4 & 4095L | (long)in[21 + inPos] << 12 & 1048575L | (long)in[22 + inPos] << 20 & 268435455L | (long)in[23 + inPos] << 28 & 68719476735L | (long)in[24 + inPos] << 36 & 17592186044415L | (long)in[25 + inPos] << 44 & 4503599627370495L;
         out[4 + outPos] = (long)in[26 + inPos] & 255L | (long)in[27 + inPos] << 8 & 65535L | (long)in[28 + inPos] << 16 & 16777215L | (long)in[29 + inPos] << 24 & 4294967295L | (long)in[30 + inPos] << 32 & 1099511627775L | (long)in[31 + inPos] << 40 & 281474976710655L | (long)in[32 + inPos] << 48 & 4503599627370495L;
         out[5 + outPos] = (long)in[32 + inPos] >> 4 & 15L | (long)in[33 + inPos] << 4 & 4095L | (long)in[34 + inPos] << 12 & 1048575L | (long)in[35 + inPos] << 20 & 268435455L | (long)in[36 + inPos] << 28 & 68719476735L | (long)in[37 + inPos] << 36 & 17592186044415L | (long)in[38 + inPos] << 44 & 4503599627370495L;
         out[6 + outPos] = (long)in[39 + inPos] & 255L | (long)in[40 + inPos] << 8 & 65535L | (long)in[41 + inPos] << 16 & 16777215L | (long)in[42 + inPos] << 24 & 4294967295L | (long)in[43 + inPos] << 32 & 1099511627775L | (long)in[44 + inPos] << 40 & 281474976710655L | (long)in[45 + inPos] << 48 & 4503599627370495L;
         out[7 + outPos] = (long)in[45 + inPos] >> 4 & 15L | (long)in[46 + inPos] << 4 & 4095L | (long)in[47 + inPos] << 12 & 1048575L | (long)in[48 + inPos] << 20 & 268435455L | (long)in[49 + inPos] << 28 & 68719476735L | (long)in[50 + inPos] << 36 & 17592186044415L | (long)in[51 + inPos] << 44 & 4503599627370495L;
         out[8 + outPos] = (long)in[52 + inPos] & 255L | (long)in[53 + inPos] << 8 & 65535L | (long)in[54 + inPos] << 16 & 16777215L | (long)in[55 + inPos] << 24 & 4294967295L | (long)in[56 + inPos] << 32 & 1099511627775L | (long)in[57 + inPos] << 40 & 281474976710655L | (long)in[58 + inPos] << 48 & 4503599627370495L;
         out[9 + outPos] = (long)in[58 + inPos] >> 4 & 15L | (long)in[59 + inPos] << 4 & 4095L | (long)in[60 + inPos] << 12 & 1048575L | (long)in[61 + inPos] << 20 & 268435455L | (long)in[62 + inPos] << 28 & 68719476735L | (long)in[63 + inPos] << 36 & 17592186044415L | (long)in[64 + inPos] << 44 & 4503599627370495L;
         out[10 + outPos] = (long)in[65 + inPos] & 255L | (long)in[66 + inPos] << 8 & 65535L | (long)in[67 + inPos] << 16 & 16777215L | (long)in[68 + inPos] << 24 & 4294967295L | (long)in[69 + inPos] << 32 & 1099511627775L | (long)in[70 + inPos] << 40 & 281474976710655L | (long)in[71 + inPos] << 48 & 4503599627370495L;
         out[11 + outPos] = (long)in[71 + inPos] >> 4 & 15L | (long)in[72 + inPos] << 4 & 4095L | (long)in[73 + inPos] << 12 & 1048575L | (long)in[74 + inPos] << 20 & 268435455L | (long)in[75 + inPos] << 28 & 68719476735L | (long)in[76 + inPos] << 36 & 17592186044415L | (long)in[77 + inPos] << 44 & 4503599627370495L;
         out[12 + outPos] = (long)in[78 + inPos] & 255L | (long)in[79 + inPos] << 8 & 65535L | (long)in[80 + inPos] << 16 & 16777215L | (long)in[81 + inPos] << 24 & 4294967295L | (long)in[82 + inPos] << 32 & 1099511627775L | (long)in[83 + inPos] << 40 & 281474976710655L | (long)in[84 + inPos] << 48 & 4503599627370495L;
         out[13 + outPos] = (long)in[84 + inPos] >> 4 & 15L | (long)in[85 + inPos] << 4 & 4095L | (long)in[86 + inPos] << 12 & 1048575L | (long)in[87 + inPos] << 20 & 268435455L | (long)in[88 + inPos] << 28 & 68719476735L | (long)in[89 + inPos] << 36 & 17592186044415L | (long)in[90 + inPos] << 44 & 4503599627370495L;
         out[14 + outPos] = (long)in[91 + inPos] & 255L | (long)in[92 + inPos] << 8 & 65535L | (long)in[93 + inPos] << 16 & 16777215L | (long)in[94 + inPos] << 24 & 4294967295L | (long)in[95 + inPos] << 32 & 1099511627775L | (long)in[96 + inPos] << 40 & 281474976710655L | (long)in[97 + inPos] << 48 & 4503599627370495L;
         out[15 + outPos] = (long)in[97 + inPos] >> 4 & 15L | (long)in[98 + inPos] << 4 & 4095L | (long)in[99 + inPos] << 12 & 1048575L | (long)in[100 + inPos] << 20 & 268435455L | (long)in[101 + inPos] << 28 & 68719476735L | (long)in[102 + inPos] << 36 & 17592186044415L | (long)in[103 + inPos] << 44 & 4503599627370495L;
         out[16 + outPos] = (long)in[104 + inPos] & 255L | (long)in[105 + inPos] << 8 & 65535L | (long)in[106 + inPos] << 16 & 16777215L | (long)in[107 + inPos] << 24 & 4294967295L | (long)in[108 + inPos] << 32 & 1099511627775L | (long)in[109 + inPos] << 40 & 281474976710655L | (long)in[110 + inPos] << 48 & 4503599627370495L;
         out[17 + outPos] = (long)in[110 + inPos] >> 4 & 15L | (long)in[111 + inPos] << 4 & 4095L | (long)in[112 + inPos] << 12 & 1048575L | (long)in[113 + inPos] << 20 & 268435455L | (long)in[114 + inPos] << 28 & 68719476735L | (long)in[115 + inPos] << 36 & 17592186044415L | (long)in[116 + inPos] << 44 & 4503599627370495L;
         out[18 + outPos] = (long)in[117 + inPos] & 255L | (long)in[118 + inPos] << 8 & 65535L | (long)in[119 + inPos] << 16 & 16777215L | (long)in[120 + inPos] << 24 & 4294967295L | (long)in[121 + inPos] << 32 & 1099511627775L | (long)in[122 + inPos] << 40 & 281474976710655L | (long)in[123 + inPos] << 48 & 4503599627370495L;
         out[19 + outPos] = (long)in[123 + inPos] >> 4 & 15L | (long)in[124 + inPos] << 4 & 4095L | (long)in[125 + inPos] << 12 & 1048575L | (long)in[126 + inPos] << 20 & 268435455L | (long)in[127 + inPos] << 28 & 68719476735L | (long)in[128 + inPos] << 36 & 17592186044415L | (long)in[129 + inPos] << 44 & 4503599627370495L;
         out[20 + outPos] = (long)in[130 + inPos] & 255L | (long)in[131 + inPos] << 8 & 65535L | (long)in[132 + inPos] << 16 & 16777215L | (long)in[133 + inPos] << 24 & 4294967295L | (long)in[134 + inPos] << 32 & 1099511627775L | (long)in[135 + inPos] << 40 & 281474976710655L | (long)in[136 + inPos] << 48 & 4503599627370495L;
         out[21 + outPos] = (long)in[136 + inPos] >> 4 & 15L | (long)in[137 + inPos] << 4 & 4095L | (long)in[138 + inPos] << 12 & 1048575L | (long)in[139 + inPos] << 20 & 268435455L | (long)in[140 + inPos] << 28 & 68719476735L | (long)in[141 + inPos] << 36 & 17592186044415L | (long)in[142 + inPos] << 44 & 4503599627370495L;
         out[22 + outPos] = (long)in[143 + inPos] & 255L | (long)in[144 + inPos] << 8 & 65535L | (long)in[145 + inPos] << 16 & 16777215L | (long)in[146 + inPos] << 24 & 4294967295L | (long)in[147 + inPos] << 32 & 1099511627775L | (long)in[148 + inPos] << 40 & 281474976710655L | (long)in[149 + inPos] << 48 & 4503599627370495L;
         out[23 + outPos] = (long)in[149 + inPos] >> 4 & 15L | (long)in[150 + inPos] << 4 & 4095L | (long)in[151 + inPos] << 12 & 1048575L | (long)in[152 + inPos] << 20 & 268435455L | (long)in[153 + inPos] << 28 & 68719476735L | (long)in[154 + inPos] << 36 & 17592186044415L | (long)in[155 + inPos] << 44 & 4503599627370495L;
         out[24 + outPos] = (long)in[156 + inPos] & 255L | (long)in[157 + inPos] << 8 & 65535L | (long)in[158 + inPos] << 16 & 16777215L | (long)in[159 + inPos] << 24 & 4294967295L | (long)in[160 + inPos] << 32 & 1099511627775L | (long)in[161 + inPos] << 40 & 281474976710655L | (long)in[162 + inPos] << 48 & 4503599627370495L;
         out[25 + outPos] = (long)in[162 + inPos] >> 4 & 15L | (long)in[163 + inPos] << 4 & 4095L | (long)in[164 + inPos] << 12 & 1048575L | (long)in[165 + inPos] << 20 & 268435455L | (long)in[166 + inPos] << 28 & 68719476735L | (long)in[167 + inPos] << 36 & 17592186044415L | (long)in[168 + inPos] << 44 & 4503599627370495L;
         out[26 + outPos] = (long)in[169 + inPos] & 255L | (long)in[170 + inPos] << 8 & 65535L | (long)in[171 + inPos] << 16 & 16777215L | (long)in[172 + inPos] << 24 & 4294967295L | (long)in[173 + inPos] << 32 & 1099511627775L | (long)in[174 + inPos] << 40 & 281474976710655L | (long)in[175 + inPos] << 48 & 4503599627370495L;
         out[27 + outPos] = (long)in[175 + inPos] >> 4 & 15L | (long)in[176 + inPos] << 4 & 4095L | (long)in[177 + inPos] << 12 & 1048575L | (long)in[178 + inPos] << 20 & 268435455L | (long)in[179 + inPos] << 28 & 68719476735L | (long)in[180 + inPos] << 36 & 17592186044415L | (long)in[181 + inPos] << 44 & 4503599627370495L;
         out[28 + outPos] = (long)in[182 + inPos] & 255L | (long)in[183 + inPos] << 8 & 65535L | (long)in[184 + inPos] << 16 & 16777215L | (long)in[185 + inPos] << 24 & 4294967295L | (long)in[186 + inPos] << 32 & 1099511627775L | (long)in[187 + inPos] << 40 & 281474976710655L | (long)in[188 + inPos] << 48 & 4503599627370495L;
         out[29 + outPos] = (long)in[188 + inPos] >> 4 & 15L | (long)in[189 + inPos] << 4 & 4095L | (long)in[190 + inPos] << 12 & 1048575L | (long)in[191 + inPos] << 20 & 268435455L | (long)in[192 + inPos] << 28 & 68719476735L | (long)in[193 + inPos] << 36 & 17592186044415L | (long)in[194 + inPos] << 44 & 4503599627370495L;
         out[30 + outPos] = (long)in[195 + inPos] & 255L | (long)in[196 + inPos] << 8 & 65535L | (long)in[197 + inPos] << 16 & 16777215L | (long)in[198 + inPos] << 24 & 4294967295L | (long)in[199 + inPos] << 32 & 1099511627775L | (long)in[200 + inPos] << 40 & 281474976710655L | (long)in[201 + inPos] << 48 & 4503599627370495L;
         out[31 + outPos] = (long)in[201 + inPos] >> 4 & 15L | (long)in[202 + inPos] << 4 & 4095L | (long)in[203 + inPos] << 12 & 1048575L | (long)in[204 + inPos] << 20 & 268435455L | (long)in[205 + inPos] << 28 & 68719476735L | (long)in[206 + inPos] << 36 & 17592186044415L | (long)in[207 + inPos] << 44 & 4503599627370495L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 4503599627370495L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 4 & 15L | (long)in.get(7 + inPos) << 4 & 4095L | (long)in.get(8 + inPos) << 12 & 1048575L | (long)in.get(9 + inPos) << 20 & 268435455L | (long)in.get(10 + inPos) << 28 & 68719476735L | (long)in.get(11 + inPos) << 36 & 17592186044415L | (long)in.get(12 + inPos) << 44 & 4503599627370495L;
         out[2 + outPos] = (long)in.get(13 + inPos) & 255L | (long)in.get(14 + inPos) << 8 & 65535L | (long)in.get(15 + inPos) << 16 & 16777215L | (long)in.get(16 + inPos) << 24 & 4294967295L | (long)in.get(17 + inPos) << 32 & 1099511627775L | (long)in.get(18 + inPos) << 40 & 281474976710655L | (long)in.get(19 + inPos) << 48 & 4503599627370495L;
         out[3 + outPos] = (long)in.get(19 + inPos) >> 4 & 15L | (long)in.get(20 + inPos) << 4 & 4095L | (long)in.get(21 + inPos) << 12 & 1048575L | (long)in.get(22 + inPos) << 20 & 268435455L | (long)in.get(23 + inPos) << 28 & 68719476735L | (long)in.get(24 + inPos) << 36 & 17592186044415L | (long)in.get(25 + inPos) << 44 & 4503599627370495L;
         out[4 + outPos] = (long)in.get(26 + inPos) & 255L | (long)in.get(27 + inPos) << 8 & 65535L | (long)in.get(28 + inPos) << 16 & 16777215L | (long)in.get(29 + inPos) << 24 & 4294967295L | (long)in.get(30 + inPos) << 32 & 1099511627775L | (long)in.get(31 + inPos) << 40 & 281474976710655L | (long)in.get(32 + inPos) << 48 & 4503599627370495L;
         out[5 + outPos] = (long)in.get(32 + inPos) >> 4 & 15L | (long)in.get(33 + inPos) << 4 & 4095L | (long)in.get(34 + inPos) << 12 & 1048575L | (long)in.get(35 + inPos) << 20 & 268435455L | (long)in.get(36 + inPos) << 28 & 68719476735L | (long)in.get(37 + inPos) << 36 & 17592186044415L | (long)in.get(38 + inPos) << 44 & 4503599627370495L;
         out[6 + outPos] = (long)in.get(39 + inPos) & 255L | (long)in.get(40 + inPos) << 8 & 65535L | (long)in.get(41 + inPos) << 16 & 16777215L | (long)in.get(42 + inPos) << 24 & 4294967295L | (long)in.get(43 + inPos) << 32 & 1099511627775L | (long)in.get(44 + inPos) << 40 & 281474976710655L | (long)in.get(45 + inPos) << 48 & 4503599627370495L;
         out[7 + outPos] = (long)in.get(45 + inPos) >> 4 & 15L | (long)in.get(46 + inPos) << 4 & 4095L | (long)in.get(47 + inPos) << 12 & 1048575L | (long)in.get(48 + inPos) << 20 & 268435455L | (long)in.get(49 + inPos) << 28 & 68719476735L | (long)in.get(50 + inPos) << 36 & 17592186044415L | (long)in.get(51 + inPos) << 44 & 4503599627370495L;
         out[8 + outPos] = (long)in.get(52 + inPos) & 255L | (long)in.get(53 + inPos) << 8 & 65535L | (long)in.get(54 + inPos) << 16 & 16777215L | (long)in.get(55 + inPos) << 24 & 4294967295L | (long)in.get(56 + inPos) << 32 & 1099511627775L | (long)in.get(57 + inPos) << 40 & 281474976710655L | (long)in.get(58 + inPos) << 48 & 4503599627370495L;
         out[9 + outPos] = (long)in.get(58 + inPos) >> 4 & 15L | (long)in.get(59 + inPos) << 4 & 4095L | (long)in.get(60 + inPos) << 12 & 1048575L | (long)in.get(61 + inPos) << 20 & 268435455L | (long)in.get(62 + inPos) << 28 & 68719476735L | (long)in.get(63 + inPos) << 36 & 17592186044415L | (long)in.get(64 + inPos) << 44 & 4503599627370495L;
         out[10 + outPos] = (long)in.get(65 + inPos) & 255L | (long)in.get(66 + inPos) << 8 & 65535L | (long)in.get(67 + inPos) << 16 & 16777215L | (long)in.get(68 + inPos) << 24 & 4294967295L | (long)in.get(69 + inPos) << 32 & 1099511627775L | (long)in.get(70 + inPos) << 40 & 281474976710655L | (long)in.get(71 + inPos) << 48 & 4503599627370495L;
         out[11 + outPos] = (long)in.get(71 + inPos) >> 4 & 15L | (long)in.get(72 + inPos) << 4 & 4095L | (long)in.get(73 + inPos) << 12 & 1048575L | (long)in.get(74 + inPos) << 20 & 268435455L | (long)in.get(75 + inPos) << 28 & 68719476735L | (long)in.get(76 + inPos) << 36 & 17592186044415L | (long)in.get(77 + inPos) << 44 & 4503599627370495L;
         out[12 + outPos] = (long)in.get(78 + inPos) & 255L | (long)in.get(79 + inPos) << 8 & 65535L | (long)in.get(80 + inPos) << 16 & 16777215L | (long)in.get(81 + inPos) << 24 & 4294967295L | (long)in.get(82 + inPos) << 32 & 1099511627775L | (long)in.get(83 + inPos) << 40 & 281474976710655L | (long)in.get(84 + inPos) << 48 & 4503599627370495L;
         out[13 + outPos] = (long)in.get(84 + inPos) >> 4 & 15L | (long)in.get(85 + inPos) << 4 & 4095L | (long)in.get(86 + inPos) << 12 & 1048575L | (long)in.get(87 + inPos) << 20 & 268435455L | (long)in.get(88 + inPos) << 28 & 68719476735L | (long)in.get(89 + inPos) << 36 & 17592186044415L | (long)in.get(90 + inPos) << 44 & 4503599627370495L;
         out[14 + outPos] = (long)in.get(91 + inPos) & 255L | (long)in.get(92 + inPos) << 8 & 65535L | (long)in.get(93 + inPos) << 16 & 16777215L | (long)in.get(94 + inPos) << 24 & 4294967295L | (long)in.get(95 + inPos) << 32 & 1099511627775L | (long)in.get(96 + inPos) << 40 & 281474976710655L | (long)in.get(97 + inPos) << 48 & 4503599627370495L;
         out[15 + outPos] = (long)in.get(97 + inPos) >> 4 & 15L | (long)in.get(98 + inPos) << 4 & 4095L | (long)in.get(99 + inPos) << 12 & 1048575L | (long)in.get(100 + inPos) << 20 & 268435455L | (long)in.get(101 + inPos) << 28 & 68719476735L | (long)in.get(102 + inPos) << 36 & 17592186044415L | (long)in.get(103 + inPos) << 44 & 4503599627370495L;
         out[16 + outPos] = (long)in.get(104 + inPos) & 255L | (long)in.get(105 + inPos) << 8 & 65535L | (long)in.get(106 + inPos) << 16 & 16777215L | (long)in.get(107 + inPos) << 24 & 4294967295L | (long)in.get(108 + inPos) << 32 & 1099511627775L | (long)in.get(109 + inPos) << 40 & 281474976710655L | (long)in.get(110 + inPos) << 48 & 4503599627370495L;
         out[17 + outPos] = (long)in.get(110 + inPos) >> 4 & 15L | (long)in.get(111 + inPos) << 4 & 4095L | (long)in.get(112 + inPos) << 12 & 1048575L | (long)in.get(113 + inPos) << 20 & 268435455L | (long)in.get(114 + inPos) << 28 & 68719476735L | (long)in.get(115 + inPos) << 36 & 17592186044415L | (long)in.get(116 + inPos) << 44 & 4503599627370495L;
         out[18 + outPos] = (long)in.get(117 + inPos) & 255L | (long)in.get(118 + inPos) << 8 & 65535L | (long)in.get(119 + inPos) << 16 & 16777215L | (long)in.get(120 + inPos) << 24 & 4294967295L | (long)in.get(121 + inPos) << 32 & 1099511627775L | (long)in.get(122 + inPos) << 40 & 281474976710655L | (long)in.get(123 + inPos) << 48 & 4503599627370495L;
         out[19 + outPos] = (long)in.get(123 + inPos) >> 4 & 15L | (long)in.get(124 + inPos) << 4 & 4095L | (long)in.get(125 + inPos) << 12 & 1048575L | (long)in.get(126 + inPos) << 20 & 268435455L | (long)in.get(127 + inPos) << 28 & 68719476735L | (long)in.get(128 + inPos) << 36 & 17592186044415L | (long)in.get(129 + inPos) << 44 & 4503599627370495L;
         out[20 + outPos] = (long)in.get(130 + inPos) & 255L | (long)in.get(131 + inPos) << 8 & 65535L | (long)in.get(132 + inPos) << 16 & 16777215L | (long)in.get(133 + inPos) << 24 & 4294967295L | (long)in.get(134 + inPos) << 32 & 1099511627775L | (long)in.get(135 + inPos) << 40 & 281474976710655L | (long)in.get(136 + inPos) << 48 & 4503599627370495L;
         out[21 + outPos] = (long)in.get(136 + inPos) >> 4 & 15L | (long)in.get(137 + inPos) << 4 & 4095L | (long)in.get(138 + inPos) << 12 & 1048575L | (long)in.get(139 + inPos) << 20 & 268435455L | (long)in.get(140 + inPos) << 28 & 68719476735L | (long)in.get(141 + inPos) << 36 & 17592186044415L | (long)in.get(142 + inPos) << 44 & 4503599627370495L;
         out[22 + outPos] = (long)in.get(143 + inPos) & 255L | (long)in.get(144 + inPos) << 8 & 65535L | (long)in.get(145 + inPos) << 16 & 16777215L | (long)in.get(146 + inPos) << 24 & 4294967295L | (long)in.get(147 + inPos) << 32 & 1099511627775L | (long)in.get(148 + inPos) << 40 & 281474976710655L | (long)in.get(149 + inPos) << 48 & 4503599627370495L;
         out[23 + outPos] = (long)in.get(149 + inPos) >> 4 & 15L | (long)in.get(150 + inPos) << 4 & 4095L | (long)in.get(151 + inPos) << 12 & 1048575L | (long)in.get(152 + inPos) << 20 & 268435455L | (long)in.get(153 + inPos) << 28 & 68719476735L | (long)in.get(154 + inPos) << 36 & 17592186044415L | (long)in.get(155 + inPos) << 44 & 4503599627370495L;
         out[24 + outPos] = (long)in.get(156 + inPos) & 255L | (long)in.get(157 + inPos) << 8 & 65535L | (long)in.get(158 + inPos) << 16 & 16777215L | (long)in.get(159 + inPos) << 24 & 4294967295L | (long)in.get(160 + inPos) << 32 & 1099511627775L | (long)in.get(161 + inPos) << 40 & 281474976710655L | (long)in.get(162 + inPos) << 48 & 4503599627370495L;
         out[25 + outPos] = (long)in.get(162 + inPos) >> 4 & 15L | (long)in.get(163 + inPos) << 4 & 4095L | (long)in.get(164 + inPos) << 12 & 1048575L | (long)in.get(165 + inPos) << 20 & 268435455L | (long)in.get(166 + inPos) << 28 & 68719476735L | (long)in.get(167 + inPos) << 36 & 17592186044415L | (long)in.get(168 + inPos) << 44 & 4503599627370495L;
         out[26 + outPos] = (long)in.get(169 + inPos) & 255L | (long)in.get(170 + inPos) << 8 & 65535L | (long)in.get(171 + inPos) << 16 & 16777215L | (long)in.get(172 + inPos) << 24 & 4294967295L | (long)in.get(173 + inPos) << 32 & 1099511627775L | (long)in.get(174 + inPos) << 40 & 281474976710655L | (long)in.get(175 + inPos) << 48 & 4503599627370495L;
         out[27 + outPos] = (long)in.get(175 + inPos) >> 4 & 15L | (long)in.get(176 + inPos) << 4 & 4095L | (long)in.get(177 + inPos) << 12 & 1048575L | (long)in.get(178 + inPos) << 20 & 268435455L | (long)in.get(179 + inPos) << 28 & 68719476735L | (long)in.get(180 + inPos) << 36 & 17592186044415L | (long)in.get(181 + inPos) << 44 & 4503599627370495L;
         out[28 + outPos] = (long)in.get(182 + inPos) & 255L | (long)in.get(183 + inPos) << 8 & 65535L | (long)in.get(184 + inPos) << 16 & 16777215L | (long)in.get(185 + inPos) << 24 & 4294967295L | (long)in.get(186 + inPos) << 32 & 1099511627775L | (long)in.get(187 + inPos) << 40 & 281474976710655L | (long)in.get(188 + inPos) << 48 & 4503599627370495L;
         out[29 + outPos] = (long)in.get(188 + inPos) >> 4 & 15L | (long)in.get(189 + inPos) << 4 & 4095L | (long)in.get(190 + inPos) << 12 & 1048575L | (long)in.get(191 + inPos) << 20 & 268435455L | (long)in.get(192 + inPos) << 28 & 68719476735L | (long)in.get(193 + inPos) << 36 & 17592186044415L | (long)in.get(194 + inPos) << 44 & 4503599627370495L;
         out[30 + outPos] = (long)in.get(195 + inPos) & 255L | (long)in.get(196 + inPos) << 8 & 65535L | (long)in.get(197 + inPos) << 16 & 16777215L | (long)in.get(198 + inPos) << 24 & 4294967295L | (long)in.get(199 + inPos) << 32 & 1099511627775L | (long)in.get(200 + inPos) << 40 & 281474976710655L | (long)in.get(201 + inPos) << 48 & 4503599627370495L;
         out[31 + outPos] = (long)in.get(201 + inPos) >> 4 & 15L | (long)in.get(202 + inPos) << 4 & 4095L | (long)in.get(203 + inPos) << 12 & 1048575L | (long)in.get(204 + inPos) << 20 & 268435455L | (long)in.get(205 + inPos) << 28 & 68719476735L | (long)in.get(206 + inPos) << 36 & 17592186044415L | (long)in.get(207 + inPos) << 44 & 4503599627370495L;
      }
   }

   private static final class Packer53 extends BytePackerForLong {
      private Packer53() {
         super(53);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 9007199254740991L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 9007199254740991L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 9007199254740991L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 9007199254740991L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 9007199254740991L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 9007199254740991L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 9007199254740991L) >>> 48 | (in[1 + inPos] & 9007199254740991L) << 5) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 9007199254740991L) >>> 3 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 9007199254740991L) >>> 11 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 9007199254740991L) >>> 19 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 9007199254740991L) >>> 27 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 9007199254740991L) >>> 35 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 9007199254740991L) >>> 43 & 255L));
         out[13 + outPos] = (byte)((int)(((in[1 + inPos] & 9007199254740991L) >>> 51 | (in[2 + inPos] & 9007199254740991L) << 2) & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 9007199254740991L) >>> 6 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 9007199254740991L) >>> 14 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 9007199254740991L) >>> 22 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 9007199254740991L) >>> 30 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 9007199254740991L) >>> 38 & 255L));
         out[19 + outPos] = (byte)((int)(((in[2 + inPos] & 9007199254740991L) >>> 46 | (in[3 + inPos] & 9007199254740991L) << 7) & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 9007199254740991L) >>> 1 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 9007199254740991L) >>> 9 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 9007199254740991L) >>> 17 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 9007199254740991L) >>> 25 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 9007199254740991L) >>> 33 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 9007199254740991L) >>> 41 & 255L));
         out[26 + outPos] = (byte)((int)(((in[3 + inPos] & 9007199254740991L) >>> 49 | (in[4 + inPos] & 9007199254740991L) << 4) & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 9007199254740991L) >>> 4 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 9007199254740991L) >>> 12 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 9007199254740991L) >>> 20 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 9007199254740991L) >>> 28 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 9007199254740991L) >>> 36 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 9007199254740991L) >>> 44 & 255L));
         out[33 + outPos] = (byte)((int)(((in[4 + inPos] & 9007199254740991L) >>> 52 | (in[5 + inPos] & 9007199254740991L) << 1) & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 9007199254740991L) >>> 7 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 9007199254740991L) >>> 15 & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 9007199254740991L) >>> 23 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 9007199254740991L) >>> 31 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 9007199254740991L) >>> 39 & 255L));
         out[39 + outPos] = (byte)((int)(((in[5 + inPos] & 9007199254740991L) >>> 47 | (in[6 + inPos] & 9007199254740991L) << 6) & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 9007199254740991L) >>> 2 & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 9007199254740991L) >>> 10 & 255L));
         out[42 + outPos] = (byte)((int)((in[6 + inPos] & 9007199254740991L) >>> 18 & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 9007199254740991L) >>> 26 & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 9007199254740991L) >>> 34 & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 9007199254740991L) >>> 42 & 255L));
         out[46 + outPos] = (byte)((int)(((in[6 + inPos] & 9007199254740991L) >>> 50 | (in[7 + inPos] & 9007199254740991L) << 3) & 255L));
         out[47 + outPos] = (byte)((int)((in[7 + inPos] & 9007199254740991L) >>> 5 & 255L));
         out[48 + outPos] = (byte)((int)((in[7 + inPos] & 9007199254740991L) >>> 13 & 255L));
         out[49 + outPos] = (byte)((int)((in[7 + inPos] & 9007199254740991L) >>> 21 & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 9007199254740991L) >>> 29 & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 9007199254740991L) >>> 37 & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 9007199254740991L) >>> 45 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 9007199254740991L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 9007199254740991L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 9007199254740991L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 9007199254740991L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 9007199254740991L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 9007199254740991L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 9007199254740991L) >>> 48 | (in[1 + inPos] & 9007199254740991L) << 5) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 9007199254740991L) >>> 3 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 9007199254740991L) >>> 11 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 9007199254740991L) >>> 19 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 9007199254740991L) >>> 27 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 9007199254740991L) >>> 35 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 9007199254740991L) >>> 43 & 255L));
         out[13 + outPos] = (byte)((int)(((in[1 + inPos] & 9007199254740991L) >>> 51 | (in[2 + inPos] & 9007199254740991L) << 2) & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 9007199254740991L) >>> 6 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 9007199254740991L) >>> 14 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 9007199254740991L) >>> 22 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 9007199254740991L) >>> 30 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 9007199254740991L) >>> 38 & 255L));
         out[19 + outPos] = (byte)((int)(((in[2 + inPos] & 9007199254740991L) >>> 46 | (in[3 + inPos] & 9007199254740991L) << 7) & 255L));
         out[20 + outPos] = (byte)((int)((in[3 + inPos] & 9007199254740991L) >>> 1 & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 9007199254740991L) >>> 9 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 9007199254740991L) >>> 17 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 9007199254740991L) >>> 25 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 9007199254740991L) >>> 33 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 9007199254740991L) >>> 41 & 255L));
         out[26 + outPos] = (byte)((int)(((in[3 + inPos] & 9007199254740991L) >>> 49 | (in[4 + inPos] & 9007199254740991L) << 4) & 255L));
         out[27 + outPos] = (byte)((int)((in[4 + inPos] & 9007199254740991L) >>> 4 & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 9007199254740991L) >>> 12 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 9007199254740991L) >>> 20 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 9007199254740991L) >>> 28 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 9007199254740991L) >>> 36 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 9007199254740991L) >>> 44 & 255L));
         out[33 + outPos] = (byte)((int)(((in[4 + inPos] & 9007199254740991L) >>> 52 | (in[5 + inPos] & 9007199254740991L) << 1) & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 9007199254740991L) >>> 7 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 9007199254740991L) >>> 15 & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 9007199254740991L) >>> 23 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 9007199254740991L) >>> 31 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 9007199254740991L) >>> 39 & 255L));
         out[39 + outPos] = (byte)((int)(((in[5 + inPos] & 9007199254740991L) >>> 47 | (in[6 + inPos] & 9007199254740991L) << 6) & 255L));
         out[40 + outPos] = (byte)((int)((in[6 + inPos] & 9007199254740991L) >>> 2 & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 9007199254740991L) >>> 10 & 255L));
         out[42 + outPos] = (byte)((int)((in[6 + inPos] & 9007199254740991L) >>> 18 & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 9007199254740991L) >>> 26 & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 9007199254740991L) >>> 34 & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 9007199254740991L) >>> 42 & 255L));
         out[46 + outPos] = (byte)((int)(((in[6 + inPos] & 9007199254740991L) >>> 50 | (in[7 + inPos] & 9007199254740991L) << 3) & 255L));
         out[47 + outPos] = (byte)((int)((in[7 + inPos] & 9007199254740991L) >>> 5 & 255L));
         out[48 + outPos] = (byte)((int)((in[7 + inPos] & 9007199254740991L) >>> 13 & 255L));
         out[49 + outPos] = (byte)((int)((in[7 + inPos] & 9007199254740991L) >>> 21 & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 9007199254740991L) >>> 29 & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 9007199254740991L) >>> 37 & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 9007199254740991L) >>> 45 & 255L));
         out[53 + outPos] = (byte)((int)(in[8 + inPos] & 9007199254740991L & 255L));
         out[54 + outPos] = (byte)((int)((in[8 + inPos] & 9007199254740991L) >>> 8 & 255L));
         out[55 + outPos] = (byte)((int)((in[8 + inPos] & 9007199254740991L) >>> 16 & 255L));
         out[56 + outPos] = (byte)((int)((in[8 + inPos] & 9007199254740991L) >>> 24 & 255L));
         out[57 + outPos] = (byte)((int)((in[8 + inPos] & 9007199254740991L) >>> 32 & 255L));
         out[58 + outPos] = (byte)((int)((in[8 + inPos] & 9007199254740991L) >>> 40 & 255L));
         out[59 + outPos] = (byte)((int)(((in[8 + inPos] & 9007199254740991L) >>> 48 | (in[9 + inPos] & 9007199254740991L) << 5) & 255L));
         out[60 + outPos] = (byte)((int)((in[9 + inPos] & 9007199254740991L) >>> 3 & 255L));
         out[61 + outPos] = (byte)((int)((in[9 + inPos] & 9007199254740991L) >>> 11 & 255L));
         out[62 + outPos] = (byte)((int)((in[9 + inPos] & 9007199254740991L) >>> 19 & 255L));
         out[63 + outPos] = (byte)((int)((in[9 + inPos] & 9007199254740991L) >>> 27 & 255L));
         out[64 + outPos] = (byte)((int)((in[9 + inPos] & 9007199254740991L) >>> 35 & 255L));
         out[65 + outPos] = (byte)((int)((in[9 + inPos] & 9007199254740991L) >>> 43 & 255L));
         out[66 + outPos] = (byte)((int)(((in[9 + inPos] & 9007199254740991L) >>> 51 | (in[10 + inPos] & 9007199254740991L) << 2) & 255L));
         out[67 + outPos] = (byte)((int)((in[10 + inPos] & 9007199254740991L) >>> 6 & 255L));
         out[68 + outPos] = (byte)((int)((in[10 + inPos] & 9007199254740991L) >>> 14 & 255L));
         out[69 + outPos] = (byte)((int)((in[10 + inPos] & 9007199254740991L) >>> 22 & 255L));
         out[70 + outPos] = (byte)((int)((in[10 + inPos] & 9007199254740991L) >>> 30 & 255L));
         out[71 + outPos] = (byte)((int)((in[10 + inPos] & 9007199254740991L) >>> 38 & 255L));
         out[72 + outPos] = (byte)((int)(((in[10 + inPos] & 9007199254740991L) >>> 46 | (in[11 + inPos] & 9007199254740991L) << 7) & 255L));
         out[73 + outPos] = (byte)((int)((in[11 + inPos] & 9007199254740991L) >>> 1 & 255L));
         out[74 + outPos] = (byte)((int)((in[11 + inPos] & 9007199254740991L) >>> 9 & 255L));
         out[75 + outPos] = (byte)((int)((in[11 + inPos] & 9007199254740991L) >>> 17 & 255L));
         out[76 + outPos] = (byte)((int)((in[11 + inPos] & 9007199254740991L) >>> 25 & 255L));
         out[77 + outPos] = (byte)((int)((in[11 + inPos] & 9007199254740991L) >>> 33 & 255L));
         out[78 + outPos] = (byte)((int)((in[11 + inPos] & 9007199254740991L) >>> 41 & 255L));
         out[79 + outPos] = (byte)((int)(((in[11 + inPos] & 9007199254740991L) >>> 49 | (in[12 + inPos] & 9007199254740991L) << 4) & 255L));
         out[80 + outPos] = (byte)((int)((in[12 + inPos] & 9007199254740991L) >>> 4 & 255L));
         out[81 + outPos] = (byte)((int)((in[12 + inPos] & 9007199254740991L) >>> 12 & 255L));
         out[82 + outPos] = (byte)((int)((in[12 + inPos] & 9007199254740991L) >>> 20 & 255L));
         out[83 + outPos] = (byte)((int)((in[12 + inPos] & 9007199254740991L) >>> 28 & 255L));
         out[84 + outPos] = (byte)((int)((in[12 + inPos] & 9007199254740991L) >>> 36 & 255L));
         out[85 + outPos] = (byte)((int)((in[12 + inPos] & 9007199254740991L) >>> 44 & 255L));
         out[86 + outPos] = (byte)((int)(((in[12 + inPos] & 9007199254740991L) >>> 52 | (in[13 + inPos] & 9007199254740991L) << 1) & 255L));
         out[87 + outPos] = (byte)((int)((in[13 + inPos] & 9007199254740991L) >>> 7 & 255L));
         out[88 + outPos] = (byte)((int)((in[13 + inPos] & 9007199254740991L) >>> 15 & 255L));
         out[89 + outPos] = (byte)((int)((in[13 + inPos] & 9007199254740991L) >>> 23 & 255L));
         out[90 + outPos] = (byte)((int)((in[13 + inPos] & 9007199254740991L) >>> 31 & 255L));
         out[91 + outPos] = (byte)((int)((in[13 + inPos] & 9007199254740991L) >>> 39 & 255L));
         out[92 + outPos] = (byte)((int)(((in[13 + inPos] & 9007199254740991L) >>> 47 | (in[14 + inPos] & 9007199254740991L) << 6) & 255L));
         out[93 + outPos] = (byte)((int)((in[14 + inPos] & 9007199254740991L) >>> 2 & 255L));
         out[94 + outPos] = (byte)((int)((in[14 + inPos] & 9007199254740991L) >>> 10 & 255L));
         out[95 + outPos] = (byte)((int)((in[14 + inPos] & 9007199254740991L) >>> 18 & 255L));
         out[96 + outPos] = (byte)((int)((in[14 + inPos] & 9007199254740991L) >>> 26 & 255L));
         out[97 + outPos] = (byte)((int)((in[14 + inPos] & 9007199254740991L) >>> 34 & 255L));
         out[98 + outPos] = (byte)((int)((in[14 + inPos] & 9007199254740991L) >>> 42 & 255L));
         out[99 + outPos] = (byte)((int)(((in[14 + inPos] & 9007199254740991L) >>> 50 | (in[15 + inPos] & 9007199254740991L) << 3) & 255L));
         out[100 + outPos] = (byte)((int)((in[15 + inPos] & 9007199254740991L) >>> 5 & 255L));
         out[101 + outPos] = (byte)((int)((in[15 + inPos] & 9007199254740991L) >>> 13 & 255L));
         out[102 + outPos] = (byte)((int)((in[15 + inPos] & 9007199254740991L) >>> 21 & 255L));
         out[103 + outPos] = (byte)((int)((in[15 + inPos] & 9007199254740991L) >>> 29 & 255L));
         out[104 + outPos] = (byte)((int)((in[15 + inPos] & 9007199254740991L) >>> 37 & 255L));
         out[105 + outPos] = (byte)((int)((in[15 + inPos] & 9007199254740991L) >>> 45 & 255L));
         out[106 + outPos] = (byte)((int)(in[16 + inPos] & 9007199254740991L & 255L));
         out[107 + outPos] = (byte)((int)((in[16 + inPos] & 9007199254740991L) >>> 8 & 255L));
         out[108 + outPos] = (byte)((int)((in[16 + inPos] & 9007199254740991L) >>> 16 & 255L));
         out[109 + outPos] = (byte)((int)((in[16 + inPos] & 9007199254740991L) >>> 24 & 255L));
         out[110 + outPos] = (byte)((int)((in[16 + inPos] & 9007199254740991L) >>> 32 & 255L));
         out[111 + outPos] = (byte)((int)((in[16 + inPos] & 9007199254740991L) >>> 40 & 255L));
         out[112 + outPos] = (byte)((int)(((in[16 + inPos] & 9007199254740991L) >>> 48 | (in[17 + inPos] & 9007199254740991L) << 5) & 255L));
         out[113 + outPos] = (byte)((int)((in[17 + inPos] & 9007199254740991L) >>> 3 & 255L));
         out[114 + outPos] = (byte)((int)((in[17 + inPos] & 9007199254740991L) >>> 11 & 255L));
         out[115 + outPos] = (byte)((int)((in[17 + inPos] & 9007199254740991L) >>> 19 & 255L));
         out[116 + outPos] = (byte)((int)((in[17 + inPos] & 9007199254740991L) >>> 27 & 255L));
         out[117 + outPos] = (byte)((int)((in[17 + inPos] & 9007199254740991L) >>> 35 & 255L));
         out[118 + outPos] = (byte)((int)((in[17 + inPos] & 9007199254740991L) >>> 43 & 255L));
         out[119 + outPos] = (byte)((int)(((in[17 + inPos] & 9007199254740991L) >>> 51 | (in[18 + inPos] & 9007199254740991L) << 2) & 255L));
         out[120 + outPos] = (byte)((int)((in[18 + inPos] & 9007199254740991L) >>> 6 & 255L));
         out[121 + outPos] = (byte)((int)((in[18 + inPos] & 9007199254740991L) >>> 14 & 255L));
         out[122 + outPos] = (byte)((int)((in[18 + inPos] & 9007199254740991L) >>> 22 & 255L));
         out[123 + outPos] = (byte)((int)((in[18 + inPos] & 9007199254740991L) >>> 30 & 255L));
         out[124 + outPos] = (byte)((int)((in[18 + inPos] & 9007199254740991L) >>> 38 & 255L));
         out[125 + outPos] = (byte)((int)(((in[18 + inPos] & 9007199254740991L) >>> 46 | (in[19 + inPos] & 9007199254740991L) << 7) & 255L));
         out[126 + outPos] = (byte)((int)((in[19 + inPos] & 9007199254740991L) >>> 1 & 255L));
         out[127 + outPos] = (byte)((int)((in[19 + inPos] & 9007199254740991L) >>> 9 & 255L));
         out[128 + outPos] = (byte)((int)((in[19 + inPos] & 9007199254740991L) >>> 17 & 255L));
         out[129 + outPos] = (byte)((int)((in[19 + inPos] & 9007199254740991L) >>> 25 & 255L));
         out[130 + outPos] = (byte)((int)((in[19 + inPos] & 9007199254740991L) >>> 33 & 255L));
         out[131 + outPos] = (byte)((int)((in[19 + inPos] & 9007199254740991L) >>> 41 & 255L));
         out[132 + outPos] = (byte)((int)(((in[19 + inPos] & 9007199254740991L) >>> 49 | (in[20 + inPos] & 9007199254740991L) << 4) & 255L));
         out[133 + outPos] = (byte)((int)((in[20 + inPos] & 9007199254740991L) >>> 4 & 255L));
         out[134 + outPos] = (byte)((int)((in[20 + inPos] & 9007199254740991L) >>> 12 & 255L));
         out[135 + outPos] = (byte)((int)((in[20 + inPos] & 9007199254740991L) >>> 20 & 255L));
         out[136 + outPos] = (byte)((int)((in[20 + inPos] & 9007199254740991L) >>> 28 & 255L));
         out[137 + outPos] = (byte)((int)((in[20 + inPos] & 9007199254740991L) >>> 36 & 255L));
         out[138 + outPos] = (byte)((int)((in[20 + inPos] & 9007199254740991L) >>> 44 & 255L));
         out[139 + outPos] = (byte)((int)(((in[20 + inPos] & 9007199254740991L) >>> 52 | (in[21 + inPos] & 9007199254740991L) << 1) & 255L));
         out[140 + outPos] = (byte)((int)((in[21 + inPos] & 9007199254740991L) >>> 7 & 255L));
         out[141 + outPos] = (byte)((int)((in[21 + inPos] & 9007199254740991L) >>> 15 & 255L));
         out[142 + outPos] = (byte)((int)((in[21 + inPos] & 9007199254740991L) >>> 23 & 255L));
         out[143 + outPos] = (byte)((int)((in[21 + inPos] & 9007199254740991L) >>> 31 & 255L));
         out[144 + outPos] = (byte)((int)((in[21 + inPos] & 9007199254740991L) >>> 39 & 255L));
         out[145 + outPos] = (byte)((int)(((in[21 + inPos] & 9007199254740991L) >>> 47 | (in[22 + inPos] & 9007199254740991L) << 6) & 255L));
         out[146 + outPos] = (byte)((int)((in[22 + inPos] & 9007199254740991L) >>> 2 & 255L));
         out[147 + outPos] = (byte)((int)((in[22 + inPos] & 9007199254740991L) >>> 10 & 255L));
         out[148 + outPos] = (byte)((int)((in[22 + inPos] & 9007199254740991L) >>> 18 & 255L));
         out[149 + outPos] = (byte)((int)((in[22 + inPos] & 9007199254740991L) >>> 26 & 255L));
         out[150 + outPos] = (byte)((int)((in[22 + inPos] & 9007199254740991L) >>> 34 & 255L));
         out[151 + outPos] = (byte)((int)((in[22 + inPos] & 9007199254740991L) >>> 42 & 255L));
         out[152 + outPos] = (byte)((int)(((in[22 + inPos] & 9007199254740991L) >>> 50 | (in[23 + inPos] & 9007199254740991L) << 3) & 255L));
         out[153 + outPos] = (byte)((int)((in[23 + inPos] & 9007199254740991L) >>> 5 & 255L));
         out[154 + outPos] = (byte)((int)((in[23 + inPos] & 9007199254740991L) >>> 13 & 255L));
         out[155 + outPos] = (byte)((int)((in[23 + inPos] & 9007199254740991L) >>> 21 & 255L));
         out[156 + outPos] = (byte)((int)((in[23 + inPos] & 9007199254740991L) >>> 29 & 255L));
         out[157 + outPos] = (byte)((int)((in[23 + inPos] & 9007199254740991L) >>> 37 & 255L));
         out[158 + outPos] = (byte)((int)((in[23 + inPos] & 9007199254740991L) >>> 45 & 255L));
         out[159 + outPos] = (byte)((int)(in[24 + inPos] & 9007199254740991L & 255L));
         out[160 + outPos] = (byte)((int)((in[24 + inPos] & 9007199254740991L) >>> 8 & 255L));
         out[161 + outPos] = (byte)((int)((in[24 + inPos] & 9007199254740991L) >>> 16 & 255L));
         out[162 + outPos] = (byte)((int)((in[24 + inPos] & 9007199254740991L) >>> 24 & 255L));
         out[163 + outPos] = (byte)((int)((in[24 + inPos] & 9007199254740991L) >>> 32 & 255L));
         out[164 + outPos] = (byte)((int)((in[24 + inPos] & 9007199254740991L) >>> 40 & 255L));
         out[165 + outPos] = (byte)((int)(((in[24 + inPos] & 9007199254740991L) >>> 48 | (in[25 + inPos] & 9007199254740991L) << 5) & 255L));
         out[166 + outPos] = (byte)((int)((in[25 + inPos] & 9007199254740991L) >>> 3 & 255L));
         out[167 + outPos] = (byte)((int)((in[25 + inPos] & 9007199254740991L) >>> 11 & 255L));
         out[168 + outPos] = (byte)((int)((in[25 + inPos] & 9007199254740991L) >>> 19 & 255L));
         out[169 + outPos] = (byte)((int)((in[25 + inPos] & 9007199254740991L) >>> 27 & 255L));
         out[170 + outPos] = (byte)((int)((in[25 + inPos] & 9007199254740991L) >>> 35 & 255L));
         out[171 + outPos] = (byte)((int)((in[25 + inPos] & 9007199254740991L) >>> 43 & 255L));
         out[172 + outPos] = (byte)((int)(((in[25 + inPos] & 9007199254740991L) >>> 51 | (in[26 + inPos] & 9007199254740991L) << 2) & 255L));
         out[173 + outPos] = (byte)((int)((in[26 + inPos] & 9007199254740991L) >>> 6 & 255L));
         out[174 + outPos] = (byte)((int)((in[26 + inPos] & 9007199254740991L) >>> 14 & 255L));
         out[175 + outPos] = (byte)((int)((in[26 + inPos] & 9007199254740991L) >>> 22 & 255L));
         out[176 + outPos] = (byte)((int)((in[26 + inPos] & 9007199254740991L) >>> 30 & 255L));
         out[177 + outPos] = (byte)((int)((in[26 + inPos] & 9007199254740991L) >>> 38 & 255L));
         out[178 + outPos] = (byte)((int)(((in[26 + inPos] & 9007199254740991L) >>> 46 | (in[27 + inPos] & 9007199254740991L) << 7) & 255L));
         out[179 + outPos] = (byte)((int)((in[27 + inPos] & 9007199254740991L) >>> 1 & 255L));
         out[180 + outPos] = (byte)((int)((in[27 + inPos] & 9007199254740991L) >>> 9 & 255L));
         out[181 + outPos] = (byte)((int)((in[27 + inPos] & 9007199254740991L) >>> 17 & 255L));
         out[182 + outPos] = (byte)((int)((in[27 + inPos] & 9007199254740991L) >>> 25 & 255L));
         out[183 + outPos] = (byte)((int)((in[27 + inPos] & 9007199254740991L) >>> 33 & 255L));
         out[184 + outPos] = (byte)((int)((in[27 + inPos] & 9007199254740991L) >>> 41 & 255L));
         out[185 + outPos] = (byte)((int)(((in[27 + inPos] & 9007199254740991L) >>> 49 | (in[28 + inPos] & 9007199254740991L) << 4) & 255L));
         out[186 + outPos] = (byte)((int)((in[28 + inPos] & 9007199254740991L) >>> 4 & 255L));
         out[187 + outPos] = (byte)((int)((in[28 + inPos] & 9007199254740991L) >>> 12 & 255L));
         out[188 + outPos] = (byte)((int)((in[28 + inPos] & 9007199254740991L) >>> 20 & 255L));
         out[189 + outPos] = (byte)((int)((in[28 + inPos] & 9007199254740991L) >>> 28 & 255L));
         out[190 + outPos] = (byte)((int)((in[28 + inPos] & 9007199254740991L) >>> 36 & 255L));
         out[191 + outPos] = (byte)((int)((in[28 + inPos] & 9007199254740991L) >>> 44 & 255L));
         out[192 + outPos] = (byte)((int)(((in[28 + inPos] & 9007199254740991L) >>> 52 | (in[29 + inPos] & 9007199254740991L) << 1) & 255L));
         out[193 + outPos] = (byte)((int)((in[29 + inPos] & 9007199254740991L) >>> 7 & 255L));
         out[194 + outPos] = (byte)((int)((in[29 + inPos] & 9007199254740991L) >>> 15 & 255L));
         out[195 + outPos] = (byte)((int)((in[29 + inPos] & 9007199254740991L) >>> 23 & 255L));
         out[196 + outPos] = (byte)((int)((in[29 + inPos] & 9007199254740991L) >>> 31 & 255L));
         out[197 + outPos] = (byte)((int)((in[29 + inPos] & 9007199254740991L) >>> 39 & 255L));
         out[198 + outPos] = (byte)((int)(((in[29 + inPos] & 9007199254740991L) >>> 47 | (in[30 + inPos] & 9007199254740991L) << 6) & 255L));
         out[199 + outPos] = (byte)((int)((in[30 + inPos] & 9007199254740991L) >>> 2 & 255L));
         out[200 + outPos] = (byte)((int)((in[30 + inPos] & 9007199254740991L) >>> 10 & 255L));
         out[201 + outPos] = (byte)((int)((in[30 + inPos] & 9007199254740991L) >>> 18 & 255L));
         out[202 + outPos] = (byte)((int)((in[30 + inPos] & 9007199254740991L) >>> 26 & 255L));
         out[203 + outPos] = (byte)((int)((in[30 + inPos] & 9007199254740991L) >>> 34 & 255L));
         out[204 + outPos] = (byte)((int)((in[30 + inPos] & 9007199254740991L) >>> 42 & 255L));
         out[205 + outPos] = (byte)((int)(((in[30 + inPos] & 9007199254740991L) >>> 50 | (in[31 + inPos] & 9007199254740991L) << 3) & 255L));
         out[206 + outPos] = (byte)((int)((in[31 + inPos] & 9007199254740991L) >>> 5 & 255L));
         out[207 + outPos] = (byte)((int)((in[31 + inPos] & 9007199254740991L) >>> 13 & 255L));
         out[208 + outPos] = (byte)((int)((in[31 + inPos] & 9007199254740991L) >>> 21 & 255L));
         out[209 + outPos] = (byte)((int)((in[31 + inPos] & 9007199254740991L) >>> 29 & 255L));
         out[210 + outPos] = (byte)((int)((in[31 + inPos] & 9007199254740991L) >>> 37 & 255L));
         out[211 + outPos] = (byte)((int)((in[31 + inPos] & 9007199254740991L) >>> 45 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 9007199254740991L;
         out[1 + outPos] = (long)in[6 + inPos] >> 5 & 7L | (long)in[7 + inPos] << 3 & 2047L | (long)in[8 + inPos] << 11 & 524287L | (long)in[9 + inPos] << 19 & 134217727L | (long)in[10 + inPos] << 27 & 34359738367L | (long)in[11 + inPos] << 35 & 8796093022207L | (long)in[12 + inPos] << 43 & 2251799813685247L | (long)in[13 + inPos] << 51 & 9007199254740991L;
         out[2 + outPos] = (long)in[13 + inPos] >> 2 & 63L | (long)in[14 + inPos] << 6 & 16383L | (long)in[15 + inPos] << 14 & 4194303L | (long)in[16 + inPos] << 22 & 1073741823L | (long)in[17 + inPos] << 30 & 274877906943L | (long)in[18 + inPos] << 38 & 70368744177663L | (long)in[19 + inPos] << 46 & 9007199254740991L;
         out[3 + outPos] = (long)in[19 + inPos] >> 7 & 1L | (long)in[20 + inPos] << 1 & 511L | (long)in[21 + inPos] << 9 & 131071L | (long)in[22 + inPos] << 17 & 33554431L | (long)in[23 + inPos] << 25 & 8589934591L | (long)in[24 + inPos] << 33 & 2199023255551L | (long)in[25 + inPos] << 41 & 562949953421311L | (long)in[26 + inPos] << 49 & 9007199254740991L;
         out[4 + outPos] = (long)in[26 + inPos] >> 4 & 15L | (long)in[27 + inPos] << 4 & 4095L | (long)in[28 + inPos] << 12 & 1048575L | (long)in[29 + inPos] << 20 & 268435455L | (long)in[30 + inPos] << 28 & 68719476735L | (long)in[31 + inPos] << 36 & 17592186044415L | (long)in[32 + inPos] << 44 & 4503599627370495L | (long)in[33 + inPos] << 52 & 9007199254740991L;
         out[5 + outPos] = (long)in[33 + inPos] >> 1 & 127L | (long)in[34 + inPos] << 7 & 32767L | (long)in[35 + inPos] << 15 & 8388607L | (long)in[36 + inPos] << 23 & 2147483647L | (long)in[37 + inPos] << 31 & 549755813887L | (long)in[38 + inPos] << 39 & 140737488355327L | (long)in[39 + inPos] << 47 & 9007199254740991L;
         out[6 + outPos] = (long)in[39 + inPos] >> 6 & 3L | (long)in[40 + inPos] << 2 & 1023L | (long)in[41 + inPos] << 10 & 262143L | (long)in[42 + inPos] << 18 & 67108863L | (long)in[43 + inPos] << 26 & 17179869183L | (long)in[44 + inPos] << 34 & 4398046511103L | (long)in[45 + inPos] << 42 & 1125899906842623L | (long)in[46 + inPos] << 50 & 9007199254740991L;
         out[7 + outPos] = (long)in[46 + inPos] >> 3 & 31L | (long)in[47 + inPos] << 5 & 8191L | (long)in[48 + inPos] << 13 & 2097151L | (long)in[49 + inPos] << 21 & 536870911L | (long)in[50 + inPos] << 29 & 137438953471L | (long)in[51 + inPos] << 37 & 35184372088831L | (long)in[52 + inPos] << 45 & 9007199254740991L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 9007199254740991L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 5 & 7L | (long)in.get(7 + inPos) << 3 & 2047L | (long)in.get(8 + inPos) << 11 & 524287L | (long)in.get(9 + inPos) << 19 & 134217727L | (long)in.get(10 + inPos) << 27 & 34359738367L | (long)in.get(11 + inPos) << 35 & 8796093022207L | (long)in.get(12 + inPos) << 43 & 2251799813685247L | (long)in.get(13 + inPos) << 51 & 9007199254740991L;
         out[2 + outPos] = (long)in.get(13 + inPos) >> 2 & 63L | (long)in.get(14 + inPos) << 6 & 16383L | (long)in.get(15 + inPos) << 14 & 4194303L | (long)in.get(16 + inPos) << 22 & 1073741823L | (long)in.get(17 + inPos) << 30 & 274877906943L | (long)in.get(18 + inPos) << 38 & 70368744177663L | (long)in.get(19 + inPos) << 46 & 9007199254740991L;
         out[3 + outPos] = (long)in.get(19 + inPos) >> 7 & 1L | (long)in.get(20 + inPos) << 1 & 511L | (long)in.get(21 + inPos) << 9 & 131071L | (long)in.get(22 + inPos) << 17 & 33554431L | (long)in.get(23 + inPos) << 25 & 8589934591L | (long)in.get(24 + inPos) << 33 & 2199023255551L | (long)in.get(25 + inPos) << 41 & 562949953421311L | (long)in.get(26 + inPos) << 49 & 9007199254740991L;
         out[4 + outPos] = (long)in.get(26 + inPos) >> 4 & 15L | (long)in.get(27 + inPos) << 4 & 4095L | (long)in.get(28 + inPos) << 12 & 1048575L | (long)in.get(29 + inPos) << 20 & 268435455L | (long)in.get(30 + inPos) << 28 & 68719476735L | (long)in.get(31 + inPos) << 36 & 17592186044415L | (long)in.get(32 + inPos) << 44 & 4503599627370495L | (long)in.get(33 + inPos) << 52 & 9007199254740991L;
         out[5 + outPos] = (long)in.get(33 + inPos) >> 1 & 127L | (long)in.get(34 + inPos) << 7 & 32767L | (long)in.get(35 + inPos) << 15 & 8388607L | (long)in.get(36 + inPos) << 23 & 2147483647L | (long)in.get(37 + inPos) << 31 & 549755813887L | (long)in.get(38 + inPos) << 39 & 140737488355327L | (long)in.get(39 + inPos) << 47 & 9007199254740991L;
         out[6 + outPos] = (long)in.get(39 + inPos) >> 6 & 3L | (long)in.get(40 + inPos) << 2 & 1023L | (long)in.get(41 + inPos) << 10 & 262143L | (long)in.get(42 + inPos) << 18 & 67108863L | (long)in.get(43 + inPos) << 26 & 17179869183L | (long)in.get(44 + inPos) << 34 & 4398046511103L | (long)in.get(45 + inPos) << 42 & 1125899906842623L | (long)in.get(46 + inPos) << 50 & 9007199254740991L;
         out[7 + outPos] = (long)in.get(46 + inPos) >> 3 & 31L | (long)in.get(47 + inPos) << 5 & 8191L | (long)in.get(48 + inPos) << 13 & 2097151L | (long)in.get(49 + inPos) << 21 & 536870911L | (long)in.get(50 + inPos) << 29 & 137438953471L | (long)in.get(51 + inPos) << 37 & 35184372088831L | (long)in.get(52 + inPos) << 45 & 9007199254740991L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 9007199254740991L;
         out[1 + outPos] = (long)in[6 + inPos] >> 5 & 7L | (long)in[7 + inPos] << 3 & 2047L | (long)in[8 + inPos] << 11 & 524287L | (long)in[9 + inPos] << 19 & 134217727L | (long)in[10 + inPos] << 27 & 34359738367L | (long)in[11 + inPos] << 35 & 8796093022207L | (long)in[12 + inPos] << 43 & 2251799813685247L | (long)in[13 + inPos] << 51 & 9007199254740991L;
         out[2 + outPos] = (long)in[13 + inPos] >> 2 & 63L | (long)in[14 + inPos] << 6 & 16383L | (long)in[15 + inPos] << 14 & 4194303L | (long)in[16 + inPos] << 22 & 1073741823L | (long)in[17 + inPos] << 30 & 274877906943L | (long)in[18 + inPos] << 38 & 70368744177663L | (long)in[19 + inPos] << 46 & 9007199254740991L;
         out[3 + outPos] = (long)in[19 + inPos] >> 7 & 1L | (long)in[20 + inPos] << 1 & 511L | (long)in[21 + inPos] << 9 & 131071L | (long)in[22 + inPos] << 17 & 33554431L | (long)in[23 + inPos] << 25 & 8589934591L | (long)in[24 + inPos] << 33 & 2199023255551L | (long)in[25 + inPos] << 41 & 562949953421311L | (long)in[26 + inPos] << 49 & 9007199254740991L;
         out[4 + outPos] = (long)in[26 + inPos] >> 4 & 15L | (long)in[27 + inPos] << 4 & 4095L | (long)in[28 + inPos] << 12 & 1048575L | (long)in[29 + inPos] << 20 & 268435455L | (long)in[30 + inPos] << 28 & 68719476735L | (long)in[31 + inPos] << 36 & 17592186044415L | (long)in[32 + inPos] << 44 & 4503599627370495L | (long)in[33 + inPos] << 52 & 9007199254740991L;
         out[5 + outPos] = (long)in[33 + inPos] >> 1 & 127L | (long)in[34 + inPos] << 7 & 32767L | (long)in[35 + inPos] << 15 & 8388607L | (long)in[36 + inPos] << 23 & 2147483647L | (long)in[37 + inPos] << 31 & 549755813887L | (long)in[38 + inPos] << 39 & 140737488355327L | (long)in[39 + inPos] << 47 & 9007199254740991L;
         out[6 + outPos] = (long)in[39 + inPos] >> 6 & 3L | (long)in[40 + inPos] << 2 & 1023L | (long)in[41 + inPos] << 10 & 262143L | (long)in[42 + inPos] << 18 & 67108863L | (long)in[43 + inPos] << 26 & 17179869183L | (long)in[44 + inPos] << 34 & 4398046511103L | (long)in[45 + inPos] << 42 & 1125899906842623L | (long)in[46 + inPos] << 50 & 9007199254740991L;
         out[7 + outPos] = (long)in[46 + inPos] >> 3 & 31L | (long)in[47 + inPos] << 5 & 8191L | (long)in[48 + inPos] << 13 & 2097151L | (long)in[49 + inPos] << 21 & 536870911L | (long)in[50 + inPos] << 29 & 137438953471L | (long)in[51 + inPos] << 37 & 35184372088831L | (long)in[52 + inPos] << 45 & 9007199254740991L;
         out[8 + outPos] = (long)in[53 + inPos] & 255L | (long)in[54 + inPos] << 8 & 65535L | (long)in[55 + inPos] << 16 & 16777215L | (long)in[56 + inPos] << 24 & 4294967295L | (long)in[57 + inPos] << 32 & 1099511627775L | (long)in[58 + inPos] << 40 & 281474976710655L | (long)in[59 + inPos] << 48 & 9007199254740991L;
         out[9 + outPos] = (long)in[59 + inPos] >> 5 & 7L | (long)in[60 + inPos] << 3 & 2047L | (long)in[61 + inPos] << 11 & 524287L | (long)in[62 + inPos] << 19 & 134217727L | (long)in[63 + inPos] << 27 & 34359738367L | (long)in[64 + inPos] << 35 & 8796093022207L | (long)in[65 + inPos] << 43 & 2251799813685247L | (long)in[66 + inPos] << 51 & 9007199254740991L;
         out[10 + outPos] = (long)in[66 + inPos] >> 2 & 63L | (long)in[67 + inPos] << 6 & 16383L | (long)in[68 + inPos] << 14 & 4194303L | (long)in[69 + inPos] << 22 & 1073741823L | (long)in[70 + inPos] << 30 & 274877906943L | (long)in[71 + inPos] << 38 & 70368744177663L | (long)in[72 + inPos] << 46 & 9007199254740991L;
         out[11 + outPos] = (long)in[72 + inPos] >> 7 & 1L | (long)in[73 + inPos] << 1 & 511L | (long)in[74 + inPos] << 9 & 131071L | (long)in[75 + inPos] << 17 & 33554431L | (long)in[76 + inPos] << 25 & 8589934591L | (long)in[77 + inPos] << 33 & 2199023255551L | (long)in[78 + inPos] << 41 & 562949953421311L | (long)in[79 + inPos] << 49 & 9007199254740991L;
         out[12 + outPos] = (long)in[79 + inPos] >> 4 & 15L | (long)in[80 + inPos] << 4 & 4095L | (long)in[81 + inPos] << 12 & 1048575L | (long)in[82 + inPos] << 20 & 268435455L | (long)in[83 + inPos] << 28 & 68719476735L | (long)in[84 + inPos] << 36 & 17592186044415L | (long)in[85 + inPos] << 44 & 4503599627370495L | (long)in[86 + inPos] << 52 & 9007199254740991L;
         out[13 + outPos] = (long)in[86 + inPos] >> 1 & 127L | (long)in[87 + inPos] << 7 & 32767L | (long)in[88 + inPos] << 15 & 8388607L | (long)in[89 + inPos] << 23 & 2147483647L | (long)in[90 + inPos] << 31 & 549755813887L | (long)in[91 + inPos] << 39 & 140737488355327L | (long)in[92 + inPos] << 47 & 9007199254740991L;
         out[14 + outPos] = (long)in[92 + inPos] >> 6 & 3L | (long)in[93 + inPos] << 2 & 1023L | (long)in[94 + inPos] << 10 & 262143L | (long)in[95 + inPos] << 18 & 67108863L | (long)in[96 + inPos] << 26 & 17179869183L | (long)in[97 + inPos] << 34 & 4398046511103L | (long)in[98 + inPos] << 42 & 1125899906842623L | (long)in[99 + inPos] << 50 & 9007199254740991L;
         out[15 + outPos] = (long)in[99 + inPos] >> 3 & 31L | (long)in[100 + inPos] << 5 & 8191L | (long)in[101 + inPos] << 13 & 2097151L | (long)in[102 + inPos] << 21 & 536870911L | (long)in[103 + inPos] << 29 & 137438953471L | (long)in[104 + inPos] << 37 & 35184372088831L | (long)in[105 + inPos] << 45 & 9007199254740991L;
         out[16 + outPos] = (long)in[106 + inPos] & 255L | (long)in[107 + inPos] << 8 & 65535L | (long)in[108 + inPos] << 16 & 16777215L | (long)in[109 + inPos] << 24 & 4294967295L | (long)in[110 + inPos] << 32 & 1099511627775L | (long)in[111 + inPos] << 40 & 281474976710655L | (long)in[112 + inPos] << 48 & 9007199254740991L;
         out[17 + outPos] = (long)in[112 + inPos] >> 5 & 7L | (long)in[113 + inPos] << 3 & 2047L | (long)in[114 + inPos] << 11 & 524287L | (long)in[115 + inPos] << 19 & 134217727L | (long)in[116 + inPos] << 27 & 34359738367L | (long)in[117 + inPos] << 35 & 8796093022207L | (long)in[118 + inPos] << 43 & 2251799813685247L | (long)in[119 + inPos] << 51 & 9007199254740991L;
         out[18 + outPos] = (long)in[119 + inPos] >> 2 & 63L | (long)in[120 + inPos] << 6 & 16383L | (long)in[121 + inPos] << 14 & 4194303L | (long)in[122 + inPos] << 22 & 1073741823L | (long)in[123 + inPos] << 30 & 274877906943L | (long)in[124 + inPos] << 38 & 70368744177663L | (long)in[125 + inPos] << 46 & 9007199254740991L;
         out[19 + outPos] = (long)in[125 + inPos] >> 7 & 1L | (long)in[126 + inPos] << 1 & 511L | (long)in[127 + inPos] << 9 & 131071L | (long)in[128 + inPos] << 17 & 33554431L | (long)in[129 + inPos] << 25 & 8589934591L | (long)in[130 + inPos] << 33 & 2199023255551L | (long)in[131 + inPos] << 41 & 562949953421311L | (long)in[132 + inPos] << 49 & 9007199254740991L;
         out[20 + outPos] = (long)in[132 + inPos] >> 4 & 15L | (long)in[133 + inPos] << 4 & 4095L | (long)in[134 + inPos] << 12 & 1048575L | (long)in[135 + inPos] << 20 & 268435455L | (long)in[136 + inPos] << 28 & 68719476735L | (long)in[137 + inPos] << 36 & 17592186044415L | (long)in[138 + inPos] << 44 & 4503599627370495L | (long)in[139 + inPos] << 52 & 9007199254740991L;
         out[21 + outPos] = (long)in[139 + inPos] >> 1 & 127L | (long)in[140 + inPos] << 7 & 32767L | (long)in[141 + inPos] << 15 & 8388607L | (long)in[142 + inPos] << 23 & 2147483647L | (long)in[143 + inPos] << 31 & 549755813887L | (long)in[144 + inPos] << 39 & 140737488355327L | (long)in[145 + inPos] << 47 & 9007199254740991L;
         out[22 + outPos] = (long)in[145 + inPos] >> 6 & 3L | (long)in[146 + inPos] << 2 & 1023L | (long)in[147 + inPos] << 10 & 262143L | (long)in[148 + inPos] << 18 & 67108863L | (long)in[149 + inPos] << 26 & 17179869183L | (long)in[150 + inPos] << 34 & 4398046511103L | (long)in[151 + inPos] << 42 & 1125899906842623L | (long)in[152 + inPos] << 50 & 9007199254740991L;
         out[23 + outPos] = (long)in[152 + inPos] >> 3 & 31L | (long)in[153 + inPos] << 5 & 8191L | (long)in[154 + inPos] << 13 & 2097151L | (long)in[155 + inPos] << 21 & 536870911L | (long)in[156 + inPos] << 29 & 137438953471L | (long)in[157 + inPos] << 37 & 35184372088831L | (long)in[158 + inPos] << 45 & 9007199254740991L;
         out[24 + outPos] = (long)in[159 + inPos] & 255L | (long)in[160 + inPos] << 8 & 65535L | (long)in[161 + inPos] << 16 & 16777215L | (long)in[162 + inPos] << 24 & 4294967295L | (long)in[163 + inPos] << 32 & 1099511627775L | (long)in[164 + inPos] << 40 & 281474976710655L | (long)in[165 + inPos] << 48 & 9007199254740991L;
         out[25 + outPos] = (long)in[165 + inPos] >> 5 & 7L | (long)in[166 + inPos] << 3 & 2047L | (long)in[167 + inPos] << 11 & 524287L | (long)in[168 + inPos] << 19 & 134217727L | (long)in[169 + inPos] << 27 & 34359738367L | (long)in[170 + inPos] << 35 & 8796093022207L | (long)in[171 + inPos] << 43 & 2251799813685247L | (long)in[172 + inPos] << 51 & 9007199254740991L;
         out[26 + outPos] = (long)in[172 + inPos] >> 2 & 63L | (long)in[173 + inPos] << 6 & 16383L | (long)in[174 + inPos] << 14 & 4194303L | (long)in[175 + inPos] << 22 & 1073741823L | (long)in[176 + inPos] << 30 & 274877906943L | (long)in[177 + inPos] << 38 & 70368744177663L | (long)in[178 + inPos] << 46 & 9007199254740991L;
         out[27 + outPos] = (long)in[178 + inPos] >> 7 & 1L | (long)in[179 + inPos] << 1 & 511L | (long)in[180 + inPos] << 9 & 131071L | (long)in[181 + inPos] << 17 & 33554431L | (long)in[182 + inPos] << 25 & 8589934591L | (long)in[183 + inPos] << 33 & 2199023255551L | (long)in[184 + inPos] << 41 & 562949953421311L | (long)in[185 + inPos] << 49 & 9007199254740991L;
         out[28 + outPos] = (long)in[185 + inPos] >> 4 & 15L | (long)in[186 + inPos] << 4 & 4095L | (long)in[187 + inPos] << 12 & 1048575L | (long)in[188 + inPos] << 20 & 268435455L | (long)in[189 + inPos] << 28 & 68719476735L | (long)in[190 + inPos] << 36 & 17592186044415L | (long)in[191 + inPos] << 44 & 4503599627370495L | (long)in[192 + inPos] << 52 & 9007199254740991L;
         out[29 + outPos] = (long)in[192 + inPos] >> 1 & 127L | (long)in[193 + inPos] << 7 & 32767L | (long)in[194 + inPos] << 15 & 8388607L | (long)in[195 + inPos] << 23 & 2147483647L | (long)in[196 + inPos] << 31 & 549755813887L | (long)in[197 + inPos] << 39 & 140737488355327L | (long)in[198 + inPos] << 47 & 9007199254740991L;
         out[30 + outPos] = (long)in[198 + inPos] >> 6 & 3L | (long)in[199 + inPos] << 2 & 1023L | (long)in[200 + inPos] << 10 & 262143L | (long)in[201 + inPos] << 18 & 67108863L | (long)in[202 + inPos] << 26 & 17179869183L | (long)in[203 + inPos] << 34 & 4398046511103L | (long)in[204 + inPos] << 42 & 1125899906842623L | (long)in[205 + inPos] << 50 & 9007199254740991L;
         out[31 + outPos] = (long)in[205 + inPos] >> 3 & 31L | (long)in[206 + inPos] << 5 & 8191L | (long)in[207 + inPos] << 13 & 2097151L | (long)in[208 + inPos] << 21 & 536870911L | (long)in[209 + inPos] << 29 & 137438953471L | (long)in[210 + inPos] << 37 & 35184372088831L | (long)in[211 + inPos] << 45 & 9007199254740991L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 9007199254740991L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 5 & 7L | (long)in.get(7 + inPos) << 3 & 2047L | (long)in.get(8 + inPos) << 11 & 524287L | (long)in.get(9 + inPos) << 19 & 134217727L | (long)in.get(10 + inPos) << 27 & 34359738367L | (long)in.get(11 + inPos) << 35 & 8796093022207L | (long)in.get(12 + inPos) << 43 & 2251799813685247L | (long)in.get(13 + inPos) << 51 & 9007199254740991L;
         out[2 + outPos] = (long)in.get(13 + inPos) >> 2 & 63L | (long)in.get(14 + inPos) << 6 & 16383L | (long)in.get(15 + inPos) << 14 & 4194303L | (long)in.get(16 + inPos) << 22 & 1073741823L | (long)in.get(17 + inPos) << 30 & 274877906943L | (long)in.get(18 + inPos) << 38 & 70368744177663L | (long)in.get(19 + inPos) << 46 & 9007199254740991L;
         out[3 + outPos] = (long)in.get(19 + inPos) >> 7 & 1L | (long)in.get(20 + inPos) << 1 & 511L | (long)in.get(21 + inPos) << 9 & 131071L | (long)in.get(22 + inPos) << 17 & 33554431L | (long)in.get(23 + inPos) << 25 & 8589934591L | (long)in.get(24 + inPos) << 33 & 2199023255551L | (long)in.get(25 + inPos) << 41 & 562949953421311L | (long)in.get(26 + inPos) << 49 & 9007199254740991L;
         out[4 + outPos] = (long)in.get(26 + inPos) >> 4 & 15L | (long)in.get(27 + inPos) << 4 & 4095L | (long)in.get(28 + inPos) << 12 & 1048575L | (long)in.get(29 + inPos) << 20 & 268435455L | (long)in.get(30 + inPos) << 28 & 68719476735L | (long)in.get(31 + inPos) << 36 & 17592186044415L | (long)in.get(32 + inPos) << 44 & 4503599627370495L | (long)in.get(33 + inPos) << 52 & 9007199254740991L;
         out[5 + outPos] = (long)in.get(33 + inPos) >> 1 & 127L | (long)in.get(34 + inPos) << 7 & 32767L | (long)in.get(35 + inPos) << 15 & 8388607L | (long)in.get(36 + inPos) << 23 & 2147483647L | (long)in.get(37 + inPos) << 31 & 549755813887L | (long)in.get(38 + inPos) << 39 & 140737488355327L | (long)in.get(39 + inPos) << 47 & 9007199254740991L;
         out[6 + outPos] = (long)in.get(39 + inPos) >> 6 & 3L | (long)in.get(40 + inPos) << 2 & 1023L | (long)in.get(41 + inPos) << 10 & 262143L | (long)in.get(42 + inPos) << 18 & 67108863L | (long)in.get(43 + inPos) << 26 & 17179869183L | (long)in.get(44 + inPos) << 34 & 4398046511103L | (long)in.get(45 + inPos) << 42 & 1125899906842623L | (long)in.get(46 + inPos) << 50 & 9007199254740991L;
         out[7 + outPos] = (long)in.get(46 + inPos) >> 3 & 31L | (long)in.get(47 + inPos) << 5 & 8191L | (long)in.get(48 + inPos) << 13 & 2097151L | (long)in.get(49 + inPos) << 21 & 536870911L | (long)in.get(50 + inPos) << 29 & 137438953471L | (long)in.get(51 + inPos) << 37 & 35184372088831L | (long)in.get(52 + inPos) << 45 & 9007199254740991L;
         out[8 + outPos] = (long)in.get(53 + inPos) & 255L | (long)in.get(54 + inPos) << 8 & 65535L | (long)in.get(55 + inPos) << 16 & 16777215L | (long)in.get(56 + inPos) << 24 & 4294967295L | (long)in.get(57 + inPos) << 32 & 1099511627775L | (long)in.get(58 + inPos) << 40 & 281474976710655L | (long)in.get(59 + inPos) << 48 & 9007199254740991L;
         out[9 + outPos] = (long)in.get(59 + inPos) >> 5 & 7L | (long)in.get(60 + inPos) << 3 & 2047L | (long)in.get(61 + inPos) << 11 & 524287L | (long)in.get(62 + inPos) << 19 & 134217727L | (long)in.get(63 + inPos) << 27 & 34359738367L | (long)in.get(64 + inPos) << 35 & 8796093022207L | (long)in.get(65 + inPos) << 43 & 2251799813685247L | (long)in.get(66 + inPos) << 51 & 9007199254740991L;
         out[10 + outPos] = (long)in.get(66 + inPos) >> 2 & 63L | (long)in.get(67 + inPos) << 6 & 16383L | (long)in.get(68 + inPos) << 14 & 4194303L | (long)in.get(69 + inPos) << 22 & 1073741823L | (long)in.get(70 + inPos) << 30 & 274877906943L | (long)in.get(71 + inPos) << 38 & 70368744177663L | (long)in.get(72 + inPos) << 46 & 9007199254740991L;
         out[11 + outPos] = (long)in.get(72 + inPos) >> 7 & 1L | (long)in.get(73 + inPos) << 1 & 511L | (long)in.get(74 + inPos) << 9 & 131071L | (long)in.get(75 + inPos) << 17 & 33554431L | (long)in.get(76 + inPos) << 25 & 8589934591L | (long)in.get(77 + inPos) << 33 & 2199023255551L | (long)in.get(78 + inPos) << 41 & 562949953421311L | (long)in.get(79 + inPos) << 49 & 9007199254740991L;
         out[12 + outPos] = (long)in.get(79 + inPos) >> 4 & 15L | (long)in.get(80 + inPos) << 4 & 4095L | (long)in.get(81 + inPos) << 12 & 1048575L | (long)in.get(82 + inPos) << 20 & 268435455L | (long)in.get(83 + inPos) << 28 & 68719476735L | (long)in.get(84 + inPos) << 36 & 17592186044415L | (long)in.get(85 + inPos) << 44 & 4503599627370495L | (long)in.get(86 + inPos) << 52 & 9007199254740991L;
         out[13 + outPos] = (long)in.get(86 + inPos) >> 1 & 127L | (long)in.get(87 + inPos) << 7 & 32767L | (long)in.get(88 + inPos) << 15 & 8388607L | (long)in.get(89 + inPos) << 23 & 2147483647L | (long)in.get(90 + inPos) << 31 & 549755813887L | (long)in.get(91 + inPos) << 39 & 140737488355327L | (long)in.get(92 + inPos) << 47 & 9007199254740991L;
         out[14 + outPos] = (long)in.get(92 + inPos) >> 6 & 3L | (long)in.get(93 + inPos) << 2 & 1023L | (long)in.get(94 + inPos) << 10 & 262143L | (long)in.get(95 + inPos) << 18 & 67108863L | (long)in.get(96 + inPos) << 26 & 17179869183L | (long)in.get(97 + inPos) << 34 & 4398046511103L | (long)in.get(98 + inPos) << 42 & 1125899906842623L | (long)in.get(99 + inPos) << 50 & 9007199254740991L;
         out[15 + outPos] = (long)in.get(99 + inPos) >> 3 & 31L | (long)in.get(100 + inPos) << 5 & 8191L | (long)in.get(101 + inPos) << 13 & 2097151L | (long)in.get(102 + inPos) << 21 & 536870911L | (long)in.get(103 + inPos) << 29 & 137438953471L | (long)in.get(104 + inPos) << 37 & 35184372088831L | (long)in.get(105 + inPos) << 45 & 9007199254740991L;
         out[16 + outPos] = (long)in.get(106 + inPos) & 255L | (long)in.get(107 + inPos) << 8 & 65535L | (long)in.get(108 + inPos) << 16 & 16777215L | (long)in.get(109 + inPos) << 24 & 4294967295L | (long)in.get(110 + inPos) << 32 & 1099511627775L | (long)in.get(111 + inPos) << 40 & 281474976710655L | (long)in.get(112 + inPos) << 48 & 9007199254740991L;
         out[17 + outPos] = (long)in.get(112 + inPos) >> 5 & 7L | (long)in.get(113 + inPos) << 3 & 2047L | (long)in.get(114 + inPos) << 11 & 524287L | (long)in.get(115 + inPos) << 19 & 134217727L | (long)in.get(116 + inPos) << 27 & 34359738367L | (long)in.get(117 + inPos) << 35 & 8796093022207L | (long)in.get(118 + inPos) << 43 & 2251799813685247L | (long)in.get(119 + inPos) << 51 & 9007199254740991L;
         out[18 + outPos] = (long)in.get(119 + inPos) >> 2 & 63L | (long)in.get(120 + inPos) << 6 & 16383L | (long)in.get(121 + inPos) << 14 & 4194303L | (long)in.get(122 + inPos) << 22 & 1073741823L | (long)in.get(123 + inPos) << 30 & 274877906943L | (long)in.get(124 + inPos) << 38 & 70368744177663L | (long)in.get(125 + inPos) << 46 & 9007199254740991L;
         out[19 + outPos] = (long)in.get(125 + inPos) >> 7 & 1L | (long)in.get(126 + inPos) << 1 & 511L | (long)in.get(127 + inPos) << 9 & 131071L | (long)in.get(128 + inPos) << 17 & 33554431L | (long)in.get(129 + inPos) << 25 & 8589934591L | (long)in.get(130 + inPos) << 33 & 2199023255551L | (long)in.get(131 + inPos) << 41 & 562949953421311L | (long)in.get(132 + inPos) << 49 & 9007199254740991L;
         out[20 + outPos] = (long)in.get(132 + inPos) >> 4 & 15L | (long)in.get(133 + inPos) << 4 & 4095L | (long)in.get(134 + inPos) << 12 & 1048575L | (long)in.get(135 + inPos) << 20 & 268435455L | (long)in.get(136 + inPos) << 28 & 68719476735L | (long)in.get(137 + inPos) << 36 & 17592186044415L | (long)in.get(138 + inPos) << 44 & 4503599627370495L | (long)in.get(139 + inPos) << 52 & 9007199254740991L;
         out[21 + outPos] = (long)in.get(139 + inPos) >> 1 & 127L | (long)in.get(140 + inPos) << 7 & 32767L | (long)in.get(141 + inPos) << 15 & 8388607L | (long)in.get(142 + inPos) << 23 & 2147483647L | (long)in.get(143 + inPos) << 31 & 549755813887L | (long)in.get(144 + inPos) << 39 & 140737488355327L | (long)in.get(145 + inPos) << 47 & 9007199254740991L;
         out[22 + outPos] = (long)in.get(145 + inPos) >> 6 & 3L | (long)in.get(146 + inPos) << 2 & 1023L | (long)in.get(147 + inPos) << 10 & 262143L | (long)in.get(148 + inPos) << 18 & 67108863L | (long)in.get(149 + inPos) << 26 & 17179869183L | (long)in.get(150 + inPos) << 34 & 4398046511103L | (long)in.get(151 + inPos) << 42 & 1125899906842623L | (long)in.get(152 + inPos) << 50 & 9007199254740991L;
         out[23 + outPos] = (long)in.get(152 + inPos) >> 3 & 31L | (long)in.get(153 + inPos) << 5 & 8191L | (long)in.get(154 + inPos) << 13 & 2097151L | (long)in.get(155 + inPos) << 21 & 536870911L | (long)in.get(156 + inPos) << 29 & 137438953471L | (long)in.get(157 + inPos) << 37 & 35184372088831L | (long)in.get(158 + inPos) << 45 & 9007199254740991L;
         out[24 + outPos] = (long)in.get(159 + inPos) & 255L | (long)in.get(160 + inPos) << 8 & 65535L | (long)in.get(161 + inPos) << 16 & 16777215L | (long)in.get(162 + inPos) << 24 & 4294967295L | (long)in.get(163 + inPos) << 32 & 1099511627775L | (long)in.get(164 + inPos) << 40 & 281474976710655L | (long)in.get(165 + inPos) << 48 & 9007199254740991L;
         out[25 + outPos] = (long)in.get(165 + inPos) >> 5 & 7L | (long)in.get(166 + inPos) << 3 & 2047L | (long)in.get(167 + inPos) << 11 & 524287L | (long)in.get(168 + inPos) << 19 & 134217727L | (long)in.get(169 + inPos) << 27 & 34359738367L | (long)in.get(170 + inPos) << 35 & 8796093022207L | (long)in.get(171 + inPos) << 43 & 2251799813685247L | (long)in.get(172 + inPos) << 51 & 9007199254740991L;
         out[26 + outPos] = (long)in.get(172 + inPos) >> 2 & 63L | (long)in.get(173 + inPos) << 6 & 16383L | (long)in.get(174 + inPos) << 14 & 4194303L | (long)in.get(175 + inPos) << 22 & 1073741823L | (long)in.get(176 + inPos) << 30 & 274877906943L | (long)in.get(177 + inPos) << 38 & 70368744177663L | (long)in.get(178 + inPos) << 46 & 9007199254740991L;
         out[27 + outPos] = (long)in.get(178 + inPos) >> 7 & 1L | (long)in.get(179 + inPos) << 1 & 511L | (long)in.get(180 + inPos) << 9 & 131071L | (long)in.get(181 + inPos) << 17 & 33554431L | (long)in.get(182 + inPos) << 25 & 8589934591L | (long)in.get(183 + inPos) << 33 & 2199023255551L | (long)in.get(184 + inPos) << 41 & 562949953421311L | (long)in.get(185 + inPos) << 49 & 9007199254740991L;
         out[28 + outPos] = (long)in.get(185 + inPos) >> 4 & 15L | (long)in.get(186 + inPos) << 4 & 4095L | (long)in.get(187 + inPos) << 12 & 1048575L | (long)in.get(188 + inPos) << 20 & 268435455L | (long)in.get(189 + inPos) << 28 & 68719476735L | (long)in.get(190 + inPos) << 36 & 17592186044415L | (long)in.get(191 + inPos) << 44 & 4503599627370495L | (long)in.get(192 + inPos) << 52 & 9007199254740991L;
         out[29 + outPos] = (long)in.get(192 + inPos) >> 1 & 127L | (long)in.get(193 + inPos) << 7 & 32767L | (long)in.get(194 + inPos) << 15 & 8388607L | (long)in.get(195 + inPos) << 23 & 2147483647L | (long)in.get(196 + inPos) << 31 & 549755813887L | (long)in.get(197 + inPos) << 39 & 140737488355327L | (long)in.get(198 + inPos) << 47 & 9007199254740991L;
         out[30 + outPos] = (long)in.get(198 + inPos) >> 6 & 3L | (long)in.get(199 + inPos) << 2 & 1023L | (long)in.get(200 + inPos) << 10 & 262143L | (long)in.get(201 + inPos) << 18 & 67108863L | (long)in.get(202 + inPos) << 26 & 17179869183L | (long)in.get(203 + inPos) << 34 & 4398046511103L | (long)in.get(204 + inPos) << 42 & 1125899906842623L | (long)in.get(205 + inPos) << 50 & 9007199254740991L;
         out[31 + outPos] = (long)in.get(205 + inPos) >> 3 & 31L | (long)in.get(206 + inPos) << 5 & 8191L | (long)in.get(207 + inPos) << 13 & 2097151L | (long)in.get(208 + inPos) << 21 & 536870911L | (long)in.get(209 + inPos) << 29 & 137438953471L | (long)in.get(210 + inPos) << 37 & 35184372088831L | (long)in.get(211 + inPos) << 45 & 9007199254740991L;
      }
   }

   private static final class Packer54 extends BytePackerForLong {
      private Packer54() {
         super(54);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 18014398509481983L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 18014398509481983L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 18014398509481983L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 18014398509481983L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 18014398509481983L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 18014398509481983L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 18014398509481983L) >>> 48 | (in[1 + inPos] & 18014398509481983L) << 6) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 18014398509481983L) >>> 2 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 18014398509481983L) >>> 10 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 18014398509481983L) >>> 18 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 18014398509481983L) >>> 26 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 18014398509481983L) >>> 34 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 18014398509481983L) >>> 42 & 255L));
         out[13 + outPos] = (byte)((int)(((in[1 + inPos] & 18014398509481983L) >>> 50 | (in[2 + inPos] & 18014398509481983L) << 4) & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 18014398509481983L) >>> 4 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 18014398509481983L) >>> 12 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 18014398509481983L) >>> 20 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 18014398509481983L) >>> 28 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 18014398509481983L) >>> 36 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 18014398509481983L) >>> 44 & 255L));
         out[20 + outPos] = (byte)((int)(((in[2 + inPos] & 18014398509481983L) >>> 52 | (in[3 + inPos] & 18014398509481983L) << 2) & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 18014398509481983L) >>> 6 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 18014398509481983L) >>> 14 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 18014398509481983L) >>> 22 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 18014398509481983L) >>> 30 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 18014398509481983L) >>> 38 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 18014398509481983L) >>> 46 & 255L));
         out[27 + outPos] = (byte)((int)(in[4 + inPos] & 18014398509481983L & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 18014398509481983L) >>> 8 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 18014398509481983L) >>> 16 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 18014398509481983L) >>> 24 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 18014398509481983L) >>> 32 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 18014398509481983L) >>> 40 & 255L));
         out[33 + outPos] = (byte)((int)(((in[4 + inPos] & 18014398509481983L) >>> 48 | (in[5 + inPos] & 18014398509481983L) << 6) & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 18014398509481983L) >>> 2 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 18014398509481983L) >>> 10 & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 18014398509481983L) >>> 18 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 18014398509481983L) >>> 26 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 18014398509481983L) >>> 34 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 18014398509481983L) >>> 42 & 255L));
         out[40 + outPos] = (byte)((int)(((in[5 + inPos] & 18014398509481983L) >>> 50 | (in[6 + inPos] & 18014398509481983L) << 4) & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 18014398509481983L) >>> 4 & 255L));
         out[42 + outPos] = (byte)((int)((in[6 + inPos] & 18014398509481983L) >>> 12 & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 18014398509481983L) >>> 20 & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 18014398509481983L) >>> 28 & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 18014398509481983L) >>> 36 & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 18014398509481983L) >>> 44 & 255L));
         out[47 + outPos] = (byte)((int)(((in[6 + inPos] & 18014398509481983L) >>> 52 | (in[7 + inPos] & 18014398509481983L) << 2) & 255L));
         out[48 + outPos] = (byte)((int)((in[7 + inPos] & 18014398509481983L) >>> 6 & 255L));
         out[49 + outPos] = (byte)((int)((in[7 + inPos] & 18014398509481983L) >>> 14 & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 18014398509481983L) >>> 22 & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 18014398509481983L) >>> 30 & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 18014398509481983L) >>> 38 & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 18014398509481983L) >>> 46 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 18014398509481983L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 18014398509481983L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 18014398509481983L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 18014398509481983L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 18014398509481983L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 18014398509481983L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 18014398509481983L) >>> 48 | (in[1 + inPos] & 18014398509481983L) << 6) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 18014398509481983L) >>> 2 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 18014398509481983L) >>> 10 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 18014398509481983L) >>> 18 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 18014398509481983L) >>> 26 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 18014398509481983L) >>> 34 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 18014398509481983L) >>> 42 & 255L));
         out[13 + outPos] = (byte)((int)(((in[1 + inPos] & 18014398509481983L) >>> 50 | (in[2 + inPos] & 18014398509481983L) << 4) & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 18014398509481983L) >>> 4 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 18014398509481983L) >>> 12 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 18014398509481983L) >>> 20 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 18014398509481983L) >>> 28 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 18014398509481983L) >>> 36 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 18014398509481983L) >>> 44 & 255L));
         out[20 + outPos] = (byte)((int)(((in[2 + inPos] & 18014398509481983L) >>> 52 | (in[3 + inPos] & 18014398509481983L) << 2) & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 18014398509481983L) >>> 6 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 18014398509481983L) >>> 14 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 18014398509481983L) >>> 22 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 18014398509481983L) >>> 30 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 18014398509481983L) >>> 38 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 18014398509481983L) >>> 46 & 255L));
         out[27 + outPos] = (byte)((int)(in[4 + inPos] & 18014398509481983L & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 18014398509481983L) >>> 8 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 18014398509481983L) >>> 16 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 18014398509481983L) >>> 24 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 18014398509481983L) >>> 32 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 18014398509481983L) >>> 40 & 255L));
         out[33 + outPos] = (byte)((int)(((in[4 + inPos] & 18014398509481983L) >>> 48 | (in[5 + inPos] & 18014398509481983L) << 6) & 255L));
         out[34 + outPos] = (byte)((int)((in[5 + inPos] & 18014398509481983L) >>> 2 & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 18014398509481983L) >>> 10 & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 18014398509481983L) >>> 18 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 18014398509481983L) >>> 26 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 18014398509481983L) >>> 34 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 18014398509481983L) >>> 42 & 255L));
         out[40 + outPos] = (byte)((int)(((in[5 + inPos] & 18014398509481983L) >>> 50 | (in[6 + inPos] & 18014398509481983L) << 4) & 255L));
         out[41 + outPos] = (byte)((int)((in[6 + inPos] & 18014398509481983L) >>> 4 & 255L));
         out[42 + outPos] = (byte)((int)((in[6 + inPos] & 18014398509481983L) >>> 12 & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 18014398509481983L) >>> 20 & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 18014398509481983L) >>> 28 & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 18014398509481983L) >>> 36 & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 18014398509481983L) >>> 44 & 255L));
         out[47 + outPos] = (byte)((int)(((in[6 + inPos] & 18014398509481983L) >>> 52 | (in[7 + inPos] & 18014398509481983L) << 2) & 255L));
         out[48 + outPos] = (byte)((int)((in[7 + inPos] & 18014398509481983L) >>> 6 & 255L));
         out[49 + outPos] = (byte)((int)((in[7 + inPos] & 18014398509481983L) >>> 14 & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 18014398509481983L) >>> 22 & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 18014398509481983L) >>> 30 & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 18014398509481983L) >>> 38 & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 18014398509481983L) >>> 46 & 255L));
         out[54 + outPos] = (byte)((int)(in[8 + inPos] & 18014398509481983L & 255L));
         out[55 + outPos] = (byte)((int)((in[8 + inPos] & 18014398509481983L) >>> 8 & 255L));
         out[56 + outPos] = (byte)((int)((in[8 + inPos] & 18014398509481983L) >>> 16 & 255L));
         out[57 + outPos] = (byte)((int)((in[8 + inPos] & 18014398509481983L) >>> 24 & 255L));
         out[58 + outPos] = (byte)((int)((in[8 + inPos] & 18014398509481983L) >>> 32 & 255L));
         out[59 + outPos] = (byte)((int)((in[8 + inPos] & 18014398509481983L) >>> 40 & 255L));
         out[60 + outPos] = (byte)((int)(((in[8 + inPos] & 18014398509481983L) >>> 48 | (in[9 + inPos] & 18014398509481983L) << 6) & 255L));
         out[61 + outPos] = (byte)((int)((in[9 + inPos] & 18014398509481983L) >>> 2 & 255L));
         out[62 + outPos] = (byte)((int)((in[9 + inPos] & 18014398509481983L) >>> 10 & 255L));
         out[63 + outPos] = (byte)((int)((in[9 + inPos] & 18014398509481983L) >>> 18 & 255L));
         out[64 + outPos] = (byte)((int)((in[9 + inPos] & 18014398509481983L) >>> 26 & 255L));
         out[65 + outPos] = (byte)((int)((in[9 + inPos] & 18014398509481983L) >>> 34 & 255L));
         out[66 + outPos] = (byte)((int)((in[9 + inPos] & 18014398509481983L) >>> 42 & 255L));
         out[67 + outPos] = (byte)((int)(((in[9 + inPos] & 18014398509481983L) >>> 50 | (in[10 + inPos] & 18014398509481983L) << 4) & 255L));
         out[68 + outPos] = (byte)((int)((in[10 + inPos] & 18014398509481983L) >>> 4 & 255L));
         out[69 + outPos] = (byte)((int)((in[10 + inPos] & 18014398509481983L) >>> 12 & 255L));
         out[70 + outPos] = (byte)((int)((in[10 + inPos] & 18014398509481983L) >>> 20 & 255L));
         out[71 + outPos] = (byte)((int)((in[10 + inPos] & 18014398509481983L) >>> 28 & 255L));
         out[72 + outPos] = (byte)((int)((in[10 + inPos] & 18014398509481983L) >>> 36 & 255L));
         out[73 + outPos] = (byte)((int)((in[10 + inPos] & 18014398509481983L) >>> 44 & 255L));
         out[74 + outPos] = (byte)((int)(((in[10 + inPos] & 18014398509481983L) >>> 52 | (in[11 + inPos] & 18014398509481983L) << 2) & 255L));
         out[75 + outPos] = (byte)((int)((in[11 + inPos] & 18014398509481983L) >>> 6 & 255L));
         out[76 + outPos] = (byte)((int)((in[11 + inPos] & 18014398509481983L) >>> 14 & 255L));
         out[77 + outPos] = (byte)((int)((in[11 + inPos] & 18014398509481983L) >>> 22 & 255L));
         out[78 + outPos] = (byte)((int)((in[11 + inPos] & 18014398509481983L) >>> 30 & 255L));
         out[79 + outPos] = (byte)((int)((in[11 + inPos] & 18014398509481983L) >>> 38 & 255L));
         out[80 + outPos] = (byte)((int)((in[11 + inPos] & 18014398509481983L) >>> 46 & 255L));
         out[81 + outPos] = (byte)((int)(in[12 + inPos] & 18014398509481983L & 255L));
         out[82 + outPos] = (byte)((int)((in[12 + inPos] & 18014398509481983L) >>> 8 & 255L));
         out[83 + outPos] = (byte)((int)((in[12 + inPos] & 18014398509481983L) >>> 16 & 255L));
         out[84 + outPos] = (byte)((int)((in[12 + inPos] & 18014398509481983L) >>> 24 & 255L));
         out[85 + outPos] = (byte)((int)((in[12 + inPos] & 18014398509481983L) >>> 32 & 255L));
         out[86 + outPos] = (byte)((int)((in[12 + inPos] & 18014398509481983L) >>> 40 & 255L));
         out[87 + outPos] = (byte)((int)(((in[12 + inPos] & 18014398509481983L) >>> 48 | (in[13 + inPos] & 18014398509481983L) << 6) & 255L));
         out[88 + outPos] = (byte)((int)((in[13 + inPos] & 18014398509481983L) >>> 2 & 255L));
         out[89 + outPos] = (byte)((int)((in[13 + inPos] & 18014398509481983L) >>> 10 & 255L));
         out[90 + outPos] = (byte)((int)((in[13 + inPos] & 18014398509481983L) >>> 18 & 255L));
         out[91 + outPos] = (byte)((int)((in[13 + inPos] & 18014398509481983L) >>> 26 & 255L));
         out[92 + outPos] = (byte)((int)((in[13 + inPos] & 18014398509481983L) >>> 34 & 255L));
         out[93 + outPos] = (byte)((int)((in[13 + inPos] & 18014398509481983L) >>> 42 & 255L));
         out[94 + outPos] = (byte)((int)(((in[13 + inPos] & 18014398509481983L) >>> 50 | (in[14 + inPos] & 18014398509481983L) << 4) & 255L));
         out[95 + outPos] = (byte)((int)((in[14 + inPos] & 18014398509481983L) >>> 4 & 255L));
         out[96 + outPos] = (byte)((int)((in[14 + inPos] & 18014398509481983L) >>> 12 & 255L));
         out[97 + outPos] = (byte)((int)((in[14 + inPos] & 18014398509481983L) >>> 20 & 255L));
         out[98 + outPos] = (byte)((int)((in[14 + inPos] & 18014398509481983L) >>> 28 & 255L));
         out[99 + outPos] = (byte)((int)((in[14 + inPos] & 18014398509481983L) >>> 36 & 255L));
         out[100 + outPos] = (byte)((int)((in[14 + inPos] & 18014398509481983L) >>> 44 & 255L));
         out[101 + outPos] = (byte)((int)(((in[14 + inPos] & 18014398509481983L) >>> 52 | (in[15 + inPos] & 18014398509481983L) << 2) & 255L));
         out[102 + outPos] = (byte)((int)((in[15 + inPos] & 18014398509481983L) >>> 6 & 255L));
         out[103 + outPos] = (byte)((int)((in[15 + inPos] & 18014398509481983L) >>> 14 & 255L));
         out[104 + outPos] = (byte)((int)((in[15 + inPos] & 18014398509481983L) >>> 22 & 255L));
         out[105 + outPos] = (byte)((int)((in[15 + inPos] & 18014398509481983L) >>> 30 & 255L));
         out[106 + outPos] = (byte)((int)((in[15 + inPos] & 18014398509481983L) >>> 38 & 255L));
         out[107 + outPos] = (byte)((int)((in[15 + inPos] & 18014398509481983L) >>> 46 & 255L));
         out[108 + outPos] = (byte)((int)(in[16 + inPos] & 18014398509481983L & 255L));
         out[109 + outPos] = (byte)((int)((in[16 + inPos] & 18014398509481983L) >>> 8 & 255L));
         out[110 + outPos] = (byte)((int)((in[16 + inPos] & 18014398509481983L) >>> 16 & 255L));
         out[111 + outPos] = (byte)((int)((in[16 + inPos] & 18014398509481983L) >>> 24 & 255L));
         out[112 + outPos] = (byte)((int)((in[16 + inPos] & 18014398509481983L) >>> 32 & 255L));
         out[113 + outPos] = (byte)((int)((in[16 + inPos] & 18014398509481983L) >>> 40 & 255L));
         out[114 + outPos] = (byte)((int)(((in[16 + inPos] & 18014398509481983L) >>> 48 | (in[17 + inPos] & 18014398509481983L) << 6) & 255L));
         out[115 + outPos] = (byte)((int)((in[17 + inPos] & 18014398509481983L) >>> 2 & 255L));
         out[116 + outPos] = (byte)((int)((in[17 + inPos] & 18014398509481983L) >>> 10 & 255L));
         out[117 + outPos] = (byte)((int)((in[17 + inPos] & 18014398509481983L) >>> 18 & 255L));
         out[118 + outPos] = (byte)((int)((in[17 + inPos] & 18014398509481983L) >>> 26 & 255L));
         out[119 + outPos] = (byte)((int)((in[17 + inPos] & 18014398509481983L) >>> 34 & 255L));
         out[120 + outPos] = (byte)((int)((in[17 + inPos] & 18014398509481983L) >>> 42 & 255L));
         out[121 + outPos] = (byte)((int)(((in[17 + inPos] & 18014398509481983L) >>> 50 | (in[18 + inPos] & 18014398509481983L) << 4) & 255L));
         out[122 + outPos] = (byte)((int)((in[18 + inPos] & 18014398509481983L) >>> 4 & 255L));
         out[123 + outPos] = (byte)((int)((in[18 + inPos] & 18014398509481983L) >>> 12 & 255L));
         out[124 + outPos] = (byte)((int)((in[18 + inPos] & 18014398509481983L) >>> 20 & 255L));
         out[125 + outPos] = (byte)((int)((in[18 + inPos] & 18014398509481983L) >>> 28 & 255L));
         out[126 + outPos] = (byte)((int)((in[18 + inPos] & 18014398509481983L) >>> 36 & 255L));
         out[127 + outPos] = (byte)((int)((in[18 + inPos] & 18014398509481983L) >>> 44 & 255L));
         out[128 + outPos] = (byte)((int)(((in[18 + inPos] & 18014398509481983L) >>> 52 | (in[19 + inPos] & 18014398509481983L) << 2) & 255L));
         out[129 + outPos] = (byte)((int)((in[19 + inPos] & 18014398509481983L) >>> 6 & 255L));
         out[130 + outPos] = (byte)((int)((in[19 + inPos] & 18014398509481983L) >>> 14 & 255L));
         out[131 + outPos] = (byte)((int)((in[19 + inPos] & 18014398509481983L) >>> 22 & 255L));
         out[132 + outPos] = (byte)((int)((in[19 + inPos] & 18014398509481983L) >>> 30 & 255L));
         out[133 + outPos] = (byte)((int)((in[19 + inPos] & 18014398509481983L) >>> 38 & 255L));
         out[134 + outPos] = (byte)((int)((in[19 + inPos] & 18014398509481983L) >>> 46 & 255L));
         out[135 + outPos] = (byte)((int)(in[20 + inPos] & 18014398509481983L & 255L));
         out[136 + outPos] = (byte)((int)((in[20 + inPos] & 18014398509481983L) >>> 8 & 255L));
         out[137 + outPos] = (byte)((int)((in[20 + inPos] & 18014398509481983L) >>> 16 & 255L));
         out[138 + outPos] = (byte)((int)((in[20 + inPos] & 18014398509481983L) >>> 24 & 255L));
         out[139 + outPos] = (byte)((int)((in[20 + inPos] & 18014398509481983L) >>> 32 & 255L));
         out[140 + outPos] = (byte)((int)((in[20 + inPos] & 18014398509481983L) >>> 40 & 255L));
         out[141 + outPos] = (byte)((int)(((in[20 + inPos] & 18014398509481983L) >>> 48 | (in[21 + inPos] & 18014398509481983L) << 6) & 255L));
         out[142 + outPos] = (byte)((int)((in[21 + inPos] & 18014398509481983L) >>> 2 & 255L));
         out[143 + outPos] = (byte)((int)((in[21 + inPos] & 18014398509481983L) >>> 10 & 255L));
         out[144 + outPos] = (byte)((int)((in[21 + inPos] & 18014398509481983L) >>> 18 & 255L));
         out[145 + outPos] = (byte)((int)((in[21 + inPos] & 18014398509481983L) >>> 26 & 255L));
         out[146 + outPos] = (byte)((int)((in[21 + inPos] & 18014398509481983L) >>> 34 & 255L));
         out[147 + outPos] = (byte)((int)((in[21 + inPos] & 18014398509481983L) >>> 42 & 255L));
         out[148 + outPos] = (byte)((int)(((in[21 + inPos] & 18014398509481983L) >>> 50 | (in[22 + inPos] & 18014398509481983L) << 4) & 255L));
         out[149 + outPos] = (byte)((int)((in[22 + inPos] & 18014398509481983L) >>> 4 & 255L));
         out[150 + outPos] = (byte)((int)((in[22 + inPos] & 18014398509481983L) >>> 12 & 255L));
         out[151 + outPos] = (byte)((int)((in[22 + inPos] & 18014398509481983L) >>> 20 & 255L));
         out[152 + outPos] = (byte)((int)((in[22 + inPos] & 18014398509481983L) >>> 28 & 255L));
         out[153 + outPos] = (byte)((int)((in[22 + inPos] & 18014398509481983L) >>> 36 & 255L));
         out[154 + outPos] = (byte)((int)((in[22 + inPos] & 18014398509481983L) >>> 44 & 255L));
         out[155 + outPos] = (byte)((int)(((in[22 + inPos] & 18014398509481983L) >>> 52 | (in[23 + inPos] & 18014398509481983L) << 2) & 255L));
         out[156 + outPos] = (byte)((int)((in[23 + inPos] & 18014398509481983L) >>> 6 & 255L));
         out[157 + outPos] = (byte)((int)((in[23 + inPos] & 18014398509481983L) >>> 14 & 255L));
         out[158 + outPos] = (byte)((int)((in[23 + inPos] & 18014398509481983L) >>> 22 & 255L));
         out[159 + outPos] = (byte)((int)((in[23 + inPos] & 18014398509481983L) >>> 30 & 255L));
         out[160 + outPos] = (byte)((int)((in[23 + inPos] & 18014398509481983L) >>> 38 & 255L));
         out[161 + outPos] = (byte)((int)((in[23 + inPos] & 18014398509481983L) >>> 46 & 255L));
         out[162 + outPos] = (byte)((int)(in[24 + inPos] & 18014398509481983L & 255L));
         out[163 + outPos] = (byte)((int)((in[24 + inPos] & 18014398509481983L) >>> 8 & 255L));
         out[164 + outPos] = (byte)((int)((in[24 + inPos] & 18014398509481983L) >>> 16 & 255L));
         out[165 + outPos] = (byte)((int)((in[24 + inPos] & 18014398509481983L) >>> 24 & 255L));
         out[166 + outPos] = (byte)((int)((in[24 + inPos] & 18014398509481983L) >>> 32 & 255L));
         out[167 + outPos] = (byte)((int)((in[24 + inPos] & 18014398509481983L) >>> 40 & 255L));
         out[168 + outPos] = (byte)((int)(((in[24 + inPos] & 18014398509481983L) >>> 48 | (in[25 + inPos] & 18014398509481983L) << 6) & 255L));
         out[169 + outPos] = (byte)((int)((in[25 + inPos] & 18014398509481983L) >>> 2 & 255L));
         out[170 + outPos] = (byte)((int)((in[25 + inPos] & 18014398509481983L) >>> 10 & 255L));
         out[171 + outPos] = (byte)((int)((in[25 + inPos] & 18014398509481983L) >>> 18 & 255L));
         out[172 + outPos] = (byte)((int)((in[25 + inPos] & 18014398509481983L) >>> 26 & 255L));
         out[173 + outPos] = (byte)((int)((in[25 + inPos] & 18014398509481983L) >>> 34 & 255L));
         out[174 + outPos] = (byte)((int)((in[25 + inPos] & 18014398509481983L) >>> 42 & 255L));
         out[175 + outPos] = (byte)((int)(((in[25 + inPos] & 18014398509481983L) >>> 50 | (in[26 + inPos] & 18014398509481983L) << 4) & 255L));
         out[176 + outPos] = (byte)((int)((in[26 + inPos] & 18014398509481983L) >>> 4 & 255L));
         out[177 + outPos] = (byte)((int)((in[26 + inPos] & 18014398509481983L) >>> 12 & 255L));
         out[178 + outPos] = (byte)((int)((in[26 + inPos] & 18014398509481983L) >>> 20 & 255L));
         out[179 + outPos] = (byte)((int)((in[26 + inPos] & 18014398509481983L) >>> 28 & 255L));
         out[180 + outPos] = (byte)((int)((in[26 + inPos] & 18014398509481983L) >>> 36 & 255L));
         out[181 + outPos] = (byte)((int)((in[26 + inPos] & 18014398509481983L) >>> 44 & 255L));
         out[182 + outPos] = (byte)((int)(((in[26 + inPos] & 18014398509481983L) >>> 52 | (in[27 + inPos] & 18014398509481983L) << 2) & 255L));
         out[183 + outPos] = (byte)((int)((in[27 + inPos] & 18014398509481983L) >>> 6 & 255L));
         out[184 + outPos] = (byte)((int)((in[27 + inPos] & 18014398509481983L) >>> 14 & 255L));
         out[185 + outPos] = (byte)((int)((in[27 + inPos] & 18014398509481983L) >>> 22 & 255L));
         out[186 + outPos] = (byte)((int)((in[27 + inPos] & 18014398509481983L) >>> 30 & 255L));
         out[187 + outPos] = (byte)((int)((in[27 + inPos] & 18014398509481983L) >>> 38 & 255L));
         out[188 + outPos] = (byte)((int)((in[27 + inPos] & 18014398509481983L) >>> 46 & 255L));
         out[189 + outPos] = (byte)((int)(in[28 + inPos] & 18014398509481983L & 255L));
         out[190 + outPos] = (byte)((int)((in[28 + inPos] & 18014398509481983L) >>> 8 & 255L));
         out[191 + outPos] = (byte)((int)((in[28 + inPos] & 18014398509481983L) >>> 16 & 255L));
         out[192 + outPos] = (byte)((int)((in[28 + inPos] & 18014398509481983L) >>> 24 & 255L));
         out[193 + outPos] = (byte)((int)((in[28 + inPos] & 18014398509481983L) >>> 32 & 255L));
         out[194 + outPos] = (byte)((int)((in[28 + inPos] & 18014398509481983L) >>> 40 & 255L));
         out[195 + outPos] = (byte)((int)(((in[28 + inPos] & 18014398509481983L) >>> 48 | (in[29 + inPos] & 18014398509481983L) << 6) & 255L));
         out[196 + outPos] = (byte)((int)((in[29 + inPos] & 18014398509481983L) >>> 2 & 255L));
         out[197 + outPos] = (byte)((int)((in[29 + inPos] & 18014398509481983L) >>> 10 & 255L));
         out[198 + outPos] = (byte)((int)((in[29 + inPos] & 18014398509481983L) >>> 18 & 255L));
         out[199 + outPos] = (byte)((int)((in[29 + inPos] & 18014398509481983L) >>> 26 & 255L));
         out[200 + outPos] = (byte)((int)((in[29 + inPos] & 18014398509481983L) >>> 34 & 255L));
         out[201 + outPos] = (byte)((int)((in[29 + inPos] & 18014398509481983L) >>> 42 & 255L));
         out[202 + outPos] = (byte)((int)(((in[29 + inPos] & 18014398509481983L) >>> 50 | (in[30 + inPos] & 18014398509481983L) << 4) & 255L));
         out[203 + outPos] = (byte)((int)((in[30 + inPos] & 18014398509481983L) >>> 4 & 255L));
         out[204 + outPos] = (byte)((int)((in[30 + inPos] & 18014398509481983L) >>> 12 & 255L));
         out[205 + outPos] = (byte)((int)((in[30 + inPos] & 18014398509481983L) >>> 20 & 255L));
         out[206 + outPos] = (byte)((int)((in[30 + inPos] & 18014398509481983L) >>> 28 & 255L));
         out[207 + outPos] = (byte)((int)((in[30 + inPos] & 18014398509481983L) >>> 36 & 255L));
         out[208 + outPos] = (byte)((int)((in[30 + inPos] & 18014398509481983L) >>> 44 & 255L));
         out[209 + outPos] = (byte)((int)(((in[30 + inPos] & 18014398509481983L) >>> 52 | (in[31 + inPos] & 18014398509481983L) << 2) & 255L));
         out[210 + outPos] = (byte)((int)((in[31 + inPos] & 18014398509481983L) >>> 6 & 255L));
         out[211 + outPos] = (byte)((int)((in[31 + inPos] & 18014398509481983L) >>> 14 & 255L));
         out[212 + outPos] = (byte)((int)((in[31 + inPos] & 18014398509481983L) >>> 22 & 255L));
         out[213 + outPos] = (byte)((int)((in[31 + inPos] & 18014398509481983L) >>> 30 & 255L));
         out[214 + outPos] = (byte)((int)((in[31 + inPos] & 18014398509481983L) >>> 38 & 255L));
         out[215 + outPos] = (byte)((int)((in[31 + inPos] & 18014398509481983L) >>> 46 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 18014398509481983L;
         out[1 + outPos] = (long)in[6 + inPos] >> 6 & 3L | (long)in[7 + inPos] << 2 & 1023L | (long)in[8 + inPos] << 10 & 262143L | (long)in[9 + inPos] << 18 & 67108863L | (long)in[10 + inPos] << 26 & 17179869183L | (long)in[11 + inPos] << 34 & 4398046511103L | (long)in[12 + inPos] << 42 & 1125899906842623L | (long)in[13 + inPos] << 50 & 18014398509481983L;
         out[2 + outPos] = (long)in[13 + inPos] >> 4 & 15L | (long)in[14 + inPos] << 4 & 4095L | (long)in[15 + inPos] << 12 & 1048575L | (long)in[16 + inPos] << 20 & 268435455L | (long)in[17 + inPos] << 28 & 68719476735L | (long)in[18 + inPos] << 36 & 17592186044415L | (long)in[19 + inPos] << 44 & 4503599627370495L | (long)in[20 + inPos] << 52 & 18014398509481983L;
         out[3 + outPos] = (long)in[20 + inPos] >> 2 & 63L | (long)in[21 + inPos] << 6 & 16383L | (long)in[22 + inPos] << 14 & 4194303L | (long)in[23 + inPos] << 22 & 1073741823L | (long)in[24 + inPos] << 30 & 274877906943L | (long)in[25 + inPos] << 38 & 70368744177663L | (long)in[26 + inPos] << 46 & 18014398509481983L;
         out[4 + outPos] = (long)in[27 + inPos] & 255L | (long)in[28 + inPos] << 8 & 65535L | (long)in[29 + inPos] << 16 & 16777215L | (long)in[30 + inPos] << 24 & 4294967295L | (long)in[31 + inPos] << 32 & 1099511627775L | (long)in[32 + inPos] << 40 & 281474976710655L | (long)in[33 + inPos] << 48 & 18014398509481983L;
         out[5 + outPos] = (long)in[33 + inPos] >> 6 & 3L | (long)in[34 + inPos] << 2 & 1023L | (long)in[35 + inPos] << 10 & 262143L | (long)in[36 + inPos] << 18 & 67108863L | (long)in[37 + inPos] << 26 & 17179869183L | (long)in[38 + inPos] << 34 & 4398046511103L | (long)in[39 + inPos] << 42 & 1125899906842623L | (long)in[40 + inPos] << 50 & 18014398509481983L;
         out[6 + outPos] = (long)in[40 + inPos] >> 4 & 15L | (long)in[41 + inPos] << 4 & 4095L | (long)in[42 + inPos] << 12 & 1048575L | (long)in[43 + inPos] << 20 & 268435455L | (long)in[44 + inPos] << 28 & 68719476735L | (long)in[45 + inPos] << 36 & 17592186044415L | (long)in[46 + inPos] << 44 & 4503599627370495L | (long)in[47 + inPos] << 52 & 18014398509481983L;
         out[7 + outPos] = (long)in[47 + inPos] >> 2 & 63L | (long)in[48 + inPos] << 6 & 16383L | (long)in[49 + inPos] << 14 & 4194303L | (long)in[50 + inPos] << 22 & 1073741823L | (long)in[51 + inPos] << 30 & 274877906943L | (long)in[52 + inPos] << 38 & 70368744177663L | (long)in[53 + inPos] << 46 & 18014398509481983L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 18014398509481983L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 6 & 3L | (long)in.get(7 + inPos) << 2 & 1023L | (long)in.get(8 + inPos) << 10 & 262143L | (long)in.get(9 + inPos) << 18 & 67108863L | (long)in.get(10 + inPos) << 26 & 17179869183L | (long)in.get(11 + inPos) << 34 & 4398046511103L | (long)in.get(12 + inPos) << 42 & 1125899906842623L | (long)in.get(13 + inPos) << 50 & 18014398509481983L;
         out[2 + outPos] = (long)in.get(13 + inPos) >> 4 & 15L | (long)in.get(14 + inPos) << 4 & 4095L | (long)in.get(15 + inPos) << 12 & 1048575L | (long)in.get(16 + inPos) << 20 & 268435455L | (long)in.get(17 + inPos) << 28 & 68719476735L | (long)in.get(18 + inPos) << 36 & 17592186044415L | (long)in.get(19 + inPos) << 44 & 4503599627370495L | (long)in.get(20 + inPos) << 52 & 18014398509481983L;
         out[3 + outPos] = (long)in.get(20 + inPos) >> 2 & 63L | (long)in.get(21 + inPos) << 6 & 16383L | (long)in.get(22 + inPos) << 14 & 4194303L | (long)in.get(23 + inPos) << 22 & 1073741823L | (long)in.get(24 + inPos) << 30 & 274877906943L | (long)in.get(25 + inPos) << 38 & 70368744177663L | (long)in.get(26 + inPos) << 46 & 18014398509481983L;
         out[4 + outPos] = (long)in.get(27 + inPos) & 255L | (long)in.get(28 + inPos) << 8 & 65535L | (long)in.get(29 + inPos) << 16 & 16777215L | (long)in.get(30 + inPos) << 24 & 4294967295L | (long)in.get(31 + inPos) << 32 & 1099511627775L | (long)in.get(32 + inPos) << 40 & 281474976710655L | (long)in.get(33 + inPos) << 48 & 18014398509481983L;
         out[5 + outPos] = (long)in.get(33 + inPos) >> 6 & 3L | (long)in.get(34 + inPos) << 2 & 1023L | (long)in.get(35 + inPos) << 10 & 262143L | (long)in.get(36 + inPos) << 18 & 67108863L | (long)in.get(37 + inPos) << 26 & 17179869183L | (long)in.get(38 + inPos) << 34 & 4398046511103L | (long)in.get(39 + inPos) << 42 & 1125899906842623L | (long)in.get(40 + inPos) << 50 & 18014398509481983L;
         out[6 + outPos] = (long)in.get(40 + inPos) >> 4 & 15L | (long)in.get(41 + inPos) << 4 & 4095L | (long)in.get(42 + inPos) << 12 & 1048575L | (long)in.get(43 + inPos) << 20 & 268435455L | (long)in.get(44 + inPos) << 28 & 68719476735L | (long)in.get(45 + inPos) << 36 & 17592186044415L | (long)in.get(46 + inPos) << 44 & 4503599627370495L | (long)in.get(47 + inPos) << 52 & 18014398509481983L;
         out[7 + outPos] = (long)in.get(47 + inPos) >> 2 & 63L | (long)in.get(48 + inPos) << 6 & 16383L | (long)in.get(49 + inPos) << 14 & 4194303L | (long)in.get(50 + inPos) << 22 & 1073741823L | (long)in.get(51 + inPos) << 30 & 274877906943L | (long)in.get(52 + inPos) << 38 & 70368744177663L | (long)in.get(53 + inPos) << 46 & 18014398509481983L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 18014398509481983L;
         out[1 + outPos] = (long)in[6 + inPos] >> 6 & 3L | (long)in[7 + inPos] << 2 & 1023L | (long)in[8 + inPos] << 10 & 262143L | (long)in[9 + inPos] << 18 & 67108863L | (long)in[10 + inPos] << 26 & 17179869183L | (long)in[11 + inPos] << 34 & 4398046511103L | (long)in[12 + inPos] << 42 & 1125899906842623L | (long)in[13 + inPos] << 50 & 18014398509481983L;
         out[2 + outPos] = (long)in[13 + inPos] >> 4 & 15L | (long)in[14 + inPos] << 4 & 4095L | (long)in[15 + inPos] << 12 & 1048575L | (long)in[16 + inPos] << 20 & 268435455L | (long)in[17 + inPos] << 28 & 68719476735L | (long)in[18 + inPos] << 36 & 17592186044415L | (long)in[19 + inPos] << 44 & 4503599627370495L | (long)in[20 + inPos] << 52 & 18014398509481983L;
         out[3 + outPos] = (long)in[20 + inPos] >> 2 & 63L | (long)in[21 + inPos] << 6 & 16383L | (long)in[22 + inPos] << 14 & 4194303L | (long)in[23 + inPos] << 22 & 1073741823L | (long)in[24 + inPos] << 30 & 274877906943L | (long)in[25 + inPos] << 38 & 70368744177663L | (long)in[26 + inPos] << 46 & 18014398509481983L;
         out[4 + outPos] = (long)in[27 + inPos] & 255L | (long)in[28 + inPos] << 8 & 65535L | (long)in[29 + inPos] << 16 & 16777215L | (long)in[30 + inPos] << 24 & 4294967295L | (long)in[31 + inPos] << 32 & 1099511627775L | (long)in[32 + inPos] << 40 & 281474976710655L | (long)in[33 + inPos] << 48 & 18014398509481983L;
         out[5 + outPos] = (long)in[33 + inPos] >> 6 & 3L | (long)in[34 + inPos] << 2 & 1023L | (long)in[35 + inPos] << 10 & 262143L | (long)in[36 + inPos] << 18 & 67108863L | (long)in[37 + inPos] << 26 & 17179869183L | (long)in[38 + inPos] << 34 & 4398046511103L | (long)in[39 + inPos] << 42 & 1125899906842623L | (long)in[40 + inPos] << 50 & 18014398509481983L;
         out[6 + outPos] = (long)in[40 + inPos] >> 4 & 15L | (long)in[41 + inPos] << 4 & 4095L | (long)in[42 + inPos] << 12 & 1048575L | (long)in[43 + inPos] << 20 & 268435455L | (long)in[44 + inPos] << 28 & 68719476735L | (long)in[45 + inPos] << 36 & 17592186044415L | (long)in[46 + inPos] << 44 & 4503599627370495L | (long)in[47 + inPos] << 52 & 18014398509481983L;
         out[7 + outPos] = (long)in[47 + inPos] >> 2 & 63L | (long)in[48 + inPos] << 6 & 16383L | (long)in[49 + inPos] << 14 & 4194303L | (long)in[50 + inPos] << 22 & 1073741823L | (long)in[51 + inPos] << 30 & 274877906943L | (long)in[52 + inPos] << 38 & 70368744177663L | (long)in[53 + inPos] << 46 & 18014398509481983L;
         out[8 + outPos] = (long)in[54 + inPos] & 255L | (long)in[55 + inPos] << 8 & 65535L | (long)in[56 + inPos] << 16 & 16777215L | (long)in[57 + inPos] << 24 & 4294967295L | (long)in[58 + inPos] << 32 & 1099511627775L | (long)in[59 + inPos] << 40 & 281474976710655L | (long)in[60 + inPos] << 48 & 18014398509481983L;
         out[9 + outPos] = (long)in[60 + inPos] >> 6 & 3L | (long)in[61 + inPos] << 2 & 1023L | (long)in[62 + inPos] << 10 & 262143L | (long)in[63 + inPos] << 18 & 67108863L | (long)in[64 + inPos] << 26 & 17179869183L | (long)in[65 + inPos] << 34 & 4398046511103L | (long)in[66 + inPos] << 42 & 1125899906842623L | (long)in[67 + inPos] << 50 & 18014398509481983L;
         out[10 + outPos] = (long)in[67 + inPos] >> 4 & 15L | (long)in[68 + inPos] << 4 & 4095L | (long)in[69 + inPos] << 12 & 1048575L | (long)in[70 + inPos] << 20 & 268435455L | (long)in[71 + inPos] << 28 & 68719476735L | (long)in[72 + inPos] << 36 & 17592186044415L | (long)in[73 + inPos] << 44 & 4503599627370495L | (long)in[74 + inPos] << 52 & 18014398509481983L;
         out[11 + outPos] = (long)in[74 + inPos] >> 2 & 63L | (long)in[75 + inPos] << 6 & 16383L | (long)in[76 + inPos] << 14 & 4194303L | (long)in[77 + inPos] << 22 & 1073741823L | (long)in[78 + inPos] << 30 & 274877906943L | (long)in[79 + inPos] << 38 & 70368744177663L | (long)in[80 + inPos] << 46 & 18014398509481983L;
         out[12 + outPos] = (long)in[81 + inPos] & 255L | (long)in[82 + inPos] << 8 & 65535L | (long)in[83 + inPos] << 16 & 16777215L | (long)in[84 + inPos] << 24 & 4294967295L | (long)in[85 + inPos] << 32 & 1099511627775L | (long)in[86 + inPos] << 40 & 281474976710655L | (long)in[87 + inPos] << 48 & 18014398509481983L;
         out[13 + outPos] = (long)in[87 + inPos] >> 6 & 3L | (long)in[88 + inPos] << 2 & 1023L | (long)in[89 + inPos] << 10 & 262143L | (long)in[90 + inPos] << 18 & 67108863L | (long)in[91 + inPos] << 26 & 17179869183L | (long)in[92 + inPos] << 34 & 4398046511103L | (long)in[93 + inPos] << 42 & 1125899906842623L | (long)in[94 + inPos] << 50 & 18014398509481983L;
         out[14 + outPos] = (long)in[94 + inPos] >> 4 & 15L | (long)in[95 + inPos] << 4 & 4095L | (long)in[96 + inPos] << 12 & 1048575L | (long)in[97 + inPos] << 20 & 268435455L | (long)in[98 + inPos] << 28 & 68719476735L | (long)in[99 + inPos] << 36 & 17592186044415L | (long)in[100 + inPos] << 44 & 4503599627370495L | (long)in[101 + inPos] << 52 & 18014398509481983L;
         out[15 + outPos] = (long)in[101 + inPos] >> 2 & 63L | (long)in[102 + inPos] << 6 & 16383L | (long)in[103 + inPos] << 14 & 4194303L | (long)in[104 + inPos] << 22 & 1073741823L | (long)in[105 + inPos] << 30 & 274877906943L | (long)in[106 + inPos] << 38 & 70368744177663L | (long)in[107 + inPos] << 46 & 18014398509481983L;
         out[16 + outPos] = (long)in[108 + inPos] & 255L | (long)in[109 + inPos] << 8 & 65535L | (long)in[110 + inPos] << 16 & 16777215L | (long)in[111 + inPos] << 24 & 4294967295L | (long)in[112 + inPos] << 32 & 1099511627775L | (long)in[113 + inPos] << 40 & 281474976710655L | (long)in[114 + inPos] << 48 & 18014398509481983L;
         out[17 + outPos] = (long)in[114 + inPos] >> 6 & 3L | (long)in[115 + inPos] << 2 & 1023L | (long)in[116 + inPos] << 10 & 262143L | (long)in[117 + inPos] << 18 & 67108863L | (long)in[118 + inPos] << 26 & 17179869183L | (long)in[119 + inPos] << 34 & 4398046511103L | (long)in[120 + inPos] << 42 & 1125899906842623L | (long)in[121 + inPos] << 50 & 18014398509481983L;
         out[18 + outPos] = (long)in[121 + inPos] >> 4 & 15L | (long)in[122 + inPos] << 4 & 4095L | (long)in[123 + inPos] << 12 & 1048575L | (long)in[124 + inPos] << 20 & 268435455L | (long)in[125 + inPos] << 28 & 68719476735L | (long)in[126 + inPos] << 36 & 17592186044415L | (long)in[127 + inPos] << 44 & 4503599627370495L | (long)in[128 + inPos] << 52 & 18014398509481983L;
         out[19 + outPos] = (long)in[128 + inPos] >> 2 & 63L | (long)in[129 + inPos] << 6 & 16383L | (long)in[130 + inPos] << 14 & 4194303L | (long)in[131 + inPos] << 22 & 1073741823L | (long)in[132 + inPos] << 30 & 274877906943L | (long)in[133 + inPos] << 38 & 70368744177663L | (long)in[134 + inPos] << 46 & 18014398509481983L;
         out[20 + outPos] = (long)in[135 + inPos] & 255L | (long)in[136 + inPos] << 8 & 65535L | (long)in[137 + inPos] << 16 & 16777215L | (long)in[138 + inPos] << 24 & 4294967295L | (long)in[139 + inPos] << 32 & 1099511627775L | (long)in[140 + inPos] << 40 & 281474976710655L | (long)in[141 + inPos] << 48 & 18014398509481983L;
         out[21 + outPos] = (long)in[141 + inPos] >> 6 & 3L | (long)in[142 + inPos] << 2 & 1023L | (long)in[143 + inPos] << 10 & 262143L | (long)in[144 + inPos] << 18 & 67108863L | (long)in[145 + inPos] << 26 & 17179869183L | (long)in[146 + inPos] << 34 & 4398046511103L | (long)in[147 + inPos] << 42 & 1125899906842623L | (long)in[148 + inPos] << 50 & 18014398509481983L;
         out[22 + outPos] = (long)in[148 + inPos] >> 4 & 15L | (long)in[149 + inPos] << 4 & 4095L | (long)in[150 + inPos] << 12 & 1048575L | (long)in[151 + inPos] << 20 & 268435455L | (long)in[152 + inPos] << 28 & 68719476735L | (long)in[153 + inPos] << 36 & 17592186044415L | (long)in[154 + inPos] << 44 & 4503599627370495L | (long)in[155 + inPos] << 52 & 18014398509481983L;
         out[23 + outPos] = (long)in[155 + inPos] >> 2 & 63L | (long)in[156 + inPos] << 6 & 16383L | (long)in[157 + inPos] << 14 & 4194303L | (long)in[158 + inPos] << 22 & 1073741823L | (long)in[159 + inPos] << 30 & 274877906943L | (long)in[160 + inPos] << 38 & 70368744177663L | (long)in[161 + inPos] << 46 & 18014398509481983L;
         out[24 + outPos] = (long)in[162 + inPos] & 255L | (long)in[163 + inPos] << 8 & 65535L | (long)in[164 + inPos] << 16 & 16777215L | (long)in[165 + inPos] << 24 & 4294967295L | (long)in[166 + inPos] << 32 & 1099511627775L | (long)in[167 + inPos] << 40 & 281474976710655L | (long)in[168 + inPos] << 48 & 18014398509481983L;
         out[25 + outPos] = (long)in[168 + inPos] >> 6 & 3L | (long)in[169 + inPos] << 2 & 1023L | (long)in[170 + inPos] << 10 & 262143L | (long)in[171 + inPos] << 18 & 67108863L | (long)in[172 + inPos] << 26 & 17179869183L | (long)in[173 + inPos] << 34 & 4398046511103L | (long)in[174 + inPos] << 42 & 1125899906842623L | (long)in[175 + inPos] << 50 & 18014398509481983L;
         out[26 + outPos] = (long)in[175 + inPos] >> 4 & 15L | (long)in[176 + inPos] << 4 & 4095L | (long)in[177 + inPos] << 12 & 1048575L | (long)in[178 + inPos] << 20 & 268435455L | (long)in[179 + inPos] << 28 & 68719476735L | (long)in[180 + inPos] << 36 & 17592186044415L | (long)in[181 + inPos] << 44 & 4503599627370495L | (long)in[182 + inPos] << 52 & 18014398509481983L;
         out[27 + outPos] = (long)in[182 + inPos] >> 2 & 63L | (long)in[183 + inPos] << 6 & 16383L | (long)in[184 + inPos] << 14 & 4194303L | (long)in[185 + inPos] << 22 & 1073741823L | (long)in[186 + inPos] << 30 & 274877906943L | (long)in[187 + inPos] << 38 & 70368744177663L | (long)in[188 + inPos] << 46 & 18014398509481983L;
         out[28 + outPos] = (long)in[189 + inPos] & 255L | (long)in[190 + inPos] << 8 & 65535L | (long)in[191 + inPos] << 16 & 16777215L | (long)in[192 + inPos] << 24 & 4294967295L | (long)in[193 + inPos] << 32 & 1099511627775L | (long)in[194 + inPos] << 40 & 281474976710655L | (long)in[195 + inPos] << 48 & 18014398509481983L;
         out[29 + outPos] = (long)in[195 + inPos] >> 6 & 3L | (long)in[196 + inPos] << 2 & 1023L | (long)in[197 + inPos] << 10 & 262143L | (long)in[198 + inPos] << 18 & 67108863L | (long)in[199 + inPos] << 26 & 17179869183L | (long)in[200 + inPos] << 34 & 4398046511103L | (long)in[201 + inPos] << 42 & 1125899906842623L | (long)in[202 + inPos] << 50 & 18014398509481983L;
         out[30 + outPos] = (long)in[202 + inPos] >> 4 & 15L | (long)in[203 + inPos] << 4 & 4095L | (long)in[204 + inPos] << 12 & 1048575L | (long)in[205 + inPos] << 20 & 268435455L | (long)in[206 + inPos] << 28 & 68719476735L | (long)in[207 + inPos] << 36 & 17592186044415L | (long)in[208 + inPos] << 44 & 4503599627370495L | (long)in[209 + inPos] << 52 & 18014398509481983L;
         out[31 + outPos] = (long)in[209 + inPos] >> 2 & 63L | (long)in[210 + inPos] << 6 & 16383L | (long)in[211 + inPos] << 14 & 4194303L | (long)in[212 + inPos] << 22 & 1073741823L | (long)in[213 + inPos] << 30 & 274877906943L | (long)in[214 + inPos] << 38 & 70368744177663L | (long)in[215 + inPos] << 46 & 18014398509481983L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 18014398509481983L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 6 & 3L | (long)in.get(7 + inPos) << 2 & 1023L | (long)in.get(8 + inPos) << 10 & 262143L | (long)in.get(9 + inPos) << 18 & 67108863L | (long)in.get(10 + inPos) << 26 & 17179869183L | (long)in.get(11 + inPos) << 34 & 4398046511103L | (long)in.get(12 + inPos) << 42 & 1125899906842623L | (long)in.get(13 + inPos) << 50 & 18014398509481983L;
         out[2 + outPos] = (long)in.get(13 + inPos) >> 4 & 15L | (long)in.get(14 + inPos) << 4 & 4095L | (long)in.get(15 + inPos) << 12 & 1048575L | (long)in.get(16 + inPos) << 20 & 268435455L | (long)in.get(17 + inPos) << 28 & 68719476735L | (long)in.get(18 + inPos) << 36 & 17592186044415L | (long)in.get(19 + inPos) << 44 & 4503599627370495L | (long)in.get(20 + inPos) << 52 & 18014398509481983L;
         out[3 + outPos] = (long)in.get(20 + inPos) >> 2 & 63L | (long)in.get(21 + inPos) << 6 & 16383L | (long)in.get(22 + inPos) << 14 & 4194303L | (long)in.get(23 + inPos) << 22 & 1073741823L | (long)in.get(24 + inPos) << 30 & 274877906943L | (long)in.get(25 + inPos) << 38 & 70368744177663L | (long)in.get(26 + inPos) << 46 & 18014398509481983L;
         out[4 + outPos] = (long)in.get(27 + inPos) & 255L | (long)in.get(28 + inPos) << 8 & 65535L | (long)in.get(29 + inPos) << 16 & 16777215L | (long)in.get(30 + inPos) << 24 & 4294967295L | (long)in.get(31 + inPos) << 32 & 1099511627775L | (long)in.get(32 + inPos) << 40 & 281474976710655L | (long)in.get(33 + inPos) << 48 & 18014398509481983L;
         out[5 + outPos] = (long)in.get(33 + inPos) >> 6 & 3L | (long)in.get(34 + inPos) << 2 & 1023L | (long)in.get(35 + inPos) << 10 & 262143L | (long)in.get(36 + inPos) << 18 & 67108863L | (long)in.get(37 + inPos) << 26 & 17179869183L | (long)in.get(38 + inPos) << 34 & 4398046511103L | (long)in.get(39 + inPos) << 42 & 1125899906842623L | (long)in.get(40 + inPos) << 50 & 18014398509481983L;
         out[6 + outPos] = (long)in.get(40 + inPos) >> 4 & 15L | (long)in.get(41 + inPos) << 4 & 4095L | (long)in.get(42 + inPos) << 12 & 1048575L | (long)in.get(43 + inPos) << 20 & 268435455L | (long)in.get(44 + inPos) << 28 & 68719476735L | (long)in.get(45 + inPos) << 36 & 17592186044415L | (long)in.get(46 + inPos) << 44 & 4503599627370495L | (long)in.get(47 + inPos) << 52 & 18014398509481983L;
         out[7 + outPos] = (long)in.get(47 + inPos) >> 2 & 63L | (long)in.get(48 + inPos) << 6 & 16383L | (long)in.get(49 + inPos) << 14 & 4194303L | (long)in.get(50 + inPos) << 22 & 1073741823L | (long)in.get(51 + inPos) << 30 & 274877906943L | (long)in.get(52 + inPos) << 38 & 70368744177663L | (long)in.get(53 + inPos) << 46 & 18014398509481983L;
         out[8 + outPos] = (long)in.get(54 + inPos) & 255L | (long)in.get(55 + inPos) << 8 & 65535L | (long)in.get(56 + inPos) << 16 & 16777215L | (long)in.get(57 + inPos) << 24 & 4294967295L | (long)in.get(58 + inPos) << 32 & 1099511627775L | (long)in.get(59 + inPos) << 40 & 281474976710655L | (long)in.get(60 + inPos) << 48 & 18014398509481983L;
         out[9 + outPos] = (long)in.get(60 + inPos) >> 6 & 3L | (long)in.get(61 + inPos) << 2 & 1023L | (long)in.get(62 + inPos) << 10 & 262143L | (long)in.get(63 + inPos) << 18 & 67108863L | (long)in.get(64 + inPos) << 26 & 17179869183L | (long)in.get(65 + inPos) << 34 & 4398046511103L | (long)in.get(66 + inPos) << 42 & 1125899906842623L | (long)in.get(67 + inPos) << 50 & 18014398509481983L;
         out[10 + outPos] = (long)in.get(67 + inPos) >> 4 & 15L | (long)in.get(68 + inPos) << 4 & 4095L | (long)in.get(69 + inPos) << 12 & 1048575L | (long)in.get(70 + inPos) << 20 & 268435455L | (long)in.get(71 + inPos) << 28 & 68719476735L | (long)in.get(72 + inPos) << 36 & 17592186044415L | (long)in.get(73 + inPos) << 44 & 4503599627370495L | (long)in.get(74 + inPos) << 52 & 18014398509481983L;
         out[11 + outPos] = (long)in.get(74 + inPos) >> 2 & 63L | (long)in.get(75 + inPos) << 6 & 16383L | (long)in.get(76 + inPos) << 14 & 4194303L | (long)in.get(77 + inPos) << 22 & 1073741823L | (long)in.get(78 + inPos) << 30 & 274877906943L | (long)in.get(79 + inPos) << 38 & 70368744177663L | (long)in.get(80 + inPos) << 46 & 18014398509481983L;
         out[12 + outPos] = (long)in.get(81 + inPos) & 255L | (long)in.get(82 + inPos) << 8 & 65535L | (long)in.get(83 + inPos) << 16 & 16777215L | (long)in.get(84 + inPos) << 24 & 4294967295L | (long)in.get(85 + inPos) << 32 & 1099511627775L | (long)in.get(86 + inPos) << 40 & 281474976710655L | (long)in.get(87 + inPos) << 48 & 18014398509481983L;
         out[13 + outPos] = (long)in.get(87 + inPos) >> 6 & 3L | (long)in.get(88 + inPos) << 2 & 1023L | (long)in.get(89 + inPos) << 10 & 262143L | (long)in.get(90 + inPos) << 18 & 67108863L | (long)in.get(91 + inPos) << 26 & 17179869183L | (long)in.get(92 + inPos) << 34 & 4398046511103L | (long)in.get(93 + inPos) << 42 & 1125899906842623L | (long)in.get(94 + inPos) << 50 & 18014398509481983L;
         out[14 + outPos] = (long)in.get(94 + inPos) >> 4 & 15L | (long)in.get(95 + inPos) << 4 & 4095L | (long)in.get(96 + inPos) << 12 & 1048575L | (long)in.get(97 + inPos) << 20 & 268435455L | (long)in.get(98 + inPos) << 28 & 68719476735L | (long)in.get(99 + inPos) << 36 & 17592186044415L | (long)in.get(100 + inPos) << 44 & 4503599627370495L | (long)in.get(101 + inPos) << 52 & 18014398509481983L;
         out[15 + outPos] = (long)in.get(101 + inPos) >> 2 & 63L | (long)in.get(102 + inPos) << 6 & 16383L | (long)in.get(103 + inPos) << 14 & 4194303L | (long)in.get(104 + inPos) << 22 & 1073741823L | (long)in.get(105 + inPos) << 30 & 274877906943L | (long)in.get(106 + inPos) << 38 & 70368744177663L | (long)in.get(107 + inPos) << 46 & 18014398509481983L;
         out[16 + outPos] = (long)in.get(108 + inPos) & 255L | (long)in.get(109 + inPos) << 8 & 65535L | (long)in.get(110 + inPos) << 16 & 16777215L | (long)in.get(111 + inPos) << 24 & 4294967295L | (long)in.get(112 + inPos) << 32 & 1099511627775L | (long)in.get(113 + inPos) << 40 & 281474976710655L | (long)in.get(114 + inPos) << 48 & 18014398509481983L;
         out[17 + outPos] = (long)in.get(114 + inPos) >> 6 & 3L | (long)in.get(115 + inPos) << 2 & 1023L | (long)in.get(116 + inPos) << 10 & 262143L | (long)in.get(117 + inPos) << 18 & 67108863L | (long)in.get(118 + inPos) << 26 & 17179869183L | (long)in.get(119 + inPos) << 34 & 4398046511103L | (long)in.get(120 + inPos) << 42 & 1125899906842623L | (long)in.get(121 + inPos) << 50 & 18014398509481983L;
         out[18 + outPos] = (long)in.get(121 + inPos) >> 4 & 15L | (long)in.get(122 + inPos) << 4 & 4095L | (long)in.get(123 + inPos) << 12 & 1048575L | (long)in.get(124 + inPos) << 20 & 268435455L | (long)in.get(125 + inPos) << 28 & 68719476735L | (long)in.get(126 + inPos) << 36 & 17592186044415L | (long)in.get(127 + inPos) << 44 & 4503599627370495L | (long)in.get(128 + inPos) << 52 & 18014398509481983L;
         out[19 + outPos] = (long)in.get(128 + inPos) >> 2 & 63L | (long)in.get(129 + inPos) << 6 & 16383L | (long)in.get(130 + inPos) << 14 & 4194303L | (long)in.get(131 + inPos) << 22 & 1073741823L | (long)in.get(132 + inPos) << 30 & 274877906943L | (long)in.get(133 + inPos) << 38 & 70368744177663L | (long)in.get(134 + inPos) << 46 & 18014398509481983L;
         out[20 + outPos] = (long)in.get(135 + inPos) & 255L | (long)in.get(136 + inPos) << 8 & 65535L | (long)in.get(137 + inPos) << 16 & 16777215L | (long)in.get(138 + inPos) << 24 & 4294967295L | (long)in.get(139 + inPos) << 32 & 1099511627775L | (long)in.get(140 + inPos) << 40 & 281474976710655L | (long)in.get(141 + inPos) << 48 & 18014398509481983L;
         out[21 + outPos] = (long)in.get(141 + inPos) >> 6 & 3L | (long)in.get(142 + inPos) << 2 & 1023L | (long)in.get(143 + inPos) << 10 & 262143L | (long)in.get(144 + inPos) << 18 & 67108863L | (long)in.get(145 + inPos) << 26 & 17179869183L | (long)in.get(146 + inPos) << 34 & 4398046511103L | (long)in.get(147 + inPos) << 42 & 1125899906842623L | (long)in.get(148 + inPos) << 50 & 18014398509481983L;
         out[22 + outPos] = (long)in.get(148 + inPos) >> 4 & 15L | (long)in.get(149 + inPos) << 4 & 4095L | (long)in.get(150 + inPos) << 12 & 1048575L | (long)in.get(151 + inPos) << 20 & 268435455L | (long)in.get(152 + inPos) << 28 & 68719476735L | (long)in.get(153 + inPos) << 36 & 17592186044415L | (long)in.get(154 + inPos) << 44 & 4503599627370495L | (long)in.get(155 + inPos) << 52 & 18014398509481983L;
         out[23 + outPos] = (long)in.get(155 + inPos) >> 2 & 63L | (long)in.get(156 + inPos) << 6 & 16383L | (long)in.get(157 + inPos) << 14 & 4194303L | (long)in.get(158 + inPos) << 22 & 1073741823L | (long)in.get(159 + inPos) << 30 & 274877906943L | (long)in.get(160 + inPos) << 38 & 70368744177663L | (long)in.get(161 + inPos) << 46 & 18014398509481983L;
         out[24 + outPos] = (long)in.get(162 + inPos) & 255L | (long)in.get(163 + inPos) << 8 & 65535L | (long)in.get(164 + inPos) << 16 & 16777215L | (long)in.get(165 + inPos) << 24 & 4294967295L | (long)in.get(166 + inPos) << 32 & 1099511627775L | (long)in.get(167 + inPos) << 40 & 281474976710655L | (long)in.get(168 + inPos) << 48 & 18014398509481983L;
         out[25 + outPos] = (long)in.get(168 + inPos) >> 6 & 3L | (long)in.get(169 + inPos) << 2 & 1023L | (long)in.get(170 + inPos) << 10 & 262143L | (long)in.get(171 + inPos) << 18 & 67108863L | (long)in.get(172 + inPos) << 26 & 17179869183L | (long)in.get(173 + inPos) << 34 & 4398046511103L | (long)in.get(174 + inPos) << 42 & 1125899906842623L | (long)in.get(175 + inPos) << 50 & 18014398509481983L;
         out[26 + outPos] = (long)in.get(175 + inPos) >> 4 & 15L | (long)in.get(176 + inPos) << 4 & 4095L | (long)in.get(177 + inPos) << 12 & 1048575L | (long)in.get(178 + inPos) << 20 & 268435455L | (long)in.get(179 + inPos) << 28 & 68719476735L | (long)in.get(180 + inPos) << 36 & 17592186044415L | (long)in.get(181 + inPos) << 44 & 4503599627370495L | (long)in.get(182 + inPos) << 52 & 18014398509481983L;
         out[27 + outPos] = (long)in.get(182 + inPos) >> 2 & 63L | (long)in.get(183 + inPos) << 6 & 16383L | (long)in.get(184 + inPos) << 14 & 4194303L | (long)in.get(185 + inPos) << 22 & 1073741823L | (long)in.get(186 + inPos) << 30 & 274877906943L | (long)in.get(187 + inPos) << 38 & 70368744177663L | (long)in.get(188 + inPos) << 46 & 18014398509481983L;
         out[28 + outPos] = (long)in.get(189 + inPos) & 255L | (long)in.get(190 + inPos) << 8 & 65535L | (long)in.get(191 + inPos) << 16 & 16777215L | (long)in.get(192 + inPos) << 24 & 4294967295L | (long)in.get(193 + inPos) << 32 & 1099511627775L | (long)in.get(194 + inPos) << 40 & 281474976710655L | (long)in.get(195 + inPos) << 48 & 18014398509481983L;
         out[29 + outPos] = (long)in.get(195 + inPos) >> 6 & 3L | (long)in.get(196 + inPos) << 2 & 1023L | (long)in.get(197 + inPos) << 10 & 262143L | (long)in.get(198 + inPos) << 18 & 67108863L | (long)in.get(199 + inPos) << 26 & 17179869183L | (long)in.get(200 + inPos) << 34 & 4398046511103L | (long)in.get(201 + inPos) << 42 & 1125899906842623L | (long)in.get(202 + inPos) << 50 & 18014398509481983L;
         out[30 + outPos] = (long)in.get(202 + inPos) >> 4 & 15L | (long)in.get(203 + inPos) << 4 & 4095L | (long)in.get(204 + inPos) << 12 & 1048575L | (long)in.get(205 + inPos) << 20 & 268435455L | (long)in.get(206 + inPos) << 28 & 68719476735L | (long)in.get(207 + inPos) << 36 & 17592186044415L | (long)in.get(208 + inPos) << 44 & 4503599627370495L | (long)in.get(209 + inPos) << 52 & 18014398509481983L;
         out[31 + outPos] = (long)in.get(209 + inPos) >> 2 & 63L | (long)in.get(210 + inPos) << 6 & 16383L | (long)in.get(211 + inPos) << 14 & 4194303L | (long)in.get(212 + inPos) << 22 & 1073741823L | (long)in.get(213 + inPos) << 30 & 274877906943L | (long)in.get(214 + inPos) << 38 & 70368744177663L | (long)in.get(215 + inPos) << 46 & 18014398509481983L;
      }
   }

   private static final class Packer55 extends BytePackerForLong {
      private Packer55() {
         super(55);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 36028797018963967L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 36028797018963967L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 36028797018963967L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 36028797018963967L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 36028797018963967L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 36028797018963967L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 36028797018963967L) >>> 48 | (in[1 + inPos] & 36028797018963967L) << 7) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 36028797018963967L) >>> 1 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 36028797018963967L) >>> 9 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 36028797018963967L) >>> 17 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 36028797018963967L) >>> 25 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 36028797018963967L) >>> 33 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 36028797018963967L) >>> 41 & 255L));
         out[13 + outPos] = (byte)((int)(((in[1 + inPos] & 36028797018963967L) >>> 49 | (in[2 + inPos] & 36028797018963967L) << 6) & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 36028797018963967L) >>> 2 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 36028797018963967L) >>> 10 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 36028797018963967L) >>> 18 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 36028797018963967L) >>> 26 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 36028797018963967L) >>> 34 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 36028797018963967L) >>> 42 & 255L));
         out[20 + outPos] = (byte)((int)(((in[2 + inPos] & 36028797018963967L) >>> 50 | (in[3 + inPos] & 36028797018963967L) << 5) & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 36028797018963967L) >>> 3 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 36028797018963967L) >>> 11 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 36028797018963967L) >>> 19 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 36028797018963967L) >>> 27 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 36028797018963967L) >>> 35 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 36028797018963967L) >>> 43 & 255L));
         out[27 + outPos] = (byte)((int)(((in[3 + inPos] & 36028797018963967L) >>> 51 | (in[4 + inPos] & 36028797018963967L) << 4) & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 36028797018963967L) >>> 4 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 36028797018963967L) >>> 12 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 36028797018963967L) >>> 20 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 36028797018963967L) >>> 28 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 36028797018963967L) >>> 36 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 36028797018963967L) >>> 44 & 255L));
         out[34 + outPos] = (byte)((int)(((in[4 + inPos] & 36028797018963967L) >>> 52 | (in[5 + inPos] & 36028797018963967L) << 3) & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 36028797018963967L) >>> 5 & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 36028797018963967L) >>> 13 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 36028797018963967L) >>> 21 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 36028797018963967L) >>> 29 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 36028797018963967L) >>> 37 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 36028797018963967L) >>> 45 & 255L));
         out[41 + outPos] = (byte)((int)(((in[5 + inPos] & 36028797018963967L) >>> 53 | (in[6 + inPos] & 36028797018963967L) << 2) & 255L));
         out[42 + outPos] = (byte)((int)((in[6 + inPos] & 36028797018963967L) >>> 6 & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 36028797018963967L) >>> 14 & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 36028797018963967L) >>> 22 & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 36028797018963967L) >>> 30 & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 36028797018963967L) >>> 38 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 36028797018963967L) >>> 46 & 255L));
         out[48 + outPos] = (byte)((int)(((in[6 + inPos] & 36028797018963967L) >>> 54 | (in[7 + inPos] & 36028797018963967L) << 1) & 255L));
         out[49 + outPos] = (byte)((int)((in[7 + inPos] & 36028797018963967L) >>> 7 & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 36028797018963967L) >>> 15 & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 36028797018963967L) >>> 23 & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 36028797018963967L) >>> 31 & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 36028797018963967L) >>> 39 & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 36028797018963967L) >>> 47 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 36028797018963967L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 36028797018963967L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 36028797018963967L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 36028797018963967L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 36028797018963967L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 36028797018963967L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)(((in[0 + inPos] & 36028797018963967L) >>> 48 | (in[1 + inPos] & 36028797018963967L) << 7) & 255L));
         out[7 + outPos] = (byte)((int)((in[1 + inPos] & 36028797018963967L) >>> 1 & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 36028797018963967L) >>> 9 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 36028797018963967L) >>> 17 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 36028797018963967L) >>> 25 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 36028797018963967L) >>> 33 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 36028797018963967L) >>> 41 & 255L));
         out[13 + outPos] = (byte)((int)(((in[1 + inPos] & 36028797018963967L) >>> 49 | (in[2 + inPos] & 36028797018963967L) << 6) & 255L));
         out[14 + outPos] = (byte)((int)((in[2 + inPos] & 36028797018963967L) >>> 2 & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 36028797018963967L) >>> 10 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 36028797018963967L) >>> 18 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 36028797018963967L) >>> 26 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 36028797018963967L) >>> 34 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 36028797018963967L) >>> 42 & 255L));
         out[20 + outPos] = (byte)((int)(((in[2 + inPos] & 36028797018963967L) >>> 50 | (in[3 + inPos] & 36028797018963967L) << 5) & 255L));
         out[21 + outPos] = (byte)((int)((in[3 + inPos] & 36028797018963967L) >>> 3 & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 36028797018963967L) >>> 11 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 36028797018963967L) >>> 19 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 36028797018963967L) >>> 27 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 36028797018963967L) >>> 35 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 36028797018963967L) >>> 43 & 255L));
         out[27 + outPos] = (byte)((int)(((in[3 + inPos] & 36028797018963967L) >>> 51 | (in[4 + inPos] & 36028797018963967L) << 4) & 255L));
         out[28 + outPos] = (byte)((int)((in[4 + inPos] & 36028797018963967L) >>> 4 & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 36028797018963967L) >>> 12 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 36028797018963967L) >>> 20 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 36028797018963967L) >>> 28 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 36028797018963967L) >>> 36 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 36028797018963967L) >>> 44 & 255L));
         out[34 + outPos] = (byte)((int)(((in[4 + inPos] & 36028797018963967L) >>> 52 | (in[5 + inPos] & 36028797018963967L) << 3) & 255L));
         out[35 + outPos] = (byte)((int)((in[5 + inPos] & 36028797018963967L) >>> 5 & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 36028797018963967L) >>> 13 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 36028797018963967L) >>> 21 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 36028797018963967L) >>> 29 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 36028797018963967L) >>> 37 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 36028797018963967L) >>> 45 & 255L));
         out[41 + outPos] = (byte)((int)(((in[5 + inPos] & 36028797018963967L) >>> 53 | (in[6 + inPos] & 36028797018963967L) << 2) & 255L));
         out[42 + outPos] = (byte)((int)((in[6 + inPos] & 36028797018963967L) >>> 6 & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 36028797018963967L) >>> 14 & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 36028797018963967L) >>> 22 & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 36028797018963967L) >>> 30 & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 36028797018963967L) >>> 38 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 36028797018963967L) >>> 46 & 255L));
         out[48 + outPos] = (byte)((int)(((in[6 + inPos] & 36028797018963967L) >>> 54 | (in[7 + inPos] & 36028797018963967L) << 1) & 255L));
         out[49 + outPos] = (byte)((int)((in[7 + inPos] & 36028797018963967L) >>> 7 & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 36028797018963967L) >>> 15 & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 36028797018963967L) >>> 23 & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 36028797018963967L) >>> 31 & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 36028797018963967L) >>> 39 & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 36028797018963967L) >>> 47 & 255L));
         out[55 + outPos] = (byte)((int)(in[8 + inPos] & 36028797018963967L & 255L));
         out[56 + outPos] = (byte)((int)((in[8 + inPos] & 36028797018963967L) >>> 8 & 255L));
         out[57 + outPos] = (byte)((int)((in[8 + inPos] & 36028797018963967L) >>> 16 & 255L));
         out[58 + outPos] = (byte)((int)((in[8 + inPos] & 36028797018963967L) >>> 24 & 255L));
         out[59 + outPos] = (byte)((int)((in[8 + inPos] & 36028797018963967L) >>> 32 & 255L));
         out[60 + outPos] = (byte)((int)((in[8 + inPos] & 36028797018963967L) >>> 40 & 255L));
         out[61 + outPos] = (byte)((int)(((in[8 + inPos] & 36028797018963967L) >>> 48 | (in[9 + inPos] & 36028797018963967L) << 7) & 255L));
         out[62 + outPos] = (byte)((int)((in[9 + inPos] & 36028797018963967L) >>> 1 & 255L));
         out[63 + outPos] = (byte)((int)((in[9 + inPos] & 36028797018963967L) >>> 9 & 255L));
         out[64 + outPos] = (byte)((int)((in[9 + inPos] & 36028797018963967L) >>> 17 & 255L));
         out[65 + outPos] = (byte)((int)((in[9 + inPos] & 36028797018963967L) >>> 25 & 255L));
         out[66 + outPos] = (byte)((int)((in[9 + inPos] & 36028797018963967L) >>> 33 & 255L));
         out[67 + outPos] = (byte)((int)((in[9 + inPos] & 36028797018963967L) >>> 41 & 255L));
         out[68 + outPos] = (byte)((int)(((in[9 + inPos] & 36028797018963967L) >>> 49 | (in[10 + inPos] & 36028797018963967L) << 6) & 255L));
         out[69 + outPos] = (byte)((int)((in[10 + inPos] & 36028797018963967L) >>> 2 & 255L));
         out[70 + outPos] = (byte)((int)((in[10 + inPos] & 36028797018963967L) >>> 10 & 255L));
         out[71 + outPos] = (byte)((int)((in[10 + inPos] & 36028797018963967L) >>> 18 & 255L));
         out[72 + outPos] = (byte)((int)((in[10 + inPos] & 36028797018963967L) >>> 26 & 255L));
         out[73 + outPos] = (byte)((int)((in[10 + inPos] & 36028797018963967L) >>> 34 & 255L));
         out[74 + outPos] = (byte)((int)((in[10 + inPos] & 36028797018963967L) >>> 42 & 255L));
         out[75 + outPos] = (byte)((int)(((in[10 + inPos] & 36028797018963967L) >>> 50 | (in[11 + inPos] & 36028797018963967L) << 5) & 255L));
         out[76 + outPos] = (byte)((int)((in[11 + inPos] & 36028797018963967L) >>> 3 & 255L));
         out[77 + outPos] = (byte)((int)((in[11 + inPos] & 36028797018963967L) >>> 11 & 255L));
         out[78 + outPos] = (byte)((int)((in[11 + inPos] & 36028797018963967L) >>> 19 & 255L));
         out[79 + outPos] = (byte)((int)((in[11 + inPos] & 36028797018963967L) >>> 27 & 255L));
         out[80 + outPos] = (byte)((int)((in[11 + inPos] & 36028797018963967L) >>> 35 & 255L));
         out[81 + outPos] = (byte)((int)((in[11 + inPos] & 36028797018963967L) >>> 43 & 255L));
         out[82 + outPos] = (byte)((int)(((in[11 + inPos] & 36028797018963967L) >>> 51 | (in[12 + inPos] & 36028797018963967L) << 4) & 255L));
         out[83 + outPos] = (byte)((int)((in[12 + inPos] & 36028797018963967L) >>> 4 & 255L));
         out[84 + outPos] = (byte)((int)((in[12 + inPos] & 36028797018963967L) >>> 12 & 255L));
         out[85 + outPos] = (byte)((int)((in[12 + inPos] & 36028797018963967L) >>> 20 & 255L));
         out[86 + outPos] = (byte)((int)((in[12 + inPos] & 36028797018963967L) >>> 28 & 255L));
         out[87 + outPos] = (byte)((int)((in[12 + inPos] & 36028797018963967L) >>> 36 & 255L));
         out[88 + outPos] = (byte)((int)((in[12 + inPos] & 36028797018963967L) >>> 44 & 255L));
         out[89 + outPos] = (byte)((int)(((in[12 + inPos] & 36028797018963967L) >>> 52 | (in[13 + inPos] & 36028797018963967L) << 3) & 255L));
         out[90 + outPos] = (byte)((int)((in[13 + inPos] & 36028797018963967L) >>> 5 & 255L));
         out[91 + outPos] = (byte)((int)((in[13 + inPos] & 36028797018963967L) >>> 13 & 255L));
         out[92 + outPos] = (byte)((int)((in[13 + inPos] & 36028797018963967L) >>> 21 & 255L));
         out[93 + outPos] = (byte)((int)((in[13 + inPos] & 36028797018963967L) >>> 29 & 255L));
         out[94 + outPos] = (byte)((int)((in[13 + inPos] & 36028797018963967L) >>> 37 & 255L));
         out[95 + outPos] = (byte)((int)((in[13 + inPos] & 36028797018963967L) >>> 45 & 255L));
         out[96 + outPos] = (byte)((int)(((in[13 + inPos] & 36028797018963967L) >>> 53 | (in[14 + inPos] & 36028797018963967L) << 2) & 255L));
         out[97 + outPos] = (byte)((int)((in[14 + inPos] & 36028797018963967L) >>> 6 & 255L));
         out[98 + outPos] = (byte)((int)((in[14 + inPos] & 36028797018963967L) >>> 14 & 255L));
         out[99 + outPos] = (byte)((int)((in[14 + inPos] & 36028797018963967L) >>> 22 & 255L));
         out[100 + outPos] = (byte)((int)((in[14 + inPos] & 36028797018963967L) >>> 30 & 255L));
         out[101 + outPos] = (byte)((int)((in[14 + inPos] & 36028797018963967L) >>> 38 & 255L));
         out[102 + outPos] = (byte)((int)((in[14 + inPos] & 36028797018963967L) >>> 46 & 255L));
         out[103 + outPos] = (byte)((int)(((in[14 + inPos] & 36028797018963967L) >>> 54 | (in[15 + inPos] & 36028797018963967L) << 1) & 255L));
         out[104 + outPos] = (byte)((int)((in[15 + inPos] & 36028797018963967L) >>> 7 & 255L));
         out[105 + outPos] = (byte)((int)((in[15 + inPos] & 36028797018963967L) >>> 15 & 255L));
         out[106 + outPos] = (byte)((int)((in[15 + inPos] & 36028797018963967L) >>> 23 & 255L));
         out[107 + outPos] = (byte)((int)((in[15 + inPos] & 36028797018963967L) >>> 31 & 255L));
         out[108 + outPos] = (byte)((int)((in[15 + inPos] & 36028797018963967L) >>> 39 & 255L));
         out[109 + outPos] = (byte)((int)((in[15 + inPos] & 36028797018963967L) >>> 47 & 255L));
         out[110 + outPos] = (byte)((int)(in[16 + inPos] & 36028797018963967L & 255L));
         out[111 + outPos] = (byte)((int)((in[16 + inPos] & 36028797018963967L) >>> 8 & 255L));
         out[112 + outPos] = (byte)((int)((in[16 + inPos] & 36028797018963967L) >>> 16 & 255L));
         out[113 + outPos] = (byte)((int)((in[16 + inPos] & 36028797018963967L) >>> 24 & 255L));
         out[114 + outPos] = (byte)((int)((in[16 + inPos] & 36028797018963967L) >>> 32 & 255L));
         out[115 + outPos] = (byte)((int)((in[16 + inPos] & 36028797018963967L) >>> 40 & 255L));
         out[116 + outPos] = (byte)((int)(((in[16 + inPos] & 36028797018963967L) >>> 48 | (in[17 + inPos] & 36028797018963967L) << 7) & 255L));
         out[117 + outPos] = (byte)((int)((in[17 + inPos] & 36028797018963967L) >>> 1 & 255L));
         out[118 + outPos] = (byte)((int)((in[17 + inPos] & 36028797018963967L) >>> 9 & 255L));
         out[119 + outPos] = (byte)((int)((in[17 + inPos] & 36028797018963967L) >>> 17 & 255L));
         out[120 + outPos] = (byte)((int)((in[17 + inPos] & 36028797018963967L) >>> 25 & 255L));
         out[121 + outPos] = (byte)((int)((in[17 + inPos] & 36028797018963967L) >>> 33 & 255L));
         out[122 + outPos] = (byte)((int)((in[17 + inPos] & 36028797018963967L) >>> 41 & 255L));
         out[123 + outPos] = (byte)((int)(((in[17 + inPos] & 36028797018963967L) >>> 49 | (in[18 + inPos] & 36028797018963967L) << 6) & 255L));
         out[124 + outPos] = (byte)((int)((in[18 + inPos] & 36028797018963967L) >>> 2 & 255L));
         out[125 + outPos] = (byte)((int)((in[18 + inPos] & 36028797018963967L) >>> 10 & 255L));
         out[126 + outPos] = (byte)((int)((in[18 + inPos] & 36028797018963967L) >>> 18 & 255L));
         out[127 + outPos] = (byte)((int)((in[18 + inPos] & 36028797018963967L) >>> 26 & 255L));
         out[128 + outPos] = (byte)((int)((in[18 + inPos] & 36028797018963967L) >>> 34 & 255L));
         out[129 + outPos] = (byte)((int)((in[18 + inPos] & 36028797018963967L) >>> 42 & 255L));
         out[130 + outPos] = (byte)((int)(((in[18 + inPos] & 36028797018963967L) >>> 50 | (in[19 + inPos] & 36028797018963967L) << 5) & 255L));
         out[131 + outPos] = (byte)((int)((in[19 + inPos] & 36028797018963967L) >>> 3 & 255L));
         out[132 + outPos] = (byte)((int)((in[19 + inPos] & 36028797018963967L) >>> 11 & 255L));
         out[133 + outPos] = (byte)((int)((in[19 + inPos] & 36028797018963967L) >>> 19 & 255L));
         out[134 + outPos] = (byte)((int)((in[19 + inPos] & 36028797018963967L) >>> 27 & 255L));
         out[135 + outPos] = (byte)((int)((in[19 + inPos] & 36028797018963967L) >>> 35 & 255L));
         out[136 + outPos] = (byte)((int)((in[19 + inPos] & 36028797018963967L) >>> 43 & 255L));
         out[137 + outPos] = (byte)((int)(((in[19 + inPos] & 36028797018963967L) >>> 51 | (in[20 + inPos] & 36028797018963967L) << 4) & 255L));
         out[138 + outPos] = (byte)((int)((in[20 + inPos] & 36028797018963967L) >>> 4 & 255L));
         out[139 + outPos] = (byte)((int)((in[20 + inPos] & 36028797018963967L) >>> 12 & 255L));
         out[140 + outPos] = (byte)((int)((in[20 + inPos] & 36028797018963967L) >>> 20 & 255L));
         out[141 + outPos] = (byte)((int)((in[20 + inPos] & 36028797018963967L) >>> 28 & 255L));
         out[142 + outPos] = (byte)((int)((in[20 + inPos] & 36028797018963967L) >>> 36 & 255L));
         out[143 + outPos] = (byte)((int)((in[20 + inPos] & 36028797018963967L) >>> 44 & 255L));
         out[144 + outPos] = (byte)((int)(((in[20 + inPos] & 36028797018963967L) >>> 52 | (in[21 + inPos] & 36028797018963967L) << 3) & 255L));
         out[145 + outPos] = (byte)((int)((in[21 + inPos] & 36028797018963967L) >>> 5 & 255L));
         out[146 + outPos] = (byte)((int)((in[21 + inPos] & 36028797018963967L) >>> 13 & 255L));
         out[147 + outPos] = (byte)((int)((in[21 + inPos] & 36028797018963967L) >>> 21 & 255L));
         out[148 + outPos] = (byte)((int)((in[21 + inPos] & 36028797018963967L) >>> 29 & 255L));
         out[149 + outPos] = (byte)((int)((in[21 + inPos] & 36028797018963967L) >>> 37 & 255L));
         out[150 + outPos] = (byte)((int)((in[21 + inPos] & 36028797018963967L) >>> 45 & 255L));
         out[151 + outPos] = (byte)((int)(((in[21 + inPos] & 36028797018963967L) >>> 53 | (in[22 + inPos] & 36028797018963967L) << 2) & 255L));
         out[152 + outPos] = (byte)((int)((in[22 + inPos] & 36028797018963967L) >>> 6 & 255L));
         out[153 + outPos] = (byte)((int)((in[22 + inPos] & 36028797018963967L) >>> 14 & 255L));
         out[154 + outPos] = (byte)((int)((in[22 + inPos] & 36028797018963967L) >>> 22 & 255L));
         out[155 + outPos] = (byte)((int)((in[22 + inPos] & 36028797018963967L) >>> 30 & 255L));
         out[156 + outPos] = (byte)((int)((in[22 + inPos] & 36028797018963967L) >>> 38 & 255L));
         out[157 + outPos] = (byte)((int)((in[22 + inPos] & 36028797018963967L) >>> 46 & 255L));
         out[158 + outPos] = (byte)((int)(((in[22 + inPos] & 36028797018963967L) >>> 54 | (in[23 + inPos] & 36028797018963967L) << 1) & 255L));
         out[159 + outPos] = (byte)((int)((in[23 + inPos] & 36028797018963967L) >>> 7 & 255L));
         out[160 + outPos] = (byte)((int)((in[23 + inPos] & 36028797018963967L) >>> 15 & 255L));
         out[161 + outPos] = (byte)((int)((in[23 + inPos] & 36028797018963967L) >>> 23 & 255L));
         out[162 + outPos] = (byte)((int)((in[23 + inPos] & 36028797018963967L) >>> 31 & 255L));
         out[163 + outPos] = (byte)((int)((in[23 + inPos] & 36028797018963967L) >>> 39 & 255L));
         out[164 + outPos] = (byte)((int)((in[23 + inPos] & 36028797018963967L) >>> 47 & 255L));
         out[165 + outPos] = (byte)((int)(in[24 + inPos] & 36028797018963967L & 255L));
         out[166 + outPos] = (byte)((int)((in[24 + inPos] & 36028797018963967L) >>> 8 & 255L));
         out[167 + outPos] = (byte)((int)((in[24 + inPos] & 36028797018963967L) >>> 16 & 255L));
         out[168 + outPos] = (byte)((int)((in[24 + inPos] & 36028797018963967L) >>> 24 & 255L));
         out[169 + outPos] = (byte)((int)((in[24 + inPos] & 36028797018963967L) >>> 32 & 255L));
         out[170 + outPos] = (byte)((int)((in[24 + inPos] & 36028797018963967L) >>> 40 & 255L));
         out[171 + outPos] = (byte)((int)(((in[24 + inPos] & 36028797018963967L) >>> 48 | (in[25 + inPos] & 36028797018963967L) << 7) & 255L));
         out[172 + outPos] = (byte)((int)((in[25 + inPos] & 36028797018963967L) >>> 1 & 255L));
         out[173 + outPos] = (byte)((int)((in[25 + inPos] & 36028797018963967L) >>> 9 & 255L));
         out[174 + outPos] = (byte)((int)((in[25 + inPos] & 36028797018963967L) >>> 17 & 255L));
         out[175 + outPos] = (byte)((int)((in[25 + inPos] & 36028797018963967L) >>> 25 & 255L));
         out[176 + outPos] = (byte)((int)((in[25 + inPos] & 36028797018963967L) >>> 33 & 255L));
         out[177 + outPos] = (byte)((int)((in[25 + inPos] & 36028797018963967L) >>> 41 & 255L));
         out[178 + outPos] = (byte)((int)(((in[25 + inPos] & 36028797018963967L) >>> 49 | (in[26 + inPos] & 36028797018963967L) << 6) & 255L));
         out[179 + outPos] = (byte)((int)((in[26 + inPos] & 36028797018963967L) >>> 2 & 255L));
         out[180 + outPos] = (byte)((int)((in[26 + inPos] & 36028797018963967L) >>> 10 & 255L));
         out[181 + outPos] = (byte)((int)((in[26 + inPos] & 36028797018963967L) >>> 18 & 255L));
         out[182 + outPos] = (byte)((int)((in[26 + inPos] & 36028797018963967L) >>> 26 & 255L));
         out[183 + outPos] = (byte)((int)((in[26 + inPos] & 36028797018963967L) >>> 34 & 255L));
         out[184 + outPos] = (byte)((int)((in[26 + inPos] & 36028797018963967L) >>> 42 & 255L));
         out[185 + outPos] = (byte)((int)(((in[26 + inPos] & 36028797018963967L) >>> 50 | (in[27 + inPos] & 36028797018963967L) << 5) & 255L));
         out[186 + outPos] = (byte)((int)((in[27 + inPos] & 36028797018963967L) >>> 3 & 255L));
         out[187 + outPos] = (byte)((int)((in[27 + inPos] & 36028797018963967L) >>> 11 & 255L));
         out[188 + outPos] = (byte)((int)((in[27 + inPos] & 36028797018963967L) >>> 19 & 255L));
         out[189 + outPos] = (byte)((int)((in[27 + inPos] & 36028797018963967L) >>> 27 & 255L));
         out[190 + outPos] = (byte)((int)((in[27 + inPos] & 36028797018963967L) >>> 35 & 255L));
         out[191 + outPos] = (byte)((int)((in[27 + inPos] & 36028797018963967L) >>> 43 & 255L));
         out[192 + outPos] = (byte)((int)(((in[27 + inPos] & 36028797018963967L) >>> 51 | (in[28 + inPos] & 36028797018963967L) << 4) & 255L));
         out[193 + outPos] = (byte)((int)((in[28 + inPos] & 36028797018963967L) >>> 4 & 255L));
         out[194 + outPos] = (byte)((int)((in[28 + inPos] & 36028797018963967L) >>> 12 & 255L));
         out[195 + outPos] = (byte)((int)((in[28 + inPos] & 36028797018963967L) >>> 20 & 255L));
         out[196 + outPos] = (byte)((int)((in[28 + inPos] & 36028797018963967L) >>> 28 & 255L));
         out[197 + outPos] = (byte)((int)((in[28 + inPos] & 36028797018963967L) >>> 36 & 255L));
         out[198 + outPos] = (byte)((int)((in[28 + inPos] & 36028797018963967L) >>> 44 & 255L));
         out[199 + outPos] = (byte)((int)(((in[28 + inPos] & 36028797018963967L) >>> 52 | (in[29 + inPos] & 36028797018963967L) << 3) & 255L));
         out[200 + outPos] = (byte)((int)((in[29 + inPos] & 36028797018963967L) >>> 5 & 255L));
         out[201 + outPos] = (byte)((int)((in[29 + inPos] & 36028797018963967L) >>> 13 & 255L));
         out[202 + outPos] = (byte)((int)((in[29 + inPos] & 36028797018963967L) >>> 21 & 255L));
         out[203 + outPos] = (byte)((int)((in[29 + inPos] & 36028797018963967L) >>> 29 & 255L));
         out[204 + outPos] = (byte)((int)((in[29 + inPos] & 36028797018963967L) >>> 37 & 255L));
         out[205 + outPos] = (byte)((int)((in[29 + inPos] & 36028797018963967L) >>> 45 & 255L));
         out[206 + outPos] = (byte)((int)(((in[29 + inPos] & 36028797018963967L) >>> 53 | (in[30 + inPos] & 36028797018963967L) << 2) & 255L));
         out[207 + outPos] = (byte)((int)((in[30 + inPos] & 36028797018963967L) >>> 6 & 255L));
         out[208 + outPos] = (byte)((int)((in[30 + inPos] & 36028797018963967L) >>> 14 & 255L));
         out[209 + outPos] = (byte)((int)((in[30 + inPos] & 36028797018963967L) >>> 22 & 255L));
         out[210 + outPos] = (byte)((int)((in[30 + inPos] & 36028797018963967L) >>> 30 & 255L));
         out[211 + outPos] = (byte)((int)((in[30 + inPos] & 36028797018963967L) >>> 38 & 255L));
         out[212 + outPos] = (byte)((int)((in[30 + inPos] & 36028797018963967L) >>> 46 & 255L));
         out[213 + outPos] = (byte)((int)(((in[30 + inPos] & 36028797018963967L) >>> 54 | (in[31 + inPos] & 36028797018963967L) << 1) & 255L));
         out[214 + outPos] = (byte)((int)((in[31 + inPos] & 36028797018963967L) >>> 7 & 255L));
         out[215 + outPos] = (byte)((int)((in[31 + inPos] & 36028797018963967L) >>> 15 & 255L));
         out[216 + outPos] = (byte)((int)((in[31 + inPos] & 36028797018963967L) >>> 23 & 255L));
         out[217 + outPos] = (byte)((int)((in[31 + inPos] & 36028797018963967L) >>> 31 & 255L));
         out[218 + outPos] = (byte)((int)((in[31 + inPos] & 36028797018963967L) >>> 39 & 255L));
         out[219 + outPos] = (byte)((int)((in[31 + inPos] & 36028797018963967L) >>> 47 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 36028797018963967L;
         out[1 + outPos] = (long)in[6 + inPos] >> 7 & 1L | (long)in[7 + inPos] << 1 & 511L | (long)in[8 + inPos] << 9 & 131071L | (long)in[9 + inPos] << 17 & 33554431L | (long)in[10 + inPos] << 25 & 8589934591L | (long)in[11 + inPos] << 33 & 2199023255551L | (long)in[12 + inPos] << 41 & 562949953421311L | (long)in[13 + inPos] << 49 & 36028797018963967L;
         out[2 + outPos] = (long)in[13 + inPos] >> 6 & 3L | (long)in[14 + inPos] << 2 & 1023L | (long)in[15 + inPos] << 10 & 262143L | (long)in[16 + inPos] << 18 & 67108863L | (long)in[17 + inPos] << 26 & 17179869183L | (long)in[18 + inPos] << 34 & 4398046511103L | (long)in[19 + inPos] << 42 & 1125899906842623L | (long)in[20 + inPos] << 50 & 36028797018963967L;
         out[3 + outPos] = (long)in[20 + inPos] >> 5 & 7L | (long)in[21 + inPos] << 3 & 2047L | (long)in[22 + inPos] << 11 & 524287L | (long)in[23 + inPos] << 19 & 134217727L | (long)in[24 + inPos] << 27 & 34359738367L | (long)in[25 + inPos] << 35 & 8796093022207L | (long)in[26 + inPos] << 43 & 2251799813685247L | (long)in[27 + inPos] << 51 & 36028797018963967L;
         out[4 + outPos] = (long)in[27 + inPos] >> 4 & 15L | (long)in[28 + inPos] << 4 & 4095L | (long)in[29 + inPos] << 12 & 1048575L | (long)in[30 + inPos] << 20 & 268435455L | (long)in[31 + inPos] << 28 & 68719476735L | (long)in[32 + inPos] << 36 & 17592186044415L | (long)in[33 + inPos] << 44 & 4503599627370495L | (long)in[34 + inPos] << 52 & 36028797018963967L;
         out[5 + outPos] = (long)in[34 + inPos] >> 3 & 31L | (long)in[35 + inPos] << 5 & 8191L | (long)in[36 + inPos] << 13 & 2097151L | (long)in[37 + inPos] << 21 & 536870911L | (long)in[38 + inPos] << 29 & 137438953471L | (long)in[39 + inPos] << 37 & 35184372088831L | (long)in[40 + inPos] << 45 & 9007199254740991L | (long)in[41 + inPos] << 53 & 36028797018963967L;
         out[6 + outPos] = (long)in[41 + inPos] >> 2 & 63L | (long)in[42 + inPos] << 6 & 16383L | (long)in[43 + inPos] << 14 & 4194303L | (long)in[44 + inPos] << 22 & 1073741823L | (long)in[45 + inPos] << 30 & 274877906943L | (long)in[46 + inPos] << 38 & 70368744177663L | (long)in[47 + inPos] << 46 & 18014398509481983L | (long)in[48 + inPos] << 54 & 36028797018963967L;
         out[7 + outPos] = (long)in[48 + inPos] >> 1 & 127L | (long)in[49 + inPos] << 7 & 32767L | (long)in[50 + inPos] << 15 & 8388607L | (long)in[51 + inPos] << 23 & 2147483647L | (long)in[52 + inPos] << 31 & 549755813887L | (long)in[53 + inPos] << 39 & 140737488355327L | (long)in[54 + inPos] << 47 & 36028797018963967L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 36028797018963967L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 7 & 1L | (long)in.get(7 + inPos) << 1 & 511L | (long)in.get(8 + inPos) << 9 & 131071L | (long)in.get(9 + inPos) << 17 & 33554431L | (long)in.get(10 + inPos) << 25 & 8589934591L | (long)in.get(11 + inPos) << 33 & 2199023255551L | (long)in.get(12 + inPos) << 41 & 562949953421311L | (long)in.get(13 + inPos) << 49 & 36028797018963967L;
         out[2 + outPos] = (long)in.get(13 + inPos) >> 6 & 3L | (long)in.get(14 + inPos) << 2 & 1023L | (long)in.get(15 + inPos) << 10 & 262143L | (long)in.get(16 + inPos) << 18 & 67108863L | (long)in.get(17 + inPos) << 26 & 17179869183L | (long)in.get(18 + inPos) << 34 & 4398046511103L | (long)in.get(19 + inPos) << 42 & 1125899906842623L | (long)in.get(20 + inPos) << 50 & 36028797018963967L;
         out[3 + outPos] = (long)in.get(20 + inPos) >> 5 & 7L | (long)in.get(21 + inPos) << 3 & 2047L | (long)in.get(22 + inPos) << 11 & 524287L | (long)in.get(23 + inPos) << 19 & 134217727L | (long)in.get(24 + inPos) << 27 & 34359738367L | (long)in.get(25 + inPos) << 35 & 8796093022207L | (long)in.get(26 + inPos) << 43 & 2251799813685247L | (long)in.get(27 + inPos) << 51 & 36028797018963967L;
         out[4 + outPos] = (long)in.get(27 + inPos) >> 4 & 15L | (long)in.get(28 + inPos) << 4 & 4095L | (long)in.get(29 + inPos) << 12 & 1048575L | (long)in.get(30 + inPos) << 20 & 268435455L | (long)in.get(31 + inPos) << 28 & 68719476735L | (long)in.get(32 + inPos) << 36 & 17592186044415L | (long)in.get(33 + inPos) << 44 & 4503599627370495L | (long)in.get(34 + inPos) << 52 & 36028797018963967L;
         out[5 + outPos] = (long)in.get(34 + inPos) >> 3 & 31L | (long)in.get(35 + inPos) << 5 & 8191L | (long)in.get(36 + inPos) << 13 & 2097151L | (long)in.get(37 + inPos) << 21 & 536870911L | (long)in.get(38 + inPos) << 29 & 137438953471L | (long)in.get(39 + inPos) << 37 & 35184372088831L | (long)in.get(40 + inPos) << 45 & 9007199254740991L | (long)in.get(41 + inPos) << 53 & 36028797018963967L;
         out[6 + outPos] = (long)in.get(41 + inPos) >> 2 & 63L | (long)in.get(42 + inPos) << 6 & 16383L | (long)in.get(43 + inPos) << 14 & 4194303L | (long)in.get(44 + inPos) << 22 & 1073741823L | (long)in.get(45 + inPos) << 30 & 274877906943L | (long)in.get(46 + inPos) << 38 & 70368744177663L | (long)in.get(47 + inPos) << 46 & 18014398509481983L | (long)in.get(48 + inPos) << 54 & 36028797018963967L;
         out[7 + outPos] = (long)in.get(48 + inPos) >> 1 & 127L | (long)in.get(49 + inPos) << 7 & 32767L | (long)in.get(50 + inPos) << 15 & 8388607L | (long)in.get(51 + inPos) << 23 & 2147483647L | (long)in.get(52 + inPos) << 31 & 549755813887L | (long)in.get(53 + inPos) << 39 & 140737488355327L | (long)in.get(54 + inPos) << 47 & 36028797018963967L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 36028797018963967L;
         out[1 + outPos] = (long)in[6 + inPos] >> 7 & 1L | (long)in[7 + inPos] << 1 & 511L | (long)in[8 + inPos] << 9 & 131071L | (long)in[9 + inPos] << 17 & 33554431L | (long)in[10 + inPos] << 25 & 8589934591L | (long)in[11 + inPos] << 33 & 2199023255551L | (long)in[12 + inPos] << 41 & 562949953421311L | (long)in[13 + inPos] << 49 & 36028797018963967L;
         out[2 + outPos] = (long)in[13 + inPos] >> 6 & 3L | (long)in[14 + inPos] << 2 & 1023L | (long)in[15 + inPos] << 10 & 262143L | (long)in[16 + inPos] << 18 & 67108863L | (long)in[17 + inPos] << 26 & 17179869183L | (long)in[18 + inPos] << 34 & 4398046511103L | (long)in[19 + inPos] << 42 & 1125899906842623L | (long)in[20 + inPos] << 50 & 36028797018963967L;
         out[3 + outPos] = (long)in[20 + inPos] >> 5 & 7L | (long)in[21 + inPos] << 3 & 2047L | (long)in[22 + inPos] << 11 & 524287L | (long)in[23 + inPos] << 19 & 134217727L | (long)in[24 + inPos] << 27 & 34359738367L | (long)in[25 + inPos] << 35 & 8796093022207L | (long)in[26 + inPos] << 43 & 2251799813685247L | (long)in[27 + inPos] << 51 & 36028797018963967L;
         out[4 + outPos] = (long)in[27 + inPos] >> 4 & 15L | (long)in[28 + inPos] << 4 & 4095L | (long)in[29 + inPos] << 12 & 1048575L | (long)in[30 + inPos] << 20 & 268435455L | (long)in[31 + inPos] << 28 & 68719476735L | (long)in[32 + inPos] << 36 & 17592186044415L | (long)in[33 + inPos] << 44 & 4503599627370495L | (long)in[34 + inPos] << 52 & 36028797018963967L;
         out[5 + outPos] = (long)in[34 + inPos] >> 3 & 31L | (long)in[35 + inPos] << 5 & 8191L | (long)in[36 + inPos] << 13 & 2097151L | (long)in[37 + inPos] << 21 & 536870911L | (long)in[38 + inPos] << 29 & 137438953471L | (long)in[39 + inPos] << 37 & 35184372088831L | (long)in[40 + inPos] << 45 & 9007199254740991L | (long)in[41 + inPos] << 53 & 36028797018963967L;
         out[6 + outPos] = (long)in[41 + inPos] >> 2 & 63L | (long)in[42 + inPos] << 6 & 16383L | (long)in[43 + inPos] << 14 & 4194303L | (long)in[44 + inPos] << 22 & 1073741823L | (long)in[45 + inPos] << 30 & 274877906943L | (long)in[46 + inPos] << 38 & 70368744177663L | (long)in[47 + inPos] << 46 & 18014398509481983L | (long)in[48 + inPos] << 54 & 36028797018963967L;
         out[7 + outPos] = (long)in[48 + inPos] >> 1 & 127L | (long)in[49 + inPos] << 7 & 32767L | (long)in[50 + inPos] << 15 & 8388607L | (long)in[51 + inPos] << 23 & 2147483647L | (long)in[52 + inPos] << 31 & 549755813887L | (long)in[53 + inPos] << 39 & 140737488355327L | (long)in[54 + inPos] << 47 & 36028797018963967L;
         out[8 + outPos] = (long)in[55 + inPos] & 255L | (long)in[56 + inPos] << 8 & 65535L | (long)in[57 + inPos] << 16 & 16777215L | (long)in[58 + inPos] << 24 & 4294967295L | (long)in[59 + inPos] << 32 & 1099511627775L | (long)in[60 + inPos] << 40 & 281474976710655L | (long)in[61 + inPos] << 48 & 36028797018963967L;
         out[9 + outPos] = (long)in[61 + inPos] >> 7 & 1L | (long)in[62 + inPos] << 1 & 511L | (long)in[63 + inPos] << 9 & 131071L | (long)in[64 + inPos] << 17 & 33554431L | (long)in[65 + inPos] << 25 & 8589934591L | (long)in[66 + inPos] << 33 & 2199023255551L | (long)in[67 + inPos] << 41 & 562949953421311L | (long)in[68 + inPos] << 49 & 36028797018963967L;
         out[10 + outPos] = (long)in[68 + inPos] >> 6 & 3L | (long)in[69 + inPos] << 2 & 1023L | (long)in[70 + inPos] << 10 & 262143L | (long)in[71 + inPos] << 18 & 67108863L | (long)in[72 + inPos] << 26 & 17179869183L | (long)in[73 + inPos] << 34 & 4398046511103L | (long)in[74 + inPos] << 42 & 1125899906842623L | (long)in[75 + inPos] << 50 & 36028797018963967L;
         out[11 + outPos] = (long)in[75 + inPos] >> 5 & 7L | (long)in[76 + inPos] << 3 & 2047L | (long)in[77 + inPos] << 11 & 524287L | (long)in[78 + inPos] << 19 & 134217727L | (long)in[79 + inPos] << 27 & 34359738367L | (long)in[80 + inPos] << 35 & 8796093022207L | (long)in[81 + inPos] << 43 & 2251799813685247L | (long)in[82 + inPos] << 51 & 36028797018963967L;
         out[12 + outPos] = (long)in[82 + inPos] >> 4 & 15L | (long)in[83 + inPos] << 4 & 4095L | (long)in[84 + inPos] << 12 & 1048575L | (long)in[85 + inPos] << 20 & 268435455L | (long)in[86 + inPos] << 28 & 68719476735L | (long)in[87 + inPos] << 36 & 17592186044415L | (long)in[88 + inPos] << 44 & 4503599627370495L | (long)in[89 + inPos] << 52 & 36028797018963967L;
         out[13 + outPos] = (long)in[89 + inPos] >> 3 & 31L | (long)in[90 + inPos] << 5 & 8191L | (long)in[91 + inPos] << 13 & 2097151L | (long)in[92 + inPos] << 21 & 536870911L | (long)in[93 + inPos] << 29 & 137438953471L | (long)in[94 + inPos] << 37 & 35184372088831L | (long)in[95 + inPos] << 45 & 9007199254740991L | (long)in[96 + inPos] << 53 & 36028797018963967L;
         out[14 + outPos] = (long)in[96 + inPos] >> 2 & 63L | (long)in[97 + inPos] << 6 & 16383L | (long)in[98 + inPos] << 14 & 4194303L | (long)in[99 + inPos] << 22 & 1073741823L | (long)in[100 + inPos] << 30 & 274877906943L | (long)in[101 + inPos] << 38 & 70368744177663L | (long)in[102 + inPos] << 46 & 18014398509481983L | (long)in[103 + inPos] << 54 & 36028797018963967L;
         out[15 + outPos] = (long)in[103 + inPos] >> 1 & 127L | (long)in[104 + inPos] << 7 & 32767L | (long)in[105 + inPos] << 15 & 8388607L | (long)in[106 + inPos] << 23 & 2147483647L | (long)in[107 + inPos] << 31 & 549755813887L | (long)in[108 + inPos] << 39 & 140737488355327L | (long)in[109 + inPos] << 47 & 36028797018963967L;
         out[16 + outPos] = (long)in[110 + inPos] & 255L | (long)in[111 + inPos] << 8 & 65535L | (long)in[112 + inPos] << 16 & 16777215L | (long)in[113 + inPos] << 24 & 4294967295L | (long)in[114 + inPos] << 32 & 1099511627775L | (long)in[115 + inPos] << 40 & 281474976710655L | (long)in[116 + inPos] << 48 & 36028797018963967L;
         out[17 + outPos] = (long)in[116 + inPos] >> 7 & 1L | (long)in[117 + inPos] << 1 & 511L | (long)in[118 + inPos] << 9 & 131071L | (long)in[119 + inPos] << 17 & 33554431L | (long)in[120 + inPos] << 25 & 8589934591L | (long)in[121 + inPos] << 33 & 2199023255551L | (long)in[122 + inPos] << 41 & 562949953421311L | (long)in[123 + inPos] << 49 & 36028797018963967L;
         out[18 + outPos] = (long)in[123 + inPos] >> 6 & 3L | (long)in[124 + inPos] << 2 & 1023L | (long)in[125 + inPos] << 10 & 262143L | (long)in[126 + inPos] << 18 & 67108863L | (long)in[127 + inPos] << 26 & 17179869183L | (long)in[128 + inPos] << 34 & 4398046511103L | (long)in[129 + inPos] << 42 & 1125899906842623L | (long)in[130 + inPos] << 50 & 36028797018963967L;
         out[19 + outPos] = (long)in[130 + inPos] >> 5 & 7L | (long)in[131 + inPos] << 3 & 2047L | (long)in[132 + inPos] << 11 & 524287L | (long)in[133 + inPos] << 19 & 134217727L | (long)in[134 + inPos] << 27 & 34359738367L | (long)in[135 + inPos] << 35 & 8796093022207L | (long)in[136 + inPos] << 43 & 2251799813685247L | (long)in[137 + inPos] << 51 & 36028797018963967L;
         out[20 + outPos] = (long)in[137 + inPos] >> 4 & 15L | (long)in[138 + inPos] << 4 & 4095L | (long)in[139 + inPos] << 12 & 1048575L | (long)in[140 + inPos] << 20 & 268435455L | (long)in[141 + inPos] << 28 & 68719476735L | (long)in[142 + inPos] << 36 & 17592186044415L | (long)in[143 + inPos] << 44 & 4503599627370495L | (long)in[144 + inPos] << 52 & 36028797018963967L;
         out[21 + outPos] = (long)in[144 + inPos] >> 3 & 31L | (long)in[145 + inPos] << 5 & 8191L | (long)in[146 + inPos] << 13 & 2097151L | (long)in[147 + inPos] << 21 & 536870911L | (long)in[148 + inPos] << 29 & 137438953471L | (long)in[149 + inPos] << 37 & 35184372088831L | (long)in[150 + inPos] << 45 & 9007199254740991L | (long)in[151 + inPos] << 53 & 36028797018963967L;
         out[22 + outPos] = (long)in[151 + inPos] >> 2 & 63L | (long)in[152 + inPos] << 6 & 16383L | (long)in[153 + inPos] << 14 & 4194303L | (long)in[154 + inPos] << 22 & 1073741823L | (long)in[155 + inPos] << 30 & 274877906943L | (long)in[156 + inPos] << 38 & 70368744177663L | (long)in[157 + inPos] << 46 & 18014398509481983L | (long)in[158 + inPos] << 54 & 36028797018963967L;
         out[23 + outPos] = (long)in[158 + inPos] >> 1 & 127L | (long)in[159 + inPos] << 7 & 32767L | (long)in[160 + inPos] << 15 & 8388607L | (long)in[161 + inPos] << 23 & 2147483647L | (long)in[162 + inPos] << 31 & 549755813887L | (long)in[163 + inPos] << 39 & 140737488355327L | (long)in[164 + inPos] << 47 & 36028797018963967L;
         out[24 + outPos] = (long)in[165 + inPos] & 255L | (long)in[166 + inPos] << 8 & 65535L | (long)in[167 + inPos] << 16 & 16777215L | (long)in[168 + inPos] << 24 & 4294967295L | (long)in[169 + inPos] << 32 & 1099511627775L | (long)in[170 + inPos] << 40 & 281474976710655L | (long)in[171 + inPos] << 48 & 36028797018963967L;
         out[25 + outPos] = (long)in[171 + inPos] >> 7 & 1L | (long)in[172 + inPos] << 1 & 511L | (long)in[173 + inPos] << 9 & 131071L | (long)in[174 + inPos] << 17 & 33554431L | (long)in[175 + inPos] << 25 & 8589934591L | (long)in[176 + inPos] << 33 & 2199023255551L | (long)in[177 + inPos] << 41 & 562949953421311L | (long)in[178 + inPos] << 49 & 36028797018963967L;
         out[26 + outPos] = (long)in[178 + inPos] >> 6 & 3L | (long)in[179 + inPos] << 2 & 1023L | (long)in[180 + inPos] << 10 & 262143L | (long)in[181 + inPos] << 18 & 67108863L | (long)in[182 + inPos] << 26 & 17179869183L | (long)in[183 + inPos] << 34 & 4398046511103L | (long)in[184 + inPos] << 42 & 1125899906842623L | (long)in[185 + inPos] << 50 & 36028797018963967L;
         out[27 + outPos] = (long)in[185 + inPos] >> 5 & 7L | (long)in[186 + inPos] << 3 & 2047L | (long)in[187 + inPos] << 11 & 524287L | (long)in[188 + inPos] << 19 & 134217727L | (long)in[189 + inPos] << 27 & 34359738367L | (long)in[190 + inPos] << 35 & 8796093022207L | (long)in[191 + inPos] << 43 & 2251799813685247L | (long)in[192 + inPos] << 51 & 36028797018963967L;
         out[28 + outPos] = (long)in[192 + inPos] >> 4 & 15L | (long)in[193 + inPos] << 4 & 4095L | (long)in[194 + inPos] << 12 & 1048575L | (long)in[195 + inPos] << 20 & 268435455L | (long)in[196 + inPos] << 28 & 68719476735L | (long)in[197 + inPos] << 36 & 17592186044415L | (long)in[198 + inPos] << 44 & 4503599627370495L | (long)in[199 + inPos] << 52 & 36028797018963967L;
         out[29 + outPos] = (long)in[199 + inPos] >> 3 & 31L | (long)in[200 + inPos] << 5 & 8191L | (long)in[201 + inPos] << 13 & 2097151L | (long)in[202 + inPos] << 21 & 536870911L | (long)in[203 + inPos] << 29 & 137438953471L | (long)in[204 + inPos] << 37 & 35184372088831L | (long)in[205 + inPos] << 45 & 9007199254740991L | (long)in[206 + inPos] << 53 & 36028797018963967L;
         out[30 + outPos] = (long)in[206 + inPos] >> 2 & 63L | (long)in[207 + inPos] << 6 & 16383L | (long)in[208 + inPos] << 14 & 4194303L | (long)in[209 + inPos] << 22 & 1073741823L | (long)in[210 + inPos] << 30 & 274877906943L | (long)in[211 + inPos] << 38 & 70368744177663L | (long)in[212 + inPos] << 46 & 18014398509481983L | (long)in[213 + inPos] << 54 & 36028797018963967L;
         out[31 + outPos] = (long)in[213 + inPos] >> 1 & 127L | (long)in[214 + inPos] << 7 & 32767L | (long)in[215 + inPos] << 15 & 8388607L | (long)in[216 + inPos] << 23 & 2147483647L | (long)in[217 + inPos] << 31 & 549755813887L | (long)in[218 + inPos] << 39 & 140737488355327L | (long)in[219 + inPos] << 47 & 36028797018963967L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 36028797018963967L;
         out[1 + outPos] = (long)in.get(6 + inPos) >> 7 & 1L | (long)in.get(7 + inPos) << 1 & 511L | (long)in.get(8 + inPos) << 9 & 131071L | (long)in.get(9 + inPos) << 17 & 33554431L | (long)in.get(10 + inPos) << 25 & 8589934591L | (long)in.get(11 + inPos) << 33 & 2199023255551L | (long)in.get(12 + inPos) << 41 & 562949953421311L | (long)in.get(13 + inPos) << 49 & 36028797018963967L;
         out[2 + outPos] = (long)in.get(13 + inPos) >> 6 & 3L | (long)in.get(14 + inPos) << 2 & 1023L | (long)in.get(15 + inPos) << 10 & 262143L | (long)in.get(16 + inPos) << 18 & 67108863L | (long)in.get(17 + inPos) << 26 & 17179869183L | (long)in.get(18 + inPos) << 34 & 4398046511103L | (long)in.get(19 + inPos) << 42 & 1125899906842623L | (long)in.get(20 + inPos) << 50 & 36028797018963967L;
         out[3 + outPos] = (long)in.get(20 + inPos) >> 5 & 7L | (long)in.get(21 + inPos) << 3 & 2047L | (long)in.get(22 + inPos) << 11 & 524287L | (long)in.get(23 + inPos) << 19 & 134217727L | (long)in.get(24 + inPos) << 27 & 34359738367L | (long)in.get(25 + inPos) << 35 & 8796093022207L | (long)in.get(26 + inPos) << 43 & 2251799813685247L | (long)in.get(27 + inPos) << 51 & 36028797018963967L;
         out[4 + outPos] = (long)in.get(27 + inPos) >> 4 & 15L | (long)in.get(28 + inPos) << 4 & 4095L | (long)in.get(29 + inPos) << 12 & 1048575L | (long)in.get(30 + inPos) << 20 & 268435455L | (long)in.get(31 + inPos) << 28 & 68719476735L | (long)in.get(32 + inPos) << 36 & 17592186044415L | (long)in.get(33 + inPos) << 44 & 4503599627370495L | (long)in.get(34 + inPos) << 52 & 36028797018963967L;
         out[5 + outPos] = (long)in.get(34 + inPos) >> 3 & 31L | (long)in.get(35 + inPos) << 5 & 8191L | (long)in.get(36 + inPos) << 13 & 2097151L | (long)in.get(37 + inPos) << 21 & 536870911L | (long)in.get(38 + inPos) << 29 & 137438953471L | (long)in.get(39 + inPos) << 37 & 35184372088831L | (long)in.get(40 + inPos) << 45 & 9007199254740991L | (long)in.get(41 + inPos) << 53 & 36028797018963967L;
         out[6 + outPos] = (long)in.get(41 + inPos) >> 2 & 63L | (long)in.get(42 + inPos) << 6 & 16383L | (long)in.get(43 + inPos) << 14 & 4194303L | (long)in.get(44 + inPos) << 22 & 1073741823L | (long)in.get(45 + inPos) << 30 & 274877906943L | (long)in.get(46 + inPos) << 38 & 70368744177663L | (long)in.get(47 + inPos) << 46 & 18014398509481983L | (long)in.get(48 + inPos) << 54 & 36028797018963967L;
         out[7 + outPos] = (long)in.get(48 + inPos) >> 1 & 127L | (long)in.get(49 + inPos) << 7 & 32767L | (long)in.get(50 + inPos) << 15 & 8388607L | (long)in.get(51 + inPos) << 23 & 2147483647L | (long)in.get(52 + inPos) << 31 & 549755813887L | (long)in.get(53 + inPos) << 39 & 140737488355327L | (long)in.get(54 + inPos) << 47 & 36028797018963967L;
         out[8 + outPos] = (long)in.get(55 + inPos) & 255L | (long)in.get(56 + inPos) << 8 & 65535L | (long)in.get(57 + inPos) << 16 & 16777215L | (long)in.get(58 + inPos) << 24 & 4294967295L | (long)in.get(59 + inPos) << 32 & 1099511627775L | (long)in.get(60 + inPos) << 40 & 281474976710655L | (long)in.get(61 + inPos) << 48 & 36028797018963967L;
         out[9 + outPos] = (long)in.get(61 + inPos) >> 7 & 1L | (long)in.get(62 + inPos) << 1 & 511L | (long)in.get(63 + inPos) << 9 & 131071L | (long)in.get(64 + inPos) << 17 & 33554431L | (long)in.get(65 + inPos) << 25 & 8589934591L | (long)in.get(66 + inPos) << 33 & 2199023255551L | (long)in.get(67 + inPos) << 41 & 562949953421311L | (long)in.get(68 + inPos) << 49 & 36028797018963967L;
         out[10 + outPos] = (long)in.get(68 + inPos) >> 6 & 3L | (long)in.get(69 + inPos) << 2 & 1023L | (long)in.get(70 + inPos) << 10 & 262143L | (long)in.get(71 + inPos) << 18 & 67108863L | (long)in.get(72 + inPos) << 26 & 17179869183L | (long)in.get(73 + inPos) << 34 & 4398046511103L | (long)in.get(74 + inPos) << 42 & 1125899906842623L | (long)in.get(75 + inPos) << 50 & 36028797018963967L;
         out[11 + outPos] = (long)in.get(75 + inPos) >> 5 & 7L | (long)in.get(76 + inPos) << 3 & 2047L | (long)in.get(77 + inPos) << 11 & 524287L | (long)in.get(78 + inPos) << 19 & 134217727L | (long)in.get(79 + inPos) << 27 & 34359738367L | (long)in.get(80 + inPos) << 35 & 8796093022207L | (long)in.get(81 + inPos) << 43 & 2251799813685247L | (long)in.get(82 + inPos) << 51 & 36028797018963967L;
         out[12 + outPos] = (long)in.get(82 + inPos) >> 4 & 15L | (long)in.get(83 + inPos) << 4 & 4095L | (long)in.get(84 + inPos) << 12 & 1048575L | (long)in.get(85 + inPos) << 20 & 268435455L | (long)in.get(86 + inPos) << 28 & 68719476735L | (long)in.get(87 + inPos) << 36 & 17592186044415L | (long)in.get(88 + inPos) << 44 & 4503599627370495L | (long)in.get(89 + inPos) << 52 & 36028797018963967L;
         out[13 + outPos] = (long)in.get(89 + inPos) >> 3 & 31L | (long)in.get(90 + inPos) << 5 & 8191L | (long)in.get(91 + inPos) << 13 & 2097151L | (long)in.get(92 + inPos) << 21 & 536870911L | (long)in.get(93 + inPos) << 29 & 137438953471L | (long)in.get(94 + inPos) << 37 & 35184372088831L | (long)in.get(95 + inPos) << 45 & 9007199254740991L | (long)in.get(96 + inPos) << 53 & 36028797018963967L;
         out[14 + outPos] = (long)in.get(96 + inPos) >> 2 & 63L | (long)in.get(97 + inPos) << 6 & 16383L | (long)in.get(98 + inPos) << 14 & 4194303L | (long)in.get(99 + inPos) << 22 & 1073741823L | (long)in.get(100 + inPos) << 30 & 274877906943L | (long)in.get(101 + inPos) << 38 & 70368744177663L | (long)in.get(102 + inPos) << 46 & 18014398509481983L | (long)in.get(103 + inPos) << 54 & 36028797018963967L;
         out[15 + outPos] = (long)in.get(103 + inPos) >> 1 & 127L | (long)in.get(104 + inPos) << 7 & 32767L | (long)in.get(105 + inPos) << 15 & 8388607L | (long)in.get(106 + inPos) << 23 & 2147483647L | (long)in.get(107 + inPos) << 31 & 549755813887L | (long)in.get(108 + inPos) << 39 & 140737488355327L | (long)in.get(109 + inPos) << 47 & 36028797018963967L;
         out[16 + outPos] = (long)in.get(110 + inPos) & 255L | (long)in.get(111 + inPos) << 8 & 65535L | (long)in.get(112 + inPos) << 16 & 16777215L | (long)in.get(113 + inPos) << 24 & 4294967295L | (long)in.get(114 + inPos) << 32 & 1099511627775L | (long)in.get(115 + inPos) << 40 & 281474976710655L | (long)in.get(116 + inPos) << 48 & 36028797018963967L;
         out[17 + outPos] = (long)in.get(116 + inPos) >> 7 & 1L | (long)in.get(117 + inPos) << 1 & 511L | (long)in.get(118 + inPos) << 9 & 131071L | (long)in.get(119 + inPos) << 17 & 33554431L | (long)in.get(120 + inPos) << 25 & 8589934591L | (long)in.get(121 + inPos) << 33 & 2199023255551L | (long)in.get(122 + inPos) << 41 & 562949953421311L | (long)in.get(123 + inPos) << 49 & 36028797018963967L;
         out[18 + outPos] = (long)in.get(123 + inPos) >> 6 & 3L | (long)in.get(124 + inPos) << 2 & 1023L | (long)in.get(125 + inPos) << 10 & 262143L | (long)in.get(126 + inPos) << 18 & 67108863L | (long)in.get(127 + inPos) << 26 & 17179869183L | (long)in.get(128 + inPos) << 34 & 4398046511103L | (long)in.get(129 + inPos) << 42 & 1125899906842623L | (long)in.get(130 + inPos) << 50 & 36028797018963967L;
         out[19 + outPos] = (long)in.get(130 + inPos) >> 5 & 7L | (long)in.get(131 + inPos) << 3 & 2047L | (long)in.get(132 + inPos) << 11 & 524287L | (long)in.get(133 + inPos) << 19 & 134217727L | (long)in.get(134 + inPos) << 27 & 34359738367L | (long)in.get(135 + inPos) << 35 & 8796093022207L | (long)in.get(136 + inPos) << 43 & 2251799813685247L | (long)in.get(137 + inPos) << 51 & 36028797018963967L;
         out[20 + outPos] = (long)in.get(137 + inPos) >> 4 & 15L | (long)in.get(138 + inPos) << 4 & 4095L | (long)in.get(139 + inPos) << 12 & 1048575L | (long)in.get(140 + inPos) << 20 & 268435455L | (long)in.get(141 + inPos) << 28 & 68719476735L | (long)in.get(142 + inPos) << 36 & 17592186044415L | (long)in.get(143 + inPos) << 44 & 4503599627370495L | (long)in.get(144 + inPos) << 52 & 36028797018963967L;
         out[21 + outPos] = (long)in.get(144 + inPos) >> 3 & 31L | (long)in.get(145 + inPos) << 5 & 8191L | (long)in.get(146 + inPos) << 13 & 2097151L | (long)in.get(147 + inPos) << 21 & 536870911L | (long)in.get(148 + inPos) << 29 & 137438953471L | (long)in.get(149 + inPos) << 37 & 35184372088831L | (long)in.get(150 + inPos) << 45 & 9007199254740991L | (long)in.get(151 + inPos) << 53 & 36028797018963967L;
         out[22 + outPos] = (long)in.get(151 + inPos) >> 2 & 63L | (long)in.get(152 + inPos) << 6 & 16383L | (long)in.get(153 + inPos) << 14 & 4194303L | (long)in.get(154 + inPos) << 22 & 1073741823L | (long)in.get(155 + inPos) << 30 & 274877906943L | (long)in.get(156 + inPos) << 38 & 70368744177663L | (long)in.get(157 + inPos) << 46 & 18014398509481983L | (long)in.get(158 + inPos) << 54 & 36028797018963967L;
         out[23 + outPos] = (long)in.get(158 + inPos) >> 1 & 127L | (long)in.get(159 + inPos) << 7 & 32767L | (long)in.get(160 + inPos) << 15 & 8388607L | (long)in.get(161 + inPos) << 23 & 2147483647L | (long)in.get(162 + inPos) << 31 & 549755813887L | (long)in.get(163 + inPos) << 39 & 140737488355327L | (long)in.get(164 + inPos) << 47 & 36028797018963967L;
         out[24 + outPos] = (long)in.get(165 + inPos) & 255L | (long)in.get(166 + inPos) << 8 & 65535L | (long)in.get(167 + inPos) << 16 & 16777215L | (long)in.get(168 + inPos) << 24 & 4294967295L | (long)in.get(169 + inPos) << 32 & 1099511627775L | (long)in.get(170 + inPos) << 40 & 281474976710655L | (long)in.get(171 + inPos) << 48 & 36028797018963967L;
         out[25 + outPos] = (long)in.get(171 + inPos) >> 7 & 1L | (long)in.get(172 + inPos) << 1 & 511L | (long)in.get(173 + inPos) << 9 & 131071L | (long)in.get(174 + inPos) << 17 & 33554431L | (long)in.get(175 + inPos) << 25 & 8589934591L | (long)in.get(176 + inPos) << 33 & 2199023255551L | (long)in.get(177 + inPos) << 41 & 562949953421311L | (long)in.get(178 + inPos) << 49 & 36028797018963967L;
         out[26 + outPos] = (long)in.get(178 + inPos) >> 6 & 3L | (long)in.get(179 + inPos) << 2 & 1023L | (long)in.get(180 + inPos) << 10 & 262143L | (long)in.get(181 + inPos) << 18 & 67108863L | (long)in.get(182 + inPos) << 26 & 17179869183L | (long)in.get(183 + inPos) << 34 & 4398046511103L | (long)in.get(184 + inPos) << 42 & 1125899906842623L | (long)in.get(185 + inPos) << 50 & 36028797018963967L;
         out[27 + outPos] = (long)in.get(185 + inPos) >> 5 & 7L | (long)in.get(186 + inPos) << 3 & 2047L | (long)in.get(187 + inPos) << 11 & 524287L | (long)in.get(188 + inPos) << 19 & 134217727L | (long)in.get(189 + inPos) << 27 & 34359738367L | (long)in.get(190 + inPos) << 35 & 8796093022207L | (long)in.get(191 + inPos) << 43 & 2251799813685247L | (long)in.get(192 + inPos) << 51 & 36028797018963967L;
         out[28 + outPos] = (long)in.get(192 + inPos) >> 4 & 15L | (long)in.get(193 + inPos) << 4 & 4095L | (long)in.get(194 + inPos) << 12 & 1048575L | (long)in.get(195 + inPos) << 20 & 268435455L | (long)in.get(196 + inPos) << 28 & 68719476735L | (long)in.get(197 + inPos) << 36 & 17592186044415L | (long)in.get(198 + inPos) << 44 & 4503599627370495L | (long)in.get(199 + inPos) << 52 & 36028797018963967L;
         out[29 + outPos] = (long)in.get(199 + inPos) >> 3 & 31L | (long)in.get(200 + inPos) << 5 & 8191L | (long)in.get(201 + inPos) << 13 & 2097151L | (long)in.get(202 + inPos) << 21 & 536870911L | (long)in.get(203 + inPos) << 29 & 137438953471L | (long)in.get(204 + inPos) << 37 & 35184372088831L | (long)in.get(205 + inPos) << 45 & 9007199254740991L | (long)in.get(206 + inPos) << 53 & 36028797018963967L;
         out[30 + outPos] = (long)in.get(206 + inPos) >> 2 & 63L | (long)in.get(207 + inPos) << 6 & 16383L | (long)in.get(208 + inPos) << 14 & 4194303L | (long)in.get(209 + inPos) << 22 & 1073741823L | (long)in.get(210 + inPos) << 30 & 274877906943L | (long)in.get(211 + inPos) << 38 & 70368744177663L | (long)in.get(212 + inPos) << 46 & 18014398509481983L | (long)in.get(213 + inPos) << 54 & 36028797018963967L;
         out[31 + outPos] = (long)in.get(213 + inPos) >> 1 & 127L | (long)in.get(214 + inPos) << 7 & 32767L | (long)in.get(215 + inPos) << 15 & 8388607L | (long)in.get(216 + inPos) << 23 & 2147483647L | (long)in.get(217 + inPos) << 31 & 549755813887L | (long)in.get(218 + inPos) << 39 & 140737488355327L | (long)in.get(219 + inPos) << 47 & 36028797018963967L;
      }
   }

   private static final class Packer56 extends BytePackerForLong {
      private Packer56() {
         super(56);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 72057594037927935L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(in[1 + inPos] & 72057594037927935L & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[14 + outPos] = (byte)((int)(in[2 + inPos] & 72057594037927935L & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[21 + outPos] = (byte)((int)(in[3 + inPos] & 72057594037927935L & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[28 + outPos] = (byte)((int)(in[4 + inPos] & 72057594037927935L & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[35 + outPos] = (byte)((int)(in[5 + inPos] & 72057594037927935L & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[42 + outPos] = (byte)((int)(in[6 + inPos] & 72057594037927935L & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[49 + outPos] = (byte)((int)(in[7 + inPos] & 72057594037927935L & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 72057594037927935L) >>> 48 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 72057594037927935L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(in[1 + inPos] & 72057594037927935L & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[14 + outPos] = (byte)((int)(in[2 + inPos] & 72057594037927935L & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[21 + outPos] = (byte)((int)(in[3 + inPos] & 72057594037927935L & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[28 + outPos] = (byte)((int)(in[4 + inPos] & 72057594037927935L & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[35 + outPos] = (byte)((int)(in[5 + inPos] & 72057594037927935L & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[42 + outPos] = (byte)((int)(in[6 + inPos] & 72057594037927935L & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[49 + outPos] = (byte)((int)(in[7 + inPos] & 72057594037927935L & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[56 + outPos] = (byte)((int)(in[8 + inPos] & 72057594037927935L & 255L));
         out[57 + outPos] = (byte)((int)((in[8 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[58 + outPos] = (byte)((int)((in[8 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[59 + outPos] = (byte)((int)((in[8 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[60 + outPos] = (byte)((int)((in[8 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[61 + outPos] = (byte)((int)((in[8 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[62 + outPos] = (byte)((int)((in[8 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[63 + outPos] = (byte)((int)(in[9 + inPos] & 72057594037927935L & 255L));
         out[64 + outPos] = (byte)((int)((in[9 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[65 + outPos] = (byte)((int)((in[9 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[66 + outPos] = (byte)((int)((in[9 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[67 + outPos] = (byte)((int)((in[9 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[68 + outPos] = (byte)((int)((in[9 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[69 + outPos] = (byte)((int)((in[9 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[70 + outPos] = (byte)((int)(in[10 + inPos] & 72057594037927935L & 255L));
         out[71 + outPos] = (byte)((int)((in[10 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[72 + outPos] = (byte)((int)((in[10 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[73 + outPos] = (byte)((int)((in[10 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[74 + outPos] = (byte)((int)((in[10 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[75 + outPos] = (byte)((int)((in[10 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[76 + outPos] = (byte)((int)((in[10 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[77 + outPos] = (byte)((int)(in[11 + inPos] & 72057594037927935L & 255L));
         out[78 + outPos] = (byte)((int)((in[11 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[79 + outPos] = (byte)((int)((in[11 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[80 + outPos] = (byte)((int)((in[11 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[81 + outPos] = (byte)((int)((in[11 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[82 + outPos] = (byte)((int)((in[11 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[83 + outPos] = (byte)((int)((in[11 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[84 + outPos] = (byte)((int)(in[12 + inPos] & 72057594037927935L & 255L));
         out[85 + outPos] = (byte)((int)((in[12 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[86 + outPos] = (byte)((int)((in[12 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[87 + outPos] = (byte)((int)((in[12 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[88 + outPos] = (byte)((int)((in[12 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[89 + outPos] = (byte)((int)((in[12 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[90 + outPos] = (byte)((int)((in[12 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[91 + outPos] = (byte)((int)(in[13 + inPos] & 72057594037927935L & 255L));
         out[92 + outPos] = (byte)((int)((in[13 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[93 + outPos] = (byte)((int)((in[13 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[94 + outPos] = (byte)((int)((in[13 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[95 + outPos] = (byte)((int)((in[13 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[96 + outPos] = (byte)((int)((in[13 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[97 + outPos] = (byte)((int)((in[13 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[98 + outPos] = (byte)((int)(in[14 + inPos] & 72057594037927935L & 255L));
         out[99 + outPos] = (byte)((int)((in[14 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[100 + outPos] = (byte)((int)((in[14 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[101 + outPos] = (byte)((int)((in[14 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[102 + outPos] = (byte)((int)((in[14 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[103 + outPos] = (byte)((int)((in[14 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[104 + outPos] = (byte)((int)((in[14 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[105 + outPos] = (byte)((int)(in[15 + inPos] & 72057594037927935L & 255L));
         out[106 + outPos] = (byte)((int)((in[15 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[107 + outPos] = (byte)((int)((in[15 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[108 + outPos] = (byte)((int)((in[15 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[109 + outPos] = (byte)((int)((in[15 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[110 + outPos] = (byte)((int)((in[15 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[111 + outPos] = (byte)((int)((in[15 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[112 + outPos] = (byte)((int)(in[16 + inPos] & 72057594037927935L & 255L));
         out[113 + outPos] = (byte)((int)((in[16 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[114 + outPos] = (byte)((int)((in[16 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[115 + outPos] = (byte)((int)((in[16 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[116 + outPos] = (byte)((int)((in[16 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[117 + outPos] = (byte)((int)((in[16 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[118 + outPos] = (byte)((int)((in[16 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[119 + outPos] = (byte)((int)(in[17 + inPos] & 72057594037927935L & 255L));
         out[120 + outPos] = (byte)((int)((in[17 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[121 + outPos] = (byte)((int)((in[17 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[122 + outPos] = (byte)((int)((in[17 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[123 + outPos] = (byte)((int)((in[17 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[124 + outPos] = (byte)((int)((in[17 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[125 + outPos] = (byte)((int)((in[17 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[126 + outPos] = (byte)((int)(in[18 + inPos] & 72057594037927935L & 255L));
         out[127 + outPos] = (byte)((int)((in[18 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[128 + outPos] = (byte)((int)((in[18 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[129 + outPos] = (byte)((int)((in[18 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[130 + outPos] = (byte)((int)((in[18 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[131 + outPos] = (byte)((int)((in[18 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[132 + outPos] = (byte)((int)((in[18 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[133 + outPos] = (byte)((int)(in[19 + inPos] & 72057594037927935L & 255L));
         out[134 + outPos] = (byte)((int)((in[19 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[135 + outPos] = (byte)((int)((in[19 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[136 + outPos] = (byte)((int)((in[19 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[137 + outPos] = (byte)((int)((in[19 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[138 + outPos] = (byte)((int)((in[19 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[139 + outPos] = (byte)((int)((in[19 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[140 + outPos] = (byte)((int)(in[20 + inPos] & 72057594037927935L & 255L));
         out[141 + outPos] = (byte)((int)((in[20 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[142 + outPos] = (byte)((int)((in[20 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[143 + outPos] = (byte)((int)((in[20 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[144 + outPos] = (byte)((int)((in[20 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[145 + outPos] = (byte)((int)((in[20 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[146 + outPos] = (byte)((int)((in[20 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[147 + outPos] = (byte)((int)(in[21 + inPos] & 72057594037927935L & 255L));
         out[148 + outPos] = (byte)((int)((in[21 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[149 + outPos] = (byte)((int)((in[21 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[150 + outPos] = (byte)((int)((in[21 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[151 + outPos] = (byte)((int)((in[21 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[152 + outPos] = (byte)((int)((in[21 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[153 + outPos] = (byte)((int)((in[21 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[154 + outPos] = (byte)((int)(in[22 + inPos] & 72057594037927935L & 255L));
         out[155 + outPos] = (byte)((int)((in[22 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[156 + outPos] = (byte)((int)((in[22 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[157 + outPos] = (byte)((int)((in[22 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[158 + outPos] = (byte)((int)((in[22 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[159 + outPos] = (byte)((int)((in[22 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[160 + outPos] = (byte)((int)((in[22 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[161 + outPos] = (byte)((int)(in[23 + inPos] & 72057594037927935L & 255L));
         out[162 + outPos] = (byte)((int)((in[23 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[163 + outPos] = (byte)((int)((in[23 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[164 + outPos] = (byte)((int)((in[23 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[165 + outPos] = (byte)((int)((in[23 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[166 + outPos] = (byte)((int)((in[23 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[167 + outPos] = (byte)((int)((in[23 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[168 + outPos] = (byte)((int)(in[24 + inPos] & 72057594037927935L & 255L));
         out[169 + outPos] = (byte)((int)((in[24 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[170 + outPos] = (byte)((int)((in[24 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[171 + outPos] = (byte)((int)((in[24 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[172 + outPos] = (byte)((int)((in[24 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[173 + outPos] = (byte)((int)((in[24 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[174 + outPos] = (byte)((int)((in[24 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[175 + outPos] = (byte)((int)(in[25 + inPos] & 72057594037927935L & 255L));
         out[176 + outPos] = (byte)((int)((in[25 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[177 + outPos] = (byte)((int)((in[25 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[178 + outPos] = (byte)((int)((in[25 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[179 + outPos] = (byte)((int)((in[25 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[180 + outPos] = (byte)((int)((in[25 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[181 + outPos] = (byte)((int)((in[25 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[182 + outPos] = (byte)((int)(in[26 + inPos] & 72057594037927935L & 255L));
         out[183 + outPos] = (byte)((int)((in[26 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[184 + outPos] = (byte)((int)((in[26 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[185 + outPos] = (byte)((int)((in[26 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[186 + outPos] = (byte)((int)((in[26 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[187 + outPos] = (byte)((int)((in[26 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[188 + outPos] = (byte)((int)((in[26 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[189 + outPos] = (byte)((int)(in[27 + inPos] & 72057594037927935L & 255L));
         out[190 + outPos] = (byte)((int)((in[27 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[191 + outPos] = (byte)((int)((in[27 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[192 + outPos] = (byte)((int)((in[27 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[193 + outPos] = (byte)((int)((in[27 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[194 + outPos] = (byte)((int)((in[27 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[195 + outPos] = (byte)((int)((in[27 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[196 + outPos] = (byte)((int)(in[28 + inPos] & 72057594037927935L & 255L));
         out[197 + outPos] = (byte)((int)((in[28 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[198 + outPos] = (byte)((int)((in[28 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[199 + outPos] = (byte)((int)((in[28 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[200 + outPos] = (byte)((int)((in[28 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[201 + outPos] = (byte)((int)((in[28 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[202 + outPos] = (byte)((int)((in[28 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[203 + outPos] = (byte)((int)(in[29 + inPos] & 72057594037927935L & 255L));
         out[204 + outPos] = (byte)((int)((in[29 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[205 + outPos] = (byte)((int)((in[29 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[206 + outPos] = (byte)((int)((in[29 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[207 + outPos] = (byte)((int)((in[29 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[208 + outPos] = (byte)((int)((in[29 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[209 + outPos] = (byte)((int)((in[29 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[210 + outPos] = (byte)((int)(in[30 + inPos] & 72057594037927935L & 255L));
         out[211 + outPos] = (byte)((int)((in[30 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[212 + outPos] = (byte)((int)((in[30 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[213 + outPos] = (byte)((int)((in[30 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[214 + outPos] = (byte)((int)((in[30 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[215 + outPos] = (byte)((int)((in[30 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[216 + outPos] = (byte)((int)((in[30 + inPos] & 72057594037927935L) >>> 48 & 255L));
         out[217 + outPos] = (byte)((int)(in[31 + inPos] & 72057594037927935L & 255L));
         out[218 + outPos] = (byte)((int)((in[31 + inPos] & 72057594037927935L) >>> 8 & 255L));
         out[219 + outPos] = (byte)((int)((in[31 + inPos] & 72057594037927935L) >>> 16 & 255L));
         out[220 + outPos] = (byte)((int)((in[31 + inPos] & 72057594037927935L) >>> 24 & 255L));
         out[221 + outPos] = (byte)((int)((in[31 + inPos] & 72057594037927935L) >>> 32 & 255L));
         out[222 + outPos] = (byte)((int)((in[31 + inPos] & 72057594037927935L) >>> 40 & 255L));
         out[223 + outPos] = (byte)((int)((in[31 + inPos] & 72057594037927935L) >>> 48 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L;
         out[1 + outPos] = (long)in[7 + inPos] & 255L | (long)in[8 + inPos] << 8 & 65535L | (long)in[9 + inPos] << 16 & 16777215L | (long)in[10 + inPos] << 24 & 4294967295L | (long)in[11 + inPos] << 32 & 1099511627775L | (long)in[12 + inPos] << 40 & 281474976710655L | (long)in[13 + inPos] << 48 & 72057594037927935L;
         out[2 + outPos] = (long)in[14 + inPos] & 255L | (long)in[15 + inPos] << 8 & 65535L | (long)in[16 + inPos] << 16 & 16777215L | (long)in[17 + inPos] << 24 & 4294967295L | (long)in[18 + inPos] << 32 & 1099511627775L | (long)in[19 + inPos] << 40 & 281474976710655L | (long)in[20 + inPos] << 48 & 72057594037927935L;
         out[3 + outPos] = (long)in[21 + inPos] & 255L | (long)in[22 + inPos] << 8 & 65535L | (long)in[23 + inPos] << 16 & 16777215L | (long)in[24 + inPos] << 24 & 4294967295L | (long)in[25 + inPos] << 32 & 1099511627775L | (long)in[26 + inPos] << 40 & 281474976710655L | (long)in[27 + inPos] << 48 & 72057594037927935L;
         out[4 + outPos] = (long)in[28 + inPos] & 255L | (long)in[29 + inPos] << 8 & 65535L | (long)in[30 + inPos] << 16 & 16777215L | (long)in[31 + inPos] << 24 & 4294967295L | (long)in[32 + inPos] << 32 & 1099511627775L | (long)in[33 + inPos] << 40 & 281474976710655L | (long)in[34 + inPos] << 48 & 72057594037927935L;
         out[5 + outPos] = (long)in[35 + inPos] & 255L | (long)in[36 + inPos] << 8 & 65535L | (long)in[37 + inPos] << 16 & 16777215L | (long)in[38 + inPos] << 24 & 4294967295L | (long)in[39 + inPos] << 32 & 1099511627775L | (long)in[40 + inPos] << 40 & 281474976710655L | (long)in[41 + inPos] << 48 & 72057594037927935L;
         out[6 + outPos] = (long)in[42 + inPos] & 255L | (long)in[43 + inPos] << 8 & 65535L | (long)in[44 + inPos] << 16 & 16777215L | (long)in[45 + inPos] << 24 & 4294967295L | (long)in[46 + inPos] << 32 & 1099511627775L | (long)in[47 + inPos] << 40 & 281474976710655L | (long)in[48 + inPos] << 48 & 72057594037927935L;
         out[7 + outPos] = (long)in[49 + inPos] & 255L | (long)in[50 + inPos] << 8 & 65535L | (long)in[51 + inPos] << 16 & 16777215L | (long)in[52 + inPos] << 24 & 4294967295L | (long)in[53 + inPos] << 32 & 1099511627775L | (long)in[54 + inPos] << 40 & 281474976710655L | (long)in[55 + inPos] << 48 & 72057594037927935L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L;
         out[1 + outPos] = (long)in.get(7 + inPos) & 255L | (long)in.get(8 + inPos) << 8 & 65535L | (long)in.get(9 + inPos) << 16 & 16777215L | (long)in.get(10 + inPos) << 24 & 4294967295L | (long)in.get(11 + inPos) << 32 & 1099511627775L | (long)in.get(12 + inPos) << 40 & 281474976710655L | (long)in.get(13 + inPos) << 48 & 72057594037927935L;
         out[2 + outPos] = (long)in.get(14 + inPos) & 255L | (long)in.get(15 + inPos) << 8 & 65535L | (long)in.get(16 + inPos) << 16 & 16777215L | (long)in.get(17 + inPos) << 24 & 4294967295L | (long)in.get(18 + inPos) << 32 & 1099511627775L | (long)in.get(19 + inPos) << 40 & 281474976710655L | (long)in.get(20 + inPos) << 48 & 72057594037927935L;
         out[3 + outPos] = (long)in.get(21 + inPos) & 255L | (long)in.get(22 + inPos) << 8 & 65535L | (long)in.get(23 + inPos) << 16 & 16777215L | (long)in.get(24 + inPos) << 24 & 4294967295L | (long)in.get(25 + inPos) << 32 & 1099511627775L | (long)in.get(26 + inPos) << 40 & 281474976710655L | (long)in.get(27 + inPos) << 48 & 72057594037927935L;
         out[4 + outPos] = (long)in.get(28 + inPos) & 255L | (long)in.get(29 + inPos) << 8 & 65535L | (long)in.get(30 + inPos) << 16 & 16777215L | (long)in.get(31 + inPos) << 24 & 4294967295L | (long)in.get(32 + inPos) << 32 & 1099511627775L | (long)in.get(33 + inPos) << 40 & 281474976710655L | (long)in.get(34 + inPos) << 48 & 72057594037927935L;
         out[5 + outPos] = (long)in.get(35 + inPos) & 255L | (long)in.get(36 + inPos) << 8 & 65535L | (long)in.get(37 + inPos) << 16 & 16777215L | (long)in.get(38 + inPos) << 24 & 4294967295L | (long)in.get(39 + inPos) << 32 & 1099511627775L | (long)in.get(40 + inPos) << 40 & 281474976710655L | (long)in.get(41 + inPos) << 48 & 72057594037927935L;
         out[6 + outPos] = (long)in.get(42 + inPos) & 255L | (long)in.get(43 + inPos) << 8 & 65535L | (long)in.get(44 + inPos) << 16 & 16777215L | (long)in.get(45 + inPos) << 24 & 4294967295L | (long)in.get(46 + inPos) << 32 & 1099511627775L | (long)in.get(47 + inPos) << 40 & 281474976710655L | (long)in.get(48 + inPos) << 48 & 72057594037927935L;
         out[7 + outPos] = (long)in.get(49 + inPos) & 255L | (long)in.get(50 + inPos) << 8 & 65535L | (long)in.get(51 + inPos) << 16 & 16777215L | (long)in.get(52 + inPos) << 24 & 4294967295L | (long)in.get(53 + inPos) << 32 & 1099511627775L | (long)in.get(54 + inPos) << 40 & 281474976710655L | (long)in.get(55 + inPos) << 48 & 72057594037927935L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L;
         out[1 + outPos] = (long)in[7 + inPos] & 255L | (long)in[8 + inPos] << 8 & 65535L | (long)in[9 + inPos] << 16 & 16777215L | (long)in[10 + inPos] << 24 & 4294967295L | (long)in[11 + inPos] << 32 & 1099511627775L | (long)in[12 + inPos] << 40 & 281474976710655L | (long)in[13 + inPos] << 48 & 72057594037927935L;
         out[2 + outPos] = (long)in[14 + inPos] & 255L | (long)in[15 + inPos] << 8 & 65535L | (long)in[16 + inPos] << 16 & 16777215L | (long)in[17 + inPos] << 24 & 4294967295L | (long)in[18 + inPos] << 32 & 1099511627775L | (long)in[19 + inPos] << 40 & 281474976710655L | (long)in[20 + inPos] << 48 & 72057594037927935L;
         out[3 + outPos] = (long)in[21 + inPos] & 255L | (long)in[22 + inPos] << 8 & 65535L | (long)in[23 + inPos] << 16 & 16777215L | (long)in[24 + inPos] << 24 & 4294967295L | (long)in[25 + inPos] << 32 & 1099511627775L | (long)in[26 + inPos] << 40 & 281474976710655L | (long)in[27 + inPos] << 48 & 72057594037927935L;
         out[4 + outPos] = (long)in[28 + inPos] & 255L | (long)in[29 + inPos] << 8 & 65535L | (long)in[30 + inPos] << 16 & 16777215L | (long)in[31 + inPos] << 24 & 4294967295L | (long)in[32 + inPos] << 32 & 1099511627775L | (long)in[33 + inPos] << 40 & 281474976710655L | (long)in[34 + inPos] << 48 & 72057594037927935L;
         out[5 + outPos] = (long)in[35 + inPos] & 255L | (long)in[36 + inPos] << 8 & 65535L | (long)in[37 + inPos] << 16 & 16777215L | (long)in[38 + inPos] << 24 & 4294967295L | (long)in[39 + inPos] << 32 & 1099511627775L | (long)in[40 + inPos] << 40 & 281474976710655L | (long)in[41 + inPos] << 48 & 72057594037927935L;
         out[6 + outPos] = (long)in[42 + inPos] & 255L | (long)in[43 + inPos] << 8 & 65535L | (long)in[44 + inPos] << 16 & 16777215L | (long)in[45 + inPos] << 24 & 4294967295L | (long)in[46 + inPos] << 32 & 1099511627775L | (long)in[47 + inPos] << 40 & 281474976710655L | (long)in[48 + inPos] << 48 & 72057594037927935L;
         out[7 + outPos] = (long)in[49 + inPos] & 255L | (long)in[50 + inPos] << 8 & 65535L | (long)in[51 + inPos] << 16 & 16777215L | (long)in[52 + inPos] << 24 & 4294967295L | (long)in[53 + inPos] << 32 & 1099511627775L | (long)in[54 + inPos] << 40 & 281474976710655L | (long)in[55 + inPos] << 48 & 72057594037927935L;
         out[8 + outPos] = (long)in[56 + inPos] & 255L | (long)in[57 + inPos] << 8 & 65535L | (long)in[58 + inPos] << 16 & 16777215L | (long)in[59 + inPos] << 24 & 4294967295L | (long)in[60 + inPos] << 32 & 1099511627775L | (long)in[61 + inPos] << 40 & 281474976710655L | (long)in[62 + inPos] << 48 & 72057594037927935L;
         out[9 + outPos] = (long)in[63 + inPos] & 255L | (long)in[64 + inPos] << 8 & 65535L | (long)in[65 + inPos] << 16 & 16777215L | (long)in[66 + inPos] << 24 & 4294967295L | (long)in[67 + inPos] << 32 & 1099511627775L | (long)in[68 + inPos] << 40 & 281474976710655L | (long)in[69 + inPos] << 48 & 72057594037927935L;
         out[10 + outPos] = (long)in[70 + inPos] & 255L | (long)in[71 + inPos] << 8 & 65535L | (long)in[72 + inPos] << 16 & 16777215L | (long)in[73 + inPos] << 24 & 4294967295L | (long)in[74 + inPos] << 32 & 1099511627775L | (long)in[75 + inPos] << 40 & 281474976710655L | (long)in[76 + inPos] << 48 & 72057594037927935L;
         out[11 + outPos] = (long)in[77 + inPos] & 255L | (long)in[78 + inPos] << 8 & 65535L | (long)in[79 + inPos] << 16 & 16777215L | (long)in[80 + inPos] << 24 & 4294967295L | (long)in[81 + inPos] << 32 & 1099511627775L | (long)in[82 + inPos] << 40 & 281474976710655L | (long)in[83 + inPos] << 48 & 72057594037927935L;
         out[12 + outPos] = (long)in[84 + inPos] & 255L | (long)in[85 + inPos] << 8 & 65535L | (long)in[86 + inPos] << 16 & 16777215L | (long)in[87 + inPos] << 24 & 4294967295L | (long)in[88 + inPos] << 32 & 1099511627775L | (long)in[89 + inPos] << 40 & 281474976710655L | (long)in[90 + inPos] << 48 & 72057594037927935L;
         out[13 + outPos] = (long)in[91 + inPos] & 255L | (long)in[92 + inPos] << 8 & 65535L | (long)in[93 + inPos] << 16 & 16777215L | (long)in[94 + inPos] << 24 & 4294967295L | (long)in[95 + inPos] << 32 & 1099511627775L | (long)in[96 + inPos] << 40 & 281474976710655L | (long)in[97 + inPos] << 48 & 72057594037927935L;
         out[14 + outPos] = (long)in[98 + inPos] & 255L | (long)in[99 + inPos] << 8 & 65535L | (long)in[100 + inPos] << 16 & 16777215L | (long)in[101 + inPos] << 24 & 4294967295L | (long)in[102 + inPos] << 32 & 1099511627775L | (long)in[103 + inPos] << 40 & 281474976710655L | (long)in[104 + inPos] << 48 & 72057594037927935L;
         out[15 + outPos] = (long)in[105 + inPos] & 255L | (long)in[106 + inPos] << 8 & 65535L | (long)in[107 + inPos] << 16 & 16777215L | (long)in[108 + inPos] << 24 & 4294967295L | (long)in[109 + inPos] << 32 & 1099511627775L | (long)in[110 + inPos] << 40 & 281474976710655L | (long)in[111 + inPos] << 48 & 72057594037927935L;
         out[16 + outPos] = (long)in[112 + inPos] & 255L | (long)in[113 + inPos] << 8 & 65535L | (long)in[114 + inPos] << 16 & 16777215L | (long)in[115 + inPos] << 24 & 4294967295L | (long)in[116 + inPos] << 32 & 1099511627775L | (long)in[117 + inPos] << 40 & 281474976710655L | (long)in[118 + inPos] << 48 & 72057594037927935L;
         out[17 + outPos] = (long)in[119 + inPos] & 255L | (long)in[120 + inPos] << 8 & 65535L | (long)in[121 + inPos] << 16 & 16777215L | (long)in[122 + inPos] << 24 & 4294967295L | (long)in[123 + inPos] << 32 & 1099511627775L | (long)in[124 + inPos] << 40 & 281474976710655L | (long)in[125 + inPos] << 48 & 72057594037927935L;
         out[18 + outPos] = (long)in[126 + inPos] & 255L | (long)in[127 + inPos] << 8 & 65535L | (long)in[128 + inPos] << 16 & 16777215L | (long)in[129 + inPos] << 24 & 4294967295L | (long)in[130 + inPos] << 32 & 1099511627775L | (long)in[131 + inPos] << 40 & 281474976710655L | (long)in[132 + inPos] << 48 & 72057594037927935L;
         out[19 + outPos] = (long)in[133 + inPos] & 255L | (long)in[134 + inPos] << 8 & 65535L | (long)in[135 + inPos] << 16 & 16777215L | (long)in[136 + inPos] << 24 & 4294967295L | (long)in[137 + inPos] << 32 & 1099511627775L | (long)in[138 + inPos] << 40 & 281474976710655L | (long)in[139 + inPos] << 48 & 72057594037927935L;
         out[20 + outPos] = (long)in[140 + inPos] & 255L | (long)in[141 + inPos] << 8 & 65535L | (long)in[142 + inPos] << 16 & 16777215L | (long)in[143 + inPos] << 24 & 4294967295L | (long)in[144 + inPos] << 32 & 1099511627775L | (long)in[145 + inPos] << 40 & 281474976710655L | (long)in[146 + inPos] << 48 & 72057594037927935L;
         out[21 + outPos] = (long)in[147 + inPos] & 255L | (long)in[148 + inPos] << 8 & 65535L | (long)in[149 + inPos] << 16 & 16777215L | (long)in[150 + inPos] << 24 & 4294967295L | (long)in[151 + inPos] << 32 & 1099511627775L | (long)in[152 + inPos] << 40 & 281474976710655L | (long)in[153 + inPos] << 48 & 72057594037927935L;
         out[22 + outPos] = (long)in[154 + inPos] & 255L | (long)in[155 + inPos] << 8 & 65535L | (long)in[156 + inPos] << 16 & 16777215L | (long)in[157 + inPos] << 24 & 4294967295L | (long)in[158 + inPos] << 32 & 1099511627775L | (long)in[159 + inPos] << 40 & 281474976710655L | (long)in[160 + inPos] << 48 & 72057594037927935L;
         out[23 + outPos] = (long)in[161 + inPos] & 255L | (long)in[162 + inPos] << 8 & 65535L | (long)in[163 + inPos] << 16 & 16777215L | (long)in[164 + inPos] << 24 & 4294967295L | (long)in[165 + inPos] << 32 & 1099511627775L | (long)in[166 + inPos] << 40 & 281474976710655L | (long)in[167 + inPos] << 48 & 72057594037927935L;
         out[24 + outPos] = (long)in[168 + inPos] & 255L | (long)in[169 + inPos] << 8 & 65535L | (long)in[170 + inPos] << 16 & 16777215L | (long)in[171 + inPos] << 24 & 4294967295L | (long)in[172 + inPos] << 32 & 1099511627775L | (long)in[173 + inPos] << 40 & 281474976710655L | (long)in[174 + inPos] << 48 & 72057594037927935L;
         out[25 + outPos] = (long)in[175 + inPos] & 255L | (long)in[176 + inPos] << 8 & 65535L | (long)in[177 + inPos] << 16 & 16777215L | (long)in[178 + inPos] << 24 & 4294967295L | (long)in[179 + inPos] << 32 & 1099511627775L | (long)in[180 + inPos] << 40 & 281474976710655L | (long)in[181 + inPos] << 48 & 72057594037927935L;
         out[26 + outPos] = (long)in[182 + inPos] & 255L | (long)in[183 + inPos] << 8 & 65535L | (long)in[184 + inPos] << 16 & 16777215L | (long)in[185 + inPos] << 24 & 4294967295L | (long)in[186 + inPos] << 32 & 1099511627775L | (long)in[187 + inPos] << 40 & 281474976710655L | (long)in[188 + inPos] << 48 & 72057594037927935L;
         out[27 + outPos] = (long)in[189 + inPos] & 255L | (long)in[190 + inPos] << 8 & 65535L | (long)in[191 + inPos] << 16 & 16777215L | (long)in[192 + inPos] << 24 & 4294967295L | (long)in[193 + inPos] << 32 & 1099511627775L | (long)in[194 + inPos] << 40 & 281474976710655L | (long)in[195 + inPos] << 48 & 72057594037927935L;
         out[28 + outPos] = (long)in[196 + inPos] & 255L | (long)in[197 + inPos] << 8 & 65535L | (long)in[198 + inPos] << 16 & 16777215L | (long)in[199 + inPos] << 24 & 4294967295L | (long)in[200 + inPos] << 32 & 1099511627775L | (long)in[201 + inPos] << 40 & 281474976710655L | (long)in[202 + inPos] << 48 & 72057594037927935L;
         out[29 + outPos] = (long)in[203 + inPos] & 255L | (long)in[204 + inPos] << 8 & 65535L | (long)in[205 + inPos] << 16 & 16777215L | (long)in[206 + inPos] << 24 & 4294967295L | (long)in[207 + inPos] << 32 & 1099511627775L | (long)in[208 + inPos] << 40 & 281474976710655L | (long)in[209 + inPos] << 48 & 72057594037927935L;
         out[30 + outPos] = (long)in[210 + inPos] & 255L | (long)in[211 + inPos] << 8 & 65535L | (long)in[212 + inPos] << 16 & 16777215L | (long)in[213 + inPos] << 24 & 4294967295L | (long)in[214 + inPos] << 32 & 1099511627775L | (long)in[215 + inPos] << 40 & 281474976710655L | (long)in[216 + inPos] << 48 & 72057594037927935L;
         out[31 + outPos] = (long)in[217 + inPos] & 255L | (long)in[218 + inPos] << 8 & 65535L | (long)in[219 + inPos] << 16 & 16777215L | (long)in[220 + inPos] << 24 & 4294967295L | (long)in[221 + inPos] << 32 & 1099511627775L | (long)in[222 + inPos] << 40 & 281474976710655L | (long)in[223 + inPos] << 48 & 72057594037927935L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L;
         out[1 + outPos] = (long)in.get(7 + inPos) & 255L | (long)in.get(8 + inPos) << 8 & 65535L | (long)in.get(9 + inPos) << 16 & 16777215L | (long)in.get(10 + inPos) << 24 & 4294967295L | (long)in.get(11 + inPos) << 32 & 1099511627775L | (long)in.get(12 + inPos) << 40 & 281474976710655L | (long)in.get(13 + inPos) << 48 & 72057594037927935L;
         out[2 + outPos] = (long)in.get(14 + inPos) & 255L | (long)in.get(15 + inPos) << 8 & 65535L | (long)in.get(16 + inPos) << 16 & 16777215L | (long)in.get(17 + inPos) << 24 & 4294967295L | (long)in.get(18 + inPos) << 32 & 1099511627775L | (long)in.get(19 + inPos) << 40 & 281474976710655L | (long)in.get(20 + inPos) << 48 & 72057594037927935L;
         out[3 + outPos] = (long)in.get(21 + inPos) & 255L | (long)in.get(22 + inPos) << 8 & 65535L | (long)in.get(23 + inPos) << 16 & 16777215L | (long)in.get(24 + inPos) << 24 & 4294967295L | (long)in.get(25 + inPos) << 32 & 1099511627775L | (long)in.get(26 + inPos) << 40 & 281474976710655L | (long)in.get(27 + inPos) << 48 & 72057594037927935L;
         out[4 + outPos] = (long)in.get(28 + inPos) & 255L | (long)in.get(29 + inPos) << 8 & 65535L | (long)in.get(30 + inPos) << 16 & 16777215L | (long)in.get(31 + inPos) << 24 & 4294967295L | (long)in.get(32 + inPos) << 32 & 1099511627775L | (long)in.get(33 + inPos) << 40 & 281474976710655L | (long)in.get(34 + inPos) << 48 & 72057594037927935L;
         out[5 + outPos] = (long)in.get(35 + inPos) & 255L | (long)in.get(36 + inPos) << 8 & 65535L | (long)in.get(37 + inPos) << 16 & 16777215L | (long)in.get(38 + inPos) << 24 & 4294967295L | (long)in.get(39 + inPos) << 32 & 1099511627775L | (long)in.get(40 + inPos) << 40 & 281474976710655L | (long)in.get(41 + inPos) << 48 & 72057594037927935L;
         out[6 + outPos] = (long)in.get(42 + inPos) & 255L | (long)in.get(43 + inPos) << 8 & 65535L | (long)in.get(44 + inPos) << 16 & 16777215L | (long)in.get(45 + inPos) << 24 & 4294967295L | (long)in.get(46 + inPos) << 32 & 1099511627775L | (long)in.get(47 + inPos) << 40 & 281474976710655L | (long)in.get(48 + inPos) << 48 & 72057594037927935L;
         out[7 + outPos] = (long)in.get(49 + inPos) & 255L | (long)in.get(50 + inPos) << 8 & 65535L | (long)in.get(51 + inPos) << 16 & 16777215L | (long)in.get(52 + inPos) << 24 & 4294967295L | (long)in.get(53 + inPos) << 32 & 1099511627775L | (long)in.get(54 + inPos) << 40 & 281474976710655L | (long)in.get(55 + inPos) << 48 & 72057594037927935L;
         out[8 + outPos] = (long)in.get(56 + inPos) & 255L | (long)in.get(57 + inPos) << 8 & 65535L | (long)in.get(58 + inPos) << 16 & 16777215L | (long)in.get(59 + inPos) << 24 & 4294967295L | (long)in.get(60 + inPos) << 32 & 1099511627775L | (long)in.get(61 + inPos) << 40 & 281474976710655L | (long)in.get(62 + inPos) << 48 & 72057594037927935L;
         out[9 + outPos] = (long)in.get(63 + inPos) & 255L | (long)in.get(64 + inPos) << 8 & 65535L | (long)in.get(65 + inPos) << 16 & 16777215L | (long)in.get(66 + inPos) << 24 & 4294967295L | (long)in.get(67 + inPos) << 32 & 1099511627775L | (long)in.get(68 + inPos) << 40 & 281474976710655L | (long)in.get(69 + inPos) << 48 & 72057594037927935L;
         out[10 + outPos] = (long)in.get(70 + inPos) & 255L | (long)in.get(71 + inPos) << 8 & 65535L | (long)in.get(72 + inPos) << 16 & 16777215L | (long)in.get(73 + inPos) << 24 & 4294967295L | (long)in.get(74 + inPos) << 32 & 1099511627775L | (long)in.get(75 + inPos) << 40 & 281474976710655L | (long)in.get(76 + inPos) << 48 & 72057594037927935L;
         out[11 + outPos] = (long)in.get(77 + inPos) & 255L | (long)in.get(78 + inPos) << 8 & 65535L | (long)in.get(79 + inPos) << 16 & 16777215L | (long)in.get(80 + inPos) << 24 & 4294967295L | (long)in.get(81 + inPos) << 32 & 1099511627775L | (long)in.get(82 + inPos) << 40 & 281474976710655L | (long)in.get(83 + inPos) << 48 & 72057594037927935L;
         out[12 + outPos] = (long)in.get(84 + inPos) & 255L | (long)in.get(85 + inPos) << 8 & 65535L | (long)in.get(86 + inPos) << 16 & 16777215L | (long)in.get(87 + inPos) << 24 & 4294967295L | (long)in.get(88 + inPos) << 32 & 1099511627775L | (long)in.get(89 + inPos) << 40 & 281474976710655L | (long)in.get(90 + inPos) << 48 & 72057594037927935L;
         out[13 + outPos] = (long)in.get(91 + inPos) & 255L | (long)in.get(92 + inPos) << 8 & 65535L | (long)in.get(93 + inPos) << 16 & 16777215L | (long)in.get(94 + inPos) << 24 & 4294967295L | (long)in.get(95 + inPos) << 32 & 1099511627775L | (long)in.get(96 + inPos) << 40 & 281474976710655L | (long)in.get(97 + inPos) << 48 & 72057594037927935L;
         out[14 + outPos] = (long)in.get(98 + inPos) & 255L | (long)in.get(99 + inPos) << 8 & 65535L | (long)in.get(100 + inPos) << 16 & 16777215L | (long)in.get(101 + inPos) << 24 & 4294967295L | (long)in.get(102 + inPos) << 32 & 1099511627775L | (long)in.get(103 + inPos) << 40 & 281474976710655L | (long)in.get(104 + inPos) << 48 & 72057594037927935L;
         out[15 + outPos] = (long)in.get(105 + inPos) & 255L | (long)in.get(106 + inPos) << 8 & 65535L | (long)in.get(107 + inPos) << 16 & 16777215L | (long)in.get(108 + inPos) << 24 & 4294967295L | (long)in.get(109 + inPos) << 32 & 1099511627775L | (long)in.get(110 + inPos) << 40 & 281474976710655L | (long)in.get(111 + inPos) << 48 & 72057594037927935L;
         out[16 + outPos] = (long)in.get(112 + inPos) & 255L | (long)in.get(113 + inPos) << 8 & 65535L | (long)in.get(114 + inPos) << 16 & 16777215L | (long)in.get(115 + inPos) << 24 & 4294967295L | (long)in.get(116 + inPos) << 32 & 1099511627775L | (long)in.get(117 + inPos) << 40 & 281474976710655L | (long)in.get(118 + inPos) << 48 & 72057594037927935L;
         out[17 + outPos] = (long)in.get(119 + inPos) & 255L | (long)in.get(120 + inPos) << 8 & 65535L | (long)in.get(121 + inPos) << 16 & 16777215L | (long)in.get(122 + inPos) << 24 & 4294967295L | (long)in.get(123 + inPos) << 32 & 1099511627775L | (long)in.get(124 + inPos) << 40 & 281474976710655L | (long)in.get(125 + inPos) << 48 & 72057594037927935L;
         out[18 + outPos] = (long)in.get(126 + inPos) & 255L | (long)in.get(127 + inPos) << 8 & 65535L | (long)in.get(128 + inPos) << 16 & 16777215L | (long)in.get(129 + inPos) << 24 & 4294967295L | (long)in.get(130 + inPos) << 32 & 1099511627775L | (long)in.get(131 + inPos) << 40 & 281474976710655L | (long)in.get(132 + inPos) << 48 & 72057594037927935L;
         out[19 + outPos] = (long)in.get(133 + inPos) & 255L | (long)in.get(134 + inPos) << 8 & 65535L | (long)in.get(135 + inPos) << 16 & 16777215L | (long)in.get(136 + inPos) << 24 & 4294967295L | (long)in.get(137 + inPos) << 32 & 1099511627775L | (long)in.get(138 + inPos) << 40 & 281474976710655L | (long)in.get(139 + inPos) << 48 & 72057594037927935L;
         out[20 + outPos] = (long)in.get(140 + inPos) & 255L | (long)in.get(141 + inPos) << 8 & 65535L | (long)in.get(142 + inPos) << 16 & 16777215L | (long)in.get(143 + inPos) << 24 & 4294967295L | (long)in.get(144 + inPos) << 32 & 1099511627775L | (long)in.get(145 + inPos) << 40 & 281474976710655L | (long)in.get(146 + inPos) << 48 & 72057594037927935L;
         out[21 + outPos] = (long)in.get(147 + inPos) & 255L | (long)in.get(148 + inPos) << 8 & 65535L | (long)in.get(149 + inPos) << 16 & 16777215L | (long)in.get(150 + inPos) << 24 & 4294967295L | (long)in.get(151 + inPos) << 32 & 1099511627775L | (long)in.get(152 + inPos) << 40 & 281474976710655L | (long)in.get(153 + inPos) << 48 & 72057594037927935L;
         out[22 + outPos] = (long)in.get(154 + inPos) & 255L | (long)in.get(155 + inPos) << 8 & 65535L | (long)in.get(156 + inPos) << 16 & 16777215L | (long)in.get(157 + inPos) << 24 & 4294967295L | (long)in.get(158 + inPos) << 32 & 1099511627775L | (long)in.get(159 + inPos) << 40 & 281474976710655L | (long)in.get(160 + inPos) << 48 & 72057594037927935L;
         out[23 + outPos] = (long)in.get(161 + inPos) & 255L | (long)in.get(162 + inPos) << 8 & 65535L | (long)in.get(163 + inPos) << 16 & 16777215L | (long)in.get(164 + inPos) << 24 & 4294967295L | (long)in.get(165 + inPos) << 32 & 1099511627775L | (long)in.get(166 + inPos) << 40 & 281474976710655L | (long)in.get(167 + inPos) << 48 & 72057594037927935L;
         out[24 + outPos] = (long)in.get(168 + inPos) & 255L | (long)in.get(169 + inPos) << 8 & 65535L | (long)in.get(170 + inPos) << 16 & 16777215L | (long)in.get(171 + inPos) << 24 & 4294967295L | (long)in.get(172 + inPos) << 32 & 1099511627775L | (long)in.get(173 + inPos) << 40 & 281474976710655L | (long)in.get(174 + inPos) << 48 & 72057594037927935L;
         out[25 + outPos] = (long)in.get(175 + inPos) & 255L | (long)in.get(176 + inPos) << 8 & 65535L | (long)in.get(177 + inPos) << 16 & 16777215L | (long)in.get(178 + inPos) << 24 & 4294967295L | (long)in.get(179 + inPos) << 32 & 1099511627775L | (long)in.get(180 + inPos) << 40 & 281474976710655L | (long)in.get(181 + inPos) << 48 & 72057594037927935L;
         out[26 + outPos] = (long)in.get(182 + inPos) & 255L | (long)in.get(183 + inPos) << 8 & 65535L | (long)in.get(184 + inPos) << 16 & 16777215L | (long)in.get(185 + inPos) << 24 & 4294967295L | (long)in.get(186 + inPos) << 32 & 1099511627775L | (long)in.get(187 + inPos) << 40 & 281474976710655L | (long)in.get(188 + inPos) << 48 & 72057594037927935L;
         out[27 + outPos] = (long)in.get(189 + inPos) & 255L | (long)in.get(190 + inPos) << 8 & 65535L | (long)in.get(191 + inPos) << 16 & 16777215L | (long)in.get(192 + inPos) << 24 & 4294967295L | (long)in.get(193 + inPos) << 32 & 1099511627775L | (long)in.get(194 + inPos) << 40 & 281474976710655L | (long)in.get(195 + inPos) << 48 & 72057594037927935L;
         out[28 + outPos] = (long)in.get(196 + inPos) & 255L | (long)in.get(197 + inPos) << 8 & 65535L | (long)in.get(198 + inPos) << 16 & 16777215L | (long)in.get(199 + inPos) << 24 & 4294967295L | (long)in.get(200 + inPos) << 32 & 1099511627775L | (long)in.get(201 + inPos) << 40 & 281474976710655L | (long)in.get(202 + inPos) << 48 & 72057594037927935L;
         out[29 + outPos] = (long)in.get(203 + inPos) & 255L | (long)in.get(204 + inPos) << 8 & 65535L | (long)in.get(205 + inPos) << 16 & 16777215L | (long)in.get(206 + inPos) << 24 & 4294967295L | (long)in.get(207 + inPos) << 32 & 1099511627775L | (long)in.get(208 + inPos) << 40 & 281474976710655L | (long)in.get(209 + inPos) << 48 & 72057594037927935L;
         out[30 + outPos] = (long)in.get(210 + inPos) & 255L | (long)in.get(211 + inPos) << 8 & 65535L | (long)in.get(212 + inPos) << 16 & 16777215L | (long)in.get(213 + inPos) << 24 & 4294967295L | (long)in.get(214 + inPos) << 32 & 1099511627775L | (long)in.get(215 + inPos) << 40 & 281474976710655L | (long)in.get(216 + inPos) << 48 & 72057594037927935L;
         out[31 + outPos] = (long)in.get(217 + inPos) & 255L | (long)in.get(218 + inPos) << 8 & 65535L | (long)in.get(219 + inPos) << 16 & 16777215L | (long)in.get(220 + inPos) << 24 & 4294967295L | (long)in.get(221 + inPos) << 32 & 1099511627775L | (long)in.get(222 + inPos) << 40 & 281474976710655L | (long)in.get(223 + inPos) << 48 & 72057594037927935L;
      }
   }

   private static final class Packer57 extends BytePackerForLong {
      private Packer57() {
         super(57);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 144115188075855871L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 144115188075855871L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 144115188075855871L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 144115188075855871L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 144115188075855871L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 144115188075855871L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 144115188075855871L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & 144115188075855871L) >>> 56 | (in[1 + inPos] & 144115188075855871L) << 1) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 144115188075855871L) >>> 7 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 144115188075855871L) >>> 15 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 144115188075855871L) >>> 23 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 144115188075855871L) >>> 31 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 144115188075855871L) >>> 39 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 144115188075855871L) >>> 47 & 255L));
         out[14 + outPos] = (byte)((int)(((in[1 + inPos] & 144115188075855871L) >>> 55 | (in[2 + inPos] & 144115188075855871L) << 2) & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 144115188075855871L) >>> 6 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 144115188075855871L) >>> 14 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 144115188075855871L) >>> 22 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 144115188075855871L) >>> 30 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 144115188075855871L) >>> 38 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 144115188075855871L) >>> 46 & 255L));
         out[21 + outPos] = (byte)((int)(((in[2 + inPos] & 144115188075855871L) >>> 54 | (in[3 + inPos] & 144115188075855871L) << 3) & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 144115188075855871L) >>> 5 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 144115188075855871L) >>> 13 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 144115188075855871L) >>> 21 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 144115188075855871L) >>> 29 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 144115188075855871L) >>> 37 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 144115188075855871L) >>> 45 & 255L));
         out[28 + outPos] = (byte)((int)(((in[3 + inPos] & 144115188075855871L) >>> 53 | (in[4 + inPos] & 144115188075855871L) << 4) & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 144115188075855871L) >>> 4 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 144115188075855871L) >>> 12 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 144115188075855871L) >>> 20 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 144115188075855871L) >>> 28 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 144115188075855871L) >>> 36 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 144115188075855871L) >>> 44 & 255L));
         out[35 + outPos] = (byte)((int)(((in[4 + inPos] & 144115188075855871L) >>> 52 | (in[5 + inPos] & 144115188075855871L) << 5) & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 144115188075855871L) >>> 3 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 144115188075855871L) >>> 11 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 144115188075855871L) >>> 19 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 144115188075855871L) >>> 27 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 144115188075855871L) >>> 35 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 144115188075855871L) >>> 43 & 255L));
         out[42 + outPos] = (byte)((int)(((in[5 + inPos] & 144115188075855871L) >>> 51 | (in[6 + inPos] & 144115188075855871L) << 6) & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 144115188075855871L) >>> 2 & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 144115188075855871L) >>> 10 & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 144115188075855871L) >>> 18 & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 144115188075855871L) >>> 26 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 144115188075855871L) >>> 34 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 144115188075855871L) >>> 42 & 255L));
         out[49 + outPos] = (byte)((int)(((in[6 + inPos] & 144115188075855871L) >>> 50 | (in[7 + inPos] & 144115188075855871L) << 7) & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 1 & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 9 & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 17 & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 25 & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 33 & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 41 & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 49 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 144115188075855871L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 144115188075855871L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 144115188075855871L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 144115188075855871L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 144115188075855871L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 144115188075855871L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 144115188075855871L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & 144115188075855871L) >>> 56 | (in[1 + inPos] & 144115188075855871L) << 1) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 144115188075855871L) >>> 7 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 144115188075855871L) >>> 15 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 144115188075855871L) >>> 23 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 144115188075855871L) >>> 31 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 144115188075855871L) >>> 39 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 144115188075855871L) >>> 47 & 255L));
         out[14 + outPos] = (byte)((int)(((in[1 + inPos] & 144115188075855871L) >>> 55 | (in[2 + inPos] & 144115188075855871L) << 2) & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 144115188075855871L) >>> 6 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 144115188075855871L) >>> 14 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 144115188075855871L) >>> 22 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 144115188075855871L) >>> 30 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 144115188075855871L) >>> 38 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 144115188075855871L) >>> 46 & 255L));
         out[21 + outPos] = (byte)((int)(((in[2 + inPos] & 144115188075855871L) >>> 54 | (in[3 + inPos] & 144115188075855871L) << 3) & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 144115188075855871L) >>> 5 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 144115188075855871L) >>> 13 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 144115188075855871L) >>> 21 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 144115188075855871L) >>> 29 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 144115188075855871L) >>> 37 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 144115188075855871L) >>> 45 & 255L));
         out[28 + outPos] = (byte)((int)(((in[3 + inPos] & 144115188075855871L) >>> 53 | (in[4 + inPos] & 144115188075855871L) << 4) & 255L));
         out[29 + outPos] = (byte)((int)((in[4 + inPos] & 144115188075855871L) >>> 4 & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 144115188075855871L) >>> 12 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 144115188075855871L) >>> 20 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 144115188075855871L) >>> 28 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 144115188075855871L) >>> 36 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 144115188075855871L) >>> 44 & 255L));
         out[35 + outPos] = (byte)((int)(((in[4 + inPos] & 144115188075855871L) >>> 52 | (in[5 + inPos] & 144115188075855871L) << 5) & 255L));
         out[36 + outPos] = (byte)((int)((in[5 + inPos] & 144115188075855871L) >>> 3 & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 144115188075855871L) >>> 11 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 144115188075855871L) >>> 19 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 144115188075855871L) >>> 27 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 144115188075855871L) >>> 35 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 144115188075855871L) >>> 43 & 255L));
         out[42 + outPos] = (byte)((int)(((in[5 + inPos] & 144115188075855871L) >>> 51 | (in[6 + inPos] & 144115188075855871L) << 6) & 255L));
         out[43 + outPos] = (byte)((int)((in[6 + inPos] & 144115188075855871L) >>> 2 & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 144115188075855871L) >>> 10 & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 144115188075855871L) >>> 18 & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 144115188075855871L) >>> 26 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 144115188075855871L) >>> 34 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 144115188075855871L) >>> 42 & 255L));
         out[49 + outPos] = (byte)((int)(((in[6 + inPos] & 144115188075855871L) >>> 50 | (in[7 + inPos] & 144115188075855871L) << 7) & 255L));
         out[50 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 1 & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 9 & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 17 & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 25 & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 33 & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 41 & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & 144115188075855871L) >>> 49 & 255L));
         out[57 + outPos] = (byte)((int)(in[8 + inPos] & 144115188075855871L & 255L));
         out[58 + outPos] = (byte)((int)((in[8 + inPos] & 144115188075855871L) >>> 8 & 255L));
         out[59 + outPos] = (byte)((int)((in[8 + inPos] & 144115188075855871L) >>> 16 & 255L));
         out[60 + outPos] = (byte)((int)((in[8 + inPos] & 144115188075855871L) >>> 24 & 255L));
         out[61 + outPos] = (byte)((int)((in[8 + inPos] & 144115188075855871L) >>> 32 & 255L));
         out[62 + outPos] = (byte)((int)((in[8 + inPos] & 144115188075855871L) >>> 40 & 255L));
         out[63 + outPos] = (byte)((int)((in[8 + inPos] & 144115188075855871L) >>> 48 & 255L));
         out[64 + outPos] = (byte)((int)(((in[8 + inPos] & 144115188075855871L) >>> 56 | (in[9 + inPos] & 144115188075855871L) << 1) & 255L));
         out[65 + outPos] = (byte)((int)((in[9 + inPos] & 144115188075855871L) >>> 7 & 255L));
         out[66 + outPos] = (byte)((int)((in[9 + inPos] & 144115188075855871L) >>> 15 & 255L));
         out[67 + outPos] = (byte)((int)((in[9 + inPos] & 144115188075855871L) >>> 23 & 255L));
         out[68 + outPos] = (byte)((int)((in[9 + inPos] & 144115188075855871L) >>> 31 & 255L));
         out[69 + outPos] = (byte)((int)((in[9 + inPos] & 144115188075855871L) >>> 39 & 255L));
         out[70 + outPos] = (byte)((int)((in[9 + inPos] & 144115188075855871L) >>> 47 & 255L));
         out[71 + outPos] = (byte)((int)(((in[9 + inPos] & 144115188075855871L) >>> 55 | (in[10 + inPos] & 144115188075855871L) << 2) & 255L));
         out[72 + outPos] = (byte)((int)((in[10 + inPos] & 144115188075855871L) >>> 6 & 255L));
         out[73 + outPos] = (byte)((int)((in[10 + inPos] & 144115188075855871L) >>> 14 & 255L));
         out[74 + outPos] = (byte)((int)((in[10 + inPos] & 144115188075855871L) >>> 22 & 255L));
         out[75 + outPos] = (byte)((int)((in[10 + inPos] & 144115188075855871L) >>> 30 & 255L));
         out[76 + outPos] = (byte)((int)((in[10 + inPos] & 144115188075855871L) >>> 38 & 255L));
         out[77 + outPos] = (byte)((int)((in[10 + inPos] & 144115188075855871L) >>> 46 & 255L));
         out[78 + outPos] = (byte)((int)(((in[10 + inPos] & 144115188075855871L) >>> 54 | (in[11 + inPos] & 144115188075855871L) << 3) & 255L));
         out[79 + outPos] = (byte)((int)((in[11 + inPos] & 144115188075855871L) >>> 5 & 255L));
         out[80 + outPos] = (byte)((int)((in[11 + inPos] & 144115188075855871L) >>> 13 & 255L));
         out[81 + outPos] = (byte)((int)((in[11 + inPos] & 144115188075855871L) >>> 21 & 255L));
         out[82 + outPos] = (byte)((int)((in[11 + inPos] & 144115188075855871L) >>> 29 & 255L));
         out[83 + outPos] = (byte)((int)((in[11 + inPos] & 144115188075855871L) >>> 37 & 255L));
         out[84 + outPos] = (byte)((int)((in[11 + inPos] & 144115188075855871L) >>> 45 & 255L));
         out[85 + outPos] = (byte)((int)(((in[11 + inPos] & 144115188075855871L) >>> 53 | (in[12 + inPos] & 144115188075855871L) << 4) & 255L));
         out[86 + outPos] = (byte)((int)((in[12 + inPos] & 144115188075855871L) >>> 4 & 255L));
         out[87 + outPos] = (byte)((int)((in[12 + inPos] & 144115188075855871L) >>> 12 & 255L));
         out[88 + outPos] = (byte)((int)((in[12 + inPos] & 144115188075855871L) >>> 20 & 255L));
         out[89 + outPos] = (byte)((int)((in[12 + inPos] & 144115188075855871L) >>> 28 & 255L));
         out[90 + outPos] = (byte)((int)((in[12 + inPos] & 144115188075855871L) >>> 36 & 255L));
         out[91 + outPos] = (byte)((int)((in[12 + inPos] & 144115188075855871L) >>> 44 & 255L));
         out[92 + outPos] = (byte)((int)(((in[12 + inPos] & 144115188075855871L) >>> 52 | (in[13 + inPos] & 144115188075855871L) << 5) & 255L));
         out[93 + outPos] = (byte)((int)((in[13 + inPos] & 144115188075855871L) >>> 3 & 255L));
         out[94 + outPos] = (byte)((int)((in[13 + inPos] & 144115188075855871L) >>> 11 & 255L));
         out[95 + outPos] = (byte)((int)((in[13 + inPos] & 144115188075855871L) >>> 19 & 255L));
         out[96 + outPos] = (byte)((int)((in[13 + inPos] & 144115188075855871L) >>> 27 & 255L));
         out[97 + outPos] = (byte)((int)((in[13 + inPos] & 144115188075855871L) >>> 35 & 255L));
         out[98 + outPos] = (byte)((int)((in[13 + inPos] & 144115188075855871L) >>> 43 & 255L));
         out[99 + outPos] = (byte)((int)(((in[13 + inPos] & 144115188075855871L) >>> 51 | (in[14 + inPos] & 144115188075855871L) << 6) & 255L));
         out[100 + outPos] = (byte)((int)((in[14 + inPos] & 144115188075855871L) >>> 2 & 255L));
         out[101 + outPos] = (byte)((int)((in[14 + inPos] & 144115188075855871L) >>> 10 & 255L));
         out[102 + outPos] = (byte)((int)((in[14 + inPos] & 144115188075855871L) >>> 18 & 255L));
         out[103 + outPos] = (byte)((int)((in[14 + inPos] & 144115188075855871L) >>> 26 & 255L));
         out[104 + outPos] = (byte)((int)((in[14 + inPos] & 144115188075855871L) >>> 34 & 255L));
         out[105 + outPos] = (byte)((int)((in[14 + inPos] & 144115188075855871L) >>> 42 & 255L));
         out[106 + outPos] = (byte)((int)(((in[14 + inPos] & 144115188075855871L) >>> 50 | (in[15 + inPos] & 144115188075855871L) << 7) & 255L));
         out[107 + outPos] = (byte)((int)((in[15 + inPos] & 144115188075855871L) >>> 1 & 255L));
         out[108 + outPos] = (byte)((int)((in[15 + inPos] & 144115188075855871L) >>> 9 & 255L));
         out[109 + outPos] = (byte)((int)((in[15 + inPos] & 144115188075855871L) >>> 17 & 255L));
         out[110 + outPos] = (byte)((int)((in[15 + inPos] & 144115188075855871L) >>> 25 & 255L));
         out[111 + outPos] = (byte)((int)((in[15 + inPos] & 144115188075855871L) >>> 33 & 255L));
         out[112 + outPos] = (byte)((int)((in[15 + inPos] & 144115188075855871L) >>> 41 & 255L));
         out[113 + outPos] = (byte)((int)((in[15 + inPos] & 144115188075855871L) >>> 49 & 255L));
         out[114 + outPos] = (byte)((int)(in[16 + inPos] & 144115188075855871L & 255L));
         out[115 + outPos] = (byte)((int)((in[16 + inPos] & 144115188075855871L) >>> 8 & 255L));
         out[116 + outPos] = (byte)((int)((in[16 + inPos] & 144115188075855871L) >>> 16 & 255L));
         out[117 + outPos] = (byte)((int)((in[16 + inPos] & 144115188075855871L) >>> 24 & 255L));
         out[118 + outPos] = (byte)((int)((in[16 + inPos] & 144115188075855871L) >>> 32 & 255L));
         out[119 + outPos] = (byte)((int)((in[16 + inPos] & 144115188075855871L) >>> 40 & 255L));
         out[120 + outPos] = (byte)((int)((in[16 + inPos] & 144115188075855871L) >>> 48 & 255L));
         out[121 + outPos] = (byte)((int)(((in[16 + inPos] & 144115188075855871L) >>> 56 | (in[17 + inPos] & 144115188075855871L) << 1) & 255L));
         out[122 + outPos] = (byte)((int)((in[17 + inPos] & 144115188075855871L) >>> 7 & 255L));
         out[123 + outPos] = (byte)((int)((in[17 + inPos] & 144115188075855871L) >>> 15 & 255L));
         out[124 + outPos] = (byte)((int)((in[17 + inPos] & 144115188075855871L) >>> 23 & 255L));
         out[125 + outPos] = (byte)((int)((in[17 + inPos] & 144115188075855871L) >>> 31 & 255L));
         out[126 + outPos] = (byte)((int)((in[17 + inPos] & 144115188075855871L) >>> 39 & 255L));
         out[127 + outPos] = (byte)((int)((in[17 + inPos] & 144115188075855871L) >>> 47 & 255L));
         out[128 + outPos] = (byte)((int)(((in[17 + inPos] & 144115188075855871L) >>> 55 | (in[18 + inPos] & 144115188075855871L) << 2) & 255L));
         out[129 + outPos] = (byte)((int)((in[18 + inPos] & 144115188075855871L) >>> 6 & 255L));
         out[130 + outPos] = (byte)((int)((in[18 + inPos] & 144115188075855871L) >>> 14 & 255L));
         out[131 + outPos] = (byte)((int)((in[18 + inPos] & 144115188075855871L) >>> 22 & 255L));
         out[132 + outPos] = (byte)((int)((in[18 + inPos] & 144115188075855871L) >>> 30 & 255L));
         out[133 + outPos] = (byte)((int)((in[18 + inPos] & 144115188075855871L) >>> 38 & 255L));
         out[134 + outPos] = (byte)((int)((in[18 + inPos] & 144115188075855871L) >>> 46 & 255L));
         out[135 + outPos] = (byte)((int)(((in[18 + inPos] & 144115188075855871L) >>> 54 | (in[19 + inPos] & 144115188075855871L) << 3) & 255L));
         out[136 + outPos] = (byte)((int)((in[19 + inPos] & 144115188075855871L) >>> 5 & 255L));
         out[137 + outPos] = (byte)((int)((in[19 + inPos] & 144115188075855871L) >>> 13 & 255L));
         out[138 + outPos] = (byte)((int)((in[19 + inPos] & 144115188075855871L) >>> 21 & 255L));
         out[139 + outPos] = (byte)((int)((in[19 + inPos] & 144115188075855871L) >>> 29 & 255L));
         out[140 + outPos] = (byte)((int)((in[19 + inPos] & 144115188075855871L) >>> 37 & 255L));
         out[141 + outPos] = (byte)((int)((in[19 + inPos] & 144115188075855871L) >>> 45 & 255L));
         out[142 + outPos] = (byte)((int)(((in[19 + inPos] & 144115188075855871L) >>> 53 | (in[20 + inPos] & 144115188075855871L) << 4) & 255L));
         out[143 + outPos] = (byte)((int)((in[20 + inPos] & 144115188075855871L) >>> 4 & 255L));
         out[144 + outPos] = (byte)((int)((in[20 + inPos] & 144115188075855871L) >>> 12 & 255L));
         out[145 + outPos] = (byte)((int)((in[20 + inPos] & 144115188075855871L) >>> 20 & 255L));
         out[146 + outPos] = (byte)((int)((in[20 + inPos] & 144115188075855871L) >>> 28 & 255L));
         out[147 + outPos] = (byte)((int)((in[20 + inPos] & 144115188075855871L) >>> 36 & 255L));
         out[148 + outPos] = (byte)((int)((in[20 + inPos] & 144115188075855871L) >>> 44 & 255L));
         out[149 + outPos] = (byte)((int)(((in[20 + inPos] & 144115188075855871L) >>> 52 | (in[21 + inPos] & 144115188075855871L) << 5) & 255L));
         out[150 + outPos] = (byte)((int)((in[21 + inPos] & 144115188075855871L) >>> 3 & 255L));
         out[151 + outPos] = (byte)((int)((in[21 + inPos] & 144115188075855871L) >>> 11 & 255L));
         out[152 + outPos] = (byte)((int)((in[21 + inPos] & 144115188075855871L) >>> 19 & 255L));
         out[153 + outPos] = (byte)((int)((in[21 + inPos] & 144115188075855871L) >>> 27 & 255L));
         out[154 + outPos] = (byte)((int)((in[21 + inPos] & 144115188075855871L) >>> 35 & 255L));
         out[155 + outPos] = (byte)((int)((in[21 + inPos] & 144115188075855871L) >>> 43 & 255L));
         out[156 + outPos] = (byte)((int)(((in[21 + inPos] & 144115188075855871L) >>> 51 | (in[22 + inPos] & 144115188075855871L) << 6) & 255L));
         out[157 + outPos] = (byte)((int)((in[22 + inPos] & 144115188075855871L) >>> 2 & 255L));
         out[158 + outPos] = (byte)((int)((in[22 + inPos] & 144115188075855871L) >>> 10 & 255L));
         out[159 + outPos] = (byte)((int)((in[22 + inPos] & 144115188075855871L) >>> 18 & 255L));
         out[160 + outPos] = (byte)((int)((in[22 + inPos] & 144115188075855871L) >>> 26 & 255L));
         out[161 + outPos] = (byte)((int)((in[22 + inPos] & 144115188075855871L) >>> 34 & 255L));
         out[162 + outPos] = (byte)((int)((in[22 + inPos] & 144115188075855871L) >>> 42 & 255L));
         out[163 + outPos] = (byte)((int)(((in[22 + inPos] & 144115188075855871L) >>> 50 | (in[23 + inPos] & 144115188075855871L) << 7) & 255L));
         out[164 + outPos] = (byte)((int)((in[23 + inPos] & 144115188075855871L) >>> 1 & 255L));
         out[165 + outPos] = (byte)((int)((in[23 + inPos] & 144115188075855871L) >>> 9 & 255L));
         out[166 + outPos] = (byte)((int)((in[23 + inPos] & 144115188075855871L) >>> 17 & 255L));
         out[167 + outPos] = (byte)((int)((in[23 + inPos] & 144115188075855871L) >>> 25 & 255L));
         out[168 + outPos] = (byte)((int)((in[23 + inPos] & 144115188075855871L) >>> 33 & 255L));
         out[169 + outPos] = (byte)((int)((in[23 + inPos] & 144115188075855871L) >>> 41 & 255L));
         out[170 + outPos] = (byte)((int)((in[23 + inPos] & 144115188075855871L) >>> 49 & 255L));
         out[171 + outPos] = (byte)((int)(in[24 + inPos] & 144115188075855871L & 255L));
         out[172 + outPos] = (byte)((int)((in[24 + inPos] & 144115188075855871L) >>> 8 & 255L));
         out[173 + outPos] = (byte)((int)((in[24 + inPos] & 144115188075855871L) >>> 16 & 255L));
         out[174 + outPos] = (byte)((int)((in[24 + inPos] & 144115188075855871L) >>> 24 & 255L));
         out[175 + outPos] = (byte)((int)((in[24 + inPos] & 144115188075855871L) >>> 32 & 255L));
         out[176 + outPos] = (byte)((int)((in[24 + inPos] & 144115188075855871L) >>> 40 & 255L));
         out[177 + outPos] = (byte)((int)((in[24 + inPos] & 144115188075855871L) >>> 48 & 255L));
         out[178 + outPos] = (byte)((int)(((in[24 + inPos] & 144115188075855871L) >>> 56 | (in[25 + inPos] & 144115188075855871L) << 1) & 255L));
         out[179 + outPos] = (byte)((int)((in[25 + inPos] & 144115188075855871L) >>> 7 & 255L));
         out[180 + outPos] = (byte)((int)((in[25 + inPos] & 144115188075855871L) >>> 15 & 255L));
         out[181 + outPos] = (byte)((int)((in[25 + inPos] & 144115188075855871L) >>> 23 & 255L));
         out[182 + outPos] = (byte)((int)((in[25 + inPos] & 144115188075855871L) >>> 31 & 255L));
         out[183 + outPos] = (byte)((int)((in[25 + inPos] & 144115188075855871L) >>> 39 & 255L));
         out[184 + outPos] = (byte)((int)((in[25 + inPos] & 144115188075855871L) >>> 47 & 255L));
         out[185 + outPos] = (byte)((int)(((in[25 + inPos] & 144115188075855871L) >>> 55 | (in[26 + inPos] & 144115188075855871L) << 2) & 255L));
         out[186 + outPos] = (byte)((int)((in[26 + inPos] & 144115188075855871L) >>> 6 & 255L));
         out[187 + outPos] = (byte)((int)((in[26 + inPos] & 144115188075855871L) >>> 14 & 255L));
         out[188 + outPos] = (byte)((int)((in[26 + inPos] & 144115188075855871L) >>> 22 & 255L));
         out[189 + outPos] = (byte)((int)((in[26 + inPos] & 144115188075855871L) >>> 30 & 255L));
         out[190 + outPos] = (byte)((int)((in[26 + inPos] & 144115188075855871L) >>> 38 & 255L));
         out[191 + outPos] = (byte)((int)((in[26 + inPos] & 144115188075855871L) >>> 46 & 255L));
         out[192 + outPos] = (byte)((int)(((in[26 + inPos] & 144115188075855871L) >>> 54 | (in[27 + inPos] & 144115188075855871L) << 3) & 255L));
         out[193 + outPos] = (byte)((int)((in[27 + inPos] & 144115188075855871L) >>> 5 & 255L));
         out[194 + outPos] = (byte)((int)((in[27 + inPos] & 144115188075855871L) >>> 13 & 255L));
         out[195 + outPos] = (byte)((int)((in[27 + inPos] & 144115188075855871L) >>> 21 & 255L));
         out[196 + outPos] = (byte)((int)((in[27 + inPos] & 144115188075855871L) >>> 29 & 255L));
         out[197 + outPos] = (byte)((int)((in[27 + inPos] & 144115188075855871L) >>> 37 & 255L));
         out[198 + outPos] = (byte)((int)((in[27 + inPos] & 144115188075855871L) >>> 45 & 255L));
         out[199 + outPos] = (byte)((int)(((in[27 + inPos] & 144115188075855871L) >>> 53 | (in[28 + inPos] & 144115188075855871L) << 4) & 255L));
         out[200 + outPos] = (byte)((int)((in[28 + inPos] & 144115188075855871L) >>> 4 & 255L));
         out[201 + outPos] = (byte)((int)((in[28 + inPos] & 144115188075855871L) >>> 12 & 255L));
         out[202 + outPos] = (byte)((int)((in[28 + inPos] & 144115188075855871L) >>> 20 & 255L));
         out[203 + outPos] = (byte)((int)((in[28 + inPos] & 144115188075855871L) >>> 28 & 255L));
         out[204 + outPos] = (byte)((int)((in[28 + inPos] & 144115188075855871L) >>> 36 & 255L));
         out[205 + outPos] = (byte)((int)((in[28 + inPos] & 144115188075855871L) >>> 44 & 255L));
         out[206 + outPos] = (byte)((int)(((in[28 + inPos] & 144115188075855871L) >>> 52 | (in[29 + inPos] & 144115188075855871L) << 5) & 255L));
         out[207 + outPos] = (byte)((int)((in[29 + inPos] & 144115188075855871L) >>> 3 & 255L));
         out[208 + outPos] = (byte)((int)((in[29 + inPos] & 144115188075855871L) >>> 11 & 255L));
         out[209 + outPos] = (byte)((int)((in[29 + inPos] & 144115188075855871L) >>> 19 & 255L));
         out[210 + outPos] = (byte)((int)((in[29 + inPos] & 144115188075855871L) >>> 27 & 255L));
         out[211 + outPos] = (byte)((int)((in[29 + inPos] & 144115188075855871L) >>> 35 & 255L));
         out[212 + outPos] = (byte)((int)((in[29 + inPos] & 144115188075855871L) >>> 43 & 255L));
         out[213 + outPos] = (byte)((int)(((in[29 + inPos] & 144115188075855871L) >>> 51 | (in[30 + inPos] & 144115188075855871L) << 6) & 255L));
         out[214 + outPos] = (byte)((int)((in[30 + inPos] & 144115188075855871L) >>> 2 & 255L));
         out[215 + outPos] = (byte)((int)((in[30 + inPos] & 144115188075855871L) >>> 10 & 255L));
         out[216 + outPos] = (byte)((int)((in[30 + inPos] & 144115188075855871L) >>> 18 & 255L));
         out[217 + outPos] = (byte)((int)((in[30 + inPos] & 144115188075855871L) >>> 26 & 255L));
         out[218 + outPos] = (byte)((int)((in[30 + inPos] & 144115188075855871L) >>> 34 & 255L));
         out[219 + outPos] = (byte)((int)((in[30 + inPos] & 144115188075855871L) >>> 42 & 255L));
         out[220 + outPos] = (byte)((int)(((in[30 + inPos] & 144115188075855871L) >>> 50 | (in[31 + inPos] & 144115188075855871L) << 7) & 255L));
         out[221 + outPos] = (byte)((int)((in[31 + inPos] & 144115188075855871L) >>> 1 & 255L));
         out[222 + outPos] = (byte)((int)((in[31 + inPos] & 144115188075855871L) >>> 9 & 255L));
         out[223 + outPos] = (byte)((int)((in[31 + inPos] & 144115188075855871L) >>> 17 & 255L));
         out[224 + outPos] = (byte)((int)((in[31 + inPos] & 144115188075855871L) >>> 25 & 255L));
         out[225 + outPos] = (byte)((int)((in[31 + inPos] & 144115188075855871L) >>> 33 & 255L));
         out[226 + outPos] = (byte)((int)((in[31 + inPos] & 144115188075855871L) >>> 41 & 255L));
         out[227 + outPos] = (byte)((int)((in[31 + inPos] & 144115188075855871L) >>> 49 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & 144115188075855871L;
         out[1 + outPos] = (long)in[7 + inPos] >> 1 & 127L | (long)in[8 + inPos] << 7 & 32767L | (long)in[9 + inPos] << 15 & 8388607L | (long)in[10 + inPos] << 23 & 2147483647L | (long)in[11 + inPos] << 31 & 549755813887L | (long)in[12 + inPos] << 39 & 140737488355327L | (long)in[13 + inPos] << 47 & 36028797018963967L | (long)in[14 + inPos] << 55 & 144115188075855871L;
         out[2 + outPos] = (long)in[14 + inPos] >> 2 & 63L | (long)in[15 + inPos] << 6 & 16383L | (long)in[16 + inPos] << 14 & 4194303L | (long)in[17 + inPos] << 22 & 1073741823L | (long)in[18 + inPos] << 30 & 274877906943L | (long)in[19 + inPos] << 38 & 70368744177663L | (long)in[20 + inPos] << 46 & 18014398509481983L | (long)in[21 + inPos] << 54 & 144115188075855871L;
         out[3 + outPos] = (long)in[21 + inPos] >> 3 & 31L | (long)in[22 + inPos] << 5 & 8191L | (long)in[23 + inPos] << 13 & 2097151L | (long)in[24 + inPos] << 21 & 536870911L | (long)in[25 + inPos] << 29 & 137438953471L | (long)in[26 + inPos] << 37 & 35184372088831L | (long)in[27 + inPos] << 45 & 9007199254740991L | (long)in[28 + inPos] << 53 & 144115188075855871L;
         out[4 + outPos] = (long)in[28 + inPos] >> 4 & 15L | (long)in[29 + inPos] << 4 & 4095L | (long)in[30 + inPos] << 12 & 1048575L | (long)in[31 + inPos] << 20 & 268435455L | (long)in[32 + inPos] << 28 & 68719476735L | (long)in[33 + inPos] << 36 & 17592186044415L | (long)in[34 + inPos] << 44 & 4503599627370495L | (long)in[35 + inPos] << 52 & 144115188075855871L;
         out[5 + outPos] = (long)in[35 + inPos] >> 5 & 7L | (long)in[36 + inPos] << 3 & 2047L | (long)in[37 + inPos] << 11 & 524287L | (long)in[38 + inPos] << 19 & 134217727L | (long)in[39 + inPos] << 27 & 34359738367L | (long)in[40 + inPos] << 35 & 8796093022207L | (long)in[41 + inPos] << 43 & 2251799813685247L | (long)in[42 + inPos] << 51 & 144115188075855871L;
         out[6 + outPos] = (long)in[42 + inPos] >> 6 & 3L | (long)in[43 + inPos] << 2 & 1023L | (long)in[44 + inPos] << 10 & 262143L | (long)in[45 + inPos] << 18 & 67108863L | (long)in[46 + inPos] << 26 & 17179869183L | (long)in[47 + inPos] << 34 & 4398046511103L | (long)in[48 + inPos] << 42 & 1125899906842623L | (long)in[49 + inPos] << 50 & 144115188075855871L;
         out[7 + outPos] = (long)in[49 + inPos] >> 7 & 1L | (long)in[50 + inPos] << 1 & 511L | (long)in[51 + inPos] << 9 & 131071L | (long)in[52 + inPos] << 17 & 33554431L | (long)in[53 + inPos] << 25 & 8589934591L | (long)in[54 + inPos] << 33 & 2199023255551L | (long)in[55 + inPos] << 41 & 562949953421311L | (long)in[56 + inPos] << 49 & 144115188075855871L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & 144115188075855871L;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 1 & 127L | (long)in.get(8 + inPos) << 7 & 32767L | (long)in.get(9 + inPos) << 15 & 8388607L | (long)in.get(10 + inPos) << 23 & 2147483647L | (long)in.get(11 + inPos) << 31 & 549755813887L | (long)in.get(12 + inPos) << 39 & 140737488355327L | (long)in.get(13 + inPos) << 47 & 36028797018963967L | (long)in.get(14 + inPos) << 55 & 144115188075855871L;
         out[2 + outPos] = (long)in.get(14 + inPos) >> 2 & 63L | (long)in.get(15 + inPos) << 6 & 16383L | (long)in.get(16 + inPos) << 14 & 4194303L | (long)in.get(17 + inPos) << 22 & 1073741823L | (long)in.get(18 + inPos) << 30 & 274877906943L | (long)in.get(19 + inPos) << 38 & 70368744177663L | (long)in.get(20 + inPos) << 46 & 18014398509481983L | (long)in.get(21 + inPos) << 54 & 144115188075855871L;
         out[3 + outPos] = (long)in.get(21 + inPos) >> 3 & 31L | (long)in.get(22 + inPos) << 5 & 8191L | (long)in.get(23 + inPos) << 13 & 2097151L | (long)in.get(24 + inPos) << 21 & 536870911L | (long)in.get(25 + inPos) << 29 & 137438953471L | (long)in.get(26 + inPos) << 37 & 35184372088831L | (long)in.get(27 + inPos) << 45 & 9007199254740991L | (long)in.get(28 + inPos) << 53 & 144115188075855871L;
         out[4 + outPos] = (long)in.get(28 + inPos) >> 4 & 15L | (long)in.get(29 + inPos) << 4 & 4095L | (long)in.get(30 + inPos) << 12 & 1048575L | (long)in.get(31 + inPos) << 20 & 268435455L | (long)in.get(32 + inPos) << 28 & 68719476735L | (long)in.get(33 + inPos) << 36 & 17592186044415L | (long)in.get(34 + inPos) << 44 & 4503599627370495L | (long)in.get(35 + inPos) << 52 & 144115188075855871L;
         out[5 + outPos] = (long)in.get(35 + inPos) >> 5 & 7L | (long)in.get(36 + inPos) << 3 & 2047L | (long)in.get(37 + inPos) << 11 & 524287L | (long)in.get(38 + inPos) << 19 & 134217727L | (long)in.get(39 + inPos) << 27 & 34359738367L | (long)in.get(40 + inPos) << 35 & 8796093022207L | (long)in.get(41 + inPos) << 43 & 2251799813685247L | (long)in.get(42 + inPos) << 51 & 144115188075855871L;
         out[6 + outPos] = (long)in.get(42 + inPos) >> 6 & 3L | (long)in.get(43 + inPos) << 2 & 1023L | (long)in.get(44 + inPos) << 10 & 262143L | (long)in.get(45 + inPos) << 18 & 67108863L | (long)in.get(46 + inPos) << 26 & 17179869183L | (long)in.get(47 + inPos) << 34 & 4398046511103L | (long)in.get(48 + inPos) << 42 & 1125899906842623L | (long)in.get(49 + inPos) << 50 & 144115188075855871L;
         out[7 + outPos] = (long)in.get(49 + inPos) >> 7 & 1L | (long)in.get(50 + inPos) << 1 & 511L | (long)in.get(51 + inPos) << 9 & 131071L | (long)in.get(52 + inPos) << 17 & 33554431L | (long)in.get(53 + inPos) << 25 & 8589934591L | (long)in.get(54 + inPos) << 33 & 2199023255551L | (long)in.get(55 + inPos) << 41 & 562949953421311L | (long)in.get(56 + inPos) << 49 & 144115188075855871L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & 144115188075855871L;
         out[1 + outPos] = (long)in[7 + inPos] >> 1 & 127L | (long)in[8 + inPos] << 7 & 32767L | (long)in[9 + inPos] << 15 & 8388607L | (long)in[10 + inPos] << 23 & 2147483647L | (long)in[11 + inPos] << 31 & 549755813887L | (long)in[12 + inPos] << 39 & 140737488355327L | (long)in[13 + inPos] << 47 & 36028797018963967L | (long)in[14 + inPos] << 55 & 144115188075855871L;
         out[2 + outPos] = (long)in[14 + inPos] >> 2 & 63L | (long)in[15 + inPos] << 6 & 16383L | (long)in[16 + inPos] << 14 & 4194303L | (long)in[17 + inPos] << 22 & 1073741823L | (long)in[18 + inPos] << 30 & 274877906943L | (long)in[19 + inPos] << 38 & 70368744177663L | (long)in[20 + inPos] << 46 & 18014398509481983L | (long)in[21 + inPos] << 54 & 144115188075855871L;
         out[3 + outPos] = (long)in[21 + inPos] >> 3 & 31L | (long)in[22 + inPos] << 5 & 8191L | (long)in[23 + inPos] << 13 & 2097151L | (long)in[24 + inPos] << 21 & 536870911L | (long)in[25 + inPos] << 29 & 137438953471L | (long)in[26 + inPos] << 37 & 35184372088831L | (long)in[27 + inPos] << 45 & 9007199254740991L | (long)in[28 + inPos] << 53 & 144115188075855871L;
         out[4 + outPos] = (long)in[28 + inPos] >> 4 & 15L | (long)in[29 + inPos] << 4 & 4095L | (long)in[30 + inPos] << 12 & 1048575L | (long)in[31 + inPos] << 20 & 268435455L | (long)in[32 + inPos] << 28 & 68719476735L | (long)in[33 + inPos] << 36 & 17592186044415L | (long)in[34 + inPos] << 44 & 4503599627370495L | (long)in[35 + inPos] << 52 & 144115188075855871L;
         out[5 + outPos] = (long)in[35 + inPos] >> 5 & 7L | (long)in[36 + inPos] << 3 & 2047L | (long)in[37 + inPos] << 11 & 524287L | (long)in[38 + inPos] << 19 & 134217727L | (long)in[39 + inPos] << 27 & 34359738367L | (long)in[40 + inPos] << 35 & 8796093022207L | (long)in[41 + inPos] << 43 & 2251799813685247L | (long)in[42 + inPos] << 51 & 144115188075855871L;
         out[6 + outPos] = (long)in[42 + inPos] >> 6 & 3L | (long)in[43 + inPos] << 2 & 1023L | (long)in[44 + inPos] << 10 & 262143L | (long)in[45 + inPos] << 18 & 67108863L | (long)in[46 + inPos] << 26 & 17179869183L | (long)in[47 + inPos] << 34 & 4398046511103L | (long)in[48 + inPos] << 42 & 1125899906842623L | (long)in[49 + inPos] << 50 & 144115188075855871L;
         out[7 + outPos] = (long)in[49 + inPos] >> 7 & 1L | (long)in[50 + inPos] << 1 & 511L | (long)in[51 + inPos] << 9 & 131071L | (long)in[52 + inPos] << 17 & 33554431L | (long)in[53 + inPos] << 25 & 8589934591L | (long)in[54 + inPos] << 33 & 2199023255551L | (long)in[55 + inPos] << 41 & 562949953421311L | (long)in[56 + inPos] << 49 & 144115188075855871L;
         out[8 + outPos] = (long)in[57 + inPos] & 255L | (long)in[58 + inPos] << 8 & 65535L | (long)in[59 + inPos] << 16 & 16777215L | (long)in[60 + inPos] << 24 & 4294967295L | (long)in[61 + inPos] << 32 & 1099511627775L | (long)in[62 + inPos] << 40 & 281474976710655L | (long)in[63 + inPos] << 48 & 72057594037927935L | (long)in[64 + inPos] << 56 & 144115188075855871L;
         out[9 + outPos] = (long)in[64 + inPos] >> 1 & 127L | (long)in[65 + inPos] << 7 & 32767L | (long)in[66 + inPos] << 15 & 8388607L | (long)in[67 + inPos] << 23 & 2147483647L | (long)in[68 + inPos] << 31 & 549755813887L | (long)in[69 + inPos] << 39 & 140737488355327L | (long)in[70 + inPos] << 47 & 36028797018963967L | (long)in[71 + inPos] << 55 & 144115188075855871L;
         out[10 + outPos] = (long)in[71 + inPos] >> 2 & 63L | (long)in[72 + inPos] << 6 & 16383L | (long)in[73 + inPos] << 14 & 4194303L | (long)in[74 + inPos] << 22 & 1073741823L | (long)in[75 + inPos] << 30 & 274877906943L | (long)in[76 + inPos] << 38 & 70368744177663L | (long)in[77 + inPos] << 46 & 18014398509481983L | (long)in[78 + inPos] << 54 & 144115188075855871L;
         out[11 + outPos] = (long)in[78 + inPos] >> 3 & 31L | (long)in[79 + inPos] << 5 & 8191L | (long)in[80 + inPos] << 13 & 2097151L | (long)in[81 + inPos] << 21 & 536870911L | (long)in[82 + inPos] << 29 & 137438953471L | (long)in[83 + inPos] << 37 & 35184372088831L | (long)in[84 + inPos] << 45 & 9007199254740991L | (long)in[85 + inPos] << 53 & 144115188075855871L;
         out[12 + outPos] = (long)in[85 + inPos] >> 4 & 15L | (long)in[86 + inPos] << 4 & 4095L | (long)in[87 + inPos] << 12 & 1048575L | (long)in[88 + inPos] << 20 & 268435455L | (long)in[89 + inPos] << 28 & 68719476735L | (long)in[90 + inPos] << 36 & 17592186044415L | (long)in[91 + inPos] << 44 & 4503599627370495L | (long)in[92 + inPos] << 52 & 144115188075855871L;
         out[13 + outPos] = (long)in[92 + inPos] >> 5 & 7L | (long)in[93 + inPos] << 3 & 2047L | (long)in[94 + inPos] << 11 & 524287L | (long)in[95 + inPos] << 19 & 134217727L | (long)in[96 + inPos] << 27 & 34359738367L | (long)in[97 + inPos] << 35 & 8796093022207L | (long)in[98 + inPos] << 43 & 2251799813685247L | (long)in[99 + inPos] << 51 & 144115188075855871L;
         out[14 + outPos] = (long)in[99 + inPos] >> 6 & 3L | (long)in[100 + inPos] << 2 & 1023L | (long)in[101 + inPos] << 10 & 262143L | (long)in[102 + inPos] << 18 & 67108863L | (long)in[103 + inPos] << 26 & 17179869183L | (long)in[104 + inPos] << 34 & 4398046511103L | (long)in[105 + inPos] << 42 & 1125899906842623L | (long)in[106 + inPos] << 50 & 144115188075855871L;
         out[15 + outPos] = (long)in[106 + inPos] >> 7 & 1L | (long)in[107 + inPos] << 1 & 511L | (long)in[108 + inPos] << 9 & 131071L | (long)in[109 + inPos] << 17 & 33554431L | (long)in[110 + inPos] << 25 & 8589934591L | (long)in[111 + inPos] << 33 & 2199023255551L | (long)in[112 + inPos] << 41 & 562949953421311L | (long)in[113 + inPos] << 49 & 144115188075855871L;
         out[16 + outPos] = (long)in[114 + inPos] & 255L | (long)in[115 + inPos] << 8 & 65535L | (long)in[116 + inPos] << 16 & 16777215L | (long)in[117 + inPos] << 24 & 4294967295L | (long)in[118 + inPos] << 32 & 1099511627775L | (long)in[119 + inPos] << 40 & 281474976710655L | (long)in[120 + inPos] << 48 & 72057594037927935L | (long)in[121 + inPos] << 56 & 144115188075855871L;
         out[17 + outPos] = (long)in[121 + inPos] >> 1 & 127L | (long)in[122 + inPos] << 7 & 32767L | (long)in[123 + inPos] << 15 & 8388607L | (long)in[124 + inPos] << 23 & 2147483647L | (long)in[125 + inPos] << 31 & 549755813887L | (long)in[126 + inPos] << 39 & 140737488355327L | (long)in[127 + inPos] << 47 & 36028797018963967L | (long)in[128 + inPos] << 55 & 144115188075855871L;
         out[18 + outPos] = (long)in[128 + inPos] >> 2 & 63L | (long)in[129 + inPos] << 6 & 16383L | (long)in[130 + inPos] << 14 & 4194303L | (long)in[131 + inPos] << 22 & 1073741823L | (long)in[132 + inPos] << 30 & 274877906943L | (long)in[133 + inPos] << 38 & 70368744177663L | (long)in[134 + inPos] << 46 & 18014398509481983L | (long)in[135 + inPos] << 54 & 144115188075855871L;
         out[19 + outPos] = (long)in[135 + inPos] >> 3 & 31L | (long)in[136 + inPos] << 5 & 8191L | (long)in[137 + inPos] << 13 & 2097151L | (long)in[138 + inPos] << 21 & 536870911L | (long)in[139 + inPos] << 29 & 137438953471L | (long)in[140 + inPos] << 37 & 35184372088831L | (long)in[141 + inPos] << 45 & 9007199254740991L | (long)in[142 + inPos] << 53 & 144115188075855871L;
         out[20 + outPos] = (long)in[142 + inPos] >> 4 & 15L | (long)in[143 + inPos] << 4 & 4095L | (long)in[144 + inPos] << 12 & 1048575L | (long)in[145 + inPos] << 20 & 268435455L | (long)in[146 + inPos] << 28 & 68719476735L | (long)in[147 + inPos] << 36 & 17592186044415L | (long)in[148 + inPos] << 44 & 4503599627370495L | (long)in[149 + inPos] << 52 & 144115188075855871L;
         out[21 + outPos] = (long)in[149 + inPos] >> 5 & 7L | (long)in[150 + inPos] << 3 & 2047L | (long)in[151 + inPos] << 11 & 524287L | (long)in[152 + inPos] << 19 & 134217727L | (long)in[153 + inPos] << 27 & 34359738367L | (long)in[154 + inPos] << 35 & 8796093022207L | (long)in[155 + inPos] << 43 & 2251799813685247L | (long)in[156 + inPos] << 51 & 144115188075855871L;
         out[22 + outPos] = (long)in[156 + inPos] >> 6 & 3L | (long)in[157 + inPos] << 2 & 1023L | (long)in[158 + inPos] << 10 & 262143L | (long)in[159 + inPos] << 18 & 67108863L | (long)in[160 + inPos] << 26 & 17179869183L | (long)in[161 + inPos] << 34 & 4398046511103L | (long)in[162 + inPos] << 42 & 1125899906842623L | (long)in[163 + inPos] << 50 & 144115188075855871L;
         out[23 + outPos] = (long)in[163 + inPos] >> 7 & 1L | (long)in[164 + inPos] << 1 & 511L | (long)in[165 + inPos] << 9 & 131071L | (long)in[166 + inPos] << 17 & 33554431L | (long)in[167 + inPos] << 25 & 8589934591L | (long)in[168 + inPos] << 33 & 2199023255551L | (long)in[169 + inPos] << 41 & 562949953421311L | (long)in[170 + inPos] << 49 & 144115188075855871L;
         out[24 + outPos] = (long)in[171 + inPos] & 255L | (long)in[172 + inPos] << 8 & 65535L | (long)in[173 + inPos] << 16 & 16777215L | (long)in[174 + inPos] << 24 & 4294967295L | (long)in[175 + inPos] << 32 & 1099511627775L | (long)in[176 + inPos] << 40 & 281474976710655L | (long)in[177 + inPos] << 48 & 72057594037927935L | (long)in[178 + inPos] << 56 & 144115188075855871L;
         out[25 + outPos] = (long)in[178 + inPos] >> 1 & 127L | (long)in[179 + inPos] << 7 & 32767L | (long)in[180 + inPos] << 15 & 8388607L | (long)in[181 + inPos] << 23 & 2147483647L | (long)in[182 + inPos] << 31 & 549755813887L | (long)in[183 + inPos] << 39 & 140737488355327L | (long)in[184 + inPos] << 47 & 36028797018963967L | (long)in[185 + inPos] << 55 & 144115188075855871L;
         out[26 + outPos] = (long)in[185 + inPos] >> 2 & 63L | (long)in[186 + inPos] << 6 & 16383L | (long)in[187 + inPos] << 14 & 4194303L | (long)in[188 + inPos] << 22 & 1073741823L | (long)in[189 + inPos] << 30 & 274877906943L | (long)in[190 + inPos] << 38 & 70368744177663L | (long)in[191 + inPos] << 46 & 18014398509481983L | (long)in[192 + inPos] << 54 & 144115188075855871L;
         out[27 + outPos] = (long)in[192 + inPos] >> 3 & 31L | (long)in[193 + inPos] << 5 & 8191L | (long)in[194 + inPos] << 13 & 2097151L | (long)in[195 + inPos] << 21 & 536870911L | (long)in[196 + inPos] << 29 & 137438953471L | (long)in[197 + inPos] << 37 & 35184372088831L | (long)in[198 + inPos] << 45 & 9007199254740991L | (long)in[199 + inPos] << 53 & 144115188075855871L;
         out[28 + outPos] = (long)in[199 + inPos] >> 4 & 15L | (long)in[200 + inPos] << 4 & 4095L | (long)in[201 + inPos] << 12 & 1048575L | (long)in[202 + inPos] << 20 & 268435455L | (long)in[203 + inPos] << 28 & 68719476735L | (long)in[204 + inPos] << 36 & 17592186044415L | (long)in[205 + inPos] << 44 & 4503599627370495L | (long)in[206 + inPos] << 52 & 144115188075855871L;
         out[29 + outPos] = (long)in[206 + inPos] >> 5 & 7L | (long)in[207 + inPos] << 3 & 2047L | (long)in[208 + inPos] << 11 & 524287L | (long)in[209 + inPos] << 19 & 134217727L | (long)in[210 + inPos] << 27 & 34359738367L | (long)in[211 + inPos] << 35 & 8796093022207L | (long)in[212 + inPos] << 43 & 2251799813685247L | (long)in[213 + inPos] << 51 & 144115188075855871L;
         out[30 + outPos] = (long)in[213 + inPos] >> 6 & 3L | (long)in[214 + inPos] << 2 & 1023L | (long)in[215 + inPos] << 10 & 262143L | (long)in[216 + inPos] << 18 & 67108863L | (long)in[217 + inPos] << 26 & 17179869183L | (long)in[218 + inPos] << 34 & 4398046511103L | (long)in[219 + inPos] << 42 & 1125899906842623L | (long)in[220 + inPos] << 50 & 144115188075855871L;
         out[31 + outPos] = (long)in[220 + inPos] >> 7 & 1L | (long)in[221 + inPos] << 1 & 511L | (long)in[222 + inPos] << 9 & 131071L | (long)in[223 + inPos] << 17 & 33554431L | (long)in[224 + inPos] << 25 & 8589934591L | (long)in[225 + inPos] << 33 & 2199023255551L | (long)in[226 + inPos] << 41 & 562949953421311L | (long)in[227 + inPos] << 49 & 144115188075855871L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & 144115188075855871L;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 1 & 127L | (long)in.get(8 + inPos) << 7 & 32767L | (long)in.get(9 + inPos) << 15 & 8388607L | (long)in.get(10 + inPos) << 23 & 2147483647L | (long)in.get(11 + inPos) << 31 & 549755813887L | (long)in.get(12 + inPos) << 39 & 140737488355327L | (long)in.get(13 + inPos) << 47 & 36028797018963967L | (long)in.get(14 + inPos) << 55 & 144115188075855871L;
         out[2 + outPos] = (long)in.get(14 + inPos) >> 2 & 63L | (long)in.get(15 + inPos) << 6 & 16383L | (long)in.get(16 + inPos) << 14 & 4194303L | (long)in.get(17 + inPos) << 22 & 1073741823L | (long)in.get(18 + inPos) << 30 & 274877906943L | (long)in.get(19 + inPos) << 38 & 70368744177663L | (long)in.get(20 + inPos) << 46 & 18014398509481983L | (long)in.get(21 + inPos) << 54 & 144115188075855871L;
         out[3 + outPos] = (long)in.get(21 + inPos) >> 3 & 31L | (long)in.get(22 + inPos) << 5 & 8191L | (long)in.get(23 + inPos) << 13 & 2097151L | (long)in.get(24 + inPos) << 21 & 536870911L | (long)in.get(25 + inPos) << 29 & 137438953471L | (long)in.get(26 + inPos) << 37 & 35184372088831L | (long)in.get(27 + inPos) << 45 & 9007199254740991L | (long)in.get(28 + inPos) << 53 & 144115188075855871L;
         out[4 + outPos] = (long)in.get(28 + inPos) >> 4 & 15L | (long)in.get(29 + inPos) << 4 & 4095L | (long)in.get(30 + inPos) << 12 & 1048575L | (long)in.get(31 + inPos) << 20 & 268435455L | (long)in.get(32 + inPos) << 28 & 68719476735L | (long)in.get(33 + inPos) << 36 & 17592186044415L | (long)in.get(34 + inPos) << 44 & 4503599627370495L | (long)in.get(35 + inPos) << 52 & 144115188075855871L;
         out[5 + outPos] = (long)in.get(35 + inPos) >> 5 & 7L | (long)in.get(36 + inPos) << 3 & 2047L | (long)in.get(37 + inPos) << 11 & 524287L | (long)in.get(38 + inPos) << 19 & 134217727L | (long)in.get(39 + inPos) << 27 & 34359738367L | (long)in.get(40 + inPos) << 35 & 8796093022207L | (long)in.get(41 + inPos) << 43 & 2251799813685247L | (long)in.get(42 + inPos) << 51 & 144115188075855871L;
         out[6 + outPos] = (long)in.get(42 + inPos) >> 6 & 3L | (long)in.get(43 + inPos) << 2 & 1023L | (long)in.get(44 + inPos) << 10 & 262143L | (long)in.get(45 + inPos) << 18 & 67108863L | (long)in.get(46 + inPos) << 26 & 17179869183L | (long)in.get(47 + inPos) << 34 & 4398046511103L | (long)in.get(48 + inPos) << 42 & 1125899906842623L | (long)in.get(49 + inPos) << 50 & 144115188075855871L;
         out[7 + outPos] = (long)in.get(49 + inPos) >> 7 & 1L | (long)in.get(50 + inPos) << 1 & 511L | (long)in.get(51 + inPos) << 9 & 131071L | (long)in.get(52 + inPos) << 17 & 33554431L | (long)in.get(53 + inPos) << 25 & 8589934591L | (long)in.get(54 + inPos) << 33 & 2199023255551L | (long)in.get(55 + inPos) << 41 & 562949953421311L | (long)in.get(56 + inPos) << 49 & 144115188075855871L;
         out[8 + outPos] = (long)in.get(57 + inPos) & 255L | (long)in.get(58 + inPos) << 8 & 65535L | (long)in.get(59 + inPos) << 16 & 16777215L | (long)in.get(60 + inPos) << 24 & 4294967295L | (long)in.get(61 + inPos) << 32 & 1099511627775L | (long)in.get(62 + inPos) << 40 & 281474976710655L | (long)in.get(63 + inPos) << 48 & 72057594037927935L | (long)in.get(64 + inPos) << 56 & 144115188075855871L;
         out[9 + outPos] = (long)in.get(64 + inPos) >> 1 & 127L | (long)in.get(65 + inPos) << 7 & 32767L | (long)in.get(66 + inPos) << 15 & 8388607L | (long)in.get(67 + inPos) << 23 & 2147483647L | (long)in.get(68 + inPos) << 31 & 549755813887L | (long)in.get(69 + inPos) << 39 & 140737488355327L | (long)in.get(70 + inPos) << 47 & 36028797018963967L | (long)in.get(71 + inPos) << 55 & 144115188075855871L;
         out[10 + outPos] = (long)in.get(71 + inPos) >> 2 & 63L | (long)in.get(72 + inPos) << 6 & 16383L | (long)in.get(73 + inPos) << 14 & 4194303L | (long)in.get(74 + inPos) << 22 & 1073741823L | (long)in.get(75 + inPos) << 30 & 274877906943L | (long)in.get(76 + inPos) << 38 & 70368744177663L | (long)in.get(77 + inPos) << 46 & 18014398509481983L | (long)in.get(78 + inPos) << 54 & 144115188075855871L;
         out[11 + outPos] = (long)in.get(78 + inPos) >> 3 & 31L | (long)in.get(79 + inPos) << 5 & 8191L | (long)in.get(80 + inPos) << 13 & 2097151L | (long)in.get(81 + inPos) << 21 & 536870911L | (long)in.get(82 + inPos) << 29 & 137438953471L | (long)in.get(83 + inPos) << 37 & 35184372088831L | (long)in.get(84 + inPos) << 45 & 9007199254740991L | (long)in.get(85 + inPos) << 53 & 144115188075855871L;
         out[12 + outPos] = (long)in.get(85 + inPos) >> 4 & 15L | (long)in.get(86 + inPos) << 4 & 4095L | (long)in.get(87 + inPos) << 12 & 1048575L | (long)in.get(88 + inPos) << 20 & 268435455L | (long)in.get(89 + inPos) << 28 & 68719476735L | (long)in.get(90 + inPos) << 36 & 17592186044415L | (long)in.get(91 + inPos) << 44 & 4503599627370495L | (long)in.get(92 + inPos) << 52 & 144115188075855871L;
         out[13 + outPos] = (long)in.get(92 + inPos) >> 5 & 7L | (long)in.get(93 + inPos) << 3 & 2047L | (long)in.get(94 + inPos) << 11 & 524287L | (long)in.get(95 + inPos) << 19 & 134217727L | (long)in.get(96 + inPos) << 27 & 34359738367L | (long)in.get(97 + inPos) << 35 & 8796093022207L | (long)in.get(98 + inPos) << 43 & 2251799813685247L | (long)in.get(99 + inPos) << 51 & 144115188075855871L;
         out[14 + outPos] = (long)in.get(99 + inPos) >> 6 & 3L | (long)in.get(100 + inPos) << 2 & 1023L | (long)in.get(101 + inPos) << 10 & 262143L | (long)in.get(102 + inPos) << 18 & 67108863L | (long)in.get(103 + inPos) << 26 & 17179869183L | (long)in.get(104 + inPos) << 34 & 4398046511103L | (long)in.get(105 + inPos) << 42 & 1125899906842623L | (long)in.get(106 + inPos) << 50 & 144115188075855871L;
         out[15 + outPos] = (long)in.get(106 + inPos) >> 7 & 1L | (long)in.get(107 + inPos) << 1 & 511L | (long)in.get(108 + inPos) << 9 & 131071L | (long)in.get(109 + inPos) << 17 & 33554431L | (long)in.get(110 + inPos) << 25 & 8589934591L | (long)in.get(111 + inPos) << 33 & 2199023255551L | (long)in.get(112 + inPos) << 41 & 562949953421311L | (long)in.get(113 + inPos) << 49 & 144115188075855871L;
         out[16 + outPos] = (long)in.get(114 + inPos) & 255L | (long)in.get(115 + inPos) << 8 & 65535L | (long)in.get(116 + inPos) << 16 & 16777215L | (long)in.get(117 + inPos) << 24 & 4294967295L | (long)in.get(118 + inPos) << 32 & 1099511627775L | (long)in.get(119 + inPos) << 40 & 281474976710655L | (long)in.get(120 + inPos) << 48 & 72057594037927935L | (long)in.get(121 + inPos) << 56 & 144115188075855871L;
         out[17 + outPos] = (long)in.get(121 + inPos) >> 1 & 127L | (long)in.get(122 + inPos) << 7 & 32767L | (long)in.get(123 + inPos) << 15 & 8388607L | (long)in.get(124 + inPos) << 23 & 2147483647L | (long)in.get(125 + inPos) << 31 & 549755813887L | (long)in.get(126 + inPos) << 39 & 140737488355327L | (long)in.get(127 + inPos) << 47 & 36028797018963967L | (long)in.get(128 + inPos) << 55 & 144115188075855871L;
         out[18 + outPos] = (long)in.get(128 + inPos) >> 2 & 63L | (long)in.get(129 + inPos) << 6 & 16383L | (long)in.get(130 + inPos) << 14 & 4194303L | (long)in.get(131 + inPos) << 22 & 1073741823L | (long)in.get(132 + inPos) << 30 & 274877906943L | (long)in.get(133 + inPos) << 38 & 70368744177663L | (long)in.get(134 + inPos) << 46 & 18014398509481983L | (long)in.get(135 + inPos) << 54 & 144115188075855871L;
         out[19 + outPos] = (long)in.get(135 + inPos) >> 3 & 31L | (long)in.get(136 + inPos) << 5 & 8191L | (long)in.get(137 + inPos) << 13 & 2097151L | (long)in.get(138 + inPos) << 21 & 536870911L | (long)in.get(139 + inPos) << 29 & 137438953471L | (long)in.get(140 + inPos) << 37 & 35184372088831L | (long)in.get(141 + inPos) << 45 & 9007199254740991L | (long)in.get(142 + inPos) << 53 & 144115188075855871L;
         out[20 + outPos] = (long)in.get(142 + inPos) >> 4 & 15L | (long)in.get(143 + inPos) << 4 & 4095L | (long)in.get(144 + inPos) << 12 & 1048575L | (long)in.get(145 + inPos) << 20 & 268435455L | (long)in.get(146 + inPos) << 28 & 68719476735L | (long)in.get(147 + inPos) << 36 & 17592186044415L | (long)in.get(148 + inPos) << 44 & 4503599627370495L | (long)in.get(149 + inPos) << 52 & 144115188075855871L;
         out[21 + outPos] = (long)in.get(149 + inPos) >> 5 & 7L | (long)in.get(150 + inPos) << 3 & 2047L | (long)in.get(151 + inPos) << 11 & 524287L | (long)in.get(152 + inPos) << 19 & 134217727L | (long)in.get(153 + inPos) << 27 & 34359738367L | (long)in.get(154 + inPos) << 35 & 8796093022207L | (long)in.get(155 + inPos) << 43 & 2251799813685247L | (long)in.get(156 + inPos) << 51 & 144115188075855871L;
         out[22 + outPos] = (long)in.get(156 + inPos) >> 6 & 3L | (long)in.get(157 + inPos) << 2 & 1023L | (long)in.get(158 + inPos) << 10 & 262143L | (long)in.get(159 + inPos) << 18 & 67108863L | (long)in.get(160 + inPos) << 26 & 17179869183L | (long)in.get(161 + inPos) << 34 & 4398046511103L | (long)in.get(162 + inPos) << 42 & 1125899906842623L | (long)in.get(163 + inPos) << 50 & 144115188075855871L;
         out[23 + outPos] = (long)in.get(163 + inPos) >> 7 & 1L | (long)in.get(164 + inPos) << 1 & 511L | (long)in.get(165 + inPos) << 9 & 131071L | (long)in.get(166 + inPos) << 17 & 33554431L | (long)in.get(167 + inPos) << 25 & 8589934591L | (long)in.get(168 + inPos) << 33 & 2199023255551L | (long)in.get(169 + inPos) << 41 & 562949953421311L | (long)in.get(170 + inPos) << 49 & 144115188075855871L;
         out[24 + outPos] = (long)in.get(171 + inPos) & 255L | (long)in.get(172 + inPos) << 8 & 65535L | (long)in.get(173 + inPos) << 16 & 16777215L | (long)in.get(174 + inPos) << 24 & 4294967295L | (long)in.get(175 + inPos) << 32 & 1099511627775L | (long)in.get(176 + inPos) << 40 & 281474976710655L | (long)in.get(177 + inPos) << 48 & 72057594037927935L | (long)in.get(178 + inPos) << 56 & 144115188075855871L;
         out[25 + outPos] = (long)in.get(178 + inPos) >> 1 & 127L | (long)in.get(179 + inPos) << 7 & 32767L | (long)in.get(180 + inPos) << 15 & 8388607L | (long)in.get(181 + inPos) << 23 & 2147483647L | (long)in.get(182 + inPos) << 31 & 549755813887L | (long)in.get(183 + inPos) << 39 & 140737488355327L | (long)in.get(184 + inPos) << 47 & 36028797018963967L | (long)in.get(185 + inPos) << 55 & 144115188075855871L;
         out[26 + outPos] = (long)in.get(185 + inPos) >> 2 & 63L | (long)in.get(186 + inPos) << 6 & 16383L | (long)in.get(187 + inPos) << 14 & 4194303L | (long)in.get(188 + inPos) << 22 & 1073741823L | (long)in.get(189 + inPos) << 30 & 274877906943L | (long)in.get(190 + inPos) << 38 & 70368744177663L | (long)in.get(191 + inPos) << 46 & 18014398509481983L | (long)in.get(192 + inPos) << 54 & 144115188075855871L;
         out[27 + outPos] = (long)in.get(192 + inPos) >> 3 & 31L | (long)in.get(193 + inPos) << 5 & 8191L | (long)in.get(194 + inPos) << 13 & 2097151L | (long)in.get(195 + inPos) << 21 & 536870911L | (long)in.get(196 + inPos) << 29 & 137438953471L | (long)in.get(197 + inPos) << 37 & 35184372088831L | (long)in.get(198 + inPos) << 45 & 9007199254740991L | (long)in.get(199 + inPos) << 53 & 144115188075855871L;
         out[28 + outPos] = (long)in.get(199 + inPos) >> 4 & 15L | (long)in.get(200 + inPos) << 4 & 4095L | (long)in.get(201 + inPos) << 12 & 1048575L | (long)in.get(202 + inPos) << 20 & 268435455L | (long)in.get(203 + inPos) << 28 & 68719476735L | (long)in.get(204 + inPos) << 36 & 17592186044415L | (long)in.get(205 + inPos) << 44 & 4503599627370495L | (long)in.get(206 + inPos) << 52 & 144115188075855871L;
         out[29 + outPos] = (long)in.get(206 + inPos) >> 5 & 7L | (long)in.get(207 + inPos) << 3 & 2047L | (long)in.get(208 + inPos) << 11 & 524287L | (long)in.get(209 + inPos) << 19 & 134217727L | (long)in.get(210 + inPos) << 27 & 34359738367L | (long)in.get(211 + inPos) << 35 & 8796093022207L | (long)in.get(212 + inPos) << 43 & 2251799813685247L | (long)in.get(213 + inPos) << 51 & 144115188075855871L;
         out[30 + outPos] = (long)in.get(213 + inPos) >> 6 & 3L | (long)in.get(214 + inPos) << 2 & 1023L | (long)in.get(215 + inPos) << 10 & 262143L | (long)in.get(216 + inPos) << 18 & 67108863L | (long)in.get(217 + inPos) << 26 & 17179869183L | (long)in.get(218 + inPos) << 34 & 4398046511103L | (long)in.get(219 + inPos) << 42 & 1125899906842623L | (long)in.get(220 + inPos) << 50 & 144115188075855871L;
         out[31 + outPos] = (long)in.get(220 + inPos) >> 7 & 1L | (long)in.get(221 + inPos) << 1 & 511L | (long)in.get(222 + inPos) << 9 & 131071L | (long)in.get(223 + inPos) << 17 & 33554431L | (long)in.get(224 + inPos) << 25 & 8589934591L | (long)in.get(225 + inPos) << 33 & 2199023255551L | (long)in.get(226 + inPos) << 41 & 562949953421311L | (long)in.get(227 + inPos) << 49 & 144115188075855871L;
      }
   }

   private static final class Packer58 extends BytePackerForLong {
      private Packer58() {
         super(58);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 288230376151711743L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 288230376151711743L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 288230376151711743L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 288230376151711743L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 288230376151711743L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 288230376151711743L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 288230376151711743L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & 288230376151711743L) >>> 56 | (in[1 + inPos] & 288230376151711743L) << 2) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 288230376151711743L) >>> 6 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 288230376151711743L) >>> 14 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 288230376151711743L) >>> 22 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 288230376151711743L) >>> 30 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 288230376151711743L) >>> 38 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 288230376151711743L) >>> 46 & 255L));
         out[14 + outPos] = (byte)((int)(((in[1 + inPos] & 288230376151711743L) >>> 54 | (in[2 + inPos] & 288230376151711743L) << 4) & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 288230376151711743L) >>> 4 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 288230376151711743L) >>> 12 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 288230376151711743L) >>> 20 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 288230376151711743L) >>> 28 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 288230376151711743L) >>> 36 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 288230376151711743L) >>> 44 & 255L));
         out[21 + outPos] = (byte)((int)(((in[2 + inPos] & 288230376151711743L) >>> 52 | (in[3 + inPos] & 288230376151711743L) << 6) & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 2 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 10 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 18 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 26 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 34 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 42 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 50 & 255L));
         out[29 + outPos] = (byte)((int)(in[4 + inPos] & 288230376151711743L & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 288230376151711743L) >>> 8 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 288230376151711743L) >>> 16 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 288230376151711743L) >>> 24 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 288230376151711743L) >>> 32 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 288230376151711743L) >>> 40 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & 288230376151711743L) >>> 48 & 255L));
         out[36 + outPos] = (byte)((int)(((in[4 + inPos] & 288230376151711743L) >>> 56 | (in[5 + inPos] & 288230376151711743L) << 2) & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 288230376151711743L) >>> 6 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 288230376151711743L) >>> 14 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 288230376151711743L) >>> 22 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 288230376151711743L) >>> 30 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 288230376151711743L) >>> 38 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & 288230376151711743L) >>> 46 & 255L));
         out[43 + outPos] = (byte)((int)(((in[5 + inPos] & 288230376151711743L) >>> 54 | (in[6 + inPos] & 288230376151711743L) << 4) & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 288230376151711743L) >>> 4 & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 288230376151711743L) >>> 12 & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 288230376151711743L) >>> 20 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 288230376151711743L) >>> 28 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 288230376151711743L) >>> 36 & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & 288230376151711743L) >>> 44 & 255L));
         out[50 + outPos] = (byte)((int)(((in[6 + inPos] & 288230376151711743L) >>> 52 | (in[7 + inPos] & 288230376151711743L) << 6) & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 2 & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 10 & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 18 & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 26 & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 34 & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 42 & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 50 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 288230376151711743L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 288230376151711743L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 288230376151711743L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 288230376151711743L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 288230376151711743L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 288230376151711743L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 288230376151711743L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & 288230376151711743L) >>> 56 | (in[1 + inPos] & 288230376151711743L) << 2) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 288230376151711743L) >>> 6 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 288230376151711743L) >>> 14 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 288230376151711743L) >>> 22 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 288230376151711743L) >>> 30 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 288230376151711743L) >>> 38 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 288230376151711743L) >>> 46 & 255L));
         out[14 + outPos] = (byte)((int)(((in[1 + inPos] & 288230376151711743L) >>> 54 | (in[2 + inPos] & 288230376151711743L) << 4) & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 288230376151711743L) >>> 4 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 288230376151711743L) >>> 12 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 288230376151711743L) >>> 20 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 288230376151711743L) >>> 28 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 288230376151711743L) >>> 36 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 288230376151711743L) >>> 44 & 255L));
         out[21 + outPos] = (byte)((int)(((in[2 + inPos] & 288230376151711743L) >>> 52 | (in[3 + inPos] & 288230376151711743L) << 6) & 255L));
         out[22 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 2 & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 10 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 18 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 26 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 34 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 42 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & 288230376151711743L) >>> 50 & 255L));
         out[29 + outPos] = (byte)((int)(in[4 + inPos] & 288230376151711743L & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 288230376151711743L) >>> 8 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 288230376151711743L) >>> 16 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 288230376151711743L) >>> 24 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 288230376151711743L) >>> 32 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 288230376151711743L) >>> 40 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & 288230376151711743L) >>> 48 & 255L));
         out[36 + outPos] = (byte)((int)(((in[4 + inPos] & 288230376151711743L) >>> 56 | (in[5 + inPos] & 288230376151711743L) << 2) & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 288230376151711743L) >>> 6 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 288230376151711743L) >>> 14 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 288230376151711743L) >>> 22 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 288230376151711743L) >>> 30 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 288230376151711743L) >>> 38 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & 288230376151711743L) >>> 46 & 255L));
         out[43 + outPos] = (byte)((int)(((in[5 + inPos] & 288230376151711743L) >>> 54 | (in[6 + inPos] & 288230376151711743L) << 4) & 255L));
         out[44 + outPos] = (byte)((int)((in[6 + inPos] & 288230376151711743L) >>> 4 & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 288230376151711743L) >>> 12 & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 288230376151711743L) >>> 20 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 288230376151711743L) >>> 28 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 288230376151711743L) >>> 36 & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & 288230376151711743L) >>> 44 & 255L));
         out[50 + outPos] = (byte)((int)(((in[6 + inPos] & 288230376151711743L) >>> 52 | (in[7 + inPos] & 288230376151711743L) << 6) & 255L));
         out[51 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 2 & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 10 & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 18 & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 26 & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 34 & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 42 & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & 288230376151711743L) >>> 50 & 255L));
         out[58 + outPos] = (byte)((int)(in[8 + inPos] & 288230376151711743L & 255L));
         out[59 + outPos] = (byte)((int)((in[8 + inPos] & 288230376151711743L) >>> 8 & 255L));
         out[60 + outPos] = (byte)((int)((in[8 + inPos] & 288230376151711743L) >>> 16 & 255L));
         out[61 + outPos] = (byte)((int)((in[8 + inPos] & 288230376151711743L) >>> 24 & 255L));
         out[62 + outPos] = (byte)((int)((in[8 + inPos] & 288230376151711743L) >>> 32 & 255L));
         out[63 + outPos] = (byte)((int)((in[8 + inPos] & 288230376151711743L) >>> 40 & 255L));
         out[64 + outPos] = (byte)((int)((in[8 + inPos] & 288230376151711743L) >>> 48 & 255L));
         out[65 + outPos] = (byte)((int)(((in[8 + inPos] & 288230376151711743L) >>> 56 | (in[9 + inPos] & 288230376151711743L) << 2) & 255L));
         out[66 + outPos] = (byte)((int)((in[9 + inPos] & 288230376151711743L) >>> 6 & 255L));
         out[67 + outPos] = (byte)((int)((in[9 + inPos] & 288230376151711743L) >>> 14 & 255L));
         out[68 + outPos] = (byte)((int)((in[9 + inPos] & 288230376151711743L) >>> 22 & 255L));
         out[69 + outPos] = (byte)((int)((in[9 + inPos] & 288230376151711743L) >>> 30 & 255L));
         out[70 + outPos] = (byte)((int)((in[9 + inPos] & 288230376151711743L) >>> 38 & 255L));
         out[71 + outPos] = (byte)((int)((in[9 + inPos] & 288230376151711743L) >>> 46 & 255L));
         out[72 + outPos] = (byte)((int)(((in[9 + inPos] & 288230376151711743L) >>> 54 | (in[10 + inPos] & 288230376151711743L) << 4) & 255L));
         out[73 + outPos] = (byte)((int)((in[10 + inPos] & 288230376151711743L) >>> 4 & 255L));
         out[74 + outPos] = (byte)((int)((in[10 + inPos] & 288230376151711743L) >>> 12 & 255L));
         out[75 + outPos] = (byte)((int)((in[10 + inPos] & 288230376151711743L) >>> 20 & 255L));
         out[76 + outPos] = (byte)((int)((in[10 + inPos] & 288230376151711743L) >>> 28 & 255L));
         out[77 + outPos] = (byte)((int)((in[10 + inPos] & 288230376151711743L) >>> 36 & 255L));
         out[78 + outPos] = (byte)((int)((in[10 + inPos] & 288230376151711743L) >>> 44 & 255L));
         out[79 + outPos] = (byte)((int)(((in[10 + inPos] & 288230376151711743L) >>> 52 | (in[11 + inPos] & 288230376151711743L) << 6) & 255L));
         out[80 + outPos] = (byte)((int)((in[11 + inPos] & 288230376151711743L) >>> 2 & 255L));
         out[81 + outPos] = (byte)((int)((in[11 + inPos] & 288230376151711743L) >>> 10 & 255L));
         out[82 + outPos] = (byte)((int)((in[11 + inPos] & 288230376151711743L) >>> 18 & 255L));
         out[83 + outPos] = (byte)((int)((in[11 + inPos] & 288230376151711743L) >>> 26 & 255L));
         out[84 + outPos] = (byte)((int)((in[11 + inPos] & 288230376151711743L) >>> 34 & 255L));
         out[85 + outPos] = (byte)((int)((in[11 + inPos] & 288230376151711743L) >>> 42 & 255L));
         out[86 + outPos] = (byte)((int)((in[11 + inPos] & 288230376151711743L) >>> 50 & 255L));
         out[87 + outPos] = (byte)((int)(in[12 + inPos] & 288230376151711743L & 255L));
         out[88 + outPos] = (byte)((int)((in[12 + inPos] & 288230376151711743L) >>> 8 & 255L));
         out[89 + outPos] = (byte)((int)((in[12 + inPos] & 288230376151711743L) >>> 16 & 255L));
         out[90 + outPos] = (byte)((int)((in[12 + inPos] & 288230376151711743L) >>> 24 & 255L));
         out[91 + outPos] = (byte)((int)((in[12 + inPos] & 288230376151711743L) >>> 32 & 255L));
         out[92 + outPos] = (byte)((int)((in[12 + inPos] & 288230376151711743L) >>> 40 & 255L));
         out[93 + outPos] = (byte)((int)((in[12 + inPos] & 288230376151711743L) >>> 48 & 255L));
         out[94 + outPos] = (byte)((int)(((in[12 + inPos] & 288230376151711743L) >>> 56 | (in[13 + inPos] & 288230376151711743L) << 2) & 255L));
         out[95 + outPos] = (byte)((int)((in[13 + inPos] & 288230376151711743L) >>> 6 & 255L));
         out[96 + outPos] = (byte)((int)((in[13 + inPos] & 288230376151711743L) >>> 14 & 255L));
         out[97 + outPos] = (byte)((int)((in[13 + inPos] & 288230376151711743L) >>> 22 & 255L));
         out[98 + outPos] = (byte)((int)((in[13 + inPos] & 288230376151711743L) >>> 30 & 255L));
         out[99 + outPos] = (byte)((int)((in[13 + inPos] & 288230376151711743L) >>> 38 & 255L));
         out[100 + outPos] = (byte)((int)((in[13 + inPos] & 288230376151711743L) >>> 46 & 255L));
         out[101 + outPos] = (byte)((int)(((in[13 + inPos] & 288230376151711743L) >>> 54 | (in[14 + inPos] & 288230376151711743L) << 4) & 255L));
         out[102 + outPos] = (byte)((int)((in[14 + inPos] & 288230376151711743L) >>> 4 & 255L));
         out[103 + outPos] = (byte)((int)((in[14 + inPos] & 288230376151711743L) >>> 12 & 255L));
         out[104 + outPos] = (byte)((int)((in[14 + inPos] & 288230376151711743L) >>> 20 & 255L));
         out[105 + outPos] = (byte)((int)((in[14 + inPos] & 288230376151711743L) >>> 28 & 255L));
         out[106 + outPos] = (byte)((int)((in[14 + inPos] & 288230376151711743L) >>> 36 & 255L));
         out[107 + outPos] = (byte)((int)((in[14 + inPos] & 288230376151711743L) >>> 44 & 255L));
         out[108 + outPos] = (byte)((int)(((in[14 + inPos] & 288230376151711743L) >>> 52 | (in[15 + inPos] & 288230376151711743L) << 6) & 255L));
         out[109 + outPos] = (byte)((int)((in[15 + inPos] & 288230376151711743L) >>> 2 & 255L));
         out[110 + outPos] = (byte)((int)((in[15 + inPos] & 288230376151711743L) >>> 10 & 255L));
         out[111 + outPos] = (byte)((int)((in[15 + inPos] & 288230376151711743L) >>> 18 & 255L));
         out[112 + outPos] = (byte)((int)((in[15 + inPos] & 288230376151711743L) >>> 26 & 255L));
         out[113 + outPos] = (byte)((int)((in[15 + inPos] & 288230376151711743L) >>> 34 & 255L));
         out[114 + outPos] = (byte)((int)((in[15 + inPos] & 288230376151711743L) >>> 42 & 255L));
         out[115 + outPos] = (byte)((int)((in[15 + inPos] & 288230376151711743L) >>> 50 & 255L));
         out[116 + outPos] = (byte)((int)(in[16 + inPos] & 288230376151711743L & 255L));
         out[117 + outPos] = (byte)((int)((in[16 + inPos] & 288230376151711743L) >>> 8 & 255L));
         out[118 + outPos] = (byte)((int)((in[16 + inPos] & 288230376151711743L) >>> 16 & 255L));
         out[119 + outPos] = (byte)((int)((in[16 + inPos] & 288230376151711743L) >>> 24 & 255L));
         out[120 + outPos] = (byte)((int)((in[16 + inPos] & 288230376151711743L) >>> 32 & 255L));
         out[121 + outPos] = (byte)((int)((in[16 + inPos] & 288230376151711743L) >>> 40 & 255L));
         out[122 + outPos] = (byte)((int)((in[16 + inPos] & 288230376151711743L) >>> 48 & 255L));
         out[123 + outPos] = (byte)((int)(((in[16 + inPos] & 288230376151711743L) >>> 56 | (in[17 + inPos] & 288230376151711743L) << 2) & 255L));
         out[124 + outPos] = (byte)((int)((in[17 + inPos] & 288230376151711743L) >>> 6 & 255L));
         out[125 + outPos] = (byte)((int)((in[17 + inPos] & 288230376151711743L) >>> 14 & 255L));
         out[126 + outPos] = (byte)((int)((in[17 + inPos] & 288230376151711743L) >>> 22 & 255L));
         out[127 + outPos] = (byte)((int)((in[17 + inPos] & 288230376151711743L) >>> 30 & 255L));
         out[128 + outPos] = (byte)((int)((in[17 + inPos] & 288230376151711743L) >>> 38 & 255L));
         out[129 + outPos] = (byte)((int)((in[17 + inPos] & 288230376151711743L) >>> 46 & 255L));
         out[130 + outPos] = (byte)((int)(((in[17 + inPos] & 288230376151711743L) >>> 54 | (in[18 + inPos] & 288230376151711743L) << 4) & 255L));
         out[131 + outPos] = (byte)((int)((in[18 + inPos] & 288230376151711743L) >>> 4 & 255L));
         out[132 + outPos] = (byte)((int)((in[18 + inPos] & 288230376151711743L) >>> 12 & 255L));
         out[133 + outPos] = (byte)((int)((in[18 + inPos] & 288230376151711743L) >>> 20 & 255L));
         out[134 + outPos] = (byte)((int)((in[18 + inPos] & 288230376151711743L) >>> 28 & 255L));
         out[135 + outPos] = (byte)((int)((in[18 + inPos] & 288230376151711743L) >>> 36 & 255L));
         out[136 + outPos] = (byte)((int)((in[18 + inPos] & 288230376151711743L) >>> 44 & 255L));
         out[137 + outPos] = (byte)((int)(((in[18 + inPos] & 288230376151711743L) >>> 52 | (in[19 + inPos] & 288230376151711743L) << 6) & 255L));
         out[138 + outPos] = (byte)((int)((in[19 + inPos] & 288230376151711743L) >>> 2 & 255L));
         out[139 + outPos] = (byte)((int)((in[19 + inPos] & 288230376151711743L) >>> 10 & 255L));
         out[140 + outPos] = (byte)((int)((in[19 + inPos] & 288230376151711743L) >>> 18 & 255L));
         out[141 + outPos] = (byte)((int)((in[19 + inPos] & 288230376151711743L) >>> 26 & 255L));
         out[142 + outPos] = (byte)((int)((in[19 + inPos] & 288230376151711743L) >>> 34 & 255L));
         out[143 + outPos] = (byte)((int)((in[19 + inPos] & 288230376151711743L) >>> 42 & 255L));
         out[144 + outPos] = (byte)((int)((in[19 + inPos] & 288230376151711743L) >>> 50 & 255L));
         out[145 + outPos] = (byte)((int)(in[20 + inPos] & 288230376151711743L & 255L));
         out[146 + outPos] = (byte)((int)((in[20 + inPos] & 288230376151711743L) >>> 8 & 255L));
         out[147 + outPos] = (byte)((int)((in[20 + inPos] & 288230376151711743L) >>> 16 & 255L));
         out[148 + outPos] = (byte)((int)((in[20 + inPos] & 288230376151711743L) >>> 24 & 255L));
         out[149 + outPos] = (byte)((int)((in[20 + inPos] & 288230376151711743L) >>> 32 & 255L));
         out[150 + outPos] = (byte)((int)((in[20 + inPos] & 288230376151711743L) >>> 40 & 255L));
         out[151 + outPos] = (byte)((int)((in[20 + inPos] & 288230376151711743L) >>> 48 & 255L));
         out[152 + outPos] = (byte)((int)(((in[20 + inPos] & 288230376151711743L) >>> 56 | (in[21 + inPos] & 288230376151711743L) << 2) & 255L));
         out[153 + outPos] = (byte)((int)((in[21 + inPos] & 288230376151711743L) >>> 6 & 255L));
         out[154 + outPos] = (byte)((int)((in[21 + inPos] & 288230376151711743L) >>> 14 & 255L));
         out[155 + outPos] = (byte)((int)((in[21 + inPos] & 288230376151711743L) >>> 22 & 255L));
         out[156 + outPos] = (byte)((int)((in[21 + inPos] & 288230376151711743L) >>> 30 & 255L));
         out[157 + outPos] = (byte)((int)((in[21 + inPos] & 288230376151711743L) >>> 38 & 255L));
         out[158 + outPos] = (byte)((int)((in[21 + inPos] & 288230376151711743L) >>> 46 & 255L));
         out[159 + outPos] = (byte)((int)(((in[21 + inPos] & 288230376151711743L) >>> 54 | (in[22 + inPos] & 288230376151711743L) << 4) & 255L));
         out[160 + outPos] = (byte)((int)((in[22 + inPos] & 288230376151711743L) >>> 4 & 255L));
         out[161 + outPos] = (byte)((int)((in[22 + inPos] & 288230376151711743L) >>> 12 & 255L));
         out[162 + outPos] = (byte)((int)((in[22 + inPos] & 288230376151711743L) >>> 20 & 255L));
         out[163 + outPos] = (byte)((int)((in[22 + inPos] & 288230376151711743L) >>> 28 & 255L));
         out[164 + outPos] = (byte)((int)((in[22 + inPos] & 288230376151711743L) >>> 36 & 255L));
         out[165 + outPos] = (byte)((int)((in[22 + inPos] & 288230376151711743L) >>> 44 & 255L));
         out[166 + outPos] = (byte)((int)(((in[22 + inPos] & 288230376151711743L) >>> 52 | (in[23 + inPos] & 288230376151711743L) << 6) & 255L));
         out[167 + outPos] = (byte)((int)((in[23 + inPos] & 288230376151711743L) >>> 2 & 255L));
         out[168 + outPos] = (byte)((int)((in[23 + inPos] & 288230376151711743L) >>> 10 & 255L));
         out[169 + outPos] = (byte)((int)((in[23 + inPos] & 288230376151711743L) >>> 18 & 255L));
         out[170 + outPos] = (byte)((int)((in[23 + inPos] & 288230376151711743L) >>> 26 & 255L));
         out[171 + outPos] = (byte)((int)((in[23 + inPos] & 288230376151711743L) >>> 34 & 255L));
         out[172 + outPos] = (byte)((int)((in[23 + inPos] & 288230376151711743L) >>> 42 & 255L));
         out[173 + outPos] = (byte)((int)((in[23 + inPos] & 288230376151711743L) >>> 50 & 255L));
         out[174 + outPos] = (byte)((int)(in[24 + inPos] & 288230376151711743L & 255L));
         out[175 + outPos] = (byte)((int)((in[24 + inPos] & 288230376151711743L) >>> 8 & 255L));
         out[176 + outPos] = (byte)((int)((in[24 + inPos] & 288230376151711743L) >>> 16 & 255L));
         out[177 + outPos] = (byte)((int)((in[24 + inPos] & 288230376151711743L) >>> 24 & 255L));
         out[178 + outPos] = (byte)((int)((in[24 + inPos] & 288230376151711743L) >>> 32 & 255L));
         out[179 + outPos] = (byte)((int)((in[24 + inPos] & 288230376151711743L) >>> 40 & 255L));
         out[180 + outPos] = (byte)((int)((in[24 + inPos] & 288230376151711743L) >>> 48 & 255L));
         out[181 + outPos] = (byte)((int)(((in[24 + inPos] & 288230376151711743L) >>> 56 | (in[25 + inPos] & 288230376151711743L) << 2) & 255L));
         out[182 + outPos] = (byte)((int)((in[25 + inPos] & 288230376151711743L) >>> 6 & 255L));
         out[183 + outPos] = (byte)((int)((in[25 + inPos] & 288230376151711743L) >>> 14 & 255L));
         out[184 + outPos] = (byte)((int)((in[25 + inPos] & 288230376151711743L) >>> 22 & 255L));
         out[185 + outPos] = (byte)((int)((in[25 + inPos] & 288230376151711743L) >>> 30 & 255L));
         out[186 + outPos] = (byte)((int)((in[25 + inPos] & 288230376151711743L) >>> 38 & 255L));
         out[187 + outPos] = (byte)((int)((in[25 + inPos] & 288230376151711743L) >>> 46 & 255L));
         out[188 + outPos] = (byte)((int)(((in[25 + inPos] & 288230376151711743L) >>> 54 | (in[26 + inPos] & 288230376151711743L) << 4) & 255L));
         out[189 + outPos] = (byte)((int)((in[26 + inPos] & 288230376151711743L) >>> 4 & 255L));
         out[190 + outPos] = (byte)((int)((in[26 + inPos] & 288230376151711743L) >>> 12 & 255L));
         out[191 + outPos] = (byte)((int)((in[26 + inPos] & 288230376151711743L) >>> 20 & 255L));
         out[192 + outPos] = (byte)((int)((in[26 + inPos] & 288230376151711743L) >>> 28 & 255L));
         out[193 + outPos] = (byte)((int)((in[26 + inPos] & 288230376151711743L) >>> 36 & 255L));
         out[194 + outPos] = (byte)((int)((in[26 + inPos] & 288230376151711743L) >>> 44 & 255L));
         out[195 + outPos] = (byte)((int)(((in[26 + inPos] & 288230376151711743L) >>> 52 | (in[27 + inPos] & 288230376151711743L) << 6) & 255L));
         out[196 + outPos] = (byte)((int)((in[27 + inPos] & 288230376151711743L) >>> 2 & 255L));
         out[197 + outPos] = (byte)((int)((in[27 + inPos] & 288230376151711743L) >>> 10 & 255L));
         out[198 + outPos] = (byte)((int)((in[27 + inPos] & 288230376151711743L) >>> 18 & 255L));
         out[199 + outPos] = (byte)((int)((in[27 + inPos] & 288230376151711743L) >>> 26 & 255L));
         out[200 + outPos] = (byte)((int)((in[27 + inPos] & 288230376151711743L) >>> 34 & 255L));
         out[201 + outPos] = (byte)((int)((in[27 + inPos] & 288230376151711743L) >>> 42 & 255L));
         out[202 + outPos] = (byte)((int)((in[27 + inPos] & 288230376151711743L) >>> 50 & 255L));
         out[203 + outPos] = (byte)((int)(in[28 + inPos] & 288230376151711743L & 255L));
         out[204 + outPos] = (byte)((int)((in[28 + inPos] & 288230376151711743L) >>> 8 & 255L));
         out[205 + outPos] = (byte)((int)((in[28 + inPos] & 288230376151711743L) >>> 16 & 255L));
         out[206 + outPos] = (byte)((int)((in[28 + inPos] & 288230376151711743L) >>> 24 & 255L));
         out[207 + outPos] = (byte)((int)((in[28 + inPos] & 288230376151711743L) >>> 32 & 255L));
         out[208 + outPos] = (byte)((int)((in[28 + inPos] & 288230376151711743L) >>> 40 & 255L));
         out[209 + outPos] = (byte)((int)((in[28 + inPos] & 288230376151711743L) >>> 48 & 255L));
         out[210 + outPos] = (byte)((int)(((in[28 + inPos] & 288230376151711743L) >>> 56 | (in[29 + inPos] & 288230376151711743L) << 2) & 255L));
         out[211 + outPos] = (byte)((int)((in[29 + inPos] & 288230376151711743L) >>> 6 & 255L));
         out[212 + outPos] = (byte)((int)((in[29 + inPos] & 288230376151711743L) >>> 14 & 255L));
         out[213 + outPos] = (byte)((int)((in[29 + inPos] & 288230376151711743L) >>> 22 & 255L));
         out[214 + outPos] = (byte)((int)((in[29 + inPos] & 288230376151711743L) >>> 30 & 255L));
         out[215 + outPos] = (byte)((int)((in[29 + inPos] & 288230376151711743L) >>> 38 & 255L));
         out[216 + outPos] = (byte)((int)((in[29 + inPos] & 288230376151711743L) >>> 46 & 255L));
         out[217 + outPos] = (byte)((int)(((in[29 + inPos] & 288230376151711743L) >>> 54 | (in[30 + inPos] & 288230376151711743L) << 4) & 255L));
         out[218 + outPos] = (byte)((int)((in[30 + inPos] & 288230376151711743L) >>> 4 & 255L));
         out[219 + outPos] = (byte)((int)((in[30 + inPos] & 288230376151711743L) >>> 12 & 255L));
         out[220 + outPos] = (byte)((int)((in[30 + inPos] & 288230376151711743L) >>> 20 & 255L));
         out[221 + outPos] = (byte)((int)((in[30 + inPos] & 288230376151711743L) >>> 28 & 255L));
         out[222 + outPos] = (byte)((int)((in[30 + inPos] & 288230376151711743L) >>> 36 & 255L));
         out[223 + outPos] = (byte)((int)((in[30 + inPos] & 288230376151711743L) >>> 44 & 255L));
         out[224 + outPos] = (byte)((int)(((in[30 + inPos] & 288230376151711743L) >>> 52 | (in[31 + inPos] & 288230376151711743L) << 6) & 255L));
         out[225 + outPos] = (byte)((int)((in[31 + inPos] & 288230376151711743L) >>> 2 & 255L));
         out[226 + outPos] = (byte)((int)((in[31 + inPos] & 288230376151711743L) >>> 10 & 255L));
         out[227 + outPos] = (byte)((int)((in[31 + inPos] & 288230376151711743L) >>> 18 & 255L));
         out[228 + outPos] = (byte)((int)((in[31 + inPos] & 288230376151711743L) >>> 26 & 255L));
         out[229 + outPos] = (byte)((int)((in[31 + inPos] & 288230376151711743L) >>> 34 & 255L));
         out[230 + outPos] = (byte)((int)((in[31 + inPos] & 288230376151711743L) >>> 42 & 255L));
         out[231 + outPos] = (byte)((int)((in[31 + inPos] & 288230376151711743L) >>> 50 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & 288230376151711743L;
         out[1 + outPos] = (long)in[7 + inPos] >> 2 & 63L | (long)in[8 + inPos] << 6 & 16383L | (long)in[9 + inPos] << 14 & 4194303L | (long)in[10 + inPos] << 22 & 1073741823L | (long)in[11 + inPos] << 30 & 274877906943L | (long)in[12 + inPos] << 38 & 70368744177663L | (long)in[13 + inPos] << 46 & 18014398509481983L | (long)in[14 + inPos] << 54 & 288230376151711743L;
         out[2 + outPos] = (long)in[14 + inPos] >> 4 & 15L | (long)in[15 + inPos] << 4 & 4095L | (long)in[16 + inPos] << 12 & 1048575L | (long)in[17 + inPos] << 20 & 268435455L | (long)in[18 + inPos] << 28 & 68719476735L | (long)in[19 + inPos] << 36 & 17592186044415L | (long)in[20 + inPos] << 44 & 4503599627370495L | (long)in[21 + inPos] << 52 & 288230376151711743L;
         out[3 + outPos] = (long)in[21 + inPos] >> 6 & 3L | (long)in[22 + inPos] << 2 & 1023L | (long)in[23 + inPos] << 10 & 262143L | (long)in[24 + inPos] << 18 & 67108863L | (long)in[25 + inPos] << 26 & 17179869183L | (long)in[26 + inPos] << 34 & 4398046511103L | (long)in[27 + inPos] << 42 & 1125899906842623L | (long)in[28 + inPos] << 50 & 288230376151711743L;
         out[4 + outPos] = (long)in[29 + inPos] & 255L | (long)in[30 + inPos] << 8 & 65535L | (long)in[31 + inPos] << 16 & 16777215L | (long)in[32 + inPos] << 24 & 4294967295L | (long)in[33 + inPos] << 32 & 1099511627775L | (long)in[34 + inPos] << 40 & 281474976710655L | (long)in[35 + inPos] << 48 & 72057594037927935L | (long)in[36 + inPos] << 56 & 288230376151711743L;
         out[5 + outPos] = (long)in[36 + inPos] >> 2 & 63L | (long)in[37 + inPos] << 6 & 16383L | (long)in[38 + inPos] << 14 & 4194303L | (long)in[39 + inPos] << 22 & 1073741823L | (long)in[40 + inPos] << 30 & 274877906943L | (long)in[41 + inPos] << 38 & 70368744177663L | (long)in[42 + inPos] << 46 & 18014398509481983L | (long)in[43 + inPos] << 54 & 288230376151711743L;
         out[6 + outPos] = (long)in[43 + inPos] >> 4 & 15L | (long)in[44 + inPos] << 4 & 4095L | (long)in[45 + inPos] << 12 & 1048575L | (long)in[46 + inPos] << 20 & 268435455L | (long)in[47 + inPos] << 28 & 68719476735L | (long)in[48 + inPos] << 36 & 17592186044415L | (long)in[49 + inPos] << 44 & 4503599627370495L | (long)in[50 + inPos] << 52 & 288230376151711743L;
         out[7 + outPos] = (long)in[50 + inPos] >> 6 & 3L | (long)in[51 + inPos] << 2 & 1023L | (long)in[52 + inPos] << 10 & 262143L | (long)in[53 + inPos] << 18 & 67108863L | (long)in[54 + inPos] << 26 & 17179869183L | (long)in[55 + inPos] << 34 & 4398046511103L | (long)in[56 + inPos] << 42 & 1125899906842623L | (long)in[57 + inPos] << 50 & 288230376151711743L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & 288230376151711743L;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 2 & 63L | (long)in.get(8 + inPos) << 6 & 16383L | (long)in.get(9 + inPos) << 14 & 4194303L | (long)in.get(10 + inPos) << 22 & 1073741823L | (long)in.get(11 + inPos) << 30 & 274877906943L | (long)in.get(12 + inPos) << 38 & 70368744177663L | (long)in.get(13 + inPos) << 46 & 18014398509481983L | (long)in.get(14 + inPos) << 54 & 288230376151711743L;
         out[2 + outPos] = (long)in.get(14 + inPos) >> 4 & 15L | (long)in.get(15 + inPos) << 4 & 4095L | (long)in.get(16 + inPos) << 12 & 1048575L | (long)in.get(17 + inPos) << 20 & 268435455L | (long)in.get(18 + inPos) << 28 & 68719476735L | (long)in.get(19 + inPos) << 36 & 17592186044415L | (long)in.get(20 + inPos) << 44 & 4503599627370495L | (long)in.get(21 + inPos) << 52 & 288230376151711743L;
         out[3 + outPos] = (long)in.get(21 + inPos) >> 6 & 3L | (long)in.get(22 + inPos) << 2 & 1023L | (long)in.get(23 + inPos) << 10 & 262143L | (long)in.get(24 + inPos) << 18 & 67108863L | (long)in.get(25 + inPos) << 26 & 17179869183L | (long)in.get(26 + inPos) << 34 & 4398046511103L | (long)in.get(27 + inPos) << 42 & 1125899906842623L | (long)in.get(28 + inPos) << 50 & 288230376151711743L;
         out[4 + outPos] = (long)in.get(29 + inPos) & 255L | (long)in.get(30 + inPos) << 8 & 65535L | (long)in.get(31 + inPos) << 16 & 16777215L | (long)in.get(32 + inPos) << 24 & 4294967295L | (long)in.get(33 + inPos) << 32 & 1099511627775L | (long)in.get(34 + inPos) << 40 & 281474976710655L | (long)in.get(35 + inPos) << 48 & 72057594037927935L | (long)in.get(36 + inPos) << 56 & 288230376151711743L;
         out[5 + outPos] = (long)in.get(36 + inPos) >> 2 & 63L | (long)in.get(37 + inPos) << 6 & 16383L | (long)in.get(38 + inPos) << 14 & 4194303L | (long)in.get(39 + inPos) << 22 & 1073741823L | (long)in.get(40 + inPos) << 30 & 274877906943L | (long)in.get(41 + inPos) << 38 & 70368744177663L | (long)in.get(42 + inPos) << 46 & 18014398509481983L | (long)in.get(43 + inPos) << 54 & 288230376151711743L;
         out[6 + outPos] = (long)in.get(43 + inPos) >> 4 & 15L | (long)in.get(44 + inPos) << 4 & 4095L | (long)in.get(45 + inPos) << 12 & 1048575L | (long)in.get(46 + inPos) << 20 & 268435455L | (long)in.get(47 + inPos) << 28 & 68719476735L | (long)in.get(48 + inPos) << 36 & 17592186044415L | (long)in.get(49 + inPos) << 44 & 4503599627370495L | (long)in.get(50 + inPos) << 52 & 288230376151711743L;
         out[7 + outPos] = (long)in.get(50 + inPos) >> 6 & 3L | (long)in.get(51 + inPos) << 2 & 1023L | (long)in.get(52 + inPos) << 10 & 262143L | (long)in.get(53 + inPos) << 18 & 67108863L | (long)in.get(54 + inPos) << 26 & 17179869183L | (long)in.get(55 + inPos) << 34 & 4398046511103L | (long)in.get(56 + inPos) << 42 & 1125899906842623L | (long)in.get(57 + inPos) << 50 & 288230376151711743L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & 288230376151711743L;
         out[1 + outPos] = (long)in[7 + inPos] >> 2 & 63L | (long)in[8 + inPos] << 6 & 16383L | (long)in[9 + inPos] << 14 & 4194303L | (long)in[10 + inPos] << 22 & 1073741823L | (long)in[11 + inPos] << 30 & 274877906943L | (long)in[12 + inPos] << 38 & 70368744177663L | (long)in[13 + inPos] << 46 & 18014398509481983L | (long)in[14 + inPos] << 54 & 288230376151711743L;
         out[2 + outPos] = (long)in[14 + inPos] >> 4 & 15L | (long)in[15 + inPos] << 4 & 4095L | (long)in[16 + inPos] << 12 & 1048575L | (long)in[17 + inPos] << 20 & 268435455L | (long)in[18 + inPos] << 28 & 68719476735L | (long)in[19 + inPos] << 36 & 17592186044415L | (long)in[20 + inPos] << 44 & 4503599627370495L | (long)in[21 + inPos] << 52 & 288230376151711743L;
         out[3 + outPos] = (long)in[21 + inPos] >> 6 & 3L | (long)in[22 + inPos] << 2 & 1023L | (long)in[23 + inPos] << 10 & 262143L | (long)in[24 + inPos] << 18 & 67108863L | (long)in[25 + inPos] << 26 & 17179869183L | (long)in[26 + inPos] << 34 & 4398046511103L | (long)in[27 + inPos] << 42 & 1125899906842623L | (long)in[28 + inPos] << 50 & 288230376151711743L;
         out[4 + outPos] = (long)in[29 + inPos] & 255L | (long)in[30 + inPos] << 8 & 65535L | (long)in[31 + inPos] << 16 & 16777215L | (long)in[32 + inPos] << 24 & 4294967295L | (long)in[33 + inPos] << 32 & 1099511627775L | (long)in[34 + inPos] << 40 & 281474976710655L | (long)in[35 + inPos] << 48 & 72057594037927935L | (long)in[36 + inPos] << 56 & 288230376151711743L;
         out[5 + outPos] = (long)in[36 + inPos] >> 2 & 63L | (long)in[37 + inPos] << 6 & 16383L | (long)in[38 + inPos] << 14 & 4194303L | (long)in[39 + inPos] << 22 & 1073741823L | (long)in[40 + inPos] << 30 & 274877906943L | (long)in[41 + inPos] << 38 & 70368744177663L | (long)in[42 + inPos] << 46 & 18014398509481983L | (long)in[43 + inPos] << 54 & 288230376151711743L;
         out[6 + outPos] = (long)in[43 + inPos] >> 4 & 15L | (long)in[44 + inPos] << 4 & 4095L | (long)in[45 + inPos] << 12 & 1048575L | (long)in[46 + inPos] << 20 & 268435455L | (long)in[47 + inPos] << 28 & 68719476735L | (long)in[48 + inPos] << 36 & 17592186044415L | (long)in[49 + inPos] << 44 & 4503599627370495L | (long)in[50 + inPos] << 52 & 288230376151711743L;
         out[7 + outPos] = (long)in[50 + inPos] >> 6 & 3L | (long)in[51 + inPos] << 2 & 1023L | (long)in[52 + inPos] << 10 & 262143L | (long)in[53 + inPos] << 18 & 67108863L | (long)in[54 + inPos] << 26 & 17179869183L | (long)in[55 + inPos] << 34 & 4398046511103L | (long)in[56 + inPos] << 42 & 1125899906842623L | (long)in[57 + inPos] << 50 & 288230376151711743L;
         out[8 + outPos] = (long)in[58 + inPos] & 255L | (long)in[59 + inPos] << 8 & 65535L | (long)in[60 + inPos] << 16 & 16777215L | (long)in[61 + inPos] << 24 & 4294967295L | (long)in[62 + inPos] << 32 & 1099511627775L | (long)in[63 + inPos] << 40 & 281474976710655L | (long)in[64 + inPos] << 48 & 72057594037927935L | (long)in[65 + inPos] << 56 & 288230376151711743L;
         out[9 + outPos] = (long)in[65 + inPos] >> 2 & 63L | (long)in[66 + inPos] << 6 & 16383L | (long)in[67 + inPos] << 14 & 4194303L | (long)in[68 + inPos] << 22 & 1073741823L | (long)in[69 + inPos] << 30 & 274877906943L | (long)in[70 + inPos] << 38 & 70368744177663L | (long)in[71 + inPos] << 46 & 18014398509481983L | (long)in[72 + inPos] << 54 & 288230376151711743L;
         out[10 + outPos] = (long)in[72 + inPos] >> 4 & 15L | (long)in[73 + inPos] << 4 & 4095L | (long)in[74 + inPos] << 12 & 1048575L | (long)in[75 + inPos] << 20 & 268435455L | (long)in[76 + inPos] << 28 & 68719476735L | (long)in[77 + inPos] << 36 & 17592186044415L | (long)in[78 + inPos] << 44 & 4503599627370495L | (long)in[79 + inPos] << 52 & 288230376151711743L;
         out[11 + outPos] = (long)in[79 + inPos] >> 6 & 3L | (long)in[80 + inPos] << 2 & 1023L | (long)in[81 + inPos] << 10 & 262143L | (long)in[82 + inPos] << 18 & 67108863L | (long)in[83 + inPos] << 26 & 17179869183L | (long)in[84 + inPos] << 34 & 4398046511103L | (long)in[85 + inPos] << 42 & 1125899906842623L | (long)in[86 + inPos] << 50 & 288230376151711743L;
         out[12 + outPos] = (long)in[87 + inPos] & 255L | (long)in[88 + inPos] << 8 & 65535L | (long)in[89 + inPos] << 16 & 16777215L | (long)in[90 + inPos] << 24 & 4294967295L | (long)in[91 + inPos] << 32 & 1099511627775L | (long)in[92 + inPos] << 40 & 281474976710655L | (long)in[93 + inPos] << 48 & 72057594037927935L | (long)in[94 + inPos] << 56 & 288230376151711743L;
         out[13 + outPos] = (long)in[94 + inPos] >> 2 & 63L | (long)in[95 + inPos] << 6 & 16383L | (long)in[96 + inPos] << 14 & 4194303L | (long)in[97 + inPos] << 22 & 1073741823L | (long)in[98 + inPos] << 30 & 274877906943L | (long)in[99 + inPos] << 38 & 70368744177663L | (long)in[100 + inPos] << 46 & 18014398509481983L | (long)in[101 + inPos] << 54 & 288230376151711743L;
         out[14 + outPos] = (long)in[101 + inPos] >> 4 & 15L | (long)in[102 + inPos] << 4 & 4095L | (long)in[103 + inPos] << 12 & 1048575L | (long)in[104 + inPos] << 20 & 268435455L | (long)in[105 + inPos] << 28 & 68719476735L | (long)in[106 + inPos] << 36 & 17592186044415L | (long)in[107 + inPos] << 44 & 4503599627370495L | (long)in[108 + inPos] << 52 & 288230376151711743L;
         out[15 + outPos] = (long)in[108 + inPos] >> 6 & 3L | (long)in[109 + inPos] << 2 & 1023L | (long)in[110 + inPos] << 10 & 262143L | (long)in[111 + inPos] << 18 & 67108863L | (long)in[112 + inPos] << 26 & 17179869183L | (long)in[113 + inPos] << 34 & 4398046511103L | (long)in[114 + inPos] << 42 & 1125899906842623L | (long)in[115 + inPos] << 50 & 288230376151711743L;
         out[16 + outPos] = (long)in[116 + inPos] & 255L | (long)in[117 + inPos] << 8 & 65535L | (long)in[118 + inPos] << 16 & 16777215L | (long)in[119 + inPos] << 24 & 4294967295L | (long)in[120 + inPos] << 32 & 1099511627775L | (long)in[121 + inPos] << 40 & 281474976710655L | (long)in[122 + inPos] << 48 & 72057594037927935L | (long)in[123 + inPos] << 56 & 288230376151711743L;
         out[17 + outPos] = (long)in[123 + inPos] >> 2 & 63L | (long)in[124 + inPos] << 6 & 16383L | (long)in[125 + inPos] << 14 & 4194303L | (long)in[126 + inPos] << 22 & 1073741823L | (long)in[127 + inPos] << 30 & 274877906943L | (long)in[128 + inPos] << 38 & 70368744177663L | (long)in[129 + inPos] << 46 & 18014398509481983L | (long)in[130 + inPos] << 54 & 288230376151711743L;
         out[18 + outPos] = (long)in[130 + inPos] >> 4 & 15L | (long)in[131 + inPos] << 4 & 4095L | (long)in[132 + inPos] << 12 & 1048575L | (long)in[133 + inPos] << 20 & 268435455L | (long)in[134 + inPos] << 28 & 68719476735L | (long)in[135 + inPos] << 36 & 17592186044415L | (long)in[136 + inPos] << 44 & 4503599627370495L | (long)in[137 + inPos] << 52 & 288230376151711743L;
         out[19 + outPos] = (long)in[137 + inPos] >> 6 & 3L | (long)in[138 + inPos] << 2 & 1023L | (long)in[139 + inPos] << 10 & 262143L | (long)in[140 + inPos] << 18 & 67108863L | (long)in[141 + inPos] << 26 & 17179869183L | (long)in[142 + inPos] << 34 & 4398046511103L | (long)in[143 + inPos] << 42 & 1125899906842623L | (long)in[144 + inPos] << 50 & 288230376151711743L;
         out[20 + outPos] = (long)in[145 + inPos] & 255L | (long)in[146 + inPos] << 8 & 65535L | (long)in[147 + inPos] << 16 & 16777215L | (long)in[148 + inPos] << 24 & 4294967295L | (long)in[149 + inPos] << 32 & 1099511627775L | (long)in[150 + inPos] << 40 & 281474976710655L | (long)in[151 + inPos] << 48 & 72057594037927935L | (long)in[152 + inPos] << 56 & 288230376151711743L;
         out[21 + outPos] = (long)in[152 + inPos] >> 2 & 63L | (long)in[153 + inPos] << 6 & 16383L | (long)in[154 + inPos] << 14 & 4194303L | (long)in[155 + inPos] << 22 & 1073741823L | (long)in[156 + inPos] << 30 & 274877906943L | (long)in[157 + inPos] << 38 & 70368744177663L | (long)in[158 + inPos] << 46 & 18014398509481983L | (long)in[159 + inPos] << 54 & 288230376151711743L;
         out[22 + outPos] = (long)in[159 + inPos] >> 4 & 15L | (long)in[160 + inPos] << 4 & 4095L | (long)in[161 + inPos] << 12 & 1048575L | (long)in[162 + inPos] << 20 & 268435455L | (long)in[163 + inPos] << 28 & 68719476735L | (long)in[164 + inPos] << 36 & 17592186044415L | (long)in[165 + inPos] << 44 & 4503599627370495L | (long)in[166 + inPos] << 52 & 288230376151711743L;
         out[23 + outPos] = (long)in[166 + inPos] >> 6 & 3L | (long)in[167 + inPos] << 2 & 1023L | (long)in[168 + inPos] << 10 & 262143L | (long)in[169 + inPos] << 18 & 67108863L | (long)in[170 + inPos] << 26 & 17179869183L | (long)in[171 + inPos] << 34 & 4398046511103L | (long)in[172 + inPos] << 42 & 1125899906842623L | (long)in[173 + inPos] << 50 & 288230376151711743L;
         out[24 + outPos] = (long)in[174 + inPos] & 255L | (long)in[175 + inPos] << 8 & 65535L | (long)in[176 + inPos] << 16 & 16777215L | (long)in[177 + inPos] << 24 & 4294967295L | (long)in[178 + inPos] << 32 & 1099511627775L | (long)in[179 + inPos] << 40 & 281474976710655L | (long)in[180 + inPos] << 48 & 72057594037927935L | (long)in[181 + inPos] << 56 & 288230376151711743L;
         out[25 + outPos] = (long)in[181 + inPos] >> 2 & 63L | (long)in[182 + inPos] << 6 & 16383L | (long)in[183 + inPos] << 14 & 4194303L | (long)in[184 + inPos] << 22 & 1073741823L | (long)in[185 + inPos] << 30 & 274877906943L | (long)in[186 + inPos] << 38 & 70368744177663L | (long)in[187 + inPos] << 46 & 18014398509481983L | (long)in[188 + inPos] << 54 & 288230376151711743L;
         out[26 + outPos] = (long)in[188 + inPos] >> 4 & 15L | (long)in[189 + inPos] << 4 & 4095L | (long)in[190 + inPos] << 12 & 1048575L | (long)in[191 + inPos] << 20 & 268435455L | (long)in[192 + inPos] << 28 & 68719476735L | (long)in[193 + inPos] << 36 & 17592186044415L | (long)in[194 + inPos] << 44 & 4503599627370495L | (long)in[195 + inPos] << 52 & 288230376151711743L;
         out[27 + outPos] = (long)in[195 + inPos] >> 6 & 3L | (long)in[196 + inPos] << 2 & 1023L | (long)in[197 + inPos] << 10 & 262143L | (long)in[198 + inPos] << 18 & 67108863L | (long)in[199 + inPos] << 26 & 17179869183L | (long)in[200 + inPos] << 34 & 4398046511103L | (long)in[201 + inPos] << 42 & 1125899906842623L | (long)in[202 + inPos] << 50 & 288230376151711743L;
         out[28 + outPos] = (long)in[203 + inPos] & 255L | (long)in[204 + inPos] << 8 & 65535L | (long)in[205 + inPos] << 16 & 16777215L | (long)in[206 + inPos] << 24 & 4294967295L | (long)in[207 + inPos] << 32 & 1099511627775L | (long)in[208 + inPos] << 40 & 281474976710655L | (long)in[209 + inPos] << 48 & 72057594037927935L | (long)in[210 + inPos] << 56 & 288230376151711743L;
         out[29 + outPos] = (long)in[210 + inPos] >> 2 & 63L | (long)in[211 + inPos] << 6 & 16383L | (long)in[212 + inPos] << 14 & 4194303L | (long)in[213 + inPos] << 22 & 1073741823L | (long)in[214 + inPos] << 30 & 274877906943L | (long)in[215 + inPos] << 38 & 70368744177663L | (long)in[216 + inPos] << 46 & 18014398509481983L | (long)in[217 + inPos] << 54 & 288230376151711743L;
         out[30 + outPos] = (long)in[217 + inPos] >> 4 & 15L | (long)in[218 + inPos] << 4 & 4095L | (long)in[219 + inPos] << 12 & 1048575L | (long)in[220 + inPos] << 20 & 268435455L | (long)in[221 + inPos] << 28 & 68719476735L | (long)in[222 + inPos] << 36 & 17592186044415L | (long)in[223 + inPos] << 44 & 4503599627370495L | (long)in[224 + inPos] << 52 & 288230376151711743L;
         out[31 + outPos] = (long)in[224 + inPos] >> 6 & 3L | (long)in[225 + inPos] << 2 & 1023L | (long)in[226 + inPos] << 10 & 262143L | (long)in[227 + inPos] << 18 & 67108863L | (long)in[228 + inPos] << 26 & 17179869183L | (long)in[229 + inPos] << 34 & 4398046511103L | (long)in[230 + inPos] << 42 & 1125899906842623L | (long)in[231 + inPos] << 50 & 288230376151711743L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & 288230376151711743L;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 2 & 63L | (long)in.get(8 + inPos) << 6 & 16383L | (long)in.get(9 + inPos) << 14 & 4194303L | (long)in.get(10 + inPos) << 22 & 1073741823L | (long)in.get(11 + inPos) << 30 & 274877906943L | (long)in.get(12 + inPos) << 38 & 70368744177663L | (long)in.get(13 + inPos) << 46 & 18014398509481983L | (long)in.get(14 + inPos) << 54 & 288230376151711743L;
         out[2 + outPos] = (long)in.get(14 + inPos) >> 4 & 15L | (long)in.get(15 + inPos) << 4 & 4095L | (long)in.get(16 + inPos) << 12 & 1048575L | (long)in.get(17 + inPos) << 20 & 268435455L | (long)in.get(18 + inPos) << 28 & 68719476735L | (long)in.get(19 + inPos) << 36 & 17592186044415L | (long)in.get(20 + inPos) << 44 & 4503599627370495L | (long)in.get(21 + inPos) << 52 & 288230376151711743L;
         out[3 + outPos] = (long)in.get(21 + inPos) >> 6 & 3L | (long)in.get(22 + inPos) << 2 & 1023L | (long)in.get(23 + inPos) << 10 & 262143L | (long)in.get(24 + inPos) << 18 & 67108863L | (long)in.get(25 + inPos) << 26 & 17179869183L | (long)in.get(26 + inPos) << 34 & 4398046511103L | (long)in.get(27 + inPos) << 42 & 1125899906842623L | (long)in.get(28 + inPos) << 50 & 288230376151711743L;
         out[4 + outPos] = (long)in.get(29 + inPos) & 255L | (long)in.get(30 + inPos) << 8 & 65535L | (long)in.get(31 + inPos) << 16 & 16777215L | (long)in.get(32 + inPos) << 24 & 4294967295L | (long)in.get(33 + inPos) << 32 & 1099511627775L | (long)in.get(34 + inPos) << 40 & 281474976710655L | (long)in.get(35 + inPos) << 48 & 72057594037927935L | (long)in.get(36 + inPos) << 56 & 288230376151711743L;
         out[5 + outPos] = (long)in.get(36 + inPos) >> 2 & 63L | (long)in.get(37 + inPos) << 6 & 16383L | (long)in.get(38 + inPos) << 14 & 4194303L | (long)in.get(39 + inPos) << 22 & 1073741823L | (long)in.get(40 + inPos) << 30 & 274877906943L | (long)in.get(41 + inPos) << 38 & 70368744177663L | (long)in.get(42 + inPos) << 46 & 18014398509481983L | (long)in.get(43 + inPos) << 54 & 288230376151711743L;
         out[6 + outPos] = (long)in.get(43 + inPos) >> 4 & 15L | (long)in.get(44 + inPos) << 4 & 4095L | (long)in.get(45 + inPos) << 12 & 1048575L | (long)in.get(46 + inPos) << 20 & 268435455L | (long)in.get(47 + inPos) << 28 & 68719476735L | (long)in.get(48 + inPos) << 36 & 17592186044415L | (long)in.get(49 + inPos) << 44 & 4503599627370495L | (long)in.get(50 + inPos) << 52 & 288230376151711743L;
         out[7 + outPos] = (long)in.get(50 + inPos) >> 6 & 3L | (long)in.get(51 + inPos) << 2 & 1023L | (long)in.get(52 + inPos) << 10 & 262143L | (long)in.get(53 + inPos) << 18 & 67108863L | (long)in.get(54 + inPos) << 26 & 17179869183L | (long)in.get(55 + inPos) << 34 & 4398046511103L | (long)in.get(56 + inPos) << 42 & 1125899906842623L | (long)in.get(57 + inPos) << 50 & 288230376151711743L;
         out[8 + outPos] = (long)in.get(58 + inPos) & 255L | (long)in.get(59 + inPos) << 8 & 65535L | (long)in.get(60 + inPos) << 16 & 16777215L | (long)in.get(61 + inPos) << 24 & 4294967295L | (long)in.get(62 + inPos) << 32 & 1099511627775L | (long)in.get(63 + inPos) << 40 & 281474976710655L | (long)in.get(64 + inPos) << 48 & 72057594037927935L | (long)in.get(65 + inPos) << 56 & 288230376151711743L;
         out[9 + outPos] = (long)in.get(65 + inPos) >> 2 & 63L | (long)in.get(66 + inPos) << 6 & 16383L | (long)in.get(67 + inPos) << 14 & 4194303L | (long)in.get(68 + inPos) << 22 & 1073741823L | (long)in.get(69 + inPos) << 30 & 274877906943L | (long)in.get(70 + inPos) << 38 & 70368744177663L | (long)in.get(71 + inPos) << 46 & 18014398509481983L | (long)in.get(72 + inPos) << 54 & 288230376151711743L;
         out[10 + outPos] = (long)in.get(72 + inPos) >> 4 & 15L | (long)in.get(73 + inPos) << 4 & 4095L | (long)in.get(74 + inPos) << 12 & 1048575L | (long)in.get(75 + inPos) << 20 & 268435455L | (long)in.get(76 + inPos) << 28 & 68719476735L | (long)in.get(77 + inPos) << 36 & 17592186044415L | (long)in.get(78 + inPos) << 44 & 4503599627370495L | (long)in.get(79 + inPos) << 52 & 288230376151711743L;
         out[11 + outPos] = (long)in.get(79 + inPos) >> 6 & 3L | (long)in.get(80 + inPos) << 2 & 1023L | (long)in.get(81 + inPos) << 10 & 262143L | (long)in.get(82 + inPos) << 18 & 67108863L | (long)in.get(83 + inPos) << 26 & 17179869183L | (long)in.get(84 + inPos) << 34 & 4398046511103L | (long)in.get(85 + inPos) << 42 & 1125899906842623L | (long)in.get(86 + inPos) << 50 & 288230376151711743L;
         out[12 + outPos] = (long)in.get(87 + inPos) & 255L | (long)in.get(88 + inPos) << 8 & 65535L | (long)in.get(89 + inPos) << 16 & 16777215L | (long)in.get(90 + inPos) << 24 & 4294967295L | (long)in.get(91 + inPos) << 32 & 1099511627775L | (long)in.get(92 + inPos) << 40 & 281474976710655L | (long)in.get(93 + inPos) << 48 & 72057594037927935L | (long)in.get(94 + inPos) << 56 & 288230376151711743L;
         out[13 + outPos] = (long)in.get(94 + inPos) >> 2 & 63L | (long)in.get(95 + inPos) << 6 & 16383L | (long)in.get(96 + inPos) << 14 & 4194303L | (long)in.get(97 + inPos) << 22 & 1073741823L | (long)in.get(98 + inPos) << 30 & 274877906943L | (long)in.get(99 + inPos) << 38 & 70368744177663L | (long)in.get(100 + inPos) << 46 & 18014398509481983L | (long)in.get(101 + inPos) << 54 & 288230376151711743L;
         out[14 + outPos] = (long)in.get(101 + inPos) >> 4 & 15L | (long)in.get(102 + inPos) << 4 & 4095L | (long)in.get(103 + inPos) << 12 & 1048575L | (long)in.get(104 + inPos) << 20 & 268435455L | (long)in.get(105 + inPos) << 28 & 68719476735L | (long)in.get(106 + inPos) << 36 & 17592186044415L | (long)in.get(107 + inPos) << 44 & 4503599627370495L | (long)in.get(108 + inPos) << 52 & 288230376151711743L;
         out[15 + outPos] = (long)in.get(108 + inPos) >> 6 & 3L | (long)in.get(109 + inPos) << 2 & 1023L | (long)in.get(110 + inPos) << 10 & 262143L | (long)in.get(111 + inPos) << 18 & 67108863L | (long)in.get(112 + inPos) << 26 & 17179869183L | (long)in.get(113 + inPos) << 34 & 4398046511103L | (long)in.get(114 + inPos) << 42 & 1125899906842623L | (long)in.get(115 + inPos) << 50 & 288230376151711743L;
         out[16 + outPos] = (long)in.get(116 + inPos) & 255L | (long)in.get(117 + inPos) << 8 & 65535L | (long)in.get(118 + inPos) << 16 & 16777215L | (long)in.get(119 + inPos) << 24 & 4294967295L | (long)in.get(120 + inPos) << 32 & 1099511627775L | (long)in.get(121 + inPos) << 40 & 281474976710655L | (long)in.get(122 + inPos) << 48 & 72057594037927935L | (long)in.get(123 + inPos) << 56 & 288230376151711743L;
         out[17 + outPos] = (long)in.get(123 + inPos) >> 2 & 63L | (long)in.get(124 + inPos) << 6 & 16383L | (long)in.get(125 + inPos) << 14 & 4194303L | (long)in.get(126 + inPos) << 22 & 1073741823L | (long)in.get(127 + inPos) << 30 & 274877906943L | (long)in.get(128 + inPos) << 38 & 70368744177663L | (long)in.get(129 + inPos) << 46 & 18014398509481983L | (long)in.get(130 + inPos) << 54 & 288230376151711743L;
         out[18 + outPos] = (long)in.get(130 + inPos) >> 4 & 15L | (long)in.get(131 + inPos) << 4 & 4095L | (long)in.get(132 + inPos) << 12 & 1048575L | (long)in.get(133 + inPos) << 20 & 268435455L | (long)in.get(134 + inPos) << 28 & 68719476735L | (long)in.get(135 + inPos) << 36 & 17592186044415L | (long)in.get(136 + inPos) << 44 & 4503599627370495L | (long)in.get(137 + inPos) << 52 & 288230376151711743L;
         out[19 + outPos] = (long)in.get(137 + inPos) >> 6 & 3L | (long)in.get(138 + inPos) << 2 & 1023L | (long)in.get(139 + inPos) << 10 & 262143L | (long)in.get(140 + inPos) << 18 & 67108863L | (long)in.get(141 + inPos) << 26 & 17179869183L | (long)in.get(142 + inPos) << 34 & 4398046511103L | (long)in.get(143 + inPos) << 42 & 1125899906842623L | (long)in.get(144 + inPos) << 50 & 288230376151711743L;
         out[20 + outPos] = (long)in.get(145 + inPos) & 255L | (long)in.get(146 + inPos) << 8 & 65535L | (long)in.get(147 + inPos) << 16 & 16777215L | (long)in.get(148 + inPos) << 24 & 4294967295L | (long)in.get(149 + inPos) << 32 & 1099511627775L | (long)in.get(150 + inPos) << 40 & 281474976710655L | (long)in.get(151 + inPos) << 48 & 72057594037927935L | (long)in.get(152 + inPos) << 56 & 288230376151711743L;
         out[21 + outPos] = (long)in.get(152 + inPos) >> 2 & 63L | (long)in.get(153 + inPos) << 6 & 16383L | (long)in.get(154 + inPos) << 14 & 4194303L | (long)in.get(155 + inPos) << 22 & 1073741823L | (long)in.get(156 + inPos) << 30 & 274877906943L | (long)in.get(157 + inPos) << 38 & 70368744177663L | (long)in.get(158 + inPos) << 46 & 18014398509481983L | (long)in.get(159 + inPos) << 54 & 288230376151711743L;
         out[22 + outPos] = (long)in.get(159 + inPos) >> 4 & 15L | (long)in.get(160 + inPos) << 4 & 4095L | (long)in.get(161 + inPos) << 12 & 1048575L | (long)in.get(162 + inPos) << 20 & 268435455L | (long)in.get(163 + inPos) << 28 & 68719476735L | (long)in.get(164 + inPos) << 36 & 17592186044415L | (long)in.get(165 + inPos) << 44 & 4503599627370495L | (long)in.get(166 + inPos) << 52 & 288230376151711743L;
         out[23 + outPos] = (long)in.get(166 + inPos) >> 6 & 3L | (long)in.get(167 + inPos) << 2 & 1023L | (long)in.get(168 + inPos) << 10 & 262143L | (long)in.get(169 + inPos) << 18 & 67108863L | (long)in.get(170 + inPos) << 26 & 17179869183L | (long)in.get(171 + inPos) << 34 & 4398046511103L | (long)in.get(172 + inPos) << 42 & 1125899906842623L | (long)in.get(173 + inPos) << 50 & 288230376151711743L;
         out[24 + outPos] = (long)in.get(174 + inPos) & 255L | (long)in.get(175 + inPos) << 8 & 65535L | (long)in.get(176 + inPos) << 16 & 16777215L | (long)in.get(177 + inPos) << 24 & 4294967295L | (long)in.get(178 + inPos) << 32 & 1099511627775L | (long)in.get(179 + inPos) << 40 & 281474976710655L | (long)in.get(180 + inPos) << 48 & 72057594037927935L | (long)in.get(181 + inPos) << 56 & 288230376151711743L;
         out[25 + outPos] = (long)in.get(181 + inPos) >> 2 & 63L | (long)in.get(182 + inPos) << 6 & 16383L | (long)in.get(183 + inPos) << 14 & 4194303L | (long)in.get(184 + inPos) << 22 & 1073741823L | (long)in.get(185 + inPos) << 30 & 274877906943L | (long)in.get(186 + inPos) << 38 & 70368744177663L | (long)in.get(187 + inPos) << 46 & 18014398509481983L | (long)in.get(188 + inPos) << 54 & 288230376151711743L;
         out[26 + outPos] = (long)in.get(188 + inPos) >> 4 & 15L | (long)in.get(189 + inPos) << 4 & 4095L | (long)in.get(190 + inPos) << 12 & 1048575L | (long)in.get(191 + inPos) << 20 & 268435455L | (long)in.get(192 + inPos) << 28 & 68719476735L | (long)in.get(193 + inPos) << 36 & 17592186044415L | (long)in.get(194 + inPos) << 44 & 4503599627370495L | (long)in.get(195 + inPos) << 52 & 288230376151711743L;
         out[27 + outPos] = (long)in.get(195 + inPos) >> 6 & 3L | (long)in.get(196 + inPos) << 2 & 1023L | (long)in.get(197 + inPos) << 10 & 262143L | (long)in.get(198 + inPos) << 18 & 67108863L | (long)in.get(199 + inPos) << 26 & 17179869183L | (long)in.get(200 + inPos) << 34 & 4398046511103L | (long)in.get(201 + inPos) << 42 & 1125899906842623L | (long)in.get(202 + inPos) << 50 & 288230376151711743L;
         out[28 + outPos] = (long)in.get(203 + inPos) & 255L | (long)in.get(204 + inPos) << 8 & 65535L | (long)in.get(205 + inPos) << 16 & 16777215L | (long)in.get(206 + inPos) << 24 & 4294967295L | (long)in.get(207 + inPos) << 32 & 1099511627775L | (long)in.get(208 + inPos) << 40 & 281474976710655L | (long)in.get(209 + inPos) << 48 & 72057594037927935L | (long)in.get(210 + inPos) << 56 & 288230376151711743L;
         out[29 + outPos] = (long)in.get(210 + inPos) >> 2 & 63L | (long)in.get(211 + inPos) << 6 & 16383L | (long)in.get(212 + inPos) << 14 & 4194303L | (long)in.get(213 + inPos) << 22 & 1073741823L | (long)in.get(214 + inPos) << 30 & 274877906943L | (long)in.get(215 + inPos) << 38 & 70368744177663L | (long)in.get(216 + inPos) << 46 & 18014398509481983L | (long)in.get(217 + inPos) << 54 & 288230376151711743L;
         out[30 + outPos] = (long)in.get(217 + inPos) >> 4 & 15L | (long)in.get(218 + inPos) << 4 & 4095L | (long)in.get(219 + inPos) << 12 & 1048575L | (long)in.get(220 + inPos) << 20 & 268435455L | (long)in.get(221 + inPos) << 28 & 68719476735L | (long)in.get(222 + inPos) << 36 & 17592186044415L | (long)in.get(223 + inPos) << 44 & 4503599627370495L | (long)in.get(224 + inPos) << 52 & 288230376151711743L;
         out[31 + outPos] = (long)in.get(224 + inPos) >> 6 & 3L | (long)in.get(225 + inPos) << 2 & 1023L | (long)in.get(226 + inPos) << 10 & 262143L | (long)in.get(227 + inPos) << 18 & 67108863L | (long)in.get(228 + inPos) << 26 & 17179869183L | (long)in.get(229 + inPos) << 34 & 4398046511103L | (long)in.get(230 + inPos) << 42 & 1125899906842623L | (long)in.get(231 + inPos) << 50 & 288230376151711743L;
      }
   }

   private static final class Packer59 extends BytePackerForLong {
      private Packer59() {
         super(59);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 576460752303423487L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 576460752303423487L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 576460752303423487L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 576460752303423487L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 576460752303423487L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 576460752303423487L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 576460752303423487L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & 576460752303423487L) >>> 56 | (in[1 + inPos] & 576460752303423487L) << 3) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 576460752303423487L) >>> 5 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 576460752303423487L) >>> 13 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 576460752303423487L) >>> 21 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 576460752303423487L) >>> 29 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 576460752303423487L) >>> 37 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 576460752303423487L) >>> 45 & 255L));
         out[14 + outPos] = (byte)((int)(((in[1 + inPos] & 576460752303423487L) >>> 53 | (in[2 + inPos] & 576460752303423487L) << 6) & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 2 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 10 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 18 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 26 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 34 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 42 & 255L));
         out[21 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 50 & 255L));
         out[22 + outPos] = (byte)((int)(((in[2 + inPos] & 576460752303423487L) >>> 58 | (in[3 + inPos] & 576460752303423487L) << 1) & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 576460752303423487L) >>> 7 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 576460752303423487L) >>> 15 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 576460752303423487L) >>> 23 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 576460752303423487L) >>> 31 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 576460752303423487L) >>> 39 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & 576460752303423487L) >>> 47 & 255L));
         out[29 + outPos] = (byte)((int)(((in[3 + inPos] & 576460752303423487L) >>> 55 | (in[4 + inPos] & 576460752303423487L) << 4) & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 576460752303423487L) >>> 4 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 576460752303423487L) >>> 12 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 576460752303423487L) >>> 20 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 576460752303423487L) >>> 28 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 576460752303423487L) >>> 36 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & 576460752303423487L) >>> 44 & 255L));
         out[36 + outPos] = (byte)((int)(((in[4 + inPos] & 576460752303423487L) >>> 52 | (in[5 + inPos] & 576460752303423487L) << 7) & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 1 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 9 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 17 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 25 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 33 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 41 & 255L));
         out[43 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 49 & 255L));
         out[44 + outPos] = (byte)((int)(((in[5 + inPos] & 576460752303423487L) >>> 57 | (in[6 + inPos] & 576460752303423487L) << 2) & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 576460752303423487L) >>> 6 & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 576460752303423487L) >>> 14 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 576460752303423487L) >>> 22 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 576460752303423487L) >>> 30 & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & 576460752303423487L) >>> 38 & 255L));
         out[50 + outPos] = (byte)((int)((in[6 + inPos] & 576460752303423487L) >>> 46 & 255L));
         out[51 + outPos] = (byte)((int)(((in[6 + inPos] & 576460752303423487L) >>> 54 | (in[7 + inPos] & 576460752303423487L) << 5) & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 3 & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 11 & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 19 & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 27 & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 35 & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 43 & 255L));
         out[58 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 51 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 576460752303423487L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 576460752303423487L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 576460752303423487L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 576460752303423487L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 576460752303423487L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 576460752303423487L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 576460752303423487L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & 576460752303423487L) >>> 56 | (in[1 + inPos] & 576460752303423487L) << 3) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 576460752303423487L) >>> 5 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 576460752303423487L) >>> 13 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 576460752303423487L) >>> 21 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 576460752303423487L) >>> 29 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 576460752303423487L) >>> 37 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 576460752303423487L) >>> 45 & 255L));
         out[14 + outPos] = (byte)((int)(((in[1 + inPos] & 576460752303423487L) >>> 53 | (in[2 + inPos] & 576460752303423487L) << 6) & 255L));
         out[15 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 2 & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 10 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 18 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 26 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 34 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 42 & 255L));
         out[21 + outPos] = (byte)((int)((in[2 + inPos] & 576460752303423487L) >>> 50 & 255L));
         out[22 + outPos] = (byte)((int)(((in[2 + inPos] & 576460752303423487L) >>> 58 | (in[3 + inPos] & 576460752303423487L) << 1) & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 576460752303423487L) >>> 7 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 576460752303423487L) >>> 15 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 576460752303423487L) >>> 23 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 576460752303423487L) >>> 31 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 576460752303423487L) >>> 39 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & 576460752303423487L) >>> 47 & 255L));
         out[29 + outPos] = (byte)((int)(((in[3 + inPos] & 576460752303423487L) >>> 55 | (in[4 + inPos] & 576460752303423487L) << 4) & 255L));
         out[30 + outPos] = (byte)((int)((in[4 + inPos] & 576460752303423487L) >>> 4 & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 576460752303423487L) >>> 12 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 576460752303423487L) >>> 20 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 576460752303423487L) >>> 28 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 576460752303423487L) >>> 36 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & 576460752303423487L) >>> 44 & 255L));
         out[36 + outPos] = (byte)((int)(((in[4 + inPos] & 576460752303423487L) >>> 52 | (in[5 + inPos] & 576460752303423487L) << 7) & 255L));
         out[37 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 1 & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 9 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 17 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 25 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 33 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 41 & 255L));
         out[43 + outPos] = (byte)((int)((in[5 + inPos] & 576460752303423487L) >>> 49 & 255L));
         out[44 + outPos] = (byte)((int)(((in[5 + inPos] & 576460752303423487L) >>> 57 | (in[6 + inPos] & 576460752303423487L) << 2) & 255L));
         out[45 + outPos] = (byte)((int)((in[6 + inPos] & 576460752303423487L) >>> 6 & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 576460752303423487L) >>> 14 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 576460752303423487L) >>> 22 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 576460752303423487L) >>> 30 & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & 576460752303423487L) >>> 38 & 255L));
         out[50 + outPos] = (byte)((int)((in[6 + inPos] & 576460752303423487L) >>> 46 & 255L));
         out[51 + outPos] = (byte)((int)(((in[6 + inPos] & 576460752303423487L) >>> 54 | (in[7 + inPos] & 576460752303423487L) << 5) & 255L));
         out[52 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 3 & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 11 & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 19 & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 27 & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 35 & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 43 & 255L));
         out[58 + outPos] = (byte)((int)((in[7 + inPos] & 576460752303423487L) >>> 51 & 255L));
         out[59 + outPos] = (byte)((int)(in[8 + inPos] & 576460752303423487L & 255L));
         out[60 + outPos] = (byte)((int)((in[8 + inPos] & 576460752303423487L) >>> 8 & 255L));
         out[61 + outPos] = (byte)((int)((in[8 + inPos] & 576460752303423487L) >>> 16 & 255L));
         out[62 + outPos] = (byte)((int)((in[8 + inPos] & 576460752303423487L) >>> 24 & 255L));
         out[63 + outPos] = (byte)((int)((in[8 + inPos] & 576460752303423487L) >>> 32 & 255L));
         out[64 + outPos] = (byte)((int)((in[8 + inPos] & 576460752303423487L) >>> 40 & 255L));
         out[65 + outPos] = (byte)((int)((in[8 + inPos] & 576460752303423487L) >>> 48 & 255L));
         out[66 + outPos] = (byte)((int)(((in[8 + inPos] & 576460752303423487L) >>> 56 | (in[9 + inPos] & 576460752303423487L) << 3) & 255L));
         out[67 + outPos] = (byte)((int)((in[9 + inPos] & 576460752303423487L) >>> 5 & 255L));
         out[68 + outPos] = (byte)((int)((in[9 + inPos] & 576460752303423487L) >>> 13 & 255L));
         out[69 + outPos] = (byte)((int)((in[9 + inPos] & 576460752303423487L) >>> 21 & 255L));
         out[70 + outPos] = (byte)((int)((in[9 + inPos] & 576460752303423487L) >>> 29 & 255L));
         out[71 + outPos] = (byte)((int)((in[9 + inPos] & 576460752303423487L) >>> 37 & 255L));
         out[72 + outPos] = (byte)((int)((in[9 + inPos] & 576460752303423487L) >>> 45 & 255L));
         out[73 + outPos] = (byte)((int)(((in[9 + inPos] & 576460752303423487L) >>> 53 | (in[10 + inPos] & 576460752303423487L) << 6) & 255L));
         out[74 + outPos] = (byte)((int)((in[10 + inPos] & 576460752303423487L) >>> 2 & 255L));
         out[75 + outPos] = (byte)((int)((in[10 + inPos] & 576460752303423487L) >>> 10 & 255L));
         out[76 + outPos] = (byte)((int)((in[10 + inPos] & 576460752303423487L) >>> 18 & 255L));
         out[77 + outPos] = (byte)((int)((in[10 + inPos] & 576460752303423487L) >>> 26 & 255L));
         out[78 + outPos] = (byte)((int)((in[10 + inPos] & 576460752303423487L) >>> 34 & 255L));
         out[79 + outPos] = (byte)((int)((in[10 + inPos] & 576460752303423487L) >>> 42 & 255L));
         out[80 + outPos] = (byte)((int)((in[10 + inPos] & 576460752303423487L) >>> 50 & 255L));
         out[81 + outPos] = (byte)((int)(((in[10 + inPos] & 576460752303423487L) >>> 58 | (in[11 + inPos] & 576460752303423487L) << 1) & 255L));
         out[82 + outPos] = (byte)((int)((in[11 + inPos] & 576460752303423487L) >>> 7 & 255L));
         out[83 + outPos] = (byte)((int)((in[11 + inPos] & 576460752303423487L) >>> 15 & 255L));
         out[84 + outPos] = (byte)((int)((in[11 + inPos] & 576460752303423487L) >>> 23 & 255L));
         out[85 + outPos] = (byte)((int)((in[11 + inPos] & 576460752303423487L) >>> 31 & 255L));
         out[86 + outPos] = (byte)((int)((in[11 + inPos] & 576460752303423487L) >>> 39 & 255L));
         out[87 + outPos] = (byte)((int)((in[11 + inPos] & 576460752303423487L) >>> 47 & 255L));
         out[88 + outPos] = (byte)((int)(((in[11 + inPos] & 576460752303423487L) >>> 55 | (in[12 + inPos] & 576460752303423487L) << 4) & 255L));
         out[89 + outPos] = (byte)((int)((in[12 + inPos] & 576460752303423487L) >>> 4 & 255L));
         out[90 + outPos] = (byte)((int)((in[12 + inPos] & 576460752303423487L) >>> 12 & 255L));
         out[91 + outPos] = (byte)((int)((in[12 + inPos] & 576460752303423487L) >>> 20 & 255L));
         out[92 + outPos] = (byte)((int)((in[12 + inPos] & 576460752303423487L) >>> 28 & 255L));
         out[93 + outPos] = (byte)((int)((in[12 + inPos] & 576460752303423487L) >>> 36 & 255L));
         out[94 + outPos] = (byte)((int)((in[12 + inPos] & 576460752303423487L) >>> 44 & 255L));
         out[95 + outPos] = (byte)((int)(((in[12 + inPos] & 576460752303423487L) >>> 52 | (in[13 + inPos] & 576460752303423487L) << 7) & 255L));
         out[96 + outPos] = (byte)((int)((in[13 + inPos] & 576460752303423487L) >>> 1 & 255L));
         out[97 + outPos] = (byte)((int)((in[13 + inPos] & 576460752303423487L) >>> 9 & 255L));
         out[98 + outPos] = (byte)((int)((in[13 + inPos] & 576460752303423487L) >>> 17 & 255L));
         out[99 + outPos] = (byte)((int)((in[13 + inPos] & 576460752303423487L) >>> 25 & 255L));
         out[100 + outPos] = (byte)((int)((in[13 + inPos] & 576460752303423487L) >>> 33 & 255L));
         out[101 + outPos] = (byte)((int)((in[13 + inPos] & 576460752303423487L) >>> 41 & 255L));
         out[102 + outPos] = (byte)((int)((in[13 + inPos] & 576460752303423487L) >>> 49 & 255L));
         out[103 + outPos] = (byte)((int)(((in[13 + inPos] & 576460752303423487L) >>> 57 | (in[14 + inPos] & 576460752303423487L) << 2) & 255L));
         out[104 + outPos] = (byte)((int)((in[14 + inPos] & 576460752303423487L) >>> 6 & 255L));
         out[105 + outPos] = (byte)((int)((in[14 + inPos] & 576460752303423487L) >>> 14 & 255L));
         out[106 + outPos] = (byte)((int)((in[14 + inPos] & 576460752303423487L) >>> 22 & 255L));
         out[107 + outPos] = (byte)((int)((in[14 + inPos] & 576460752303423487L) >>> 30 & 255L));
         out[108 + outPos] = (byte)((int)((in[14 + inPos] & 576460752303423487L) >>> 38 & 255L));
         out[109 + outPos] = (byte)((int)((in[14 + inPos] & 576460752303423487L) >>> 46 & 255L));
         out[110 + outPos] = (byte)((int)(((in[14 + inPos] & 576460752303423487L) >>> 54 | (in[15 + inPos] & 576460752303423487L) << 5) & 255L));
         out[111 + outPos] = (byte)((int)((in[15 + inPos] & 576460752303423487L) >>> 3 & 255L));
         out[112 + outPos] = (byte)((int)((in[15 + inPos] & 576460752303423487L) >>> 11 & 255L));
         out[113 + outPos] = (byte)((int)((in[15 + inPos] & 576460752303423487L) >>> 19 & 255L));
         out[114 + outPos] = (byte)((int)((in[15 + inPos] & 576460752303423487L) >>> 27 & 255L));
         out[115 + outPos] = (byte)((int)((in[15 + inPos] & 576460752303423487L) >>> 35 & 255L));
         out[116 + outPos] = (byte)((int)((in[15 + inPos] & 576460752303423487L) >>> 43 & 255L));
         out[117 + outPos] = (byte)((int)((in[15 + inPos] & 576460752303423487L) >>> 51 & 255L));
         out[118 + outPos] = (byte)((int)(in[16 + inPos] & 576460752303423487L & 255L));
         out[119 + outPos] = (byte)((int)((in[16 + inPos] & 576460752303423487L) >>> 8 & 255L));
         out[120 + outPos] = (byte)((int)((in[16 + inPos] & 576460752303423487L) >>> 16 & 255L));
         out[121 + outPos] = (byte)((int)((in[16 + inPos] & 576460752303423487L) >>> 24 & 255L));
         out[122 + outPos] = (byte)((int)((in[16 + inPos] & 576460752303423487L) >>> 32 & 255L));
         out[123 + outPos] = (byte)((int)((in[16 + inPos] & 576460752303423487L) >>> 40 & 255L));
         out[124 + outPos] = (byte)((int)((in[16 + inPos] & 576460752303423487L) >>> 48 & 255L));
         out[125 + outPos] = (byte)((int)(((in[16 + inPos] & 576460752303423487L) >>> 56 | (in[17 + inPos] & 576460752303423487L) << 3) & 255L));
         out[126 + outPos] = (byte)((int)((in[17 + inPos] & 576460752303423487L) >>> 5 & 255L));
         out[127 + outPos] = (byte)((int)((in[17 + inPos] & 576460752303423487L) >>> 13 & 255L));
         out[128 + outPos] = (byte)((int)((in[17 + inPos] & 576460752303423487L) >>> 21 & 255L));
         out[129 + outPos] = (byte)((int)((in[17 + inPos] & 576460752303423487L) >>> 29 & 255L));
         out[130 + outPos] = (byte)((int)((in[17 + inPos] & 576460752303423487L) >>> 37 & 255L));
         out[131 + outPos] = (byte)((int)((in[17 + inPos] & 576460752303423487L) >>> 45 & 255L));
         out[132 + outPos] = (byte)((int)(((in[17 + inPos] & 576460752303423487L) >>> 53 | (in[18 + inPos] & 576460752303423487L) << 6) & 255L));
         out[133 + outPos] = (byte)((int)((in[18 + inPos] & 576460752303423487L) >>> 2 & 255L));
         out[134 + outPos] = (byte)((int)((in[18 + inPos] & 576460752303423487L) >>> 10 & 255L));
         out[135 + outPos] = (byte)((int)((in[18 + inPos] & 576460752303423487L) >>> 18 & 255L));
         out[136 + outPos] = (byte)((int)((in[18 + inPos] & 576460752303423487L) >>> 26 & 255L));
         out[137 + outPos] = (byte)((int)((in[18 + inPos] & 576460752303423487L) >>> 34 & 255L));
         out[138 + outPos] = (byte)((int)((in[18 + inPos] & 576460752303423487L) >>> 42 & 255L));
         out[139 + outPos] = (byte)((int)((in[18 + inPos] & 576460752303423487L) >>> 50 & 255L));
         out[140 + outPos] = (byte)((int)(((in[18 + inPos] & 576460752303423487L) >>> 58 | (in[19 + inPos] & 576460752303423487L) << 1) & 255L));
         out[141 + outPos] = (byte)((int)((in[19 + inPos] & 576460752303423487L) >>> 7 & 255L));
         out[142 + outPos] = (byte)((int)((in[19 + inPos] & 576460752303423487L) >>> 15 & 255L));
         out[143 + outPos] = (byte)((int)((in[19 + inPos] & 576460752303423487L) >>> 23 & 255L));
         out[144 + outPos] = (byte)((int)((in[19 + inPos] & 576460752303423487L) >>> 31 & 255L));
         out[145 + outPos] = (byte)((int)((in[19 + inPos] & 576460752303423487L) >>> 39 & 255L));
         out[146 + outPos] = (byte)((int)((in[19 + inPos] & 576460752303423487L) >>> 47 & 255L));
         out[147 + outPos] = (byte)((int)(((in[19 + inPos] & 576460752303423487L) >>> 55 | (in[20 + inPos] & 576460752303423487L) << 4) & 255L));
         out[148 + outPos] = (byte)((int)((in[20 + inPos] & 576460752303423487L) >>> 4 & 255L));
         out[149 + outPos] = (byte)((int)((in[20 + inPos] & 576460752303423487L) >>> 12 & 255L));
         out[150 + outPos] = (byte)((int)((in[20 + inPos] & 576460752303423487L) >>> 20 & 255L));
         out[151 + outPos] = (byte)((int)((in[20 + inPos] & 576460752303423487L) >>> 28 & 255L));
         out[152 + outPos] = (byte)((int)((in[20 + inPos] & 576460752303423487L) >>> 36 & 255L));
         out[153 + outPos] = (byte)((int)((in[20 + inPos] & 576460752303423487L) >>> 44 & 255L));
         out[154 + outPos] = (byte)((int)(((in[20 + inPos] & 576460752303423487L) >>> 52 | (in[21 + inPos] & 576460752303423487L) << 7) & 255L));
         out[155 + outPos] = (byte)((int)((in[21 + inPos] & 576460752303423487L) >>> 1 & 255L));
         out[156 + outPos] = (byte)((int)((in[21 + inPos] & 576460752303423487L) >>> 9 & 255L));
         out[157 + outPos] = (byte)((int)((in[21 + inPos] & 576460752303423487L) >>> 17 & 255L));
         out[158 + outPos] = (byte)((int)((in[21 + inPos] & 576460752303423487L) >>> 25 & 255L));
         out[159 + outPos] = (byte)((int)((in[21 + inPos] & 576460752303423487L) >>> 33 & 255L));
         out[160 + outPos] = (byte)((int)((in[21 + inPos] & 576460752303423487L) >>> 41 & 255L));
         out[161 + outPos] = (byte)((int)((in[21 + inPos] & 576460752303423487L) >>> 49 & 255L));
         out[162 + outPos] = (byte)((int)(((in[21 + inPos] & 576460752303423487L) >>> 57 | (in[22 + inPos] & 576460752303423487L) << 2) & 255L));
         out[163 + outPos] = (byte)((int)((in[22 + inPos] & 576460752303423487L) >>> 6 & 255L));
         out[164 + outPos] = (byte)((int)((in[22 + inPos] & 576460752303423487L) >>> 14 & 255L));
         out[165 + outPos] = (byte)((int)((in[22 + inPos] & 576460752303423487L) >>> 22 & 255L));
         out[166 + outPos] = (byte)((int)((in[22 + inPos] & 576460752303423487L) >>> 30 & 255L));
         out[167 + outPos] = (byte)((int)((in[22 + inPos] & 576460752303423487L) >>> 38 & 255L));
         out[168 + outPos] = (byte)((int)((in[22 + inPos] & 576460752303423487L) >>> 46 & 255L));
         out[169 + outPos] = (byte)((int)(((in[22 + inPos] & 576460752303423487L) >>> 54 | (in[23 + inPos] & 576460752303423487L) << 5) & 255L));
         out[170 + outPos] = (byte)((int)((in[23 + inPos] & 576460752303423487L) >>> 3 & 255L));
         out[171 + outPos] = (byte)((int)((in[23 + inPos] & 576460752303423487L) >>> 11 & 255L));
         out[172 + outPos] = (byte)((int)((in[23 + inPos] & 576460752303423487L) >>> 19 & 255L));
         out[173 + outPos] = (byte)((int)((in[23 + inPos] & 576460752303423487L) >>> 27 & 255L));
         out[174 + outPos] = (byte)((int)((in[23 + inPos] & 576460752303423487L) >>> 35 & 255L));
         out[175 + outPos] = (byte)((int)((in[23 + inPos] & 576460752303423487L) >>> 43 & 255L));
         out[176 + outPos] = (byte)((int)((in[23 + inPos] & 576460752303423487L) >>> 51 & 255L));
         out[177 + outPos] = (byte)((int)(in[24 + inPos] & 576460752303423487L & 255L));
         out[178 + outPos] = (byte)((int)((in[24 + inPos] & 576460752303423487L) >>> 8 & 255L));
         out[179 + outPos] = (byte)((int)((in[24 + inPos] & 576460752303423487L) >>> 16 & 255L));
         out[180 + outPos] = (byte)((int)((in[24 + inPos] & 576460752303423487L) >>> 24 & 255L));
         out[181 + outPos] = (byte)((int)((in[24 + inPos] & 576460752303423487L) >>> 32 & 255L));
         out[182 + outPos] = (byte)((int)((in[24 + inPos] & 576460752303423487L) >>> 40 & 255L));
         out[183 + outPos] = (byte)((int)((in[24 + inPos] & 576460752303423487L) >>> 48 & 255L));
         out[184 + outPos] = (byte)((int)(((in[24 + inPos] & 576460752303423487L) >>> 56 | (in[25 + inPos] & 576460752303423487L) << 3) & 255L));
         out[185 + outPos] = (byte)((int)((in[25 + inPos] & 576460752303423487L) >>> 5 & 255L));
         out[186 + outPos] = (byte)((int)((in[25 + inPos] & 576460752303423487L) >>> 13 & 255L));
         out[187 + outPos] = (byte)((int)((in[25 + inPos] & 576460752303423487L) >>> 21 & 255L));
         out[188 + outPos] = (byte)((int)((in[25 + inPos] & 576460752303423487L) >>> 29 & 255L));
         out[189 + outPos] = (byte)((int)((in[25 + inPos] & 576460752303423487L) >>> 37 & 255L));
         out[190 + outPos] = (byte)((int)((in[25 + inPos] & 576460752303423487L) >>> 45 & 255L));
         out[191 + outPos] = (byte)((int)(((in[25 + inPos] & 576460752303423487L) >>> 53 | (in[26 + inPos] & 576460752303423487L) << 6) & 255L));
         out[192 + outPos] = (byte)((int)((in[26 + inPos] & 576460752303423487L) >>> 2 & 255L));
         out[193 + outPos] = (byte)((int)((in[26 + inPos] & 576460752303423487L) >>> 10 & 255L));
         out[194 + outPos] = (byte)((int)((in[26 + inPos] & 576460752303423487L) >>> 18 & 255L));
         out[195 + outPos] = (byte)((int)((in[26 + inPos] & 576460752303423487L) >>> 26 & 255L));
         out[196 + outPos] = (byte)((int)((in[26 + inPos] & 576460752303423487L) >>> 34 & 255L));
         out[197 + outPos] = (byte)((int)((in[26 + inPos] & 576460752303423487L) >>> 42 & 255L));
         out[198 + outPos] = (byte)((int)((in[26 + inPos] & 576460752303423487L) >>> 50 & 255L));
         out[199 + outPos] = (byte)((int)(((in[26 + inPos] & 576460752303423487L) >>> 58 | (in[27 + inPos] & 576460752303423487L) << 1) & 255L));
         out[200 + outPos] = (byte)((int)((in[27 + inPos] & 576460752303423487L) >>> 7 & 255L));
         out[201 + outPos] = (byte)((int)((in[27 + inPos] & 576460752303423487L) >>> 15 & 255L));
         out[202 + outPos] = (byte)((int)((in[27 + inPos] & 576460752303423487L) >>> 23 & 255L));
         out[203 + outPos] = (byte)((int)((in[27 + inPos] & 576460752303423487L) >>> 31 & 255L));
         out[204 + outPos] = (byte)((int)((in[27 + inPos] & 576460752303423487L) >>> 39 & 255L));
         out[205 + outPos] = (byte)((int)((in[27 + inPos] & 576460752303423487L) >>> 47 & 255L));
         out[206 + outPos] = (byte)((int)(((in[27 + inPos] & 576460752303423487L) >>> 55 | (in[28 + inPos] & 576460752303423487L) << 4) & 255L));
         out[207 + outPos] = (byte)((int)((in[28 + inPos] & 576460752303423487L) >>> 4 & 255L));
         out[208 + outPos] = (byte)((int)((in[28 + inPos] & 576460752303423487L) >>> 12 & 255L));
         out[209 + outPos] = (byte)((int)((in[28 + inPos] & 576460752303423487L) >>> 20 & 255L));
         out[210 + outPos] = (byte)((int)((in[28 + inPos] & 576460752303423487L) >>> 28 & 255L));
         out[211 + outPos] = (byte)((int)((in[28 + inPos] & 576460752303423487L) >>> 36 & 255L));
         out[212 + outPos] = (byte)((int)((in[28 + inPos] & 576460752303423487L) >>> 44 & 255L));
         out[213 + outPos] = (byte)((int)(((in[28 + inPos] & 576460752303423487L) >>> 52 | (in[29 + inPos] & 576460752303423487L) << 7) & 255L));
         out[214 + outPos] = (byte)((int)((in[29 + inPos] & 576460752303423487L) >>> 1 & 255L));
         out[215 + outPos] = (byte)((int)((in[29 + inPos] & 576460752303423487L) >>> 9 & 255L));
         out[216 + outPos] = (byte)((int)((in[29 + inPos] & 576460752303423487L) >>> 17 & 255L));
         out[217 + outPos] = (byte)((int)((in[29 + inPos] & 576460752303423487L) >>> 25 & 255L));
         out[218 + outPos] = (byte)((int)((in[29 + inPos] & 576460752303423487L) >>> 33 & 255L));
         out[219 + outPos] = (byte)((int)((in[29 + inPos] & 576460752303423487L) >>> 41 & 255L));
         out[220 + outPos] = (byte)((int)((in[29 + inPos] & 576460752303423487L) >>> 49 & 255L));
         out[221 + outPos] = (byte)((int)(((in[29 + inPos] & 576460752303423487L) >>> 57 | (in[30 + inPos] & 576460752303423487L) << 2) & 255L));
         out[222 + outPos] = (byte)((int)((in[30 + inPos] & 576460752303423487L) >>> 6 & 255L));
         out[223 + outPos] = (byte)((int)((in[30 + inPos] & 576460752303423487L) >>> 14 & 255L));
         out[224 + outPos] = (byte)((int)((in[30 + inPos] & 576460752303423487L) >>> 22 & 255L));
         out[225 + outPos] = (byte)((int)((in[30 + inPos] & 576460752303423487L) >>> 30 & 255L));
         out[226 + outPos] = (byte)((int)((in[30 + inPos] & 576460752303423487L) >>> 38 & 255L));
         out[227 + outPos] = (byte)((int)((in[30 + inPos] & 576460752303423487L) >>> 46 & 255L));
         out[228 + outPos] = (byte)((int)(((in[30 + inPos] & 576460752303423487L) >>> 54 | (in[31 + inPos] & 576460752303423487L) << 5) & 255L));
         out[229 + outPos] = (byte)((int)((in[31 + inPos] & 576460752303423487L) >>> 3 & 255L));
         out[230 + outPos] = (byte)((int)((in[31 + inPos] & 576460752303423487L) >>> 11 & 255L));
         out[231 + outPos] = (byte)((int)((in[31 + inPos] & 576460752303423487L) >>> 19 & 255L));
         out[232 + outPos] = (byte)((int)((in[31 + inPos] & 576460752303423487L) >>> 27 & 255L));
         out[233 + outPos] = (byte)((int)((in[31 + inPos] & 576460752303423487L) >>> 35 & 255L));
         out[234 + outPos] = (byte)((int)((in[31 + inPos] & 576460752303423487L) >>> 43 & 255L));
         out[235 + outPos] = (byte)((int)((in[31 + inPos] & 576460752303423487L) >>> 51 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & 576460752303423487L;
         out[1 + outPos] = (long)in[7 + inPos] >> 3 & 31L | (long)in[8 + inPos] << 5 & 8191L | (long)in[9 + inPos] << 13 & 2097151L | (long)in[10 + inPos] << 21 & 536870911L | (long)in[11 + inPos] << 29 & 137438953471L | (long)in[12 + inPos] << 37 & 35184372088831L | (long)in[13 + inPos] << 45 & 9007199254740991L | (long)in[14 + inPos] << 53 & 576460752303423487L;
         out[2 + outPos] = (long)in[14 + inPos] >> 6 & 3L | (long)in[15 + inPos] << 2 & 1023L | (long)in[16 + inPos] << 10 & 262143L | (long)in[17 + inPos] << 18 & 67108863L | (long)in[18 + inPos] << 26 & 17179869183L | (long)in[19 + inPos] << 34 & 4398046511103L | (long)in[20 + inPos] << 42 & 1125899906842623L | (long)in[21 + inPos] << 50 & 288230376151711743L | (long)in[22 + inPos] << 58 & 576460752303423487L;
         out[3 + outPos] = (long)in[22 + inPos] >> 1 & 127L | (long)in[23 + inPos] << 7 & 32767L | (long)in[24 + inPos] << 15 & 8388607L | (long)in[25 + inPos] << 23 & 2147483647L | (long)in[26 + inPos] << 31 & 549755813887L | (long)in[27 + inPos] << 39 & 140737488355327L | (long)in[28 + inPos] << 47 & 36028797018963967L | (long)in[29 + inPos] << 55 & 576460752303423487L;
         out[4 + outPos] = (long)in[29 + inPos] >> 4 & 15L | (long)in[30 + inPos] << 4 & 4095L | (long)in[31 + inPos] << 12 & 1048575L | (long)in[32 + inPos] << 20 & 268435455L | (long)in[33 + inPos] << 28 & 68719476735L | (long)in[34 + inPos] << 36 & 17592186044415L | (long)in[35 + inPos] << 44 & 4503599627370495L | (long)in[36 + inPos] << 52 & 576460752303423487L;
         out[5 + outPos] = (long)in[36 + inPos] >> 7 & 1L | (long)in[37 + inPos] << 1 & 511L | (long)in[38 + inPos] << 9 & 131071L | (long)in[39 + inPos] << 17 & 33554431L | (long)in[40 + inPos] << 25 & 8589934591L | (long)in[41 + inPos] << 33 & 2199023255551L | (long)in[42 + inPos] << 41 & 562949953421311L | (long)in[43 + inPos] << 49 & 144115188075855871L | (long)in[44 + inPos] << 57 & 576460752303423487L;
         out[6 + outPos] = (long)in[44 + inPos] >> 2 & 63L | (long)in[45 + inPos] << 6 & 16383L | (long)in[46 + inPos] << 14 & 4194303L | (long)in[47 + inPos] << 22 & 1073741823L | (long)in[48 + inPos] << 30 & 274877906943L | (long)in[49 + inPos] << 38 & 70368744177663L | (long)in[50 + inPos] << 46 & 18014398509481983L | (long)in[51 + inPos] << 54 & 576460752303423487L;
         out[7 + outPos] = (long)in[51 + inPos] >> 5 & 7L | (long)in[52 + inPos] << 3 & 2047L | (long)in[53 + inPos] << 11 & 524287L | (long)in[54 + inPos] << 19 & 134217727L | (long)in[55 + inPos] << 27 & 34359738367L | (long)in[56 + inPos] << 35 & 8796093022207L | (long)in[57 + inPos] << 43 & 2251799813685247L | (long)in[58 + inPos] << 51 & 576460752303423487L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & 576460752303423487L;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 3 & 31L | (long)in.get(8 + inPos) << 5 & 8191L | (long)in.get(9 + inPos) << 13 & 2097151L | (long)in.get(10 + inPos) << 21 & 536870911L | (long)in.get(11 + inPos) << 29 & 137438953471L | (long)in.get(12 + inPos) << 37 & 35184372088831L | (long)in.get(13 + inPos) << 45 & 9007199254740991L | (long)in.get(14 + inPos) << 53 & 576460752303423487L;
         out[2 + outPos] = (long)in.get(14 + inPos) >> 6 & 3L | (long)in.get(15 + inPos) << 2 & 1023L | (long)in.get(16 + inPos) << 10 & 262143L | (long)in.get(17 + inPos) << 18 & 67108863L | (long)in.get(18 + inPos) << 26 & 17179869183L | (long)in.get(19 + inPos) << 34 & 4398046511103L | (long)in.get(20 + inPos) << 42 & 1125899906842623L | (long)in.get(21 + inPos) << 50 & 288230376151711743L | (long)in.get(22 + inPos) << 58 & 576460752303423487L;
         out[3 + outPos] = (long)in.get(22 + inPos) >> 1 & 127L | (long)in.get(23 + inPos) << 7 & 32767L | (long)in.get(24 + inPos) << 15 & 8388607L | (long)in.get(25 + inPos) << 23 & 2147483647L | (long)in.get(26 + inPos) << 31 & 549755813887L | (long)in.get(27 + inPos) << 39 & 140737488355327L | (long)in.get(28 + inPos) << 47 & 36028797018963967L | (long)in.get(29 + inPos) << 55 & 576460752303423487L;
         out[4 + outPos] = (long)in.get(29 + inPos) >> 4 & 15L | (long)in.get(30 + inPos) << 4 & 4095L | (long)in.get(31 + inPos) << 12 & 1048575L | (long)in.get(32 + inPos) << 20 & 268435455L | (long)in.get(33 + inPos) << 28 & 68719476735L | (long)in.get(34 + inPos) << 36 & 17592186044415L | (long)in.get(35 + inPos) << 44 & 4503599627370495L | (long)in.get(36 + inPos) << 52 & 576460752303423487L;
         out[5 + outPos] = (long)in.get(36 + inPos) >> 7 & 1L | (long)in.get(37 + inPos) << 1 & 511L | (long)in.get(38 + inPos) << 9 & 131071L | (long)in.get(39 + inPos) << 17 & 33554431L | (long)in.get(40 + inPos) << 25 & 8589934591L | (long)in.get(41 + inPos) << 33 & 2199023255551L | (long)in.get(42 + inPos) << 41 & 562949953421311L | (long)in.get(43 + inPos) << 49 & 144115188075855871L | (long)in.get(44 + inPos) << 57 & 576460752303423487L;
         out[6 + outPos] = (long)in.get(44 + inPos) >> 2 & 63L | (long)in.get(45 + inPos) << 6 & 16383L | (long)in.get(46 + inPos) << 14 & 4194303L | (long)in.get(47 + inPos) << 22 & 1073741823L | (long)in.get(48 + inPos) << 30 & 274877906943L | (long)in.get(49 + inPos) << 38 & 70368744177663L | (long)in.get(50 + inPos) << 46 & 18014398509481983L | (long)in.get(51 + inPos) << 54 & 576460752303423487L;
         out[7 + outPos] = (long)in.get(51 + inPos) >> 5 & 7L | (long)in.get(52 + inPos) << 3 & 2047L | (long)in.get(53 + inPos) << 11 & 524287L | (long)in.get(54 + inPos) << 19 & 134217727L | (long)in.get(55 + inPos) << 27 & 34359738367L | (long)in.get(56 + inPos) << 35 & 8796093022207L | (long)in.get(57 + inPos) << 43 & 2251799813685247L | (long)in.get(58 + inPos) << 51 & 576460752303423487L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & 576460752303423487L;
         out[1 + outPos] = (long)in[7 + inPos] >> 3 & 31L | (long)in[8 + inPos] << 5 & 8191L | (long)in[9 + inPos] << 13 & 2097151L | (long)in[10 + inPos] << 21 & 536870911L | (long)in[11 + inPos] << 29 & 137438953471L | (long)in[12 + inPos] << 37 & 35184372088831L | (long)in[13 + inPos] << 45 & 9007199254740991L | (long)in[14 + inPos] << 53 & 576460752303423487L;
         out[2 + outPos] = (long)in[14 + inPos] >> 6 & 3L | (long)in[15 + inPos] << 2 & 1023L | (long)in[16 + inPos] << 10 & 262143L | (long)in[17 + inPos] << 18 & 67108863L | (long)in[18 + inPos] << 26 & 17179869183L | (long)in[19 + inPos] << 34 & 4398046511103L | (long)in[20 + inPos] << 42 & 1125899906842623L | (long)in[21 + inPos] << 50 & 288230376151711743L | (long)in[22 + inPos] << 58 & 576460752303423487L;
         out[3 + outPos] = (long)in[22 + inPos] >> 1 & 127L | (long)in[23 + inPos] << 7 & 32767L | (long)in[24 + inPos] << 15 & 8388607L | (long)in[25 + inPos] << 23 & 2147483647L | (long)in[26 + inPos] << 31 & 549755813887L | (long)in[27 + inPos] << 39 & 140737488355327L | (long)in[28 + inPos] << 47 & 36028797018963967L | (long)in[29 + inPos] << 55 & 576460752303423487L;
         out[4 + outPos] = (long)in[29 + inPos] >> 4 & 15L | (long)in[30 + inPos] << 4 & 4095L | (long)in[31 + inPos] << 12 & 1048575L | (long)in[32 + inPos] << 20 & 268435455L | (long)in[33 + inPos] << 28 & 68719476735L | (long)in[34 + inPos] << 36 & 17592186044415L | (long)in[35 + inPos] << 44 & 4503599627370495L | (long)in[36 + inPos] << 52 & 576460752303423487L;
         out[5 + outPos] = (long)in[36 + inPos] >> 7 & 1L | (long)in[37 + inPos] << 1 & 511L | (long)in[38 + inPos] << 9 & 131071L | (long)in[39 + inPos] << 17 & 33554431L | (long)in[40 + inPos] << 25 & 8589934591L | (long)in[41 + inPos] << 33 & 2199023255551L | (long)in[42 + inPos] << 41 & 562949953421311L | (long)in[43 + inPos] << 49 & 144115188075855871L | (long)in[44 + inPos] << 57 & 576460752303423487L;
         out[6 + outPos] = (long)in[44 + inPos] >> 2 & 63L | (long)in[45 + inPos] << 6 & 16383L | (long)in[46 + inPos] << 14 & 4194303L | (long)in[47 + inPos] << 22 & 1073741823L | (long)in[48 + inPos] << 30 & 274877906943L | (long)in[49 + inPos] << 38 & 70368744177663L | (long)in[50 + inPos] << 46 & 18014398509481983L | (long)in[51 + inPos] << 54 & 576460752303423487L;
         out[7 + outPos] = (long)in[51 + inPos] >> 5 & 7L | (long)in[52 + inPos] << 3 & 2047L | (long)in[53 + inPos] << 11 & 524287L | (long)in[54 + inPos] << 19 & 134217727L | (long)in[55 + inPos] << 27 & 34359738367L | (long)in[56 + inPos] << 35 & 8796093022207L | (long)in[57 + inPos] << 43 & 2251799813685247L | (long)in[58 + inPos] << 51 & 576460752303423487L;
         out[8 + outPos] = (long)in[59 + inPos] & 255L | (long)in[60 + inPos] << 8 & 65535L | (long)in[61 + inPos] << 16 & 16777215L | (long)in[62 + inPos] << 24 & 4294967295L | (long)in[63 + inPos] << 32 & 1099511627775L | (long)in[64 + inPos] << 40 & 281474976710655L | (long)in[65 + inPos] << 48 & 72057594037927935L | (long)in[66 + inPos] << 56 & 576460752303423487L;
         out[9 + outPos] = (long)in[66 + inPos] >> 3 & 31L | (long)in[67 + inPos] << 5 & 8191L | (long)in[68 + inPos] << 13 & 2097151L | (long)in[69 + inPos] << 21 & 536870911L | (long)in[70 + inPos] << 29 & 137438953471L | (long)in[71 + inPos] << 37 & 35184372088831L | (long)in[72 + inPos] << 45 & 9007199254740991L | (long)in[73 + inPos] << 53 & 576460752303423487L;
         out[10 + outPos] = (long)in[73 + inPos] >> 6 & 3L | (long)in[74 + inPos] << 2 & 1023L | (long)in[75 + inPos] << 10 & 262143L | (long)in[76 + inPos] << 18 & 67108863L | (long)in[77 + inPos] << 26 & 17179869183L | (long)in[78 + inPos] << 34 & 4398046511103L | (long)in[79 + inPos] << 42 & 1125899906842623L | (long)in[80 + inPos] << 50 & 288230376151711743L | (long)in[81 + inPos] << 58 & 576460752303423487L;
         out[11 + outPos] = (long)in[81 + inPos] >> 1 & 127L | (long)in[82 + inPos] << 7 & 32767L | (long)in[83 + inPos] << 15 & 8388607L | (long)in[84 + inPos] << 23 & 2147483647L | (long)in[85 + inPos] << 31 & 549755813887L | (long)in[86 + inPos] << 39 & 140737488355327L | (long)in[87 + inPos] << 47 & 36028797018963967L | (long)in[88 + inPos] << 55 & 576460752303423487L;
         out[12 + outPos] = (long)in[88 + inPos] >> 4 & 15L | (long)in[89 + inPos] << 4 & 4095L | (long)in[90 + inPos] << 12 & 1048575L | (long)in[91 + inPos] << 20 & 268435455L | (long)in[92 + inPos] << 28 & 68719476735L | (long)in[93 + inPos] << 36 & 17592186044415L | (long)in[94 + inPos] << 44 & 4503599627370495L | (long)in[95 + inPos] << 52 & 576460752303423487L;
         out[13 + outPos] = (long)in[95 + inPos] >> 7 & 1L | (long)in[96 + inPos] << 1 & 511L | (long)in[97 + inPos] << 9 & 131071L | (long)in[98 + inPos] << 17 & 33554431L | (long)in[99 + inPos] << 25 & 8589934591L | (long)in[100 + inPos] << 33 & 2199023255551L | (long)in[101 + inPos] << 41 & 562949953421311L | (long)in[102 + inPos] << 49 & 144115188075855871L | (long)in[103 + inPos] << 57 & 576460752303423487L;
         out[14 + outPos] = (long)in[103 + inPos] >> 2 & 63L | (long)in[104 + inPos] << 6 & 16383L | (long)in[105 + inPos] << 14 & 4194303L | (long)in[106 + inPos] << 22 & 1073741823L | (long)in[107 + inPos] << 30 & 274877906943L | (long)in[108 + inPos] << 38 & 70368744177663L | (long)in[109 + inPos] << 46 & 18014398509481983L | (long)in[110 + inPos] << 54 & 576460752303423487L;
         out[15 + outPos] = (long)in[110 + inPos] >> 5 & 7L | (long)in[111 + inPos] << 3 & 2047L | (long)in[112 + inPos] << 11 & 524287L | (long)in[113 + inPos] << 19 & 134217727L | (long)in[114 + inPos] << 27 & 34359738367L | (long)in[115 + inPos] << 35 & 8796093022207L | (long)in[116 + inPos] << 43 & 2251799813685247L | (long)in[117 + inPos] << 51 & 576460752303423487L;
         out[16 + outPos] = (long)in[118 + inPos] & 255L | (long)in[119 + inPos] << 8 & 65535L | (long)in[120 + inPos] << 16 & 16777215L | (long)in[121 + inPos] << 24 & 4294967295L | (long)in[122 + inPos] << 32 & 1099511627775L | (long)in[123 + inPos] << 40 & 281474976710655L | (long)in[124 + inPos] << 48 & 72057594037927935L | (long)in[125 + inPos] << 56 & 576460752303423487L;
         out[17 + outPos] = (long)in[125 + inPos] >> 3 & 31L | (long)in[126 + inPos] << 5 & 8191L | (long)in[127 + inPos] << 13 & 2097151L | (long)in[128 + inPos] << 21 & 536870911L | (long)in[129 + inPos] << 29 & 137438953471L | (long)in[130 + inPos] << 37 & 35184372088831L | (long)in[131 + inPos] << 45 & 9007199254740991L | (long)in[132 + inPos] << 53 & 576460752303423487L;
         out[18 + outPos] = (long)in[132 + inPos] >> 6 & 3L | (long)in[133 + inPos] << 2 & 1023L | (long)in[134 + inPos] << 10 & 262143L | (long)in[135 + inPos] << 18 & 67108863L | (long)in[136 + inPos] << 26 & 17179869183L | (long)in[137 + inPos] << 34 & 4398046511103L | (long)in[138 + inPos] << 42 & 1125899906842623L | (long)in[139 + inPos] << 50 & 288230376151711743L | (long)in[140 + inPos] << 58 & 576460752303423487L;
         out[19 + outPos] = (long)in[140 + inPos] >> 1 & 127L | (long)in[141 + inPos] << 7 & 32767L | (long)in[142 + inPos] << 15 & 8388607L | (long)in[143 + inPos] << 23 & 2147483647L | (long)in[144 + inPos] << 31 & 549755813887L | (long)in[145 + inPos] << 39 & 140737488355327L | (long)in[146 + inPos] << 47 & 36028797018963967L | (long)in[147 + inPos] << 55 & 576460752303423487L;
         out[20 + outPos] = (long)in[147 + inPos] >> 4 & 15L | (long)in[148 + inPos] << 4 & 4095L | (long)in[149 + inPos] << 12 & 1048575L | (long)in[150 + inPos] << 20 & 268435455L | (long)in[151 + inPos] << 28 & 68719476735L | (long)in[152 + inPos] << 36 & 17592186044415L | (long)in[153 + inPos] << 44 & 4503599627370495L | (long)in[154 + inPos] << 52 & 576460752303423487L;
         out[21 + outPos] = (long)in[154 + inPos] >> 7 & 1L | (long)in[155 + inPos] << 1 & 511L | (long)in[156 + inPos] << 9 & 131071L | (long)in[157 + inPos] << 17 & 33554431L | (long)in[158 + inPos] << 25 & 8589934591L | (long)in[159 + inPos] << 33 & 2199023255551L | (long)in[160 + inPos] << 41 & 562949953421311L | (long)in[161 + inPos] << 49 & 144115188075855871L | (long)in[162 + inPos] << 57 & 576460752303423487L;
         out[22 + outPos] = (long)in[162 + inPos] >> 2 & 63L | (long)in[163 + inPos] << 6 & 16383L | (long)in[164 + inPos] << 14 & 4194303L | (long)in[165 + inPos] << 22 & 1073741823L | (long)in[166 + inPos] << 30 & 274877906943L | (long)in[167 + inPos] << 38 & 70368744177663L | (long)in[168 + inPos] << 46 & 18014398509481983L | (long)in[169 + inPos] << 54 & 576460752303423487L;
         out[23 + outPos] = (long)in[169 + inPos] >> 5 & 7L | (long)in[170 + inPos] << 3 & 2047L | (long)in[171 + inPos] << 11 & 524287L | (long)in[172 + inPos] << 19 & 134217727L | (long)in[173 + inPos] << 27 & 34359738367L | (long)in[174 + inPos] << 35 & 8796093022207L | (long)in[175 + inPos] << 43 & 2251799813685247L | (long)in[176 + inPos] << 51 & 576460752303423487L;
         out[24 + outPos] = (long)in[177 + inPos] & 255L | (long)in[178 + inPos] << 8 & 65535L | (long)in[179 + inPos] << 16 & 16777215L | (long)in[180 + inPos] << 24 & 4294967295L | (long)in[181 + inPos] << 32 & 1099511627775L | (long)in[182 + inPos] << 40 & 281474976710655L | (long)in[183 + inPos] << 48 & 72057594037927935L | (long)in[184 + inPos] << 56 & 576460752303423487L;
         out[25 + outPos] = (long)in[184 + inPos] >> 3 & 31L | (long)in[185 + inPos] << 5 & 8191L | (long)in[186 + inPos] << 13 & 2097151L | (long)in[187 + inPos] << 21 & 536870911L | (long)in[188 + inPos] << 29 & 137438953471L | (long)in[189 + inPos] << 37 & 35184372088831L | (long)in[190 + inPos] << 45 & 9007199254740991L | (long)in[191 + inPos] << 53 & 576460752303423487L;
         out[26 + outPos] = (long)in[191 + inPos] >> 6 & 3L | (long)in[192 + inPos] << 2 & 1023L | (long)in[193 + inPos] << 10 & 262143L | (long)in[194 + inPos] << 18 & 67108863L | (long)in[195 + inPos] << 26 & 17179869183L | (long)in[196 + inPos] << 34 & 4398046511103L | (long)in[197 + inPos] << 42 & 1125899906842623L | (long)in[198 + inPos] << 50 & 288230376151711743L | (long)in[199 + inPos] << 58 & 576460752303423487L;
         out[27 + outPos] = (long)in[199 + inPos] >> 1 & 127L | (long)in[200 + inPos] << 7 & 32767L | (long)in[201 + inPos] << 15 & 8388607L | (long)in[202 + inPos] << 23 & 2147483647L | (long)in[203 + inPos] << 31 & 549755813887L | (long)in[204 + inPos] << 39 & 140737488355327L | (long)in[205 + inPos] << 47 & 36028797018963967L | (long)in[206 + inPos] << 55 & 576460752303423487L;
         out[28 + outPos] = (long)in[206 + inPos] >> 4 & 15L | (long)in[207 + inPos] << 4 & 4095L | (long)in[208 + inPos] << 12 & 1048575L | (long)in[209 + inPos] << 20 & 268435455L | (long)in[210 + inPos] << 28 & 68719476735L | (long)in[211 + inPos] << 36 & 17592186044415L | (long)in[212 + inPos] << 44 & 4503599627370495L | (long)in[213 + inPos] << 52 & 576460752303423487L;
         out[29 + outPos] = (long)in[213 + inPos] >> 7 & 1L | (long)in[214 + inPos] << 1 & 511L | (long)in[215 + inPos] << 9 & 131071L | (long)in[216 + inPos] << 17 & 33554431L | (long)in[217 + inPos] << 25 & 8589934591L | (long)in[218 + inPos] << 33 & 2199023255551L | (long)in[219 + inPos] << 41 & 562949953421311L | (long)in[220 + inPos] << 49 & 144115188075855871L | (long)in[221 + inPos] << 57 & 576460752303423487L;
         out[30 + outPos] = (long)in[221 + inPos] >> 2 & 63L | (long)in[222 + inPos] << 6 & 16383L | (long)in[223 + inPos] << 14 & 4194303L | (long)in[224 + inPos] << 22 & 1073741823L | (long)in[225 + inPos] << 30 & 274877906943L | (long)in[226 + inPos] << 38 & 70368744177663L | (long)in[227 + inPos] << 46 & 18014398509481983L | (long)in[228 + inPos] << 54 & 576460752303423487L;
         out[31 + outPos] = (long)in[228 + inPos] >> 5 & 7L | (long)in[229 + inPos] << 3 & 2047L | (long)in[230 + inPos] << 11 & 524287L | (long)in[231 + inPos] << 19 & 134217727L | (long)in[232 + inPos] << 27 & 34359738367L | (long)in[233 + inPos] << 35 & 8796093022207L | (long)in[234 + inPos] << 43 & 2251799813685247L | (long)in[235 + inPos] << 51 & 576460752303423487L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & 576460752303423487L;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 3 & 31L | (long)in.get(8 + inPos) << 5 & 8191L | (long)in.get(9 + inPos) << 13 & 2097151L | (long)in.get(10 + inPos) << 21 & 536870911L | (long)in.get(11 + inPos) << 29 & 137438953471L | (long)in.get(12 + inPos) << 37 & 35184372088831L | (long)in.get(13 + inPos) << 45 & 9007199254740991L | (long)in.get(14 + inPos) << 53 & 576460752303423487L;
         out[2 + outPos] = (long)in.get(14 + inPos) >> 6 & 3L | (long)in.get(15 + inPos) << 2 & 1023L | (long)in.get(16 + inPos) << 10 & 262143L | (long)in.get(17 + inPos) << 18 & 67108863L | (long)in.get(18 + inPos) << 26 & 17179869183L | (long)in.get(19 + inPos) << 34 & 4398046511103L | (long)in.get(20 + inPos) << 42 & 1125899906842623L | (long)in.get(21 + inPos) << 50 & 288230376151711743L | (long)in.get(22 + inPos) << 58 & 576460752303423487L;
         out[3 + outPos] = (long)in.get(22 + inPos) >> 1 & 127L | (long)in.get(23 + inPos) << 7 & 32767L | (long)in.get(24 + inPos) << 15 & 8388607L | (long)in.get(25 + inPos) << 23 & 2147483647L | (long)in.get(26 + inPos) << 31 & 549755813887L | (long)in.get(27 + inPos) << 39 & 140737488355327L | (long)in.get(28 + inPos) << 47 & 36028797018963967L | (long)in.get(29 + inPos) << 55 & 576460752303423487L;
         out[4 + outPos] = (long)in.get(29 + inPos) >> 4 & 15L | (long)in.get(30 + inPos) << 4 & 4095L | (long)in.get(31 + inPos) << 12 & 1048575L | (long)in.get(32 + inPos) << 20 & 268435455L | (long)in.get(33 + inPos) << 28 & 68719476735L | (long)in.get(34 + inPos) << 36 & 17592186044415L | (long)in.get(35 + inPos) << 44 & 4503599627370495L | (long)in.get(36 + inPos) << 52 & 576460752303423487L;
         out[5 + outPos] = (long)in.get(36 + inPos) >> 7 & 1L | (long)in.get(37 + inPos) << 1 & 511L | (long)in.get(38 + inPos) << 9 & 131071L | (long)in.get(39 + inPos) << 17 & 33554431L | (long)in.get(40 + inPos) << 25 & 8589934591L | (long)in.get(41 + inPos) << 33 & 2199023255551L | (long)in.get(42 + inPos) << 41 & 562949953421311L | (long)in.get(43 + inPos) << 49 & 144115188075855871L | (long)in.get(44 + inPos) << 57 & 576460752303423487L;
         out[6 + outPos] = (long)in.get(44 + inPos) >> 2 & 63L | (long)in.get(45 + inPos) << 6 & 16383L | (long)in.get(46 + inPos) << 14 & 4194303L | (long)in.get(47 + inPos) << 22 & 1073741823L | (long)in.get(48 + inPos) << 30 & 274877906943L | (long)in.get(49 + inPos) << 38 & 70368744177663L | (long)in.get(50 + inPos) << 46 & 18014398509481983L | (long)in.get(51 + inPos) << 54 & 576460752303423487L;
         out[7 + outPos] = (long)in.get(51 + inPos) >> 5 & 7L | (long)in.get(52 + inPos) << 3 & 2047L | (long)in.get(53 + inPos) << 11 & 524287L | (long)in.get(54 + inPos) << 19 & 134217727L | (long)in.get(55 + inPos) << 27 & 34359738367L | (long)in.get(56 + inPos) << 35 & 8796093022207L | (long)in.get(57 + inPos) << 43 & 2251799813685247L | (long)in.get(58 + inPos) << 51 & 576460752303423487L;
         out[8 + outPos] = (long)in.get(59 + inPos) & 255L | (long)in.get(60 + inPos) << 8 & 65535L | (long)in.get(61 + inPos) << 16 & 16777215L | (long)in.get(62 + inPos) << 24 & 4294967295L | (long)in.get(63 + inPos) << 32 & 1099511627775L | (long)in.get(64 + inPos) << 40 & 281474976710655L | (long)in.get(65 + inPos) << 48 & 72057594037927935L | (long)in.get(66 + inPos) << 56 & 576460752303423487L;
         out[9 + outPos] = (long)in.get(66 + inPos) >> 3 & 31L | (long)in.get(67 + inPos) << 5 & 8191L | (long)in.get(68 + inPos) << 13 & 2097151L | (long)in.get(69 + inPos) << 21 & 536870911L | (long)in.get(70 + inPos) << 29 & 137438953471L | (long)in.get(71 + inPos) << 37 & 35184372088831L | (long)in.get(72 + inPos) << 45 & 9007199254740991L | (long)in.get(73 + inPos) << 53 & 576460752303423487L;
         out[10 + outPos] = (long)in.get(73 + inPos) >> 6 & 3L | (long)in.get(74 + inPos) << 2 & 1023L | (long)in.get(75 + inPos) << 10 & 262143L | (long)in.get(76 + inPos) << 18 & 67108863L | (long)in.get(77 + inPos) << 26 & 17179869183L | (long)in.get(78 + inPos) << 34 & 4398046511103L | (long)in.get(79 + inPos) << 42 & 1125899906842623L | (long)in.get(80 + inPos) << 50 & 288230376151711743L | (long)in.get(81 + inPos) << 58 & 576460752303423487L;
         out[11 + outPos] = (long)in.get(81 + inPos) >> 1 & 127L | (long)in.get(82 + inPos) << 7 & 32767L | (long)in.get(83 + inPos) << 15 & 8388607L | (long)in.get(84 + inPos) << 23 & 2147483647L | (long)in.get(85 + inPos) << 31 & 549755813887L | (long)in.get(86 + inPos) << 39 & 140737488355327L | (long)in.get(87 + inPos) << 47 & 36028797018963967L | (long)in.get(88 + inPos) << 55 & 576460752303423487L;
         out[12 + outPos] = (long)in.get(88 + inPos) >> 4 & 15L | (long)in.get(89 + inPos) << 4 & 4095L | (long)in.get(90 + inPos) << 12 & 1048575L | (long)in.get(91 + inPos) << 20 & 268435455L | (long)in.get(92 + inPos) << 28 & 68719476735L | (long)in.get(93 + inPos) << 36 & 17592186044415L | (long)in.get(94 + inPos) << 44 & 4503599627370495L | (long)in.get(95 + inPos) << 52 & 576460752303423487L;
         out[13 + outPos] = (long)in.get(95 + inPos) >> 7 & 1L | (long)in.get(96 + inPos) << 1 & 511L | (long)in.get(97 + inPos) << 9 & 131071L | (long)in.get(98 + inPos) << 17 & 33554431L | (long)in.get(99 + inPos) << 25 & 8589934591L | (long)in.get(100 + inPos) << 33 & 2199023255551L | (long)in.get(101 + inPos) << 41 & 562949953421311L | (long)in.get(102 + inPos) << 49 & 144115188075855871L | (long)in.get(103 + inPos) << 57 & 576460752303423487L;
         out[14 + outPos] = (long)in.get(103 + inPos) >> 2 & 63L | (long)in.get(104 + inPos) << 6 & 16383L | (long)in.get(105 + inPos) << 14 & 4194303L | (long)in.get(106 + inPos) << 22 & 1073741823L | (long)in.get(107 + inPos) << 30 & 274877906943L | (long)in.get(108 + inPos) << 38 & 70368744177663L | (long)in.get(109 + inPos) << 46 & 18014398509481983L | (long)in.get(110 + inPos) << 54 & 576460752303423487L;
         out[15 + outPos] = (long)in.get(110 + inPos) >> 5 & 7L | (long)in.get(111 + inPos) << 3 & 2047L | (long)in.get(112 + inPos) << 11 & 524287L | (long)in.get(113 + inPos) << 19 & 134217727L | (long)in.get(114 + inPos) << 27 & 34359738367L | (long)in.get(115 + inPos) << 35 & 8796093022207L | (long)in.get(116 + inPos) << 43 & 2251799813685247L | (long)in.get(117 + inPos) << 51 & 576460752303423487L;
         out[16 + outPos] = (long)in.get(118 + inPos) & 255L | (long)in.get(119 + inPos) << 8 & 65535L | (long)in.get(120 + inPos) << 16 & 16777215L | (long)in.get(121 + inPos) << 24 & 4294967295L | (long)in.get(122 + inPos) << 32 & 1099511627775L | (long)in.get(123 + inPos) << 40 & 281474976710655L | (long)in.get(124 + inPos) << 48 & 72057594037927935L | (long)in.get(125 + inPos) << 56 & 576460752303423487L;
         out[17 + outPos] = (long)in.get(125 + inPos) >> 3 & 31L | (long)in.get(126 + inPos) << 5 & 8191L | (long)in.get(127 + inPos) << 13 & 2097151L | (long)in.get(128 + inPos) << 21 & 536870911L | (long)in.get(129 + inPos) << 29 & 137438953471L | (long)in.get(130 + inPos) << 37 & 35184372088831L | (long)in.get(131 + inPos) << 45 & 9007199254740991L | (long)in.get(132 + inPos) << 53 & 576460752303423487L;
         out[18 + outPos] = (long)in.get(132 + inPos) >> 6 & 3L | (long)in.get(133 + inPos) << 2 & 1023L | (long)in.get(134 + inPos) << 10 & 262143L | (long)in.get(135 + inPos) << 18 & 67108863L | (long)in.get(136 + inPos) << 26 & 17179869183L | (long)in.get(137 + inPos) << 34 & 4398046511103L | (long)in.get(138 + inPos) << 42 & 1125899906842623L | (long)in.get(139 + inPos) << 50 & 288230376151711743L | (long)in.get(140 + inPos) << 58 & 576460752303423487L;
         out[19 + outPos] = (long)in.get(140 + inPos) >> 1 & 127L | (long)in.get(141 + inPos) << 7 & 32767L | (long)in.get(142 + inPos) << 15 & 8388607L | (long)in.get(143 + inPos) << 23 & 2147483647L | (long)in.get(144 + inPos) << 31 & 549755813887L | (long)in.get(145 + inPos) << 39 & 140737488355327L | (long)in.get(146 + inPos) << 47 & 36028797018963967L | (long)in.get(147 + inPos) << 55 & 576460752303423487L;
         out[20 + outPos] = (long)in.get(147 + inPos) >> 4 & 15L | (long)in.get(148 + inPos) << 4 & 4095L | (long)in.get(149 + inPos) << 12 & 1048575L | (long)in.get(150 + inPos) << 20 & 268435455L | (long)in.get(151 + inPos) << 28 & 68719476735L | (long)in.get(152 + inPos) << 36 & 17592186044415L | (long)in.get(153 + inPos) << 44 & 4503599627370495L | (long)in.get(154 + inPos) << 52 & 576460752303423487L;
         out[21 + outPos] = (long)in.get(154 + inPos) >> 7 & 1L | (long)in.get(155 + inPos) << 1 & 511L | (long)in.get(156 + inPos) << 9 & 131071L | (long)in.get(157 + inPos) << 17 & 33554431L | (long)in.get(158 + inPos) << 25 & 8589934591L | (long)in.get(159 + inPos) << 33 & 2199023255551L | (long)in.get(160 + inPos) << 41 & 562949953421311L | (long)in.get(161 + inPos) << 49 & 144115188075855871L | (long)in.get(162 + inPos) << 57 & 576460752303423487L;
         out[22 + outPos] = (long)in.get(162 + inPos) >> 2 & 63L | (long)in.get(163 + inPos) << 6 & 16383L | (long)in.get(164 + inPos) << 14 & 4194303L | (long)in.get(165 + inPos) << 22 & 1073741823L | (long)in.get(166 + inPos) << 30 & 274877906943L | (long)in.get(167 + inPos) << 38 & 70368744177663L | (long)in.get(168 + inPos) << 46 & 18014398509481983L | (long)in.get(169 + inPos) << 54 & 576460752303423487L;
         out[23 + outPos] = (long)in.get(169 + inPos) >> 5 & 7L | (long)in.get(170 + inPos) << 3 & 2047L | (long)in.get(171 + inPos) << 11 & 524287L | (long)in.get(172 + inPos) << 19 & 134217727L | (long)in.get(173 + inPos) << 27 & 34359738367L | (long)in.get(174 + inPos) << 35 & 8796093022207L | (long)in.get(175 + inPos) << 43 & 2251799813685247L | (long)in.get(176 + inPos) << 51 & 576460752303423487L;
         out[24 + outPos] = (long)in.get(177 + inPos) & 255L | (long)in.get(178 + inPos) << 8 & 65535L | (long)in.get(179 + inPos) << 16 & 16777215L | (long)in.get(180 + inPos) << 24 & 4294967295L | (long)in.get(181 + inPos) << 32 & 1099511627775L | (long)in.get(182 + inPos) << 40 & 281474976710655L | (long)in.get(183 + inPos) << 48 & 72057594037927935L | (long)in.get(184 + inPos) << 56 & 576460752303423487L;
         out[25 + outPos] = (long)in.get(184 + inPos) >> 3 & 31L | (long)in.get(185 + inPos) << 5 & 8191L | (long)in.get(186 + inPos) << 13 & 2097151L | (long)in.get(187 + inPos) << 21 & 536870911L | (long)in.get(188 + inPos) << 29 & 137438953471L | (long)in.get(189 + inPos) << 37 & 35184372088831L | (long)in.get(190 + inPos) << 45 & 9007199254740991L | (long)in.get(191 + inPos) << 53 & 576460752303423487L;
         out[26 + outPos] = (long)in.get(191 + inPos) >> 6 & 3L | (long)in.get(192 + inPos) << 2 & 1023L | (long)in.get(193 + inPos) << 10 & 262143L | (long)in.get(194 + inPos) << 18 & 67108863L | (long)in.get(195 + inPos) << 26 & 17179869183L | (long)in.get(196 + inPos) << 34 & 4398046511103L | (long)in.get(197 + inPos) << 42 & 1125899906842623L | (long)in.get(198 + inPos) << 50 & 288230376151711743L | (long)in.get(199 + inPos) << 58 & 576460752303423487L;
         out[27 + outPos] = (long)in.get(199 + inPos) >> 1 & 127L | (long)in.get(200 + inPos) << 7 & 32767L | (long)in.get(201 + inPos) << 15 & 8388607L | (long)in.get(202 + inPos) << 23 & 2147483647L | (long)in.get(203 + inPos) << 31 & 549755813887L | (long)in.get(204 + inPos) << 39 & 140737488355327L | (long)in.get(205 + inPos) << 47 & 36028797018963967L | (long)in.get(206 + inPos) << 55 & 576460752303423487L;
         out[28 + outPos] = (long)in.get(206 + inPos) >> 4 & 15L | (long)in.get(207 + inPos) << 4 & 4095L | (long)in.get(208 + inPos) << 12 & 1048575L | (long)in.get(209 + inPos) << 20 & 268435455L | (long)in.get(210 + inPos) << 28 & 68719476735L | (long)in.get(211 + inPos) << 36 & 17592186044415L | (long)in.get(212 + inPos) << 44 & 4503599627370495L | (long)in.get(213 + inPos) << 52 & 576460752303423487L;
         out[29 + outPos] = (long)in.get(213 + inPos) >> 7 & 1L | (long)in.get(214 + inPos) << 1 & 511L | (long)in.get(215 + inPos) << 9 & 131071L | (long)in.get(216 + inPos) << 17 & 33554431L | (long)in.get(217 + inPos) << 25 & 8589934591L | (long)in.get(218 + inPos) << 33 & 2199023255551L | (long)in.get(219 + inPos) << 41 & 562949953421311L | (long)in.get(220 + inPos) << 49 & 144115188075855871L | (long)in.get(221 + inPos) << 57 & 576460752303423487L;
         out[30 + outPos] = (long)in.get(221 + inPos) >> 2 & 63L | (long)in.get(222 + inPos) << 6 & 16383L | (long)in.get(223 + inPos) << 14 & 4194303L | (long)in.get(224 + inPos) << 22 & 1073741823L | (long)in.get(225 + inPos) << 30 & 274877906943L | (long)in.get(226 + inPos) << 38 & 70368744177663L | (long)in.get(227 + inPos) << 46 & 18014398509481983L | (long)in.get(228 + inPos) << 54 & 576460752303423487L;
         out[31 + outPos] = (long)in.get(228 + inPos) >> 5 & 7L | (long)in.get(229 + inPos) << 3 & 2047L | (long)in.get(230 + inPos) << 11 & 524287L | (long)in.get(231 + inPos) << 19 & 134217727L | (long)in.get(232 + inPos) << 27 & 34359738367L | (long)in.get(233 + inPos) << 35 & 8796093022207L | (long)in.get(234 + inPos) << 43 & 2251799813685247L | (long)in.get(235 + inPos) << 51 & 576460752303423487L;
      }
   }

   private static final class Packer60 extends BytePackerForLong {
      private Packer60() {
         super(60);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 1152921504606846975L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & 1152921504606846975L) >>> 56 | (in[1 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[14 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[15 + outPos] = (byte)((int)(in[2 + inPos] & 1152921504606846975L & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[21 + outPos] = (byte)((int)((in[2 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[22 + outPos] = (byte)((int)(((in[2 + inPos] & 1152921504606846975L) >>> 56 | (in[3 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[29 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[30 + outPos] = (byte)((int)(in[4 + inPos] & 1152921504606846975L & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[36 + outPos] = (byte)((int)((in[4 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[37 + outPos] = (byte)((int)(((in[4 + inPos] & 1152921504606846975L) >>> 56 | (in[5 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[43 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[44 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[45 + outPos] = (byte)((int)(in[6 + inPos] & 1152921504606846975L & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[50 + outPos] = (byte)((int)((in[6 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[51 + outPos] = (byte)((int)((in[6 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[52 + outPos] = (byte)((int)(((in[6 + inPos] & 1152921504606846975L) >>> 56 | (in[7 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[58 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[59 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 52 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 1152921504606846975L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & 1152921504606846975L) >>> 56 | (in[1 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[14 + outPos] = (byte)((int)((in[1 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[15 + outPos] = (byte)((int)(in[2 + inPos] & 1152921504606846975L & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[21 + outPos] = (byte)((int)((in[2 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[22 + outPos] = (byte)((int)(((in[2 + inPos] & 1152921504606846975L) >>> 56 | (in[3 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[29 + outPos] = (byte)((int)((in[3 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[30 + outPos] = (byte)((int)(in[4 + inPos] & 1152921504606846975L & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[36 + outPos] = (byte)((int)((in[4 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[37 + outPos] = (byte)((int)(((in[4 + inPos] & 1152921504606846975L) >>> 56 | (in[5 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[38 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[43 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[44 + outPos] = (byte)((int)((in[5 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[45 + outPos] = (byte)((int)(in[6 + inPos] & 1152921504606846975L & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[50 + outPos] = (byte)((int)((in[6 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[51 + outPos] = (byte)((int)((in[6 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[52 + outPos] = (byte)((int)(((in[6 + inPos] & 1152921504606846975L) >>> 56 | (in[7 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[53 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[58 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[59 + outPos] = (byte)((int)((in[7 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[60 + outPos] = (byte)((int)(in[8 + inPos] & 1152921504606846975L & 255L));
         out[61 + outPos] = (byte)((int)((in[8 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[62 + outPos] = (byte)((int)((in[8 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[63 + outPos] = (byte)((int)((in[8 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[64 + outPos] = (byte)((int)((in[8 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[65 + outPos] = (byte)((int)((in[8 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[66 + outPos] = (byte)((int)((in[8 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[67 + outPos] = (byte)((int)(((in[8 + inPos] & 1152921504606846975L) >>> 56 | (in[9 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[68 + outPos] = (byte)((int)((in[9 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[69 + outPos] = (byte)((int)((in[9 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[70 + outPos] = (byte)((int)((in[9 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[71 + outPos] = (byte)((int)((in[9 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[72 + outPos] = (byte)((int)((in[9 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[73 + outPos] = (byte)((int)((in[9 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[74 + outPos] = (byte)((int)((in[9 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[75 + outPos] = (byte)((int)(in[10 + inPos] & 1152921504606846975L & 255L));
         out[76 + outPos] = (byte)((int)((in[10 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[77 + outPos] = (byte)((int)((in[10 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[78 + outPos] = (byte)((int)((in[10 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[79 + outPos] = (byte)((int)((in[10 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[80 + outPos] = (byte)((int)((in[10 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[81 + outPos] = (byte)((int)((in[10 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[82 + outPos] = (byte)((int)(((in[10 + inPos] & 1152921504606846975L) >>> 56 | (in[11 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[83 + outPos] = (byte)((int)((in[11 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[84 + outPos] = (byte)((int)((in[11 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[85 + outPos] = (byte)((int)((in[11 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[86 + outPos] = (byte)((int)((in[11 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[87 + outPos] = (byte)((int)((in[11 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[88 + outPos] = (byte)((int)((in[11 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[89 + outPos] = (byte)((int)((in[11 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[90 + outPos] = (byte)((int)(in[12 + inPos] & 1152921504606846975L & 255L));
         out[91 + outPos] = (byte)((int)((in[12 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[92 + outPos] = (byte)((int)((in[12 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[93 + outPos] = (byte)((int)((in[12 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[94 + outPos] = (byte)((int)((in[12 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[95 + outPos] = (byte)((int)((in[12 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[96 + outPos] = (byte)((int)((in[12 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[97 + outPos] = (byte)((int)(((in[12 + inPos] & 1152921504606846975L) >>> 56 | (in[13 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[98 + outPos] = (byte)((int)((in[13 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[99 + outPos] = (byte)((int)((in[13 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[100 + outPos] = (byte)((int)((in[13 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[101 + outPos] = (byte)((int)((in[13 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[102 + outPos] = (byte)((int)((in[13 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[103 + outPos] = (byte)((int)((in[13 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[104 + outPos] = (byte)((int)((in[13 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[105 + outPos] = (byte)((int)(in[14 + inPos] & 1152921504606846975L & 255L));
         out[106 + outPos] = (byte)((int)((in[14 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[107 + outPos] = (byte)((int)((in[14 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[108 + outPos] = (byte)((int)((in[14 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[109 + outPos] = (byte)((int)((in[14 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[110 + outPos] = (byte)((int)((in[14 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[111 + outPos] = (byte)((int)((in[14 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[112 + outPos] = (byte)((int)(((in[14 + inPos] & 1152921504606846975L) >>> 56 | (in[15 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[113 + outPos] = (byte)((int)((in[15 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[114 + outPos] = (byte)((int)((in[15 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[115 + outPos] = (byte)((int)((in[15 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[116 + outPos] = (byte)((int)((in[15 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[117 + outPos] = (byte)((int)((in[15 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[118 + outPos] = (byte)((int)((in[15 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[119 + outPos] = (byte)((int)((in[15 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[120 + outPos] = (byte)((int)(in[16 + inPos] & 1152921504606846975L & 255L));
         out[121 + outPos] = (byte)((int)((in[16 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[122 + outPos] = (byte)((int)((in[16 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[123 + outPos] = (byte)((int)((in[16 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[124 + outPos] = (byte)((int)((in[16 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[125 + outPos] = (byte)((int)((in[16 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[126 + outPos] = (byte)((int)((in[16 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[127 + outPos] = (byte)((int)(((in[16 + inPos] & 1152921504606846975L) >>> 56 | (in[17 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[128 + outPos] = (byte)((int)((in[17 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[129 + outPos] = (byte)((int)((in[17 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[130 + outPos] = (byte)((int)((in[17 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[131 + outPos] = (byte)((int)((in[17 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[132 + outPos] = (byte)((int)((in[17 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[133 + outPos] = (byte)((int)((in[17 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[134 + outPos] = (byte)((int)((in[17 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[135 + outPos] = (byte)((int)(in[18 + inPos] & 1152921504606846975L & 255L));
         out[136 + outPos] = (byte)((int)((in[18 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[137 + outPos] = (byte)((int)((in[18 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[138 + outPos] = (byte)((int)((in[18 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[139 + outPos] = (byte)((int)((in[18 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[140 + outPos] = (byte)((int)((in[18 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[141 + outPos] = (byte)((int)((in[18 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[142 + outPos] = (byte)((int)(((in[18 + inPos] & 1152921504606846975L) >>> 56 | (in[19 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[143 + outPos] = (byte)((int)((in[19 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[144 + outPos] = (byte)((int)((in[19 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[145 + outPos] = (byte)((int)((in[19 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[146 + outPos] = (byte)((int)((in[19 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[147 + outPos] = (byte)((int)((in[19 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[148 + outPos] = (byte)((int)((in[19 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[149 + outPos] = (byte)((int)((in[19 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[150 + outPos] = (byte)((int)(in[20 + inPos] & 1152921504606846975L & 255L));
         out[151 + outPos] = (byte)((int)((in[20 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[152 + outPos] = (byte)((int)((in[20 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[153 + outPos] = (byte)((int)((in[20 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[154 + outPos] = (byte)((int)((in[20 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[155 + outPos] = (byte)((int)((in[20 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[156 + outPos] = (byte)((int)((in[20 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[157 + outPos] = (byte)((int)(((in[20 + inPos] & 1152921504606846975L) >>> 56 | (in[21 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[158 + outPos] = (byte)((int)((in[21 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[159 + outPos] = (byte)((int)((in[21 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[160 + outPos] = (byte)((int)((in[21 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[161 + outPos] = (byte)((int)((in[21 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[162 + outPos] = (byte)((int)((in[21 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[163 + outPos] = (byte)((int)((in[21 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[164 + outPos] = (byte)((int)((in[21 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[165 + outPos] = (byte)((int)(in[22 + inPos] & 1152921504606846975L & 255L));
         out[166 + outPos] = (byte)((int)((in[22 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[167 + outPos] = (byte)((int)((in[22 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[168 + outPos] = (byte)((int)((in[22 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[169 + outPos] = (byte)((int)((in[22 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[170 + outPos] = (byte)((int)((in[22 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[171 + outPos] = (byte)((int)((in[22 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[172 + outPos] = (byte)((int)(((in[22 + inPos] & 1152921504606846975L) >>> 56 | (in[23 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[173 + outPos] = (byte)((int)((in[23 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[174 + outPos] = (byte)((int)((in[23 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[175 + outPos] = (byte)((int)((in[23 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[176 + outPos] = (byte)((int)((in[23 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[177 + outPos] = (byte)((int)((in[23 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[178 + outPos] = (byte)((int)((in[23 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[179 + outPos] = (byte)((int)((in[23 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[180 + outPos] = (byte)((int)(in[24 + inPos] & 1152921504606846975L & 255L));
         out[181 + outPos] = (byte)((int)((in[24 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[182 + outPos] = (byte)((int)((in[24 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[183 + outPos] = (byte)((int)((in[24 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[184 + outPos] = (byte)((int)((in[24 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[185 + outPos] = (byte)((int)((in[24 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[186 + outPos] = (byte)((int)((in[24 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[187 + outPos] = (byte)((int)(((in[24 + inPos] & 1152921504606846975L) >>> 56 | (in[25 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[188 + outPos] = (byte)((int)((in[25 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[189 + outPos] = (byte)((int)((in[25 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[190 + outPos] = (byte)((int)((in[25 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[191 + outPos] = (byte)((int)((in[25 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[192 + outPos] = (byte)((int)((in[25 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[193 + outPos] = (byte)((int)((in[25 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[194 + outPos] = (byte)((int)((in[25 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[195 + outPos] = (byte)((int)(in[26 + inPos] & 1152921504606846975L & 255L));
         out[196 + outPos] = (byte)((int)((in[26 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[197 + outPos] = (byte)((int)((in[26 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[198 + outPos] = (byte)((int)((in[26 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[199 + outPos] = (byte)((int)((in[26 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[200 + outPos] = (byte)((int)((in[26 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[201 + outPos] = (byte)((int)((in[26 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[202 + outPos] = (byte)((int)(((in[26 + inPos] & 1152921504606846975L) >>> 56 | (in[27 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[203 + outPos] = (byte)((int)((in[27 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[204 + outPos] = (byte)((int)((in[27 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[205 + outPos] = (byte)((int)((in[27 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[206 + outPos] = (byte)((int)((in[27 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[207 + outPos] = (byte)((int)((in[27 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[208 + outPos] = (byte)((int)((in[27 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[209 + outPos] = (byte)((int)((in[27 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[210 + outPos] = (byte)((int)(in[28 + inPos] & 1152921504606846975L & 255L));
         out[211 + outPos] = (byte)((int)((in[28 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[212 + outPos] = (byte)((int)((in[28 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[213 + outPos] = (byte)((int)((in[28 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[214 + outPos] = (byte)((int)((in[28 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[215 + outPos] = (byte)((int)((in[28 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[216 + outPos] = (byte)((int)((in[28 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[217 + outPos] = (byte)((int)(((in[28 + inPos] & 1152921504606846975L) >>> 56 | (in[29 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[218 + outPos] = (byte)((int)((in[29 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[219 + outPos] = (byte)((int)((in[29 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[220 + outPos] = (byte)((int)((in[29 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[221 + outPos] = (byte)((int)((in[29 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[222 + outPos] = (byte)((int)((in[29 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[223 + outPos] = (byte)((int)((in[29 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[224 + outPos] = (byte)((int)((in[29 + inPos] & 1152921504606846975L) >>> 52 & 255L));
         out[225 + outPos] = (byte)((int)(in[30 + inPos] & 1152921504606846975L & 255L));
         out[226 + outPos] = (byte)((int)((in[30 + inPos] & 1152921504606846975L) >>> 8 & 255L));
         out[227 + outPos] = (byte)((int)((in[30 + inPos] & 1152921504606846975L) >>> 16 & 255L));
         out[228 + outPos] = (byte)((int)((in[30 + inPos] & 1152921504606846975L) >>> 24 & 255L));
         out[229 + outPos] = (byte)((int)((in[30 + inPos] & 1152921504606846975L) >>> 32 & 255L));
         out[230 + outPos] = (byte)((int)((in[30 + inPos] & 1152921504606846975L) >>> 40 & 255L));
         out[231 + outPos] = (byte)((int)((in[30 + inPos] & 1152921504606846975L) >>> 48 & 255L));
         out[232 + outPos] = (byte)((int)(((in[30 + inPos] & 1152921504606846975L) >>> 56 | (in[31 + inPos] & 1152921504606846975L) << 4) & 255L));
         out[233 + outPos] = (byte)((int)((in[31 + inPos] & 1152921504606846975L) >>> 4 & 255L));
         out[234 + outPos] = (byte)((int)((in[31 + inPos] & 1152921504606846975L) >>> 12 & 255L));
         out[235 + outPos] = (byte)((int)((in[31 + inPos] & 1152921504606846975L) >>> 20 & 255L));
         out[236 + outPos] = (byte)((int)((in[31 + inPos] & 1152921504606846975L) >>> 28 & 255L));
         out[237 + outPos] = (byte)((int)((in[31 + inPos] & 1152921504606846975L) >>> 36 & 255L));
         out[238 + outPos] = (byte)((int)((in[31 + inPos] & 1152921504606846975L) >>> 44 & 255L));
         out[239 + outPos] = (byte)((int)((in[31 + inPos] & 1152921504606846975L) >>> 52 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & 1152921504606846975L;
         out[1 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 4095L | (long)in[9 + inPos] << 12 & 1048575L | (long)in[10 + inPos] << 20 & 268435455L | (long)in[11 + inPos] << 28 & 68719476735L | (long)in[12 + inPos] << 36 & 17592186044415L | (long)in[13 + inPos] << 44 & 4503599627370495L | (long)in[14 + inPos] << 52 & 1152921504606846975L;
         out[2 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 65535L | (long)in[17 + inPos] << 16 & 16777215L | (long)in[18 + inPos] << 24 & 4294967295L | (long)in[19 + inPos] << 32 & 1099511627775L | (long)in[20 + inPos] << 40 & 281474976710655L | (long)in[21 + inPos] << 48 & 72057594037927935L | (long)in[22 + inPos] << 56 & 1152921504606846975L;
         out[3 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 4095L | (long)in[24 + inPos] << 12 & 1048575L | (long)in[25 + inPos] << 20 & 268435455L | (long)in[26 + inPos] << 28 & 68719476735L | (long)in[27 + inPos] << 36 & 17592186044415L | (long)in[28 + inPos] << 44 & 4503599627370495L | (long)in[29 + inPos] << 52 & 1152921504606846975L;
         out[4 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 65535L | (long)in[32 + inPos] << 16 & 16777215L | (long)in[33 + inPos] << 24 & 4294967295L | (long)in[34 + inPos] << 32 & 1099511627775L | (long)in[35 + inPos] << 40 & 281474976710655L | (long)in[36 + inPos] << 48 & 72057594037927935L | (long)in[37 + inPos] << 56 & 1152921504606846975L;
         out[5 + outPos] = (long)in[37 + inPos] >> 4 & 15L | (long)in[38 + inPos] << 4 & 4095L | (long)in[39 + inPos] << 12 & 1048575L | (long)in[40 + inPos] << 20 & 268435455L | (long)in[41 + inPos] << 28 & 68719476735L | (long)in[42 + inPos] << 36 & 17592186044415L | (long)in[43 + inPos] << 44 & 4503599627370495L | (long)in[44 + inPos] << 52 & 1152921504606846975L;
         out[6 + outPos] = (long)in[45 + inPos] & 255L | (long)in[46 + inPos] << 8 & 65535L | (long)in[47 + inPos] << 16 & 16777215L | (long)in[48 + inPos] << 24 & 4294967295L | (long)in[49 + inPos] << 32 & 1099511627775L | (long)in[50 + inPos] << 40 & 281474976710655L | (long)in[51 + inPos] << 48 & 72057594037927935L | (long)in[52 + inPos] << 56 & 1152921504606846975L;
         out[7 + outPos] = (long)in[52 + inPos] >> 4 & 15L | (long)in[53 + inPos] << 4 & 4095L | (long)in[54 + inPos] << 12 & 1048575L | (long)in[55 + inPos] << 20 & 268435455L | (long)in[56 + inPos] << 28 & 68719476735L | (long)in[57 + inPos] << 36 & 17592186044415L | (long)in[58 + inPos] << 44 & 4503599627370495L | (long)in[59 + inPos] << 52 & 1152921504606846975L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & 1152921504606846975L;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 4095L | (long)in.get(9 + inPos) << 12 & 1048575L | (long)in.get(10 + inPos) << 20 & 268435455L | (long)in.get(11 + inPos) << 28 & 68719476735L | (long)in.get(12 + inPos) << 36 & 17592186044415L | (long)in.get(13 + inPos) << 44 & 4503599627370495L | (long)in.get(14 + inPos) << 52 & 1152921504606846975L;
         out[2 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 65535L | (long)in.get(17 + inPos) << 16 & 16777215L | (long)in.get(18 + inPos) << 24 & 4294967295L | (long)in.get(19 + inPos) << 32 & 1099511627775L | (long)in.get(20 + inPos) << 40 & 281474976710655L | (long)in.get(21 + inPos) << 48 & 72057594037927935L | (long)in.get(22 + inPos) << 56 & 1152921504606846975L;
         out[3 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 4095L | (long)in.get(24 + inPos) << 12 & 1048575L | (long)in.get(25 + inPos) << 20 & 268435455L | (long)in.get(26 + inPos) << 28 & 68719476735L | (long)in.get(27 + inPos) << 36 & 17592186044415L | (long)in.get(28 + inPos) << 44 & 4503599627370495L | (long)in.get(29 + inPos) << 52 & 1152921504606846975L;
         out[4 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 65535L | (long)in.get(32 + inPos) << 16 & 16777215L | (long)in.get(33 + inPos) << 24 & 4294967295L | (long)in.get(34 + inPos) << 32 & 1099511627775L | (long)in.get(35 + inPos) << 40 & 281474976710655L | (long)in.get(36 + inPos) << 48 & 72057594037927935L | (long)in.get(37 + inPos) << 56 & 1152921504606846975L;
         out[5 + outPos] = (long)in.get(37 + inPos) >> 4 & 15L | (long)in.get(38 + inPos) << 4 & 4095L | (long)in.get(39 + inPos) << 12 & 1048575L | (long)in.get(40 + inPos) << 20 & 268435455L | (long)in.get(41 + inPos) << 28 & 68719476735L | (long)in.get(42 + inPos) << 36 & 17592186044415L | (long)in.get(43 + inPos) << 44 & 4503599627370495L | (long)in.get(44 + inPos) << 52 & 1152921504606846975L;
         out[6 + outPos] = (long)in.get(45 + inPos) & 255L | (long)in.get(46 + inPos) << 8 & 65535L | (long)in.get(47 + inPos) << 16 & 16777215L | (long)in.get(48 + inPos) << 24 & 4294967295L | (long)in.get(49 + inPos) << 32 & 1099511627775L | (long)in.get(50 + inPos) << 40 & 281474976710655L | (long)in.get(51 + inPos) << 48 & 72057594037927935L | (long)in.get(52 + inPos) << 56 & 1152921504606846975L;
         out[7 + outPos] = (long)in.get(52 + inPos) >> 4 & 15L | (long)in.get(53 + inPos) << 4 & 4095L | (long)in.get(54 + inPos) << 12 & 1048575L | (long)in.get(55 + inPos) << 20 & 268435455L | (long)in.get(56 + inPos) << 28 & 68719476735L | (long)in.get(57 + inPos) << 36 & 17592186044415L | (long)in.get(58 + inPos) << 44 & 4503599627370495L | (long)in.get(59 + inPos) << 52 & 1152921504606846975L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & 1152921504606846975L;
         out[1 + outPos] = (long)in[7 + inPos] >> 4 & 15L | (long)in[8 + inPos] << 4 & 4095L | (long)in[9 + inPos] << 12 & 1048575L | (long)in[10 + inPos] << 20 & 268435455L | (long)in[11 + inPos] << 28 & 68719476735L | (long)in[12 + inPos] << 36 & 17592186044415L | (long)in[13 + inPos] << 44 & 4503599627370495L | (long)in[14 + inPos] << 52 & 1152921504606846975L;
         out[2 + outPos] = (long)in[15 + inPos] & 255L | (long)in[16 + inPos] << 8 & 65535L | (long)in[17 + inPos] << 16 & 16777215L | (long)in[18 + inPos] << 24 & 4294967295L | (long)in[19 + inPos] << 32 & 1099511627775L | (long)in[20 + inPos] << 40 & 281474976710655L | (long)in[21 + inPos] << 48 & 72057594037927935L | (long)in[22 + inPos] << 56 & 1152921504606846975L;
         out[3 + outPos] = (long)in[22 + inPos] >> 4 & 15L | (long)in[23 + inPos] << 4 & 4095L | (long)in[24 + inPos] << 12 & 1048575L | (long)in[25 + inPos] << 20 & 268435455L | (long)in[26 + inPos] << 28 & 68719476735L | (long)in[27 + inPos] << 36 & 17592186044415L | (long)in[28 + inPos] << 44 & 4503599627370495L | (long)in[29 + inPos] << 52 & 1152921504606846975L;
         out[4 + outPos] = (long)in[30 + inPos] & 255L | (long)in[31 + inPos] << 8 & 65535L | (long)in[32 + inPos] << 16 & 16777215L | (long)in[33 + inPos] << 24 & 4294967295L | (long)in[34 + inPos] << 32 & 1099511627775L | (long)in[35 + inPos] << 40 & 281474976710655L | (long)in[36 + inPos] << 48 & 72057594037927935L | (long)in[37 + inPos] << 56 & 1152921504606846975L;
         out[5 + outPos] = (long)in[37 + inPos] >> 4 & 15L | (long)in[38 + inPos] << 4 & 4095L | (long)in[39 + inPos] << 12 & 1048575L | (long)in[40 + inPos] << 20 & 268435455L | (long)in[41 + inPos] << 28 & 68719476735L | (long)in[42 + inPos] << 36 & 17592186044415L | (long)in[43 + inPos] << 44 & 4503599627370495L | (long)in[44 + inPos] << 52 & 1152921504606846975L;
         out[6 + outPos] = (long)in[45 + inPos] & 255L | (long)in[46 + inPos] << 8 & 65535L | (long)in[47 + inPos] << 16 & 16777215L | (long)in[48 + inPos] << 24 & 4294967295L | (long)in[49 + inPos] << 32 & 1099511627775L | (long)in[50 + inPos] << 40 & 281474976710655L | (long)in[51 + inPos] << 48 & 72057594037927935L | (long)in[52 + inPos] << 56 & 1152921504606846975L;
         out[7 + outPos] = (long)in[52 + inPos] >> 4 & 15L | (long)in[53 + inPos] << 4 & 4095L | (long)in[54 + inPos] << 12 & 1048575L | (long)in[55 + inPos] << 20 & 268435455L | (long)in[56 + inPos] << 28 & 68719476735L | (long)in[57 + inPos] << 36 & 17592186044415L | (long)in[58 + inPos] << 44 & 4503599627370495L | (long)in[59 + inPos] << 52 & 1152921504606846975L;
         out[8 + outPos] = (long)in[60 + inPos] & 255L | (long)in[61 + inPos] << 8 & 65535L | (long)in[62 + inPos] << 16 & 16777215L | (long)in[63 + inPos] << 24 & 4294967295L | (long)in[64 + inPos] << 32 & 1099511627775L | (long)in[65 + inPos] << 40 & 281474976710655L | (long)in[66 + inPos] << 48 & 72057594037927935L | (long)in[67 + inPos] << 56 & 1152921504606846975L;
         out[9 + outPos] = (long)in[67 + inPos] >> 4 & 15L | (long)in[68 + inPos] << 4 & 4095L | (long)in[69 + inPos] << 12 & 1048575L | (long)in[70 + inPos] << 20 & 268435455L | (long)in[71 + inPos] << 28 & 68719476735L | (long)in[72 + inPos] << 36 & 17592186044415L | (long)in[73 + inPos] << 44 & 4503599627370495L | (long)in[74 + inPos] << 52 & 1152921504606846975L;
         out[10 + outPos] = (long)in[75 + inPos] & 255L | (long)in[76 + inPos] << 8 & 65535L | (long)in[77 + inPos] << 16 & 16777215L | (long)in[78 + inPos] << 24 & 4294967295L | (long)in[79 + inPos] << 32 & 1099511627775L | (long)in[80 + inPos] << 40 & 281474976710655L | (long)in[81 + inPos] << 48 & 72057594037927935L | (long)in[82 + inPos] << 56 & 1152921504606846975L;
         out[11 + outPos] = (long)in[82 + inPos] >> 4 & 15L | (long)in[83 + inPos] << 4 & 4095L | (long)in[84 + inPos] << 12 & 1048575L | (long)in[85 + inPos] << 20 & 268435455L | (long)in[86 + inPos] << 28 & 68719476735L | (long)in[87 + inPos] << 36 & 17592186044415L | (long)in[88 + inPos] << 44 & 4503599627370495L | (long)in[89 + inPos] << 52 & 1152921504606846975L;
         out[12 + outPos] = (long)in[90 + inPos] & 255L | (long)in[91 + inPos] << 8 & 65535L | (long)in[92 + inPos] << 16 & 16777215L | (long)in[93 + inPos] << 24 & 4294967295L | (long)in[94 + inPos] << 32 & 1099511627775L | (long)in[95 + inPos] << 40 & 281474976710655L | (long)in[96 + inPos] << 48 & 72057594037927935L | (long)in[97 + inPos] << 56 & 1152921504606846975L;
         out[13 + outPos] = (long)in[97 + inPos] >> 4 & 15L | (long)in[98 + inPos] << 4 & 4095L | (long)in[99 + inPos] << 12 & 1048575L | (long)in[100 + inPos] << 20 & 268435455L | (long)in[101 + inPos] << 28 & 68719476735L | (long)in[102 + inPos] << 36 & 17592186044415L | (long)in[103 + inPos] << 44 & 4503599627370495L | (long)in[104 + inPos] << 52 & 1152921504606846975L;
         out[14 + outPos] = (long)in[105 + inPos] & 255L | (long)in[106 + inPos] << 8 & 65535L | (long)in[107 + inPos] << 16 & 16777215L | (long)in[108 + inPos] << 24 & 4294967295L | (long)in[109 + inPos] << 32 & 1099511627775L | (long)in[110 + inPos] << 40 & 281474976710655L | (long)in[111 + inPos] << 48 & 72057594037927935L | (long)in[112 + inPos] << 56 & 1152921504606846975L;
         out[15 + outPos] = (long)in[112 + inPos] >> 4 & 15L | (long)in[113 + inPos] << 4 & 4095L | (long)in[114 + inPos] << 12 & 1048575L | (long)in[115 + inPos] << 20 & 268435455L | (long)in[116 + inPos] << 28 & 68719476735L | (long)in[117 + inPos] << 36 & 17592186044415L | (long)in[118 + inPos] << 44 & 4503599627370495L | (long)in[119 + inPos] << 52 & 1152921504606846975L;
         out[16 + outPos] = (long)in[120 + inPos] & 255L | (long)in[121 + inPos] << 8 & 65535L | (long)in[122 + inPos] << 16 & 16777215L | (long)in[123 + inPos] << 24 & 4294967295L | (long)in[124 + inPos] << 32 & 1099511627775L | (long)in[125 + inPos] << 40 & 281474976710655L | (long)in[126 + inPos] << 48 & 72057594037927935L | (long)in[127 + inPos] << 56 & 1152921504606846975L;
         out[17 + outPos] = (long)in[127 + inPos] >> 4 & 15L | (long)in[128 + inPos] << 4 & 4095L | (long)in[129 + inPos] << 12 & 1048575L | (long)in[130 + inPos] << 20 & 268435455L | (long)in[131 + inPos] << 28 & 68719476735L | (long)in[132 + inPos] << 36 & 17592186044415L | (long)in[133 + inPos] << 44 & 4503599627370495L | (long)in[134 + inPos] << 52 & 1152921504606846975L;
         out[18 + outPos] = (long)in[135 + inPos] & 255L | (long)in[136 + inPos] << 8 & 65535L | (long)in[137 + inPos] << 16 & 16777215L | (long)in[138 + inPos] << 24 & 4294967295L | (long)in[139 + inPos] << 32 & 1099511627775L | (long)in[140 + inPos] << 40 & 281474976710655L | (long)in[141 + inPos] << 48 & 72057594037927935L | (long)in[142 + inPos] << 56 & 1152921504606846975L;
         out[19 + outPos] = (long)in[142 + inPos] >> 4 & 15L | (long)in[143 + inPos] << 4 & 4095L | (long)in[144 + inPos] << 12 & 1048575L | (long)in[145 + inPos] << 20 & 268435455L | (long)in[146 + inPos] << 28 & 68719476735L | (long)in[147 + inPos] << 36 & 17592186044415L | (long)in[148 + inPos] << 44 & 4503599627370495L | (long)in[149 + inPos] << 52 & 1152921504606846975L;
         out[20 + outPos] = (long)in[150 + inPos] & 255L | (long)in[151 + inPos] << 8 & 65535L | (long)in[152 + inPos] << 16 & 16777215L | (long)in[153 + inPos] << 24 & 4294967295L | (long)in[154 + inPos] << 32 & 1099511627775L | (long)in[155 + inPos] << 40 & 281474976710655L | (long)in[156 + inPos] << 48 & 72057594037927935L | (long)in[157 + inPos] << 56 & 1152921504606846975L;
         out[21 + outPos] = (long)in[157 + inPos] >> 4 & 15L | (long)in[158 + inPos] << 4 & 4095L | (long)in[159 + inPos] << 12 & 1048575L | (long)in[160 + inPos] << 20 & 268435455L | (long)in[161 + inPos] << 28 & 68719476735L | (long)in[162 + inPos] << 36 & 17592186044415L | (long)in[163 + inPos] << 44 & 4503599627370495L | (long)in[164 + inPos] << 52 & 1152921504606846975L;
         out[22 + outPos] = (long)in[165 + inPos] & 255L | (long)in[166 + inPos] << 8 & 65535L | (long)in[167 + inPos] << 16 & 16777215L | (long)in[168 + inPos] << 24 & 4294967295L | (long)in[169 + inPos] << 32 & 1099511627775L | (long)in[170 + inPos] << 40 & 281474976710655L | (long)in[171 + inPos] << 48 & 72057594037927935L | (long)in[172 + inPos] << 56 & 1152921504606846975L;
         out[23 + outPos] = (long)in[172 + inPos] >> 4 & 15L | (long)in[173 + inPos] << 4 & 4095L | (long)in[174 + inPos] << 12 & 1048575L | (long)in[175 + inPos] << 20 & 268435455L | (long)in[176 + inPos] << 28 & 68719476735L | (long)in[177 + inPos] << 36 & 17592186044415L | (long)in[178 + inPos] << 44 & 4503599627370495L | (long)in[179 + inPos] << 52 & 1152921504606846975L;
         out[24 + outPos] = (long)in[180 + inPos] & 255L | (long)in[181 + inPos] << 8 & 65535L | (long)in[182 + inPos] << 16 & 16777215L | (long)in[183 + inPos] << 24 & 4294967295L | (long)in[184 + inPos] << 32 & 1099511627775L | (long)in[185 + inPos] << 40 & 281474976710655L | (long)in[186 + inPos] << 48 & 72057594037927935L | (long)in[187 + inPos] << 56 & 1152921504606846975L;
         out[25 + outPos] = (long)in[187 + inPos] >> 4 & 15L | (long)in[188 + inPos] << 4 & 4095L | (long)in[189 + inPos] << 12 & 1048575L | (long)in[190 + inPos] << 20 & 268435455L | (long)in[191 + inPos] << 28 & 68719476735L | (long)in[192 + inPos] << 36 & 17592186044415L | (long)in[193 + inPos] << 44 & 4503599627370495L | (long)in[194 + inPos] << 52 & 1152921504606846975L;
         out[26 + outPos] = (long)in[195 + inPos] & 255L | (long)in[196 + inPos] << 8 & 65535L | (long)in[197 + inPos] << 16 & 16777215L | (long)in[198 + inPos] << 24 & 4294967295L | (long)in[199 + inPos] << 32 & 1099511627775L | (long)in[200 + inPos] << 40 & 281474976710655L | (long)in[201 + inPos] << 48 & 72057594037927935L | (long)in[202 + inPos] << 56 & 1152921504606846975L;
         out[27 + outPos] = (long)in[202 + inPos] >> 4 & 15L | (long)in[203 + inPos] << 4 & 4095L | (long)in[204 + inPos] << 12 & 1048575L | (long)in[205 + inPos] << 20 & 268435455L | (long)in[206 + inPos] << 28 & 68719476735L | (long)in[207 + inPos] << 36 & 17592186044415L | (long)in[208 + inPos] << 44 & 4503599627370495L | (long)in[209 + inPos] << 52 & 1152921504606846975L;
         out[28 + outPos] = (long)in[210 + inPos] & 255L | (long)in[211 + inPos] << 8 & 65535L | (long)in[212 + inPos] << 16 & 16777215L | (long)in[213 + inPos] << 24 & 4294967295L | (long)in[214 + inPos] << 32 & 1099511627775L | (long)in[215 + inPos] << 40 & 281474976710655L | (long)in[216 + inPos] << 48 & 72057594037927935L | (long)in[217 + inPos] << 56 & 1152921504606846975L;
         out[29 + outPos] = (long)in[217 + inPos] >> 4 & 15L | (long)in[218 + inPos] << 4 & 4095L | (long)in[219 + inPos] << 12 & 1048575L | (long)in[220 + inPos] << 20 & 268435455L | (long)in[221 + inPos] << 28 & 68719476735L | (long)in[222 + inPos] << 36 & 17592186044415L | (long)in[223 + inPos] << 44 & 4503599627370495L | (long)in[224 + inPos] << 52 & 1152921504606846975L;
         out[30 + outPos] = (long)in[225 + inPos] & 255L | (long)in[226 + inPos] << 8 & 65535L | (long)in[227 + inPos] << 16 & 16777215L | (long)in[228 + inPos] << 24 & 4294967295L | (long)in[229 + inPos] << 32 & 1099511627775L | (long)in[230 + inPos] << 40 & 281474976710655L | (long)in[231 + inPos] << 48 & 72057594037927935L | (long)in[232 + inPos] << 56 & 1152921504606846975L;
         out[31 + outPos] = (long)in[232 + inPos] >> 4 & 15L | (long)in[233 + inPos] << 4 & 4095L | (long)in[234 + inPos] << 12 & 1048575L | (long)in[235 + inPos] << 20 & 268435455L | (long)in[236 + inPos] << 28 & 68719476735L | (long)in[237 + inPos] << 36 & 17592186044415L | (long)in[238 + inPos] << 44 & 4503599627370495L | (long)in[239 + inPos] << 52 & 1152921504606846975L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & 1152921504606846975L;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 4 & 15L | (long)in.get(8 + inPos) << 4 & 4095L | (long)in.get(9 + inPos) << 12 & 1048575L | (long)in.get(10 + inPos) << 20 & 268435455L | (long)in.get(11 + inPos) << 28 & 68719476735L | (long)in.get(12 + inPos) << 36 & 17592186044415L | (long)in.get(13 + inPos) << 44 & 4503599627370495L | (long)in.get(14 + inPos) << 52 & 1152921504606846975L;
         out[2 + outPos] = (long)in.get(15 + inPos) & 255L | (long)in.get(16 + inPos) << 8 & 65535L | (long)in.get(17 + inPos) << 16 & 16777215L | (long)in.get(18 + inPos) << 24 & 4294967295L | (long)in.get(19 + inPos) << 32 & 1099511627775L | (long)in.get(20 + inPos) << 40 & 281474976710655L | (long)in.get(21 + inPos) << 48 & 72057594037927935L | (long)in.get(22 + inPos) << 56 & 1152921504606846975L;
         out[3 + outPos] = (long)in.get(22 + inPos) >> 4 & 15L | (long)in.get(23 + inPos) << 4 & 4095L | (long)in.get(24 + inPos) << 12 & 1048575L | (long)in.get(25 + inPos) << 20 & 268435455L | (long)in.get(26 + inPos) << 28 & 68719476735L | (long)in.get(27 + inPos) << 36 & 17592186044415L | (long)in.get(28 + inPos) << 44 & 4503599627370495L | (long)in.get(29 + inPos) << 52 & 1152921504606846975L;
         out[4 + outPos] = (long)in.get(30 + inPos) & 255L | (long)in.get(31 + inPos) << 8 & 65535L | (long)in.get(32 + inPos) << 16 & 16777215L | (long)in.get(33 + inPos) << 24 & 4294967295L | (long)in.get(34 + inPos) << 32 & 1099511627775L | (long)in.get(35 + inPos) << 40 & 281474976710655L | (long)in.get(36 + inPos) << 48 & 72057594037927935L | (long)in.get(37 + inPos) << 56 & 1152921504606846975L;
         out[5 + outPos] = (long)in.get(37 + inPos) >> 4 & 15L | (long)in.get(38 + inPos) << 4 & 4095L | (long)in.get(39 + inPos) << 12 & 1048575L | (long)in.get(40 + inPos) << 20 & 268435455L | (long)in.get(41 + inPos) << 28 & 68719476735L | (long)in.get(42 + inPos) << 36 & 17592186044415L | (long)in.get(43 + inPos) << 44 & 4503599627370495L | (long)in.get(44 + inPos) << 52 & 1152921504606846975L;
         out[6 + outPos] = (long)in.get(45 + inPos) & 255L | (long)in.get(46 + inPos) << 8 & 65535L | (long)in.get(47 + inPos) << 16 & 16777215L | (long)in.get(48 + inPos) << 24 & 4294967295L | (long)in.get(49 + inPos) << 32 & 1099511627775L | (long)in.get(50 + inPos) << 40 & 281474976710655L | (long)in.get(51 + inPos) << 48 & 72057594037927935L | (long)in.get(52 + inPos) << 56 & 1152921504606846975L;
         out[7 + outPos] = (long)in.get(52 + inPos) >> 4 & 15L | (long)in.get(53 + inPos) << 4 & 4095L | (long)in.get(54 + inPos) << 12 & 1048575L | (long)in.get(55 + inPos) << 20 & 268435455L | (long)in.get(56 + inPos) << 28 & 68719476735L | (long)in.get(57 + inPos) << 36 & 17592186044415L | (long)in.get(58 + inPos) << 44 & 4503599627370495L | (long)in.get(59 + inPos) << 52 & 1152921504606846975L;
         out[8 + outPos] = (long)in.get(60 + inPos) & 255L | (long)in.get(61 + inPos) << 8 & 65535L | (long)in.get(62 + inPos) << 16 & 16777215L | (long)in.get(63 + inPos) << 24 & 4294967295L | (long)in.get(64 + inPos) << 32 & 1099511627775L | (long)in.get(65 + inPos) << 40 & 281474976710655L | (long)in.get(66 + inPos) << 48 & 72057594037927935L | (long)in.get(67 + inPos) << 56 & 1152921504606846975L;
         out[9 + outPos] = (long)in.get(67 + inPos) >> 4 & 15L | (long)in.get(68 + inPos) << 4 & 4095L | (long)in.get(69 + inPos) << 12 & 1048575L | (long)in.get(70 + inPos) << 20 & 268435455L | (long)in.get(71 + inPos) << 28 & 68719476735L | (long)in.get(72 + inPos) << 36 & 17592186044415L | (long)in.get(73 + inPos) << 44 & 4503599627370495L | (long)in.get(74 + inPos) << 52 & 1152921504606846975L;
         out[10 + outPos] = (long)in.get(75 + inPos) & 255L | (long)in.get(76 + inPos) << 8 & 65535L | (long)in.get(77 + inPos) << 16 & 16777215L | (long)in.get(78 + inPos) << 24 & 4294967295L | (long)in.get(79 + inPos) << 32 & 1099511627775L | (long)in.get(80 + inPos) << 40 & 281474976710655L | (long)in.get(81 + inPos) << 48 & 72057594037927935L | (long)in.get(82 + inPos) << 56 & 1152921504606846975L;
         out[11 + outPos] = (long)in.get(82 + inPos) >> 4 & 15L | (long)in.get(83 + inPos) << 4 & 4095L | (long)in.get(84 + inPos) << 12 & 1048575L | (long)in.get(85 + inPos) << 20 & 268435455L | (long)in.get(86 + inPos) << 28 & 68719476735L | (long)in.get(87 + inPos) << 36 & 17592186044415L | (long)in.get(88 + inPos) << 44 & 4503599627370495L | (long)in.get(89 + inPos) << 52 & 1152921504606846975L;
         out[12 + outPos] = (long)in.get(90 + inPos) & 255L | (long)in.get(91 + inPos) << 8 & 65535L | (long)in.get(92 + inPos) << 16 & 16777215L | (long)in.get(93 + inPos) << 24 & 4294967295L | (long)in.get(94 + inPos) << 32 & 1099511627775L | (long)in.get(95 + inPos) << 40 & 281474976710655L | (long)in.get(96 + inPos) << 48 & 72057594037927935L | (long)in.get(97 + inPos) << 56 & 1152921504606846975L;
         out[13 + outPos] = (long)in.get(97 + inPos) >> 4 & 15L | (long)in.get(98 + inPos) << 4 & 4095L | (long)in.get(99 + inPos) << 12 & 1048575L | (long)in.get(100 + inPos) << 20 & 268435455L | (long)in.get(101 + inPos) << 28 & 68719476735L | (long)in.get(102 + inPos) << 36 & 17592186044415L | (long)in.get(103 + inPos) << 44 & 4503599627370495L | (long)in.get(104 + inPos) << 52 & 1152921504606846975L;
         out[14 + outPos] = (long)in.get(105 + inPos) & 255L | (long)in.get(106 + inPos) << 8 & 65535L | (long)in.get(107 + inPos) << 16 & 16777215L | (long)in.get(108 + inPos) << 24 & 4294967295L | (long)in.get(109 + inPos) << 32 & 1099511627775L | (long)in.get(110 + inPos) << 40 & 281474976710655L | (long)in.get(111 + inPos) << 48 & 72057594037927935L | (long)in.get(112 + inPos) << 56 & 1152921504606846975L;
         out[15 + outPos] = (long)in.get(112 + inPos) >> 4 & 15L | (long)in.get(113 + inPos) << 4 & 4095L | (long)in.get(114 + inPos) << 12 & 1048575L | (long)in.get(115 + inPos) << 20 & 268435455L | (long)in.get(116 + inPos) << 28 & 68719476735L | (long)in.get(117 + inPos) << 36 & 17592186044415L | (long)in.get(118 + inPos) << 44 & 4503599627370495L | (long)in.get(119 + inPos) << 52 & 1152921504606846975L;
         out[16 + outPos] = (long)in.get(120 + inPos) & 255L | (long)in.get(121 + inPos) << 8 & 65535L | (long)in.get(122 + inPos) << 16 & 16777215L | (long)in.get(123 + inPos) << 24 & 4294967295L | (long)in.get(124 + inPos) << 32 & 1099511627775L | (long)in.get(125 + inPos) << 40 & 281474976710655L | (long)in.get(126 + inPos) << 48 & 72057594037927935L | (long)in.get(127 + inPos) << 56 & 1152921504606846975L;
         out[17 + outPos] = (long)in.get(127 + inPos) >> 4 & 15L | (long)in.get(128 + inPos) << 4 & 4095L | (long)in.get(129 + inPos) << 12 & 1048575L | (long)in.get(130 + inPos) << 20 & 268435455L | (long)in.get(131 + inPos) << 28 & 68719476735L | (long)in.get(132 + inPos) << 36 & 17592186044415L | (long)in.get(133 + inPos) << 44 & 4503599627370495L | (long)in.get(134 + inPos) << 52 & 1152921504606846975L;
         out[18 + outPos] = (long)in.get(135 + inPos) & 255L | (long)in.get(136 + inPos) << 8 & 65535L | (long)in.get(137 + inPos) << 16 & 16777215L | (long)in.get(138 + inPos) << 24 & 4294967295L | (long)in.get(139 + inPos) << 32 & 1099511627775L | (long)in.get(140 + inPos) << 40 & 281474976710655L | (long)in.get(141 + inPos) << 48 & 72057594037927935L | (long)in.get(142 + inPos) << 56 & 1152921504606846975L;
         out[19 + outPos] = (long)in.get(142 + inPos) >> 4 & 15L | (long)in.get(143 + inPos) << 4 & 4095L | (long)in.get(144 + inPos) << 12 & 1048575L | (long)in.get(145 + inPos) << 20 & 268435455L | (long)in.get(146 + inPos) << 28 & 68719476735L | (long)in.get(147 + inPos) << 36 & 17592186044415L | (long)in.get(148 + inPos) << 44 & 4503599627370495L | (long)in.get(149 + inPos) << 52 & 1152921504606846975L;
         out[20 + outPos] = (long)in.get(150 + inPos) & 255L | (long)in.get(151 + inPos) << 8 & 65535L | (long)in.get(152 + inPos) << 16 & 16777215L | (long)in.get(153 + inPos) << 24 & 4294967295L | (long)in.get(154 + inPos) << 32 & 1099511627775L | (long)in.get(155 + inPos) << 40 & 281474976710655L | (long)in.get(156 + inPos) << 48 & 72057594037927935L | (long)in.get(157 + inPos) << 56 & 1152921504606846975L;
         out[21 + outPos] = (long)in.get(157 + inPos) >> 4 & 15L | (long)in.get(158 + inPos) << 4 & 4095L | (long)in.get(159 + inPos) << 12 & 1048575L | (long)in.get(160 + inPos) << 20 & 268435455L | (long)in.get(161 + inPos) << 28 & 68719476735L | (long)in.get(162 + inPos) << 36 & 17592186044415L | (long)in.get(163 + inPos) << 44 & 4503599627370495L | (long)in.get(164 + inPos) << 52 & 1152921504606846975L;
         out[22 + outPos] = (long)in.get(165 + inPos) & 255L | (long)in.get(166 + inPos) << 8 & 65535L | (long)in.get(167 + inPos) << 16 & 16777215L | (long)in.get(168 + inPos) << 24 & 4294967295L | (long)in.get(169 + inPos) << 32 & 1099511627775L | (long)in.get(170 + inPos) << 40 & 281474976710655L | (long)in.get(171 + inPos) << 48 & 72057594037927935L | (long)in.get(172 + inPos) << 56 & 1152921504606846975L;
         out[23 + outPos] = (long)in.get(172 + inPos) >> 4 & 15L | (long)in.get(173 + inPos) << 4 & 4095L | (long)in.get(174 + inPos) << 12 & 1048575L | (long)in.get(175 + inPos) << 20 & 268435455L | (long)in.get(176 + inPos) << 28 & 68719476735L | (long)in.get(177 + inPos) << 36 & 17592186044415L | (long)in.get(178 + inPos) << 44 & 4503599627370495L | (long)in.get(179 + inPos) << 52 & 1152921504606846975L;
         out[24 + outPos] = (long)in.get(180 + inPos) & 255L | (long)in.get(181 + inPos) << 8 & 65535L | (long)in.get(182 + inPos) << 16 & 16777215L | (long)in.get(183 + inPos) << 24 & 4294967295L | (long)in.get(184 + inPos) << 32 & 1099511627775L | (long)in.get(185 + inPos) << 40 & 281474976710655L | (long)in.get(186 + inPos) << 48 & 72057594037927935L | (long)in.get(187 + inPos) << 56 & 1152921504606846975L;
         out[25 + outPos] = (long)in.get(187 + inPos) >> 4 & 15L | (long)in.get(188 + inPos) << 4 & 4095L | (long)in.get(189 + inPos) << 12 & 1048575L | (long)in.get(190 + inPos) << 20 & 268435455L | (long)in.get(191 + inPos) << 28 & 68719476735L | (long)in.get(192 + inPos) << 36 & 17592186044415L | (long)in.get(193 + inPos) << 44 & 4503599627370495L | (long)in.get(194 + inPos) << 52 & 1152921504606846975L;
         out[26 + outPos] = (long)in.get(195 + inPos) & 255L | (long)in.get(196 + inPos) << 8 & 65535L | (long)in.get(197 + inPos) << 16 & 16777215L | (long)in.get(198 + inPos) << 24 & 4294967295L | (long)in.get(199 + inPos) << 32 & 1099511627775L | (long)in.get(200 + inPos) << 40 & 281474976710655L | (long)in.get(201 + inPos) << 48 & 72057594037927935L | (long)in.get(202 + inPos) << 56 & 1152921504606846975L;
         out[27 + outPos] = (long)in.get(202 + inPos) >> 4 & 15L | (long)in.get(203 + inPos) << 4 & 4095L | (long)in.get(204 + inPos) << 12 & 1048575L | (long)in.get(205 + inPos) << 20 & 268435455L | (long)in.get(206 + inPos) << 28 & 68719476735L | (long)in.get(207 + inPos) << 36 & 17592186044415L | (long)in.get(208 + inPos) << 44 & 4503599627370495L | (long)in.get(209 + inPos) << 52 & 1152921504606846975L;
         out[28 + outPos] = (long)in.get(210 + inPos) & 255L | (long)in.get(211 + inPos) << 8 & 65535L | (long)in.get(212 + inPos) << 16 & 16777215L | (long)in.get(213 + inPos) << 24 & 4294967295L | (long)in.get(214 + inPos) << 32 & 1099511627775L | (long)in.get(215 + inPos) << 40 & 281474976710655L | (long)in.get(216 + inPos) << 48 & 72057594037927935L | (long)in.get(217 + inPos) << 56 & 1152921504606846975L;
         out[29 + outPos] = (long)in.get(217 + inPos) >> 4 & 15L | (long)in.get(218 + inPos) << 4 & 4095L | (long)in.get(219 + inPos) << 12 & 1048575L | (long)in.get(220 + inPos) << 20 & 268435455L | (long)in.get(221 + inPos) << 28 & 68719476735L | (long)in.get(222 + inPos) << 36 & 17592186044415L | (long)in.get(223 + inPos) << 44 & 4503599627370495L | (long)in.get(224 + inPos) << 52 & 1152921504606846975L;
         out[30 + outPos] = (long)in.get(225 + inPos) & 255L | (long)in.get(226 + inPos) << 8 & 65535L | (long)in.get(227 + inPos) << 16 & 16777215L | (long)in.get(228 + inPos) << 24 & 4294967295L | (long)in.get(229 + inPos) << 32 & 1099511627775L | (long)in.get(230 + inPos) << 40 & 281474976710655L | (long)in.get(231 + inPos) << 48 & 72057594037927935L | (long)in.get(232 + inPos) << 56 & 1152921504606846975L;
         out[31 + outPos] = (long)in.get(232 + inPos) >> 4 & 15L | (long)in.get(233 + inPos) << 4 & 4095L | (long)in.get(234 + inPos) << 12 & 1048575L | (long)in.get(235 + inPos) << 20 & 268435455L | (long)in.get(236 + inPos) << 28 & 68719476735L | (long)in.get(237 + inPos) << 36 & 17592186044415L | (long)in.get(238 + inPos) << 44 & 4503599627370495L | (long)in.get(239 + inPos) << 52 & 1152921504606846975L;
      }
   }

   private static final class Packer61 extends BytePackerForLong {
      private Packer61() {
         super(61);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 2305843009213693951L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 2305843009213693951L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 2305843009213693951L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 2305843009213693951L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 2305843009213693951L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 2305843009213693951L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 2305843009213693951L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & 2305843009213693951L) >>> 56 | (in[1 + inPos] & 2305843009213693951L) << 5) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 3 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 11 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 19 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 27 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 35 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 43 & 255L));
         out[14 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 51 & 255L));
         out[15 + outPos] = (byte)((int)(((in[1 + inPos] & 2305843009213693951L) >>> 59 | (in[2 + inPos] & 2305843009213693951L) << 2) & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 2305843009213693951L) >>> 6 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 2305843009213693951L) >>> 14 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 2305843009213693951L) >>> 22 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 2305843009213693951L) >>> 30 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 2305843009213693951L) >>> 38 & 255L));
         out[21 + outPos] = (byte)((int)((in[2 + inPos] & 2305843009213693951L) >>> 46 & 255L));
         out[22 + outPos] = (byte)((int)(((in[2 + inPos] & 2305843009213693951L) >>> 54 | (in[3 + inPos] & 2305843009213693951L) << 7) & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 1 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 9 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 17 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 25 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 33 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 41 & 255L));
         out[29 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 49 & 255L));
         out[30 + outPos] = (byte)((int)(((in[3 + inPos] & 2305843009213693951L) >>> 57 | (in[4 + inPos] & 2305843009213693951L) << 4) & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 4 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 12 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 20 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 28 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 36 & 255L));
         out[36 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 44 & 255L));
         out[37 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 52 & 255L));
         out[38 + outPos] = (byte)((int)(((in[4 + inPos] & 2305843009213693951L) >>> 60 | (in[5 + inPos] & 2305843009213693951L) << 1) & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 2305843009213693951L) >>> 7 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 2305843009213693951L) >>> 15 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 2305843009213693951L) >>> 23 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & 2305843009213693951L) >>> 31 & 255L));
         out[43 + outPos] = (byte)((int)((in[5 + inPos] & 2305843009213693951L) >>> 39 & 255L));
         out[44 + outPos] = (byte)((int)((in[5 + inPos] & 2305843009213693951L) >>> 47 & 255L));
         out[45 + outPos] = (byte)((int)(((in[5 + inPos] & 2305843009213693951L) >>> 55 | (in[6 + inPos] & 2305843009213693951L) << 6) & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 2 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 10 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 18 & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 26 & 255L));
         out[50 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 34 & 255L));
         out[51 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 42 & 255L));
         out[52 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 50 & 255L));
         out[53 + outPos] = (byte)((int)(((in[6 + inPos] & 2305843009213693951L) >>> 58 | (in[7 + inPos] & 2305843009213693951L) << 3) & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 5 & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 13 & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 21 & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 29 & 255L));
         out[58 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 37 & 255L));
         out[59 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 45 & 255L));
         out[60 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 53 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 2305843009213693951L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 2305843009213693951L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 2305843009213693951L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 2305843009213693951L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 2305843009213693951L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 2305843009213693951L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 2305843009213693951L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & 2305843009213693951L) >>> 56 | (in[1 + inPos] & 2305843009213693951L) << 5) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 3 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 11 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 19 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 27 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 35 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 43 & 255L));
         out[14 + outPos] = (byte)((int)((in[1 + inPos] & 2305843009213693951L) >>> 51 & 255L));
         out[15 + outPos] = (byte)((int)(((in[1 + inPos] & 2305843009213693951L) >>> 59 | (in[2 + inPos] & 2305843009213693951L) << 2) & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 2305843009213693951L) >>> 6 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 2305843009213693951L) >>> 14 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 2305843009213693951L) >>> 22 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 2305843009213693951L) >>> 30 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 2305843009213693951L) >>> 38 & 255L));
         out[21 + outPos] = (byte)((int)((in[2 + inPos] & 2305843009213693951L) >>> 46 & 255L));
         out[22 + outPos] = (byte)((int)(((in[2 + inPos] & 2305843009213693951L) >>> 54 | (in[3 + inPos] & 2305843009213693951L) << 7) & 255L));
         out[23 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 1 & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 9 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 17 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 25 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 33 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 41 & 255L));
         out[29 + outPos] = (byte)((int)((in[3 + inPos] & 2305843009213693951L) >>> 49 & 255L));
         out[30 + outPos] = (byte)((int)(((in[3 + inPos] & 2305843009213693951L) >>> 57 | (in[4 + inPos] & 2305843009213693951L) << 4) & 255L));
         out[31 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 4 & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 12 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 20 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 28 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 36 & 255L));
         out[36 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 44 & 255L));
         out[37 + outPos] = (byte)((int)((in[4 + inPos] & 2305843009213693951L) >>> 52 & 255L));
         out[38 + outPos] = (byte)((int)(((in[4 + inPos] & 2305843009213693951L) >>> 60 | (in[5 + inPos] & 2305843009213693951L) << 1) & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 2305843009213693951L) >>> 7 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 2305843009213693951L) >>> 15 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 2305843009213693951L) >>> 23 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & 2305843009213693951L) >>> 31 & 255L));
         out[43 + outPos] = (byte)((int)((in[5 + inPos] & 2305843009213693951L) >>> 39 & 255L));
         out[44 + outPos] = (byte)((int)((in[5 + inPos] & 2305843009213693951L) >>> 47 & 255L));
         out[45 + outPos] = (byte)((int)(((in[5 + inPos] & 2305843009213693951L) >>> 55 | (in[6 + inPos] & 2305843009213693951L) << 6) & 255L));
         out[46 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 2 & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 10 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 18 & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 26 & 255L));
         out[50 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 34 & 255L));
         out[51 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 42 & 255L));
         out[52 + outPos] = (byte)((int)((in[6 + inPos] & 2305843009213693951L) >>> 50 & 255L));
         out[53 + outPos] = (byte)((int)(((in[6 + inPos] & 2305843009213693951L) >>> 58 | (in[7 + inPos] & 2305843009213693951L) << 3) & 255L));
         out[54 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 5 & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 13 & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 21 & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 29 & 255L));
         out[58 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 37 & 255L));
         out[59 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 45 & 255L));
         out[60 + outPos] = (byte)((int)((in[7 + inPos] & 2305843009213693951L) >>> 53 & 255L));
         out[61 + outPos] = (byte)((int)(in[8 + inPos] & 2305843009213693951L & 255L));
         out[62 + outPos] = (byte)((int)((in[8 + inPos] & 2305843009213693951L) >>> 8 & 255L));
         out[63 + outPos] = (byte)((int)((in[8 + inPos] & 2305843009213693951L) >>> 16 & 255L));
         out[64 + outPos] = (byte)((int)((in[8 + inPos] & 2305843009213693951L) >>> 24 & 255L));
         out[65 + outPos] = (byte)((int)((in[8 + inPos] & 2305843009213693951L) >>> 32 & 255L));
         out[66 + outPos] = (byte)((int)((in[8 + inPos] & 2305843009213693951L) >>> 40 & 255L));
         out[67 + outPos] = (byte)((int)((in[8 + inPos] & 2305843009213693951L) >>> 48 & 255L));
         out[68 + outPos] = (byte)((int)(((in[8 + inPos] & 2305843009213693951L) >>> 56 | (in[9 + inPos] & 2305843009213693951L) << 5) & 255L));
         out[69 + outPos] = (byte)((int)((in[9 + inPos] & 2305843009213693951L) >>> 3 & 255L));
         out[70 + outPos] = (byte)((int)((in[9 + inPos] & 2305843009213693951L) >>> 11 & 255L));
         out[71 + outPos] = (byte)((int)((in[9 + inPos] & 2305843009213693951L) >>> 19 & 255L));
         out[72 + outPos] = (byte)((int)((in[9 + inPos] & 2305843009213693951L) >>> 27 & 255L));
         out[73 + outPos] = (byte)((int)((in[9 + inPos] & 2305843009213693951L) >>> 35 & 255L));
         out[74 + outPos] = (byte)((int)((in[9 + inPos] & 2305843009213693951L) >>> 43 & 255L));
         out[75 + outPos] = (byte)((int)((in[9 + inPos] & 2305843009213693951L) >>> 51 & 255L));
         out[76 + outPos] = (byte)((int)(((in[9 + inPos] & 2305843009213693951L) >>> 59 | (in[10 + inPos] & 2305843009213693951L) << 2) & 255L));
         out[77 + outPos] = (byte)((int)((in[10 + inPos] & 2305843009213693951L) >>> 6 & 255L));
         out[78 + outPos] = (byte)((int)((in[10 + inPos] & 2305843009213693951L) >>> 14 & 255L));
         out[79 + outPos] = (byte)((int)((in[10 + inPos] & 2305843009213693951L) >>> 22 & 255L));
         out[80 + outPos] = (byte)((int)((in[10 + inPos] & 2305843009213693951L) >>> 30 & 255L));
         out[81 + outPos] = (byte)((int)((in[10 + inPos] & 2305843009213693951L) >>> 38 & 255L));
         out[82 + outPos] = (byte)((int)((in[10 + inPos] & 2305843009213693951L) >>> 46 & 255L));
         out[83 + outPos] = (byte)((int)(((in[10 + inPos] & 2305843009213693951L) >>> 54 | (in[11 + inPos] & 2305843009213693951L) << 7) & 255L));
         out[84 + outPos] = (byte)((int)((in[11 + inPos] & 2305843009213693951L) >>> 1 & 255L));
         out[85 + outPos] = (byte)((int)((in[11 + inPos] & 2305843009213693951L) >>> 9 & 255L));
         out[86 + outPos] = (byte)((int)((in[11 + inPos] & 2305843009213693951L) >>> 17 & 255L));
         out[87 + outPos] = (byte)((int)((in[11 + inPos] & 2305843009213693951L) >>> 25 & 255L));
         out[88 + outPos] = (byte)((int)((in[11 + inPos] & 2305843009213693951L) >>> 33 & 255L));
         out[89 + outPos] = (byte)((int)((in[11 + inPos] & 2305843009213693951L) >>> 41 & 255L));
         out[90 + outPos] = (byte)((int)((in[11 + inPos] & 2305843009213693951L) >>> 49 & 255L));
         out[91 + outPos] = (byte)((int)(((in[11 + inPos] & 2305843009213693951L) >>> 57 | (in[12 + inPos] & 2305843009213693951L) << 4) & 255L));
         out[92 + outPos] = (byte)((int)((in[12 + inPos] & 2305843009213693951L) >>> 4 & 255L));
         out[93 + outPos] = (byte)((int)((in[12 + inPos] & 2305843009213693951L) >>> 12 & 255L));
         out[94 + outPos] = (byte)((int)((in[12 + inPos] & 2305843009213693951L) >>> 20 & 255L));
         out[95 + outPos] = (byte)((int)((in[12 + inPos] & 2305843009213693951L) >>> 28 & 255L));
         out[96 + outPos] = (byte)((int)((in[12 + inPos] & 2305843009213693951L) >>> 36 & 255L));
         out[97 + outPos] = (byte)((int)((in[12 + inPos] & 2305843009213693951L) >>> 44 & 255L));
         out[98 + outPos] = (byte)((int)((in[12 + inPos] & 2305843009213693951L) >>> 52 & 255L));
         out[99 + outPos] = (byte)((int)(((in[12 + inPos] & 2305843009213693951L) >>> 60 | (in[13 + inPos] & 2305843009213693951L) << 1) & 255L));
         out[100 + outPos] = (byte)((int)((in[13 + inPos] & 2305843009213693951L) >>> 7 & 255L));
         out[101 + outPos] = (byte)((int)((in[13 + inPos] & 2305843009213693951L) >>> 15 & 255L));
         out[102 + outPos] = (byte)((int)((in[13 + inPos] & 2305843009213693951L) >>> 23 & 255L));
         out[103 + outPos] = (byte)((int)((in[13 + inPos] & 2305843009213693951L) >>> 31 & 255L));
         out[104 + outPos] = (byte)((int)((in[13 + inPos] & 2305843009213693951L) >>> 39 & 255L));
         out[105 + outPos] = (byte)((int)((in[13 + inPos] & 2305843009213693951L) >>> 47 & 255L));
         out[106 + outPos] = (byte)((int)(((in[13 + inPos] & 2305843009213693951L) >>> 55 | (in[14 + inPos] & 2305843009213693951L) << 6) & 255L));
         out[107 + outPos] = (byte)((int)((in[14 + inPos] & 2305843009213693951L) >>> 2 & 255L));
         out[108 + outPos] = (byte)((int)((in[14 + inPos] & 2305843009213693951L) >>> 10 & 255L));
         out[109 + outPos] = (byte)((int)((in[14 + inPos] & 2305843009213693951L) >>> 18 & 255L));
         out[110 + outPos] = (byte)((int)((in[14 + inPos] & 2305843009213693951L) >>> 26 & 255L));
         out[111 + outPos] = (byte)((int)((in[14 + inPos] & 2305843009213693951L) >>> 34 & 255L));
         out[112 + outPos] = (byte)((int)((in[14 + inPos] & 2305843009213693951L) >>> 42 & 255L));
         out[113 + outPos] = (byte)((int)((in[14 + inPos] & 2305843009213693951L) >>> 50 & 255L));
         out[114 + outPos] = (byte)((int)(((in[14 + inPos] & 2305843009213693951L) >>> 58 | (in[15 + inPos] & 2305843009213693951L) << 3) & 255L));
         out[115 + outPos] = (byte)((int)((in[15 + inPos] & 2305843009213693951L) >>> 5 & 255L));
         out[116 + outPos] = (byte)((int)((in[15 + inPos] & 2305843009213693951L) >>> 13 & 255L));
         out[117 + outPos] = (byte)((int)((in[15 + inPos] & 2305843009213693951L) >>> 21 & 255L));
         out[118 + outPos] = (byte)((int)((in[15 + inPos] & 2305843009213693951L) >>> 29 & 255L));
         out[119 + outPos] = (byte)((int)((in[15 + inPos] & 2305843009213693951L) >>> 37 & 255L));
         out[120 + outPos] = (byte)((int)((in[15 + inPos] & 2305843009213693951L) >>> 45 & 255L));
         out[121 + outPos] = (byte)((int)((in[15 + inPos] & 2305843009213693951L) >>> 53 & 255L));
         out[122 + outPos] = (byte)((int)(in[16 + inPos] & 2305843009213693951L & 255L));
         out[123 + outPos] = (byte)((int)((in[16 + inPos] & 2305843009213693951L) >>> 8 & 255L));
         out[124 + outPos] = (byte)((int)((in[16 + inPos] & 2305843009213693951L) >>> 16 & 255L));
         out[125 + outPos] = (byte)((int)((in[16 + inPos] & 2305843009213693951L) >>> 24 & 255L));
         out[126 + outPos] = (byte)((int)((in[16 + inPos] & 2305843009213693951L) >>> 32 & 255L));
         out[127 + outPos] = (byte)((int)((in[16 + inPos] & 2305843009213693951L) >>> 40 & 255L));
         out[128 + outPos] = (byte)((int)((in[16 + inPos] & 2305843009213693951L) >>> 48 & 255L));
         out[129 + outPos] = (byte)((int)(((in[16 + inPos] & 2305843009213693951L) >>> 56 | (in[17 + inPos] & 2305843009213693951L) << 5) & 255L));
         out[130 + outPos] = (byte)((int)((in[17 + inPos] & 2305843009213693951L) >>> 3 & 255L));
         out[131 + outPos] = (byte)((int)((in[17 + inPos] & 2305843009213693951L) >>> 11 & 255L));
         out[132 + outPos] = (byte)((int)((in[17 + inPos] & 2305843009213693951L) >>> 19 & 255L));
         out[133 + outPos] = (byte)((int)((in[17 + inPos] & 2305843009213693951L) >>> 27 & 255L));
         out[134 + outPos] = (byte)((int)((in[17 + inPos] & 2305843009213693951L) >>> 35 & 255L));
         out[135 + outPos] = (byte)((int)((in[17 + inPos] & 2305843009213693951L) >>> 43 & 255L));
         out[136 + outPos] = (byte)((int)((in[17 + inPos] & 2305843009213693951L) >>> 51 & 255L));
         out[137 + outPos] = (byte)((int)(((in[17 + inPos] & 2305843009213693951L) >>> 59 | (in[18 + inPos] & 2305843009213693951L) << 2) & 255L));
         out[138 + outPos] = (byte)((int)((in[18 + inPos] & 2305843009213693951L) >>> 6 & 255L));
         out[139 + outPos] = (byte)((int)((in[18 + inPos] & 2305843009213693951L) >>> 14 & 255L));
         out[140 + outPos] = (byte)((int)((in[18 + inPos] & 2305843009213693951L) >>> 22 & 255L));
         out[141 + outPos] = (byte)((int)((in[18 + inPos] & 2305843009213693951L) >>> 30 & 255L));
         out[142 + outPos] = (byte)((int)((in[18 + inPos] & 2305843009213693951L) >>> 38 & 255L));
         out[143 + outPos] = (byte)((int)((in[18 + inPos] & 2305843009213693951L) >>> 46 & 255L));
         out[144 + outPos] = (byte)((int)(((in[18 + inPos] & 2305843009213693951L) >>> 54 | (in[19 + inPos] & 2305843009213693951L) << 7) & 255L));
         out[145 + outPos] = (byte)((int)((in[19 + inPos] & 2305843009213693951L) >>> 1 & 255L));
         out[146 + outPos] = (byte)((int)((in[19 + inPos] & 2305843009213693951L) >>> 9 & 255L));
         out[147 + outPos] = (byte)((int)((in[19 + inPos] & 2305843009213693951L) >>> 17 & 255L));
         out[148 + outPos] = (byte)((int)((in[19 + inPos] & 2305843009213693951L) >>> 25 & 255L));
         out[149 + outPos] = (byte)((int)((in[19 + inPos] & 2305843009213693951L) >>> 33 & 255L));
         out[150 + outPos] = (byte)((int)((in[19 + inPos] & 2305843009213693951L) >>> 41 & 255L));
         out[151 + outPos] = (byte)((int)((in[19 + inPos] & 2305843009213693951L) >>> 49 & 255L));
         out[152 + outPos] = (byte)((int)(((in[19 + inPos] & 2305843009213693951L) >>> 57 | (in[20 + inPos] & 2305843009213693951L) << 4) & 255L));
         out[153 + outPos] = (byte)((int)((in[20 + inPos] & 2305843009213693951L) >>> 4 & 255L));
         out[154 + outPos] = (byte)((int)((in[20 + inPos] & 2305843009213693951L) >>> 12 & 255L));
         out[155 + outPos] = (byte)((int)((in[20 + inPos] & 2305843009213693951L) >>> 20 & 255L));
         out[156 + outPos] = (byte)((int)((in[20 + inPos] & 2305843009213693951L) >>> 28 & 255L));
         out[157 + outPos] = (byte)((int)((in[20 + inPos] & 2305843009213693951L) >>> 36 & 255L));
         out[158 + outPos] = (byte)((int)((in[20 + inPos] & 2305843009213693951L) >>> 44 & 255L));
         out[159 + outPos] = (byte)((int)((in[20 + inPos] & 2305843009213693951L) >>> 52 & 255L));
         out[160 + outPos] = (byte)((int)(((in[20 + inPos] & 2305843009213693951L) >>> 60 | (in[21 + inPos] & 2305843009213693951L) << 1) & 255L));
         out[161 + outPos] = (byte)((int)((in[21 + inPos] & 2305843009213693951L) >>> 7 & 255L));
         out[162 + outPos] = (byte)((int)((in[21 + inPos] & 2305843009213693951L) >>> 15 & 255L));
         out[163 + outPos] = (byte)((int)((in[21 + inPos] & 2305843009213693951L) >>> 23 & 255L));
         out[164 + outPos] = (byte)((int)((in[21 + inPos] & 2305843009213693951L) >>> 31 & 255L));
         out[165 + outPos] = (byte)((int)((in[21 + inPos] & 2305843009213693951L) >>> 39 & 255L));
         out[166 + outPos] = (byte)((int)((in[21 + inPos] & 2305843009213693951L) >>> 47 & 255L));
         out[167 + outPos] = (byte)((int)(((in[21 + inPos] & 2305843009213693951L) >>> 55 | (in[22 + inPos] & 2305843009213693951L) << 6) & 255L));
         out[168 + outPos] = (byte)((int)((in[22 + inPos] & 2305843009213693951L) >>> 2 & 255L));
         out[169 + outPos] = (byte)((int)((in[22 + inPos] & 2305843009213693951L) >>> 10 & 255L));
         out[170 + outPos] = (byte)((int)((in[22 + inPos] & 2305843009213693951L) >>> 18 & 255L));
         out[171 + outPos] = (byte)((int)((in[22 + inPos] & 2305843009213693951L) >>> 26 & 255L));
         out[172 + outPos] = (byte)((int)((in[22 + inPos] & 2305843009213693951L) >>> 34 & 255L));
         out[173 + outPos] = (byte)((int)((in[22 + inPos] & 2305843009213693951L) >>> 42 & 255L));
         out[174 + outPos] = (byte)((int)((in[22 + inPos] & 2305843009213693951L) >>> 50 & 255L));
         out[175 + outPos] = (byte)((int)(((in[22 + inPos] & 2305843009213693951L) >>> 58 | (in[23 + inPos] & 2305843009213693951L) << 3) & 255L));
         out[176 + outPos] = (byte)((int)((in[23 + inPos] & 2305843009213693951L) >>> 5 & 255L));
         out[177 + outPos] = (byte)((int)((in[23 + inPos] & 2305843009213693951L) >>> 13 & 255L));
         out[178 + outPos] = (byte)((int)((in[23 + inPos] & 2305843009213693951L) >>> 21 & 255L));
         out[179 + outPos] = (byte)((int)((in[23 + inPos] & 2305843009213693951L) >>> 29 & 255L));
         out[180 + outPos] = (byte)((int)((in[23 + inPos] & 2305843009213693951L) >>> 37 & 255L));
         out[181 + outPos] = (byte)((int)((in[23 + inPos] & 2305843009213693951L) >>> 45 & 255L));
         out[182 + outPos] = (byte)((int)((in[23 + inPos] & 2305843009213693951L) >>> 53 & 255L));
         out[183 + outPos] = (byte)((int)(in[24 + inPos] & 2305843009213693951L & 255L));
         out[184 + outPos] = (byte)((int)((in[24 + inPos] & 2305843009213693951L) >>> 8 & 255L));
         out[185 + outPos] = (byte)((int)((in[24 + inPos] & 2305843009213693951L) >>> 16 & 255L));
         out[186 + outPos] = (byte)((int)((in[24 + inPos] & 2305843009213693951L) >>> 24 & 255L));
         out[187 + outPos] = (byte)((int)((in[24 + inPos] & 2305843009213693951L) >>> 32 & 255L));
         out[188 + outPos] = (byte)((int)((in[24 + inPos] & 2305843009213693951L) >>> 40 & 255L));
         out[189 + outPos] = (byte)((int)((in[24 + inPos] & 2305843009213693951L) >>> 48 & 255L));
         out[190 + outPos] = (byte)((int)(((in[24 + inPos] & 2305843009213693951L) >>> 56 | (in[25 + inPos] & 2305843009213693951L) << 5) & 255L));
         out[191 + outPos] = (byte)((int)((in[25 + inPos] & 2305843009213693951L) >>> 3 & 255L));
         out[192 + outPos] = (byte)((int)((in[25 + inPos] & 2305843009213693951L) >>> 11 & 255L));
         out[193 + outPos] = (byte)((int)((in[25 + inPos] & 2305843009213693951L) >>> 19 & 255L));
         out[194 + outPos] = (byte)((int)((in[25 + inPos] & 2305843009213693951L) >>> 27 & 255L));
         out[195 + outPos] = (byte)((int)((in[25 + inPos] & 2305843009213693951L) >>> 35 & 255L));
         out[196 + outPos] = (byte)((int)((in[25 + inPos] & 2305843009213693951L) >>> 43 & 255L));
         out[197 + outPos] = (byte)((int)((in[25 + inPos] & 2305843009213693951L) >>> 51 & 255L));
         out[198 + outPos] = (byte)((int)(((in[25 + inPos] & 2305843009213693951L) >>> 59 | (in[26 + inPos] & 2305843009213693951L) << 2) & 255L));
         out[199 + outPos] = (byte)((int)((in[26 + inPos] & 2305843009213693951L) >>> 6 & 255L));
         out[200 + outPos] = (byte)((int)((in[26 + inPos] & 2305843009213693951L) >>> 14 & 255L));
         out[201 + outPos] = (byte)((int)((in[26 + inPos] & 2305843009213693951L) >>> 22 & 255L));
         out[202 + outPos] = (byte)((int)((in[26 + inPos] & 2305843009213693951L) >>> 30 & 255L));
         out[203 + outPos] = (byte)((int)((in[26 + inPos] & 2305843009213693951L) >>> 38 & 255L));
         out[204 + outPos] = (byte)((int)((in[26 + inPos] & 2305843009213693951L) >>> 46 & 255L));
         out[205 + outPos] = (byte)((int)(((in[26 + inPos] & 2305843009213693951L) >>> 54 | (in[27 + inPos] & 2305843009213693951L) << 7) & 255L));
         out[206 + outPos] = (byte)((int)((in[27 + inPos] & 2305843009213693951L) >>> 1 & 255L));
         out[207 + outPos] = (byte)((int)((in[27 + inPos] & 2305843009213693951L) >>> 9 & 255L));
         out[208 + outPos] = (byte)((int)((in[27 + inPos] & 2305843009213693951L) >>> 17 & 255L));
         out[209 + outPos] = (byte)((int)((in[27 + inPos] & 2305843009213693951L) >>> 25 & 255L));
         out[210 + outPos] = (byte)((int)((in[27 + inPos] & 2305843009213693951L) >>> 33 & 255L));
         out[211 + outPos] = (byte)((int)((in[27 + inPos] & 2305843009213693951L) >>> 41 & 255L));
         out[212 + outPos] = (byte)((int)((in[27 + inPos] & 2305843009213693951L) >>> 49 & 255L));
         out[213 + outPos] = (byte)((int)(((in[27 + inPos] & 2305843009213693951L) >>> 57 | (in[28 + inPos] & 2305843009213693951L) << 4) & 255L));
         out[214 + outPos] = (byte)((int)((in[28 + inPos] & 2305843009213693951L) >>> 4 & 255L));
         out[215 + outPos] = (byte)((int)((in[28 + inPos] & 2305843009213693951L) >>> 12 & 255L));
         out[216 + outPos] = (byte)((int)((in[28 + inPos] & 2305843009213693951L) >>> 20 & 255L));
         out[217 + outPos] = (byte)((int)((in[28 + inPos] & 2305843009213693951L) >>> 28 & 255L));
         out[218 + outPos] = (byte)((int)((in[28 + inPos] & 2305843009213693951L) >>> 36 & 255L));
         out[219 + outPos] = (byte)((int)((in[28 + inPos] & 2305843009213693951L) >>> 44 & 255L));
         out[220 + outPos] = (byte)((int)((in[28 + inPos] & 2305843009213693951L) >>> 52 & 255L));
         out[221 + outPos] = (byte)((int)(((in[28 + inPos] & 2305843009213693951L) >>> 60 | (in[29 + inPos] & 2305843009213693951L) << 1) & 255L));
         out[222 + outPos] = (byte)((int)((in[29 + inPos] & 2305843009213693951L) >>> 7 & 255L));
         out[223 + outPos] = (byte)((int)((in[29 + inPos] & 2305843009213693951L) >>> 15 & 255L));
         out[224 + outPos] = (byte)((int)((in[29 + inPos] & 2305843009213693951L) >>> 23 & 255L));
         out[225 + outPos] = (byte)((int)((in[29 + inPos] & 2305843009213693951L) >>> 31 & 255L));
         out[226 + outPos] = (byte)((int)((in[29 + inPos] & 2305843009213693951L) >>> 39 & 255L));
         out[227 + outPos] = (byte)((int)((in[29 + inPos] & 2305843009213693951L) >>> 47 & 255L));
         out[228 + outPos] = (byte)((int)(((in[29 + inPos] & 2305843009213693951L) >>> 55 | (in[30 + inPos] & 2305843009213693951L) << 6) & 255L));
         out[229 + outPos] = (byte)((int)((in[30 + inPos] & 2305843009213693951L) >>> 2 & 255L));
         out[230 + outPos] = (byte)((int)((in[30 + inPos] & 2305843009213693951L) >>> 10 & 255L));
         out[231 + outPos] = (byte)((int)((in[30 + inPos] & 2305843009213693951L) >>> 18 & 255L));
         out[232 + outPos] = (byte)((int)((in[30 + inPos] & 2305843009213693951L) >>> 26 & 255L));
         out[233 + outPos] = (byte)((int)((in[30 + inPos] & 2305843009213693951L) >>> 34 & 255L));
         out[234 + outPos] = (byte)((int)((in[30 + inPos] & 2305843009213693951L) >>> 42 & 255L));
         out[235 + outPos] = (byte)((int)((in[30 + inPos] & 2305843009213693951L) >>> 50 & 255L));
         out[236 + outPos] = (byte)((int)(((in[30 + inPos] & 2305843009213693951L) >>> 58 | (in[31 + inPos] & 2305843009213693951L) << 3) & 255L));
         out[237 + outPos] = (byte)((int)((in[31 + inPos] & 2305843009213693951L) >>> 5 & 255L));
         out[238 + outPos] = (byte)((int)((in[31 + inPos] & 2305843009213693951L) >>> 13 & 255L));
         out[239 + outPos] = (byte)((int)((in[31 + inPos] & 2305843009213693951L) >>> 21 & 255L));
         out[240 + outPos] = (byte)((int)((in[31 + inPos] & 2305843009213693951L) >>> 29 & 255L));
         out[241 + outPos] = (byte)((int)((in[31 + inPos] & 2305843009213693951L) >>> 37 & 255L));
         out[242 + outPos] = (byte)((int)((in[31 + inPos] & 2305843009213693951L) >>> 45 & 255L));
         out[243 + outPos] = (byte)((int)((in[31 + inPos] & 2305843009213693951L) >>> 53 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & 2305843009213693951L;
         out[1 + outPos] = (long)in[7 + inPos] >> 5 & 7L | (long)in[8 + inPos] << 3 & 2047L | (long)in[9 + inPos] << 11 & 524287L | (long)in[10 + inPos] << 19 & 134217727L | (long)in[11 + inPos] << 27 & 34359738367L | (long)in[12 + inPos] << 35 & 8796093022207L | (long)in[13 + inPos] << 43 & 2251799813685247L | (long)in[14 + inPos] << 51 & 576460752303423487L | (long)in[15 + inPos] << 59 & 2305843009213693951L;
         out[2 + outPos] = (long)in[15 + inPos] >> 2 & 63L | (long)in[16 + inPos] << 6 & 16383L | (long)in[17 + inPos] << 14 & 4194303L | (long)in[18 + inPos] << 22 & 1073741823L | (long)in[19 + inPos] << 30 & 274877906943L | (long)in[20 + inPos] << 38 & 70368744177663L | (long)in[21 + inPos] << 46 & 18014398509481983L | (long)in[22 + inPos] << 54 & 2305843009213693951L;
         out[3 + outPos] = (long)in[22 + inPos] >> 7 & 1L | (long)in[23 + inPos] << 1 & 511L | (long)in[24 + inPos] << 9 & 131071L | (long)in[25 + inPos] << 17 & 33554431L | (long)in[26 + inPos] << 25 & 8589934591L | (long)in[27 + inPos] << 33 & 2199023255551L | (long)in[28 + inPos] << 41 & 562949953421311L | (long)in[29 + inPos] << 49 & 144115188075855871L | (long)in[30 + inPos] << 57 & 2305843009213693951L;
         out[4 + outPos] = (long)in[30 + inPos] >> 4 & 15L | (long)in[31 + inPos] << 4 & 4095L | (long)in[32 + inPos] << 12 & 1048575L | (long)in[33 + inPos] << 20 & 268435455L | (long)in[34 + inPos] << 28 & 68719476735L | (long)in[35 + inPos] << 36 & 17592186044415L | (long)in[36 + inPos] << 44 & 4503599627370495L | (long)in[37 + inPos] << 52 & 1152921504606846975L | (long)in[38 + inPos] << 60 & 2305843009213693951L;
         out[5 + outPos] = (long)in[38 + inPos] >> 1 & 127L | (long)in[39 + inPos] << 7 & 32767L | (long)in[40 + inPos] << 15 & 8388607L | (long)in[41 + inPos] << 23 & 2147483647L | (long)in[42 + inPos] << 31 & 549755813887L | (long)in[43 + inPos] << 39 & 140737488355327L | (long)in[44 + inPos] << 47 & 36028797018963967L | (long)in[45 + inPos] << 55 & 2305843009213693951L;
         out[6 + outPos] = (long)in[45 + inPos] >> 6 & 3L | (long)in[46 + inPos] << 2 & 1023L | (long)in[47 + inPos] << 10 & 262143L | (long)in[48 + inPos] << 18 & 67108863L | (long)in[49 + inPos] << 26 & 17179869183L | (long)in[50 + inPos] << 34 & 4398046511103L | (long)in[51 + inPos] << 42 & 1125899906842623L | (long)in[52 + inPos] << 50 & 288230376151711743L | (long)in[53 + inPos] << 58 & 2305843009213693951L;
         out[7 + outPos] = (long)in[53 + inPos] >> 3 & 31L | (long)in[54 + inPos] << 5 & 8191L | (long)in[55 + inPos] << 13 & 2097151L | (long)in[56 + inPos] << 21 & 536870911L | (long)in[57 + inPos] << 29 & 137438953471L | (long)in[58 + inPos] << 37 & 35184372088831L | (long)in[59 + inPos] << 45 & 9007199254740991L | (long)in[60 + inPos] << 53 & 2305843009213693951L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & 2305843009213693951L;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 5 & 7L | (long)in.get(8 + inPos) << 3 & 2047L | (long)in.get(9 + inPos) << 11 & 524287L | (long)in.get(10 + inPos) << 19 & 134217727L | (long)in.get(11 + inPos) << 27 & 34359738367L | (long)in.get(12 + inPos) << 35 & 8796093022207L | (long)in.get(13 + inPos) << 43 & 2251799813685247L | (long)in.get(14 + inPos) << 51 & 576460752303423487L | (long)in.get(15 + inPos) << 59 & 2305843009213693951L;
         out[2 + outPos] = (long)in.get(15 + inPos) >> 2 & 63L | (long)in.get(16 + inPos) << 6 & 16383L | (long)in.get(17 + inPos) << 14 & 4194303L | (long)in.get(18 + inPos) << 22 & 1073741823L | (long)in.get(19 + inPos) << 30 & 274877906943L | (long)in.get(20 + inPos) << 38 & 70368744177663L | (long)in.get(21 + inPos) << 46 & 18014398509481983L | (long)in.get(22 + inPos) << 54 & 2305843009213693951L;
         out[3 + outPos] = (long)in.get(22 + inPos) >> 7 & 1L | (long)in.get(23 + inPos) << 1 & 511L | (long)in.get(24 + inPos) << 9 & 131071L | (long)in.get(25 + inPos) << 17 & 33554431L | (long)in.get(26 + inPos) << 25 & 8589934591L | (long)in.get(27 + inPos) << 33 & 2199023255551L | (long)in.get(28 + inPos) << 41 & 562949953421311L | (long)in.get(29 + inPos) << 49 & 144115188075855871L | (long)in.get(30 + inPos) << 57 & 2305843009213693951L;
         out[4 + outPos] = (long)in.get(30 + inPos) >> 4 & 15L | (long)in.get(31 + inPos) << 4 & 4095L | (long)in.get(32 + inPos) << 12 & 1048575L | (long)in.get(33 + inPos) << 20 & 268435455L | (long)in.get(34 + inPos) << 28 & 68719476735L | (long)in.get(35 + inPos) << 36 & 17592186044415L | (long)in.get(36 + inPos) << 44 & 4503599627370495L | (long)in.get(37 + inPos) << 52 & 1152921504606846975L | (long)in.get(38 + inPos) << 60 & 2305843009213693951L;
         out[5 + outPos] = (long)in.get(38 + inPos) >> 1 & 127L | (long)in.get(39 + inPos) << 7 & 32767L | (long)in.get(40 + inPos) << 15 & 8388607L | (long)in.get(41 + inPos) << 23 & 2147483647L | (long)in.get(42 + inPos) << 31 & 549755813887L | (long)in.get(43 + inPos) << 39 & 140737488355327L | (long)in.get(44 + inPos) << 47 & 36028797018963967L | (long)in.get(45 + inPos) << 55 & 2305843009213693951L;
         out[6 + outPos] = (long)in.get(45 + inPos) >> 6 & 3L | (long)in.get(46 + inPos) << 2 & 1023L | (long)in.get(47 + inPos) << 10 & 262143L | (long)in.get(48 + inPos) << 18 & 67108863L | (long)in.get(49 + inPos) << 26 & 17179869183L | (long)in.get(50 + inPos) << 34 & 4398046511103L | (long)in.get(51 + inPos) << 42 & 1125899906842623L | (long)in.get(52 + inPos) << 50 & 288230376151711743L | (long)in.get(53 + inPos) << 58 & 2305843009213693951L;
         out[7 + outPos] = (long)in.get(53 + inPos) >> 3 & 31L | (long)in.get(54 + inPos) << 5 & 8191L | (long)in.get(55 + inPos) << 13 & 2097151L | (long)in.get(56 + inPos) << 21 & 536870911L | (long)in.get(57 + inPos) << 29 & 137438953471L | (long)in.get(58 + inPos) << 37 & 35184372088831L | (long)in.get(59 + inPos) << 45 & 9007199254740991L | (long)in.get(60 + inPos) << 53 & 2305843009213693951L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & 2305843009213693951L;
         out[1 + outPos] = (long)in[7 + inPos] >> 5 & 7L | (long)in[8 + inPos] << 3 & 2047L | (long)in[9 + inPos] << 11 & 524287L | (long)in[10 + inPos] << 19 & 134217727L | (long)in[11 + inPos] << 27 & 34359738367L | (long)in[12 + inPos] << 35 & 8796093022207L | (long)in[13 + inPos] << 43 & 2251799813685247L | (long)in[14 + inPos] << 51 & 576460752303423487L | (long)in[15 + inPos] << 59 & 2305843009213693951L;
         out[2 + outPos] = (long)in[15 + inPos] >> 2 & 63L | (long)in[16 + inPos] << 6 & 16383L | (long)in[17 + inPos] << 14 & 4194303L | (long)in[18 + inPos] << 22 & 1073741823L | (long)in[19 + inPos] << 30 & 274877906943L | (long)in[20 + inPos] << 38 & 70368744177663L | (long)in[21 + inPos] << 46 & 18014398509481983L | (long)in[22 + inPos] << 54 & 2305843009213693951L;
         out[3 + outPos] = (long)in[22 + inPos] >> 7 & 1L | (long)in[23 + inPos] << 1 & 511L | (long)in[24 + inPos] << 9 & 131071L | (long)in[25 + inPos] << 17 & 33554431L | (long)in[26 + inPos] << 25 & 8589934591L | (long)in[27 + inPos] << 33 & 2199023255551L | (long)in[28 + inPos] << 41 & 562949953421311L | (long)in[29 + inPos] << 49 & 144115188075855871L | (long)in[30 + inPos] << 57 & 2305843009213693951L;
         out[4 + outPos] = (long)in[30 + inPos] >> 4 & 15L | (long)in[31 + inPos] << 4 & 4095L | (long)in[32 + inPos] << 12 & 1048575L | (long)in[33 + inPos] << 20 & 268435455L | (long)in[34 + inPos] << 28 & 68719476735L | (long)in[35 + inPos] << 36 & 17592186044415L | (long)in[36 + inPos] << 44 & 4503599627370495L | (long)in[37 + inPos] << 52 & 1152921504606846975L | (long)in[38 + inPos] << 60 & 2305843009213693951L;
         out[5 + outPos] = (long)in[38 + inPos] >> 1 & 127L | (long)in[39 + inPos] << 7 & 32767L | (long)in[40 + inPos] << 15 & 8388607L | (long)in[41 + inPos] << 23 & 2147483647L | (long)in[42 + inPos] << 31 & 549755813887L | (long)in[43 + inPos] << 39 & 140737488355327L | (long)in[44 + inPos] << 47 & 36028797018963967L | (long)in[45 + inPos] << 55 & 2305843009213693951L;
         out[6 + outPos] = (long)in[45 + inPos] >> 6 & 3L | (long)in[46 + inPos] << 2 & 1023L | (long)in[47 + inPos] << 10 & 262143L | (long)in[48 + inPos] << 18 & 67108863L | (long)in[49 + inPos] << 26 & 17179869183L | (long)in[50 + inPos] << 34 & 4398046511103L | (long)in[51 + inPos] << 42 & 1125899906842623L | (long)in[52 + inPos] << 50 & 288230376151711743L | (long)in[53 + inPos] << 58 & 2305843009213693951L;
         out[7 + outPos] = (long)in[53 + inPos] >> 3 & 31L | (long)in[54 + inPos] << 5 & 8191L | (long)in[55 + inPos] << 13 & 2097151L | (long)in[56 + inPos] << 21 & 536870911L | (long)in[57 + inPos] << 29 & 137438953471L | (long)in[58 + inPos] << 37 & 35184372088831L | (long)in[59 + inPos] << 45 & 9007199254740991L | (long)in[60 + inPos] << 53 & 2305843009213693951L;
         out[8 + outPos] = (long)in[61 + inPos] & 255L | (long)in[62 + inPos] << 8 & 65535L | (long)in[63 + inPos] << 16 & 16777215L | (long)in[64 + inPos] << 24 & 4294967295L | (long)in[65 + inPos] << 32 & 1099511627775L | (long)in[66 + inPos] << 40 & 281474976710655L | (long)in[67 + inPos] << 48 & 72057594037927935L | (long)in[68 + inPos] << 56 & 2305843009213693951L;
         out[9 + outPos] = (long)in[68 + inPos] >> 5 & 7L | (long)in[69 + inPos] << 3 & 2047L | (long)in[70 + inPos] << 11 & 524287L | (long)in[71 + inPos] << 19 & 134217727L | (long)in[72 + inPos] << 27 & 34359738367L | (long)in[73 + inPos] << 35 & 8796093022207L | (long)in[74 + inPos] << 43 & 2251799813685247L | (long)in[75 + inPos] << 51 & 576460752303423487L | (long)in[76 + inPos] << 59 & 2305843009213693951L;
         out[10 + outPos] = (long)in[76 + inPos] >> 2 & 63L | (long)in[77 + inPos] << 6 & 16383L | (long)in[78 + inPos] << 14 & 4194303L | (long)in[79 + inPos] << 22 & 1073741823L | (long)in[80 + inPos] << 30 & 274877906943L | (long)in[81 + inPos] << 38 & 70368744177663L | (long)in[82 + inPos] << 46 & 18014398509481983L | (long)in[83 + inPos] << 54 & 2305843009213693951L;
         out[11 + outPos] = (long)in[83 + inPos] >> 7 & 1L | (long)in[84 + inPos] << 1 & 511L | (long)in[85 + inPos] << 9 & 131071L | (long)in[86 + inPos] << 17 & 33554431L | (long)in[87 + inPos] << 25 & 8589934591L | (long)in[88 + inPos] << 33 & 2199023255551L | (long)in[89 + inPos] << 41 & 562949953421311L | (long)in[90 + inPos] << 49 & 144115188075855871L | (long)in[91 + inPos] << 57 & 2305843009213693951L;
         out[12 + outPos] = (long)in[91 + inPos] >> 4 & 15L | (long)in[92 + inPos] << 4 & 4095L | (long)in[93 + inPos] << 12 & 1048575L | (long)in[94 + inPos] << 20 & 268435455L | (long)in[95 + inPos] << 28 & 68719476735L | (long)in[96 + inPos] << 36 & 17592186044415L | (long)in[97 + inPos] << 44 & 4503599627370495L | (long)in[98 + inPos] << 52 & 1152921504606846975L | (long)in[99 + inPos] << 60 & 2305843009213693951L;
         out[13 + outPos] = (long)in[99 + inPos] >> 1 & 127L | (long)in[100 + inPos] << 7 & 32767L | (long)in[101 + inPos] << 15 & 8388607L | (long)in[102 + inPos] << 23 & 2147483647L | (long)in[103 + inPos] << 31 & 549755813887L | (long)in[104 + inPos] << 39 & 140737488355327L | (long)in[105 + inPos] << 47 & 36028797018963967L | (long)in[106 + inPos] << 55 & 2305843009213693951L;
         out[14 + outPos] = (long)in[106 + inPos] >> 6 & 3L | (long)in[107 + inPos] << 2 & 1023L | (long)in[108 + inPos] << 10 & 262143L | (long)in[109 + inPos] << 18 & 67108863L | (long)in[110 + inPos] << 26 & 17179869183L | (long)in[111 + inPos] << 34 & 4398046511103L | (long)in[112 + inPos] << 42 & 1125899906842623L | (long)in[113 + inPos] << 50 & 288230376151711743L | (long)in[114 + inPos] << 58 & 2305843009213693951L;
         out[15 + outPos] = (long)in[114 + inPos] >> 3 & 31L | (long)in[115 + inPos] << 5 & 8191L | (long)in[116 + inPos] << 13 & 2097151L | (long)in[117 + inPos] << 21 & 536870911L | (long)in[118 + inPos] << 29 & 137438953471L | (long)in[119 + inPos] << 37 & 35184372088831L | (long)in[120 + inPos] << 45 & 9007199254740991L | (long)in[121 + inPos] << 53 & 2305843009213693951L;
         out[16 + outPos] = (long)in[122 + inPos] & 255L | (long)in[123 + inPos] << 8 & 65535L | (long)in[124 + inPos] << 16 & 16777215L | (long)in[125 + inPos] << 24 & 4294967295L | (long)in[126 + inPos] << 32 & 1099511627775L | (long)in[127 + inPos] << 40 & 281474976710655L | (long)in[128 + inPos] << 48 & 72057594037927935L | (long)in[129 + inPos] << 56 & 2305843009213693951L;
         out[17 + outPos] = (long)in[129 + inPos] >> 5 & 7L | (long)in[130 + inPos] << 3 & 2047L | (long)in[131 + inPos] << 11 & 524287L | (long)in[132 + inPos] << 19 & 134217727L | (long)in[133 + inPos] << 27 & 34359738367L | (long)in[134 + inPos] << 35 & 8796093022207L | (long)in[135 + inPos] << 43 & 2251799813685247L | (long)in[136 + inPos] << 51 & 576460752303423487L | (long)in[137 + inPos] << 59 & 2305843009213693951L;
         out[18 + outPos] = (long)in[137 + inPos] >> 2 & 63L | (long)in[138 + inPos] << 6 & 16383L | (long)in[139 + inPos] << 14 & 4194303L | (long)in[140 + inPos] << 22 & 1073741823L | (long)in[141 + inPos] << 30 & 274877906943L | (long)in[142 + inPos] << 38 & 70368744177663L | (long)in[143 + inPos] << 46 & 18014398509481983L | (long)in[144 + inPos] << 54 & 2305843009213693951L;
         out[19 + outPos] = (long)in[144 + inPos] >> 7 & 1L | (long)in[145 + inPos] << 1 & 511L | (long)in[146 + inPos] << 9 & 131071L | (long)in[147 + inPos] << 17 & 33554431L | (long)in[148 + inPos] << 25 & 8589934591L | (long)in[149 + inPos] << 33 & 2199023255551L | (long)in[150 + inPos] << 41 & 562949953421311L | (long)in[151 + inPos] << 49 & 144115188075855871L | (long)in[152 + inPos] << 57 & 2305843009213693951L;
         out[20 + outPos] = (long)in[152 + inPos] >> 4 & 15L | (long)in[153 + inPos] << 4 & 4095L | (long)in[154 + inPos] << 12 & 1048575L | (long)in[155 + inPos] << 20 & 268435455L | (long)in[156 + inPos] << 28 & 68719476735L | (long)in[157 + inPos] << 36 & 17592186044415L | (long)in[158 + inPos] << 44 & 4503599627370495L | (long)in[159 + inPos] << 52 & 1152921504606846975L | (long)in[160 + inPos] << 60 & 2305843009213693951L;
         out[21 + outPos] = (long)in[160 + inPos] >> 1 & 127L | (long)in[161 + inPos] << 7 & 32767L | (long)in[162 + inPos] << 15 & 8388607L | (long)in[163 + inPos] << 23 & 2147483647L | (long)in[164 + inPos] << 31 & 549755813887L | (long)in[165 + inPos] << 39 & 140737488355327L | (long)in[166 + inPos] << 47 & 36028797018963967L | (long)in[167 + inPos] << 55 & 2305843009213693951L;
         out[22 + outPos] = (long)in[167 + inPos] >> 6 & 3L | (long)in[168 + inPos] << 2 & 1023L | (long)in[169 + inPos] << 10 & 262143L | (long)in[170 + inPos] << 18 & 67108863L | (long)in[171 + inPos] << 26 & 17179869183L | (long)in[172 + inPos] << 34 & 4398046511103L | (long)in[173 + inPos] << 42 & 1125899906842623L | (long)in[174 + inPos] << 50 & 288230376151711743L | (long)in[175 + inPos] << 58 & 2305843009213693951L;
         out[23 + outPos] = (long)in[175 + inPos] >> 3 & 31L | (long)in[176 + inPos] << 5 & 8191L | (long)in[177 + inPos] << 13 & 2097151L | (long)in[178 + inPos] << 21 & 536870911L | (long)in[179 + inPos] << 29 & 137438953471L | (long)in[180 + inPos] << 37 & 35184372088831L | (long)in[181 + inPos] << 45 & 9007199254740991L | (long)in[182 + inPos] << 53 & 2305843009213693951L;
         out[24 + outPos] = (long)in[183 + inPos] & 255L | (long)in[184 + inPos] << 8 & 65535L | (long)in[185 + inPos] << 16 & 16777215L | (long)in[186 + inPos] << 24 & 4294967295L | (long)in[187 + inPos] << 32 & 1099511627775L | (long)in[188 + inPos] << 40 & 281474976710655L | (long)in[189 + inPos] << 48 & 72057594037927935L | (long)in[190 + inPos] << 56 & 2305843009213693951L;
         out[25 + outPos] = (long)in[190 + inPos] >> 5 & 7L | (long)in[191 + inPos] << 3 & 2047L | (long)in[192 + inPos] << 11 & 524287L | (long)in[193 + inPos] << 19 & 134217727L | (long)in[194 + inPos] << 27 & 34359738367L | (long)in[195 + inPos] << 35 & 8796093022207L | (long)in[196 + inPos] << 43 & 2251799813685247L | (long)in[197 + inPos] << 51 & 576460752303423487L | (long)in[198 + inPos] << 59 & 2305843009213693951L;
         out[26 + outPos] = (long)in[198 + inPos] >> 2 & 63L | (long)in[199 + inPos] << 6 & 16383L | (long)in[200 + inPos] << 14 & 4194303L | (long)in[201 + inPos] << 22 & 1073741823L | (long)in[202 + inPos] << 30 & 274877906943L | (long)in[203 + inPos] << 38 & 70368744177663L | (long)in[204 + inPos] << 46 & 18014398509481983L | (long)in[205 + inPos] << 54 & 2305843009213693951L;
         out[27 + outPos] = (long)in[205 + inPos] >> 7 & 1L | (long)in[206 + inPos] << 1 & 511L | (long)in[207 + inPos] << 9 & 131071L | (long)in[208 + inPos] << 17 & 33554431L | (long)in[209 + inPos] << 25 & 8589934591L | (long)in[210 + inPos] << 33 & 2199023255551L | (long)in[211 + inPos] << 41 & 562949953421311L | (long)in[212 + inPos] << 49 & 144115188075855871L | (long)in[213 + inPos] << 57 & 2305843009213693951L;
         out[28 + outPos] = (long)in[213 + inPos] >> 4 & 15L | (long)in[214 + inPos] << 4 & 4095L | (long)in[215 + inPos] << 12 & 1048575L | (long)in[216 + inPos] << 20 & 268435455L | (long)in[217 + inPos] << 28 & 68719476735L | (long)in[218 + inPos] << 36 & 17592186044415L | (long)in[219 + inPos] << 44 & 4503599627370495L | (long)in[220 + inPos] << 52 & 1152921504606846975L | (long)in[221 + inPos] << 60 & 2305843009213693951L;
         out[29 + outPos] = (long)in[221 + inPos] >> 1 & 127L | (long)in[222 + inPos] << 7 & 32767L | (long)in[223 + inPos] << 15 & 8388607L | (long)in[224 + inPos] << 23 & 2147483647L | (long)in[225 + inPos] << 31 & 549755813887L | (long)in[226 + inPos] << 39 & 140737488355327L | (long)in[227 + inPos] << 47 & 36028797018963967L | (long)in[228 + inPos] << 55 & 2305843009213693951L;
         out[30 + outPos] = (long)in[228 + inPos] >> 6 & 3L | (long)in[229 + inPos] << 2 & 1023L | (long)in[230 + inPos] << 10 & 262143L | (long)in[231 + inPos] << 18 & 67108863L | (long)in[232 + inPos] << 26 & 17179869183L | (long)in[233 + inPos] << 34 & 4398046511103L | (long)in[234 + inPos] << 42 & 1125899906842623L | (long)in[235 + inPos] << 50 & 288230376151711743L | (long)in[236 + inPos] << 58 & 2305843009213693951L;
         out[31 + outPos] = (long)in[236 + inPos] >> 3 & 31L | (long)in[237 + inPos] << 5 & 8191L | (long)in[238 + inPos] << 13 & 2097151L | (long)in[239 + inPos] << 21 & 536870911L | (long)in[240 + inPos] << 29 & 137438953471L | (long)in[241 + inPos] << 37 & 35184372088831L | (long)in[242 + inPos] << 45 & 9007199254740991L | (long)in[243 + inPos] << 53 & 2305843009213693951L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & 2305843009213693951L;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 5 & 7L | (long)in.get(8 + inPos) << 3 & 2047L | (long)in.get(9 + inPos) << 11 & 524287L | (long)in.get(10 + inPos) << 19 & 134217727L | (long)in.get(11 + inPos) << 27 & 34359738367L | (long)in.get(12 + inPos) << 35 & 8796093022207L | (long)in.get(13 + inPos) << 43 & 2251799813685247L | (long)in.get(14 + inPos) << 51 & 576460752303423487L | (long)in.get(15 + inPos) << 59 & 2305843009213693951L;
         out[2 + outPos] = (long)in.get(15 + inPos) >> 2 & 63L | (long)in.get(16 + inPos) << 6 & 16383L | (long)in.get(17 + inPos) << 14 & 4194303L | (long)in.get(18 + inPos) << 22 & 1073741823L | (long)in.get(19 + inPos) << 30 & 274877906943L | (long)in.get(20 + inPos) << 38 & 70368744177663L | (long)in.get(21 + inPos) << 46 & 18014398509481983L | (long)in.get(22 + inPos) << 54 & 2305843009213693951L;
         out[3 + outPos] = (long)in.get(22 + inPos) >> 7 & 1L | (long)in.get(23 + inPos) << 1 & 511L | (long)in.get(24 + inPos) << 9 & 131071L | (long)in.get(25 + inPos) << 17 & 33554431L | (long)in.get(26 + inPos) << 25 & 8589934591L | (long)in.get(27 + inPos) << 33 & 2199023255551L | (long)in.get(28 + inPos) << 41 & 562949953421311L | (long)in.get(29 + inPos) << 49 & 144115188075855871L | (long)in.get(30 + inPos) << 57 & 2305843009213693951L;
         out[4 + outPos] = (long)in.get(30 + inPos) >> 4 & 15L | (long)in.get(31 + inPos) << 4 & 4095L | (long)in.get(32 + inPos) << 12 & 1048575L | (long)in.get(33 + inPos) << 20 & 268435455L | (long)in.get(34 + inPos) << 28 & 68719476735L | (long)in.get(35 + inPos) << 36 & 17592186044415L | (long)in.get(36 + inPos) << 44 & 4503599627370495L | (long)in.get(37 + inPos) << 52 & 1152921504606846975L | (long)in.get(38 + inPos) << 60 & 2305843009213693951L;
         out[5 + outPos] = (long)in.get(38 + inPos) >> 1 & 127L | (long)in.get(39 + inPos) << 7 & 32767L | (long)in.get(40 + inPos) << 15 & 8388607L | (long)in.get(41 + inPos) << 23 & 2147483647L | (long)in.get(42 + inPos) << 31 & 549755813887L | (long)in.get(43 + inPos) << 39 & 140737488355327L | (long)in.get(44 + inPos) << 47 & 36028797018963967L | (long)in.get(45 + inPos) << 55 & 2305843009213693951L;
         out[6 + outPos] = (long)in.get(45 + inPos) >> 6 & 3L | (long)in.get(46 + inPos) << 2 & 1023L | (long)in.get(47 + inPos) << 10 & 262143L | (long)in.get(48 + inPos) << 18 & 67108863L | (long)in.get(49 + inPos) << 26 & 17179869183L | (long)in.get(50 + inPos) << 34 & 4398046511103L | (long)in.get(51 + inPos) << 42 & 1125899906842623L | (long)in.get(52 + inPos) << 50 & 288230376151711743L | (long)in.get(53 + inPos) << 58 & 2305843009213693951L;
         out[7 + outPos] = (long)in.get(53 + inPos) >> 3 & 31L | (long)in.get(54 + inPos) << 5 & 8191L | (long)in.get(55 + inPos) << 13 & 2097151L | (long)in.get(56 + inPos) << 21 & 536870911L | (long)in.get(57 + inPos) << 29 & 137438953471L | (long)in.get(58 + inPos) << 37 & 35184372088831L | (long)in.get(59 + inPos) << 45 & 9007199254740991L | (long)in.get(60 + inPos) << 53 & 2305843009213693951L;
         out[8 + outPos] = (long)in.get(61 + inPos) & 255L | (long)in.get(62 + inPos) << 8 & 65535L | (long)in.get(63 + inPos) << 16 & 16777215L | (long)in.get(64 + inPos) << 24 & 4294967295L | (long)in.get(65 + inPos) << 32 & 1099511627775L | (long)in.get(66 + inPos) << 40 & 281474976710655L | (long)in.get(67 + inPos) << 48 & 72057594037927935L | (long)in.get(68 + inPos) << 56 & 2305843009213693951L;
         out[9 + outPos] = (long)in.get(68 + inPos) >> 5 & 7L | (long)in.get(69 + inPos) << 3 & 2047L | (long)in.get(70 + inPos) << 11 & 524287L | (long)in.get(71 + inPos) << 19 & 134217727L | (long)in.get(72 + inPos) << 27 & 34359738367L | (long)in.get(73 + inPos) << 35 & 8796093022207L | (long)in.get(74 + inPos) << 43 & 2251799813685247L | (long)in.get(75 + inPos) << 51 & 576460752303423487L | (long)in.get(76 + inPos) << 59 & 2305843009213693951L;
         out[10 + outPos] = (long)in.get(76 + inPos) >> 2 & 63L | (long)in.get(77 + inPos) << 6 & 16383L | (long)in.get(78 + inPos) << 14 & 4194303L | (long)in.get(79 + inPos) << 22 & 1073741823L | (long)in.get(80 + inPos) << 30 & 274877906943L | (long)in.get(81 + inPos) << 38 & 70368744177663L | (long)in.get(82 + inPos) << 46 & 18014398509481983L | (long)in.get(83 + inPos) << 54 & 2305843009213693951L;
         out[11 + outPos] = (long)in.get(83 + inPos) >> 7 & 1L | (long)in.get(84 + inPos) << 1 & 511L | (long)in.get(85 + inPos) << 9 & 131071L | (long)in.get(86 + inPos) << 17 & 33554431L | (long)in.get(87 + inPos) << 25 & 8589934591L | (long)in.get(88 + inPos) << 33 & 2199023255551L | (long)in.get(89 + inPos) << 41 & 562949953421311L | (long)in.get(90 + inPos) << 49 & 144115188075855871L | (long)in.get(91 + inPos) << 57 & 2305843009213693951L;
         out[12 + outPos] = (long)in.get(91 + inPos) >> 4 & 15L | (long)in.get(92 + inPos) << 4 & 4095L | (long)in.get(93 + inPos) << 12 & 1048575L | (long)in.get(94 + inPos) << 20 & 268435455L | (long)in.get(95 + inPos) << 28 & 68719476735L | (long)in.get(96 + inPos) << 36 & 17592186044415L | (long)in.get(97 + inPos) << 44 & 4503599627370495L | (long)in.get(98 + inPos) << 52 & 1152921504606846975L | (long)in.get(99 + inPos) << 60 & 2305843009213693951L;
         out[13 + outPos] = (long)in.get(99 + inPos) >> 1 & 127L | (long)in.get(100 + inPos) << 7 & 32767L | (long)in.get(101 + inPos) << 15 & 8388607L | (long)in.get(102 + inPos) << 23 & 2147483647L | (long)in.get(103 + inPos) << 31 & 549755813887L | (long)in.get(104 + inPos) << 39 & 140737488355327L | (long)in.get(105 + inPos) << 47 & 36028797018963967L | (long)in.get(106 + inPos) << 55 & 2305843009213693951L;
         out[14 + outPos] = (long)in.get(106 + inPos) >> 6 & 3L | (long)in.get(107 + inPos) << 2 & 1023L | (long)in.get(108 + inPos) << 10 & 262143L | (long)in.get(109 + inPos) << 18 & 67108863L | (long)in.get(110 + inPos) << 26 & 17179869183L | (long)in.get(111 + inPos) << 34 & 4398046511103L | (long)in.get(112 + inPos) << 42 & 1125899906842623L | (long)in.get(113 + inPos) << 50 & 288230376151711743L | (long)in.get(114 + inPos) << 58 & 2305843009213693951L;
         out[15 + outPos] = (long)in.get(114 + inPos) >> 3 & 31L | (long)in.get(115 + inPos) << 5 & 8191L | (long)in.get(116 + inPos) << 13 & 2097151L | (long)in.get(117 + inPos) << 21 & 536870911L | (long)in.get(118 + inPos) << 29 & 137438953471L | (long)in.get(119 + inPos) << 37 & 35184372088831L | (long)in.get(120 + inPos) << 45 & 9007199254740991L | (long)in.get(121 + inPos) << 53 & 2305843009213693951L;
         out[16 + outPos] = (long)in.get(122 + inPos) & 255L | (long)in.get(123 + inPos) << 8 & 65535L | (long)in.get(124 + inPos) << 16 & 16777215L | (long)in.get(125 + inPos) << 24 & 4294967295L | (long)in.get(126 + inPos) << 32 & 1099511627775L | (long)in.get(127 + inPos) << 40 & 281474976710655L | (long)in.get(128 + inPos) << 48 & 72057594037927935L | (long)in.get(129 + inPos) << 56 & 2305843009213693951L;
         out[17 + outPos] = (long)in.get(129 + inPos) >> 5 & 7L | (long)in.get(130 + inPos) << 3 & 2047L | (long)in.get(131 + inPos) << 11 & 524287L | (long)in.get(132 + inPos) << 19 & 134217727L | (long)in.get(133 + inPos) << 27 & 34359738367L | (long)in.get(134 + inPos) << 35 & 8796093022207L | (long)in.get(135 + inPos) << 43 & 2251799813685247L | (long)in.get(136 + inPos) << 51 & 576460752303423487L | (long)in.get(137 + inPos) << 59 & 2305843009213693951L;
         out[18 + outPos] = (long)in.get(137 + inPos) >> 2 & 63L | (long)in.get(138 + inPos) << 6 & 16383L | (long)in.get(139 + inPos) << 14 & 4194303L | (long)in.get(140 + inPos) << 22 & 1073741823L | (long)in.get(141 + inPos) << 30 & 274877906943L | (long)in.get(142 + inPos) << 38 & 70368744177663L | (long)in.get(143 + inPos) << 46 & 18014398509481983L | (long)in.get(144 + inPos) << 54 & 2305843009213693951L;
         out[19 + outPos] = (long)in.get(144 + inPos) >> 7 & 1L | (long)in.get(145 + inPos) << 1 & 511L | (long)in.get(146 + inPos) << 9 & 131071L | (long)in.get(147 + inPos) << 17 & 33554431L | (long)in.get(148 + inPos) << 25 & 8589934591L | (long)in.get(149 + inPos) << 33 & 2199023255551L | (long)in.get(150 + inPos) << 41 & 562949953421311L | (long)in.get(151 + inPos) << 49 & 144115188075855871L | (long)in.get(152 + inPos) << 57 & 2305843009213693951L;
         out[20 + outPos] = (long)in.get(152 + inPos) >> 4 & 15L | (long)in.get(153 + inPos) << 4 & 4095L | (long)in.get(154 + inPos) << 12 & 1048575L | (long)in.get(155 + inPos) << 20 & 268435455L | (long)in.get(156 + inPos) << 28 & 68719476735L | (long)in.get(157 + inPos) << 36 & 17592186044415L | (long)in.get(158 + inPos) << 44 & 4503599627370495L | (long)in.get(159 + inPos) << 52 & 1152921504606846975L | (long)in.get(160 + inPos) << 60 & 2305843009213693951L;
         out[21 + outPos] = (long)in.get(160 + inPos) >> 1 & 127L | (long)in.get(161 + inPos) << 7 & 32767L | (long)in.get(162 + inPos) << 15 & 8388607L | (long)in.get(163 + inPos) << 23 & 2147483647L | (long)in.get(164 + inPos) << 31 & 549755813887L | (long)in.get(165 + inPos) << 39 & 140737488355327L | (long)in.get(166 + inPos) << 47 & 36028797018963967L | (long)in.get(167 + inPos) << 55 & 2305843009213693951L;
         out[22 + outPos] = (long)in.get(167 + inPos) >> 6 & 3L | (long)in.get(168 + inPos) << 2 & 1023L | (long)in.get(169 + inPos) << 10 & 262143L | (long)in.get(170 + inPos) << 18 & 67108863L | (long)in.get(171 + inPos) << 26 & 17179869183L | (long)in.get(172 + inPos) << 34 & 4398046511103L | (long)in.get(173 + inPos) << 42 & 1125899906842623L | (long)in.get(174 + inPos) << 50 & 288230376151711743L | (long)in.get(175 + inPos) << 58 & 2305843009213693951L;
         out[23 + outPos] = (long)in.get(175 + inPos) >> 3 & 31L | (long)in.get(176 + inPos) << 5 & 8191L | (long)in.get(177 + inPos) << 13 & 2097151L | (long)in.get(178 + inPos) << 21 & 536870911L | (long)in.get(179 + inPos) << 29 & 137438953471L | (long)in.get(180 + inPos) << 37 & 35184372088831L | (long)in.get(181 + inPos) << 45 & 9007199254740991L | (long)in.get(182 + inPos) << 53 & 2305843009213693951L;
         out[24 + outPos] = (long)in.get(183 + inPos) & 255L | (long)in.get(184 + inPos) << 8 & 65535L | (long)in.get(185 + inPos) << 16 & 16777215L | (long)in.get(186 + inPos) << 24 & 4294967295L | (long)in.get(187 + inPos) << 32 & 1099511627775L | (long)in.get(188 + inPos) << 40 & 281474976710655L | (long)in.get(189 + inPos) << 48 & 72057594037927935L | (long)in.get(190 + inPos) << 56 & 2305843009213693951L;
         out[25 + outPos] = (long)in.get(190 + inPos) >> 5 & 7L | (long)in.get(191 + inPos) << 3 & 2047L | (long)in.get(192 + inPos) << 11 & 524287L | (long)in.get(193 + inPos) << 19 & 134217727L | (long)in.get(194 + inPos) << 27 & 34359738367L | (long)in.get(195 + inPos) << 35 & 8796093022207L | (long)in.get(196 + inPos) << 43 & 2251799813685247L | (long)in.get(197 + inPos) << 51 & 576460752303423487L | (long)in.get(198 + inPos) << 59 & 2305843009213693951L;
         out[26 + outPos] = (long)in.get(198 + inPos) >> 2 & 63L | (long)in.get(199 + inPos) << 6 & 16383L | (long)in.get(200 + inPos) << 14 & 4194303L | (long)in.get(201 + inPos) << 22 & 1073741823L | (long)in.get(202 + inPos) << 30 & 274877906943L | (long)in.get(203 + inPos) << 38 & 70368744177663L | (long)in.get(204 + inPos) << 46 & 18014398509481983L | (long)in.get(205 + inPos) << 54 & 2305843009213693951L;
         out[27 + outPos] = (long)in.get(205 + inPos) >> 7 & 1L | (long)in.get(206 + inPos) << 1 & 511L | (long)in.get(207 + inPos) << 9 & 131071L | (long)in.get(208 + inPos) << 17 & 33554431L | (long)in.get(209 + inPos) << 25 & 8589934591L | (long)in.get(210 + inPos) << 33 & 2199023255551L | (long)in.get(211 + inPos) << 41 & 562949953421311L | (long)in.get(212 + inPos) << 49 & 144115188075855871L | (long)in.get(213 + inPos) << 57 & 2305843009213693951L;
         out[28 + outPos] = (long)in.get(213 + inPos) >> 4 & 15L | (long)in.get(214 + inPos) << 4 & 4095L | (long)in.get(215 + inPos) << 12 & 1048575L | (long)in.get(216 + inPos) << 20 & 268435455L | (long)in.get(217 + inPos) << 28 & 68719476735L | (long)in.get(218 + inPos) << 36 & 17592186044415L | (long)in.get(219 + inPos) << 44 & 4503599627370495L | (long)in.get(220 + inPos) << 52 & 1152921504606846975L | (long)in.get(221 + inPos) << 60 & 2305843009213693951L;
         out[29 + outPos] = (long)in.get(221 + inPos) >> 1 & 127L | (long)in.get(222 + inPos) << 7 & 32767L | (long)in.get(223 + inPos) << 15 & 8388607L | (long)in.get(224 + inPos) << 23 & 2147483647L | (long)in.get(225 + inPos) << 31 & 549755813887L | (long)in.get(226 + inPos) << 39 & 140737488355327L | (long)in.get(227 + inPos) << 47 & 36028797018963967L | (long)in.get(228 + inPos) << 55 & 2305843009213693951L;
         out[30 + outPos] = (long)in.get(228 + inPos) >> 6 & 3L | (long)in.get(229 + inPos) << 2 & 1023L | (long)in.get(230 + inPos) << 10 & 262143L | (long)in.get(231 + inPos) << 18 & 67108863L | (long)in.get(232 + inPos) << 26 & 17179869183L | (long)in.get(233 + inPos) << 34 & 4398046511103L | (long)in.get(234 + inPos) << 42 & 1125899906842623L | (long)in.get(235 + inPos) << 50 & 288230376151711743L | (long)in.get(236 + inPos) << 58 & 2305843009213693951L;
         out[31 + outPos] = (long)in.get(236 + inPos) >> 3 & 31L | (long)in.get(237 + inPos) << 5 & 8191L | (long)in.get(238 + inPos) << 13 & 2097151L | (long)in.get(239 + inPos) << 21 & 536870911L | (long)in.get(240 + inPos) << 29 & 137438953471L | (long)in.get(241 + inPos) << 37 & 35184372088831L | (long)in.get(242 + inPos) << 45 & 9007199254740991L | (long)in.get(243 + inPos) << 53 & 2305843009213693951L;
      }
   }

   private static final class Packer62 extends BytePackerForLong {
      private Packer62() {
         super(62);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 4611686018427387903L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 4611686018427387903L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 4611686018427387903L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 4611686018427387903L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 4611686018427387903L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 4611686018427387903L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 4611686018427387903L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & 4611686018427387903L) >>> 56 | (in[1 + inPos] & 4611686018427387903L) << 6) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 2 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 10 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 18 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 26 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 34 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 42 & 255L));
         out[14 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 50 & 255L));
         out[15 + outPos] = (byte)((int)(((in[1 + inPos] & 4611686018427387903L) >>> 58 | (in[2 + inPos] & 4611686018427387903L) << 4) & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 4 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 12 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 20 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 28 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 36 & 255L));
         out[21 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 44 & 255L));
         out[22 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 52 & 255L));
         out[23 + outPos] = (byte)((int)(((in[2 + inPos] & 4611686018427387903L) >>> 60 | (in[3 + inPos] & 4611686018427387903L) << 2) & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 6 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 14 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 22 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 30 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 38 & 255L));
         out[29 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 46 & 255L));
         out[30 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 54 & 255L));
         out[31 + outPos] = (byte)((int)(in[4 + inPos] & 4611686018427387903L & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 4611686018427387903L) >>> 8 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 4611686018427387903L) >>> 16 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 4611686018427387903L) >>> 24 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & 4611686018427387903L) >>> 32 & 255L));
         out[36 + outPos] = (byte)((int)((in[4 + inPos] & 4611686018427387903L) >>> 40 & 255L));
         out[37 + outPos] = (byte)((int)((in[4 + inPos] & 4611686018427387903L) >>> 48 & 255L));
         out[38 + outPos] = (byte)((int)(((in[4 + inPos] & 4611686018427387903L) >>> 56 | (in[5 + inPos] & 4611686018427387903L) << 6) & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 2 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 10 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 18 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 26 & 255L));
         out[43 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 34 & 255L));
         out[44 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 42 & 255L));
         out[45 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 50 & 255L));
         out[46 + outPos] = (byte)((int)(((in[5 + inPos] & 4611686018427387903L) >>> 58 | (in[6 + inPos] & 4611686018427387903L) << 4) & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 4 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 12 & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 20 & 255L));
         out[50 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 28 & 255L));
         out[51 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 36 & 255L));
         out[52 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 44 & 255L));
         out[53 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 52 & 255L));
         out[54 + outPos] = (byte)((int)(((in[6 + inPos] & 4611686018427387903L) >>> 60 | (in[7 + inPos] & 4611686018427387903L) << 2) & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 6 & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 14 & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 22 & 255L));
         out[58 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 30 & 255L));
         out[59 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 38 & 255L));
         out[60 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 46 & 255L));
         out[61 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 54 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & 4611686018427387903L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & 4611686018427387903L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & 4611686018427387903L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & 4611686018427387903L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & 4611686018427387903L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & 4611686018427387903L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & 4611686018427387903L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & 4611686018427387903L) >>> 56 | (in[1 + inPos] & 4611686018427387903L) << 6) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 2 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 10 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 18 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 26 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 34 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 42 & 255L));
         out[14 + outPos] = (byte)((int)((in[1 + inPos] & 4611686018427387903L) >>> 50 & 255L));
         out[15 + outPos] = (byte)((int)(((in[1 + inPos] & 4611686018427387903L) >>> 58 | (in[2 + inPos] & 4611686018427387903L) << 4) & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 4 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 12 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 20 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 28 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 36 & 255L));
         out[21 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 44 & 255L));
         out[22 + outPos] = (byte)((int)((in[2 + inPos] & 4611686018427387903L) >>> 52 & 255L));
         out[23 + outPos] = (byte)((int)(((in[2 + inPos] & 4611686018427387903L) >>> 60 | (in[3 + inPos] & 4611686018427387903L) << 2) & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 6 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 14 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 22 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 30 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 38 & 255L));
         out[29 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 46 & 255L));
         out[30 + outPos] = (byte)((int)((in[3 + inPos] & 4611686018427387903L) >>> 54 & 255L));
         out[31 + outPos] = (byte)((int)(in[4 + inPos] & 4611686018427387903L & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & 4611686018427387903L) >>> 8 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & 4611686018427387903L) >>> 16 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & 4611686018427387903L) >>> 24 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & 4611686018427387903L) >>> 32 & 255L));
         out[36 + outPos] = (byte)((int)((in[4 + inPos] & 4611686018427387903L) >>> 40 & 255L));
         out[37 + outPos] = (byte)((int)((in[4 + inPos] & 4611686018427387903L) >>> 48 & 255L));
         out[38 + outPos] = (byte)((int)(((in[4 + inPos] & 4611686018427387903L) >>> 56 | (in[5 + inPos] & 4611686018427387903L) << 6) & 255L));
         out[39 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 2 & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 10 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 18 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 26 & 255L));
         out[43 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 34 & 255L));
         out[44 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 42 & 255L));
         out[45 + outPos] = (byte)((int)((in[5 + inPos] & 4611686018427387903L) >>> 50 & 255L));
         out[46 + outPos] = (byte)((int)(((in[5 + inPos] & 4611686018427387903L) >>> 58 | (in[6 + inPos] & 4611686018427387903L) << 4) & 255L));
         out[47 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 4 & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 12 & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 20 & 255L));
         out[50 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 28 & 255L));
         out[51 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 36 & 255L));
         out[52 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 44 & 255L));
         out[53 + outPos] = (byte)((int)((in[6 + inPos] & 4611686018427387903L) >>> 52 & 255L));
         out[54 + outPos] = (byte)((int)(((in[6 + inPos] & 4611686018427387903L) >>> 60 | (in[7 + inPos] & 4611686018427387903L) << 2) & 255L));
         out[55 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 6 & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 14 & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 22 & 255L));
         out[58 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 30 & 255L));
         out[59 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 38 & 255L));
         out[60 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 46 & 255L));
         out[61 + outPos] = (byte)((int)((in[7 + inPos] & 4611686018427387903L) >>> 54 & 255L));
         out[62 + outPos] = (byte)((int)(in[8 + inPos] & 4611686018427387903L & 255L));
         out[63 + outPos] = (byte)((int)((in[8 + inPos] & 4611686018427387903L) >>> 8 & 255L));
         out[64 + outPos] = (byte)((int)((in[8 + inPos] & 4611686018427387903L) >>> 16 & 255L));
         out[65 + outPos] = (byte)((int)((in[8 + inPos] & 4611686018427387903L) >>> 24 & 255L));
         out[66 + outPos] = (byte)((int)((in[8 + inPos] & 4611686018427387903L) >>> 32 & 255L));
         out[67 + outPos] = (byte)((int)((in[8 + inPos] & 4611686018427387903L) >>> 40 & 255L));
         out[68 + outPos] = (byte)((int)((in[8 + inPos] & 4611686018427387903L) >>> 48 & 255L));
         out[69 + outPos] = (byte)((int)(((in[8 + inPos] & 4611686018427387903L) >>> 56 | (in[9 + inPos] & 4611686018427387903L) << 6) & 255L));
         out[70 + outPos] = (byte)((int)((in[9 + inPos] & 4611686018427387903L) >>> 2 & 255L));
         out[71 + outPos] = (byte)((int)((in[9 + inPos] & 4611686018427387903L) >>> 10 & 255L));
         out[72 + outPos] = (byte)((int)((in[9 + inPos] & 4611686018427387903L) >>> 18 & 255L));
         out[73 + outPos] = (byte)((int)((in[9 + inPos] & 4611686018427387903L) >>> 26 & 255L));
         out[74 + outPos] = (byte)((int)((in[9 + inPos] & 4611686018427387903L) >>> 34 & 255L));
         out[75 + outPos] = (byte)((int)((in[9 + inPos] & 4611686018427387903L) >>> 42 & 255L));
         out[76 + outPos] = (byte)((int)((in[9 + inPos] & 4611686018427387903L) >>> 50 & 255L));
         out[77 + outPos] = (byte)((int)(((in[9 + inPos] & 4611686018427387903L) >>> 58 | (in[10 + inPos] & 4611686018427387903L) << 4) & 255L));
         out[78 + outPos] = (byte)((int)((in[10 + inPos] & 4611686018427387903L) >>> 4 & 255L));
         out[79 + outPos] = (byte)((int)((in[10 + inPos] & 4611686018427387903L) >>> 12 & 255L));
         out[80 + outPos] = (byte)((int)((in[10 + inPos] & 4611686018427387903L) >>> 20 & 255L));
         out[81 + outPos] = (byte)((int)((in[10 + inPos] & 4611686018427387903L) >>> 28 & 255L));
         out[82 + outPos] = (byte)((int)((in[10 + inPos] & 4611686018427387903L) >>> 36 & 255L));
         out[83 + outPos] = (byte)((int)((in[10 + inPos] & 4611686018427387903L) >>> 44 & 255L));
         out[84 + outPos] = (byte)((int)((in[10 + inPos] & 4611686018427387903L) >>> 52 & 255L));
         out[85 + outPos] = (byte)((int)(((in[10 + inPos] & 4611686018427387903L) >>> 60 | (in[11 + inPos] & 4611686018427387903L) << 2) & 255L));
         out[86 + outPos] = (byte)((int)((in[11 + inPos] & 4611686018427387903L) >>> 6 & 255L));
         out[87 + outPos] = (byte)((int)((in[11 + inPos] & 4611686018427387903L) >>> 14 & 255L));
         out[88 + outPos] = (byte)((int)((in[11 + inPos] & 4611686018427387903L) >>> 22 & 255L));
         out[89 + outPos] = (byte)((int)((in[11 + inPos] & 4611686018427387903L) >>> 30 & 255L));
         out[90 + outPos] = (byte)((int)((in[11 + inPos] & 4611686018427387903L) >>> 38 & 255L));
         out[91 + outPos] = (byte)((int)((in[11 + inPos] & 4611686018427387903L) >>> 46 & 255L));
         out[92 + outPos] = (byte)((int)((in[11 + inPos] & 4611686018427387903L) >>> 54 & 255L));
         out[93 + outPos] = (byte)((int)(in[12 + inPos] & 4611686018427387903L & 255L));
         out[94 + outPos] = (byte)((int)((in[12 + inPos] & 4611686018427387903L) >>> 8 & 255L));
         out[95 + outPos] = (byte)((int)((in[12 + inPos] & 4611686018427387903L) >>> 16 & 255L));
         out[96 + outPos] = (byte)((int)((in[12 + inPos] & 4611686018427387903L) >>> 24 & 255L));
         out[97 + outPos] = (byte)((int)((in[12 + inPos] & 4611686018427387903L) >>> 32 & 255L));
         out[98 + outPos] = (byte)((int)((in[12 + inPos] & 4611686018427387903L) >>> 40 & 255L));
         out[99 + outPos] = (byte)((int)((in[12 + inPos] & 4611686018427387903L) >>> 48 & 255L));
         out[100 + outPos] = (byte)((int)(((in[12 + inPos] & 4611686018427387903L) >>> 56 | (in[13 + inPos] & 4611686018427387903L) << 6) & 255L));
         out[101 + outPos] = (byte)((int)((in[13 + inPos] & 4611686018427387903L) >>> 2 & 255L));
         out[102 + outPos] = (byte)((int)((in[13 + inPos] & 4611686018427387903L) >>> 10 & 255L));
         out[103 + outPos] = (byte)((int)((in[13 + inPos] & 4611686018427387903L) >>> 18 & 255L));
         out[104 + outPos] = (byte)((int)((in[13 + inPos] & 4611686018427387903L) >>> 26 & 255L));
         out[105 + outPos] = (byte)((int)((in[13 + inPos] & 4611686018427387903L) >>> 34 & 255L));
         out[106 + outPos] = (byte)((int)((in[13 + inPos] & 4611686018427387903L) >>> 42 & 255L));
         out[107 + outPos] = (byte)((int)((in[13 + inPos] & 4611686018427387903L) >>> 50 & 255L));
         out[108 + outPos] = (byte)((int)(((in[13 + inPos] & 4611686018427387903L) >>> 58 | (in[14 + inPos] & 4611686018427387903L) << 4) & 255L));
         out[109 + outPos] = (byte)((int)((in[14 + inPos] & 4611686018427387903L) >>> 4 & 255L));
         out[110 + outPos] = (byte)((int)((in[14 + inPos] & 4611686018427387903L) >>> 12 & 255L));
         out[111 + outPos] = (byte)((int)((in[14 + inPos] & 4611686018427387903L) >>> 20 & 255L));
         out[112 + outPos] = (byte)((int)((in[14 + inPos] & 4611686018427387903L) >>> 28 & 255L));
         out[113 + outPos] = (byte)((int)((in[14 + inPos] & 4611686018427387903L) >>> 36 & 255L));
         out[114 + outPos] = (byte)((int)((in[14 + inPos] & 4611686018427387903L) >>> 44 & 255L));
         out[115 + outPos] = (byte)((int)((in[14 + inPos] & 4611686018427387903L) >>> 52 & 255L));
         out[116 + outPos] = (byte)((int)(((in[14 + inPos] & 4611686018427387903L) >>> 60 | (in[15 + inPos] & 4611686018427387903L) << 2) & 255L));
         out[117 + outPos] = (byte)((int)((in[15 + inPos] & 4611686018427387903L) >>> 6 & 255L));
         out[118 + outPos] = (byte)((int)((in[15 + inPos] & 4611686018427387903L) >>> 14 & 255L));
         out[119 + outPos] = (byte)((int)((in[15 + inPos] & 4611686018427387903L) >>> 22 & 255L));
         out[120 + outPos] = (byte)((int)((in[15 + inPos] & 4611686018427387903L) >>> 30 & 255L));
         out[121 + outPos] = (byte)((int)((in[15 + inPos] & 4611686018427387903L) >>> 38 & 255L));
         out[122 + outPos] = (byte)((int)((in[15 + inPos] & 4611686018427387903L) >>> 46 & 255L));
         out[123 + outPos] = (byte)((int)((in[15 + inPos] & 4611686018427387903L) >>> 54 & 255L));
         out[124 + outPos] = (byte)((int)(in[16 + inPos] & 4611686018427387903L & 255L));
         out[125 + outPos] = (byte)((int)((in[16 + inPos] & 4611686018427387903L) >>> 8 & 255L));
         out[126 + outPos] = (byte)((int)((in[16 + inPos] & 4611686018427387903L) >>> 16 & 255L));
         out[127 + outPos] = (byte)((int)((in[16 + inPos] & 4611686018427387903L) >>> 24 & 255L));
         out[128 + outPos] = (byte)((int)((in[16 + inPos] & 4611686018427387903L) >>> 32 & 255L));
         out[129 + outPos] = (byte)((int)((in[16 + inPos] & 4611686018427387903L) >>> 40 & 255L));
         out[130 + outPos] = (byte)((int)((in[16 + inPos] & 4611686018427387903L) >>> 48 & 255L));
         out[131 + outPos] = (byte)((int)(((in[16 + inPos] & 4611686018427387903L) >>> 56 | (in[17 + inPos] & 4611686018427387903L) << 6) & 255L));
         out[132 + outPos] = (byte)((int)((in[17 + inPos] & 4611686018427387903L) >>> 2 & 255L));
         out[133 + outPos] = (byte)((int)((in[17 + inPos] & 4611686018427387903L) >>> 10 & 255L));
         out[134 + outPos] = (byte)((int)((in[17 + inPos] & 4611686018427387903L) >>> 18 & 255L));
         out[135 + outPos] = (byte)((int)((in[17 + inPos] & 4611686018427387903L) >>> 26 & 255L));
         out[136 + outPos] = (byte)((int)((in[17 + inPos] & 4611686018427387903L) >>> 34 & 255L));
         out[137 + outPos] = (byte)((int)((in[17 + inPos] & 4611686018427387903L) >>> 42 & 255L));
         out[138 + outPos] = (byte)((int)((in[17 + inPos] & 4611686018427387903L) >>> 50 & 255L));
         out[139 + outPos] = (byte)((int)(((in[17 + inPos] & 4611686018427387903L) >>> 58 | (in[18 + inPos] & 4611686018427387903L) << 4) & 255L));
         out[140 + outPos] = (byte)((int)((in[18 + inPos] & 4611686018427387903L) >>> 4 & 255L));
         out[141 + outPos] = (byte)((int)((in[18 + inPos] & 4611686018427387903L) >>> 12 & 255L));
         out[142 + outPos] = (byte)((int)((in[18 + inPos] & 4611686018427387903L) >>> 20 & 255L));
         out[143 + outPos] = (byte)((int)((in[18 + inPos] & 4611686018427387903L) >>> 28 & 255L));
         out[144 + outPos] = (byte)((int)((in[18 + inPos] & 4611686018427387903L) >>> 36 & 255L));
         out[145 + outPos] = (byte)((int)((in[18 + inPos] & 4611686018427387903L) >>> 44 & 255L));
         out[146 + outPos] = (byte)((int)((in[18 + inPos] & 4611686018427387903L) >>> 52 & 255L));
         out[147 + outPos] = (byte)((int)(((in[18 + inPos] & 4611686018427387903L) >>> 60 | (in[19 + inPos] & 4611686018427387903L) << 2) & 255L));
         out[148 + outPos] = (byte)((int)((in[19 + inPos] & 4611686018427387903L) >>> 6 & 255L));
         out[149 + outPos] = (byte)((int)((in[19 + inPos] & 4611686018427387903L) >>> 14 & 255L));
         out[150 + outPos] = (byte)((int)((in[19 + inPos] & 4611686018427387903L) >>> 22 & 255L));
         out[151 + outPos] = (byte)((int)((in[19 + inPos] & 4611686018427387903L) >>> 30 & 255L));
         out[152 + outPos] = (byte)((int)((in[19 + inPos] & 4611686018427387903L) >>> 38 & 255L));
         out[153 + outPos] = (byte)((int)((in[19 + inPos] & 4611686018427387903L) >>> 46 & 255L));
         out[154 + outPos] = (byte)((int)((in[19 + inPos] & 4611686018427387903L) >>> 54 & 255L));
         out[155 + outPos] = (byte)((int)(in[20 + inPos] & 4611686018427387903L & 255L));
         out[156 + outPos] = (byte)((int)((in[20 + inPos] & 4611686018427387903L) >>> 8 & 255L));
         out[157 + outPos] = (byte)((int)((in[20 + inPos] & 4611686018427387903L) >>> 16 & 255L));
         out[158 + outPos] = (byte)((int)((in[20 + inPos] & 4611686018427387903L) >>> 24 & 255L));
         out[159 + outPos] = (byte)((int)((in[20 + inPos] & 4611686018427387903L) >>> 32 & 255L));
         out[160 + outPos] = (byte)((int)((in[20 + inPos] & 4611686018427387903L) >>> 40 & 255L));
         out[161 + outPos] = (byte)((int)((in[20 + inPos] & 4611686018427387903L) >>> 48 & 255L));
         out[162 + outPos] = (byte)((int)(((in[20 + inPos] & 4611686018427387903L) >>> 56 | (in[21 + inPos] & 4611686018427387903L) << 6) & 255L));
         out[163 + outPos] = (byte)((int)((in[21 + inPos] & 4611686018427387903L) >>> 2 & 255L));
         out[164 + outPos] = (byte)((int)((in[21 + inPos] & 4611686018427387903L) >>> 10 & 255L));
         out[165 + outPos] = (byte)((int)((in[21 + inPos] & 4611686018427387903L) >>> 18 & 255L));
         out[166 + outPos] = (byte)((int)((in[21 + inPos] & 4611686018427387903L) >>> 26 & 255L));
         out[167 + outPos] = (byte)((int)((in[21 + inPos] & 4611686018427387903L) >>> 34 & 255L));
         out[168 + outPos] = (byte)((int)((in[21 + inPos] & 4611686018427387903L) >>> 42 & 255L));
         out[169 + outPos] = (byte)((int)((in[21 + inPos] & 4611686018427387903L) >>> 50 & 255L));
         out[170 + outPos] = (byte)((int)(((in[21 + inPos] & 4611686018427387903L) >>> 58 | (in[22 + inPos] & 4611686018427387903L) << 4) & 255L));
         out[171 + outPos] = (byte)((int)((in[22 + inPos] & 4611686018427387903L) >>> 4 & 255L));
         out[172 + outPos] = (byte)((int)((in[22 + inPos] & 4611686018427387903L) >>> 12 & 255L));
         out[173 + outPos] = (byte)((int)((in[22 + inPos] & 4611686018427387903L) >>> 20 & 255L));
         out[174 + outPos] = (byte)((int)((in[22 + inPos] & 4611686018427387903L) >>> 28 & 255L));
         out[175 + outPos] = (byte)((int)((in[22 + inPos] & 4611686018427387903L) >>> 36 & 255L));
         out[176 + outPos] = (byte)((int)((in[22 + inPos] & 4611686018427387903L) >>> 44 & 255L));
         out[177 + outPos] = (byte)((int)((in[22 + inPos] & 4611686018427387903L) >>> 52 & 255L));
         out[178 + outPos] = (byte)((int)(((in[22 + inPos] & 4611686018427387903L) >>> 60 | (in[23 + inPos] & 4611686018427387903L) << 2) & 255L));
         out[179 + outPos] = (byte)((int)((in[23 + inPos] & 4611686018427387903L) >>> 6 & 255L));
         out[180 + outPos] = (byte)((int)((in[23 + inPos] & 4611686018427387903L) >>> 14 & 255L));
         out[181 + outPos] = (byte)((int)((in[23 + inPos] & 4611686018427387903L) >>> 22 & 255L));
         out[182 + outPos] = (byte)((int)((in[23 + inPos] & 4611686018427387903L) >>> 30 & 255L));
         out[183 + outPos] = (byte)((int)((in[23 + inPos] & 4611686018427387903L) >>> 38 & 255L));
         out[184 + outPos] = (byte)((int)((in[23 + inPos] & 4611686018427387903L) >>> 46 & 255L));
         out[185 + outPos] = (byte)((int)((in[23 + inPos] & 4611686018427387903L) >>> 54 & 255L));
         out[186 + outPos] = (byte)((int)(in[24 + inPos] & 4611686018427387903L & 255L));
         out[187 + outPos] = (byte)((int)((in[24 + inPos] & 4611686018427387903L) >>> 8 & 255L));
         out[188 + outPos] = (byte)((int)((in[24 + inPos] & 4611686018427387903L) >>> 16 & 255L));
         out[189 + outPos] = (byte)((int)((in[24 + inPos] & 4611686018427387903L) >>> 24 & 255L));
         out[190 + outPos] = (byte)((int)((in[24 + inPos] & 4611686018427387903L) >>> 32 & 255L));
         out[191 + outPos] = (byte)((int)((in[24 + inPos] & 4611686018427387903L) >>> 40 & 255L));
         out[192 + outPos] = (byte)((int)((in[24 + inPos] & 4611686018427387903L) >>> 48 & 255L));
         out[193 + outPos] = (byte)((int)(((in[24 + inPos] & 4611686018427387903L) >>> 56 | (in[25 + inPos] & 4611686018427387903L) << 6) & 255L));
         out[194 + outPos] = (byte)((int)((in[25 + inPos] & 4611686018427387903L) >>> 2 & 255L));
         out[195 + outPos] = (byte)((int)((in[25 + inPos] & 4611686018427387903L) >>> 10 & 255L));
         out[196 + outPos] = (byte)((int)((in[25 + inPos] & 4611686018427387903L) >>> 18 & 255L));
         out[197 + outPos] = (byte)((int)((in[25 + inPos] & 4611686018427387903L) >>> 26 & 255L));
         out[198 + outPos] = (byte)((int)((in[25 + inPos] & 4611686018427387903L) >>> 34 & 255L));
         out[199 + outPos] = (byte)((int)((in[25 + inPos] & 4611686018427387903L) >>> 42 & 255L));
         out[200 + outPos] = (byte)((int)((in[25 + inPos] & 4611686018427387903L) >>> 50 & 255L));
         out[201 + outPos] = (byte)((int)(((in[25 + inPos] & 4611686018427387903L) >>> 58 | (in[26 + inPos] & 4611686018427387903L) << 4) & 255L));
         out[202 + outPos] = (byte)((int)((in[26 + inPos] & 4611686018427387903L) >>> 4 & 255L));
         out[203 + outPos] = (byte)((int)((in[26 + inPos] & 4611686018427387903L) >>> 12 & 255L));
         out[204 + outPos] = (byte)((int)((in[26 + inPos] & 4611686018427387903L) >>> 20 & 255L));
         out[205 + outPos] = (byte)((int)((in[26 + inPos] & 4611686018427387903L) >>> 28 & 255L));
         out[206 + outPos] = (byte)((int)((in[26 + inPos] & 4611686018427387903L) >>> 36 & 255L));
         out[207 + outPos] = (byte)((int)((in[26 + inPos] & 4611686018427387903L) >>> 44 & 255L));
         out[208 + outPos] = (byte)((int)((in[26 + inPos] & 4611686018427387903L) >>> 52 & 255L));
         out[209 + outPos] = (byte)((int)(((in[26 + inPos] & 4611686018427387903L) >>> 60 | (in[27 + inPos] & 4611686018427387903L) << 2) & 255L));
         out[210 + outPos] = (byte)((int)((in[27 + inPos] & 4611686018427387903L) >>> 6 & 255L));
         out[211 + outPos] = (byte)((int)((in[27 + inPos] & 4611686018427387903L) >>> 14 & 255L));
         out[212 + outPos] = (byte)((int)((in[27 + inPos] & 4611686018427387903L) >>> 22 & 255L));
         out[213 + outPos] = (byte)((int)((in[27 + inPos] & 4611686018427387903L) >>> 30 & 255L));
         out[214 + outPos] = (byte)((int)((in[27 + inPos] & 4611686018427387903L) >>> 38 & 255L));
         out[215 + outPos] = (byte)((int)((in[27 + inPos] & 4611686018427387903L) >>> 46 & 255L));
         out[216 + outPos] = (byte)((int)((in[27 + inPos] & 4611686018427387903L) >>> 54 & 255L));
         out[217 + outPos] = (byte)((int)(in[28 + inPos] & 4611686018427387903L & 255L));
         out[218 + outPos] = (byte)((int)((in[28 + inPos] & 4611686018427387903L) >>> 8 & 255L));
         out[219 + outPos] = (byte)((int)((in[28 + inPos] & 4611686018427387903L) >>> 16 & 255L));
         out[220 + outPos] = (byte)((int)((in[28 + inPos] & 4611686018427387903L) >>> 24 & 255L));
         out[221 + outPos] = (byte)((int)((in[28 + inPos] & 4611686018427387903L) >>> 32 & 255L));
         out[222 + outPos] = (byte)((int)((in[28 + inPos] & 4611686018427387903L) >>> 40 & 255L));
         out[223 + outPos] = (byte)((int)((in[28 + inPos] & 4611686018427387903L) >>> 48 & 255L));
         out[224 + outPos] = (byte)((int)(((in[28 + inPos] & 4611686018427387903L) >>> 56 | (in[29 + inPos] & 4611686018427387903L) << 6) & 255L));
         out[225 + outPos] = (byte)((int)((in[29 + inPos] & 4611686018427387903L) >>> 2 & 255L));
         out[226 + outPos] = (byte)((int)((in[29 + inPos] & 4611686018427387903L) >>> 10 & 255L));
         out[227 + outPos] = (byte)((int)((in[29 + inPos] & 4611686018427387903L) >>> 18 & 255L));
         out[228 + outPos] = (byte)((int)((in[29 + inPos] & 4611686018427387903L) >>> 26 & 255L));
         out[229 + outPos] = (byte)((int)((in[29 + inPos] & 4611686018427387903L) >>> 34 & 255L));
         out[230 + outPos] = (byte)((int)((in[29 + inPos] & 4611686018427387903L) >>> 42 & 255L));
         out[231 + outPos] = (byte)((int)((in[29 + inPos] & 4611686018427387903L) >>> 50 & 255L));
         out[232 + outPos] = (byte)((int)(((in[29 + inPos] & 4611686018427387903L) >>> 58 | (in[30 + inPos] & 4611686018427387903L) << 4) & 255L));
         out[233 + outPos] = (byte)((int)((in[30 + inPos] & 4611686018427387903L) >>> 4 & 255L));
         out[234 + outPos] = (byte)((int)((in[30 + inPos] & 4611686018427387903L) >>> 12 & 255L));
         out[235 + outPos] = (byte)((int)((in[30 + inPos] & 4611686018427387903L) >>> 20 & 255L));
         out[236 + outPos] = (byte)((int)((in[30 + inPos] & 4611686018427387903L) >>> 28 & 255L));
         out[237 + outPos] = (byte)((int)((in[30 + inPos] & 4611686018427387903L) >>> 36 & 255L));
         out[238 + outPos] = (byte)((int)((in[30 + inPos] & 4611686018427387903L) >>> 44 & 255L));
         out[239 + outPos] = (byte)((int)((in[30 + inPos] & 4611686018427387903L) >>> 52 & 255L));
         out[240 + outPos] = (byte)((int)(((in[30 + inPos] & 4611686018427387903L) >>> 60 | (in[31 + inPos] & 4611686018427387903L) << 2) & 255L));
         out[241 + outPos] = (byte)((int)((in[31 + inPos] & 4611686018427387903L) >>> 6 & 255L));
         out[242 + outPos] = (byte)((int)((in[31 + inPos] & 4611686018427387903L) >>> 14 & 255L));
         out[243 + outPos] = (byte)((int)((in[31 + inPos] & 4611686018427387903L) >>> 22 & 255L));
         out[244 + outPos] = (byte)((int)((in[31 + inPos] & 4611686018427387903L) >>> 30 & 255L));
         out[245 + outPos] = (byte)((int)((in[31 + inPos] & 4611686018427387903L) >>> 38 & 255L));
         out[246 + outPos] = (byte)((int)((in[31 + inPos] & 4611686018427387903L) >>> 46 & 255L));
         out[247 + outPos] = (byte)((int)((in[31 + inPos] & 4611686018427387903L) >>> 54 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & 4611686018427387903L;
         out[1 + outPos] = (long)in[7 + inPos] >> 6 & 3L | (long)in[8 + inPos] << 2 & 1023L | (long)in[9 + inPos] << 10 & 262143L | (long)in[10 + inPos] << 18 & 67108863L | (long)in[11 + inPos] << 26 & 17179869183L | (long)in[12 + inPos] << 34 & 4398046511103L | (long)in[13 + inPos] << 42 & 1125899906842623L | (long)in[14 + inPos] << 50 & 288230376151711743L | (long)in[15 + inPos] << 58 & 4611686018427387903L;
         out[2 + outPos] = (long)in[15 + inPos] >> 4 & 15L | (long)in[16 + inPos] << 4 & 4095L | (long)in[17 + inPos] << 12 & 1048575L | (long)in[18 + inPos] << 20 & 268435455L | (long)in[19 + inPos] << 28 & 68719476735L | (long)in[20 + inPos] << 36 & 17592186044415L | (long)in[21 + inPos] << 44 & 4503599627370495L | (long)in[22 + inPos] << 52 & 1152921504606846975L | (long)in[23 + inPos] << 60 & 4611686018427387903L;
         out[3 + outPos] = (long)in[23 + inPos] >> 2 & 63L | (long)in[24 + inPos] << 6 & 16383L | (long)in[25 + inPos] << 14 & 4194303L | (long)in[26 + inPos] << 22 & 1073741823L | (long)in[27 + inPos] << 30 & 274877906943L | (long)in[28 + inPos] << 38 & 70368744177663L | (long)in[29 + inPos] << 46 & 18014398509481983L | (long)in[30 + inPos] << 54 & 4611686018427387903L;
         out[4 + outPos] = (long)in[31 + inPos] & 255L | (long)in[32 + inPos] << 8 & 65535L | (long)in[33 + inPos] << 16 & 16777215L | (long)in[34 + inPos] << 24 & 4294967295L | (long)in[35 + inPos] << 32 & 1099511627775L | (long)in[36 + inPos] << 40 & 281474976710655L | (long)in[37 + inPos] << 48 & 72057594037927935L | (long)in[38 + inPos] << 56 & 4611686018427387903L;
         out[5 + outPos] = (long)in[38 + inPos] >> 6 & 3L | (long)in[39 + inPos] << 2 & 1023L | (long)in[40 + inPos] << 10 & 262143L | (long)in[41 + inPos] << 18 & 67108863L | (long)in[42 + inPos] << 26 & 17179869183L | (long)in[43 + inPos] << 34 & 4398046511103L | (long)in[44 + inPos] << 42 & 1125899906842623L | (long)in[45 + inPos] << 50 & 288230376151711743L | (long)in[46 + inPos] << 58 & 4611686018427387903L;
         out[6 + outPos] = (long)in[46 + inPos] >> 4 & 15L | (long)in[47 + inPos] << 4 & 4095L | (long)in[48 + inPos] << 12 & 1048575L | (long)in[49 + inPos] << 20 & 268435455L | (long)in[50 + inPos] << 28 & 68719476735L | (long)in[51 + inPos] << 36 & 17592186044415L | (long)in[52 + inPos] << 44 & 4503599627370495L | (long)in[53 + inPos] << 52 & 1152921504606846975L | (long)in[54 + inPos] << 60 & 4611686018427387903L;
         out[7 + outPos] = (long)in[54 + inPos] >> 2 & 63L | (long)in[55 + inPos] << 6 & 16383L | (long)in[56 + inPos] << 14 & 4194303L | (long)in[57 + inPos] << 22 & 1073741823L | (long)in[58 + inPos] << 30 & 274877906943L | (long)in[59 + inPos] << 38 & 70368744177663L | (long)in[60 + inPos] << 46 & 18014398509481983L | (long)in[61 + inPos] << 54 & 4611686018427387903L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & 4611686018427387903L;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 6 & 3L | (long)in.get(8 + inPos) << 2 & 1023L | (long)in.get(9 + inPos) << 10 & 262143L | (long)in.get(10 + inPos) << 18 & 67108863L | (long)in.get(11 + inPos) << 26 & 17179869183L | (long)in.get(12 + inPos) << 34 & 4398046511103L | (long)in.get(13 + inPos) << 42 & 1125899906842623L | (long)in.get(14 + inPos) << 50 & 288230376151711743L | (long)in.get(15 + inPos) << 58 & 4611686018427387903L;
         out[2 + outPos] = (long)in.get(15 + inPos) >> 4 & 15L | (long)in.get(16 + inPos) << 4 & 4095L | (long)in.get(17 + inPos) << 12 & 1048575L | (long)in.get(18 + inPos) << 20 & 268435455L | (long)in.get(19 + inPos) << 28 & 68719476735L | (long)in.get(20 + inPos) << 36 & 17592186044415L | (long)in.get(21 + inPos) << 44 & 4503599627370495L | (long)in.get(22 + inPos) << 52 & 1152921504606846975L | (long)in.get(23 + inPos) << 60 & 4611686018427387903L;
         out[3 + outPos] = (long)in.get(23 + inPos) >> 2 & 63L | (long)in.get(24 + inPos) << 6 & 16383L | (long)in.get(25 + inPos) << 14 & 4194303L | (long)in.get(26 + inPos) << 22 & 1073741823L | (long)in.get(27 + inPos) << 30 & 274877906943L | (long)in.get(28 + inPos) << 38 & 70368744177663L | (long)in.get(29 + inPos) << 46 & 18014398509481983L | (long)in.get(30 + inPos) << 54 & 4611686018427387903L;
         out[4 + outPos] = (long)in.get(31 + inPos) & 255L | (long)in.get(32 + inPos) << 8 & 65535L | (long)in.get(33 + inPos) << 16 & 16777215L | (long)in.get(34 + inPos) << 24 & 4294967295L | (long)in.get(35 + inPos) << 32 & 1099511627775L | (long)in.get(36 + inPos) << 40 & 281474976710655L | (long)in.get(37 + inPos) << 48 & 72057594037927935L | (long)in.get(38 + inPos) << 56 & 4611686018427387903L;
         out[5 + outPos] = (long)in.get(38 + inPos) >> 6 & 3L | (long)in.get(39 + inPos) << 2 & 1023L | (long)in.get(40 + inPos) << 10 & 262143L | (long)in.get(41 + inPos) << 18 & 67108863L | (long)in.get(42 + inPos) << 26 & 17179869183L | (long)in.get(43 + inPos) << 34 & 4398046511103L | (long)in.get(44 + inPos) << 42 & 1125899906842623L | (long)in.get(45 + inPos) << 50 & 288230376151711743L | (long)in.get(46 + inPos) << 58 & 4611686018427387903L;
         out[6 + outPos] = (long)in.get(46 + inPos) >> 4 & 15L | (long)in.get(47 + inPos) << 4 & 4095L | (long)in.get(48 + inPos) << 12 & 1048575L | (long)in.get(49 + inPos) << 20 & 268435455L | (long)in.get(50 + inPos) << 28 & 68719476735L | (long)in.get(51 + inPos) << 36 & 17592186044415L | (long)in.get(52 + inPos) << 44 & 4503599627370495L | (long)in.get(53 + inPos) << 52 & 1152921504606846975L | (long)in.get(54 + inPos) << 60 & 4611686018427387903L;
         out[7 + outPos] = (long)in.get(54 + inPos) >> 2 & 63L | (long)in.get(55 + inPos) << 6 & 16383L | (long)in.get(56 + inPos) << 14 & 4194303L | (long)in.get(57 + inPos) << 22 & 1073741823L | (long)in.get(58 + inPos) << 30 & 274877906943L | (long)in.get(59 + inPos) << 38 & 70368744177663L | (long)in.get(60 + inPos) << 46 & 18014398509481983L | (long)in.get(61 + inPos) << 54 & 4611686018427387903L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & 4611686018427387903L;
         out[1 + outPos] = (long)in[7 + inPos] >> 6 & 3L | (long)in[8 + inPos] << 2 & 1023L | (long)in[9 + inPos] << 10 & 262143L | (long)in[10 + inPos] << 18 & 67108863L | (long)in[11 + inPos] << 26 & 17179869183L | (long)in[12 + inPos] << 34 & 4398046511103L | (long)in[13 + inPos] << 42 & 1125899906842623L | (long)in[14 + inPos] << 50 & 288230376151711743L | (long)in[15 + inPos] << 58 & 4611686018427387903L;
         out[2 + outPos] = (long)in[15 + inPos] >> 4 & 15L | (long)in[16 + inPos] << 4 & 4095L | (long)in[17 + inPos] << 12 & 1048575L | (long)in[18 + inPos] << 20 & 268435455L | (long)in[19 + inPos] << 28 & 68719476735L | (long)in[20 + inPos] << 36 & 17592186044415L | (long)in[21 + inPos] << 44 & 4503599627370495L | (long)in[22 + inPos] << 52 & 1152921504606846975L | (long)in[23 + inPos] << 60 & 4611686018427387903L;
         out[3 + outPos] = (long)in[23 + inPos] >> 2 & 63L | (long)in[24 + inPos] << 6 & 16383L | (long)in[25 + inPos] << 14 & 4194303L | (long)in[26 + inPos] << 22 & 1073741823L | (long)in[27 + inPos] << 30 & 274877906943L | (long)in[28 + inPos] << 38 & 70368744177663L | (long)in[29 + inPos] << 46 & 18014398509481983L | (long)in[30 + inPos] << 54 & 4611686018427387903L;
         out[4 + outPos] = (long)in[31 + inPos] & 255L | (long)in[32 + inPos] << 8 & 65535L | (long)in[33 + inPos] << 16 & 16777215L | (long)in[34 + inPos] << 24 & 4294967295L | (long)in[35 + inPos] << 32 & 1099511627775L | (long)in[36 + inPos] << 40 & 281474976710655L | (long)in[37 + inPos] << 48 & 72057594037927935L | (long)in[38 + inPos] << 56 & 4611686018427387903L;
         out[5 + outPos] = (long)in[38 + inPos] >> 6 & 3L | (long)in[39 + inPos] << 2 & 1023L | (long)in[40 + inPos] << 10 & 262143L | (long)in[41 + inPos] << 18 & 67108863L | (long)in[42 + inPos] << 26 & 17179869183L | (long)in[43 + inPos] << 34 & 4398046511103L | (long)in[44 + inPos] << 42 & 1125899906842623L | (long)in[45 + inPos] << 50 & 288230376151711743L | (long)in[46 + inPos] << 58 & 4611686018427387903L;
         out[6 + outPos] = (long)in[46 + inPos] >> 4 & 15L | (long)in[47 + inPos] << 4 & 4095L | (long)in[48 + inPos] << 12 & 1048575L | (long)in[49 + inPos] << 20 & 268435455L | (long)in[50 + inPos] << 28 & 68719476735L | (long)in[51 + inPos] << 36 & 17592186044415L | (long)in[52 + inPos] << 44 & 4503599627370495L | (long)in[53 + inPos] << 52 & 1152921504606846975L | (long)in[54 + inPos] << 60 & 4611686018427387903L;
         out[7 + outPos] = (long)in[54 + inPos] >> 2 & 63L | (long)in[55 + inPos] << 6 & 16383L | (long)in[56 + inPos] << 14 & 4194303L | (long)in[57 + inPos] << 22 & 1073741823L | (long)in[58 + inPos] << 30 & 274877906943L | (long)in[59 + inPos] << 38 & 70368744177663L | (long)in[60 + inPos] << 46 & 18014398509481983L | (long)in[61 + inPos] << 54 & 4611686018427387903L;
         out[8 + outPos] = (long)in[62 + inPos] & 255L | (long)in[63 + inPos] << 8 & 65535L | (long)in[64 + inPos] << 16 & 16777215L | (long)in[65 + inPos] << 24 & 4294967295L | (long)in[66 + inPos] << 32 & 1099511627775L | (long)in[67 + inPos] << 40 & 281474976710655L | (long)in[68 + inPos] << 48 & 72057594037927935L | (long)in[69 + inPos] << 56 & 4611686018427387903L;
         out[9 + outPos] = (long)in[69 + inPos] >> 6 & 3L | (long)in[70 + inPos] << 2 & 1023L | (long)in[71 + inPos] << 10 & 262143L | (long)in[72 + inPos] << 18 & 67108863L | (long)in[73 + inPos] << 26 & 17179869183L | (long)in[74 + inPos] << 34 & 4398046511103L | (long)in[75 + inPos] << 42 & 1125899906842623L | (long)in[76 + inPos] << 50 & 288230376151711743L | (long)in[77 + inPos] << 58 & 4611686018427387903L;
         out[10 + outPos] = (long)in[77 + inPos] >> 4 & 15L | (long)in[78 + inPos] << 4 & 4095L | (long)in[79 + inPos] << 12 & 1048575L | (long)in[80 + inPos] << 20 & 268435455L | (long)in[81 + inPos] << 28 & 68719476735L | (long)in[82 + inPos] << 36 & 17592186044415L | (long)in[83 + inPos] << 44 & 4503599627370495L | (long)in[84 + inPos] << 52 & 1152921504606846975L | (long)in[85 + inPos] << 60 & 4611686018427387903L;
         out[11 + outPos] = (long)in[85 + inPos] >> 2 & 63L | (long)in[86 + inPos] << 6 & 16383L | (long)in[87 + inPos] << 14 & 4194303L | (long)in[88 + inPos] << 22 & 1073741823L | (long)in[89 + inPos] << 30 & 274877906943L | (long)in[90 + inPos] << 38 & 70368744177663L | (long)in[91 + inPos] << 46 & 18014398509481983L | (long)in[92 + inPos] << 54 & 4611686018427387903L;
         out[12 + outPos] = (long)in[93 + inPos] & 255L | (long)in[94 + inPos] << 8 & 65535L | (long)in[95 + inPos] << 16 & 16777215L | (long)in[96 + inPos] << 24 & 4294967295L | (long)in[97 + inPos] << 32 & 1099511627775L | (long)in[98 + inPos] << 40 & 281474976710655L | (long)in[99 + inPos] << 48 & 72057594037927935L | (long)in[100 + inPos] << 56 & 4611686018427387903L;
         out[13 + outPos] = (long)in[100 + inPos] >> 6 & 3L | (long)in[101 + inPos] << 2 & 1023L | (long)in[102 + inPos] << 10 & 262143L | (long)in[103 + inPos] << 18 & 67108863L | (long)in[104 + inPos] << 26 & 17179869183L | (long)in[105 + inPos] << 34 & 4398046511103L | (long)in[106 + inPos] << 42 & 1125899906842623L | (long)in[107 + inPos] << 50 & 288230376151711743L | (long)in[108 + inPos] << 58 & 4611686018427387903L;
         out[14 + outPos] = (long)in[108 + inPos] >> 4 & 15L | (long)in[109 + inPos] << 4 & 4095L | (long)in[110 + inPos] << 12 & 1048575L | (long)in[111 + inPos] << 20 & 268435455L | (long)in[112 + inPos] << 28 & 68719476735L | (long)in[113 + inPos] << 36 & 17592186044415L | (long)in[114 + inPos] << 44 & 4503599627370495L | (long)in[115 + inPos] << 52 & 1152921504606846975L | (long)in[116 + inPos] << 60 & 4611686018427387903L;
         out[15 + outPos] = (long)in[116 + inPos] >> 2 & 63L | (long)in[117 + inPos] << 6 & 16383L | (long)in[118 + inPos] << 14 & 4194303L | (long)in[119 + inPos] << 22 & 1073741823L | (long)in[120 + inPos] << 30 & 274877906943L | (long)in[121 + inPos] << 38 & 70368744177663L | (long)in[122 + inPos] << 46 & 18014398509481983L | (long)in[123 + inPos] << 54 & 4611686018427387903L;
         out[16 + outPos] = (long)in[124 + inPos] & 255L | (long)in[125 + inPos] << 8 & 65535L | (long)in[126 + inPos] << 16 & 16777215L | (long)in[127 + inPos] << 24 & 4294967295L | (long)in[128 + inPos] << 32 & 1099511627775L | (long)in[129 + inPos] << 40 & 281474976710655L | (long)in[130 + inPos] << 48 & 72057594037927935L | (long)in[131 + inPos] << 56 & 4611686018427387903L;
         out[17 + outPos] = (long)in[131 + inPos] >> 6 & 3L | (long)in[132 + inPos] << 2 & 1023L | (long)in[133 + inPos] << 10 & 262143L | (long)in[134 + inPos] << 18 & 67108863L | (long)in[135 + inPos] << 26 & 17179869183L | (long)in[136 + inPos] << 34 & 4398046511103L | (long)in[137 + inPos] << 42 & 1125899906842623L | (long)in[138 + inPos] << 50 & 288230376151711743L | (long)in[139 + inPos] << 58 & 4611686018427387903L;
         out[18 + outPos] = (long)in[139 + inPos] >> 4 & 15L | (long)in[140 + inPos] << 4 & 4095L | (long)in[141 + inPos] << 12 & 1048575L | (long)in[142 + inPos] << 20 & 268435455L | (long)in[143 + inPos] << 28 & 68719476735L | (long)in[144 + inPos] << 36 & 17592186044415L | (long)in[145 + inPos] << 44 & 4503599627370495L | (long)in[146 + inPos] << 52 & 1152921504606846975L | (long)in[147 + inPos] << 60 & 4611686018427387903L;
         out[19 + outPos] = (long)in[147 + inPos] >> 2 & 63L | (long)in[148 + inPos] << 6 & 16383L | (long)in[149 + inPos] << 14 & 4194303L | (long)in[150 + inPos] << 22 & 1073741823L | (long)in[151 + inPos] << 30 & 274877906943L | (long)in[152 + inPos] << 38 & 70368744177663L | (long)in[153 + inPos] << 46 & 18014398509481983L | (long)in[154 + inPos] << 54 & 4611686018427387903L;
         out[20 + outPos] = (long)in[155 + inPos] & 255L | (long)in[156 + inPos] << 8 & 65535L | (long)in[157 + inPos] << 16 & 16777215L | (long)in[158 + inPos] << 24 & 4294967295L | (long)in[159 + inPos] << 32 & 1099511627775L | (long)in[160 + inPos] << 40 & 281474976710655L | (long)in[161 + inPos] << 48 & 72057594037927935L | (long)in[162 + inPos] << 56 & 4611686018427387903L;
         out[21 + outPos] = (long)in[162 + inPos] >> 6 & 3L | (long)in[163 + inPos] << 2 & 1023L | (long)in[164 + inPos] << 10 & 262143L | (long)in[165 + inPos] << 18 & 67108863L | (long)in[166 + inPos] << 26 & 17179869183L | (long)in[167 + inPos] << 34 & 4398046511103L | (long)in[168 + inPos] << 42 & 1125899906842623L | (long)in[169 + inPos] << 50 & 288230376151711743L | (long)in[170 + inPos] << 58 & 4611686018427387903L;
         out[22 + outPos] = (long)in[170 + inPos] >> 4 & 15L | (long)in[171 + inPos] << 4 & 4095L | (long)in[172 + inPos] << 12 & 1048575L | (long)in[173 + inPos] << 20 & 268435455L | (long)in[174 + inPos] << 28 & 68719476735L | (long)in[175 + inPos] << 36 & 17592186044415L | (long)in[176 + inPos] << 44 & 4503599627370495L | (long)in[177 + inPos] << 52 & 1152921504606846975L | (long)in[178 + inPos] << 60 & 4611686018427387903L;
         out[23 + outPos] = (long)in[178 + inPos] >> 2 & 63L | (long)in[179 + inPos] << 6 & 16383L | (long)in[180 + inPos] << 14 & 4194303L | (long)in[181 + inPos] << 22 & 1073741823L | (long)in[182 + inPos] << 30 & 274877906943L | (long)in[183 + inPos] << 38 & 70368744177663L | (long)in[184 + inPos] << 46 & 18014398509481983L | (long)in[185 + inPos] << 54 & 4611686018427387903L;
         out[24 + outPos] = (long)in[186 + inPos] & 255L | (long)in[187 + inPos] << 8 & 65535L | (long)in[188 + inPos] << 16 & 16777215L | (long)in[189 + inPos] << 24 & 4294967295L | (long)in[190 + inPos] << 32 & 1099511627775L | (long)in[191 + inPos] << 40 & 281474976710655L | (long)in[192 + inPos] << 48 & 72057594037927935L | (long)in[193 + inPos] << 56 & 4611686018427387903L;
         out[25 + outPos] = (long)in[193 + inPos] >> 6 & 3L | (long)in[194 + inPos] << 2 & 1023L | (long)in[195 + inPos] << 10 & 262143L | (long)in[196 + inPos] << 18 & 67108863L | (long)in[197 + inPos] << 26 & 17179869183L | (long)in[198 + inPos] << 34 & 4398046511103L | (long)in[199 + inPos] << 42 & 1125899906842623L | (long)in[200 + inPos] << 50 & 288230376151711743L | (long)in[201 + inPos] << 58 & 4611686018427387903L;
         out[26 + outPos] = (long)in[201 + inPos] >> 4 & 15L | (long)in[202 + inPos] << 4 & 4095L | (long)in[203 + inPos] << 12 & 1048575L | (long)in[204 + inPos] << 20 & 268435455L | (long)in[205 + inPos] << 28 & 68719476735L | (long)in[206 + inPos] << 36 & 17592186044415L | (long)in[207 + inPos] << 44 & 4503599627370495L | (long)in[208 + inPos] << 52 & 1152921504606846975L | (long)in[209 + inPos] << 60 & 4611686018427387903L;
         out[27 + outPos] = (long)in[209 + inPos] >> 2 & 63L | (long)in[210 + inPos] << 6 & 16383L | (long)in[211 + inPos] << 14 & 4194303L | (long)in[212 + inPos] << 22 & 1073741823L | (long)in[213 + inPos] << 30 & 274877906943L | (long)in[214 + inPos] << 38 & 70368744177663L | (long)in[215 + inPos] << 46 & 18014398509481983L | (long)in[216 + inPos] << 54 & 4611686018427387903L;
         out[28 + outPos] = (long)in[217 + inPos] & 255L | (long)in[218 + inPos] << 8 & 65535L | (long)in[219 + inPos] << 16 & 16777215L | (long)in[220 + inPos] << 24 & 4294967295L | (long)in[221 + inPos] << 32 & 1099511627775L | (long)in[222 + inPos] << 40 & 281474976710655L | (long)in[223 + inPos] << 48 & 72057594037927935L | (long)in[224 + inPos] << 56 & 4611686018427387903L;
         out[29 + outPos] = (long)in[224 + inPos] >> 6 & 3L | (long)in[225 + inPos] << 2 & 1023L | (long)in[226 + inPos] << 10 & 262143L | (long)in[227 + inPos] << 18 & 67108863L | (long)in[228 + inPos] << 26 & 17179869183L | (long)in[229 + inPos] << 34 & 4398046511103L | (long)in[230 + inPos] << 42 & 1125899906842623L | (long)in[231 + inPos] << 50 & 288230376151711743L | (long)in[232 + inPos] << 58 & 4611686018427387903L;
         out[30 + outPos] = (long)in[232 + inPos] >> 4 & 15L | (long)in[233 + inPos] << 4 & 4095L | (long)in[234 + inPos] << 12 & 1048575L | (long)in[235 + inPos] << 20 & 268435455L | (long)in[236 + inPos] << 28 & 68719476735L | (long)in[237 + inPos] << 36 & 17592186044415L | (long)in[238 + inPos] << 44 & 4503599627370495L | (long)in[239 + inPos] << 52 & 1152921504606846975L | (long)in[240 + inPos] << 60 & 4611686018427387903L;
         out[31 + outPos] = (long)in[240 + inPos] >> 2 & 63L | (long)in[241 + inPos] << 6 & 16383L | (long)in[242 + inPos] << 14 & 4194303L | (long)in[243 + inPos] << 22 & 1073741823L | (long)in[244 + inPos] << 30 & 274877906943L | (long)in[245 + inPos] << 38 & 70368744177663L | (long)in[246 + inPos] << 46 & 18014398509481983L | (long)in[247 + inPos] << 54 & 4611686018427387903L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & 4611686018427387903L;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 6 & 3L | (long)in.get(8 + inPos) << 2 & 1023L | (long)in.get(9 + inPos) << 10 & 262143L | (long)in.get(10 + inPos) << 18 & 67108863L | (long)in.get(11 + inPos) << 26 & 17179869183L | (long)in.get(12 + inPos) << 34 & 4398046511103L | (long)in.get(13 + inPos) << 42 & 1125899906842623L | (long)in.get(14 + inPos) << 50 & 288230376151711743L | (long)in.get(15 + inPos) << 58 & 4611686018427387903L;
         out[2 + outPos] = (long)in.get(15 + inPos) >> 4 & 15L | (long)in.get(16 + inPos) << 4 & 4095L | (long)in.get(17 + inPos) << 12 & 1048575L | (long)in.get(18 + inPos) << 20 & 268435455L | (long)in.get(19 + inPos) << 28 & 68719476735L | (long)in.get(20 + inPos) << 36 & 17592186044415L | (long)in.get(21 + inPos) << 44 & 4503599627370495L | (long)in.get(22 + inPos) << 52 & 1152921504606846975L | (long)in.get(23 + inPos) << 60 & 4611686018427387903L;
         out[3 + outPos] = (long)in.get(23 + inPos) >> 2 & 63L | (long)in.get(24 + inPos) << 6 & 16383L | (long)in.get(25 + inPos) << 14 & 4194303L | (long)in.get(26 + inPos) << 22 & 1073741823L | (long)in.get(27 + inPos) << 30 & 274877906943L | (long)in.get(28 + inPos) << 38 & 70368744177663L | (long)in.get(29 + inPos) << 46 & 18014398509481983L | (long)in.get(30 + inPos) << 54 & 4611686018427387903L;
         out[4 + outPos] = (long)in.get(31 + inPos) & 255L | (long)in.get(32 + inPos) << 8 & 65535L | (long)in.get(33 + inPos) << 16 & 16777215L | (long)in.get(34 + inPos) << 24 & 4294967295L | (long)in.get(35 + inPos) << 32 & 1099511627775L | (long)in.get(36 + inPos) << 40 & 281474976710655L | (long)in.get(37 + inPos) << 48 & 72057594037927935L | (long)in.get(38 + inPos) << 56 & 4611686018427387903L;
         out[5 + outPos] = (long)in.get(38 + inPos) >> 6 & 3L | (long)in.get(39 + inPos) << 2 & 1023L | (long)in.get(40 + inPos) << 10 & 262143L | (long)in.get(41 + inPos) << 18 & 67108863L | (long)in.get(42 + inPos) << 26 & 17179869183L | (long)in.get(43 + inPos) << 34 & 4398046511103L | (long)in.get(44 + inPos) << 42 & 1125899906842623L | (long)in.get(45 + inPos) << 50 & 288230376151711743L | (long)in.get(46 + inPos) << 58 & 4611686018427387903L;
         out[6 + outPos] = (long)in.get(46 + inPos) >> 4 & 15L | (long)in.get(47 + inPos) << 4 & 4095L | (long)in.get(48 + inPos) << 12 & 1048575L | (long)in.get(49 + inPos) << 20 & 268435455L | (long)in.get(50 + inPos) << 28 & 68719476735L | (long)in.get(51 + inPos) << 36 & 17592186044415L | (long)in.get(52 + inPos) << 44 & 4503599627370495L | (long)in.get(53 + inPos) << 52 & 1152921504606846975L | (long)in.get(54 + inPos) << 60 & 4611686018427387903L;
         out[7 + outPos] = (long)in.get(54 + inPos) >> 2 & 63L | (long)in.get(55 + inPos) << 6 & 16383L | (long)in.get(56 + inPos) << 14 & 4194303L | (long)in.get(57 + inPos) << 22 & 1073741823L | (long)in.get(58 + inPos) << 30 & 274877906943L | (long)in.get(59 + inPos) << 38 & 70368744177663L | (long)in.get(60 + inPos) << 46 & 18014398509481983L | (long)in.get(61 + inPos) << 54 & 4611686018427387903L;
         out[8 + outPos] = (long)in.get(62 + inPos) & 255L | (long)in.get(63 + inPos) << 8 & 65535L | (long)in.get(64 + inPos) << 16 & 16777215L | (long)in.get(65 + inPos) << 24 & 4294967295L | (long)in.get(66 + inPos) << 32 & 1099511627775L | (long)in.get(67 + inPos) << 40 & 281474976710655L | (long)in.get(68 + inPos) << 48 & 72057594037927935L | (long)in.get(69 + inPos) << 56 & 4611686018427387903L;
         out[9 + outPos] = (long)in.get(69 + inPos) >> 6 & 3L | (long)in.get(70 + inPos) << 2 & 1023L | (long)in.get(71 + inPos) << 10 & 262143L | (long)in.get(72 + inPos) << 18 & 67108863L | (long)in.get(73 + inPos) << 26 & 17179869183L | (long)in.get(74 + inPos) << 34 & 4398046511103L | (long)in.get(75 + inPos) << 42 & 1125899906842623L | (long)in.get(76 + inPos) << 50 & 288230376151711743L | (long)in.get(77 + inPos) << 58 & 4611686018427387903L;
         out[10 + outPos] = (long)in.get(77 + inPos) >> 4 & 15L | (long)in.get(78 + inPos) << 4 & 4095L | (long)in.get(79 + inPos) << 12 & 1048575L | (long)in.get(80 + inPos) << 20 & 268435455L | (long)in.get(81 + inPos) << 28 & 68719476735L | (long)in.get(82 + inPos) << 36 & 17592186044415L | (long)in.get(83 + inPos) << 44 & 4503599627370495L | (long)in.get(84 + inPos) << 52 & 1152921504606846975L | (long)in.get(85 + inPos) << 60 & 4611686018427387903L;
         out[11 + outPos] = (long)in.get(85 + inPos) >> 2 & 63L | (long)in.get(86 + inPos) << 6 & 16383L | (long)in.get(87 + inPos) << 14 & 4194303L | (long)in.get(88 + inPos) << 22 & 1073741823L | (long)in.get(89 + inPos) << 30 & 274877906943L | (long)in.get(90 + inPos) << 38 & 70368744177663L | (long)in.get(91 + inPos) << 46 & 18014398509481983L | (long)in.get(92 + inPos) << 54 & 4611686018427387903L;
         out[12 + outPos] = (long)in.get(93 + inPos) & 255L | (long)in.get(94 + inPos) << 8 & 65535L | (long)in.get(95 + inPos) << 16 & 16777215L | (long)in.get(96 + inPos) << 24 & 4294967295L | (long)in.get(97 + inPos) << 32 & 1099511627775L | (long)in.get(98 + inPos) << 40 & 281474976710655L | (long)in.get(99 + inPos) << 48 & 72057594037927935L | (long)in.get(100 + inPos) << 56 & 4611686018427387903L;
         out[13 + outPos] = (long)in.get(100 + inPos) >> 6 & 3L | (long)in.get(101 + inPos) << 2 & 1023L | (long)in.get(102 + inPos) << 10 & 262143L | (long)in.get(103 + inPos) << 18 & 67108863L | (long)in.get(104 + inPos) << 26 & 17179869183L | (long)in.get(105 + inPos) << 34 & 4398046511103L | (long)in.get(106 + inPos) << 42 & 1125899906842623L | (long)in.get(107 + inPos) << 50 & 288230376151711743L | (long)in.get(108 + inPos) << 58 & 4611686018427387903L;
         out[14 + outPos] = (long)in.get(108 + inPos) >> 4 & 15L | (long)in.get(109 + inPos) << 4 & 4095L | (long)in.get(110 + inPos) << 12 & 1048575L | (long)in.get(111 + inPos) << 20 & 268435455L | (long)in.get(112 + inPos) << 28 & 68719476735L | (long)in.get(113 + inPos) << 36 & 17592186044415L | (long)in.get(114 + inPos) << 44 & 4503599627370495L | (long)in.get(115 + inPos) << 52 & 1152921504606846975L | (long)in.get(116 + inPos) << 60 & 4611686018427387903L;
         out[15 + outPos] = (long)in.get(116 + inPos) >> 2 & 63L | (long)in.get(117 + inPos) << 6 & 16383L | (long)in.get(118 + inPos) << 14 & 4194303L | (long)in.get(119 + inPos) << 22 & 1073741823L | (long)in.get(120 + inPos) << 30 & 274877906943L | (long)in.get(121 + inPos) << 38 & 70368744177663L | (long)in.get(122 + inPos) << 46 & 18014398509481983L | (long)in.get(123 + inPos) << 54 & 4611686018427387903L;
         out[16 + outPos] = (long)in.get(124 + inPos) & 255L | (long)in.get(125 + inPos) << 8 & 65535L | (long)in.get(126 + inPos) << 16 & 16777215L | (long)in.get(127 + inPos) << 24 & 4294967295L | (long)in.get(128 + inPos) << 32 & 1099511627775L | (long)in.get(129 + inPos) << 40 & 281474976710655L | (long)in.get(130 + inPos) << 48 & 72057594037927935L | (long)in.get(131 + inPos) << 56 & 4611686018427387903L;
         out[17 + outPos] = (long)in.get(131 + inPos) >> 6 & 3L | (long)in.get(132 + inPos) << 2 & 1023L | (long)in.get(133 + inPos) << 10 & 262143L | (long)in.get(134 + inPos) << 18 & 67108863L | (long)in.get(135 + inPos) << 26 & 17179869183L | (long)in.get(136 + inPos) << 34 & 4398046511103L | (long)in.get(137 + inPos) << 42 & 1125899906842623L | (long)in.get(138 + inPos) << 50 & 288230376151711743L | (long)in.get(139 + inPos) << 58 & 4611686018427387903L;
         out[18 + outPos] = (long)in.get(139 + inPos) >> 4 & 15L | (long)in.get(140 + inPos) << 4 & 4095L | (long)in.get(141 + inPos) << 12 & 1048575L | (long)in.get(142 + inPos) << 20 & 268435455L | (long)in.get(143 + inPos) << 28 & 68719476735L | (long)in.get(144 + inPos) << 36 & 17592186044415L | (long)in.get(145 + inPos) << 44 & 4503599627370495L | (long)in.get(146 + inPos) << 52 & 1152921504606846975L | (long)in.get(147 + inPos) << 60 & 4611686018427387903L;
         out[19 + outPos] = (long)in.get(147 + inPos) >> 2 & 63L | (long)in.get(148 + inPos) << 6 & 16383L | (long)in.get(149 + inPos) << 14 & 4194303L | (long)in.get(150 + inPos) << 22 & 1073741823L | (long)in.get(151 + inPos) << 30 & 274877906943L | (long)in.get(152 + inPos) << 38 & 70368744177663L | (long)in.get(153 + inPos) << 46 & 18014398509481983L | (long)in.get(154 + inPos) << 54 & 4611686018427387903L;
         out[20 + outPos] = (long)in.get(155 + inPos) & 255L | (long)in.get(156 + inPos) << 8 & 65535L | (long)in.get(157 + inPos) << 16 & 16777215L | (long)in.get(158 + inPos) << 24 & 4294967295L | (long)in.get(159 + inPos) << 32 & 1099511627775L | (long)in.get(160 + inPos) << 40 & 281474976710655L | (long)in.get(161 + inPos) << 48 & 72057594037927935L | (long)in.get(162 + inPos) << 56 & 4611686018427387903L;
         out[21 + outPos] = (long)in.get(162 + inPos) >> 6 & 3L | (long)in.get(163 + inPos) << 2 & 1023L | (long)in.get(164 + inPos) << 10 & 262143L | (long)in.get(165 + inPos) << 18 & 67108863L | (long)in.get(166 + inPos) << 26 & 17179869183L | (long)in.get(167 + inPos) << 34 & 4398046511103L | (long)in.get(168 + inPos) << 42 & 1125899906842623L | (long)in.get(169 + inPos) << 50 & 288230376151711743L | (long)in.get(170 + inPos) << 58 & 4611686018427387903L;
         out[22 + outPos] = (long)in.get(170 + inPos) >> 4 & 15L | (long)in.get(171 + inPos) << 4 & 4095L | (long)in.get(172 + inPos) << 12 & 1048575L | (long)in.get(173 + inPos) << 20 & 268435455L | (long)in.get(174 + inPos) << 28 & 68719476735L | (long)in.get(175 + inPos) << 36 & 17592186044415L | (long)in.get(176 + inPos) << 44 & 4503599627370495L | (long)in.get(177 + inPos) << 52 & 1152921504606846975L | (long)in.get(178 + inPos) << 60 & 4611686018427387903L;
         out[23 + outPos] = (long)in.get(178 + inPos) >> 2 & 63L | (long)in.get(179 + inPos) << 6 & 16383L | (long)in.get(180 + inPos) << 14 & 4194303L | (long)in.get(181 + inPos) << 22 & 1073741823L | (long)in.get(182 + inPos) << 30 & 274877906943L | (long)in.get(183 + inPos) << 38 & 70368744177663L | (long)in.get(184 + inPos) << 46 & 18014398509481983L | (long)in.get(185 + inPos) << 54 & 4611686018427387903L;
         out[24 + outPos] = (long)in.get(186 + inPos) & 255L | (long)in.get(187 + inPos) << 8 & 65535L | (long)in.get(188 + inPos) << 16 & 16777215L | (long)in.get(189 + inPos) << 24 & 4294967295L | (long)in.get(190 + inPos) << 32 & 1099511627775L | (long)in.get(191 + inPos) << 40 & 281474976710655L | (long)in.get(192 + inPos) << 48 & 72057594037927935L | (long)in.get(193 + inPos) << 56 & 4611686018427387903L;
         out[25 + outPos] = (long)in.get(193 + inPos) >> 6 & 3L | (long)in.get(194 + inPos) << 2 & 1023L | (long)in.get(195 + inPos) << 10 & 262143L | (long)in.get(196 + inPos) << 18 & 67108863L | (long)in.get(197 + inPos) << 26 & 17179869183L | (long)in.get(198 + inPos) << 34 & 4398046511103L | (long)in.get(199 + inPos) << 42 & 1125899906842623L | (long)in.get(200 + inPos) << 50 & 288230376151711743L | (long)in.get(201 + inPos) << 58 & 4611686018427387903L;
         out[26 + outPos] = (long)in.get(201 + inPos) >> 4 & 15L | (long)in.get(202 + inPos) << 4 & 4095L | (long)in.get(203 + inPos) << 12 & 1048575L | (long)in.get(204 + inPos) << 20 & 268435455L | (long)in.get(205 + inPos) << 28 & 68719476735L | (long)in.get(206 + inPos) << 36 & 17592186044415L | (long)in.get(207 + inPos) << 44 & 4503599627370495L | (long)in.get(208 + inPos) << 52 & 1152921504606846975L | (long)in.get(209 + inPos) << 60 & 4611686018427387903L;
         out[27 + outPos] = (long)in.get(209 + inPos) >> 2 & 63L | (long)in.get(210 + inPos) << 6 & 16383L | (long)in.get(211 + inPos) << 14 & 4194303L | (long)in.get(212 + inPos) << 22 & 1073741823L | (long)in.get(213 + inPos) << 30 & 274877906943L | (long)in.get(214 + inPos) << 38 & 70368744177663L | (long)in.get(215 + inPos) << 46 & 18014398509481983L | (long)in.get(216 + inPos) << 54 & 4611686018427387903L;
         out[28 + outPos] = (long)in.get(217 + inPos) & 255L | (long)in.get(218 + inPos) << 8 & 65535L | (long)in.get(219 + inPos) << 16 & 16777215L | (long)in.get(220 + inPos) << 24 & 4294967295L | (long)in.get(221 + inPos) << 32 & 1099511627775L | (long)in.get(222 + inPos) << 40 & 281474976710655L | (long)in.get(223 + inPos) << 48 & 72057594037927935L | (long)in.get(224 + inPos) << 56 & 4611686018427387903L;
         out[29 + outPos] = (long)in.get(224 + inPos) >> 6 & 3L | (long)in.get(225 + inPos) << 2 & 1023L | (long)in.get(226 + inPos) << 10 & 262143L | (long)in.get(227 + inPos) << 18 & 67108863L | (long)in.get(228 + inPos) << 26 & 17179869183L | (long)in.get(229 + inPos) << 34 & 4398046511103L | (long)in.get(230 + inPos) << 42 & 1125899906842623L | (long)in.get(231 + inPos) << 50 & 288230376151711743L | (long)in.get(232 + inPos) << 58 & 4611686018427387903L;
         out[30 + outPos] = (long)in.get(232 + inPos) >> 4 & 15L | (long)in.get(233 + inPos) << 4 & 4095L | (long)in.get(234 + inPos) << 12 & 1048575L | (long)in.get(235 + inPos) << 20 & 268435455L | (long)in.get(236 + inPos) << 28 & 68719476735L | (long)in.get(237 + inPos) << 36 & 17592186044415L | (long)in.get(238 + inPos) << 44 & 4503599627370495L | (long)in.get(239 + inPos) << 52 & 1152921504606846975L | (long)in.get(240 + inPos) << 60 & 4611686018427387903L;
         out[31 + outPos] = (long)in.get(240 + inPos) >> 2 & 63L | (long)in.get(241 + inPos) << 6 & 16383L | (long)in.get(242 + inPos) << 14 & 4194303L | (long)in.get(243 + inPos) << 22 & 1073741823L | (long)in.get(244 + inPos) << 30 & 274877906943L | (long)in.get(245 + inPos) << 38 & 70368744177663L | (long)in.get(246 + inPos) << 46 & 18014398509481983L | (long)in.get(247 + inPos) << 54 & 4611686018427387903L;
      }
   }

   private static final class Packer63 extends BytePackerForLong {
      private Packer63() {
         super(63);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & Long.MAX_VALUE & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & Long.MAX_VALUE) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & Long.MAX_VALUE) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & Long.MAX_VALUE) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & Long.MAX_VALUE) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & Long.MAX_VALUE) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & Long.MAX_VALUE) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & Long.MAX_VALUE) >>> 56 | (in[1 + inPos] & Long.MAX_VALUE) << 7) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 1 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 9 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 17 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 25 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 33 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 41 & 255L));
         out[14 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 49 & 255L));
         out[15 + outPos] = (byte)((int)(((in[1 + inPos] & Long.MAX_VALUE) >>> 57 | (in[2 + inPos] & Long.MAX_VALUE) << 6) & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 2 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 10 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 18 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 26 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 34 & 255L));
         out[21 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 42 & 255L));
         out[22 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 50 & 255L));
         out[23 + outPos] = (byte)((int)(((in[2 + inPos] & Long.MAX_VALUE) >>> 58 | (in[3 + inPos] & Long.MAX_VALUE) << 5) & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 3 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 11 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 19 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 27 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 35 & 255L));
         out[29 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 43 & 255L));
         out[30 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 51 & 255L));
         out[31 + outPos] = (byte)((int)(((in[3 + inPos] & Long.MAX_VALUE) >>> 59 | (in[4 + inPos] & Long.MAX_VALUE) << 4) & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 4 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 12 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 20 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 28 & 255L));
         out[36 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 36 & 255L));
         out[37 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 44 & 255L));
         out[38 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 52 & 255L));
         out[39 + outPos] = (byte)((int)(((in[4 + inPos] & Long.MAX_VALUE) >>> 60 | (in[5 + inPos] & Long.MAX_VALUE) << 3) & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 5 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 13 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 21 & 255L));
         out[43 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 29 & 255L));
         out[44 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 37 & 255L));
         out[45 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 45 & 255L));
         out[46 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 53 & 255L));
         out[47 + outPos] = (byte)((int)(((in[5 + inPos] & Long.MAX_VALUE) >>> 61 | (in[6 + inPos] & Long.MAX_VALUE) << 2) & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 6 & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 14 & 255L));
         out[50 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 22 & 255L));
         out[51 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 30 & 255L));
         out[52 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 38 & 255L));
         out[53 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 46 & 255L));
         out[54 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 54 & 255L));
         out[55 + outPos] = (byte)((int)(((in[6 + inPos] & Long.MAX_VALUE) >>> 62 | (in[7 + inPos] & Long.MAX_VALUE) << 1) & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 7 & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 15 & 255L));
         out[58 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 23 & 255L));
         out[59 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 31 & 255L));
         out[60 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 39 & 255L));
         out[61 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 47 & 255L));
         out[62 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 55 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & Long.MAX_VALUE & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & Long.MAX_VALUE) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & Long.MAX_VALUE) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & Long.MAX_VALUE) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & Long.MAX_VALUE) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & Long.MAX_VALUE) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & Long.MAX_VALUE) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)(((in[0 + inPos] & Long.MAX_VALUE) >>> 56 | (in[1 + inPos] & Long.MAX_VALUE) << 7) & 255L));
         out[8 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 1 & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 9 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 17 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 25 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 33 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 41 & 255L));
         out[14 + outPos] = (byte)((int)((in[1 + inPos] & Long.MAX_VALUE) >>> 49 & 255L));
         out[15 + outPos] = (byte)((int)(((in[1 + inPos] & Long.MAX_VALUE) >>> 57 | (in[2 + inPos] & Long.MAX_VALUE) << 6) & 255L));
         out[16 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 2 & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 10 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 18 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 26 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 34 & 255L));
         out[21 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 42 & 255L));
         out[22 + outPos] = (byte)((int)((in[2 + inPos] & Long.MAX_VALUE) >>> 50 & 255L));
         out[23 + outPos] = (byte)((int)(((in[2 + inPos] & Long.MAX_VALUE) >>> 58 | (in[3 + inPos] & Long.MAX_VALUE) << 5) & 255L));
         out[24 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 3 & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 11 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 19 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 27 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 35 & 255L));
         out[29 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 43 & 255L));
         out[30 + outPos] = (byte)((int)((in[3 + inPos] & Long.MAX_VALUE) >>> 51 & 255L));
         out[31 + outPos] = (byte)((int)(((in[3 + inPos] & Long.MAX_VALUE) >>> 59 | (in[4 + inPos] & Long.MAX_VALUE) << 4) & 255L));
         out[32 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 4 & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 12 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 20 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 28 & 255L));
         out[36 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 36 & 255L));
         out[37 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 44 & 255L));
         out[38 + outPos] = (byte)((int)((in[4 + inPos] & Long.MAX_VALUE) >>> 52 & 255L));
         out[39 + outPos] = (byte)((int)(((in[4 + inPos] & Long.MAX_VALUE) >>> 60 | (in[5 + inPos] & Long.MAX_VALUE) << 3) & 255L));
         out[40 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 5 & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 13 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 21 & 255L));
         out[43 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 29 & 255L));
         out[44 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 37 & 255L));
         out[45 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 45 & 255L));
         out[46 + outPos] = (byte)((int)((in[5 + inPos] & Long.MAX_VALUE) >>> 53 & 255L));
         out[47 + outPos] = (byte)((int)(((in[5 + inPos] & Long.MAX_VALUE) >>> 61 | (in[6 + inPos] & Long.MAX_VALUE) << 2) & 255L));
         out[48 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 6 & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 14 & 255L));
         out[50 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 22 & 255L));
         out[51 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 30 & 255L));
         out[52 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 38 & 255L));
         out[53 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 46 & 255L));
         out[54 + outPos] = (byte)((int)((in[6 + inPos] & Long.MAX_VALUE) >>> 54 & 255L));
         out[55 + outPos] = (byte)((int)(((in[6 + inPos] & Long.MAX_VALUE) >>> 62 | (in[7 + inPos] & Long.MAX_VALUE) << 1) & 255L));
         out[56 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 7 & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 15 & 255L));
         out[58 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 23 & 255L));
         out[59 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 31 & 255L));
         out[60 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 39 & 255L));
         out[61 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 47 & 255L));
         out[62 + outPos] = (byte)((int)((in[7 + inPos] & Long.MAX_VALUE) >>> 55 & 255L));
         out[63 + outPos] = (byte)((int)(in[8 + inPos] & Long.MAX_VALUE & 255L));
         out[64 + outPos] = (byte)((int)((in[8 + inPos] & Long.MAX_VALUE) >>> 8 & 255L));
         out[65 + outPos] = (byte)((int)((in[8 + inPos] & Long.MAX_VALUE) >>> 16 & 255L));
         out[66 + outPos] = (byte)((int)((in[8 + inPos] & Long.MAX_VALUE) >>> 24 & 255L));
         out[67 + outPos] = (byte)((int)((in[8 + inPos] & Long.MAX_VALUE) >>> 32 & 255L));
         out[68 + outPos] = (byte)((int)((in[8 + inPos] & Long.MAX_VALUE) >>> 40 & 255L));
         out[69 + outPos] = (byte)((int)((in[8 + inPos] & Long.MAX_VALUE) >>> 48 & 255L));
         out[70 + outPos] = (byte)((int)(((in[8 + inPos] & Long.MAX_VALUE) >>> 56 | (in[9 + inPos] & Long.MAX_VALUE) << 7) & 255L));
         out[71 + outPos] = (byte)((int)((in[9 + inPos] & Long.MAX_VALUE) >>> 1 & 255L));
         out[72 + outPos] = (byte)((int)((in[9 + inPos] & Long.MAX_VALUE) >>> 9 & 255L));
         out[73 + outPos] = (byte)((int)((in[9 + inPos] & Long.MAX_VALUE) >>> 17 & 255L));
         out[74 + outPos] = (byte)((int)((in[9 + inPos] & Long.MAX_VALUE) >>> 25 & 255L));
         out[75 + outPos] = (byte)((int)((in[9 + inPos] & Long.MAX_VALUE) >>> 33 & 255L));
         out[76 + outPos] = (byte)((int)((in[9 + inPos] & Long.MAX_VALUE) >>> 41 & 255L));
         out[77 + outPos] = (byte)((int)((in[9 + inPos] & Long.MAX_VALUE) >>> 49 & 255L));
         out[78 + outPos] = (byte)((int)(((in[9 + inPos] & Long.MAX_VALUE) >>> 57 | (in[10 + inPos] & Long.MAX_VALUE) << 6) & 255L));
         out[79 + outPos] = (byte)((int)((in[10 + inPos] & Long.MAX_VALUE) >>> 2 & 255L));
         out[80 + outPos] = (byte)((int)((in[10 + inPos] & Long.MAX_VALUE) >>> 10 & 255L));
         out[81 + outPos] = (byte)((int)((in[10 + inPos] & Long.MAX_VALUE) >>> 18 & 255L));
         out[82 + outPos] = (byte)((int)((in[10 + inPos] & Long.MAX_VALUE) >>> 26 & 255L));
         out[83 + outPos] = (byte)((int)((in[10 + inPos] & Long.MAX_VALUE) >>> 34 & 255L));
         out[84 + outPos] = (byte)((int)((in[10 + inPos] & Long.MAX_VALUE) >>> 42 & 255L));
         out[85 + outPos] = (byte)((int)((in[10 + inPos] & Long.MAX_VALUE) >>> 50 & 255L));
         out[86 + outPos] = (byte)((int)(((in[10 + inPos] & Long.MAX_VALUE) >>> 58 | (in[11 + inPos] & Long.MAX_VALUE) << 5) & 255L));
         out[87 + outPos] = (byte)((int)((in[11 + inPos] & Long.MAX_VALUE) >>> 3 & 255L));
         out[88 + outPos] = (byte)((int)((in[11 + inPos] & Long.MAX_VALUE) >>> 11 & 255L));
         out[89 + outPos] = (byte)((int)((in[11 + inPos] & Long.MAX_VALUE) >>> 19 & 255L));
         out[90 + outPos] = (byte)((int)((in[11 + inPos] & Long.MAX_VALUE) >>> 27 & 255L));
         out[91 + outPos] = (byte)((int)((in[11 + inPos] & Long.MAX_VALUE) >>> 35 & 255L));
         out[92 + outPos] = (byte)((int)((in[11 + inPos] & Long.MAX_VALUE) >>> 43 & 255L));
         out[93 + outPos] = (byte)((int)((in[11 + inPos] & Long.MAX_VALUE) >>> 51 & 255L));
         out[94 + outPos] = (byte)((int)(((in[11 + inPos] & Long.MAX_VALUE) >>> 59 | (in[12 + inPos] & Long.MAX_VALUE) << 4) & 255L));
         out[95 + outPos] = (byte)((int)((in[12 + inPos] & Long.MAX_VALUE) >>> 4 & 255L));
         out[96 + outPos] = (byte)((int)((in[12 + inPos] & Long.MAX_VALUE) >>> 12 & 255L));
         out[97 + outPos] = (byte)((int)((in[12 + inPos] & Long.MAX_VALUE) >>> 20 & 255L));
         out[98 + outPos] = (byte)((int)((in[12 + inPos] & Long.MAX_VALUE) >>> 28 & 255L));
         out[99 + outPos] = (byte)((int)((in[12 + inPos] & Long.MAX_VALUE) >>> 36 & 255L));
         out[100 + outPos] = (byte)((int)((in[12 + inPos] & Long.MAX_VALUE) >>> 44 & 255L));
         out[101 + outPos] = (byte)((int)((in[12 + inPos] & Long.MAX_VALUE) >>> 52 & 255L));
         out[102 + outPos] = (byte)((int)(((in[12 + inPos] & Long.MAX_VALUE) >>> 60 | (in[13 + inPos] & Long.MAX_VALUE) << 3) & 255L));
         out[103 + outPos] = (byte)((int)((in[13 + inPos] & Long.MAX_VALUE) >>> 5 & 255L));
         out[104 + outPos] = (byte)((int)((in[13 + inPos] & Long.MAX_VALUE) >>> 13 & 255L));
         out[105 + outPos] = (byte)((int)((in[13 + inPos] & Long.MAX_VALUE) >>> 21 & 255L));
         out[106 + outPos] = (byte)((int)((in[13 + inPos] & Long.MAX_VALUE) >>> 29 & 255L));
         out[107 + outPos] = (byte)((int)((in[13 + inPos] & Long.MAX_VALUE) >>> 37 & 255L));
         out[108 + outPos] = (byte)((int)((in[13 + inPos] & Long.MAX_VALUE) >>> 45 & 255L));
         out[109 + outPos] = (byte)((int)((in[13 + inPos] & Long.MAX_VALUE) >>> 53 & 255L));
         out[110 + outPos] = (byte)((int)(((in[13 + inPos] & Long.MAX_VALUE) >>> 61 | (in[14 + inPos] & Long.MAX_VALUE) << 2) & 255L));
         out[111 + outPos] = (byte)((int)((in[14 + inPos] & Long.MAX_VALUE) >>> 6 & 255L));
         out[112 + outPos] = (byte)((int)((in[14 + inPos] & Long.MAX_VALUE) >>> 14 & 255L));
         out[113 + outPos] = (byte)((int)((in[14 + inPos] & Long.MAX_VALUE) >>> 22 & 255L));
         out[114 + outPos] = (byte)((int)((in[14 + inPos] & Long.MAX_VALUE) >>> 30 & 255L));
         out[115 + outPos] = (byte)((int)((in[14 + inPos] & Long.MAX_VALUE) >>> 38 & 255L));
         out[116 + outPos] = (byte)((int)((in[14 + inPos] & Long.MAX_VALUE) >>> 46 & 255L));
         out[117 + outPos] = (byte)((int)((in[14 + inPos] & Long.MAX_VALUE) >>> 54 & 255L));
         out[118 + outPos] = (byte)((int)(((in[14 + inPos] & Long.MAX_VALUE) >>> 62 | (in[15 + inPos] & Long.MAX_VALUE) << 1) & 255L));
         out[119 + outPos] = (byte)((int)((in[15 + inPos] & Long.MAX_VALUE) >>> 7 & 255L));
         out[120 + outPos] = (byte)((int)((in[15 + inPos] & Long.MAX_VALUE) >>> 15 & 255L));
         out[121 + outPos] = (byte)((int)((in[15 + inPos] & Long.MAX_VALUE) >>> 23 & 255L));
         out[122 + outPos] = (byte)((int)((in[15 + inPos] & Long.MAX_VALUE) >>> 31 & 255L));
         out[123 + outPos] = (byte)((int)((in[15 + inPos] & Long.MAX_VALUE) >>> 39 & 255L));
         out[124 + outPos] = (byte)((int)((in[15 + inPos] & Long.MAX_VALUE) >>> 47 & 255L));
         out[125 + outPos] = (byte)((int)((in[15 + inPos] & Long.MAX_VALUE) >>> 55 & 255L));
         out[126 + outPos] = (byte)((int)(in[16 + inPos] & Long.MAX_VALUE & 255L));
         out[127 + outPos] = (byte)((int)((in[16 + inPos] & Long.MAX_VALUE) >>> 8 & 255L));
         out[128 + outPos] = (byte)((int)((in[16 + inPos] & Long.MAX_VALUE) >>> 16 & 255L));
         out[129 + outPos] = (byte)((int)((in[16 + inPos] & Long.MAX_VALUE) >>> 24 & 255L));
         out[130 + outPos] = (byte)((int)((in[16 + inPos] & Long.MAX_VALUE) >>> 32 & 255L));
         out[131 + outPos] = (byte)((int)((in[16 + inPos] & Long.MAX_VALUE) >>> 40 & 255L));
         out[132 + outPos] = (byte)((int)((in[16 + inPos] & Long.MAX_VALUE) >>> 48 & 255L));
         out[133 + outPos] = (byte)((int)(((in[16 + inPos] & Long.MAX_VALUE) >>> 56 | (in[17 + inPos] & Long.MAX_VALUE) << 7) & 255L));
         out[134 + outPos] = (byte)((int)((in[17 + inPos] & Long.MAX_VALUE) >>> 1 & 255L));
         out[135 + outPos] = (byte)((int)((in[17 + inPos] & Long.MAX_VALUE) >>> 9 & 255L));
         out[136 + outPos] = (byte)((int)((in[17 + inPos] & Long.MAX_VALUE) >>> 17 & 255L));
         out[137 + outPos] = (byte)((int)((in[17 + inPos] & Long.MAX_VALUE) >>> 25 & 255L));
         out[138 + outPos] = (byte)((int)((in[17 + inPos] & Long.MAX_VALUE) >>> 33 & 255L));
         out[139 + outPos] = (byte)((int)((in[17 + inPos] & Long.MAX_VALUE) >>> 41 & 255L));
         out[140 + outPos] = (byte)((int)((in[17 + inPos] & Long.MAX_VALUE) >>> 49 & 255L));
         out[141 + outPos] = (byte)((int)(((in[17 + inPos] & Long.MAX_VALUE) >>> 57 | (in[18 + inPos] & Long.MAX_VALUE) << 6) & 255L));
         out[142 + outPos] = (byte)((int)((in[18 + inPos] & Long.MAX_VALUE) >>> 2 & 255L));
         out[143 + outPos] = (byte)((int)((in[18 + inPos] & Long.MAX_VALUE) >>> 10 & 255L));
         out[144 + outPos] = (byte)((int)((in[18 + inPos] & Long.MAX_VALUE) >>> 18 & 255L));
         out[145 + outPos] = (byte)((int)((in[18 + inPos] & Long.MAX_VALUE) >>> 26 & 255L));
         out[146 + outPos] = (byte)((int)((in[18 + inPos] & Long.MAX_VALUE) >>> 34 & 255L));
         out[147 + outPos] = (byte)((int)((in[18 + inPos] & Long.MAX_VALUE) >>> 42 & 255L));
         out[148 + outPos] = (byte)((int)((in[18 + inPos] & Long.MAX_VALUE) >>> 50 & 255L));
         out[149 + outPos] = (byte)((int)(((in[18 + inPos] & Long.MAX_VALUE) >>> 58 | (in[19 + inPos] & Long.MAX_VALUE) << 5) & 255L));
         out[150 + outPos] = (byte)((int)((in[19 + inPos] & Long.MAX_VALUE) >>> 3 & 255L));
         out[151 + outPos] = (byte)((int)((in[19 + inPos] & Long.MAX_VALUE) >>> 11 & 255L));
         out[152 + outPos] = (byte)((int)((in[19 + inPos] & Long.MAX_VALUE) >>> 19 & 255L));
         out[153 + outPos] = (byte)((int)((in[19 + inPos] & Long.MAX_VALUE) >>> 27 & 255L));
         out[154 + outPos] = (byte)((int)((in[19 + inPos] & Long.MAX_VALUE) >>> 35 & 255L));
         out[155 + outPos] = (byte)((int)((in[19 + inPos] & Long.MAX_VALUE) >>> 43 & 255L));
         out[156 + outPos] = (byte)((int)((in[19 + inPos] & Long.MAX_VALUE) >>> 51 & 255L));
         out[157 + outPos] = (byte)((int)(((in[19 + inPos] & Long.MAX_VALUE) >>> 59 | (in[20 + inPos] & Long.MAX_VALUE) << 4) & 255L));
         out[158 + outPos] = (byte)((int)((in[20 + inPos] & Long.MAX_VALUE) >>> 4 & 255L));
         out[159 + outPos] = (byte)((int)((in[20 + inPos] & Long.MAX_VALUE) >>> 12 & 255L));
         out[160 + outPos] = (byte)((int)((in[20 + inPos] & Long.MAX_VALUE) >>> 20 & 255L));
         out[161 + outPos] = (byte)((int)((in[20 + inPos] & Long.MAX_VALUE) >>> 28 & 255L));
         out[162 + outPos] = (byte)((int)((in[20 + inPos] & Long.MAX_VALUE) >>> 36 & 255L));
         out[163 + outPos] = (byte)((int)((in[20 + inPos] & Long.MAX_VALUE) >>> 44 & 255L));
         out[164 + outPos] = (byte)((int)((in[20 + inPos] & Long.MAX_VALUE) >>> 52 & 255L));
         out[165 + outPos] = (byte)((int)(((in[20 + inPos] & Long.MAX_VALUE) >>> 60 | (in[21 + inPos] & Long.MAX_VALUE) << 3) & 255L));
         out[166 + outPos] = (byte)((int)((in[21 + inPos] & Long.MAX_VALUE) >>> 5 & 255L));
         out[167 + outPos] = (byte)((int)((in[21 + inPos] & Long.MAX_VALUE) >>> 13 & 255L));
         out[168 + outPos] = (byte)((int)((in[21 + inPos] & Long.MAX_VALUE) >>> 21 & 255L));
         out[169 + outPos] = (byte)((int)((in[21 + inPos] & Long.MAX_VALUE) >>> 29 & 255L));
         out[170 + outPos] = (byte)((int)((in[21 + inPos] & Long.MAX_VALUE) >>> 37 & 255L));
         out[171 + outPos] = (byte)((int)((in[21 + inPos] & Long.MAX_VALUE) >>> 45 & 255L));
         out[172 + outPos] = (byte)((int)((in[21 + inPos] & Long.MAX_VALUE) >>> 53 & 255L));
         out[173 + outPos] = (byte)((int)(((in[21 + inPos] & Long.MAX_VALUE) >>> 61 | (in[22 + inPos] & Long.MAX_VALUE) << 2) & 255L));
         out[174 + outPos] = (byte)((int)((in[22 + inPos] & Long.MAX_VALUE) >>> 6 & 255L));
         out[175 + outPos] = (byte)((int)((in[22 + inPos] & Long.MAX_VALUE) >>> 14 & 255L));
         out[176 + outPos] = (byte)((int)((in[22 + inPos] & Long.MAX_VALUE) >>> 22 & 255L));
         out[177 + outPos] = (byte)((int)((in[22 + inPos] & Long.MAX_VALUE) >>> 30 & 255L));
         out[178 + outPos] = (byte)((int)((in[22 + inPos] & Long.MAX_VALUE) >>> 38 & 255L));
         out[179 + outPos] = (byte)((int)((in[22 + inPos] & Long.MAX_VALUE) >>> 46 & 255L));
         out[180 + outPos] = (byte)((int)((in[22 + inPos] & Long.MAX_VALUE) >>> 54 & 255L));
         out[181 + outPos] = (byte)((int)(((in[22 + inPos] & Long.MAX_VALUE) >>> 62 | (in[23 + inPos] & Long.MAX_VALUE) << 1) & 255L));
         out[182 + outPos] = (byte)((int)((in[23 + inPos] & Long.MAX_VALUE) >>> 7 & 255L));
         out[183 + outPos] = (byte)((int)((in[23 + inPos] & Long.MAX_VALUE) >>> 15 & 255L));
         out[184 + outPos] = (byte)((int)((in[23 + inPos] & Long.MAX_VALUE) >>> 23 & 255L));
         out[185 + outPos] = (byte)((int)((in[23 + inPos] & Long.MAX_VALUE) >>> 31 & 255L));
         out[186 + outPos] = (byte)((int)((in[23 + inPos] & Long.MAX_VALUE) >>> 39 & 255L));
         out[187 + outPos] = (byte)((int)((in[23 + inPos] & Long.MAX_VALUE) >>> 47 & 255L));
         out[188 + outPos] = (byte)((int)((in[23 + inPos] & Long.MAX_VALUE) >>> 55 & 255L));
         out[189 + outPos] = (byte)((int)(in[24 + inPos] & Long.MAX_VALUE & 255L));
         out[190 + outPos] = (byte)((int)((in[24 + inPos] & Long.MAX_VALUE) >>> 8 & 255L));
         out[191 + outPos] = (byte)((int)((in[24 + inPos] & Long.MAX_VALUE) >>> 16 & 255L));
         out[192 + outPos] = (byte)((int)((in[24 + inPos] & Long.MAX_VALUE) >>> 24 & 255L));
         out[193 + outPos] = (byte)((int)((in[24 + inPos] & Long.MAX_VALUE) >>> 32 & 255L));
         out[194 + outPos] = (byte)((int)((in[24 + inPos] & Long.MAX_VALUE) >>> 40 & 255L));
         out[195 + outPos] = (byte)((int)((in[24 + inPos] & Long.MAX_VALUE) >>> 48 & 255L));
         out[196 + outPos] = (byte)((int)(((in[24 + inPos] & Long.MAX_VALUE) >>> 56 | (in[25 + inPos] & Long.MAX_VALUE) << 7) & 255L));
         out[197 + outPos] = (byte)((int)((in[25 + inPos] & Long.MAX_VALUE) >>> 1 & 255L));
         out[198 + outPos] = (byte)((int)((in[25 + inPos] & Long.MAX_VALUE) >>> 9 & 255L));
         out[199 + outPos] = (byte)((int)((in[25 + inPos] & Long.MAX_VALUE) >>> 17 & 255L));
         out[200 + outPos] = (byte)((int)((in[25 + inPos] & Long.MAX_VALUE) >>> 25 & 255L));
         out[201 + outPos] = (byte)((int)((in[25 + inPos] & Long.MAX_VALUE) >>> 33 & 255L));
         out[202 + outPos] = (byte)((int)((in[25 + inPos] & Long.MAX_VALUE) >>> 41 & 255L));
         out[203 + outPos] = (byte)((int)((in[25 + inPos] & Long.MAX_VALUE) >>> 49 & 255L));
         out[204 + outPos] = (byte)((int)(((in[25 + inPos] & Long.MAX_VALUE) >>> 57 | (in[26 + inPos] & Long.MAX_VALUE) << 6) & 255L));
         out[205 + outPos] = (byte)((int)((in[26 + inPos] & Long.MAX_VALUE) >>> 2 & 255L));
         out[206 + outPos] = (byte)((int)((in[26 + inPos] & Long.MAX_VALUE) >>> 10 & 255L));
         out[207 + outPos] = (byte)((int)((in[26 + inPos] & Long.MAX_VALUE) >>> 18 & 255L));
         out[208 + outPos] = (byte)((int)((in[26 + inPos] & Long.MAX_VALUE) >>> 26 & 255L));
         out[209 + outPos] = (byte)((int)((in[26 + inPos] & Long.MAX_VALUE) >>> 34 & 255L));
         out[210 + outPos] = (byte)((int)((in[26 + inPos] & Long.MAX_VALUE) >>> 42 & 255L));
         out[211 + outPos] = (byte)((int)((in[26 + inPos] & Long.MAX_VALUE) >>> 50 & 255L));
         out[212 + outPos] = (byte)((int)(((in[26 + inPos] & Long.MAX_VALUE) >>> 58 | (in[27 + inPos] & Long.MAX_VALUE) << 5) & 255L));
         out[213 + outPos] = (byte)((int)((in[27 + inPos] & Long.MAX_VALUE) >>> 3 & 255L));
         out[214 + outPos] = (byte)((int)((in[27 + inPos] & Long.MAX_VALUE) >>> 11 & 255L));
         out[215 + outPos] = (byte)((int)((in[27 + inPos] & Long.MAX_VALUE) >>> 19 & 255L));
         out[216 + outPos] = (byte)((int)((in[27 + inPos] & Long.MAX_VALUE) >>> 27 & 255L));
         out[217 + outPos] = (byte)((int)((in[27 + inPos] & Long.MAX_VALUE) >>> 35 & 255L));
         out[218 + outPos] = (byte)((int)((in[27 + inPos] & Long.MAX_VALUE) >>> 43 & 255L));
         out[219 + outPos] = (byte)((int)((in[27 + inPos] & Long.MAX_VALUE) >>> 51 & 255L));
         out[220 + outPos] = (byte)((int)(((in[27 + inPos] & Long.MAX_VALUE) >>> 59 | (in[28 + inPos] & Long.MAX_VALUE) << 4) & 255L));
         out[221 + outPos] = (byte)((int)((in[28 + inPos] & Long.MAX_VALUE) >>> 4 & 255L));
         out[222 + outPos] = (byte)((int)((in[28 + inPos] & Long.MAX_VALUE) >>> 12 & 255L));
         out[223 + outPos] = (byte)((int)((in[28 + inPos] & Long.MAX_VALUE) >>> 20 & 255L));
         out[224 + outPos] = (byte)((int)((in[28 + inPos] & Long.MAX_VALUE) >>> 28 & 255L));
         out[225 + outPos] = (byte)((int)((in[28 + inPos] & Long.MAX_VALUE) >>> 36 & 255L));
         out[226 + outPos] = (byte)((int)((in[28 + inPos] & Long.MAX_VALUE) >>> 44 & 255L));
         out[227 + outPos] = (byte)((int)((in[28 + inPos] & Long.MAX_VALUE) >>> 52 & 255L));
         out[228 + outPos] = (byte)((int)(((in[28 + inPos] & Long.MAX_VALUE) >>> 60 | (in[29 + inPos] & Long.MAX_VALUE) << 3) & 255L));
         out[229 + outPos] = (byte)((int)((in[29 + inPos] & Long.MAX_VALUE) >>> 5 & 255L));
         out[230 + outPos] = (byte)((int)((in[29 + inPos] & Long.MAX_VALUE) >>> 13 & 255L));
         out[231 + outPos] = (byte)((int)((in[29 + inPos] & Long.MAX_VALUE) >>> 21 & 255L));
         out[232 + outPos] = (byte)((int)((in[29 + inPos] & Long.MAX_VALUE) >>> 29 & 255L));
         out[233 + outPos] = (byte)((int)((in[29 + inPos] & Long.MAX_VALUE) >>> 37 & 255L));
         out[234 + outPos] = (byte)((int)((in[29 + inPos] & Long.MAX_VALUE) >>> 45 & 255L));
         out[235 + outPos] = (byte)((int)((in[29 + inPos] & Long.MAX_VALUE) >>> 53 & 255L));
         out[236 + outPos] = (byte)((int)(((in[29 + inPos] & Long.MAX_VALUE) >>> 61 | (in[30 + inPos] & Long.MAX_VALUE) << 2) & 255L));
         out[237 + outPos] = (byte)((int)((in[30 + inPos] & Long.MAX_VALUE) >>> 6 & 255L));
         out[238 + outPos] = (byte)((int)((in[30 + inPos] & Long.MAX_VALUE) >>> 14 & 255L));
         out[239 + outPos] = (byte)((int)((in[30 + inPos] & Long.MAX_VALUE) >>> 22 & 255L));
         out[240 + outPos] = (byte)((int)((in[30 + inPos] & Long.MAX_VALUE) >>> 30 & 255L));
         out[241 + outPos] = (byte)((int)((in[30 + inPos] & Long.MAX_VALUE) >>> 38 & 255L));
         out[242 + outPos] = (byte)((int)((in[30 + inPos] & Long.MAX_VALUE) >>> 46 & 255L));
         out[243 + outPos] = (byte)((int)((in[30 + inPos] & Long.MAX_VALUE) >>> 54 & 255L));
         out[244 + outPos] = (byte)((int)(((in[30 + inPos] & Long.MAX_VALUE) >>> 62 | (in[31 + inPos] & Long.MAX_VALUE) << 1) & 255L));
         out[245 + outPos] = (byte)((int)((in[31 + inPos] & Long.MAX_VALUE) >>> 7 & 255L));
         out[246 + outPos] = (byte)((int)((in[31 + inPos] & Long.MAX_VALUE) >>> 15 & 255L));
         out[247 + outPos] = (byte)((int)((in[31 + inPos] & Long.MAX_VALUE) >>> 23 & 255L));
         out[248 + outPos] = (byte)((int)((in[31 + inPos] & Long.MAX_VALUE) >>> 31 & 255L));
         out[249 + outPos] = (byte)((int)((in[31 + inPos] & Long.MAX_VALUE) >>> 39 & 255L));
         out[250 + outPos] = (byte)((int)((in[31 + inPos] & Long.MAX_VALUE) >>> 47 & 255L));
         out[251 + outPos] = (byte)((int)((in[31 + inPos] & Long.MAX_VALUE) >>> 55 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & Long.MAX_VALUE;
         out[1 + outPos] = (long)in[7 + inPos] >> 7 & 1L | (long)in[8 + inPos] << 1 & 511L | (long)in[9 + inPos] << 9 & 131071L | (long)in[10 + inPos] << 17 & 33554431L | (long)in[11 + inPos] << 25 & 8589934591L | (long)in[12 + inPos] << 33 & 2199023255551L | (long)in[13 + inPos] << 41 & 562949953421311L | (long)in[14 + inPos] << 49 & 144115188075855871L | (long)in[15 + inPos] << 57 & Long.MAX_VALUE;
         out[2 + outPos] = (long)in[15 + inPos] >> 6 & 3L | (long)in[16 + inPos] << 2 & 1023L | (long)in[17 + inPos] << 10 & 262143L | (long)in[18 + inPos] << 18 & 67108863L | (long)in[19 + inPos] << 26 & 17179869183L | (long)in[20 + inPos] << 34 & 4398046511103L | (long)in[21 + inPos] << 42 & 1125899906842623L | (long)in[22 + inPos] << 50 & 288230376151711743L | (long)in[23 + inPos] << 58 & Long.MAX_VALUE;
         out[3 + outPos] = (long)in[23 + inPos] >> 5 & 7L | (long)in[24 + inPos] << 3 & 2047L | (long)in[25 + inPos] << 11 & 524287L | (long)in[26 + inPos] << 19 & 134217727L | (long)in[27 + inPos] << 27 & 34359738367L | (long)in[28 + inPos] << 35 & 8796093022207L | (long)in[29 + inPos] << 43 & 2251799813685247L | (long)in[30 + inPos] << 51 & 576460752303423487L | (long)in[31 + inPos] << 59 & Long.MAX_VALUE;
         out[4 + outPos] = (long)in[31 + inPos] >> 4 & 15L | (long)in[32 + inPos] << 4 & 4095L | (long)in[33 + inPos] << 12 & 1048575L | (long)in[34 + inPos] << 20 & 268435455L | (long)in[35 + inPos] << 28 & 68719476735L | (long)in[36 + inPos] << 36 & 17592186044415L | (long)in[37 + inPos] << 44 & 4503599627370495L | (long)in[38 + inPos] << 52 & 1152921504606846975L | (long)in[39 + inPos] << 60 & Long.MAX_VALUE;
         out[5 + outPos] = (long)in[39 + inPos] >> 3 & 31L | (long)in[40 + inPos] << 5 & 8191L | (long)in[41 + inPos] << 13 & 2097151L | (long)in[42 + inPos] << 21 & 536870911L | (long)in[43 + inPos] << 29 & 137438953471L | (long)in[44 + inPos] << 37 & 35184372088831L | (long)in[45 + inPos] << 45 & 9007199254740991L | (long)in[46 + inPos] << 53 & 2305843009213693951L | (long)in[47 + inPos] << 61 & Long.MAX_VALUE;
         out[6 + outPos] = (long)in[47 + inPos] >> 2 & 63L | (long)in[48 + inPos] << 6 & 16383L | (long)in[49 + inPos] << 14 & 4194303L | (long)in[50 + inPos] << 22 & 1073741823L | (long)in[51 + inPos] << 30 & 274877906943L | (long)in[52 + inPos] << 38 & 70368744177663L | (long)in[53 + inPos] << 46 & 18014398509481983L | (long)in[54 + inPos] << 54 & 4611686018427387903L | (long)in[55 + inPos] << 62 & Long.MAX_VALUE;
         out[7 + outPos] = (long)in[55 + inPos] >> 1 & 127L | (long)in[56 + inPos] << 7 & 32767L | (long)in[57 + inPos] << 15 & 8388607L | (long)in[58 + inPos] << 23 & 2147483647L | (long)in[59 + inPos] << 31 & 549755813887L | (long)in[60 + inPos] << 39 & 140737488355327L | (long)in[61 + inPos] << 47 & 36028797018963967L | (long)in[62 + inPos] << 55 & Long.MAX_VALUE;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & Long.MAX_VALUE;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 7 & 1L | (long)in.get(8 + inPos) << 1 & 511L | (long)in.get(9 + inPos) << 9 & 131071L | (long)in.get(10 + inPos) << 17 & 33554431L | (long)in.get(11 + inPos) << 25 & 8589934591L | (long)in.get(12 + inPos) << 33 & 2199023255551L | (long)in.get(13 + inPos) << 41 & 562949953421311L | (long)in.get(14 + inPos) << 49 & 144115188075855871L | (long)in.get(15 + inPos) << 57 & Long.MAX_VALUE;
         out[2 + outPos] = (long)in.get(15 + inPos) >> 6 & 3L | (long)in.get(16 + inPos) << 2 & 1023L | (long)in.get(17 + inPos) << 10 & 262143L | (long)in.get(18 + inPos) << 18 & 67108863L | (long)in.get(19 + inPos) << 26 & 17179869183L | (long)in.get(20 + inPos) << 34 & 4398046511103L | (long)in.get(21 + inPos) << 42 & 1125899906842623L | (long)in.get(22 + inPos) << 50 & 288230376151711743L | (long)in.get(23 + inPos) << 58 & Long.MAX_VALUE;
         out[3 + outPos] = (long)in.get(23 + inPos) >> 5 & 7L | (long)in.get(24 + inPos) << 3 & 2047L | (long)in.get(25 + inPos) << 11 & 524287L | (long)in.get(26 + inPos) << 19 & 134217727L | (long)in.get(27 + inPos) << 27 & 34359738367L | (long)in.get(28 + inPos) << 35 & 8796093022207L | (long)in.get(29 + inPos) << 43 & 2251799813685247L | (long)in.get(30 + inPos) << 51 & 576460752303423487L | (long)in.get(31 + inPos) << 59 & Long.MAX_VALUE;
         out[4 + outPos] = (long)in.get(31 + inPos) >> 4 & 15L | (long)in.get(32 + inPos) << 4 & 4095L | (long)in.get(33 + inPos) << 12 & 1048575L | (long)in.get(34 + inPos) << 20 & 268435455L | (long)in.get(35 + inPos) << 28 & 68719476735L | (long)in.get(36 + inPos) << 36 & 17592186044415L | (long)in.get(37 + inPos) << 44 & 4503599627370495L | (long)in.get(38 + inPos) << 52 & 1152921504606846975L | (long)in.get(39 + inPos) << 60 & Long.MAX_VALUE;
         out[5 + outPos] = (long)in.get(39 + inPos) >> 3 & 31L | (long)in.get(40 + inPos) << 5 & 8191L | (long)in.get(41 + inPos) << 13 & 2097151L | (long)in.get(42 + inPos) << 21 & 536870911L | (long)in.get(43 + inPos) << 29 & 137438953471L | (long)in.get(44 + inPos) << 37 & 35184372088831L | (long)in.get(45 + inPos) << 45 & 9007199254740991L | (long)in.get(46 + inPos) << 53 & 2305843009213693951L | (long)in.get(47 + inPos) << 61 & Long.MAX_VALUE;
         out[6 + outPos] = (long)in.get(47 + inPos) >> 2 & 63L | (long)in.get(48 + inPos) << 6 & 16383L | (long)in.get(49 + inPos) << 14 & 4194303L | (long)in.get(50 + inPos) << 22 & 1073741823L | (long)in.get(51 + inPos) << 30 & 274877906943L | (long)in.get(52 + inPos) << 38 & 70368744177663L | (long)in.get(53 + inPos) << 46 & 18014398509481983L | (long)in.get(54 + inPos) << 54 & 4611686018427387903L | (long)in.get(55 + inPos) << 62 & Long.MAX_VALUE;
         out[7 + outPos] = (long)in.get(55 + inPos) >> 1 & 127L | (long)in.get(56 + inPos) << 7 & 32767L | (long)in.get(57 + inPos) << 15 & 8388607L | (long)in.get(58 + inPos) << 23 & 2147483647L | (long)in.get(59 + inPos) << 31 & 549755813887L | (long)in.get(60 + inPos) << 39 & 140737488355327L | (long)in.get(61 + inPos) << 47 & 36028797018963967L | (long)in.get(62 + inPos) << 55 & Long.MAX_VALUE;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & Long.MAX_VALUE;
         out[1 + outPos] = (long)in[7 + inPos] >> 7 & 1L | (long)in[8 + inPos] << 1 & 511L | (long)in[9 + inPos] << 9 & 131071L | (long)in[10 + inPos] << 17 & 33554431L | (long)in[11 + inPos] << 25 & 8589934591L | (long)in[12 + inPos] << 33 & 2199023255551L | (long)in[13 + inPos] << 41 & 562949953421311L | (long)in[14 + inPos] << 49 & 144115188075855871L | (long)in[15 + inPos] << 57 & Long.MAX_VALUE;
         out[2 + outPos] = (long)in[15 + inPos] >> 6 & 3L | (long)in[16 + inPos] << 2 & 1023L | (long)in[17 + inPos] << 10 & 262143L | (long)in[18 + inPos] << 18 & 67108863L | (long)in[19 + inPos] << 26 & 17179869183L | (long)in[20 + inPos] << 34 & 4398046511103L | (long)in[21 + inPos] << 42 & 1125899906842623L | (long)in[22 + inPos] << 50 & 288230376151711743L | (long)in[23 + inPos] << 58 & Long.MAX_VALUE;
         out[3 + outPos] = (long)in[23 + inPos] >> 5 & 7L | (long)in[24 + inPos] << 3 & 2047L | (long)in[25 + inPos] << 11 & 524287L | (long)in[26 + inPos] << 19 & 134217727L | (long)in[27 + inPos] << 27 & 34359738367L | (long)in[28 + inPos] << 35 & 8796093022207L | (long)in[29 + inPos] << 43 & 2251799813685247L | (long)in[30 + inPos] << 51 & 576460752303423487L | (long)in[31 + inPos] << 59 & Long.MAX_VALUE;
         out[4 + outPos] = (long)in[31 + inPos] >> 4 & 15L | (long)in[32 + inPos] << 4 & 4095L | (long)in[33 + inPos] << 12 & 1048575L | (long)in[34 + inPos] << 20 & 268435455L | (long)in[35 + inPos] << 28 & 68719476735L | (long)in[36 + inPos] << 36 & 17592186044415L | (long)in[37 + inPos] << 44 & 4503599627370495L | (long)in[38 + inPos] << 52 & 1152921504606846975L | (long)in[39 + inPos] << 60 & Long.MAX_VALUE;
         out[5 + outPos] = (long)in[39 + inPos] >> 3 & 31L | (long)in[40 + inPos] << 5 & 8191L | (long)in[41 + inPos] << 13 & 2097151L | (long)in[42 + inPos] << 21 & 536870911L | (long)in[43 + inPos] << 29 & 137438953471L | (long)in[44 + inPos] << 37 & 35184372088831L | (long)in[45 + inPos] << 45 & 9007199254740991L | (long)in[46 + inPos] << 53 & 2305843009213693951L | (long)in[47 + inPos] << 61 & Long.MAX_VALUE;
         out[6 + outPos] = (long)in[47 + inPos] >> 2 & 63L | (long)in[48 + inPos] << 6 & 16383L | (long)in[49 + inPos] << 14 & 4194303L | (long)in[50 + inPos] << 22 & 1073741823L | (long)in[51 + inPos] << 30 & 274877906943L | (long)in[52 + inPos] << 38 & 70368744177663L | (long)in[53 + inPos] << 46 & 18014398509481983L | (long)in[54 + inPos] << 54 & 4611686018427387903L | (long)in[55 + inPos] << 62 & Long.MAX_VALUE;
         out[7 + outPos] = (long)in[55 + inPos] >> 1 & 127L | (long)in[56 + inPos] << 7 & 32767L | (long)in[57 + inPos] << 15 & 8388607L | (long)in[58 + inPos] << 23 & 2147483647L | (long)in[59 + inPos] << 31 & 549755813887L | (long)in[60 + inPos] << 39 & 140737488355327L | (long)in[61 + inPos] << 47 & 36028797018963967L | (long)in[62 + inPos] << 55 & Long.MAX_VALUE;
         out[8 + outPos] = (long)in[63 + inPos] & 255L | (long)in[64 + inPos] << 8 & 65535L | (long)in[65 + inPos] << 16 & 16777215L | (long)in[66 + inPos] << 24 & 4294967295L | (long)in[67 + inPos] << 32 & 1099511627775L | (long)in[68 + inPos] << 40 & 281474976710655L | (long)in[69 + inPos] << 48 & 72057594037927935L | (long)in[70 + inPos] << 56 & Long.MAX_VALUE;
         out[9 + outPos] = (long)in[70 + inPos] >> 7 & 1L | (long)in[71 + inPos] << 1 & 511L | (long)in[72 + inPos] << 9 & 131071L | (long)in[73 + inPos] << 17 & 33554431L | (long)in[74 + inPos] << 25 & 8589934591L | (long)in[75 + inPos] << 33 & 2199023255551L | (long)in[76 + inPos] << 41 & 562949953421311L | (long)in[77 + inPos] << 49 & 144115188075855871L | (long)in[78 + inPos] << 57 & Long.MAX_VALUE;
         out[10 + outPos] = (long)in[78 + inPos] >> 6 & 3L | (long)in[79 + inPos] << 2 & 1023L | (long)in[80 + inPos] << 10 & 262143L | (long)in[81 + inPos] << 18 & 67108863L | (long)in[82 + inPos] << 26 & 17179869183L | (long)in[83 + inPos] << 34 & 4398046511103L | (long)in[84 + inPos] << 42 & 1125899906842623L | (long)in[85 + inPos] << 50 & 288230376151711743L | (long)in[86 + inPos] << 58 & Long.MAX_VALUE;
         out[11 + outPos] = (long)in[86 + inPos] >> 5 & 7L | (long)in[87 + inPos] << 3 & 2047L | (long)in[88 + inPos] << 11 & 524287L | (long)in[89 + inPos] << 19 & 134217727L | (long)in[90 + inPos] << 27 & 34359738367L | (long)in[91 + inPos] << 35 & 8796093022207L | (long)in[92 + inPos] << 43 & 2251799813685247L | (long)in[93 + inPos] << 51 & 576460752303423487L | (long)in[94 + inPos] << 59 & Long.MAX_VALUE;
         out[12 + outPos] = (long)in[94 + inPos] >> 4 & 15L | (long)in[95 + inPos] << 4 & 4095L | (long)in[96 + inPos] << 12 & 1048575L | (long)in[97 + inPos] << 20 & 268435455L | (long)in[98 + inPos] << 28 & 68719476735L | (long)in[99 + inPos] << 36 & 17592186044415L | (long)in[100 + inPos] << 44 & 4503599627370495L | (long)in[101 + inPos] << 52 & 1152921504606846975L | (long)in[102 + inPos] << 60 & Long.MAX_VALUE;
         out[13 + outPos] = (long)in[102 + inPos] >> 3 & 31L | (long)in[103 + inPos] << 5 & 8191L | (long)in[104 + inPos] << 13 & 2097151L | (long)in[105 + inPos] << 21 & 536870911L | (long)in[106 + inPos] << 29 & 137438953471L | (long)in[107 + inPos] << 37 & 35184372088831L | (long)in[108 + inPos] << 45 & 9007199254740991L | (long)in[109 + inPos] << 53 & 2305843009213693951L | (long)in[110 + inPos] << 61 & Long.MAX_VALUE;
         out[14 + outPos] = (long)in[110 + inPos] >> 2 & 63L | (long)in[111 + inPos] << 6 & 16383L | (long)in[112 + inPos] << 14 & 4194303L | (long)in[113 + inPos] << 22 & 1073741823L | (long)in[114 + inPos] << 30 & 274877906943L | (long)in[115 + inPos] << 38 & 70368744177663L | (long)in[116 + inPos] << 46 & 18014398509481983L | (long)in[117 + inPos] << 54 & 4611686018427387903L | (long)in[118 + inPos] << 62 & Long.MAX_VALUE;
         out[15 + outPos] = (long)in[118 + inPos] >> 1 & 127L | (long)in[119 + inPos] << 7 & 32767L | (long)in[120 + inPos] << 15 & 8388607L | (long)in[121 + inPos] << 23 & 2147483647L | (long)in[122 + inPos] << 31 & 549755813887L | (long)in[123 + inPos] << 39 & 140737488355327L | (long)in[124 + inPos] << 47 & 36028797018963967L | (long)in[125 + inPos] << 55 & Long.MAX_VALUE;
         out[16 + outPos] = (long)in[126 + inPos] & 255L | (long)in[127 + inPos] << 8 & 65535L | (long)in[128 + inPos] << 16 & 16777215L | (long)in[129 + inPos] << 24 & 4294967295L | (long)in[130 + inPos] << 32 & 1099511627775L | (long)in[131 + inPos] << 40 & 281474976710655L | (long)in[132 + inPos] << 48 & 72057594037927935L | (long)in[133 + inPos] << 56 & Long.MAX_VALUE;
         out[17 + outPos] = (long)in[133 + inPos] >> 7 & 1L | (long)in[134 + inPos] << 1 & 511L | (long)in[135 + inPos] << 9 & 131071L | (long)in[136 + inPos] << 17 & 33554431L | (long)in[137 + inPos] << 25 & 8589934591L | (long)in[138 + inPos] << 33 & 2199023255551L | (long)in[139 + inPos] << 41 & 562949953421311L | (long)in[140 + inPos] << 49 & 144115188075855871L | (long)in[141 + inPos] << 57 & Long.MAX_VALUE;
         out[18 + outPos] = (long)in[141 + inPos] >> 6 & 3L | (long)in[142 + inPos] << 2 & 1023L | (long)in[143 + inPos] << 10 & 262143L | (long)in[144 + inPos] << 18 & 67108863L | (long)in[145 + inPos] << 26 & 17179869183L | (long)in[146 + inPos] << 34 & 4398046511103L | (long)in[147 + inPos] << 42 & 1125899906842623L | (long)in[148 + inPos] << 50 & 288230376151711743L | (long)in[149 + inPos] << 58 & Long.MAX_VALUE;
         out[19 + outPos] = (long)in[149 + inPos] >> 5 & 7L | (long)in[150 + inPos] << 3 & 2047L | (long)in[151 + inPos] << 11 & 524287L | (long)in[152 + inPos] << 19 & 134217727L | (long)in[153 + inPos] << 27 & 34359738367L | (long)in[154 + inPos] << 35 & 8796093022207L | (long)in[155 + inPos] << 43 & 2251799813685247L | (long)in[156 + inPos] << 51 & 576460752303423487L | (long)in[157 + inPos] << 59 & Long.MAX_VALUE;
         out[20 + outPos] = (long)in[157 + inPos] >> 4 & 15L | (long)in[158 + inPos] << 4 & 4095L | (long)in[159 + inPos] << 12 & 1048575L | (long)in[160 + inPos] << 20 & 268435455L | (long)in[161 + inPos] << 28 & 68719476735L | (long)in[162 + inPos] << 36 & 17592186044415L | (long)in[163 + inPos] << 44 & 4503599627370495L | (long)in[164 + inPos] << 52 & 1152921504606846975L | (long)in[165 + inPos] << 60 & Long.MAX_VALUE;
         out[21 + outPos] = (long)in[165 + inPos] >> 3 & 31L | (long)in[166 + inPos] << 5 & 8191L | (long)in[167 + inPos] << 13 & 2097151L | (long)in[168 + inPos] << 21 & 536870911L | (long)in[169 + inPos] << 29 & 137438953471L | (long)in[170 + inPos] << 37 & 35184372088831L | (long)in[171 + inPos] << 45 & 9007199254740991L | (long)in[172 + inPos] << 53 & 2305843009213693951L | (long)in[173 + inPos] << 61 & Long.MAX_VALUE;
         out[22 + outPos] = (long)in[173 + inPos] >> 2 & 63L | (long)in[174 + inPos] << 6 & 16383L | (long)in[175 + inPos] << 14 & 4194303L | (long)in[176 + inPos] << 22 & 1073741823L | (long)in[177 + inPos] << 30 & 274877906943L | (long)in[178 + inPos] << 38 & 70368744177663L | (long)in[179 + inPos] << 46 & 18014398509481983L | (long)in[180 + inPos] << 54 & 4611686018427387903L | (long)in[181 + inPos] << 62 & Long.MAX_VALUE;
         out[23 + outPos] = (long)in[181 + inPos] >> 1 & 127L | (long)in[182 + inPos] << 7 & 32767L | (long)in[183 + inPos] << 15 & 8388607L | (long)in[184 + inPos] << 23 & 2147483647L | (long)in[185 + inPos] << 31 & 549755813887L | (long)in[186 + inPos] << 39 & 140737488355327L | (long)in[187 + inPos] << 47 & 36028797018963967L | (long)in[188 + inPos] << 55 & Long.MAX_VALUE;
         out[24 + outPos] = (long)in[189 + inPos] & 255L | (long)in[190 + inPos] << 8 & 65535L | (long)in[191 + inPos] << 16 & 16777215L | (long)in[192 + inPos] << 24 & 4294967295L | (long)in[193 + inPos] << 32 & 1099511627775L | (long)in[194 + inPos] << 40 & 281474976710655L | (long)in[195 + inPos] << 48 & 72057594037927935L | (long)in[196 + inPos] << 56 & Long.MAX_VALUE;
         out[25 + outPos] = (long)in[196 + inPos] >> 7 & 1L | (long)in[197 + inPos] << 1 & 511L | (long)in[198 + inPos] << 9 & 131071L | (long)in[199 + inPos] << 17 & 33554431L | (long)in[200 + inPos] << 25 & 8589934591L | (long)in[201 + inPos] << 33 & 2199023255551L | (long)in[202 + inPos] << 41 & 562949953421311L | (long)in[203 + inPos] << 49 & 144115188075855871L | (long)in[204 + inPos] << 57 & Long.MAX_VALUE;
         out[26 + outPos] = (long)in[204 + inPos] >> 6 & 3L | (long)in[205 + inPos] << 2 & 1023L | (long)in[206 + inPos] << 10 & 262143L | (long)in[207 + inPos] << 18 & 67108863L | (long)in[208 + inPos] << 26 & 17179869183L | (long)in[209 + inPos] << 34 & 4398046511103L | (long)in[210 + inPos] << 42 & 1125899906842623L | (long)in[211 + inPos] << 50 & 288230376151711743L | (long)in[212 + inPos] << 58 & Long.MAX_VALUE;
         out[27 + outPos] = (long)in[212 + inPos] >> 5 & 7L | (long)in[213 + inPos] << 3 & 2047L | (long)in[214 + inPos] << 11 & 524287L | (long)in[215 + inPos] << 19 & 134217727L | (long)in[216 + inPos] << 27 & 34359738367L | (long)in[217 + inPos] << 35 & 8796093022207L | (long)in[218 + inPos] << 43 & 2251799813685247L | (long)in[219 + inPos] << 51 & 576460752303423487L | (long)in[220 + inPos] << 59 & Long.MAX_VALUE;
         out[28 + outPos] = (long)in[220 + inPos] >> 4 & 15L | (long)in[221 + inPos] << 4 & 4095L | (long)in[222 + inPos] << 12 & 1048575L | (long)in[223 + inPos] << 20 & 268435455L | (long)in[224 + inPos] << 28 & 68719476735L | (long)in[225 + inPos] << 36 & 17592186044415L | (long)in[226 + inPos] << 44 & 4503599627370495L | (long)in[227 + inPos] << 52 & 1152921504606846975L | (long)in[228 + inPos] << 60 & Long.MAX_VALUE;
         out[29 + outPos] = (long)in[228 + inPos] >> 3 & 31L | (long)in[229 + inPos] << 5 & 8191L | (long)in[230 + inPos] << 13 & 2097151L | (long)in[231 + inPos] << 21 & 536870911L | (long)in[232 + inPos] << 29 & 137438953471L | (long)in[233 + inPos] << 37 & 35184372088831L | (long)in[234 + inPos] << 45 & 9007199254740991L | (long)in[235 + inPos] << 53 & 2305843009213693951L | (long)in[236 + inPos] << 61 & Long.MAX_VALUE;
         out[30 + outPos] = (long)in[236 + inPos] >> 2 & 63L | (long)in[237 + inPos] << 6 & 16383L | (long)in[238 + inPos] << 14 & 4194303L | (long)in[239 + inPos] << 22 & 1073741823L | (long)in[240 + inPos] << 30 & 274877906943L | (long)in[241 + inPos] << 38 & 70368744177663L | (long)in[242 + inPos] << 46 & 18014398509481983L | (long)in[243 + inPos] << 54 & 4611686018427387903L | (long)in[244 + inPos] << 62 & Long.MAX_VALUE;
         out[31 + outPos] = (long)in[244 + inPos] >> 1 & 127L | (long)in[245 + inPos] << 7 & 32767L | (long)in[246 + inPos] << 15 & 8388607L | (long)in[247 + inPos] << 23 & 2147483647L | (long)in[248 + inPos] << 31 & 549755813887L | (long)in[249 + inPos] << 39 & 140737488355327L | (long)in[250 + inPos] << 47 & 36028797018963967L | (long)in[251 + inPos] << 55 & Long.MAX_VALUE;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & Long.MAX_VALUE;
         out[1 + outPos] = (long)in.get(7 + inPos) >> 7 & 1L | (long)in.get(8 + inPos) << 1 & 511L | (long)in.get(9 + inPos) << 9 & 131071L | (long)in.get(10 + inPos) << 17 & 33554431L | (long)in.get(11 + inPos) << 25 & 8589934591L | (long)in.get(12 + inPos) << 33 & 2199023255551L | (long)in.get(13 + inPos) << 41 & 562949953421311L | (long)in.get(14 + inPos) << 49 & 144115188075855871L | (long)in.get(15 + inPos) << 57 & Long.MAX_VALUE;
         out[2 + outPos] = (long)in.get(15 + inPos) >> 6 & 3L | (long)in.get(16 + inPos) << 2 & 1023L | (long)in.get(17 + inPos) << 10 & 262143L | (long)in.get(18 + inPos) << 18 & 67108863L | (long)in.get(19 + inPos) << 26 & 17179869183L | (long)in.get(20 + inPos) << 34 & 4398046511103L | (long)in.get(21 + inPos) << 42 & 1125899906842623L | (long)in.get(22 + inPos) << 50 & 288230376151711743L | (long)in.get(23 + inPos) << 58 & Long.MAX_VALUE;
         out[3 + outPos] = (long)in.get(23 + inPos) >> 5 & 7L | (long)in.get(24 + inPos) << 3 & 2047L | (long)in.get(25 + inPos) << 11 & 524287L | (long)in.get(26 + inPos) << 19 & 134217727L | (long)in.get(27 + inPos) << 27 & 34359738367L | (long)in.get(28 + inPos) << 35 & 8796093022207L | (long)in.get(29 + inPos) << 43 & 2251799813685247L | (long)in.get(30 + inPos) << 51 & 576460752303423487L | (long)in.get(31 + inPos) << 59 & Long.MAX_VALUE;
         out[4 + outPos] = (long)in.get(31 + inPos) >> 4 & 15L | (long)in.get(32 + inPos) << 4 & 4095L | (long)in.get(33 + inPos) << 12 & 1048575L | (long)in.get(34 + inPos) << 20 & 268435455L | (long)in.get(35 + inPos) << 28 & 68719476735L | (long)in.get(36 + inPos) << 36 & 17592186044415L | (long)in.get(37 + inPos) << 44 & 4503599627370495L | (long)in.get(38 + inPos) << 52 & 1152921504606846975L | (long)in.get(39 + inPos) << 60 & Long.MAX_VALUE;
         out[5 + outPos] = (long)in.get(39 + inPos) >> 3 & 31L | (long)in.get(40 + inPos) << 5 & 8191L | (long)in.get(41 + inPos) << 13 & 2097151L | (long)in.get(42 + inPos) << 21 & 536870911L | (long)in.get(43 + inPos) << 29 & 137438953471L | (long)in.get(44 + inPos) << 37 & 35184372088831L | (long)in.get(45 + inPos) << 45 & 9007199254740991L | (long)in.get(46 + inPos) << 53 & 2305843009213693951L | (long)in.get(47 + inPos) << 61 & Long.MAX_VALUE;
         out[6 + outPos] = (long)in.get(47 + inPos) >> 2 & 63L | (long)in.get(48 + inPos) << 6 & 16383L | (long)in.get(49 + inPos) << 14 & 4194303L | (long)in.get(50 + inPos) << 22 & 1073741823L | (long)in.get(51 + inPos) << 30 & 274877906943L | (long)in.get(52 + inPos) << 38 & 70368744177663L | (long)in.get(53 + inPos) << 46 & 18014398509481983L | (long)in.get(54 + inPos) << 54 & 4611686018427387903L | (long)in.get(55 + inPos) << 62 & Long.MAX_VALUE;
         out[7 + outPos] = (long)in.get(55 + inPos) >> 1 & 127L | (long)in.get(56 + inPos) << 7 & 32767L | (long)in.get(57 + inPos) << 15 & 8388607L | (long)in.get(58 + inPos) << 23 & 2147483647L | (long)in.get(59 + inPos) << 31 & 549755813887L | (long)in.get(60 + inPos) << 39 & 140737488355327L | (long)in.get(61 + inPos) << 47 & 36028797018963967L | (long)in.get(62 + inPos) << 55 & Long.MAX_VALUE;
         out[8 + outPos] = (long)in.get(63 + inPos) & 255L | (long)in.get(64 + inPos) << 8 & 65535L | (long)in.get(65 + inPos) << 16 & 16777215L | (long)in.get(66 + inPos) << 24 & 4294967295L | (long)in.get(67 + inPos) << 32 & 1099511627775L | (long)in.get(68 + inPos) << 40 & 281474976710655L | (long)in.get(69 + inPos) << 48 & 72057594037927935L | (long)in.get(70 + inPos) << 56 & Long.MAX_VALUE;
         out[9 + outPos] = (long)in.get(70 + inPos) >> 7 & 1L | (long)in.get(71 + inPos) << 1 & 511L | (long)in.get(72 + inPos) << 9 & 131071L | (long)in.get(73 + inPos) << 17 & 33554431L | (long)in.get(74 + inPos) << 25 & 8589934591L | (long)in.get(75 + inPos) << 33 & 2199023255551L | (long)in.get(76 + inPos) << 41 & 562949953421311L | (long)in.get(77 + inPos) << 49 & 144115188075855871L | (long)in.get(78 + inPos) << 57 & Long.MAX_VALUE;
         out[10 + outPos] = (long)in.get(78 + inPos) >> 6 & 3L | (long)in.get(79 + inPos) << 2 & 1023L | (long)in.get(80 + inPos) << 10 & 262143L | (long)in.get(81 + inPos) << 18 & 67108863L | (long)in.get(82 + inPos) << 26 & 17179869183L | (long)in.get(83 + inPos) << 34 & 4398046511103L | (long)in.get(84 + inPos) << 42 & 1125899906842623L | (long)in.get(85 + inPos) << 50 & 288230376151711743L | (long)in.get(86 + inPos) << 58 & Long.MAX_VALUE;
         out[11 + outPos] = (long)in.get(86 + inPos) >> 5 & 7L | (long)in.get(87 + inPos) << 3 & 2047L | (long)in.get(88 + inPos) << 11 & 524287L | (long)in.get(89 + inPos) << 19 & 134217727L | (long)in.get(90 + inPos) << 27 & 34359738367L | (long)in.get(91 + inPos) << 35 & 8796093022207L | (long)in.get(92 + inPos) << 43 & 2251799813685247L | (long)in.get(93 + inPos) << 51 & 576460752303423487L | (long)in.get(94 + inPos) << 59 & Long.MAX_VALUE;
         out[12 + outPos] = (long)in.get(94 + inPos) >> 4 & 15L | (long)in.get(95 + inPos) << 4 & 4095L | (long)in.get(96 + inPos) << 12 & 1048575L | (long)in.get(97 + inPos) << 20 & 268435455L | (long)in.get(98 + inPos) << 28 & 68719476735L | (long)in.get(99 + inPos) << 36 & 17592186044415L | (long)in.get(100 + inPos) << 44 & 4503599627370495L | (long)in.get(101 + inPos) << 52 & 1152921504606846975L | (long)in.get(102 + inPos) << 60 & Long.MAX_VALUE;
         out[13 + outPos] = (long)in.get(102 + inPos) >> 3 & 31L | (long)in.get(103 + inPos) << 5 & 8191L | (long)in.get(104 + inPos) << 13 & 2097151L | (long)in.get(105 + inPos) << 21 & 536870911L | (long)in.get(106 + inPos) << 29 & 137438953471L | (long)in.get(107 + inPos) << 37 & 35184372088831L | (long)in.get(108 + inPos) << 45 & 9007199254740991L | (long)in.get(109 + inPos) << 53 & 2305843009213693951L | (long)in.get(110 + inPos) << 61 & Long.MAX_VALUE;
         out[14 + outPos] = (long)in.get(110 + inPos) >> 2 & 63L | (long)in.get(111 + inPos) << 6 & 16383L | (long)in.get(112 + inPos) << 14 & 4194303L | (long)in.get(113 + inPos) << 22 & 1073741823L | (long)in.get(114 + inPos) << 30 & 274877906943L | (long)in.get(115 + inPos) << 38 & 70368744177663L | (long)in.get(116 + inPos) << 46 & 18014398509481983L | (long)in.get(117 + inPos) << 54 & 4611686018427387903L | (long)in.get(118 + inPos) << 62 & Long.MAX_VALUE;
         out[15 + outPos] = (long)in.get(118 + inPos) >> 1 & 127L | (long)in.get(119 + inPos) << 7 & 32767L | (long)in.get(120 + inPos) << 15 & 8388607L | (long)in.get(121 + inPos) << 23 & 2147483647L | (long)in.get(122 + inPos) << 31 & 549755813887L | (long)in.get(123 + inPos) << 39 & 140737488355327L | (long)in.get(124 + inPos) << 47 & 36028797018963967L | (long)in.get(125 + inPos) << 55 & Long.MAX_VALUE;
         out[16 + outPos] = (long)in.get(126 + inPos) & 255L | (long)in.get(127 + inPos) << 8 & 65535L | (long)in.get(128 + inPos) << 16 & 16777215L | (long)in.get(129 + inPos) << 24 & 4294967295L | (long)in.get(130 + inPos) << 32 & 1099511627775L | (long)in.get(131 + inPos) << 40 & 281474976710655L | (long)in.get(132 + inPos) << 48 & 72057594037927935L | (long)in.get(133 + inPos) << 56 & Long.MAX_VALUE;
         out[17 + outPos] = (long)in.get(133 + inPos) >> 7 & 1L | (long)in.get(134 + inPos) << 1 & 511L | (long)in.get(135 + inPos) << 9 & 131071L | (long)in.get(136 + inPos) << 17 & 33554431L | (long)in.get(137 + inPos) << 25 & 8589934591L | (long)in.get(138 + inPos) << 33 & 2199023255551L | (long)in.get(139 + inPos) << 41 & 562949953421311L | (long)in.get(140 + inPos) << 49 & 144115188075855871L | (long)in.get(141 + inPos) << 57 & Long.MAX_VALUE;
         out[18 + outPos] = (long)in.get(141 + inPos) >> 6 & 3L | (long)in.get(142 + inPos) << 2 & 1023L | (long)in.get(143 + inPos) << 10 & 262143L | (long)in.get(144 + inPos) << 18 & 67108863L | (long)in.get(145 + inPos) << 26 & 17179869183L | (long)in.get(146 + inPos) << 34 & 4398046511103L | (long)in.get(147 + inPos) << 42 & 1125899906842623L | (long)in.get(148 + inPos) << 50 & 288230376151711743L | (long)in.get(149 + inPos) << 58 & Long.MAX_VALUE;
         out[19 + outPos] = (long)in.get(149 + inPos) >> 5 & 7L | (long)in.get(150 + inPos) << 3 & 2047L | (long)in.get(151 + inPos) << 11 & 524287L | (long)in.get(152 + inPos) << 19 & 134217727L | (long)in.get(153 + inPos) << 27 & 34359738367L | (long)in.get(154 + inPos) << 35 & 8796093022207L | (long)in.get(155 + inPos) << 43 & 2251799813685247L | (long)in.get(156 + inPos) << 51 & 576460752303423487L | (long)in.get(157 + inPos) << 59 & Long.MAX_VALUE;
         out[20 + outPos] = (long)in.get(157 + inPos) >> 4 & 15L | (long)in.get(158 + inPos) << 4 & 4095L | (long)in.get(159 + inPos) << 12 & 1048575L | (long)in.get(160 + inPos) << 20 & 268435455L | (long)in.get(161 + inPos) << 28 & 68719476735L | (long)in.get(162 + inPos) << 36 & 17592186044415L | (long)in.get(163 + inPos) << 44 & 4503599627370495L | (long)in.get(164 + inPos) << 52 & 1152921504606846975L | (long)in.get(165 + inPos) << 60 & Long.MAX_VALUE;
         out[21 + outPos] = (long)in.get(165 + inPos) >> 3 & 31L | (long)in.get(166 + inPos) << 5 & 8191L | (long)in.get(167 + inPos) << 13 & 2097151L | (long)in.get(168 + inPos) << 21 & 536870911L | (long)in.get(169 + inPos) << 29 & 137438953471L | (long)in.get(170 + inPos) << 37 & 35184372088831L | (long)in.get(171 + inPos) << 45 & 9007199254740991L | (long)in.get(172 + inPos) << 53 & 2305843009213693951L | (long)in.get(173 + inPos) << 61 & Long.MAX_VALUE;
         out[22 + outPos] = (long)in.get(173 + inPos) >> 2 & 63L | (long)in.get(174 + inPos) << 6 & 16383L | (long)in.get(175 + inPos) << 14 & 4194303L | (long)in.get(176 + inPos) << 22 & 1073741823L | (long)in.get(177 + inPos) << 30 & 274877906943L | (long)in.get(178 + inPos) << 38 & 70368744177663L | (long)in.get(179 + inPos) << 46 & 18014398509481983L | (long)in.get(180 + inPos) << 54 & 4611686018427387903L | (long)in.get(181 + inPos) << 62 & Long.MAX_VALUE;
         out[23 + outPos] = (long)in.get(181 + inPos) >> 1 & 127L | (long)in.get(182 + inPos) << 7 & 32767L | (long)in.get(183 + inPos) << 15 & 8388607L | (long)in.get(184 + inPos) << 23 & 2147483647L | (long)in.get(185 + inPos) << 31 & 549755813887L | (long)in.get(186 + inPos) << 39 & 140737488355327L | (long)in.get(187 + inPos) << 47 & 36028797018963967L | (long)in.get(188 + inPos) << 55 & Long.MAX_VALUE;
         out[24 + outPos] = (long)in.get(189 + inPos) & 255L | (long)in.get(190 + inPos) << 8 & 65535L | (long)in.get(191 + inPos) << 16 & 16777215L | (long)in.get(192 + inPos) << 24 & 4294967295L | (long)in.get(193 + inPos) << 32 & 1099511627775L | (long)in.get(194 + inPos) << 40 & 281474976710655L | (long)in.get(195 + inPos) << 48 & 72057594037927935L | (long)in.get(196 + inPos) << 56 & Long.MAX_VALUE;
         out[25 + outPos] = (long)in.get(196 + inPos) >> 7 & 1L | (long)in.get(197 + inPos) << 1 & 511L | (long)in.get(198 + inPos) << 9 & 131071L | (long)in.get(199 + inPos) << 17 & 33554431L | (long)in.get(200 + inPos) << 25 & 8589934591L | (long)in.get(201 + inPos) << 33 & 2199023255551L | (long)in.get(202 + inPos) << 41 & 562949953421311L | (long)in.get(203 + inPos) << 49 & 144115188075855871L | (long)in.get(204 + inPos) << 57 & Long.MAX_VALUE;
         out[26 + outPos] = (long)in.get(204 + inPos) >> 6 & 3L | (long)in.get(205 + inPos) << 2 & 1023L | (long)in.get(206 + inPos) << 10 & 262143L | (long)in.get(207 + inPos) << 18 & 67108863L | (long)in.get(208 + inPos) << 26 & 17179869183L | (long)in.get(209 + inPos) << 34 & 4398046511103L | (long)in.get(210 + inPos) << 42 & 1125899906842623L | (long)in.get(211 + inPos) << 50 & 288230376151711743L | (long)in.get(212 + inPos) << 58 & Long.MAX_VALUE;
         out[27 + outPos] = (long)in.get(212 + inPos) >> 5 & 7L | (long)in.get(213 + inPos) << 3 & 2047L | (long)in.get(214 + inPos) << 11 & 524287L | (long)in.get(215 + inPos) << 19 & 134217727L | (long)in.get(216 + inPos) << 27 & 34359738367L | (long)in.get(217 + inPos) << 35 & 8796093022207L | (long)in.get(218 + inPos) << 43 & 2251799813685247L | (long)in.get(219 + inPos) << 51 & 576460752303423487L | (long)in.get(220 + inPos) << 59 & Long.MAX_VALUE;
         out[28 + outPos] = (long)in.get(220 + inPos) >> 4 & 15L | (long)in.get(221 + inPos) << 4 & 4095L | (long)in.get(222 + inPos) << 12 & 1048575L | (long)in.get(223 + inPos) << 20 & 268435455L | (long)in.get(224 + inPos) << 28 & 68719476735L | (long)in.get(225 + inPos) << 36 & 17592186044415L | (long)in.get(226 + inPos) << 44 & 4503599627370495L | (long)in.get(227 + inPos) << 52 & 1152921504606846975L | (long)in.get(228 + inPos) << 60 & Long.MAX_VALUE;
         out[29 + outPos] = (long)in.get(228 + inPos) >> 3 & 31L | (long)in.get(229 + inPos) << 5 & 8191L | (long)in.get(230 + inPos) << 13 & 2097151L | (long)in.get(231 + inPos) << 21 & 536870911L | (long)in.get(232 + inPos) << 29 & 137438953471L | (long)in.get(233 + inPos) << 37 & 35184372088831L | (long)in.get(234 + inPos) << 45 & 9007199254740991L | (long)in.get(235 + inPos) << 53 & 2305843009213693951L | (long)in.get(236 + inPos) << 61 & Long.MAX_VALUE;
         out[30 + outPos] = (long)in.get(236 + inPos) >> 2 & 63L | (long)in.get(237 + inPos) << 6 & 16383L | (long)in.get(238 + inPos) << 14 & 4194303L | (long)in.get(239 + inPos) << 22 & 1073741823L | (long)in.get(240 + inPos) << 30 & 274877906943L | (long)in.get(241 + inPos) << 38 & 70368744177663L | (long)in.get(242 + inPos) << 46 & 18014398509481983L | (long)in.get(243 + inPos) << 54 & 4611686018427387903L | (long)in.get(244 + inPos) << 62 & Long.MAX_VALUE;
         out[31 + outPos] = (long)in.get(244 + inPos) >> 1 & 127L | (long)in.get(245 + inPos) << 7 & 32767L | (long)in.get(246 + inPos) << 15 & 8388607L | (long)in.get(247 + inPos) << 23 & 2147483647L | (long)in.get(248 + inPos) << 31 & 549755813887L | (long)in.get(249 + inPos) << 39 & 140737488355327L | (long)in.get(250 + inPos) << 47 & 36028797018963967L | (long)in.get(251 + inPos) << 55 & Long.MAX_VALUE;
      }
   }

   private static final class Packer64 extends BytePackerForLong {
      private Packer64() {
         super(64);
      }

      public final void pack8Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & -1L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 56 & 255L));
         out[8 + outPos] = (byte)((int)(in[1 + inPos] & -1L & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 8 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 16 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 24 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 32 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 40 & 255L));
         out[14 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 48 & 255L));
         out[15 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 56 & 255L));
         out[16 + outPos] = (byte)((int)(in[2 + inPos] & -1L & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 8 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 16 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 24 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 32 & 255L));
         out[21 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 40 & 255L));
         out[22 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 48 & 255L));
         out[23 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 56 & 255L));
         out[24 + outPos] = (byte)((int)(in[3 + inPos] & -1L & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 8 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 16 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 24 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 32 & 255L));
         out[29 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 40 & 255L));
         out[30 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 48 & 255L));
         out[31 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 56 & 255L));
         out[32 + outPos] = (byte)((int)(in[4 + inPos] & -1L & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 8 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 16 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 24 & 255L));
         out[36 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 32 & 255L));
         out[37 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 40 & 255L));
         out[38 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 48 & 255L));
         out[39 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 56 & 255L));
         out[40 + outPos] = (byte)((int)(in[5 + inPos] & -1L & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 8 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 16 & 255L));
         out[43 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 24 & 255L));
         out[44 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 32 & 255L));
         out[45 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 40 & 255L));
         out[46 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 48 & 255L));
         out[47 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 56 & 255L));
         out[48 + outPos] = (byte)((int)(in[6 + inPos] & -1L & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 8 & 255L));
         out[50 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 16 & 255L));
         out[51 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 24 & 255L));
         out[52 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 32 & 255L));
         out[53 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 40 & 255L));
         out[54 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 48 & 255L));
         out[55 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 56 & 255L));
         out[56 + outPos] = (byte)((int)(in[7 + inPos] & -1L & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 8 & 255L));
         out[58 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 16 & 255L));
         out[59 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 24 & 255L));
         out[60 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 32 & 255L));
         out[61 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 40 & 255L));
         out[62 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 48 & 255L));
         out[63 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 56 & 255L));
      }

      public final void pack32Values(long[] in, int inPos, byte[] out, int outPos) {
         out[0 + outPos] = (byte)((int)(in[0 + inPos] & -1L & 255L));
         out[1 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 8 & 255L));
         out[2 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 16 & 255L));
         out[3 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 24 & 255L));
         out[4 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 32 & 255L));
         out[5 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 40 & 255L));
         out[6 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 48 & 255L));
         out[7 + outPos] = (byte)((int)((in[0 + inPos] & -1L) >>> 56 & 255L));
         out[8 + outPos] = (byte)((int)(in[1 + inPos] & -1L & 255L));
         out[9 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 8 & 255L));
         out[10 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 16 & 255L));
         out[11 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 24 & 255L));
         out[12 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 32 & 255L));
         out[13 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 40 & 255L));
         out[14 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 48 & 255L));
         out[15 + outPos] = (byte)((int)((in[1 + inPos] & -1L) >>> 56 & 255L));
         out[16 + outPos] = (byte)((int)(in[2 + inPos] & -1L & 255L));
         out[17 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 8 & 255L));
         out[18 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 16 & 255L));
         out[19 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 24 & 255L));
         out[20 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 32 & 255L));
         out[21 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 40 & 255L));
         out[22 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 48 & 255L));
         out[23 + outPos] = (byte)((int)((in[2 + inPos] & -1L) >>> 56 & 255L));
         out[24 + outPos] = (byte)((int)(in[3 + inPos] & -1L & 255L));
         out[25 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 8 & 255L));
         out[26 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 16 & 255L));
         out[27 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 24 & 255L));
         out[28 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 32 & 255L));
         out[29 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 40 & 255L));
         out[30 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 48 & 255L));
         out[31 + outPos] = (byte)((int)((in[3 + inPos] & -1L) >>> 56 & 255L));
         out[32 + outPos] = (byte)((int)(in[4 + inPos] & -1L & 255L));
         out[33 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 8 & 255L));
         out[34 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 16 & 255L));
         out[35 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 24 & 255L));
         out[36 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 32 & 255L));
         out[37 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 40 & 255L));
         out[38 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 48 & 255L));
         out[39 + outPos] = (byte)((int)((in[4 + inPos] & -1L) >>> 56 & 255L));
         out[40 + outPos] = (byte)((int)(in[5 + inPos] & -1L & 255L));
         out[41 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 8 & 255L));
         out[42 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 16 & 255L));
         out[43 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 24 & 255L));
         out[44 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 32 & 255L));
         out[45 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 40 & 255L));
         out[46 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 48 & 255L));
         out[47 + outPos] = (byte)((int)((in[5 + inPos] & -1L) >>> 56 & 255L));
         out[48 + outPos] = (byte)((int)(in[6 + inPos] & -1L & 255L));
         out[49 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 8 & 255L));
         out[50 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 16 & 255L));
         out[51 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 24 & 255L));
         out[52 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 32 & 255L));
         out[53 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 40 & 255L));
         out[54 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 48 & 255L));
         out[55 + outPos] = (byte)((int)((in[6 + inPos] & -1L) >>> 56 & 255L));
         out[56 + outPos] = (byte)((int)(in[7 + inPos] & -1L & 255L));
         out[57 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 8 & 255L));
         out[58 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 16 & 255L));
         out[59 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 24 & 255L));
         out[60 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 32 & 255L));
         out[61 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 40 & 255L));
         out[62 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 48 & 255L));
         out[63 + outPos] = (byte)((int)((in[7 + inPos] & -1L) >>> 56 & 255L));
         out[64 + outPos] = (byte)((int)(in[8 + inPos] & -1L & 255L));
         out[65 + outPos] = (byte)((int)((in[8 + inPos] & -1L) >>> 8 & 255L));
         out[66 + outPos] = (byte)((int)((in[8 + inPos] & -1L) >>> 16 & 255L));
         out[67 + outPos] = (byte)((int)((in[8 + inPos] & -1L) >>> 24 & 255L));
         out[68 + outPos] = (byte)((int)((in[8 + inPos] & -1L) >>> 32 & 255L));
         out[69 + outPos] = (byte)((int)((in[8 + inPos] & -1L) >>> 40 & 255L));
         out[70 + outPos] = (byte)((int)((in[8 + inPos] & -1L) >>> 48 & 255L));
         out[71 + outPos] = (byte)((int)((in[8 + inPos] & -1L) >>> 56 & 255L));
         out[72 + outPos] = (byte)((int)(in[9 + inPos] & -1L & 255L));
         out[73 + outPos] = (byte)((int)((in[9 + inPos] & -1L) >>> 8 & 255L));
         out[74 + outPos] = (byte)((int)((in[9 + inPos] & -1L) >>> 16 & 255L));
         out[75 + outPos] = (byte)((int)((in[9 + inPos] & -1L) >>> 24 & 255L));
         out[76 + outPos] = (byte)((int)((in[9 + inPos] & -1L) >>> 32 & 255L));
         out[77 + outPos] = (byte)((int)((in[9 + inPos] & -1L) >>> 40 & 255L));
         out[78 + outPos] = (byte)((int)((in[9 + inPos] & -1L) >>> 48 & 255L));
         out[79 + outPos] = (byte)((int)((in[9 + inPos] & -1L) >>> 56 & 255L));
         out[80 + outPos] = (byte)((int)(in[10 + inPos] & -1L & 255L));
         out[81 + outPos] = (byte)((int)((in[10 + inPos] & -1L) >>> 8 & 255L));
         out[82 + outPos] = (byte)((int)((in[10 + inPos] & -1L) >>> 16 & 255L));
         out[83 + outPos] = (byte)((int)((in[10 + inPos] & -1L) >>> 24 & 255L));
         out[84 + outPos] = (byte)((int)((in[10 + inPos] & -1L) >>> 32 & 255L));
         out[85 + outPos] = (byte)((int)((in[10 + inPos] & -1L) >>> 40 & 255L));
         out[86 + outPos] = (byte)((int)((in[10 + inPos] & -1L) >>> 48 & 255L));
         out[87 + outPos] = (byte)((int)((in[10 + inPos] & -1L) >>> 56 & 255L));
         out[88 + outPos] = (byte)((int)(in[11 + inPos] & -1L & 255L));
         out[89 + outPos] = (byte)((int)((in[11 + inPos] & -1L) >>> 8 & 255L));
         out[90 + outPos] = (byte)((int)((in[11 + inPos] & -1L) >>> 16 & 255L));
         out[91 + outPos] = (byte)((int)((in[11 + inPos] & -1L) >>> 24 & 255L));
         out[92 + outPos] = (byte)((int)((in[11 + inPos] & -1L) >>> 32 & 255L));
         out[93 + outPos] = (byte)((int)((in[11 + inPos] & -1L) >>> 40 & 255L));
         out[94 + outPos] = (byte)((int)((in[11 + inPos] & -1L) >>> 48 & 255L));
         out[95 + outPos] = (byte)((int)((in[11 + inPos] & -1L) >>> 56 & 255L));
         out[96 + outPos] = (byte)((int)(in[12 + inPos] & -1L & 255L));
         out[97 + outPos] = (byte)((int)((in[12 + inPos] & -1L) >>> 8 & 255L));
         out[98 + outPos] = (byte)((int)((in[12 + inPos] & -1L) >>> 16 & 255L));
         out[99 + outPos] = (byte)((int)((in[12 + inPos] & -1L) >>> 24 & 255L));
         out[100 + outPos] = (byte)((int)((in[12 + inPos] & -1L) >>> 32 & 255L));
         out[101 + outPos] = (byte)((int)((in[12 + inPos] & -1L) >>> 40 & 255L));
         out[102 + outPos] = (byte)((int)((in[12 + inPos] & -1L) >>> 48 & 255L));
         out[103 + outPos] = (byte)((int)((in[12 + inPos] & -1L) >>> 56 & 255L));
         out[104 + outPos] = (byte)((int)(in[13 + inPos] & -1L & 255L));
         out[105 + outPos] = (byte)((int)((in[13 + inPos] & -1L) >>> 8 & 255L));
         out[106 + outPos] = (byte)((int)((in[13 + inPos] & -1L) >>> 16 & 255L));
         out[107 + outPos] = (byte)((int)((in[13 + inPos] & -1L) >>> 24 & 255L));
         out[108 + outPos] = (byte)((int)((in[13 + inPos] & -1L) >>> 32 & 255L));
         out[109 + outPos] = (byte)((int)((in[13 + inPos] & -1L) >>> 40 & 255L));
         out[110 + outPos] = (byte)((int)((in[13 + inPos] & -1L) >>> 48 & 255L));
         out[111 + outPos] = (byte)((int)((in[13 + inPos] & -1L) >>> 56 & 255L));
         out[112 + outPos] = (byte)((int)(in[14 + inPos] & -1L & 255L));
         out[113 + outPos] = (byte)((int)((in[14 + inPos] & -1L) >>> 8 & 255L));
         out[114 + outPos] = (byte)((int)((in[14 + inPos] & -1L) >>> 16 & 255L));
         out[115 + outPos] = (byte)((int)((in[14 + inPos] & -1L) >>> 24 & 255L));
         out[116 + outPos] = (byte)((int)((in[14 + inPos] & -1L) >>> 32 & 255L));
         out[117 + outPos] = (byte)((int)((in[14 + inPos] & -1L) >>> 40 & 255L));
         out[118 + outPos] = (byte)((int)((in[14 + inPos] & -1L) >>> 48 & 255L));
         out[119 + outPos] = (byte)((int)((in[14 + inPos] & -1L) >>> 56 & 255L));
         out[120 + outPos] = (byte)((int)(in[15 + inPos] & -1L & 255L));
         out[121 + outPos] = (byte)((int)((in[15 + inPos] & -1L) >>> 8 & 255L));
         out[122 + outPos] = (byte)((int)((in[15 + inPos] & -1L) >>> 16 & 255L));
         out[123 + outPos] = (byte)((int)((in[15 + inPos] & -1L) >>> 24 & 255L));
         out[124 + outPos] = (byte)((int)((in[15 + inPos] & -1L) >>> 32 & 255L));
         out[125 + outPos] = (byte)((int)((in[15 + inPos] & -1L) >>> 40 & 255L));
         out[126 + outPos] = (byte)((int)((in[15 + inPos] & -1L) >>> 48 & 255L));
         out[127 + outPos] = (byte)((int)((in[15 + inPos] & -1L) >>> 56 & 255L));
         out[128 + outPos] = (byte)((int)(in[16 + inPos] & -1L & 255L));
         out[129 + outPos] = (byte)((int)((in[16 + inPos] & -1L) >>> 8 & 255L));
         out[130 + outPos] = (byte)((int)((in[16 + inPos] & -1L) >>> 16 & 255L));
         out[131 + outPos] = (byte)((int)((in[16 + inPos] & -1L) >>> 24 & 255L));
         out[132 + outPos] = (byte)((int)((in[16 + inPos] & -1L) >>> 32 & 255L));
         out[133 + outPos] = (byte)((int)((in[16 + inPos] & -1L) >>> 40 & 255L));
         out[134 + outPos] = (byte)((int)((in[16 + inPos] & -1L) >>> 48 & 255L));
         out[135 + outPos] = (byte)((int)((in[16 + inPos] & -1L) >>> 56 & 255L));
         out[136 + outPos] = (byte)((int)(in[17 + inPos] & -1L & 255L));
         out[137 + outPos] = (byte)((int)((in[17 + inPos] & -1L) >>> 8 & 255L));
         out[138 + outPos] = (byte)((int)((in[17 + inPos] & -1L) >>> 16 & 255L));
         out[139 + outPos] = (byte)((int)((in[17 + inPos] & -1L) >>> 24 & 255L));
         out[140 + outPos] = (byte)((int)((in[17 + inPos] & -1L) >>> 32 & 255L));
         out[141 + outPos] = (byte)((int)((in[17 + inPos] & -1L) >>> 40 & 255L));
         out[142 + outPos] = (byte)((int)((in[17 + inPos] & -1L) >>> 48 & 255L));
         out[143 + outPos] = (byte)((int)((in[17 + inPos] & -1L) >>> 56 & 255L));
         out[144 + outPos] = (byte)((int)(in[18 + inPos] & -1L & 255L));
         out[145 + outPos] = (byte)((int)((in[18 + inPos] & -1L) >>> 8 & 255L));
         out[146 + outPos] = (byte)((int)((in[18 + inPos] & -1L) >>> 16 & 255L));
         out[147 + outPos] = (byte)((int)((in[18 + inPos] & -1L) >>> 24 & 255L));
         out[148 + outPos] = (byte)((int)((in[18 + inPos] & -1L) >>> 32 & 255L));
         out[149 + outPos] = (byte)((int)((in[18 + inPos] & -1L) >>> 40 & 255L));
         out[150 + outPos] = (byte)((int)((in[18 + inPos] & -1L) >>> 48 & 255L));
         out[151 + outPos] = (byte)((int)((in[18 + inPos] & -1L) >>> 56 & 255L));
         out[152 + outPos] = (byte)((int)(in[19 + inPos] & -1L & 255L));
         out[153 + outPos] = (byte)((int)((in[19 + inPos] & -1L) >>> 8 & 255L));
         out[154 + outPos] = (byte)((int)((in[19 + inPos] & -1L) >>> 16 & 255L));
         out[155 + outPos] = (byte)((int)((in[19 + inPos] & -1L) >>> 24 & 255L));
         out[156 + outPos] = (byte)((int)((in[19 + inPos] & -1L) >>> 32 & 255L));
         out[157 + outPos] = (byte)((int)((in[19 + inPos] & -1L) >>> 40 & 255L));
         out[158 + outPos] = (byte)((int)((in[19 + inPos] & -1L) >>> 48 & 255L));
         out[159 + outPos] = (byte)((int)((in[19 + inPos] & -1L) >>> 56 & 255L));
         out[160 + outPos] = (byte)((int)(in[20 + inPos] & -1L & 255L));
         out[161 + outPos] = (byte)((int)((in[20 + inPos] & -1L) >>> 8 & 255L));
         out[162 + outPos] = (byte)((int)((in[20 + inPos] & -1L) >>> 16 & 255L));
         out[163 + outPos] = (byte)((int)((in[20 + inPos] & -1L) >>> 24 & 255L));
         out[164 + outPos] = (byte)((int)((in[20 + inPos] & -1L) >>> 32 & 255L));
         out[165 + outPos] = (byte)((int)((in[20 + inPos] & -1L) >>> 40 & 255L));
         out[166 + outPos] = (byte)((int)((in[20 + inPos] & -1L) >>> 48 & 255L));
         out[167 + outPos] = (byte)((int)((in[20 + inPos] & -1L) >>> 56 & 255L));
         out[168 + outPos] = (byte)((int)(in[21 + inPos] & -1L & 255L));
         out[169 + outPos] = (byte)((int)((in[21 + inPos] & -1L) >>> 8 & 255L));
         out[170 + outPos] = (byte)((int)((in[21 + inPos] & -1L) >>> 16 & 255L));
         out[171 + outPos] = (byte)((int)((in[21 + inPos] & -1L) >>> 24 & 255L));
         out[172 + outPos] = (byte)((int)((in[21 + inPos] & -1L) >>> 32 & 255L));
         out[173 + outPos] = (byte)((int)((in[21 + inPos] & -1L) >>> 40 & 255L));
         out[174 + outPos] = (byte)((int)((in[21 + inPos] & -1L) >>> 48 & 255L));
         out[175 + outPos] = (byte)((int)((in[21 + inPos] & -1L) >>> 56 & 255L));
         out[176 + outPos] = (byte)((int)(in[22 + inPos] & -1L & 255L));
         out[177 + outPos] = (byte)((int)((in[22 + inPos] & -1L) >>> 8 & 255L));
         out[178 + outPos] = (byte)((int)((in[22 + inPos] & -1L) >>> 16 & 255L));
         out[179 + outPos] = (byte)((int)((in[22 + inPos] & -1L) >>> 24 & 255L));
         out[180 + outPos] = (byte)((int)((in[22 + inPos] & -1L) >>> 32 & 255L));
         out[181 + outPos] = (byte)((int)((in[22 + inPos] & -1L) >>> 40 & 255L));
         out[182 + outPos] = (byte)((int)((in[22 + inPos] & -1L) >>> 48 & 255L));
         out[183 + outPos] = (byte)((int)((in[22 + inPos] & -1L) >>> 56 & 255L));
         out[184 + outPos] = (byte)((int)(in[23 + inPos] & -1L & 255L));
         out[185 + outPos] = (byte)((int)((in[23 + inPos] & -1L) >>> 8 & 255L));
         out[186 + outPos] = (byte)((int)((in[23 + inPos] & -1L) >>> 16 & 255L));
         out[187 + outPos] = (byte)((int)((in[23 + inPos] & -1L) >>> 24 & 255L));
         out[188 + outPos] = (byte)((int)((in[23 + inPos] & -1L) >>> 32 & 255L));
         out[189 + outPos] = (byte)((int)((in[23 + inPos] & -1L) >>> 40 & 255L));
         out[190 + outPos] = (byte)((int)((in[23 + inPos] & -1L) >>> 48 & 255L));
         out[191 + outPos] = (byte)((int)((in[23 + inPos] & -1L) >>> 56 & 255L));
         out[192 + outPos] = (byte)((int)(in[24 + inPos] & -1L & 255L));
         out[193 + outPos] = (byte)((int)((in[24 + inPos] & -1L) >>> 8 & 255L));
         out[194 + outPos] = (byte)((int)((in[24 + inPos] & -1L) >>> 16 & 255L));
         out[195 + outPos] = (byte)((int)((in[24 + inPos] & -1L) >>> 24 & 255L));
         out[196 + outPos] = (byte)((int)((in[24 + inPos] & -1L) >>> 32 & 255L));
         out[197 + outPos] = (byte)((int)((in[24 + inPos] & -1L) >>> 40 & 255L));
         out[198 + outPos] = (byte)((int)((in[24 + inPos] & -1L) >>> 48 & 255L));
         out[199 + outPos] = (byte)((int)((in[24 + inPos] & -1L) >>> 56 & 255L));
         out[200 + outPos] = (byte)((int)(in[25 + inPos] & -1L & 255L));
         out[201 + outPos] = (byte)((int)((in[25 + inPos] & -1L) >>> 8 & 255L));
         out[202 + outPos] = (byte)((int)((in[25 + inPos] & -1L) >>> 16 & 255L));
         out[203 + outPos] = (byte)((int)((in[25 + inPos] & -1L) >>> 24 & 255L));
         out[204 + outPos] = (byte)((int)((in[25 + inPos] & -1L) >>> 32 & 255L));
         out[205 + outPos] = (byte)((int)((in[25 + inPos] & -1L) >>> 40 & 255L));
         out[206 + outPos] = (byte)((int)((in[25 + inPos] & -1L) >>> 48 & 255L));
         out[207 + outPos] = (byte)((int)((in[25 + inPos] & -1L) >>> 56 & 255L));
         out[208 + outPos] = (byte)((int)(in[26 + inPos] & -1L & 255L));
         out[209 + outPos] = (byte)((int)((in[26 + inPos] & -1L) >>> 8 & 255L));
         out[210 + outPos] = (byte)((int)((in[26 + inPos] & -1L) >>> 16 & 255L));
         out[211 + outPos] = (byte)((int)((in[26 + inPos] & -1L) >>> 24 & 255L));
         out[212 + outPos] = (byte)((int)((in[26 + inPos] & -1L) >>> 32 & 255L));
         out[213 + outPos] = (byte)((int)((in[26 + inPos] & -1L) >>> 40 & 255L));
         out[214 + outPos] = (byte)((int)((in[26 + inPos] & -1L) >>> 48 & 255L));
         out[215 + outPos] = (byte)((int)((in[26 + inPos] & -1L) >>> 56 & 255L));
         out[216 + outPos] = (byte)((int)(in[27 + inPos] & -1L & 255L));
         out[217 + outPos] = (byte)((int)((in[27 + inPos] & -1L) >>> 8 & 255L));
         out[218 + outPos] = (byte)((int)((in[27 + inPos] & -1L) >>> 16 & 255L));
         out[219 + outPos] = (byte)((int)((in[27 + inPos] & -1L) >>> 24 & 255L));
         out[220 + outPos] = (byte)((int)((in[27 + inPos] & -1L) >>> 32 & 255L));
         out[221 + outPos] = (byte)((int)((in[27 + inPos] & -1L) >>> 40 & 255L));
         out[222 + outPos] = (byte)((int)((in[27 + inPos] & -1L) >>> 48 & 255L));
         out[223 + outPos] = (byte)((int)((in[27 + inPos] & -1L) >>> 56 & 255L));
         out[224 + outPos] = (byte)((int)(in[28 + inPos] & -1L & 255L));
         out[225 + outPos] = (byte)((int)((in[28 + inPos] & -1L) >>> 8 & 255L));
         out[226 + outPos] = (byte)((int)((in[28 + inPos] & -1L) >>> 16 & 255L));
         out[227 + outPos] = (byte)((int)((in[28 + inPos] & -1L) >>> 24 & 255L));
         out[228 + outPos] = (byte)((int)((in[28 + inPos] & -1L) >>> 32 & 255L));
         out[229 + outPos] = (byte)((int)((in[28 + inPos] & -1L) >>> 40 & 255L));
         out[230 + outPos] = (byte)((int)((in[28 + inPos] & -1L) >>> 48 & 255L));
         out[231 + outPos] = (byte)((int)((in[28 + inPos] & -1L) >>> 56 & 255L));
         out[232 + outPos] = (byte)((int)(in[29 + inPos] & -1L & 255L));
         out[233 + outPos] = (byte)((int)((in[29 + inPos] & -1L) >>> 8 & 255L));
         out[234 + outPos] = (byte)((int)((in[29 + inPos] & -1L) >>> 16 & 255L));
         out[235 + outPos] = (byte)((int)((in[29 + inPos] & -1L) >>> 24 & 255L));
         out[236 + outPos] = (byte)((int)((in[29 + inPos] & -1L) >>> 32 & 255L));
         out[237 + outPos] = (byte)((int)((in[29 + inPos] & -1L) >>> 40 & 255L));
         out[238 + outPos] = (byte)((int)((in[29 + inPos] & -1L) >>> 48 & 255L));
         out[239 + outPos] = (byte)((int)((in[29 + inPos] & -1L) >>> 56 & 255L));
         out[240 + outPos] = (byte)((int)(in[30 + inPos] & -1L & 255L));
         out[241 + outPos] = (byte)((int)((in[30 + inPos] & -1L) >>> 8 & 255L));
         out[242 + outPos] = (byte)((int)((in[30 + inPos] & -1L) >>> 16 & 255L));
         out[243 + outPos] = (byte)((int)((in[30 + inPos] & -1L) >>> 24 & 255L));
         out[244 + outPos] = (byte)((int)((in[30 + inPos] & -1L) >>> 32 & 255L));
         out[245 + outPos] = (byte)((int)((in[30 + inPos] & -1L) >>> 40 & 255L));
         out[246 + outPos] = (byte)((int)((in[30 + inPos] & -1L) >>> 48 & 255L));
         out[247 + outPos] = (byte)((int)((in[30 + inPos] & -1L) >>> 56 & 255L));
         out[248 + outPos] = (byte)((int)(in[31 + inPos] & -1L & 255L));
         out[249 + outPos] = (byte)((int)((in[31 + inPos] & -1L) >>> 8 & 255L));
         out[250 + outPos] = (byte)((int)((in[31 + inPos] & -1L) >>> 16 & 255L));
         out[251 + outPos] = (byte)((int)((in[31 + inPos] & -1L) >>> 24 & 255L));
         out[252 + outPos] = (byte)((int)((in[31 + inPos] & -1L) >>> 32 & 255L));
         out[253 + outPos] = (byte)((int)((in[31 + inPos] & -1L) >>> 40 & 255L));
         out[254 + outPos] = (byte)((int)((in[31 + inPos] & -1L) >>> 48 & 255L));
         out[255 + outPos] = (byte)((int)((in[31 + inPos] & -1L) >>> 56 & 255L));
      }

      public final void unpack8Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & -1L;
         out[1 + outPos] = (long)in[8 + inPos] & 255L | (long)in[9 + inPos] << 8 & 65535L | (long)in[10 + inPos] << 16 & 16777215L | (long)in[11 + inPos] << 24 & 4294967295L | (long)in[12 + inPos] << 32 & 1099511627775L | (long)in[13 + inPos] << 40 & 281474976710655L | (long)in[14 + inPos] << 48 & 72057594037927935L | (long)in[15 + inPos] << 56 & -1L;
         out[2 + outPos] = (long)in[16 + inPos] & 255L | (long)in[17 + inPos] << 8 & 65535L | (long)in[18 + inPos] << 16 & 16777215L | (long)in[19 + inPos] << 24 & 4294967295L | (long)in[20 + inPos] << 32 & 1099511627775L | (long)in[21 + inPos] << 40 & 281474976710655L | (long)in[22 + inPos] << 48 & 72057594037927935L | (long)in[23 + inPos] << 56 & -1L;
         out[3 + outPos] = (long)in[24 + inPos] & 255L | (long)in[25 + inPos] << 8 & 65535L | (long)in[26 + inPos] << 16 & 16777215L | (long)in[27 + inPos] << 24 & 4294967295L | (long)in[28 + inPos] << 32 & 1099511627775L | (long)in[29 + inPos] << 40 & 281474976710655L | (long)in[30 + inPos] << 48 & 72057594037927935L | (long)in[31 + inPos] << 56 & -1L;
         out[4 + outPos] = (long)in[32 + inPos] & 255L | (long)in[33 + inPos] << 8 & 65535L | (long)in[34 + inPos] << 16 & 16777215L | (long)in[35 + inPos] << 24 & 4294967295L | (long)in[36 + inPos] << 32 & 1099511627775L | (long)in[37 + inPos] << 40 & 281474976710655L | (long)in[38 + inPos] << 48 & 72057594037927935L | (long)in[39 + inPos] << 56 & -1L;
         out[5 + outPos] = (long)in[40 + inPos] & 255L | (long)in[41 + inPos] << 8 & 65535L | (long)in[42 + inPos] << 16 & 16777215L | (long)in[43 + inPos] << 24 & 4294967295L | (long)in[44 + inPos] << 32 & 1099511627775L | (long)in[45 + inPos] << 40 & 281474976710655L | (long)in[46 + inPos] << 48 & 72057594037927935L | (long)in[47 + inPos] << 56 & -1L;
         out[6 + outPos] = (long)in[48 + inPos] & 255L | (long)in[49 + inPos] << 8 & 65535L | (long)in[50 + inPos] << 16 & 16777215L | (long)in[51 + inPos] << 24 & 4294967295L | (long)in[52 + inPos] << 32 & 1099511627775L | (long)in[53 + inPos] << 40 & 281474976710655L | (long)in[54 + inPos] << 48 & 72057594037927935L | (long)in[55 + inPos] << 56 & -1L;
         out[7 + outPos] = (long)in[56 + inPos] & 255L | (long)in[57 + inPos] << 8 & 65535L | (long)in[58 + inPos] << 16 & 16777215L | (long)in[59 + inPos] << 24 & 4294967295L | (long)in[60 + inPos] << 32 & 1099511627775L | (long)in[61 + inPos] << 40 & 281474976710655L | (long)in[62 + inPos] << 48 & 72057594037927935L | (long)in[63 + inPos] << 56 & -1L;
      }

      public final void unpack8Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & -1L;
         out[1 + outPos] = (long)in.get(8 + inPos) & 255L | (long)in.get(9 + inPos) << 8 & 65535L | (long)in.get(10 + inPos) << 16 & 16777215L | (long)in.get(11 + inPos) << 24 & 4294967295L | (long)in.get(12 + inPos) << 32 & 1099511627775L | (long)in.get(13 + inPos) << 40 & 281474976710655L | (long)in.get(14 + inPos) << 48 & 72057594037927935L | (long)in.get(15 + inPos) << 56 & -1L;
         out[2 + outPos] = (long)in.get(16 + inPos) & 255L | (long)in.get(17 + inPos) << 8 & 65535L | (long)in.get(18 + inPos) << 16 & 16777215L | (long)in.get(19 + inPos) << 24 & 4294967295L | (long)in.get(20 + inPos) << 32 & 1099511627775L | (long)in.get(21 + inPos) << 40 & 281474976710655L | (long)in.get(22 + inPos) << 48 & 72057594037927935L | (long)in.get(23 + inPos) << 56 & -1L;
         out[3 + outPos] = (long)in.get(24 + inPos) & 255L | (long)in.get(25 + inPos) << 8 & 65535L | (long)in.get(26 + inPos) << 16 & 16777215L | (long)in.get(27 + inPos) << 24 & 4294967295L | (long)in.get(28 + inPos) << 32 & 1099511627775L | (long)in.get(29 + inPos) << 40 & 281474976710655L | (long)in.get(30 + inPos) << 48 & 72057594037927935L | (long)in.get(31 + inPos) << 56 & -1L;
         out[4 + outPos] = (long)in.get(32 + inPos) & 255L | (long)in.get(33 + inPos) << 8 & 65535L | (long)in.get(34 + inPos) << 16 & 16777215L | (long)in.get(35 + inPos) << 24 & 4294967295L | (long)in.get(36 + inPos) << 32 & 1099511627775L | (long)in.get(37 + inPos) << 40 & 281474976710655L | (long)in.get(38 + inPos) << 48 & 72057594037927935L | (long)in.get(39 + inPos) << 56 & -1L;
         out[5 + outPos] = (long)in.get(40 + inPos) & 255L | (long)in.get(41 + inPos) << 8 & 65535L | (long)in.get(42 + inPos) << 16 & 16777215L | (long)in.get(43 + inPos) << 24 & 4294967295L | (long)in.get(44 + inPos) << 32 & 1099511627775L | (long)in.get(45 + inPos) << 40 & 281474976710655L | (long)in.get(46 + inPos) << 48 & 72057594037927935L | (long)in.get(47 + inPos) << 56 & -1L;
         out[6 + outPos] = (long)in.get(48 + inPos) & 255L | (long)in.get(49 + inPos) << 8 & 65535L | (long)in.get(50 + inPos) << 16 & 16777215L | (long)in.get(51 + inPos) << 24 & 4294967295L | (long)in.get(52 + inPos) << 32 & 1099511627775L | (long)in.get(53 + inPos) << 40 & 281474976710655L | (long)in.get(54 + inPos) << 48 & 72057594037927935L | (long)in.get(55 + inPos) << 56 & -1L;
         out[7 + outPos] = (long)in.get(56 + inPos) & 255L | (long)in.get(57 + inPos) << 8 & 65535L | (long)in.get(58 + inPos) << 16 & 16777215L | (long)in.get(59 + inPos) << 24 & 4294967295L | (long)in.get(60 + inPos) << 32 & 1099511627775L | (long)in.get(61 + inPos) << 40 & 281474976710655L | (long)in.get(62 + inPos) << 48 & 72057594037927935L | (long)in.get(63 + inPos) << 56 & -1L;
      }

      public final void unpack32Values(byte[] in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in[0 + inPos] & 255L | (long)in[1 + inPos] << 8 & 65535L | (long)in[2 + inPos] << 16 & 16777215L | (long)in[3 + inPos] << 24 & 4294967295L | (long)in[4 + inPos] << 32 & 1099511627775L | (long)in[5 + inPos] << 40 & 281474976710655L | (long)in[6 + inPos] << 48 & 72057594037927935L | (long)in[7 + inPos] << 56 & -1L;
         out[1 + outPos] = (long)in[8 + inPos] & 255L | (long)in[9 + inPos] << 8 & 65535L | (long)in[10 + inPos] << 16 & 16777215L | (long)in[11 + inPos] << 24 & 4294967295L | (long)in[12 + inPos] << 32 & 1099511627775L | (long)in[13 + inPos] << 40 & 281474976710655L | (long)in[14 + inPos] << 48 & 72057594037927935L | (long)in[15 + inPos] << 56 & -1L;
         out[2 + outPos] = (long)in[16 + inPos] & 255L | (long)in[17 + inPos] << 8 & 65535L | (long)in[18 + inPos] << 16 & 16777215L | (long)in[19 + inPos] << 24 & 4294967295L | (long)in[20 + inPos] << 32 & 1099511627775L | (long)in[21 + inPos] << 40 & 281474976710655L | (long)in[22 + inPos] << 48 & 72057594037927935L | (long)in[23 + inPos] << 56 & -1L;
         out[3 + outPos] = (long)in[24 + inPos] & 255L | (long)in[25 + inPos] << 8 & 65535L | (long)in[26 + inPos] << 16 & 16777215L | (long)in[27 + inPos] << 24 & 4294967295L | (long)in[28 + inPos] << 32 & 1099511627775L | (long)in[29 + inPos] << 40 & 281474976710655L | (long)in[30 + inPos] << 48 & 72057594037927935L | (long)in[31 + inPos] << 56 & -1L;
         out[4 + outPos] = (long)in[32 + inPos] & 255L | (long)in[33 + inPos] << 8 & 65535L | (long)in[34 + inPos] << 16 & 16777215L | (long)in[35 + inPos] << 24 & 4294967295L | (long)in[36 + inPos] << 32 & 1099511627775L | (long)in[37 + inPos] << 40 & 281474976710655L | (long)in[38 + inPos] << 48 & 72057594037927935L | (long)in[39 + inPos] << 56 & -1L;
         out[5 + outPos] = (long)in[40 + inPos] & 255L | (long)in[41 + inPos] << 8 & 65535L | (long)in[42 + inPos] << 16 & 16777215L | (long)in[43 + inPos] << 24 & 4294967295L | (long)in[44 + inPos] << 32 & 1099511627775L | (long)in[45 + inPos] << 40 & 281474976710655L | (long)in[46 + inPos] << 48 & 72057594037927935L | (long)in[47 + inPos] << 56 & -1L;
         out[6 + outPos] = (long)in[48 + inPos] & 255L | (long)in[49 + inPos] << 8 & 65535L | (long)in[50 + inPos] << 16 & 16777215L | (long)in[51 + inPos] << 24 & 4294967295L | (long)in[52 + inPos] << 32 & 1099511627775L | (long)in[53 + inPos] << 40 & 281474976710655L | (long)in[54 + inPos] << 48 & 72057594037927935L | (long)in[55 + inPos] << 56 & -1L;
         out[7 + outPos] = (long)in[56 + inPos] & 255L | (long)in[57 + inPos] << 8 & 65535L | (long)in[58 + inPos] << 16 & 16777215L | (long)in[59 + inPos] << 24 & 4294967295L | (long)in[60 + inPos] << 32 & 1099511627775L | (long)in[61 + inPos] << 40 & 281474976710655L | (long)in[62 + inPos] << 48 & 72057594037927935L | (long)in[63 + inPos] << 56 & -1L;
         out[8 + outPos] = (long)in[64 + inPos] & 255L | (long)in[65 + inPos] << 8 & 65535L | (long)in[66 + inPos] << 16 & 16777215L | (long)in[67 + inPos] << 24 & 4294967295L | (long)in[68 + inPos] << 32 & 1099511627775L | (long)in[69 + inPos] << 40 & 281474976710655L | (long)in[70 + inPos] << 48 & 72057594037927935L | (long)in[71 + inPos] << 56 & -1L;
         out[9 + outPos] = (long)in[72 + inPos] & 255L | (long)in[73 + inPos] << 8 & 65535L | (long)in[74 + inPos] << 16 & 16777215L | (long)in[75 + inPos] << 24 & 4294967295L | (long)in[76 + inPos] << 32 & 1099511627775L | (long)in[77 + inPos] << 40 & 281474976710655L | (long)in[78 + inPos] << 48 & 72057594037927935L | (long)in[79 + inPos] << 56 & -1L;
         out[10 + outPos] = (long)in[80 + inPos] & 255L | (long)in[81 + inPos] << 8 & 65535L | (long)in[82 + inPos] << 16 & 16777215L | (long)in[83 + inPos] << 24 & 4294967295L | (long)in[84 + inPos] << 32 & 1099511627775L | (long)in[85 + inPos] << 40 & 281474976710655L | (long)in[86 + inPos] << 48 & 72057594037927935L | (long)in[87 + inPos] << 56 & -1L;
         out[11 + outPos] = (long)in[88 + inPos] & 255L | (long)in[89 + inPos] << 8 & 65535L | (long)in[90 + inPos] << 16 & 16777215L | (long)in[91 + inPos] << 24 & 4294967295L | (long)in[92 + inPos] << 32 & 1099511627775L | (long)in[93 + inPos] << 40 & 281474976710655L | (long)in[94 + inPos] << 48 & 72057594037927935L | (long)in[95 + inPos] << 56 & -1L;
         out[12 + outPos] = (long)in[96 + inPos] & 255L | (long)in[97 + inPos] << 8 & 65535L | (long)in[98 + inPos] << 16 & 16777215L | (long)in[99 + inPos] << 24 & 4294967295L | (long)in[100 + inPos] << 32 & 1099511627775L | (long)in[101 + inPos] << 40 & 281474976710655L | (long)in[102 + inPos] << 48 & 72057594037927935L | (long)in[103 + inPos] << 56 & -1L;
         out[13 + outPos] = (long)in[104 + inPos] & 255L | (long)in[105 + inPos] << 8 & 65535L | (long)in[106 + inPos] << 16 & 16777215L | (long)in[107 + inPos] << 24 & 4294967295L | (long)in[108 + inPos] << 32 & 1099511627775L | (long)in[109 + inPos] << 40 & 281474976710655L | (long)in[110 + inPos] << 48 & 72057594037927935L | (long)in[111 + inPos] << 56 & -1L;
         out[14 + outPos] = (long)in[112 + inPos] & 255L | (long)in[113 + inPos] << 8 & 65535L | (long)in[114 + inPos] << 16 & 16777215L | (long)in[115 + inPos] << 24 & 4294967295L | (long)in[116 + inPos] << 32 & 1099511627775L | (long)in[117 + inPos] << 40 & 281474976710655L | (long)in[118 + inPos] << 48 & 72057594037927935L | (long)in[119 + inPos] << 56 & -1L;
         out[15 + outPos] = (long)in[120 + inPos] & 255L | (long)in[121 + inPos] << 8 & 65535L | (long)in[122 + inPos] << 16 & 16777215L | (long)in[123 + inPos] << 24 & 4294967295L | (long)in[124 + inPos] << 32 & 1099511627775L | (long)in[125 + inPos] << 40 & 281474976710655L | (long)in[126 + inPos] << 48 & 72057594037927935L | (long)in[127 + inPos] << 56 & -1L;
         out[16 + outPos] = (long)in[128 + inPos] & 255L | (long)in[129 + inPos] << 8 & 65535L | (long)in[130 + inPos] << 16 & 16777215L | (long)in[131 + inPos] << 24 & 4294967295L | (long)in[132 + inPos] << 32 & 1099511627775L | (long)in[133 + inPos] << 40 & 281474976710655L | (long)in[134 + inPos] << 48 & 72057594037927935L | (long)in[135 + inPos] << 56 & -1L;
         out[17 + outPos] = (long)in[136 + inPos] & 255L | (long)in[137 + inPos] << 8 & 65535L | (long)in[138 + inPos] << 16 & 16777215L | (long)in[139 + inPos] << 24 & 4294967295L | (long)in[140 + inPos] << 32 & 1099511627775L | (long)in[141 + inPos] << 40 & 281474976710655L | (long)in[142 + inPos] << 48 & 72057594037927935L | (long)in[143 + inPos] << 56 & -1L;
         out[18 + outPos] = (long)in[144 + inPos] & 255L | (long)in[145 + inPos] << 8 & 65535L | (long)in[146 + inPos] << 16 & 16777215L | (long)in[147 + inPos] << 24 & 4294967295L | (long)in[148 + inPos] << 32 & 1099511627775L | (long)in[149 + inPos] << 40 & 281474976710655L | (long)in[150 + inPos] << 48 & 72057594037927935L | (long)in[151 + inPos] << 56 & -1L;
         out[19 + outPos] = (long)in[152 + inPos] & 255L | (long)in[153 + inPos] << 8 & 65535L | (long)in[154 + inPos] << 16 & 16777215L | (long)in[155 + inPos] << 24 & 4294967295L | (long)in[156 + inPos] << 32 & 1099511627775L | (long)in[157 + inPos] << 40 & 281474976710655L | (long)in[158 + inPos] << 48 & 72057594037927935L | (long)in[159 + inPos] << 56 & -1L;
         out[20 + outPos] = (long)in[160 + inPos] & 255L | (long)in[161 + inPos] << 8 & 65535L | (long)in[162 + inPos] << 16 & 16777215L | (long)in[163 + inPos] << 24 & 4294967295L | (long)in[164 + inPos] << 32 & 1099511627775L | (long)in[165 + inPos] << 40 & 281474976710655L | (long)in[166 + inPos] << 48 & 72057594037927935L | (long)in[167 + inPos] << 56 & -1L;
         out[21 + outPos] = (long)in[168 + inPos] & 255L | (long)in[169 + inPos] << 8 & 65535L | (long)in[170 + inPos] << 16 & 16777215L | (long)in[171 + inPos] << 24 & 4294967295L | (long)in[172 + inPos] << 32 & 1099511627775L | (long)in[173 + inPos] << 40 & 281474976710655L | (long)in[174 + inPos] << 48 & 72057594037927935L | (long)in[175 + inPos] << 56 & -1L;
         out[22 + outPos] = (long)in[176 + inPos] & 255L | (long)in[177 + inPos] << 8 & 65535L | (long)in[178 + inPos] << 16 & 16777215L | (long)in[179 + inPos] << 24 & 4294967295L | (long)in[180 + inPos] << 32 & 1099511627775L | (long)in[181 + inPos] << 40 & 281474976710655L | (long)in[182 + inPos] << 48 & 72057594037927935L | (long)in[183 + inPos] << 56 & -1L;
         out[23 + outPos] = (long)in[184 + inPos] & 255L | (long)in[185 + inPos] << 8 & 65535L | (long)in[186 + inPos] << 16 & 16777215L | (long)in[187 + inPos] << 24 & 4294967295L | (long)in[188 + inPos] << 32 & 1099511627775L | (long)in[189 + inPos] << 40 & 281474976710655L | (long)in[190 + inPos] << 48 & 72057594037927935L | (long)in[191 + inPos] << 56 & -1L;
         out[24 + outPos] = (long)in[192 + inPos] & 255L | (long)in[193 + inPos] << 8 & 65535L | (long)in[194 + inPos] << 16 & 16777215L | (long)in[195 + inPos] << 24 & 4294967295L | (long)in[196 + inPos] << 32 & 1099511627775L | (long)in[197 + inPos] << 40 & 281474976710655L | (long)in[198 + inPos] << 48 & 72057594037927935L | (long)in[199 + inPos] << 56 & -1L;
         out[25 + outPos] = (long)in[200 + inPos] & 255L | (long)in[201 + inPos] << 8 & 65535L | (long)in[202 + inPos] << 16 & 16777215L | (long)in[203 + inPos] << 24 & 4294967295L | (long)in[204 + inPos] << 32 & 1099511627775L | (long)in[205 + inPos] << 40 & 281474976710655L | (long)in[206 + inPos] << 48 & 72057594037927935L | (long)in[207 + inPos] << 56 & -1L;
         out[26 + outPos] = (long)in[208 + inPos] & 255L | (long)in[209 + inPos] << 8 & 65535L | (long)in[210 + inPos] << 16 & 16777215L | (long)in[211 + inPos] << 24 & 4294967295L | (long)in[212 + inPos] << 32 & 1099511627775L | (long)in[213 + inPos] << 40 & 281474976710655L | (long)in[214 + inPos] << 48 & 72057594037927935L | (long)in[215 + inPos] << 56 & -1L;
         out[27 + outPos] = (long)in[216 + inPos] & 255L | (long)in[217 + inPos] << 8 & 65535L | (long)in[218 + inPos] << 16 & 16777215L | (long)in[219 + inPos] << 24 & 4294967295L | (long)in[220 + inPos] << 32 & 1099511627775L | (long)in[221 + inPos] << 40 & 281474976710655L | (long)in[222 + inPos] << 48 & 72057594037927935L | (long)in[223 + inPos] << 56 & -1L;
         out[28 + outPos] = (long)in[224 + inPos] & 255L | (long)in[225 + inPos] << 8 & 65535L | (long)in[226 + inPos] << 16 & 16777215L | (long)in[227 + inPos] << 24 & 4294967295L | (long)in[228 + inPos] << 32 & 1099511627775L | (long)in[229 + inPos] << 40 & 281474976710655L | (long)in[230 + inPos] << 48 & 72057594037927935L | (long)in[231 + inPos] << 56 & -1L;
         out[29 + outPos] = (long)in[232 + inPos] & 255L | (long)in[233 + inPos] << 8 & 65535L | (long)in[234 + inPos] << 16 & 16777215L | (long)in[235 + inPos] << 24 & 4294967295L | (long)in[236 + inPos] << 32 & 1099511627775L | (long)in[237 + inPos] << 40 & 281474976710655L | (long)in[238 + inPos] << 48 & 72057594037927935L | (long)in[239 + inPos] << 56 & -1L;
         out[30 + outPos] = (long)in[240 + inPos] & 255L | (long)in[241 + inPos] << 8 & 65535L | (long)in[242 + inPos] << 16 & 16777215L | (long)in[243 + inPos] << 24 & 4294967295L | (long)in[244 + inPos] << 32 & 1099511627775L | (long)in[245 + inPos] << 40 & 281474976710655L | (long)in[246 + inPos] << 48 & 72057594037927935L | (long)in[247 + inPos] << 56 & -1L;
         out[31 + outPos] = (long)in[248 + inPos] & 255L | (long)in[249 + inPos] << 8 & 65535L | (long)in[250 + inPos] << 16 & 16777215L | (long)in[251 + inPos] << 24 & 4294967295L | (long)in[252 + inPos] << 32 & 1099511627775L | (long)in[253 + inPos] << 40 & 281474976710655L | (long)in[254 + inPos] << 48 & 72057594037927935L | (long)in[255 + inPos] << 56 & -1L;
      }

      public final void unpack32Values(ByteBuffer in, int inPos, long[] out, int outPos) {
         out[0 + outPos] = (long)in.get(0 + inPos) & 255L | (long)in.get(1 + inPos) << 8 & 65535L | (long)in.get(2 + inPos) << 16 & 16777215L | (long)in.get(3 + inPos) << 24 & 4294967295L | (long)in.get(4 + inPos) << 32 & 1099511627775L | (long)in.get(5 + inPos) << 40 & 281474976710655L | (long)in.get(6 + inPos) << 48 & 72057594037927935L | (long)in.get(7 + inPos) << 56 & -1L;
         out[1 + outPos] = (long)in.get(8 + inPos) & 255L | (long)in.get(9 + inPos) << 8 & 65535L | (long)in.get(10 + inPos) << 16 & 16777215L | (long)in.get(11 + inPos) << 24 & 4294967295L | (long)in.get(12 + inPos) << 32 & 1099511627775L | (long)in.get(13 + inPos) << 40 & 281474976710655L | (long)in.get(14 + inPos) << 48 & 72057594037927935L | (long)in.get(15 + inPos) << 56 & -1L;
         out[2 + outPos] = (long)in.get(16 + inPos) & 255L | (long)in.get(17 + inPos) << 8 & 65535L | (long)in.get(18 + inPos) << 16 & 16777215L | (long)in.get(19 + inPos) << 24 & 4294967295L | (long)in.get(20 + inPos) << 32 & 1099511627775L | (long)in.get(21 + inPos) << 40 & 281474976710655L | (long)in.get(22 + inPos) << 48 & 72057594037927935L | (long)in.get(23 + inPos) << 56 & -1L;
         out[3 + outPos] = (long)in.get(24 + inPos) & 255L | (long)in.get(25 + inPos) << 8 & 65535L | (long)in.get(26 + inPos) << 16 & 16777215L | (long)in.get(27 + inPos) << 24 & 4294967295L | (long)in.get(28 + inPos) << 32 & 1099511627775L | (long)in.get(29 + inPos) << 40 & 281474976710655L | (long)in.get(30 + inPos) << 48 & 72057594037927935L | (long)in.get(31 + inPos) << 56 & -1L;
         out[4 + outPos] = (long)in.get(32 + inPos) & 255L | (long)in.get(33 + inPos) << 8 & 65535L | (long)in.get(34 + inPos) << 16 & 16777215L | (long)in.get(35 + inPos) << 24 & 4294967295L | (long)in.get(36 + inPos) << 32 & 1099511627775L | (long)in.get(37 + inPos) << 40 & 281474976710655L | (long)in.get(38 + inPos) << 48 & 72057594037927935L | (long)in.get(39 + inPos) << 56 & -1L;
         out[5 + outPos] = (long)in.get(40 + inPos) & 255L | (long)in.get(41 + inPos) << 8 & 65535L | (long)in.get(42 + inPos) << 16 & 16777215L | (long)in.get(43 + inPos) << 24 & 4294967295L | (long)in.get(44 + inPos) << 32 & 1099511627775L | (long)in.get(45 + inPos) << 40 & 281474976710655L | (long)in.get(46 + inPos) << 48 & 72057594037927935L | (long)in.get(47 + inPos) << 56 & -1L;
         out[6 + outPos] = (long)in.get(48 + inPos) & 255L | (long)in.get(49 + inPos) << 8 & 65535L | (long)in.get(50 + inPos) << 16 & 16777215L | (long)in.get(51 + inPos) << 24 & 4294967295L | (long)in.get(52 + inPos) << 32 & 1099511627775L | (long)in.get(53 + inPos) << 40 & 281474976710655L | (long)in.get(54 + inPos) << 48 & 72057594037927935L | (long)in.get(55 + inPos) << 56 & -1L;
         out[7 + outPos] = (long)in.get(56 + inPos) & 255L | (long)in.get(57 + inPos) << 8 & 65535L | (long)in.get(58 + inPos) << 16 & 16777215L | (long)in.get(59 + inPos) << 24 & 4294967295L | (long)in.get(60 + inPos) << 32 & 1099511627775L | (long)in.get(61 + inPos) << 40 & 281474976710655L | (long)in.get(62 + inPos) << 48 & 72057594037927935L | (long)in.get(63 + inPos) << 56 & -1L;
         out[8 + outPos] = (long)in.get(64 + inPos) & 255L | (long)in.get(65 + inPos) << 8 & 65535L | (long)in.get(66 + inPos) << 16 & 16777215L | (long)in.get(67 + inPos) << 24 & 4294967295L | (long)in.get(68 + inPos) << 32 & 1099511627775L | (long)in.get(69 + inPos) << 40 & 281474976710655L | (long)in.get(70 + inPos) << 48 & 72057594037927935L | (long)in.get(71 + inPos) << 56 & -1L;
         out[9 + outPos] = (long)in.get(72 + inPos) & 255L | (long)in.get(73 + inPos) << 8 & 65535L | (long)in.get(74 + inPos) << 16 & 16777215L | (long)in.get(75 + inPos) << 24 & 4294967295L | (long)in.get(76 + inPos) << 32 & 1099511627775L | (long)in.get(77 + inPos) << 40 & 281474976710655L | (long)in.get(78 + inPos) << 48 & 72057594037927935L | (long)in.get(79 + inPos) << 56 & -1L;
         out[10 + outPos] = (long)in.get(80 + inPos) & 255L | (long)in.get(81 + inPos) << 8 & 65535L | (long)in.get(82 + inPos) << 16 & 16777215L | (long)in.get(83 + inPos) << 24 & 4294967295L | (long)in.get(84 + inPos) << 32 & 1099511627775L | (long)in.get(85 + inPos) << 40 & 281474976710655L | (long)in.get(86 + inPos) << 48 & 72057594037927935L | (long)in.get(87 + inPos) << 56 & -1L;
         out[11 + outPos] = (long)in.get(88 + inPos) & 255L | (long)in.get(89 + inPos) << 8 & 65535L | (long)in.get(90 + inPos) << 16 & 16777215L | (long)in.get(91 + inPos) << 24 & 4294967295L | (long)in.get(92 + inPos) << 32 & 1099511627775L | (long)in.get(93 + inPos) << 40 & 281474976710655L | (long)in.get(94 + inPos) << 48 & 72057594037927935L | (long)in.get(95 + inPos) << 56 & -1L;
         out[12 + outPos] = (long)in.get(96 + inPos) & 255L | (long)in.get(97 + inPos) << 8 & 65535L | (long)in.get(98 + inPos) << 16 & 16777215L | (long)in.get(99 + inPos) << 24 & 4294967295L | (long)in.get(100 + inPos) << 32 & 1099511627775L | (long)in.get(101 + inPos) << 40 & 281474976710655L | (long)in.get(102 + inPos) << 48 & 72057594037927935L | (long)in.get(103 + inPos) << 56 & -1L;
         out[13 + outPos] = (long)in.get(104 + inPos) & 255L | (long)in.get(105 + inPos) << 8 & 65535L | (long)in.get(106 + inPos) << 16 & 16777215L | (long)in.get(107 + inPos) << 24 & 4294967295L | (long)in.get(108 + inPos) << 32 & 1099511627775L | (long)in.get(109 + inPos) << 40 & 281474976710655L | (long)in.get(110 + inPos) << 48 & 72057594037927935L | (long)in.get(111 + inPos) << 56 & -1L;
         out[14 + outPos] = (long)in.get(112 + inPos) & 255L | (long)in.get(113 + inPos) << 8 & 65535L | (long)in.get(114 + inPos) << 16 & 16777215L | (long)in.get(115 + inPos) << 24 & 4294967295L | (long)in.get(116 + inPos) << 32 & 1099511627775L | (long)in.get(117 + inPos) << 40 & 281474976710655L | (long)in.get(118 + inPos) << 48 & 72057594037927935L | (long)in.get(119 + inPos) << 56 & -1L;
         out[15 + outPos] = (long)in.get(120 + inPos) & 255L | (long)in.get(121 + inPos) << 8 & 65535L | (long)in.get(122 + inPos) << 16 & 16777215L | (long)in.get(123 + inPos) << 24 & 4294967295L | (long)in.get(124 + inPos) << 32 & 1099511627775L | (long)in.get(125 + inPos) << 40 & 281474976710655L | (long)in.get(126 + inPos) << 48 & 72057594037927935L | (long)in.get(127 + inPos) << 56 & -1L;
         out[16 + outPos] = (long)in.get(128 + inPos) & 255L | (long)in.get(129 + inPos) << 8 & 65535L | (long)in.get(130 + inPos) << 16 & 16777215L | (long)in.get(131 + inPos) << 24 & 4294967295L | (long)in.get(132 + inPos) << 32 & 1099511627775L | (long)in.get(133 + inPos) << 40 & 281474976710655L | (long)in.get(134 + inPos) << 48 & 72057594037927935L | (long)in.get(135 + inPos) << 56 & -1L;
         out[17 + outPos] = (long)in.get(136 + inPos) & 255L | (long)in.get(137 + inPos) << 8 & 65535L | (long)in.get(138 + inPos) << 16 & 16777215L | (long)in.get(139 + inPos) << 24 & 4294967295L | (long)in.get(140 + inPos) << 32 & 1099511627775L | (long)in.get(141 + inPos) << 40 & 281474976710655L | (long)in.get(142 + inPos) << 48 & 72057594037927935L | (long)in.get(143 + inPos) << 56 & -1L;
         out[18 + outPos] = (long)in.get(144 + inPos) & 255L | (long)in.get(145 + inPos) << 8 & 65535L | (long)in.get(146 + inPos) << 16 & 16777215L | (long)in.get(147 + inPos) << 24 & 4294967295L | (long)in.get(148 + inPos) << 32 & 1099511627775L | (long)in.get(149 + inPos) << 40 & 281474976710655L | (long)in.get(150 + inPos) << 48 & 72057594037927935L | (long)in.get(151 + inPos) << 56 & -1L;
         out[19 + outPos] = (long)in.get(152 + inPos) & 255L | (long)in.get(153 + inPos) << 8 & 65535L | (long)in.get(154 + inPos) << 16 & 16777215L | (long)in.get(155 + inPos) << 24 & 4294967295L | (long)in.get(156 + inPos) << 32 & 1099511627775L | (long)in.get(157 + inPos) << 40 & 281474976710655L | (long)in.get(158 + inPos) << 48 & 72057594037927935L | (long)in.get(159 + inPos) << 56 & -1L;
         out[20 + outPos] = (long)in.get(160 + inPos) & 255L | (long)in.get(161 + inPos) << 8 & 65535L | (long)in.get(162 + inPos) << 16 & 16777215L | (long)in.get(163 + inPos) << 24 & 4294967295L | (long)in.get(164 + inPos) << 32 & 1099511627775L | (long)in.get(165 + inPos) << 40 & 281474976710655L | (long)in.get(166 + inPos) << 48 & 72057594037927935L | (long)in.get(167 + inPos) << 56 & -1L;
         out[21 + outPos] = (long)in.get(168 + inPos) & 255L | (long)in.get(169 + inPos) << 8 & 65535L | (long)in.get(170 + inPos) << 16 & 16777215L | (long)in.get(171 + inPos) << 24 & 4294967295L | (long)in.get(172 + inPos) << 32 & 1099511627775L | (long)in.get(173 + inPos) << 40 & 281474976710655L | (long)in.get(174 + inPos) << 48 & 72057594037927935L | (long)in.get(175 + inPos) << 56 & -1L;
         out[22 + outPos] = (long)in.get(176 + inPos) & 255L | (long)in.get(177 + inPos) << 8 & 65535L | (long)in.get(178 + inPos) << 16 & 16777215L | (long)in.get(179 + inPos) << 24 & 4294967295L | (long)in.get(180 + inPos) << 32 & 1099511627775L | (long)in.get(181 + inPos) << 40 & 281474976710655L | (long)in.get(182 + inPos) << 48 & 72057594037927935L | (long)in.get(183 + inPos) << 56 & -1L;
         out[23 + outPos] = (long)in.get(184 + inPos) & 255L | (long)in.get(185 + inPos) << 8 & 65535L | (long)in.get(186 + inPos) << 16 & 16777215L | (long)in.get(187 + inPos) << 24 & 4294967295L | (long)in.get(188 + inPos) << 32 & 1099511627775L | (long)in.get(189 + inPos) << 40 & 281474976710655L | (long)in.get(190 + inPos) << 48 & 72057594037927935L | (long)in.get(191 + inPos) << 56 & -1L;
         out[24 + outPos] = (long)in.get(192 + inPos) & 255L | (long)in.get(193 + inPos) << 8 & 65535L | (long)in.get(194 + inPos) << 16 & 16777215L | (long)in.get(195 + inPos) << 24 & 4294967295L | (long)in.get(196 + inPos) << 32 & 1099511627775L | (long)in.get(197 + inPos) << 40 & 281474976710655L | (long)in.get(198 + inPos) << 48 & 72057594037927935L | (long)in.get(199 + inPos) << 56 & -1L;
         out[25 + outPos] = (long)in.get(200 + inPos) & 255L | (long)in.get(201 + inPos) << 8 & 65535L | (long)in.get(202 + inPos) << 16 & 16777215L | (long)in.get(203 + inPos) << 24 & 4294967295L | (long)in.get(204 + inPos) << 32 & 1099511627775L | (long)in.get(205 + inPos) << 40 & 281474976710655L | (long)in.get(206 + inPos) << 48 & 72057594037927935L | (long)in.get(207 + inPos) << 56 & -1L;
         out[26 + outPos] = (long)in.get(208 + inPos) & 255L | (long)in.get(209 + inPos) << 8 & 65535L | (long)in.get(210 + inPos) << 16 & 16777215L | (long)in.get(211 + inPos) << 24 & 4294967295L | (long)in.get(212 + inPos) << 32 & 1099511627775L | (long)in.get(213 + inPos) << 40 & 281474976710655L | (long)in.get(214 + inPos) << 48 & 72057594037927935L | (long)in.get(215 + inPos) << 56 & -1L;
         out[27 + outPos] = (long)in.get(216 + inPos) & 255L | (long)in.get(217 + inPos) << 8 & 65535L | (long)in.get(218 + inPos) << 16 & 16777215L | (long)in.get(219 + inPos) << 24 & 4294967295L | (long)in.get(220 + inPos) << 32 & 1099511627775L | (long)in.get(221 + inPos) << 40 & 281474976710655L | (long)in.get(222 + inPos) << 48 & 72057594037927935L | (long)in.get(223 + inPos) << 56 & -1L;
         out[28 + outPos] = (long)in.get(224 + inPos) & 255L | (long)in.get(225 + inPos) << 8 & 65535L | (long)in.get(226 + inPos) << 16 & 16777215L | (long)in.get(227 + inPos) << 24 & 4294967295L | (long)in.get(228 + inPos) << 32 & 1099511627775L | (long)in.get(229 + inPos) << 40 & 281474976710655L | (long)in.get(230 + inPos) << 48 & 72057594037927935L | (long)in.get(231 + inPos) << 56 & -1L;
         out[29 + outPos] = (long)in.get(232 + inPos) & 255L | (long)in.get(233 + inPos) << 8 & 65535L | (long)in.get(234 + inPos) << 16 & 16777215L | (long)in.get(235 + inPos) << 24 & 4294967295L | (long)in.get(236 + inPos) << 32 & 1099511627775L | (long)in.get(237 + inPos) << 40 & 281474976710655L | (long)in.get(238 + inPos) << 48 & 72057594037927935L | (long)in.get(239 + inPos) << 56 & -1L;
         out[30 + outPos] = (long)in.get(240 + inPos) & 255L | (long)in.get(241 + inPos) << 8 & 65535L | (long)in.get(242 + inPos) << 16 & 16777215L | (long)in.get(243 + inPos) << 24 & 4294967295L | (long)in.get(244 + inPos) << 32 & 1099511627775L | (long)in.get(245 + inPos) << 40 & 281474976710655L | (long)in.get(246 + inPos) << 48 & 72057594037927935L | (long)in.get(247 + inPos) << 56 & -1L;
         out[31 + outPos] = (long)in.get(248 + inPos) & 255L | (long)in.get(249 + inPos) << 8 & 65535L | (long)in.get(250 + inPos) << 16 & 16777215L | (long)in.get(251 + inPos) << 24 & 4294967295L | (long)in.get(252 + inPos) << 32 & 1099511627775L | (long)in.get(253 + inPos) << 40 & 281474976710655L | (long)in.get(254 + inPos) << 48 & 72057594037927935L | (long)in.get(255 + inPos) << 56 & -1L;
      }
   }
}
