package org.apache.spark.sql.streaming;

import java.io.Serializable;
import org.apache.spark.annotation.Evolving;
import scala.reflect.ScalaSignature;

@Evolving
@ScalaSignature(
   bytes = "\u0006\u0005\r3q!\u0002\u0004\u0011\u0002G\u0005\u0011\u0003C\u0003\"\u0001\u0019\u0005!\u0005C\u0003'\u0001\u0019\u0005q\u0005C\u00034\u0001\u0019\u0005A\u0007C\u0003;\u0001\u0019\u00051H\u0001\u0006WC2,Xm\u0015;bi\u0016T!a\u0002\u0005\u0002\u0013M$(/Z1nS:<'BA\u0005\u000b\u0003\r\u0019\u0018\u000f\u001c\u0006\u0003\u00171\tQa\u001d9be.T!!\u0004\b\u0002\r\u0005\u0004\u0018m\u00195f\u0015\u0005y\u0011aA8sO\u000e\u0001QC\u0001\n+'\r\u00011#\u0007\t\u0003)]i\u0011!\u0006\u0006\u0002-\u0005)1oY1mC&\u0011\u0001$\u0006\u0002\u0007\u0003:L(+\u001a4\u0011\u0005iyR\"A\u000e\u000b\u0005qi\u0012AA5p\u0015\u0005q\u0012\u0001\u00026bm\u0006L!\u0001I\u000e\u0003\u0019M+'/[1mSj\f'\r\\3\u0002\r\u0015D\u0018n\u001d;t)\u0005\u0019\u0003C\u0001\u000b%\u0013\t)SCA\u0004C_>dW-\u00198\u0002\u0007\u001d,G\u000fF\u0001)!\tI#\u0006\u0004\u0001\u0005\u000b-\u0002!\u0019\u0001\u0017\u0003\u0003M\u000b\"!\f\u0019\u0011\u0005Qq\u0013BA\u0018\u0016\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"\u0001F\u0019\n\u0005I*\"aA!os\u00061Q\u000f\u001d3bi\u0016$\"!\u000e\u001d\u0011\u0005Q1\u0014BA\u001c\u0016\u0005\u0011)f.\u001b;\t\u000be\u001a\u0001\u0019\u0001\u0015\u0002\u00119,wo\u0015;bi\u0016\fQa\u00197fCJ$\u0012!\u000e\u0015\u0003\u0001u\u0002\"AP!\u000e\u0003}R!\u0001\u0011\u0006\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0002C\u007f\tAQI^8mm&tw\r"
)
public interface ValueState extends Serializable {
   boolean exists();

   Object get();

   void update(final Object newState);

   void clear();
}
