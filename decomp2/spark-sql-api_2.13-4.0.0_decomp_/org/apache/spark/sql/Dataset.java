package org.apache.spark.sql;

import java.io.Serializable;
import java.lang.invoke.SerializedLambda;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import org.apache.spark.annotation.ClassicOnly;
import org.apache.spark.annotation.DeveloperApi;
import org.apache.spark.annotation.Stable;
import org.apache.spark.annotation.Unstable;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.api.java.function.FilterFunction;
import org.apache.spark.api.java.function.FlatMapFunction;
import org.apache.spark.api.java.function.ForeachFunction;
import org.apache.spark.api.java.function.ForeachPartitionFunction;
import org.apache.spark.api.java.function.MapFunction;
import org.apache.spark.api.java.function.MapPartitionsFunction;
import org.apache.spark.api.java.function.ReduceFunction;
import org.apache.spark.rdd.RDD;
import org.apache.spark.sql.execution.QueryExecution;
import org.apache.spark.sql.internal.ToScalaUDF$;
import org.apache.spark.sql.internal.UDFAdaptors$;
import org.apache.spark.sql.streaming.DataStreamWriter;
import org.apache.spark.sql.types.Metadata;
import org.apache.spark.sql.types.StructType;
import org.apache.spark.storage.StorageLevel;
import scala.Function1;
import scala.Function2;
import scala.MatchError;
import scala.Option;
import scala.Some;
import scala.Symbol;
import scala.Tuple2;
import scala.collection.IterableOps;
import scala.collection.immutable.Map;
import scala.collection.immutable.Seq;
import scala.reflect.ScalaSignature;
import scala.reflect.api.TypeTags;
import scala.runtime.BoxesRunTime;
import scala.runtime.ScalaRunTime.;

@Stable
@ScalaSignature(
   bytes = "\u0006\u0005--e\u0001CAM\u00037\u000b\t!!,\t\u000f\u0005U\u0007\u0001\"\u0001\u0002X\"I\u00111\u001f\u0001C\u0002\u001b\u0005\u0011Q\u001f\u0005\n\u0003{\u0004!\u0019!D\u0001\u0003\u007fDqAa\u0002\u0001\r\u0003\u0011I\u0001C\u0004\u00036\u00011\tAa\u000e\t\u000f\t\u0015\u0003A\"\u0001\u0003H!9!\u0011\f\u0001\u0007\u0002\tm\u0003b\u0002B\u001b\u0001\u0019\u0005!Q\u000e\u0005\b\u0005?\u0002a\u0011\u0001BK\u0011\u001d\u00119\n\u0001C\u0001\u00053CqAa&\u0001\t\u0003\u0011\t\u000bC\u0004\u0003.\u00021\tAa,\t\u000f\t5\u0006\u0001\"\u0001\u00036\"9!Q\u0016\u0001\u0005\u0002\te\u0005b\u0002Ba\u0001\u0011\u0005!1\u0019\u0005\b\u0005#\u0004A\u0011\u0001Bj\u0011\u001d\u00119\u000e\u0001D\u0001\u00053DqAa7\u0001\r\u0003\u0011I\u000eC\u0004\u0003^\u00021\tA!7\t\u000f\t}\u0007\u0001\"\u0001\u0002X\"9!q\u001c\u0001\u0005\u0002\t\u0005\bb\u0002Bt\u0001\u0011\u0005\u0011q\u001b\u0005\b\u0005O\u0004A\u0011\u0001Bu\u0011\u001d\u00119\u000f\u0001C\u0001\u0005[DqAa8\u0001\r#\u0019\t\u0001C\u0004\u0004\u0012\u00011\taa\u0005\t\u000f\ru\u0001\u0001\"\u0001\u0004 !91Q\u0004\u0001\u0005\u0002\te\u0005bBB\u000f\u0001\u0011\u00051Q\u0005\u0005\b\u0007;\u0001a\u0011AB\u0016\u0011\u001d\u0019i\u0002\u0001C\u0001\u0007cAqa!\b\u0001\r\u0003\u00199\u0004C\u0004\u0004B\u00011\taa\u0011\t\u000f\r-\u0003A\"\u0001\u0004N!91Q\u000b\u0001\u0007\u0002\r]\u0003bBB+\u0001\u0011\u00051q\r\u0005\b\u0007+\u0002A\u0011AB=\u0011\u001d\u0019)\u0006\u0001C\u0001\u0007\u0017Cqa!\u0016\u0001\t\u0003\u0019\t\u000bC\u0004\u0004V\u0001!\ta!.\t\u000f\rU\u0003A\"\u0001\u0004H\"91Q\u000b\u0001\u0005\u0002\re\u0007bBB+\u0001\u0019\u00051\u0011\u001f\u0005\b\t\u0007\u0001a\u0011\u0001C\u0003\u0011\u001d!\u0019\u0002\u0001D\u0001\t+Aq\u0001b\u0005\u0001\t\u0003!i\u0003C\u0004\u0005@\u00011\t\u0001\"\u0011\t\u000f\u0011}\u0002A\"\u0001\u0005P!9Aq\b\u0001\u0007\u0002\u0011}\u0003b\u0002C \u0001\u0019\u0005Aq\u000e\u0005\b\t\u0003\u0003a\u0011\u0003CB\u0011\u001d!y\t\u0001C\u0001\t#Cq\u0001b$\u0001\t\u0003!i\nC\u0004\u0005&\u0002!\t\u0001b*\t\u000f\u0011\u0015\u0006\u0001\"\u0001\u00050\"9AQ\u0017\u0001\u0005\u0002\u0011]\u0006b\u0002C[\u0001\u0011\u0005Aq\u0018\u0005\b\t\u000b\u0004a\u0011\u0001Cd\u0011\u001d!)\u000e\u0001C\u0001\t/Dq\u0001\"8\u0001\r\u0003!y\u000eC\u0004\u0005d\u00021\t\u0001\":\t\u000f\u0011%\bA\"\u0001\u0005l\"9!Q\t\u0001\u0007\u0002\u0011=\bb\u0002B#\u0001\u0011\u0005AQ\u001f\u0005\b\tg\u0004A\u0011\u0001C\u0000\u0011\u001d!\u0019\u0010\u0001C\u0001\u000b\u0007Aq!b\u0002\u0001\r\u0003)I\u0001C\u0004\u0006\b\u0001!\t!\"\u0005\t\u000f\u0015e\u0001\u0001\"\u0001\u0006\u001c!9Qq\u0001\u0001\u0007\u0002\u0015\r\u0002bBC\u001d\u0001\u0019EQ1\b\u0005\b\u000b\u000f\u0001A\u0011AC.\u0011\u001d)9\u0001\u0001C\u0001\u000boBq!b\u0002\u0001\t\u0003)y\nC\u0004\u0006\b\u0001!\t!b4\t\u000f\u0019\u001d\u0001A\"\u0001\u0007\n!9aq\u0001\u0001\u0005\u0002\u00195\u0001b\u0002D\u0004\u0001\u0019\u0005a1\u0003\u0005\b\r\u000f\u0001a\u0011\u0001D\u0010\u0011\u001d19\u0004\u0001C\u0001\rsAqAb\u000e\u0001\t\u00031i\u0004C\u0004\u0007B\u00011\tAb\u0011\t\u000f\u0019\u0005\u0003\u0001\"\u0001\u0007P!9a\u0011\f\u0001\u0007\u0002\u0019m\u0003b\u0002D-\u0001\u0011\u0005a\u0011\r\u0005\b\rS\u0002a\u0011\u0001D6\u0011\u001d1I\u0007\u0001C\u0001\rcBqA\"\u001f\u0001\r\u00031Y\bC\u0004\u0007\u0006\u0002!\tAb\"\t\u000f\u0019\u0015\u0005\u0001\"\u0001\u0007\u0014\"9aQ\u0011\u0001\u0005\u0002\u0019u\u0005b\u0002DC\u0001\u0011\u0005aQ\u0016\u0005\b\ro\u0003a\u0011\u0001D]\u0011\u001d19\f\u0001C\u0001\r\u0007DqA\"4\u0001\r\u00031y\rC\u0004\u0007N\u0002!\tAb;\t\u000f\u001d\u0005\u0001A\"\u0001\b\u0004!9q\u0011\u0001\u0001\u0007\u0002\u001d]\u0001bBD\u0010\u0001\u0011\u0005q\u0011\u0005\u0005\b\u000f?\u0001A\u0011AD\u0016\u0011\u001d9\u0019\u0004\u0001D\u0001\u000fkAqab\r\u0001\r\u0003\u00119\u0004C\u0004\b<\u00011\ta\"\u0010\t\u000f\u001d}\u0002A\"\u0001\b>!9q\u0011\t\u0001\u0007\u0002\u001d\r\u0003bBD!\u0001\u0019\u0005qQ\n\u0005\b\u000f?\u0002a\u0011AD1\u0011\u001d99\u0007\u0001D\u0001\u000fSBqa\"\u001c\u0001\r\u00039y\u0007C\u0004\bt\u0001!\ta\"\u001e\t\u000f\u001de\u0004\u0001\"\u0001\b|!9q\u0011\u0010\u0001\u0007\u0002\u001d}\u0004bBDD\u0001\u0019\u0005q\u0011\u0012\u0005\b\u000f\u001b\u0003a\u0011ADH\u0011\u001d9\u0019\n\u0001D\u0001\u000f+Cqa\"'\u0001\r\u00039Y\nC\u0004\b \u0002!\ta\")\t\u000f\u001d}\u0005\u0001\"\u0001\b8\"9qq\u0014\u0001\u0007\u0002\u001dm\u0006bBDP\u0001\u0011\u0005qQ\u0019\u0005\b\u000f\u0017\u0004a\u0011ADg\u0011\u001d9I\u000e\u0001D\u0001\u000f7Dqab3\u0001\r\u000399\u000fC\u0004\bl\u00021\ta\"<\t\u000f\u001d-\bA\"\u0001\tZ!9\u0001\u0012\u0011\u0001\u0005\u0002!\r\u0005b\u0002EE\u0001\u0011\u0005\u00012\u0012\u0005\b\u0011\u0013\u0003A\u0011\u0001EJ\u0011%AI\t\u0001D\u0001\u0003?CI\nC\u0005\t\n\u0002!\t!a(\t \"I\u0001\u0012\u0011\u0001\u0005\u0002\u0005}\u0005\u0012\u0017\u0005\b\u0011s\u0003A\u0011\u0001E^\u0011\u001dA)\r\u0001C\u0001\u0011\u000fDq\u0001#2\u0001\t\u0003I\t\u0001C\u0004\tF\u00021\t\"#\u0002\t\u000f%5\u0001A\"\u0001\n\u0010!9\u0011r\u0003\u0001\u0005\u0002%e\u0001bBE\f\u0001\u0019\u0005\u0011R\u0004\u0005\b\u0013/\u0001A\u0011AE\u0012\u0011\u001dI9\u0002\u0001D\u0001\u0013OAq!c\f\u0001\r\u0003\t9\u000eC\u0004\n0\u00011\t!#\r\t\u000f%=\u0002\u0001\"\u0001\n6!9\u0011r\u0006\u0001\u0005\u0002%e\u0002bBE!\u0001\u0019\u0005\u0011q\u001b\u0005\b\u0013\u0003\u0002a\u0011AE\"\u0011\u001dI\t\u0005\u0001C\u0001\u0013\u000fBq!#\u0011\u0001\t\u0003IY\u0005C\u0004\nT\u00011\t!#\u0016\t\u000f%m\u0003A\"\u0001\n^!9\u0011R\r\u0001\u0007\u0002%\u001d\u0004bBE3\u0001\u0011\u0005\u0011R\u000e\u0005\b\u0013_\u0002A\u0011AE7\u0011\u001dI\t\b\u0001C\u0001\u0013gBq!c'\u0001\r\u0003Ii\nC\u0004\n\u001c\u00021\t!c-\t\u000f%\u0015\u0007A\"\u0001\nH\"9\u0011R\u0019\u0001\u0005\u0002%\u0015\bbBE~\u0001\u0011\u0005\u0011R \u0005\b\u0013w\u0004A\u0011\u0001F\u000b\u0011\u001dQY\u0003\u0001C\u0001\u0015[AqAc\u000b\u0001\t\u0003Q\u0019\u0004C\u0004\u000b>\u00011\tAc\u0010\t\u000f)u\u0002\u0001\"\u0001\u000bF!9!r\n\u0001\u0005\u0002)E\u0003b\u0002F+\u0001\u0019\u0005!r\u000b\u0005\b\u00157\u0002A\u0011\u0001F/\u0011\u001dQ\u0019\u0007\u0001D\u0001\u0015KBqAc\u001a\u0001\r\u0003QI\u0007C\u0004\u000bl\u00011\tA#\u001c\t\u000f)M\u0004A\"\u0001\u000bv!9!r\u000f\u0001\u0007\u0002)e\u0004b\u0002F@\u0001\u0019E!\u0012\u0011\u0005\b\u0015o\u0002A\u0011\u0001FF\u0011\u001dQ9\b\u0001C\u0001\u0015'CqA#'\u0001\r#QY\nC\u0004\u000b\u001a\u0002!\tA#)\t\u000f)e\u0005\u0001\"\u0001\u000b*\"9!r\u0016\u0001\u0007\u0002)E\u0006b\u0002F[\u0001\u0011\u0005\u0011q\u001b\u0005\b\u0015o\u0003a\u0011AAl\u0011\u001dQI\f\u0001D\u0001\u0003/DqAc.\u0001\r\u0003QY\fC\u0004\u0003t\u00021\tA#1\t\u000f)\r\u0007A\"\u0001\u000bF\"9!2\u0019\u0001\u0007\u0002\u0005]\u0007b\u0002Ff\u0001\u0011\u0005!R\u001a\u0005\b\u00153\u0004A\u0011\u0001Fn\u0011\u001dQi\u000f\u0001C\u0001\u0015_DqAc=\u0001\t\u0003Q)\u0010C\u0004\f\u0006\u0001!\tac\u0002\t\u000f)e\u0007A\"\u0005\f\f!91R\u0003\u0001\u0007\u0002-]\u0001bBF\u0013\u0001\u0019\u00051r\u0005\u0005\b\u0017k\u0001a\u0011AF\u001c\u0011\u001dY\t\u0005\u0001D\u0001\u0017\u0007Bqac\u0012\u0001\r\u0003\u0011\u0019\u000eC\u0004\fJ\u00011\tac\u0013\t\u000f-E\u0003A\"\u0001\fT!91r\u000b\u0001\u0007\u0002-e\u0003bBF1\u0001\u0019\u000512\r\u0005\b\u0017c\u0002a\u0011AF:\u0011\u001dYy\b\u0001C\u0001\u0017g\u0012q\u0001R1uCN,GO\u0003\u0003\u0002\u001e\u0006}\u0015aA:rY*!\u0011\u0011UAR\u0003\u0015\u0019\b/\u0019:l\u0015\u0011\t)+a*\u0002\r\u0005\u0004\u0018m\u00195f\u0015\t\tI+A\u0002pe\u001e\u001c\u0001!\u0006\u0003\u00020\u0006\u00058#\u0002\u0001\u00022\u0006u\u0006\u0003BAZ\u0003sk!!!.\u000b\u0005\u0005]\u0016!B:dC2\f\u0017\u0002BA^\u0003k\u0013a!\u00118z%\u00164\u0007\u0003BA`\u0003\u001ftA!!1\u0002L:!\u00111YAe\u001b\t\t)M\u0003\u0003\u0002H\u0006-\u0016A\u0002\u001fs_>$h(\u0003\u0002\u00028&!\u0011QZA[\u0003\u001d\u0001\u0018mY6bO\u0016LA!!5\u0002T\na1+\u001a:jC2L'0\u00192mK*!\u0011QZA[\u0003\u0019a\u0014N\\5u}Q\u0011\u0011\u0011\u001c\t\u0006\u00037\u0004\u0011Q\\\u0007\u0003\u00037\u0003B!a8\u0002b2\u0001AaBAr\u0001\t\u0007\u0011Q\u001d\u0002\u0002)F!\u0011q]Aw!\u0011\t\u0019,!;\n\t\u0005-\u0018Q\u0017\u0002\b\u001d>$\b.\u001b8h!\u0011\t\u0019,a<\n\t\u0005E\u0018Q\u0017\u0002\u0004\u0003:L\u0018\u0001D:qCJ\\7+Z:tS>tWCAA|!\u0011\tY.!?\n\t\u0005m\u00181\u0014\u0002\r'B\f'o[*fgNLwN\\\u0001\bK:\u001cw\u000eZ3s+\t\u0011\t\u0001\u0005\u0004\u0002\\\n\r\u0011Q\\\u0005\u0005\u0005\u000b\tYJA\u0004F]\u000e|G-\u001a:\u0002\u001dE,XM]=Fq\u0016\u001cW\u000f^5p]V\u0011!1\u0002\t\u0005\u0005\u001b\u0011\u0019\"\u0004\u0002\u0003\u0010)!!\u0011CAN\u0003%)\u00070Z2vi&|g.\u0003\u0003\u0003\u0016\t=!AD)vKJLX\t_3dkRLwN\u001c\u0015\u0004\t\te\u0001\u0003\u0002B\u000e\u0005Ci!A!\b\u000b\t\t}\u0011qT\u0001\u000bC:tw\u000e^1uS>t\u0017\u0002\u0002B\u0012\u0005;\u00111b\u00117bgNL7m\u00148ms\"\u001aAAa\n\u0011\t\tm!\u0011F\u0005\u0005\u0005W\u0011iB\u0001\u0007EKZ,Gn\u001c9fe\u0006\u0003\u0018\u000eK\u0002\u0005\u0005_\u0001BAa\u0007\u00032%!!1\u0007B\u000f\u0005!)fn\u001d;bE2,\u0017\u0001\u0002;p\t\u001a#\"A!\u000f\u0011\t\tm\"q\b\b\u0005\u00037\u0014i$\u0003\u0003\u0002N\u0006m\u0015\u0002\u0002B!\u0005\u0007\u0012\u0011\u0002R1uC\u001a\u0013\u0018-\\3\u000b\t\u00055\u00171T\u0001\u0003CN,BA!\u0013\u0003PQ!!1\nB*!\u0015\tY\u000e\u0001B'!\u0011\tyNa\u0014\u0005\u000f\tEcA1\u0001\u0002f\n\tQ\u000bC\u0005\u0003V\u0019\t\t\u0011q\u0001\u0003X\u0005QQM^5eK:\u001cW\rJ\u0019\u0011\r\u0005m'1\u0001B'\u0003\t!x\u000e\u0006\u0003\u0003:\tu\u0003b\u0002B0\u000f\u0001\u0007!\u0011M\u0001\u0007g\u000eDW-\\1\u0011\t\t\r$\u0011N\u0007\u0003\u0005KRAAa\u001a\u0002\u001c\u0006)A/\u001f9fg&!!1\u000eB3\u0005)\u0019FO];diRK\b/\u001a\u000b\u0005\u0005s\u0011y\u0007C\u0004\u0003r!\u0001\rAa\u001d\u0002\u0011\r|GNT1nKN\u0004b!a-\u0003v\te\u0014\u0002\u0002B<\u0003k\u0013!\u0002\u0010:fa\u0016\fG/\u001a3?!\u0011\u0011YHa!\u000f\t\tu$q\u0010\t\u0005\u0003\u0007\f),\u0003\u0003\u0003\u0002\u0006U\u0016A\u0002)sK\u0012,g-\u0003\u0003\u0003\u0006\n\u001d%AB*ue&twM\u0003\u0003\u0003\u0002\u0006U\u0006f\u0001\u0005\u0003\fB!!Q\u0012BI\u001b\t\u0011yI\u0003\u0003\u0003 \u0005U\u0016\u0002\u0002BJ\u0005\u001f\u0013qA^1sCJ<7/\u0006\u0002\u0003b\u0005Y\u0001O]5oiN\u001b\u0007.Z7b)\t\u0011Y\n\u0005\u0003\u00024\nu\u0015\u0002\u0002BP\u0003k\u0013A!\u00168jiR!!1\u0014BR\u0011\u001d\u0011)k\u0003a\u0001\u0005O\u000bQ\u0001\\3wK2\u0004B!a-\u0003*&!!1VA[\u0005\rIe\u000e^\u0001\bKb\u0004H.Y5o)\u0011\u0011YJ!-\t\u000f\tMF\u00021\u0001\u0003z\u0005!Qn\u001c3f)\u0011\u0011YJa.\t\u000f\teV\u00021\u0001\u0003<\u0006AQ\r\u001f;f]\u0012,G\r\u0005\u0003\u00024\nu\u0016\u0002\u0002B`\u0003k\u0013qAQ8pY\u0016\fg.\u0001\u0004eif\u0004Xm]\u000b\u0003\u0005\u000b\u0004b!a-\u0003H\n-\u0017\u0002\u0002Be\u0003k\u0013Q!\u0011:sCf\u0004\u0002\"a-\u0003N\ne$\u0011P\u0005\u0005\u0005\u001f\f)L\u0001\u0004UkBdWMM\u0001\bG>dW/\u001c8t+\t\u0011)\u000e\u0005\u0004\u00024\n\u001d'\u0011P\u0001\bSNdunY1m+\t\u0011Y,A\u0004jg\u0016k\u0007\u000f^=\u0002\u0017%\u001c8\u000b\u001e:fC6LgnZ\u0001\u000bG\",7m\u001b9pS:$H\u0003BAm\u0005GDqA!:\u0016\u0001\u0004\u0011Y,A\u0003fC\u001e,'/A\bm_\u000e\fGn\u00115fG.\u0004x.\u001b8u)\u0011\tINa;\t\u000f\t\u0015x\u00031\u0001\u0003<R1\u0011\u0011\u001cBx\u0005cDqA!:\u0019\u0001\u0004\u0011Y\fC\u0004\u0003tb\u0001\rA!>\u0002\u0019M$xN]1hK2+g/\u001a7\u0011\t\t](Q`\u0007\u0003\u0005sTAAa?\u0002 \u000691\u000f^8sC\u001e,\u0017\u0002\u0002B\u0000\u0005s\u0014Ab\u0015;pe\u0006<W\rT3wK2$\u0002\"!7\u0004\u0004\r\u00151\u0011\u0002\u0005\b\u0005KL\u0002\u0019\u0001B^\u0011\u001d\u00199!\u0007a\u0001\u0005w\u000b!C]3mS\u0006\u0014G.Z\"iK\u000e\\\u0007o\\5oi\"9!1_\rA\u0002\r-\u0001CBAZ\u0007\u001b\u0011)0\u0003\u0003\u0004\u0010\u0005U&AB(qi&|g.A\u0007xSRDw+\u0019;fe6\f'o\u001b\u000b\u0007\u00033\u001c)b!\u0007\t\u000f\r]!\u00041\u0001\u0003z\u0005IQM^3oiRKW.\u001a\u0005\b\u00077Q\u0002\u0019\u0001B=\u00039!W\r\\1z)\"\u0014Xm\u001d5pY\u0012\fAa\u001d5poR!!1TB\u0011\u0011\u001d\u0019\u0019c\u0007a\u0001\u0005O\u000bqA\\;n%><8\u000f\u0006\u0003\u0003\u001c\u000e\u001d\u0002bBB\u0015;\u0001\u0007!1X\u0001\tiJ,hnY1uKR1!1TB\u0017\u0007_Aqaa\t\u001f\u0001\u0004\u00119\u000bC\u0004\u0004*y\u0001\rAa/\u0015\r\tm51GB\u001b\u0011\u001d\u0019\u0019c\ba\u0001\u0005OCqa!\u000b \u0001\u0004\u00119\u000b\u0006\u0005\u0003\u001c\u000ee21HB\u001f\u0011\u001d\u0019\u0019\u0003\ta\u0001\u0005OCqa!\u000b!\u0001\u0004\u00119\u000bC\u0004\u0004@\u0001\u0002\rAa/\u0002\u0011Y,'\u000f^5dC2\f!A\\1\u0016\u0005\r\u0015\u0003\u0003BAn\u0007\u000fJAa!\u0013\u0002\u001c\n!B)\u0019;b\rJ\fW.\u001a(b\rVt7\r^5p]N\fAa\u001d;biV\u00111q\n\t\u0005\u00037\u001c\t&\u0003\u0003\u0004T\u0005m%A\u0006#bi\u00064%/Y7f'R\fGOR;oGRLwN\\:\u0002\t)|\u0017N\u001c\u000b\u0005\u0005s\u0019I\u0006C\u0004\u0004\\\r\u0002\ra!\u0018\u0002\u000bILw\r\u001b;1\t\r}31\r\t\u0006\u00037\u00041\u0011\r\t\u0005\u0003?\u001c\u0019\u0007\u0002\u0007\u0004f\re\u0013\u0011!A\u0001\u0006\u0003\t)OA\u0002`IE\"bA!\u000f\u0004j\rU\u0004bBB.I\u0001\u000711\u000e\u0019\u0005\u0007[\u001a\t\bE\u0003\u0002\\\u0002\u0019y\u0007\u0005\u0003\u0002`\u000eED\u0001DB:\u0007S\n\t\u0011!A\u0003\u0002\u0005\u0015(aA0%e!91q\u000f\u0013A\u0002\te\u0014aC;tS:<7i\u001c7v[:$bA!\u000f\u0004|\r\u001d\u0005bBB.K\u0001\u00071Q\u0010\u0019\u0005\u0007\u007f\u001a\u0019\tE\u0003\u0002\\\u0002\u0019\t\t\u0005\u0003\u0002`\u000e\rE\u0001DBC\u0007w\n\t\u0011!A\u0003\u0002\u0005\u0015(aA0%g!91\u0011R\u0013A\u0002\tU\u0017\u0001D;tS:<7i\u001c7v[:\u001cHC\u0002B\u001d\u0007\u001b\u001bI\nC\u0004\u0004\\\u0019\u0002\raa$1\t\rE5Q\u0013\t\u0006\u00037\u000411\u0013\t\u0005\u0003?\u001c)\n\u0002\u0007\u0004\u0018\u000e5\u0015\u0011!A\u0001\u0006\u0003\t)OA\u0002`IQBqa!#'\u0001\u0004\u0019Y\n\u0005\u0004\u0002@\u000eu%\u0011P\u0005\u0005\u0007?\u000b\u0019NA\u0002TKF$\u0002B!\u000f\u0004$\u000e=6\u0011\u0017\u0005\b\u00077:\u0003\u0019ABSa\u0011\u00199ka+\u0011\u000b\u0005m\u0007a!+\u0011\t\u0005}71\u0016\u0003\r\u0007[\u001b\u0019+!A\u0001\u0002\u000b\u0005\u0011Q\u001d\u0002\u0004?\u0012*\u0004bBB<O\u0001\u0007!\u0011\u0010\u0005\b\u0007g;\u0003\u0019\u0001B=\u0003!Qw.\u001b8UsB,G\u0003\u0003B\u001d\u0007o\u001b\u0019m!2\t\u000f\rm\u0003\u00061\u0001\u0004:B\"11XB`!\u0015\tY\u000eAB_!\u0011\tyna0\u0005\u0019\r\u00057qWA\u0001\u0002\u0003\u0015\t!!:\u0003\u0007}#c\u0007C\u0004\u0004\n\"\u0002\rA!6\t\u000f\rM\u0006\u00061\u0001\u0003zQA!\u0011HBe\u0007+\u001c9\u000eC\u0004\u0004\\%\u0002\raa31\t\r57\u0011\u001b\t\u0006\u00037\u00041q\u001a\t\u0005\u0003?\u001c\t\u000e\u0002\u0007\u0004T\u000e%\u0017\u0011!A\u0001\u0006\u0003\t)OA\u0002`I]Bqa!#*\u0001\u0004\u0019Y\nC\u0004\u00044&\u0002\rA!\u001f\u0015\r\te21\\Bt\u0011\u001d\u0019YF\u000ba\u0001\u0007;\u0004Daa8\u0004dB)\u00111\u001c\u0001\u0004bB!\u0011q\\Br\t1\u0019)oa7\u0002\u0002\u0003\u0005)\u0011AAs\u0005\ryF\u0005\u000f\u0005\b\u0007ST\u0003\u0019ABv\u0003%Qw.\u001b8FqB\u00148\u000f\u0005\u0003\u0002\\\u000e5\u0018\u0002BBx\u00037\u0013aaQ8mk6tG\u0003\u0003B\u001d\u0007g\u001cy\u0010\"\u0001\t\u000f\rm3\u00061\u0001\u0004vB\"1q_B~!\u0015\tY\u000eAB}!\u0011\tyna?\u0005\u0019\ru81_A\u0001\u0002\u0003\u0015\t!!:\u0003\u0007}#\u0013\bC\u0004\u0004j.\u0002\raa;\t\u000f\rM6\u00061\u0001\u0003z\u0005I1M]8tg*{\u0017N\u001c\u000b\u0005\u0005s!9\u0001C\u0004\u0004\\1\u0002\r\u0001\"\u00031\t\u0011-Aq\u0002\t\u0006\u00037\u0004AQ\u0002\t\u0005\u0003?$y\u0001\u0002\u0007\u0005\u0012\u0011\u001d\u0011\u0011!A\u0001\u0006\u0003\t)O\u0001\u0003`IE\u0002\u0014\u0001\u00036pS:<\u0016\u000e\u001e5\u0016\t\u0011]Aq\u0004\u000b\t\t3!\t\u0003b\n\u0005,A)\u00111\u001c\u0001\u0005\u001cAA\u00111\u0017Bg\u0003;$i\u0002\u0005\u0003\u0002`\u0012}Aa\u0002B)[\t\u0007\u0011Q\u001d\u0005\b\tGi\u0003\u0019\u0001C\u0013\u0003\u0015yG\u000f[3s!\u0015\tY\u000e\u0001C\u000f\u0011\u001d!I#\fa\u0001\u0007W\f\u0011bY8oI&$\u0018n\u001c8\t\u000f\rMV\u00061\u0001\u0003zU!Aq\u0006C\u001c)\u0019!\t\u0004\"\u000f\u0005>A)\u00111\u001c\u0001\u00054AA\u00111\u0017Bg\u0003;$)\u0004\u0005\u0003\u0002`\u0012]Ba\u0002B)]\t\u0007\u0011Q\u001d\u0005\b\tGq\u0003\u0019\u0001C\u001e!\u0015\tY\u000e\u0001C\u001b\u0011\u001d!IC\fa\u0001\u0007W\f1\u0002\\1uKJ\fGNS8j]R!!\u0011\bC\"\u0011\u001d\u0019Yf\fa\u0001\t\u000b\u0002D\u0001b\u0012\u0005LA)\u00111\u001c\u0001\u0005JA!\u0011q\u001cC&\t1!i\u0005b\u0011\u0002\u0002\u0003\u0005)\u0011AAs\u0005\u0011yF%M\u0019\u0015\r\teB\u0011\u000bC/\u0011\u001d\u0019Y\u0006\ra\u0001\t'\u0002D\u0001\"\u0016\u0005ZA)\u00111\u001c\u0001\u0005XA!\u0011q\u001cC-\t1!Y\u0006\"\u0015\u0002\u0002\u0003\u0005)\u0011AAs\u0005\u0011yF%\r\u001a\t\u000f\r%\b\u00071\u0001\u0004lR1!\u0011\bC1\t[Bqaa\u00172\u0001\u0004!\u0019\u0007\r\u0003\u0005f\u0011%\u0004#BAn\u0001\u0011\u001d\u0004\u0003BAp\tS\"A\u0002b\u001b\u0005b\u0005\u0005\t\u0011!B\u0001\u0003K\u0014Aa\u0018\u00132g!911W\u0019A\u0002\teD\u0003\u0003B\u001d\tc\"i\bb \t\u000f\rm#\u00071\u0001\u0005tA\"AQ\u000fC=!\u0015\tY\u000e\u0001C<!\u0011\ty\u000e\"\u001f\u0005\u0019\u0011mD\u0011OA\u0001\u0002\u0003\u0015\t!!:\u0003\t}#\u0013\u0007\u000e\u0005\b\u0007S\u0014\u0004\u0019ABv\u0011\u001d\u0019\u0019L\ra\u0001\u0005s\nAb]8si&sG/\u001a:oC2$b!!7\u0005\u0006\u0012%\u0005b\u0002CDg\u0001\u0007!1X\u0001\u0007O2|'-\u00197\t\u000f\u0011-5\u00071\u0001\u0005\u000e\u0006I1o\u001c:u\u000bb\u0004(o\u001d\t\u0007\u0003\u007f\u001bija;\u0002)M|'\u000f^,ji\"Lg\u000eU1si&$\u0018n\u001c8t)\u0019\tI\u000eb%\u0005\u0018\"9AQ\u0013\u001bA\u0002\te\u0014aB:peR\u001cu\u000e\u001c\u0005\b\t3#\u0004\u0019\u0001B:\u0003!\u0019xN\u001d;D_2\u001c\bf\u0001\u001b\u0003\fR!\u0011\u0011\u001cCP\u0011\u001d!Y)\u000ea\u0001\tC\u0003b!a-\u0003v\r-\bfA\u001b\u0003\f\u0006!1o\u001c:u)\u0019\tI\u000e\"+\u0005,\"9AQ\u0013\u001cA\u0002\te\u0004b\u0002CMm\u0001\u0007!1\u000f\u0015\u0004m\t-E\u0003BAm\tcCq\u0001b#8\u0001\u0004!\t\u000bK\u00028\u0005\u0017\u000bqa\u001c:eKJ\u0014\u0015\u0010\u0006\u0004\u0002Z\u0012eF1\u0018\u0005\b\t+C\u0004\u0019\u0001B=\u0011\u001d!I\n\u000fa\u0001\u0005gB3\u0001\u000fBF)\u0011\tI\u000e\"1\t\u000f\u0011-\u0015\b1\u0001\u0005\"\"\u001a\u0011Ha#\u0002\t!Lg\u000e\u001e\u000b\u0007\u00033$I\r\"4\t\u000f\u0011-'\b1\u0001\u0003z\u0005!a.Y7f\u0011\u001d!yM\u000fa\u0001\t#\f!\u0002]1sC6,G/\u001a:t!\u0019\t\u0019L!\u001e\u0002n\"\u001a!Ha#\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\t\r-H\u0011\u001c\u0005\b\t7\\\u0004\u0019\u0001B=\u0003\u001d\u0019w\u000e\u001c(b[\u0016\f1aY8m)\u0011\u0019Y\u000f\"9\t\u000f\u0011mG\b1\u0001\u0003z\u0005qQ.\u001a;bI\u0006$\u0018mQ8mk6tG\u0003BBv\tODq\u0001b7>\u0001\u0004\u0011I(\u0001\u0005d_2\u0014VmZ3y)\u0011\u0019Y\u000f\"<\t\u000f\u0011mg\b1\u0001\u0003zQ!\u0011\u0011\u001cCy\u0011\u001d!\u0019p\u0010a\u0001\u0005s\nQ!\u00197jCN$B!!7\u0005x\"9A1\u001f!A\u0002\u0011e\b\u0003BAZ\twLA\u0001\"@\u00026\n11+_7c_2$B!!7\u0006\u0002!9A1_!A\u0002\teD\u0003BAm\u000b\u000bAq\u0001b=C\u0001\u0004!I0\u0001\u0004tK2,7\r\u001e\u000b\u0005\u0005s)Y\u0001C\u0004\u0006\u000e\r\u0003\r\u0001\")\u0002\t\r|Gn\u001d\u0015\u0004\u0007\n-EC\u0002B\u001d\u000b'))\u0002C\u0004\u0005^\u0012\u0003\rA!\u001f\t\u000f\u00155A\t1\u0001\u0003t!\u001aAIa#\u0002\u0015M,G.Z2u\u000bb\u0004(\u000f\u0006\u0003\u0003:\u0015u\u0001bBC\u0010\u000b\u0002\u0007!1O\u0001\u0006Kb\u0004(o\u001d\u0015\u0004\u000b\n-U\u0003BC\u0013\u000bW!B!b\n\u00060A)\u00111\u001c\u0001\u0006*A!\u0011q\\C\u0016\t\u001d)iC\u0012b\u0001\u0003K\u0014!!V\u0019\t\u000f\u0015Eb\t1\u0001\u00064\u0005\u00111-\r\t\t\u00037,)$!8\u0006*%!QqGAN\u0005-!\u0016\u0010]3e\u0007>dW/\u001c8\u0002\u001bM,G.Z2u+:$\u0018\u0010]3e)\u0011)i$b\u00121\t\u0015}R1\t\t\u0006\u00037\u0004Q\u0011\t\t\u0005\u0003?,\u0019\u0005B\u0006\u0006F\u001d\u000b\t\u0011!A\u0003\u0002\u0005\u0015(\u0001B0%c]BqA!5H\u0001\u0004)I\u0005\u0005\u0004\u00024\nUT1\n\u0019\u0007\u000b\u001b*\t&b\u0016\u0011\u0011\u0005mWQGC(\u000b+\u0002B!a8\u0006R\u0011aQ1KC$\u0003\u0003\u0005\tQ!\u0001\u0002f\n!q\fJ\u00196!\u0011\ty.b\u0016\u0005\u0019\u0015eSqIA\u0001\u0002\u0003\u0015\t!!:\u0003\t}#\u0013GN\u000b\u0007\u000b;*)'\"\u001b\u0015\r\u0015}SQNC9!\u0015\tY\u000eAC1!!\t\u0019L!4\u0006d\u0015\u001d\u0004\u0003BAp\u000bK\"q!\"\fI\u0005\u0004\t)\u000f\u0005\u0003\u0002`\u0016%DaBC6\u0011\n\u0007\u0011Q\u001d\u0002\u0003+JBq!\"\rI\u0001\u0004)y\u0007\u0005\u0005\u0002\\\u0016U\u0012Q\\C2\u0011\u001d)\u0019\b\u0013a\u0001\u000bk\n!a\u0019\u001a\u0011\u0011\u0005mWQGAo\u000bO*\u0002\"\"\u001f\u0006\u0006\u0016%UQ\u0012\u000b\t\u000bw*\t*\"&\u0006\u001aB)\u00111\u001c\u0001\u0006~AQ\u00111WC@\u000b\u0007+9)b#\n\t\u0015\u0005\u0015Q\u0017\u0002\u0007)V\u0004H.Z\u001a\u0011\t\u0005}WQ\u0011\u0003\b\u000b[I%\u0019AAs!\u0011\ty.\"#\u0005\u000f\u0015-\u0014J1\u0001\u0002fB!\u0011q\\CG\t\u001d)y)\u0013b\u0001\u0003K\u0014!!V\u001a\t\u000f\u0015E\u0012\n1\u0001\u0006\u0014BA\u00111\\C\u001b\u0003;,\u0019\tC\u0004\u0006t%\u0003\r!b&\u0011\u0011\u0005mWQGAo\u000b\u000fCq!b'J\u0001\u0004)i*\u0001\u0002dgAA\u00111\\C\u001b\u0003;,Y)\u0006\u0006\u0006\"\u00165V\u0011WC[\u000bs#\"\"b)\u0006>\u0016\u0005WQYCe!\u0015\tY\u000eACS!1\t\u0019,b*\u0006,\u0016=V1WC\\\u0013\u0011)I+!.\u0003\rQ+\b\u000f\\35!\u0011\ty.\",\u0005\u000f\u00155\"J1\u0001\u0002fB!\u0011q\\CY\t\u001d)YG\u0013b\u0001\u0003K\u0004B!a8\u00066\u00129Qq\u0012&C\u0002\u0005\u0015\b\u0003BAp\u000bs#q!b/K\u0005\u0004\t)O\u0001\u0002Vi!9Q\u0011\u0007&A\u0002\u0015}\u0006\u0003CAn\u000bk\ti.b+\t\u000f\u0015M$\n1\u0001\u0006DBA\u00111\\C\u001b\u0003;,y\u000bC\u0004\u0006\u001c*\u0003\r!b2\u0011\u0011\u0005mWQGAo\u000bgCq!b3K\u0001\u0004)i-\u0001\u0002diAA\u00111\\C\u001b\u0003;,9,\u0006\u0007\u0006R\u0016uW\u0011]Cs\u000bS,i\u000f\u0006\u0007\u0006T\u0016EXQ_C}\u000b{4\t\u0001E\u0003\u0002\\\u0002))\u000e\u0005\b\u00024\u0016]W1\\Cp\u000bG,9/b;\n\t\u0015e\u0017Q\u0017\u0002\u0007)V\u0004H.Z\u001b\u0011\t\u0005}WQ\u001c\u0003\b\u000b[Y%\u0019AAs!\u0011\ty.\"9\u0005\u000f\u0015-4J1\u0001\u0002fB!\u0011q\\Cs\t\u001d)yi\u0013b\u0001\u0003K\u0004B!a8\u0006j\u00129Q1X&C\u0002\u0005\u0015\b\u0003BAp\u000b[$q!b<L\u0005\u0004\t)O\u0001\u0002Vk!9Q\u0011G&A\u0002\u0015M\b\u0003CAn\u000bk\ti.b7\t\u000f\u0015M4\n1\u0001\u0006xBA\u00111\\C\u001b\u0003;,y\u000eC\u0004\u0006\u001c.\u0003\r!b?\u0011\u0011\u0005mWQGAo\u000bGDq!b3L\u0001\u0004)y\u0010\u0005\u0005\u0002\\\u0016U\u0012Q\\Ct\u0011\u001d1\u0019a\u0013a\u0001\r\u000b\t!aY\u001b\u0011\u0011\u0005mWQGAo\u000bW\faAZ5mi\u0016\u0014H\u0003BAm\r\u0017Aq\u0001\"\u000bM\u0001\u0004\u0019Y\u000f\u0006\u0003\u0002Z\u001a=\u0001b\u0002D\t\u001b\u0002\u0007!\u0011P\u0001\u000eG>tG-\u001b;j_:,\u0005\u0010\u001d:\u0015\t\u0005egQ\u0003\u0005\b\r/q\u0005\u0019\u0001D\r\u0003\u00111WO\\2\u0011\u0011\u0005Mf1DAo\u0005wKAA\"\b\u00026\nIa)\u001e8di&|g.\r\u000b\u0005\u000334\t\u0003C\u0004\u0007\u0018=\u0003\rAb\t\u0011\r\u0019\u0015b1GAo\u001b\t19C\u0003\u0003\u0007*\u0019-\u0012\u0001\u00034v]\u000e$\u0018n\u001c8\u000b\t\u00195bqF\u0001\u0005U\u00064\u0018M\u0003\u0003\u00072\u0005}\u0015aA1qS&!aQ\u0007D\u0014\u000591\u0015\u000e\u001c;fe\u001a+hn\u0019;j_:\fQa\u001e5fe\u0016$B!!7\u0007<!9A\u0011\u0006)A\u0002\r-H\u0003BAm\r\u007fAqA\"\u0005R\u0001\u0004\u0011I(A\u0004he>,\bOQ=\u0015\t\u0019\u0015c1\n\t\u0005\u0003749%\u0003\u0003\u0007J\u0005m%\u0001\u0007*fY\u0006$\u0018n\u001c8bY\u001e\u0013x.\u001e9fI\u0012\u000bG/Y:fi\"9QQ\u0002*A\u0002\u0011\u0005\u0006f\u0001*\u0003\fR1aQ\tD)\r+BqAb\u0015T\u0001\u0004\u0011I(\u0001\u0003d_2\f\u0004bBC\u0007'\u0002\u0007!1\u000f\u0015\u0004'\n-\u0015A\u0002:pY2,\b\u000f\u0006\u0003\u0007F\u0019u\u0003bBC\u0007)\u0002\u0007A\u0011\u0015\u0015\u0004)\n-EC\u0002D#\rG2)\u0007C\u0004\u0007TU\u0003\rA!\u001f\t\u000f\u00155Q\u000b1\u0001\u0003t!\u001aQKa#\u0002\t\r,(-\u001a\u000b\u0005\r\u000b2i\u0007C\u0004\u0006\u000eY\u0003\r\u0001\"))\u0007Y\u0013Y\t\u0006\u0004\u0007F\u0019MdQ\u000f\u0005\b\r':\u0006\u0019\u0001B=\u0011\u001d)ia\u0016a\u0001\u0005gB3a\u0016BF\u000319'o\\;qS:<7+\u001a;t)\u00191)E\" \u0007\u0002\"9a\u0011\u0010-A\u0002\u0019}\u0004CBA`\u0007;#i\tC\u0004\u0006\u000ea\u0003\r\u0001\"))\u0007a\u0013Y)A\u0002bO\u001e$bA!\u000f\u0007\n\u001a5\u0005b\u0002DF3\u0002\u0007!1Z\u0001\bC\u001e<W\t\u001f9s\u0011\u001d1y)\u0017a\u0001\r#\u000b\u0001\"Y4h\u000bb\u0004(o\u001d\t\u0007\u0003g\u0013)Ha3\u0015\t\tebQ\u0013\u0005\b\u000b?Q\u0006\u0019\u0001DL!!\u0011YH\"'\u0003z\te\u0014\u0002\u0002DN\u0005\u000f\u00131!T1q)\u0011\u0011IDb(\t\u000f\u0015}1\f1\u0001\u0007\"BAa1\u0015DV\u0005s\u0012I(\u0004\u0002\u0007&*!aq\u0015DU\u0003\u0011)H/\u001b7\u000b\u0005\u00195\u0012\u0002\u0002DN\rK#bA!\u000f\u00070\u001aM\u0006b\u0002DY9\u0002\u000711^\u0001\u0005Kb\u0004(\u000fC\u0004\u0006 q\u0003\r\u0001\"))\u0007q\u0013Y)\u0001\u0004sK\u0012,8-\u001a\u000b\u0005\u0003;4Y\fC\u0004\u0007\u0018u\u0003\rA\"0\u0011\u0015\u0005MfqXAo\u0003;\fi.\u0003\u0003\u0007B\u0006U&!\u0003$v]\u000e$\u0018n\u001c83)\u0011\tiN\"2\t\u000f\u0019]a\f1\u0001\u0007HB1aQ\u0005De\u0003;LAAb3\u0007(\tq!+\u001a3vG\u00164UO\\2uS>t\u0017AC4s_V\u0004()_&fsV!a\u0011\u001bDo)\u00111\u0019Nb:\u0015\t\u0019Ug\u0011\u001d\t\t\u0003749Nb7\u0002^&!a\u0011\\AN\u0005YYU-\u001f,bYV,wI]8va\u0016$G)\u0019;bg\u0016$\b\u0003BAp\r;$qAb8`\u0005\u0004\t)OA\u0001L\u0011%1\u0019oXA\u0001\u0002\b1)/\u0001\u0006fm&$WM\\2fII\u0002b!a7\u0003\u0004\u0019m\u0007b\u0002D\f?\u0002\u0007a\u0011\u001e\t\t\u0003g3Y\"!8\u0007\\V!aQ\u001eDz)\u00191yO\">\u0007~BA\u00111\u001cDl\rc\fi\u000e\u0005\u0003\u0002`\u001aMHa\u0002DpA\n\u0007\u0011Q\u001d\u0005\b\r/\u0001\u0007\u0019\u0001D|!!1)C\"?\u0002^\u001aE\u0018\u0002\u0002D~\rO\u00111\"T1q\rVt7\r^5p]\"9\u0011Q 1A\u0002\u0019}\bCBAn\u0005\u00071\t0A\u0004v]BLgo\u001c;\u0015\u0015\terQAD\u0006\u000f\u001f9\u0019\u0002C\u0004\b\b\u0005\u0004\ra\"\u0003\u0002\u0007%$7\u000f\u0005\u0004\u00024\n\u001d71\u001e\u0005\b\u000f\u001b\t\u0007\u0019AD\u0005\u0003\u00191\u0018\r\\;fg\"9q\u0011C1A\u0002\te\u0014A\u0005<be&\f'\r\\3D_2,XN\u001c(b[\u0016Dqa\"\u0006b\u0001\u0004\u0011I(A\bwC2,XmQ8mk6tg*Y7f)!\u0011Id\"\u0007\b\u001c\u001du\u0001bBD\u0004E\u0002\u0007q\u0011\u0002\u0005\b\u000f#\u0011\u0007\u0019\u0001B=\u0011\u001d9)B\u0019a\u0001\u0005s\nA!\\3miRQ!\u0011HD\u0012\u000fK99c\"\u000b\t\u000f\u001d\u001d1\r1\u0001\b\n!9qQB2A\u0002\u001d%\u0001bBD\tG\u0002\u0007!\u0011\u0010\u0005\b\u000f+\u0019\u0007\u0019\u0001B=)!\u0011Id\"\f\b0\u001dE\u0002bBD\u0004I\u0002\u0007q\u0011\u0002\u0005\b\u000f#!\u0007\u0019\u0001B=\u0011\u001d9)\u0002\u001aa\u0001\u0005s\n\u0011\u0002\u001e:b]N\u0004xn]3\u0015\t\terq\u0007\u0005\b\u000fs)\u0007\u0019ABv\u0003-Ig\u000eZ3y\u0007>dW/\u001c8\u0002\rM\u001c\u0017\r\\1s)\t\u0019Y/\u0001\u0004fq&\u001cHo]\u0001\b_\n\u001cXM\u001d<f)!\tIn\"\u0012\bH\u001d%\u0003b\u0002CfS\u0002\u0007!\u0011\u0010\u0005\b\rcK\u0007\u0019ABv\u0011\u001d)y\"\u001ba\u0001\tCC3!\u001bBF)!\tInb\u0014\bZ\u001dm\u0003bBD)U\u0002\u0007q1K\u0001\f_\n\u001cXM\u001d<bi&|g\u000e\u0005\u0003\u0002\\\u001eU\u0013\u0002BD,\u00037\u00131b\u00142tKJ4\u0018\r^5p]\"9a\u0011\u00176A\u0002\r-\bbBC\u0010U\u0002\u0007A\u0011\u0015\u0015\u0004U\n-\u0015!\u00027j[&$H\u0003BAm\u000fGBqa\"\u001al\u0001\u0004\u00119+A\u0001o\u0003\u0019ygMZ:fiR!\u0011\u0011\\D6\u0011\u001d9)\u0007\u001ca\u0001\u0005O\u000bQ!\u001e8j_:$B!!7\br!9A1E7A\u0002\u0005e\u0017\u0001C;oS>t\u0017\t\u001c7\u0015\t\u0005ewq\u000f\u0005\b\tGq\u0007\u0019AAm\u0003-)h.[8o\u0005ft\u0015-\\3\u0015\t\u0005ewQ\u0010\u0005\b\tGy\u0007\u0019AAm)\u0019\tIn\"!\b\u0004\"9A1\u00059A\u0002\u0005e\u0007bBDCa\u0002\u0007!1X\u0001\u0014C2dwn^'jgNLgnZ\"pYVlgn]\u0001\nS:$XM]:fGR$B!!7\b\f\"9A1E9A\u0002\u0005e\u0017\u0001D5oi\u0016\u00148/Z2u\u00032dG\u0003BAm\u000f#Cq\u0001b\ts\u0001\u0004\tI.\u0001\u0004fq\u000e,\u0007\u000f\u001e\u000b\u0005\u00033<9\nC\u0004\u0005$M\u0004\r!!7\u0002\u0013\u0015D8-\u001a9u\u00032dG\u0003BAm\u000f;Cq\u0001b\tu\u0001\u0004\tI.\u0001\u0004tC6\u0004H.\u001a\u000b\u0007\u00033<\u0019k\",\t\u000f\u001d\u0015V\u000f1\u0001\b(\u0006AaM]1di&|g\u000e\u0005\u0003\u00024\u001e%\u0016\u0002BDV\u0003k\u0013a\u0001R8vE2,\u0007bBDXk\u0002\u0007q\u0011W\u0001\u0005g\u0016,G\r\u0005\u0003\u00024\u001eM\u0016\u0002BD[\u0003k\u0013A\u0001T8oOR!\u0011\u0011\\D]\u0011\u001d9)K\u001ea\u0001\u000fO#\u0002\"!7\b>\u001e\u0005w1\u0019\u0005\b\u000f\u007f;\b\u0019\u0001B^\u0003=9\u0018\u000e\u001e5SKBd\u0017mY3nK:$\bbBDSo\u0002\u0007qq\u0015\u0005\b\u000f_;\b\u0019ADY)\u0019\tInb2\bJ\"9qq\u0018=A\u0002\tm\u0006bBDSq\u0002\u0007qqU\u0001\fe\u0006tGm\\7Ta2LG\u000f\u0006\u0004\bP\u001eEwq\u001b\t\u0007\u0003g\u00139-!7\t\u000f\u001dM\u0017\u00101\u0001\bV\u00069q/Z5hQR\u001c\bCBAZ\u0005\u000f<9\u000bC\u0004\b0f\u0004\ra\"-\u0002#I\fg\u000eZ8n'Bd\u0017\u000e^!t\u0019&\u001cH\u000f\u0006\u0004\b^\u001e\rxQ\u001d\t\u0007\rG;y.!7\n\t\u001d\u0005hQ\u0015\u0002\u0005\u0019&\u001cH\u000fC\u0004\bTj\u0004\ra\"6\t\u000f\u001d=&\u00101\u0001\b2R!qqZDu\u0011\u001d9\u0019n\u001fa\u0001\u000f+\fq!\u001a=qY>$W-\u0006\u0003\bp\"\rB\u0003BDy\u0011\u0003\"Bab=\t0Q!!\u0011HD{\u0011%99\u0010`A\u0001\u0002\b9I0\u0001\u0006fm&$WM\\2fIM\u0002bab?\t\u0018!\u0005b\u0002BD\u007f\u0011#qAab@\t\u000e9!\u0001\u0012\u0001E\u0004\u001d\u0011\t\t\rc\u0001\n\t!\u0015\u0011QW\u0001\be\u00164G.Z2u\u0013\u0011AI\u0001c\u0003\u0002\u000fI,h\u000e^5nK*!\u0001RAA[\u0013\u0011\ti\rc\u0004\u000b\t!%\u00012B\u0005\u0005\u0011'A)\"\u0001\u0005v]&4XM]:f\u0015\u0011\ti\rc\u0004\n\t!e\u00012\u0004\u0002\b)f\u0004X\rV1h\u0013\u0011Ai\u0002c\b\u0003\u0011QK\b/\u001a+bONTAA\"\r\t\fA!\u0011q\u001cE\u0012\t\u001dA)\u0003 b\u0001\u0011O\u0011\u0011!Q\t\u0005\u0003ODI\u0003\u0005\u0003\u00024\"-\u0012\u0002\u0002E\u0017\u0003k\u0013q\u0001\u0015:pIV\u001cG\u000fC\u0004\t2q\u0004\r\u0001c\r\u0002\u0003\u0019\u0004\u0002\"a-\u0007\u001c!U\u00022\b\t\u0005\u00037D9$\u0003\u0003\t:\u0005m%a\u0001*poB1\u0011q\u0018E\u001f\u0011CIA\u0001c\u0010\u0002T\na\u0011\n^3sC\ndWm\u00148dK\"9\u00012\t?A\u0002\u0011\u0005\u0016!B5oaV$\bf\u0003?\tH!5\u0003r\nE*\u0011+\u0002B!a-\tJ%!\u00012JA[\u0005)!W\r\u001d:fG\u0006$X\rZ\u0001\b[\u0016\u001c8/Y4fC\tA\t&\u0001\u001evg\u0016\u0004c\r\\1u\u001b\u0006\u0004\b&\u000b\u0011pe\u0002\u001aX\r\\3di\"J\u0003e^5uQ\u00022WO\\2uS>t7OL3ya2|G-\u001a\u0015*A%t7\u000f^3bI\u0006)1/\u001b8dK\u0006\u0012\u0001rK\u0001\u0006e9\u0002d\u0006M\u000b\u0007\u00117B\u0019\b#\u001b\u0015\r!u\u0003r\u000fE>)\u0011Ay\u0006#\u001c\u0015\t\te\u0002\u0012\r\u0005\n\u0011Gj\u0018\u0011!a\u0002\u0011K\n!\"\u001a<jI\u0016t7-\u001a\u00135!\u00199Y\u0010c\u0006\thA!\u0011q\u001cE5\t\u001dAY' b\u0001\u0003K\u0014\u0011A\u0011\u0005\b\u0011ci\b\u0019\u0001E8!!\t\u0019Lb\u0007\tr!U\u0004\u0003BAp\u0011g\"q\u0001#\n~\u0005\u0004\t)\u000f\u0005\u0004\u0002@\"u\u0002r\r\u0005\b\u0011sj\b\u0019\u0001B=\u0003-Ig\u000e];u\u0007>dW/\u001c8\t\u000f!uT\u00101\u0001\u0003z\u0005aq.\u001e;qkR\u001cu\u000e\\;n]\"ZQ\u0010c\u0012\tN!=\u00032\u000bE+\u0003)9\u0018\u000e\u001e5D_2,XN\u001c\u000b\u0007\u0005sA)\tc\"\t\u000f\u0011mg\u00101\u0001\u0003z!9AQ\u001c@A\u0002\r-\u0018aC<ji\"\u001cu\u000e\\;n]N$BA!\u000f\t\u000e\"9\u0001rR@A\u0002!E\u0015aB2pYNl\u0015\r\u001d\t\t\u0005w2IJ!\u001f\u0004lR!!\u0011\bEK\u0011!Ay)!\u0001A\u0002!]\u0005\u0003\u0003DR\rW\u0013Iha;\u0015\r\te\u00022\u0014EO\u0011!\u0011\t(a\u0001A\u0002\rm\u0005\u0002CC\u0007\u0003\u0007\u0001\r\u0001\"$\u0015\u0011\te\u0002\u0012\u0015ER\u0011KC\u0001B!\u001d\u0002\u0006\u0001\u000711\u0014\u0005\t\u000b\u001b\t)\u00011\u0001\u0005\u000e\"A\u0001rUA\u0003\u0001\u0004AI+\u0001\u0005nKR\fG-\u0019;b!\u0019\tyl!(\t,B!!1\rEW\u0013\u0011AyK!\u001a\u0003\u00115+G/\u00193bi\u0006$\u0002B!\u000f\t4\"U\u0006r\u0017\u0005\t\t7\f9\u00011\u0001\u0003z!AAQ\\A\u0004\u0001\u0004\u0019Y\u000f\u0003\u0005\t(\u0006\u001d\u0001\u0019\u0001EV\u0003E9\u0018\u000e\u001e5D_2,XN\u001c*f]\u0006lW\r\u001a\u000b\u0007\u0005sAi\f#1\t\u0011!}\u0016\u0011\u0002a\u0001\u0005s\nA\"\u001a=jgRLgn\u001a(b[\u0016D\u0001\u0002c1\u0002\n\u0001\u0007!\u0011P\u0001\b]\u0016<h*Y7f\u0003I9\u0018\u000e\u001e5D_2,XN\\:SK:\fW.\u001a3\u0015\t\te\u0002\u0012\u001a\u0005\t\u0011\u001f\u000bY\u00011\u0001\u0007\u0018\"2\u00111\u0002Eg\u00113\u0004b!a-\tP\"M\u0017\u0002\u0002Ei\u0003k\u0013a\u0001\u001e5s_^\u001c\b\u0003BAn\u0011+LA\u0001c6\u0002\u001c\n\t\u0012I\\1msNL7/\u0012=dKB$\u0018n\u001c82\u000fy\u0011I\bc7\t\u0000FJ1\u0005#8\td\"U\bR]\u000b\u0005\u0011?D\t/\u0006\u0002\u0003z\u0011A\u00111]AV\u0005\u0004AY/\u0003\u0003\tf\"\u001d\u0018a\u0007\u0013mKN\u001c\u0018N\\5uI\u001d\u0014X-\u0019;fe\u0012\"WMZ1vYR$\u0013G\u0003\u0003\tj\u0006U\u0016A\u0002;ie><8/\u0005\u0003\u0002h\"5\b\u0003\u0002Ex\u0011ctA!a-\u0002L&!\u00012_Aj\u0005%!\u0006N]8xC\ndW-M\u0005$\u0011oDI\u0010c?\tj:!\u00111\u0017E}\u0013\u0011AI/!.2\u000f\t\n\u0019,!.\t~\n)1oY1mCF\u001aa\u0005c5\u0015\t\te\u00122\u0001\u0005\t\u0011\u001f\u000bi\u00011\u0001\u0007\"R1!\u0011HE\u0004\u0013\u0013A\u0001B!\u001d\u0002\u0010\u0001\u000711\u0014\u0005\t\u0013\u0017\ty\u00011\u0001\u0004\u001c\u0006Ya.Z<D_2t\u0015-\\3t\u000319\u0018\u000e\u001e5NKR\fG-\u0019;b)\u0019\u0011I$#\u0005\n\u0016!A\u00112CA\t\u0001\u0004\u0011I(\u0001\u0006d_2,XN\u001c(b[\u0016D\u0001\u0002c*\u0002\u0012\u0001\u0007\u00012V\u0001\u0005IJ|\u0007\u000f\u0006\u0003\u0003:%m\u0001\u0002\u0003Cn\u0003'\u0001\rA!\u001f\u0015\t\te\u0012r\u0004\u0005\t\u0005c\n)\u00021\u0001\u0003t!\"\u0011Q\u0003BF)\u0011\u0011I$#\n\t\u0011\u0011u\u0017q\u0003a\u0001\u0007W$bA!\u000f\n*%-\u0002\u0002\u0003Co\u00033\u0001\raa;\t\u0011\u00155\u0011\u0011\u0004a\u0001\tCCC!!\u0007\u0003\f\u0006qAM]8q\tV\u0004H.[2bi\u0016\u001cH\u0003BAm\u0013gA\u0001B!\u001d\u0002\u001e\u0001\u000711\u0014\u000b\u0005\u00033L9\u0004\u0003\u0005\u0003r\u0005}\u0001\u0019\u0001Bk)\u0019\tI.c\u000f\n>!Aa1KA\u0011\u0001\u0004\u0011I\b\u0003\u0005\u0006\u000e\u0005\u0005\u0002\u0019\u0001B:Q\u0011\t\tCa#\u0002;\u0011\u0014x\u000e\u001d#va2L7-\u0019;fg^KG\u000f[5o/\u0006$XM]7be.$B!!7\nF!A!\u0011OA\u0013\u0001\u0004\u0019Y\n\u0006\u0003\u0002Z&%\u0003\u0002\u0003B9\u0003O\u0001\rA!6\u0015\r\u0005e\u0017RJE(\u0011!1\u0019&!\u000bA\u0002\te\u0004\u0002CC\u0007\u0003S\u0001\rAa\u001d)\t\u0005%\"1R\u0001\tI\u0016\u001c8M]5cKR!!\u0011HE,\u0011!)i!a\u000bA\u0002\tM\u0004\u0006BA\u0016\u0005\u0017\u000bqa];n[\u0006\u0014\u0018\u0010\u0006\u0003\u0003:%}\u0003\u0002CE1\u0003[\u0001\rAa\u001d\u0002\u0015M$\u0018\r^5ti&\u001c7\u000f\u000b\u0003\u0002.\t-\u0015\u0001\u00025fC\u0012$B!#\u001b\nlA1\u00111\u0017Bd\u0003;D\u0001b\"\u001a\u00020\u0001\u0007!q\u0015\u000b\u0003\u0003;\fQAZ5sgR\f\u0011\u0002\u001e:b]N4wN]7\u0016\r%U\u0014\u0012SE=)\u0011I9(c%\u0011\r\u0005}\u0017\u0012PEH\t!IY(!\u000eC\u0002%u$a\u0001#T\u001fV!\u0011rPEF#\u0011\t9/#!1\t%\r\u0015r\u0011\t\u0006\u00037\u0004\u0011R\u0011\t\u0005\u0003?L9\t\u0002\u0007\n\n&e\u0014\u0011!A\u0001\u0006\u0003\t)O\u0001\u0003`IEBD\u0001CEG\u0013s\u0012\r!!:\u0003\t}#C%\r\t\u0005\u0003?L\t\n\u0002\u0005\u0003R\u0005U\"\u0019AAs\u0011!I)*!\u000eA\u0002%]\u0015!\u0001;\u0011\u0011\u0005Mf1DEM\u0013oj\u0011\u0001A\u0001\u0004[\u0006\u0004X\u0003BEP\u0013O#B!#)\n0R!\u00112UEU!\u0015\tY\u000eAES!\u0011\ty.c*\u0005\u0011\tE\u0013q\u0007b\u0001\u0003KD!\"c+\u00028\u0005\u0005\t9AEW\u0003))g/\u001b3f]\u000e,G%\u000e\t\u0007\u00037\u0014\u0019!#*\t\u0011\u0019]\u0011q\u0007a\u0001\u0013c\u0003\u0002\"a-\u0007\u001c\u0005u\u0017RU\u000b\u0005\u0013kKY\f\u0006\u0004\n8&u\u0016\u0012\u0019\t\u0006\u00037\u0004\u0011\u0012\u0018\t\u0005\u0003?LY\f\u0002\u0005\u0003R\u0005e\"\u0019AAs\u0011!19\"!\u000fA\u0002%}\u0006\u0003\u0003D\u0013\rs\fi.#/\t\u0011\u0005u\u0018\u0011\ba\u0001\u0013\u0007\u0004b!a7\u0003\u0004%e\u0016!D7baB\u000b'\u000f^5uS>t7/\u0006\u0003\nJ&EG\u0003BEf\u00133$B!#4\nTB)\u00111\u001c\u0001\nPB!\u0011q\\Ei\t!\u0011\t&a\u000fC\u0002\u0005\u0015\bBCEk\u0003w\t\t\u0011q\u0001\nX\u0006QQM^5eK:\u001cW\r\n\u001c\u0011\r\u0005m'1AEh\u0011!19\"a\u000fA\u0002%m\u0007\u0003CAZ\r7Ii.c9\u0011\r\u0005}\u0016r\\Ao\u0013\u0011I\t/a5\u0003\u0011%#XM]1u_J\u0004b!a0\n`&=W\u0003BEt\u0013[$b!#;\np&]\b#BAn\u0001%-\b\u0003BAp\u0013[$\u0001B!\u0015\u0002>\t\u0007\u0011Q\u001d\u0005\t\u0011c\ti\u00041\u0001\nrBAaQEEz\u0003;LY/\u0003\u0003\nv\u001a\u001d\"!F'baB\u000b'\u000f^5uS>t7OR;oGRLwN\u001c\u0005\t\u0003{\fi\u00041\u0001\nzB1\u00111\u001cB\u0002\u0013W\fqA\u001a7bi6\u000b\u0007/\u0006\u0003\n\u0000*\u001dA\u0003\u0002F\u0001\u0015\u001f!BAc\u0001\u000b\nA)\u00111\u001c\u0001\u000b\u0006A!\u0011q\u001cF\u0004\t!\u0011\t&a\u0010C\u0002\u0005\u0015\bB\u0003F\u0006\u0003\u007f\t\t\u0011q\u0001\u000b\u000e\u0005QQM^5eK:\u001cW\rJ\u001c\u0011\r\u0005m'1\u0001F\u0003\u0011!19\"a\u0010A\u0002)E\u0001\u0003CAZ\r7\tiNc\u0005\u0011\r\u0005}\u0006R\bF\u0003+\u0011Q9B#\b\u0015\r)e!r\u0004F\u0014!\u0015\tY\u000e\u0001F\u000e!\u0011\tyN#\b\u0005\u0011\tE\u0013\u0011\tb\u0001\u0003KD\u0001\u0002#\r\u0002B\u0001\u0007!\u0012\u0005\t\t\rKQ\u0019#!8\u000b\u001c%!!R\u0005D\u0014\u0005=1E.\u0019;NCB4UO\\2uS>t\u0007\u0002CA\u007f\u0003\u0003\u0002\rA#\u000b\u0011\r\u0005m'1\u0001F\u000e\u0003\u001d1wN]3bG\"$BAa'\u000b0!A\u0001\u0012GA\"\u0001\u0004Q\t\u0004\u0005\u0005\u00024\u001am\u0011Q\u001cBN)\u0011\u0011YJ#\u000e\t\u0011\u0019]\u0011Q\ta\u0001\u0015o\u0001bA\"\n\u000b:\u0005u\u0017\u0002\u0002F\u001e\rO\u0011qBR8sK\u0006\u001c\u0007NR;oGRLwN\\\u0001\u0011M>\u0014X-Y2i!\u0006\u0014H/\u001b;j_:$BAa'\u000bB!A\u0001\u0012GA$\u0001\u0004Q\u0019\u0005\u0005\u0005\u00024\u001am\u0011R\u001cBN)\u0011\u0011YJc\u0012\t\u0011\u0019]\u0011\u0011\na\u0001\u0015\u0013\u0002bA\"\n\u000bL\u0005u\u0017\u0002\u0002F'\rO\u0011\u0001DR8sK\u0006\u001c\u0007\u000eU1si&$\u0018n\u001c8Gk:\u001cG/[8o\u0003\u0011!\u0018m[3\u0015\t%%$2\u000b\u0005\t\u000fK\nY\u00051\u0001\u0003(\u0006!A/Y5m)\u0011IIG#\u0017\t\u0011\u001d\u0015\u0014Q\na\u0001\u0005O\u000b!\u0002^1lK\u0006\u001bH*[:u)\u0011QyF#\u0019\u0011\r\u0019\rvq\\Ao\u0011!9)'a\u0014A\u0002\t\u001d\u0016aB2pY2,7\r\u001e\u000b\u0003\u0013S\nQbY8mY\u0016\u001cG/Q:MSN$HC\u0001F0\u0003=!x\u000eT8dC2LE/\u001a:bi>\u0014HC\u0001F8!\u00191\u0019K#\u001d\u0002^&!\u0011\u0012\u001dDS\u0003\u0015\u0019w.\u001e8u)\t9\t,A\u0006sKB\f'\u000f^5uS>tG\u0003BAm\u0015wB\u0001B# \u0002Z\u0001\u0007!qU\u0001\u000e]Vl\u0007+\u0019:uSRLwN\\:\u0002/I,\u0007/\u0019:uSRLwN\u001c\"z\u000bb\u0004(/Z:tS>tGCBAm\u0015\u0007S9\t\u0003\u0005\u000b~\u0005m\u0003\u0019\u0001FC!\u0019\t\u0019l!\u0004\u0003(\"A!\u0012RA.\u0001\u0004!i)\u0001\bqCJ$\u0018\u000e^5p]\u0016C\bO]:\u0015\r\u0005e'R\u0012FH\u0011!Qi(!\u0018A\u0002\t\u001d\u0006\u0002\u0003FE\u0003;\u0002\r\u0001\"))\t\u0005u#1\u0012\u000b\u0005\u00033T)\n\u0003\u0005\u000b\n\u0006}\u0003\u0019\u0001CQQ\u0011\tyFa#\u0002%I,\u0007/\u0019:uSRLwN\u001c\"z%\u0006tw-\u001a\u000b\u0007\u00033TiJc(\t\u0011)u\u0014\u0011\ra\u0001\u0015\u000bC\u0001B##\u0002b\u0001\u0007AQ\u0012\u000b\u0007\u00033T\u0019K#*\t\u0011)u\u00141\ra\u0001\u0005OC\u0001B##\u0002d\u0001\u0007A\u0011\u0015\u0015\u0005\u0003G\u0012Y\t\u0006\u0003\u0002Z*-\u0006\u0002\u0003FE\u0003K\u0002\r\u0001\"))\t\u0005\u0015$1R\u0001\tG>\fG.Z:dKR!\u0011\u0011\u001cFZ\u0011!Qi(a\u001aA\u0002\t\u001d\u0016\u0001\u00033jgRLgn\u0019;\u0002\u000fA,'o]5ti\u0006)1-Y2iKR!\u0011\u0011\u001cF_\u0011!Qy,a\u001cA\u0002\tU\u0018\u0001\u00038fo2+g/\u001a7\u0016\u0005\tU\u0018!C;oa\u0016\u00148/[:u)\u0011\tINc2\t\u0011)%\u00171\u000fa\u0001\u0005w\u000b\u0001B\u00197pG.LgnZ\u0001\u0012e\u0016<\u0017n\u001d;feR+W\u000e\u001d+bE2,G\u0003\u0002BN\u0015\u001fD\u0001B#5\u0002x\u0001\u0007!\u0011P\u0001\ni\u0006\u0014G.\u001a(b[\u0016DC\"a\u001e\tH!5#R\u001bE*\u0011+\n#Ac6\u0002]U\u001bX\rI2sK\u0006$Xm\u0014:SKBd\u0017mY3UK6\u0004h+[3xQYLWm\u001e(b[\u0016L\u0003%\u001b8ti\u0016\fGML\u0001\u000fGJ,\u0017\r^3UK6\u0004h+[3x)\u0011\u0011YJ#8\t\u0011)}\u0017\u0011\u0010a\u0001\u0005s\n\u0001B^5fo:\u000bW.\u001a\u0015\u0007\u0003sBiMc92\u000fy\u0011IH#:\u000blFJ1\u0005#8\td*\u001d\bR]\u0019\nG!]\b\u0012 Fu\u0011S\ftAIAZ\u0003kCi0M\u0002'\u0011'\fqc\u0019:fCR,wJ\u001d*fa2\f7-\u001a+f[B4\u0016.Z<\u0015\t\tm%\u0012\u001f\u0005\t\u0015?\fY\b1\u0001\u0003z\u0005!2M]3bi\u0016<En\u001c2bYR+W\u000e\u001d,jK^$BAa'\u000bx\"A!r\\A?\u0001\u0004\u0011I\b\u000b\u0004\u0002~!5'2`\u0019\b=\te$R`F\u0002c%\u0019\u0003R\u001cEr\u0015\u007fD)/M\u0005$\u0011oDIp#\u0001\tjF:!%a-\u00026\"u\u0018g\u0001\u0014\tT\u0006i2M]3bi\u0016|%OU3qY\u0006\u001cWm\u00127pE\u0006dG+Z7q-&,w\u000f\u0006\u0003\u0003\u001c.%\u0001\u0002\u0003Fp\u0003\u007f\u0002\rA!\u001f\u0015\u0011\tm5RBF\b\u0017'A\u0001Bc8\u0002\u0002\u0002\u0007!\u0011\u0010\u0005\t\u0017#\t\t\t1\u0001\u0003<\u00069!/\u001a9mC\u000e,\u0007\u0002\u0003CD\u0003\u0003\u0003\rAa/\u0002\u00135,'oZ3J]R|GCBF\r\u0017?Y\u0019\u0003\u0005\u0004\u0002\\.m\u0011Q\\\u0005\u0005\u0017;\tYJA\bNKJ<W-\u00138u_^\u0013\u0018\u000e^3s\u0011!Y\t#a!A\u0002\te\u0014!\u0002;bE2,\u0007\u0002\u0003C\u0015\u0003\u0007\u0003\raa;\u0002\u0017]\u0014\u0018\u000e^3TiJ,\u0017-\\\u000b\u0003\u0017S\u0001bac\u000b\f2\u0005uWBAF\u0017\u0015\u0011Yy#a'\u0002\u0013M$(/Z1nS:<\u0017\u0002BF\u001a\u0017[\u0011\u0001\u0003R1uCN#(/Z1n/JLG/\u001a:\u0002\u000f]\u0014\u0018\u000e^3U_R!1\u0012HF !\u0019\tYnc\u000f\u0002^&!1RHAN\u0005E!\u0015\r^1Ge\u0006lWm\u0016:ji\u0016\u0014hK\r\u0005\t\u0017C\t9\t1\u0001\u0003z\u00051Ao\u001c&T\u001f:+\"a#\u0012\u0011\u000b\u0005m\u0007A!\u001f\u0002\u0015%t\u0007/\u001e;GS2,7/A\u0007tC6,7+Z7b]RL7m\u001d\u000b\u0005\u0005w[i\u0005\u0003\u0005\u0005$\u00055\u0005\u0019AAmQ\u0011\tiIa\n\u0002\u0019M,W.\u00198uS\u000eD\u0015m\u001d5\u0015\u0005\t\u001d\u0006\u0006BAH\u0005O\tQa\u001e:ji\u0016,\"ac\u0017\u0011\r\u0005m7RLAo\u0013\u0011Yy&a'\u0003\u001f\u0011\u000bG/\u0019$sC6,wK]5uKJ\f1A\u001d3e+\tY)\u0007\u0005\u0004\fh--\u0014Q\\\u0007\u0003\u0017SRAa#\u0019\u0002 &!1RNF5\u0005\r\u0011F\t\u0012\u0015\u0005\u0003'\u0013I\"A\u0005u_*\u000bg/\u0019*E\tV\u00111R\u000f\t\u0007\u0017oZI(!8\u000e\u0005\u0019-\u0012\u0002BF>\rW\u0011qAS1wCJ#E\t\u000b\u0003\u0002\u0016\ne\u0011a\u00026bm\u0006\u0014F\t\u0012\u0015\u0005\u0003/\u0013I\u0002K\u0002\u0001\u0017\u000b\u0003BAa\u0007\f\b&!1\u0012\u0012B\u000f\u0005\u0019\u0019F/\u00192mK\u0002"
)
public abstract class Dataset implements Serializable {
   public Dataset toDF(final String... colNames) {
      return this.toDF((Seq).MODULE$.wrapRefArray((Object[])colNames));
   }

   public Dataset sortWithinPartitions(final String sortCol, final String... sortCols) {
      return this.sortWithinPartitions(sortCol, (Seq).MODULE$.wrapRefArray((Object[])sortCols));
   }

   public Dataset sortWithinPartitions(final Column... sortExprs) {
      return this.sortWithinPartitions((Seq).MODULE$.wrapRefArray(sortExprs));
   }

   public Dataset sort(final String sortCol, final String... sortCols) {
      return this.sort(sortCol, (Seq).MODULE$.wrapRefArray((Object[])sortCols));
   }

   public Dataset sort(final Column... sortExprs) {
      return this.sort((Seq).MODULE$.wrapRefArray(sortExprs));
   }

   public Dataset orderBy(final String sortCol, final String... sortCols) {
      return this.orderBy(sortCol, (Seq).MODULE$.wrapRefArray((Object[])sortCols));
   }

   public Dataset orderBy(final Column... sortExprs) {
      return this.orderBy((Seq).MODULE$.wrapRefArray(sortExprs));
   }

   public Dataset hint(final String name, final Object... parameters) {
      return this.hint(name, (Seq).MODULE$.genericWrapArray(parameters));
   }

   public Dataset select(final Column... cols) {
      return this.select((Seq).MODULE$.wrapRefArray(cols));
   }

   public Dataset select(final String col, final String... cols) {
      return this.select((String)col, (Seq).MODULE$.wrapRefArray((Object[])cols));
   }

   public Dataset selectExpr(final String... exprs) {
      return this.selectExpr((Seq).MODULE$.wrapRefArray((Object[])exprs));
   }

   public RelationalGroupedDataset groupBy(final Column... cols) {
      return this.groupBy((Seq).MODULE$.wrapRefArray(cols));
   }

   public RelationalGroupedDataset groupBy(final String col1, final String... cols) {
      return this.groupBy(col1, (Seq).MODULE$.wrapRefArray((Object[])cols));
   }

   public RelationalGroupedDataset rollup(final Column... cols) {
      return this.rollup((Seq).MODULE$.wrapRefArray(cols));
   }

   public RelationalGroupedDataset rollup(final String col1, final String... cols) {
      return this.rollup(col1, (Seq).MODULE$.wrapRefArray((Object[])cols));
   }

   public RelationalGroupedDataset cube(final Column... cols) {
      return this.cube((Seq).MODULE$.wrapRefArray(cols));
   }

   public RelationalGroupedDataset cube(final String col1, final String... cols) {
      return this.cube(col1, (Seq).MODULE$.wrapRefArray((Object[])cols));
   }

   public RelationalGroupedDataset groupingSets(final Seq groupingSets, final Column... cols) {
      return this.groupingSets(groupingSets, (Seq).MODULE$.wrapRefArray(cols));
   }

   public Dataset agg(final Column expr, final Column... exprs) {
      return this.agg((Column)expr, (Seq).MODULE$.wrapRefArray(exprs));
   }

   public Dataset observe(final String name, final Column expr, final Column... exprs) {
      return this.observe((String)name, expr, (Seq).MODULE$.wrapRefArray(exprs));
   }

   public Dataset observe(final Observation observation, final Column expr, final Column... exprs) {
      return this.observe((Observation)observation, expr, (Seq).MODULE$.wrapRefArray(exprs));
   }

   public Dataset drop(final String... colNames) {
      return this.drop((Seq).MODULE$.wrapRefArray((Object[])colNames));
   }

   public Dataset drop(final Column col, final Column... cols) {
      return this.drop(col, (Seq).MODULE$.wrapRefArray(cols));
   }

   public Dataset dropDuplicates(final String col1, final String... cols) {
      return this.dropDuplicates(col1, (Seq).MODULE$.wrapRefArray((Object[])cols));
   }

   public Dataset dropDuplicatesWithinWatermark(final String col1, final String... cols) {
      return this.dropDuplicatesWithinWatermark(col1, (Seq).MODULE$.wrapRefArray((Object[])cols));
   }

   public Dataset describe(final String... cols) {
      return this.describe((Seq).MODULE$.wrapRefArray((Object[])cols));
   }

   public Dataset summary(final String... statistics) {
      return this.summary((Seq).MODULE$.wrapRefArray((Object[])statistics));
   }

   public Dataset repartition(final int numPartitions, final Column... partitionExprs) {
      return this.repartition(numPartitions, (Seq).MODULE$.wrapRefArray(partitionExprs));
   }

   public Dataset repartition(final Column... partitionExprs) {
      return this.repartition((Seq).MODULE$.wrapRefArray(partitionExprs));
   }

   public Dataset repartitionByRange(final int numPartitions, final Column... partitionExprs) {
      return this.repartitionByRange(numPartitions, (Seq).MODULE$.wrapRefArray(partitionExprs));
   }

   public Dataset repartitionByRange(final Column... partitionExprs) {
      return this.repartitionByRange((Seq).MODULE$.wrapRefArray(partitionExprs));
   }

   public abstract SparkSession sparkSession();

   public abstract Encoder encoder();

   @ClassicOnly
   @DeveloperApi
   @Unstable
   public abstract QueryExecution queryExecution();

   public abstract Dataset toDF();

   public abstract Dataset as(final Encoder evidence$1);

   public abstract Dataset to(final StructType schema);

   public abstract Dataset toDF(final Seq colNames);

   public abstract StructType schema();

   public void printSchema() {
      this.printSchema(Integer.MAX_VALUE);
   }

   public void printSchema(final int level) {
      scala.Predef..MODULE$.println(this.schema().treeString(level));
   }

   public abstract void explain(final String mode);

   public void explain(final boolean extended) {
      if (extended) {
         this.explain("extended");
      } else {
         this.explain("simple");
      }
   }

   public void explain() {
      this.explain("simple");
   }

   public Tuple2[] dtypes() {
      return (Tuple2[])scala.collection.ArrayOps..MODULE$.map$extension(scala.Predef..MODULE$.refArrayOps(this.schema().fields()), (field) -> new Tuple2(field.name(), field.dataType().toString()), scala.reflect.ClassTag..MODULE$.apply(Tuple2.class));
   }

   public String[] columns() {
      return (String[])scala.collection.ArrayOps..MODULE$.map$extension(scala.Predef..MODULE$.refArrayOps(this.schema().fields()), (x$1) -> x$1.name(), scala.reflect.ClassTag..MODULE$.apply(String.class));
   }

   public abstract boolean isLocal();

   public abstract boolean isEmpty();

   public abstract boolean isStreaming();

   public Dataset checkpoint() {
      return this.checkpoint(true, true, scala.None..MODULE$);
   }

   public Dataset checkpoint(final boolean eager) {
      return this.checkpoint(eager, true, scala.None..MODULE$);
   }

   public Dataset localCheckpoint() {
      return this.checkpoint(true, false, scala.None..MODULE$);
   }

   public Dataset localCheckpoint(final boolean eager) {
      return this.checkpoint(eager, false, scala.None..MODULE$);
   }

   public Dataset localCheckpoint(final boolean eager, final StorageLevel storageLevel) {
      return this.checkpoint(eager, false, new Some(storageLevel));
   }

   public abstract Dataset checkpoint(final boolean eager, final boolean reliableCheckpoint, final Option storageLevel);

   public abstract Dataset withWatermark(final String eventTime, final String delayThreshold);

   public void show(final int numRows) {
      this.show(numRows, true);
   }

   public void show() {
      this.show(20);
   }

   public void show(final boolean truncate) {
      this.show(20, truncate);
   }

   public abstract void show(final int numRows, final boolean truncate);

   public void show(final int numRows, final int truncate) {
      this.show(numRows, truncate, false);
   }

   public abstract void show(final int numRows, final int truncate, final boolean vertical);

   public abstract DataFrameNaFunctions na();

   public abstract DataFrameStatFunctions stat();

   public abstract Dataset join(final Dataset right);

   public Dataset join(final Dataset right, final String usingColumn) {
      return this.join(right, (Seq)(new scala.collection.immutable..colon.colon(usingColumn, scala.collection.immutable.Nil..MODULE$)));
   }

   public Dataset join(final Dataset right, final String[] usingColumns) {
      return this.join(right, (Seq)org.apache.spark.util.ArrayImplicits..MODULE$.SparkArrayOps(usingColumns).toImmutableArraySeq());
   }

   public Dataset join(final Dataset right, final Seq usingColumns) {
      return this.join(right, usingColumns, "inner");
   }

   public Dataset join(final Dataset right, final String usingColumn, final String joinType) {
      return this.join(right, (Seq)(new scala.collection.immutable..colon.colon(usingColumn, scala.collection.immutable.Nil..MODULE$)), joinType);
   }

   public Dataset join(final Dataset right, final String[] usingColumns, final String joinType) {
      return this.join(right, (Seq)org.apache.spark.util.ArrayImplicits..MODULE$.SparkArrayOps(usingColumns).toImmutableArraySeq(), joinType);
   }

   public abstract Dataset join(final Dataset right, final Seq usingColumns, final String joinType);

   public Dataset join(final Dataset right, final Column joinExprs) {
      return this.join(right, joinExprs, "inner");
   }

   public abstract Dataset join(final Dataset right, final Column joinExprs, final String joinType);

   public abstract Dataset crossJoin(final Dataset right);

   public abstract Dataset joinWith(final Dataset other, final Column condition, final String joinType);

   public Dataset joinWith(final Dataset other, final Column condition) {
      return this.joinWith(other, condition, "inner");
   }

   public abstract Dataset lateralJoin(final Dataset right);

   public abstract Dataset lateralJoin(final Dataset right, final Column joinExprs);

   public abstract Dataset lateralJoin(final Dataset right, final String joinType);

   public abstract Dataset lateralJoin(final Dataset right, final Column joinExprs, final String joinType);

   public abstract Dataset sortInternal(final boolean global, final Seq sortExprs);

   public Dataset sortWithinPartitions(final String sortCol, final Seq sortCols) {
      return this.sortWithinPartitions((Seq)((IterableOps)sortCols.$plus$colon(sortCol)).map((x$2) -> Column$.MODULE$.apply(x$2)));
   }

   public Dataset sortWithinPartitions(final Seq sortExprs) {
      return this.sortInternal(false, sortExprs);
   }

   public Dataset sort(final String sortCol, final Seq sortCols) {
      return this.sort((Seq)((IterableOps)sortCols.$plus$colon(sortCol)).map((x$3) -> Column$.MODULE$.apply(x$3)));
   }

   public Dataset sort(final Seq sortExprs) {
      return this.sortInternal(true, sortExprs);
   }

   public Dataset orderBy(final String sortCol, final Seq sortCols) {
      return this.sort(sortCol, sortCols);
   }

   public Dataset orderBy(final Seq sortExprs) {
      return this.sort(sortExprs);
   }

   public abstract Dataset hint(final String name, final Seq parameters);

   public Column apply(final String colName) {
      return this.col(colName);
   }

   public abstract Column col(final String colName);

   public abstract Column metadataColumn(final String colName);

   public abstract Column colRegex(final String colName);

   public abstract Dataset as(final String alias);

   public Dataset as(final Symbol alias) {
      return this.as(alias.name());
   }

   public Dataset alias(final String alias) {
      return this.as(alias);
   }

   public Dataset alias(final Symbol alias) {
      return this.as(alias);
   }

   public abstract Dataset select(final Seq cols);

   public Dataset select(final String col, final Seq cols) {
      return this.select((Seq)((IterableOps)cols.$plus$colon(col)).map((x$4) -> Column$.MODULE$.apply(x$4)));
   }

   public Dataset selectExpr(final Seq exprs) {
      return this.select((Seq)exprs.map((expr) -> functions$.MODULE$.expr(expr)));
   }

   public abstract Dataset select(final TypedColumn c1);

   public abstract Dataset selectUntyped(final Seq columns);

   public Dataset select(final TypedColumn c1, final TypedColumn c2) {
      return this.selectUntyped(.MODULE$.wrapRefArray(new TypedColumn[]{c1, c2}));
   }

   public Dataset select(final TypedColumn c1, final TypedColumn c2, final TypedColumn c3) {
      return this.selectUntyped(.MODULE$.wrapRefArray(new TypedColumn[]{c1, c2, c3}));
   }

   public Dataset select(final TypedColumn c1, final TypedColumn c2, final TypedColumn c3, final TypedColumn c4) {
      return this.selectUntyped(.MODULE$.wrapRefArray(new TypedColumn[]{c1, c2, c3, c4}));
   }

   public Dataset select(final TypedColumn c1, final TypedColumn c2, final TypedColumn c3, final TypedColumn c4, final TypedColumn c5) {
      return this.selectUntyped(.MODULE$.wrapRefArray(new TypedColumn[]{c1, c2, c3, c4, c5}));
   }

   public abstract Dataset filter(final Column condition);

   public Dataset filter(final String conditionExpr) {
      return this.filter(functions$.MODULE$.expr(conditionExpr));
   }

   public abstract Dataset filter(final Function1 func);

   public abstract Dataset filter(final FilterFunction func);

   public Dataset where(final Column condition) {
      return this.filter(condition);
   }

   public Dataset where(final String conditionExpr) {
      return this.filter(conditionExpr);
   }

   public abstract RelationalGroupedDataset groupBy(final Seq cols);

   public RelationalGroupedDataset groupBy(final String col1, final Seq cols) {
      return this.groupBy((Seq)((IterableOps)cols.$plus$colon(col1)).map((colName) -> this.col(colName)));
   }

   public abstract RelationalGroupedDataset rollup(final Seq cols);

   public RelationalGroupedDataset rollup(final String col1, final Seq cols) {
      return this.rollup((Seq)((IterableOps)cols.$plus$colon(col1)).map((colName) -> this.col(colName)));
   }

   public abstract RelationalGroupedDataset cube(final Seq cols);

   public RelationalGroupedDataset cube(final String col1, final Seq cols) {
      return this.cube((Seq)((IterableOps)cols.$plus$colon(col1)).map((colName) -> this.col(colName)));
   }

   public abstract RelationalGroupedDataset groupingSets(final Seq groupingSets, final Seq cols);

   public Dataset agg(final Tuple2 aggExpr, final Seq aggExprs) {
      return this.groupBy((Seq)scala.collection.immutable.Nil..MODULE$).agg(aggExpr, aggExprs);
   }

   public Dataset agg(final Map exprs) {
      return this.groupBy((Seq)scala.collection.immutable.Nil..MODULE$).agg(exprs);
   }

   public Dataset agg(final java.util.Map exprs) {
      return this.groupBy((Seq)scala.collection.immutable.Nil..MODULE$).agg(exprs);
   }

   public Dataset agg(final Column expr, final Seq exprs) {
      return this.groupBy((Seq)scala.collection.immutable.Nil..MODULE$).agg(expr, exprs);
   }

   public abstract Object reduce(final Function2 func);

   public Object reduce(final ReduceFunction func) {
      return this.reduce(ToScalaUDF$.MODULE$.apply(func));
   }

   public abstract KeyValueGroupedDataset groupByKey(final Function1 func, final Encoder evidence$2);

   public KeyValueGroupedDataset groupByKey(final MapFunction func, final Encoder encoder) {
      return this.groupByKey(ToScalaUDF$.MODULE$.apply(func), encoder);
   }

   public abstract Dataset unpivot(final Column[] ids, final Column[] values, final String variableColumnName, final String valueColumnName);

   public abstract Dataset unpivot(final Column[] ids, final String variableColumnName, final String valueColumnName);

   public Dataset melt(final Column[] ids, final Column[] values, final String variableColumnName, final String valueColumnName) {
      return this.unpivot(ids, values, variableColumnName, valueColumnName);
   }

   public Dataset melt(final Column[] ids, final String variableColumnName, final String valueColumnName) {
      return this.unpivot(ids, variableColumnName, valueColumnName);
   }

   public abstract Dataset transpose(final Column indexColumn);

   public abstract Dataset transpose();

   public abstract Column scalar();

   public abstract Column exists();

   public abstract Dataset observe(final String name, final Column expr, final Seq exprs);

   public abstract Dataset observe(final Observation observation, final Column expr, final Seq exprs);

   public abstract Dataset limit(final int n);

   public abstract Dataset offset(final int n);

   public abstract Dataset union(final Dataset other);

   public Dataset unionAll(final Dataset other) {
      return this.union(other);
   }

   public Dataset unionByName(final Dataset other) {
      return this.unionByName(other, false);
   }

   public abstract Dataset unionByName(final Dataset other, final boolean allowMissingColumns);

   public abstract Dataset intersect(final Dataset other);

   public abstract Dataset intersectAll(final Dataset other);

   public abstract Dataset except(final Dataset other);

   public abstract Dataset exceptAll(final Dataset other);

   public Dataset sample(final double fraction, final long seed) {
      return this.sample(false, fraction, seed);
   }

   public Dataset sample(final double fraction) {
      return this.sample(false, fraction);
   }

   public abstract Dataset sample(final boolean withReplacement, final double fraction, final long seed);

   public Dataset sample(final boolean withReplacement, final double fraction) {
      return this.sample(withReplacement, fraction, org.apache.spark.util.SparkClassUtils..MODULE$.random().nextLong());
   }

   public abstract Dataset[] randomSplit(final double[] weights, final long seed);

   public abstract List randomSplitAsList(final double[] weights, final long seed);

   public abstract Dataset[] randomSplit(final double[] weights);

   /** @deprecated */
   public abstract Dataset explode(final Seq input, final Function1 f, final TypeTags.TypeTag evidence$3);

   /** @deprecated */
   public abstract Dataset explode(final String inputColumn, final String outputColumn, final Function1 f, final TypeTags.TypeTag evidence$4);

   public Dataset withColumn(final String colName, final Column col) {
      return this.withColumns(new scala.collection.immutable..colon.colon(colName, scala.collection.immutable.Nil..MODULE$), new scala.collection.immutable..colon.colon(col, scala.collection.immutable.Nil..MODULE$));
   }

   public Dataset withColumns(final Map colsMap) {
      Tuple2 var4 = colsMap.toSeq().unzip(scala.Predef..MODULE$.$conforms());
      if (var4 != null) {
         Seq colNames = (Seq)var4._1();
         Seq newCols = (Seq)var4._2();
         Tuple2 var3 = new Tuple2(colNames, newCols);
         Seq colNames = (Seq)var3._1();
         Seq newCols = (Seq)var3._2();
         return this.withColumns(colNames, newCols);
      } else {
         throw new MatchError(var4);
      }
   }

   public Dataset withColumns(final java.util.Map colsMap) {
      return this.withColumns(scala.jdk.CollectionConverters..MODULE$.MapHasAsScala(colsMap).asScala().toMap(scala..less.colon.less..MODULE$.refl()));
   }

   public abstract Dataset withColumns(final Seq colNames, final Seq cols);

   public Dataset withColumns(final Seq colNames, final Seq cols, final Seq metadata) {
      scala.Predef..MODULE$.require(colNames.size() == cols.size(), () -> {
         int var10000 = colNames.size();
         return "The size of column names: " + var10000 + " isn't equal to the size of columns: " + cols.size();
      });
      scala.Predef..MODULE$.require(colNames.size() == metadata.size(), () -> {
         int var10000 = colNames.size();
         return "The size of column names: " + var10000 + " isn't equal to the size of metadata elements: " + metadata.size();
      });
      Seq colsWithMetadata = (Seq)((IterableOps)((IterableOps)colNames.zip(cols)).zip(metadata)).map((x0$1) -> {
         if (x0$1 != null) {
            Tuple2 var3 = (Tuple2)x0$1._1();
            Metadata meta = (Metadata)x0$1._2();
            if (var3 != null) {
               String colName = (String)var3._1();
               Column col = (Column)var3._2();
               return col.as(colName, meta);
            }
         }

         throw new MatchError(x0$1);
      });
      return this.withColumns(colNames, colsWithMetadata);
   }

   public Dataset withColumn(final String colName, final Column col, final Metadata metadata) {
      return this.withColumn(colName, col.as(colName, metadata));
   }

   public Dataset withColumnRenamed(final String existingName, final String newName) {
      return this.withColumnsRenamed(new scala.collection.immutable..colon.colon(existingName, scala.collection.immutable.Nil..MODULE$), new scala.collection.immutable..colon.colon(newName, scala.collection.immutable.Nil..MODULE$));
   }

   public Dataset withColumnsRenamed(final Map colsMap) throws AnalysisException {
      Tuple2 var4 = colsMap.toSeq().unzip(scala.Predef..MODULE$.$conforms());
      if (var4 != null) {
         Seq colNames = (Seq)var4._1();
         Seq newColNames = (Seq)var4._2();
         Tuple2 var3 = new Tuple2(colNames, newColNames);
         Seq colNames = (Seq)var3._1();
         Seq newColNames = (Seq)var3._2();
         return this.withColumnsRenamed(colNames, newColNames);
      } else {
         throw new MatchError(var4);
      }
   }

   public Dataset withColumnsRenamed(final java.util.Map colsMap) {
      return this.withColumnsRenamed(scala.jdk.CollectionConverters..MODULE$.MapHasAsScala(colsMap).asScala().toMap(scala..less.colon.less..MODULE$.refl()));
   }

   public abstract Dataset withColumnsRenamed(final Seq colNames, final Seq newColNames);

   public abstract Dataset withMetadata(final String columnName, final Metadata metadata);

   public Dataset drop(final String colName) {
      return this.drop((Seq)scala.collection.immutable.Nil..MODULE$.$colon$colon(colName));
   }

   public abstract Dataset drop(final Seq colNames);

   public Dataset drop(final Column col) {
      return this.drop(col, (Seq)scala.collection.immutable.Nil..MODULE$);
   }

   public abstract Dataset drop(final Column col, final Seq cols);

   public abstract Dataset dropDuplicates();

   public abstract Dataset dropDuplicates(final Seq colNames);

   public Dataset dropDuplicates(final String[] colNames) {
      return this.dropDuplicates((Seq)org.apache.spark.util.ArrayImplicits..MODULE$.SparkArrayOps(colNames).toImmutableArraySeq());
   }

   public Dataset dropDuplicates(final String col1, final Seq cols) {
      Seq colNames = (Seq)cols.$plus$colon(col1);
      return this.dropDuplicates(colNames);
   }

   public abstract Dataset dropDuplicatesWithinWatermark();

   public abstract Dataset dropDuplicatesWithinWatermark(final Seq colNames);

   public Dataset dropDuplicatesWithinWatermark(final String[] colNames) {
      return this.dropDuplicatesWithinWatermark((Seq)org.apache.spark.util.ArrayImplicits..MODULE$.SparkArrayOps(colNames).toImmutableArraySeq());
   }

   public Dataset dropDuplicatesWithinWatermark(final String col1, final Seq cols) {
      Seq colNames = (Seq)cols.$plus$colon(col1);
      return this.dropDuplicatesWithinWatermark(colNames);
   }

   public abstract Dataset describe(final Seq cols);

   public abstract Dataset summary(final Seq statistics);

   public abstract Object head(final int n);

   public Object head() {
      return scala.collection.ArrayOps..MODULE$.head$extension(scala.Predef..MODULE$.genericArrayOps(this.head(1)));
   }

   public Object first() {
      return this.head();
   }

   public Dataset transform(final Function1 t) {
      return (Dataset)t.apply(this);
   }

   public abstract Dataset map(final Function1 func, final Encoder evidence$5);

   public abstract Dataset map(final MapFunction func, final Encoder encoder);

   public abstract Dataset mapPartitions(final Function1 func, final Encoder evidence$6);

   public Dataset mapPartitions(final MapPartitionsFunction f, final Encoder encoder) {
      return this.mapPartitions(ToScalaUDF$.MODULE$.apply(f), encoder);
   }

   public Dataset flatMap(final Function1 func, final Encoder evidence$7) {
      return this.mapPartitions(UDFAdaptors$.MODULE$.flatMapToMapPartitions(func), evidence$7);
   }

   public Dataset flatMap(final FlatMapFunction f, final Encoder encoder) {
      return this.mapPartitions(UDFAdaptors$.MODULE$.flatMapToMapPartitions(f), encoder);
   }

   public void foreach(final Function1 f) {
      this.foreachPartition(UDFAdaptors$.MODULE$.foreachToForeachPartition(f));
   }

   public void foreach(final ForeachFunction func) {
      this.foreachPartition(UDFAdaptors$.MODULE$.foreachToForeachPartition(func));
   }

   public abstract void foreachPartition(final Function1 f);

   public void foreachPartition(final ForeachPartitionFunction func) {
      this.foreachPartition(ToScalaUDF$.MODULE$.apply(func));
   }

   public Object take(final int n) {
      return this.head(n);
   }

   public abstract Object tail(final int n);

   public List takeAsList(final int n) {
      return Arrays.asList(.MODULE$.toObjectArray(this.take(n)));
   }

   public abstract Object collect();

   public abstract List collectAsList();

   public abstract Iterator toLocalIterator();

   public abstract long count();

   public abstract Dataset repartition(final int numPartitions);

   public abstract Dataset repartitionByExpression(final Option numPartitions, final Seq partitionExprs);

   public Dataset repartition(final int numPartitions, final Seq partitionExprs) {
      return this.repartitionByExpression(new Some(BoxesRunTime.boxToInteger(numPartitions)), partitionExprs);
   }

   public Dataset repartition(final Seq partitionExprs) {
      return this.repartitionByExpression(scala.None..MODULE$, partitionExprs);
   }

   public abstract Dataset repartitionByRange(final Option numPartitions, final Seq partitionExprs);

   public Dataset repartitionByRange(final int numPartitions, final Seq partitionExprs) {
      return this.repartitionByRange(new Some(BoxesRunTime.boxToInteger(numPartitions)), partitionExprs);
   }

   public Dataset repartitionByRange(final Seq partitionExprs) {
      return this.repartitionByRange(scala.None..MODULE$, partitionExprs);
   }

   public abstract Dataset coalesce(final int numPartitions);

   public Dataset distinct() {
      return this.dropDuplicates();
   }

   public abstract Dataset persist();

   public abstract Dataset cache();

   public abstract Dataset persist(final StorageLevel newLevel);

   public abstract StorageLevel storageLevel();

   public abstract Dataset unpersist(final boolean blocking);

   public abstract Dataset unpersist();

   /** @deprecated */
   public void registerTempTable(final String tableName) {
      this.createOrReplaceTempView(tableName);
   }

   public void createTempView(final String viewName) throws AnalysisException {
      this.createTempView(viewName, false, false);
   }

   public void createOrReplaceTempView(final String viewName) {
      this.createTempView(viewName, true, false);
   }

   public void createGlobalTempView(final String viewName) throws AnalysisException {
      this.createTempView(viewName, false, true);
   }

   public void createOrReplaceGlobalTempView(final String viewName) {
      this.createTempView(viewName, true, true);
   }

   public abstract void createTempView(final String viewName, final boolean replace, final boolean global);

   public abstract MergeIntoWriter mergeInto(final String table, final Column condition);

   public abstract DataStreamWriter writeStream();

   public abstract DataFrameWriterV2 writeTo(final String table);

   public abstract Dataset toJSON();

   public abstract String[] inputFiles();

   @DeveloperApi
   public abstract boolean sameSemantics(final Dataset other);

   @DeveloperApi
   public abstract int semanticHash();

   public abstract DataFrameWriter write();

   @ClassicOnly
   public abstract RDD rdd();

   @ClassicOnly
   public abstract JavaRDD toJavaRDD();

   @ClassicOnly
   public JavaRDD javaRDD() {
      return this.toJavaRDD();
   }

   // $FF: synthetic method
   private static Object $deserializeLambda$(SerializedLambda var0) {
      return Class.lambdaDeserialize<invokedynamic>(var0);
   }
}
