package org.apache.datasketches.theta;

import org.apache.datasketches.common.SketchesArgumentException;

public class BitPacking {
   public static void packBits(long value, int bits, byte[] buffer, int bufOffset, int bitOffset) {
      if (bitOffset > 0) {
         int chunkBits = 8 - bitOffset;
         int mask = (1 << chunkBits) - 1;
         if (bits < chunkBits) {
            buffer[bufOffset] = (byte)((int)((long)buffer[bufOffset] | value << chunkBits - bits & (long)mask));
            return;
         }

         int var10001 = bufOffset++;
         buffer[var10001] = (byte)((int)((long)buffer[var10001] | value >>> bits - chunkBits & (long)mask));
         bits -= chunkBits;
      }

      while(bits >= 8) {
         buffer[bufOffset++] = (byte)((int)(value >>> bits - 8));
         bits -= 8;
      }

      if (bits > 0) {
         buffer[bufOffset] = (byte)((int)(value << 8 - bits));
      }

   }

   public static void unpackBits(long[] value, int index, int bits, byte[] buffer, int bufOffset, int bitOffset) {
      int availBits = 8 - bitOffset;
      int chunkBits = availBits <= bits ? availBits : bits;
      int mask = (1 << chunkBits) - 1;
      value[index] = (long)(buffer[bufOffset] >>> availBits - chunkBits & mask);
      bufOffset += availBits == chunkBits ? 1 : 0;

      for(bits -= chunkBits; bits >= 8; bits -= 8) {
         value[index] <<= 8;
         value[index] |= Byte.toUnsignedLong(buffer[bufOffset++]);
      }

      if (bits > 0) {
         value[index] <<= bits;
         value[index] |= Byte.toUnsignedLong(buffer[bufOffset]) >>> 8 - bits;
      }

   }

   static void packBitsBlock8(long[] values, int i, byte[] buf, int off, int bits) {
      switch (bits) {
         case 1:
            packBits1(values, i, buf, off);
            break;
         case 2:
            packBits2(values, i, buf, off);
            break;
         case 3:
            packBits3(values, i, buf, off);
            break;
         case 4:
            packBits4(values, i, buf, off);
            break;
         case 5:
            packBits5(values, i, buf, off);
            break;
         case 6:
            packBits6(values, i, buf, off);
            break;
         case 7:
            packBits7(values, i, buf, off);
            break;
         case 8:
            packBits8(values, i, buf, off);
            break;
         case 9:
            packBits9(values, i, buf, off);
            break;
         case 10:
            packBits10(values, i, buf, off);
            break;
         case 11:
            packBits11(values, i, buf, off);
            break;
         case 12:
            packBits12(values, i, buf, off);
            break;
         case 13:
            packBits13(values, i, buf, off);
            break;
         case 14:
            packBits14(values, i, buf, off);
            break;
         case 15:
            packBits15(values, i, buf, off);
            break;
         case 16:
            packBits16(values, i, buf, off);
            break;
         case 17:
            packBits17(values, i, buf, off);
            break;
         case 18:
            packBits18(values, i, buf, off);
            break;
         case 19:
            packBits19(values, i, buf, off);
            break;
         case 20:
            packBits20(values, i, buf, off);
            break;
         case 21:
            packBits21(values, i, buf, off);
            break;
         case 22:
            packBits22(values, i, buf, off);
            break;
         case 23:
            packBits23(values, i, buf, off);
            break;
         case 24:
            packBits24(values, i, buf, off);
            break;
         case 25:
            packBits25(values, i, buf, off);
            break;
         case 26:
            packBits26(values, i, buf, off);
            break;
         case 27:
            packBits27(values, i, buf, off);
            break;
         case 28:
            packBits28(values, i, buf, off);
            break;
         case 29:
            packBits29(values, i, buf, off);
            break;
         case 30:
            packBits30(values, i, buf, off);
            break;
         case 31:
            packBits31(values, i, buf, off);
            break;
         case 32:
            packBits32(values, i, buf, off);
            break;
         case 33:
            packBits33(values, i, buf, off);
            break;
         case 34:
            packBits34(values, i, buf, off);
            break;
         case 35:
            packBits35(values, i, buf, off);
            break;
         case 36:
            packBits36(values, i, buf, off);
            break;
         case 37:
            packBits37(values, i, buf, off);
            break;
         case 38:
            packBits38(values, i, buf, off);
            break;
         case 39:
            packBits39(values, i, buf, off);
            break;
         case 40:
            packBits40(values, i, buf, off);
            break;
         case 41:
            packBits41(values, i, buf, off);
            break;
         case 42:
            packBits42(values, i, buf, off);
            break;
         case 43:
            packBits43(values, i, buf, off);
            break;
         case 44:
            packBits44(values, i, buf, off);
            break;
         case 45:
            packBits45(values, i, buf, off);
            break;
         case 46:
            packBits46(values, i, buf, off);
            break;
         case 47:
            packBits47(values, i, buf, off);
            break;
         case 48:
            packBits48(values, i, buf, off);
            break;
         case 49:
            packBits49(values, i, buf, off);
            break;
         case 50:
            packBits50(values, i, buf, off);
            break;
         case 51:
            packBits51(values, i, buf, off);
            break;
         case 52:
            packBits52(values, i, buf, off);
            break;
         case 53:
            packBits53(values, i, buf, off);
            break;
         case 54:
            packBits54(values, i, buf, off);
            break;
         case 55:
            packBits55(values, i, buf, off);
            break;
         case 56:
            packBits56(values, i, buf, off);
            break;
         case 57:
            packBits57(values, i, buf, off);
            break;
         case 58:
            packBits58(values, i, buf, off);
            break;
         case 59:
            packBits59(values, i, buf, off);
            break;
         case 60:
            packBits60(values, i, buf, off);
            break;
         case 61:
            packBits61(values, i, buf, off);
            break;
         case 62:
            packBits62(values, i, buf, off);
            break;
         case 63:
            packBits63(values, i, buf, off);
            break;
         default:
            throw new SketchesArgumentException("wrong number of bits " + bits);
      }

   }

   static void unpackBitsBlock8(long[] values, int i, byte[] buf, int off, int bits) {
      switch (bits) {
         case 1:
            unpackBits1(values, i, buf, off);
            break;
         case 2:
            unpackBits2(values, i, buf, off);
            break;
         case 3:
            unpackBits3(values, i, buf, off);
            break;
         case 4:
            unpackBits4(values, i, buf, off);
            break;
         case 5:
            unpackBits5(values, i, buf, off);
            break;
         case 6:
            unpackBits6(values, i, buf, off);
            break;
         case 7:
            unpackBits7(values, i, buf, off);
            break;
         case 8:
            unpackBits8(values, i, buf, off);
            break;
         case 9:
            unpackBits9(values, i, buf, off);
            break;
         case 10:
            unpackBits10(values, i, buf, off);
            break;
         case 11:
            unpackBits11(values, i, buf, off);
            break;
         case 12:
            unpackBits12(values, i, buf, off);
            break;
         case 13:
            unpackBits13(values, i, buf, off);
            break;
         case 14:
            unpackBits14(values, i, buf, off);
            break;
         case 15:
            unpackBits15(values, i, buf, off);
            break;
         case 16:
            unpackBits16(values, i, buf, off);
            break;
         case 17:
            unpackBits17(values, i, buf, off);
            break;
         case 18:
            unpackBits18(values, i, buf, off);
            break;
         case 19:
            unpackBits19(values, i, buf, off);
            break;
         case 20:
            unpackBits20(values, i, buf, off);
            break;
         case 21:
            unpackBits21(values, i, buf, off);
            break;
         case 22:
            unpackBits22(values, i, buf, off);
            break;
         case 23:
            unpackBits23(values, i, buf, off);
            break;
         case 24:
            unpackBits24(values, i, buf, off);
            break;
         case 25:
            unpackBits25(values, i, buf, off);
            break;
         case 26:
            unpackBits26(values, i, buf, off);
            break;
         case 27:
            unpackBits27(values, i, buf, off);
            break;
         case 28:
            unpackBits28(values, i, buf, off);
            break;
         case 29:
            unpackBits29(values, i, buf, off);
            break;
         case 30:
            unpackBits30(values, i, buf, off);
            break;
         case 31:
            unpackBits31(values, i, buf, off);
            break;
         case 32:
            unpackBits32(values, i, buf, off);
            break;
         case 33:
            unpackBits33(values, i, buf, off);
            break;
         case 34:
            unpackBits34(values, i, buf, off);
            break;
         case 35:
            unpackBits35(values, i, buf, off);
            break;
         case 36:
            unpackBits36(values, i, buf, off);
            break;
         case 37:
            unpackBits37(values, i, buf, off);
            break;
         case 38:
            unpackBits38(values, i, buf, off);
            break;
         case 39:
            unpackBits39(values, i, buf, off);
            break;
         case 40:
            unpackBits40(values, i, buf, off);
            break;
         case 41:
            unpackBits41(values, i, buf, off);
            break;
         case 42:
            unpackBits42(values, i, buf, off);
            break;
         case 43:
            unpackBits43(values, i, buf, off);
            break;
         case 44:
            unpackBits44(values, i, buf, off);
            break;
         case 45:
            unpackBits45(values, i, buf, off);
            break;
         case 46:
            unpackBits46(values, i, buf, off);
            break;
         case 47:
            unpackBits47(values, i, buf, off);
            break;
         case 48:
            unpackBits48(values, i, buf, off);
            break;
         case 49:
            unpackBits49(values, i, buf, off);
            break;
         case 50:
            unpackBits50(values, i, buf, off);
            break;
         case 51:
            unpackBits51(values, i, buf, off);
            break;
         case 52:
            unpackBits52(values, i, buf, off);
            break;
         case 53:
            unpackBits53(values, i, buf, off);
            break;
         case 54:
            unpackBits54(values, i, buf, off);
            break;
         case 55:
            unpackBits55(values, i, buf, off);
            break;
         case 56:
            unpackBits56(values, i, buf, off);
            break;
         case 57:
            unpackBits57(values, i, buf, off);
            break;
         case 58:
            unpackBits58(values, i, buf, off);
            break;
         case 59:
            unpackBits59(values, i, buf, off);
            break;
         case 60:
            unpackBits60(values, i, buf, off);
            break;
         case 61:
            unpackBits61(values, i, buf, off);
            break;
         case 62:
            unpackBits62(values, i, buf, off);
            break;
         case 63:
            unpackBits63(values, i, buf, off);
            break;
         default:
            throw new SketchesArgumentException("wrong number of bits " + bits);
      }

   }

   static void packBits1(long[] values, int i, byte[] buf, int off) {
      buf[off] = (byte)((int)(values[i + 0] << 7));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 1] << 6));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 2] << 5));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 3] << 4));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 4] << 3));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 5] << 2));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 6] << 1));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 7]));
   }

   static void packBits2(long[] values, int i, byte[] buf, int off) {
      buf[off] = (byte)((int)(values[i + 0] << 6));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 1] << 4));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 2] << 2));
      int var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 3]));
      buf[off] = (byte)((int)(values[i + 4] << 6));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 5] << 4));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 6] << 2));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 7]));
   }

   static void packBits3(long[] values, int i, byte[] buf, int off) {
      buf[off] = (byte)((int)(values[i + 0] << 5));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 1] << 2));
      int var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 2] >>> 1));
      buf[off] = (byte)((int)(values[i + 2] << 7));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 3] << 4));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 4] << 1));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 6] << 3));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 7]));
   }

   static void packBits4(long[] values, int i, byte[] buf, int off) {
      buf[off] = (byte)((int)(values[i + 0] << 4));
      int var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 1]));
      buf[off] = (byte)((int)(values[i + 2] << 4));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 3]));
      buf[off] = (byte)((int)(values[i + 4] << 4));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 5]));
      buf[off] = (byte)((int)(values[i + 6] << 4));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 7]));
   }

   static void packBits5(long[] values, int i, byte[] buf, int off) {
      buf[off] = (byte)((int)(values[i + 0] << 3));
      int var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 2] << 1));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 4] >>> 1));
      buf[off] = (byte)((int)(values[i + 4] << 7));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 5] << 2));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 6] >>> 3));
      buf[off] = (byte)((int)(values[i + 6] << 5));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 7]));
   }

   static void packBits6(long[] values, int i, byte[] buf, int off) {
      buf[off] = (byte)((int)(values[i + 0] << 2));
      int var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 2] >>> 2));
      buf[off] = (byte)((int)(values[i + 2] << 6));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 3]));
      buf[off] = (byte)((int)(values[i + 4] << 2));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 6] >>> 2));
      buf[off] = (byte)((int)(values[i + 6] << 6));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 7]));
   }

   static void packBits7(long[] values, int i, byte[] buf, int off) {
      buf[off] = (byte)((int)(values[i + 0] << 1));
      int var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 2] >>> 5));
      buf[off] = (byte)((int)(values[i + 2] << 3));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 4] >>> 3));
      buf[off] = (byte)((int)(values[i + 4] << 5));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var10001 = off++;
      buf[var10001] = (byte)((int)((long)buf[var10001] | values[i + 6] >>> 1));
      buf[off] = (byte)((int)(values[i + 6] << 7));
      buf[off] = (byte)((int)((long)buf[off] | values[i + 7]));
   }

   static void packBits8(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)values[i + 0]);
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)values[i + 2]);
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)values[i + 4]);
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)values[i + 6]);
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits9(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 1));
      buf[off] = (byte)((int)(values[i + 0] << 7));
      int var12 = off++;
      buf[var12] = (byte)((int)((long)buf[var12] | values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var12 = off++;
      buf[var12] = (byte)((int)((long)buf[var12] | values[i + 2] >>> 3));
      buf[off] = (byte)((int)(values[i + 2] << 5));
      var12 = off++;
      buf[var12] = (byte)((int)((long)buf[var12] | values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var12 = off++;
      buf[var12] = (byte)((int)((long)buf[var12] | values[i + 4] >>> 5));
      buf[off] = (byte)((int)(values[i + 4] << 3));
      var12 = off++;
      buf[var12] = (byte)((int)((long)buf[var12] | values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var12 = off++;
      buf[var12] = (byte)((int)((long)buf[var12] | values[i + 6] >>> 7));
      buf[off] = (byte)((int)(values[i + 6] << 1));
      var12 = off++;
      buf[var12] = (byte)((int)((long)buf[var12] | values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits10(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 2));
      buf[off] = (byte)((int)(values[i + 0] << 6));
      int var13 = off++;
      buf[var13] = (byte)((int)((long)buf[var13] | values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var13 = off++;
      buf[var13] = (byte)((int)((long)buf[var13] | values[i + 2] >>> 6));
      buf[off] = (byte)((int)(values[i + 2] << 2));
      var13 = off++;
      buf[var13] = (byte)((int)((long)buf[var13] | values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 2));
      buf[off] = (byte)((int)(values[i + 4] << 6));
      var13 = off++;
      buf[var13] = (byte)((int)((long)buf[var13] | values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var13 = off++;
      buf[var13] = (byte)((int)((long)buf[var13] | values[i + 6] >>> 6));
      buf[off] = (byte)((int)(values[i + 6] << 2));
      var13 = off++;
      buf[var13] = (byte)((int)((long)buf[var13] | values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits11(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 3));
      buf[off] = (byte)((int)(values[i + 0] << 5));
      int var14 = off++;
      buf[var14] = (byte)((int)((long)buf[var14] | values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var14 = off++;
      buf[var14] = (byte)((int)((long)buf[var14] | values[i + 2] >>> 9));
      buf[off++] = (byte)((int)(values[i + 2] >>> 1));
      buf[off] = (byte)((int)(values[i + 2] << 7));
      var14 = off++;
      buf[var14] = (byte)((int)((long)buf[var14] | values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var14 = off++;
      buf[var14] = (byte)((int)((long)buf[var14] | values[i + 4] >>> 7));
      buf[off] = (byte)((int)(values[i + 4] << 1));
      var14 = off++;
      buf[var14] = (byte)((int)((long)buf[var14] | values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var14 = off++;
      buf[var14] = (byte)((int)((long)buf[var14] | values[i + 6] >>> 5));
      buf[off] = (byte)((int)(values[i + 6] << 3));
      var14 = off++;
      buf[var14] = (byte)((int)((long)buf[var14] | values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits12(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 4));
      buf[off] = (byte)((int)(values[i + 0] << 4));
      int var15 = off++;
      buf[var15] = (byte)((int)((long)buf[var15] | values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 4));
      buf[off] = (byte)((int)(values[i + 2] << 4));
      var15 = off++;
      buf[var15] = (byte)((int)((long)buf[var15] | values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 4));
      buf[off] = (byte)((int)(values[i + 4] << 4));
      var15 = off++;
      buf[var15] = (byte)((int)((long)buf[var15] | values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 4));
      buf[off] = (byte)((int)(values[i + 6] << 4));
      var15 = off++;
      buf[var15] = (byte)((int)((long)buf[var15] | values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits13(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 5));
      buf[off] = (byte)((int)(values[i + 0] << 3));
      int var16 = off++;
      buf[var16] = (byte)((int)((long)buf[var16] | values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var16 = off++;
      buf[var16] = (byte)((int)((long)buf[var16] | values[i + 2] >>> 7));
      buf[off] = (byte)((int)(values[i + 2] << 1));
      var16 = off++;
      buf[var16] = (byte)((int)((long)buf[var16] | values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] >>> 4));
      var16 = off++;
      buf[var16] = (byte)((int)((long)buf[var16] | values[i + 4] >>> 9));
      buf[off++] = (byte)((int)(values[i + 4] >>> 1));
      buf[off] = (byte)((int)(values[i + 4] << 7));
      var16 = off++;
      buf[var16] = (byte)((int)((long)buf[var16] | values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var16 = off++;
      buf[var16] = (byte)((int)((long)buf[var16] | values[i + 6] >>> 11));
      buf[off++] = (byte)((int)(values[i + 6] >>> 3));
      buf[off] = (byte)((int)(values[i + 6] << 5));
      var16 = off++;
      buf[var16] = (byte)((int)((long)buf[var16] | values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits14(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 6));
      buf[off] = (byte)((int)(values[i + 0] << 2));
      int var17 = off++;
      buf[var17] = (byte)((int)((long)buf[var17] | values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var17 = off++;
      buf[var17] = (byte)((int)((long)buf[var17] | values[i + 2] >>> 10));
      buf[off++] = (byte)((int)(values[i + 2] >>> 2));
      buf[off] = (byte)((int)(values[i + 2] << 6));
      var17 = off++;
      buf[var17] = (byte)((int)((long)buf[var17] | values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 6));
      buf[off] = (byte)((int)(values[i + 4] << 2));
      var17 = off++;
      buf[var17] = (byte)((int)((long)buf[var17] | values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var17 = off++;
      buf[var17] = (byte)((int)((long)buf[var17] | values[i + 6] >>> 10));
      buf[off++] = (byte)((int)(values[i + 6] >>> 2));
      buf[off] = (byte)((int)(values[i + 6] << 6));
      var17 = off++;
      buf[var17] = (byte)((int)((long)buf[var17] | values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits15(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 7));
      buf[off] = (byte)((int)(values[i + 0] << 1));
      int var18 = off++;
      buf[var18] = (byte)((int)((long)buf[var18] | values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var18 = off++;
      buf[var18] = (byte)((int)((long)buf[var18] | values[i + 2] >>> 13));
      buf[off++] = (byte)((int)(values[i + 2] >>> 5));
      buf[off] = (byte)((int)(values[i + 2] << 3));
      var18 = off++;
      buf[var18] = (byte)((int)((long)buf[var18] | values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var18 = off++;
      buf[var18] = (byte)((int)((long)buf[var18] | values[i + 4] >>> 11));
      buf[off++] = (byte)((int)(values[i + 4] >>> 3));
      buf[off] = (byte)((int)(values[i + 4] << 5));
      var18 = off++;
      buf[var18] = (byte)((int)((long)buf[var18] | values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var18 = off++;
      buf[var18] = (byte)((int)((long)buf[var18] | values[i + 6] >>> 9));
      buf[off++] = (byte)((int)(values[i + 6] >>> 1));
      buf[off] = (byte)((int)(values[i + 6] << 7));
      var18 = off++;
      buf[var18] = (byte)((int)((long)buf[var18] | values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits16(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 8));
      buf[off++] = (byte)((int)values[i + 0]);
      buf[off++] = (byte)((int)(values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 8));
      buf[off++] = (byte)((int)values[i + 2]);
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 8));
      buf[off++] = (byte)((int)values[i + 4]);
      buf[off++] = (byte)((int)(values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 8));
      buf[off++] = (byte)((int)values[i + 6]);
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits17(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 9));
      buf[off++] = (byte)((int)(values[i + 0] >>> 1));
      buf[off] = (byte)((int)(values[i + 0] << 7));
      int var21 = off++;
      buf[var21] = (byte)((int)((long)buf[var21] | values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var21 = off++;
      buf[var21] = (byte)((int)((long)buf[var21] | values[i + 2] >>> 11));
      buf[off++] = (byte)((int)(values[i + 2] >>> 3));
      buf[off] = (byte)((int)(values[i + 2] << 5));
      var21 = off++;
      buf[var21] = (byte)((int)((long)buf[var21] | values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var21 = off++;
      buf[var21] = (byte)((int)((long)buf[var21] | values[i + 4] >>> 13));
      buf[off++] = (byte)((int)(values[i + 4] >>> 5));
      buf[off] = (byte)((int)(values[i + 4] << 3));
      var21 = off++;
      buf[var21] = (byte)((int)((long)buf[var21] | values[i + 5] >>> 14));
      buf[off++] = (byte)((int)(values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var21 = off++;
      buf[var21] = (byte)((int)((long)buf[var21] | values[i + 6] >>> 15));
      buf[off++] = (byte)((int)(values[i + 6] >>> 7));
      buf[off] = (byte)((int)(values[i + 6] << 1));
      var21 = off++;
      buf[var21] = (byte)((int)((long)buf[var21] | values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits18(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 10));
      buf[off++] = (byte)((int)(values[i + 0] >>> 2));
      buf[off] = (byte)((int)(values[i + 0] << 6));
      int var22 = off++;
      buf[var22] = (byte)((int)((long)buf[var22] | values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var22 = off++;
      buf[var22] = (byte)((int)((long)buf[var22] | values[i + 2] >>> 14));
      buf[off++] = (byte)((int)(values[i + 2] >>> 6));
      buf[off] = (byte)((int)(values[i + 2] << 2));
      var22 = off++;
      buf[var22] = (byte)((int)((long)buf[var22] | values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 10));
      buf[off++] = (byte)((int)(values[i + 4] >>> 2));
      buf[off] = (byte)((int)(values[i + 4] << 6));
      var22 = off++;
      buf[var22] = (byte)((int)((long)buf[var22] | values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var22 = off++;
      buf[var22] = (byte)((int)((long)buf[var22] | values[i + 6] >>> 14));
      buf[off++] = (byte)((int)(values[i + 6] >>> 6));
      buf[off] = (byte)((int)(values[i + 6] << 2));
      var22 = off++;
      buf[var22] = (byte)((int)((long)buf[var22] | values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits19(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 11));
      buf[off++] = (byte)((int)(values[i + 0] >>> 3));
      buf[off] = (byte)((int)(values[i + 0] << 5));
      int var23 = off++;
      buf[var23] = (byte)((int)((long)buf[var23] | values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var23 = off++;
      buf[var23] = (byte)((int)((long)buf[var23] | values[i + 2] >>> 17));
      buf[off++] = (byte)((int)(values[i + 2] >>> 9));
      buf[off++] = (byte)((int)(values[i + 2] >>> 1));
      buf[off] = (byte)((int)(values[i + 2] << 7));
      var23 = off++;
      buf[var23] = (byte)((int)((long)buf[var23] | values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var23 = off++;
      buf[var23] = (byte)((int)((long)buf[var23] | values[i + 4] >>> 15));
      var23 = off++;
      buf[var23] = (byte)((int)((long)buf[var23] | values[i + 4] >>> 7));
      buf[off] = (byte)((int)(values[i + 4] << 1));
      var23 = off++;
      buf[var23] = (byte)((int)((long)buf[var23] | values[i + 5] >>> 18));
      buf[off++] = (byte)((int)(values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var23 = off++;
      buf[var23] = (byte)((int)((long)buf[var23] | values[i + 6] >>> 13));
      buf[off++] = (byte)((int)(values[i + 6] >>> 5));
      buf[off] = (byte)((int)(values[i + 6] << 3));
      var23 = off++;
      buf[var23] = (byte)((int)((long)buf[var23] | values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits20(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 12));
      buf[off++] = (byte)((int)(values[i + 0] >>> 4));
      buf[off] = (byte)((int)(values[i + 0] << 4));
      int var24 = off++;
      buf[var24] = (byte)((int)((long)buf[var24] | values[i + 1] >>> 16));
      buf[off++] = (byte)((int)(values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 12));
      buf[off++] = (byte)((int)(values[i + 2] >>> 4));
      buf[off] = (byte)((int)(values[i + 2] << 4));
      var24 = off++;
      buf[var24] = (byte)((int)((long)buf[var24] | values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 12));
      buf[off++] = (byte)((int)(values[i + 4] >>> 4));
      buf[off] = (byte)((int)(values[i + 4] << 4));
      var24 = off++;
      buf[var24] = (byte)((int)((long)buf[var24] | values[i + 5] >>> 16));
      buf[off++] = (byte)((int)(values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 12));
      buf[off++] = (byte)((int)(values[i + 6] >>> 4));
      buf[off] = (byte)((int)(values[i + 6] << 4));
      var24 = off++;
      buf[var24] = (byte)((int)((long)buf[var24] | values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits21(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 13));
      buf[off++] = (byte)((int)(values[i + 0] >>> 5));
      buf[off] = (byte)((int)(values[i + 0] << 3));
      int var25 = off++;
      buf[var25] = (byte)((int)((long)buf[var25] | values[i + 1] >>> 18));
      buf[off++] = (byte)((int)(values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var25 = off++;
      buf[var25] = (byte)((int)((long)buf[var25] | values[i + 2] >>> 15));
      buf[off++] = (byte)((int)(values[i + 2] >>> 7));
      buf[off] = (byte)((int)(values[i + 2] << 1));
      var25 = off++;
      buf[var25] = (byte)((int)((long)buf[var25] | values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var25 = off++;
      buf[var25] = (byte)((int)((long)buf[var25] | values[i + 4] >>> 17));
      buf[off++] = (byte)((int)(values[i + 4] >>> 9));
      buf[off++] = (byte)((int)(values[i + 4] >>> 1));
      buf[off] = (byte)((int)(values[i + 4] << 7));
      var25 = off++;
      buf[var25] = (byte)((int)((long)buf[var25] | values[i + 5] >>> 14));
      buf[off++] = (byte)((int)(values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var25 = off++;
      buf[var25] = (byte)((int)((long)buf[var25] | values[i + 6] >>> 19));
      buf[off++] = (byte)((int)(values[i + 6] >>> 11));
      buf[off++] = (byte)((int)(values[i + 6] >>> 3));
      buf[off] = (byte)((int)(values[i + 6] << 5));
      var25 = off++;
      buf[var25] = (byte)((int)((long)buf[var25] | values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits22(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 14));
      buf[off++] = (byte)((int)(values[i + 0] >>> 6));
      buf[off] = (byte)((int)(values[i + 0] << 2));
      int var26 = off++;
      buf[var26] = (byte)((int)((long)buf[var26] | values[i + 1] >>> 20));
      buf[off++] = (byte)((int)(values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var26 = off++;
      buf[var26] = (byte)((int)((long)buf[var26] | values[i + 2] >>> 18));
      buf[off++] = (byte)((int)(values[i + 2] >>> 10));
      buf[off++] = (byte)((int)(values[i + 2] >>> 2));
      buf[off] = (byte)((int)(values[i + 2] << 6));
      var26 = off++;
      buf[var26] = (byte)((int)((long)buf[var26] | values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 14));
      buf[off++] = (byte)((int)(values[i + 4] >>> 6));
      buf[off] = (byte)((int)(values[i + 4] << 2));
      var26 = off++;
      buf[var26] = (byte)((int)((long)buf[var26] | values[i + 5] >>> 20));
      buf[off++] = (byte)((int)(values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var26 = off++;
      buf[var26] = (byte)((int)((long)buf[var26] | values[i + 6] >>> 18));
      buf[off++] = (byte)((int)(values[i + 6] >>> 10));
      buf[off++] = (byte)((int)(values[i + 6] >>> 2));
      buf[off] = (byte)((int)(values[i + 6] << 6));
      var26 = off++;
      buf[var26] = (byte)((int)((long)buf[var26] | values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits23(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 15));
      buf[off++] = (byte)((int)(values[i + 0] >>> 7));
      buf[off] = (byte)((int)(values[i + 0] << 1));
      int var27 = off++;
      buf[var27] = (byte)((int)((long)buf[var27] | values[i + 1] >>> 22));
      buf[off++] = (byte)((int)(values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var27 = off++;
      buf[var27] = (byte)((int)((long)buf[var27] | values[i + 2] >>> 21));
      buf[off++] = (byte)((int)(values[i + 2] >>> 13));
      buf[off++] = (byte)((int)(values[i + 2] >>> 5));
      buf[off] = (byte)((int)(values[i + 2] << 3));
      var27 = off++;
      buf[var27] = (byte)((int)((long)buf[var27] | values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var27 = off++;
      buf[var27] = (byte)((int)((long)buf[var27] | values[i + 4] >>> 19));
      buf[off++] = (byte)((int)(values[i + 4] >>> 11));
      buf[off++] = (byte)((int)(values[i + 4] >>> 3));
      buf[off] = (byte)((int)(values[i + 4] << 5));
      var27 = off++;
      buf[var27] = (byte)((int)((long)buf[var27] | values[i + 5] >>> 18));
      buf[off++] = (byte)((int)(values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var27 = off++;
      buf[var27] = (byte)((int)((long)buf[var27] | values[i + 6] >>> 17));
      buf[off++] = (byte)((int)(values[i + 6] >>> 9));
      buf[off++] = (byte)((int)(values[i + 6] >>> 1));
      buf[off] = (byte)((int)(values[i + 6] << 7));
      var27 = off++;
      buf[var27] = (byte)((int)((long)buf[var27] | values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits24(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 16));
      buf[off++] = (byte)((int)(values[i + 0] >>> 8));
      buf[off++] = (byte)((int)values[i + 0]);
      buf[off++] = (byte)((int)(values[i + 1] >>> 16));
      buf[off++] = (byte)((int)(values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 16));
      buf[off++] = (byte)((int)(values[i + 2] >>> 8));
      buf[off++] = (byte)((int)values[i + 2]);
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 16));
      buf[off++] = (byte)((int)(values[i + 4] >>> 8));
      buf[off++] = (byte)((int)values[i + 4]);
      buf[off++] = (byte)((int)(values[i + 5] >>> 16));
      buf[off++] = (byte)((int)(values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 16));
      buf[off++] = (byte)((int)(values[i + 6] >>> 8));
      buf[off++] = (byte)((int)values[i + 6]);
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits25(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 17));
      buf[off++] = (byte)((int)(values[i + 0] >>> 9));
      buf[off++] = (byte)((int)(values[i + 0] >>> 1));
      buf[off] = (byte)((int)(values[i + 0] << 7));
      int var30 = off++;
      buf[var30] = (byte)((int)((long)buf[var30] | values[i + 1] >>> 18));
      buf[off++] = (byte)((int)(values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var30 = off++;
      buf[var30] = (byte)((int)((long)buf[var30] | values[i + 2] >>> 19));
      buf[off++] = (byte)((int)(values[i + 2] >>> 11));
      buf[off++] = (byte)((int)(values[i + 2] >>> 3));
      buf[off] = (byte)((int)(values[i + 2] << 5));
      var30 = off++;
      buf[var30] = (byte)((int)((long)buf[var30] | values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var30 = off++;
      buf[var30] = (byte)((int)((long)buf[var30] | values[i + 4] >>> 21));
      buf[off++] = (byte)((int)(values[i + 4] >>> 13));
      buf[off++] = (byte)((int)(values[i + 4] >>> 5));
      buf[off] = (byte)((int)(values[i + 4] << 3));
      var30 = off++;
      buf[var30] = (byte)((int)((long)buf[var30] | values[i + 5] >>> 22));
      buf[off++] = (byte)((int)(values[i + 5] >>> 14));
      buf[off++] = (byte)((int)(values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var30 = off++;
      buf[var30] = (byte)((int)((long)buf[var30] | values[i + 6] >>> 23));
      buf[off++] = (byte)((int)(values[i + 6] >>> 15));
      buf[off++] = (byte)((int)(values[i + 6] >>> 7));
      buf[off] = (byte)((int)(values[i + 6] << 1));
      var30 = off++;
      buf[var30] = (byte)((int)((long)buf[var30] | values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits26(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 18));
      buf[off++] = (byte)((int)(values[i + 0] >>> 10));
      buf[off++] = (byte)((int)(values[i + 0] >>> 2));
      buf[off] = (byte)((int)(values[i + 0] << 6));
      int var31 = off++;
      buf[var31] = (byte)((int)((long)buf[var31] | values[i + 1] >>> 20));
      buf[off++] = (byte)((int)(values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var31 = off++;
      buf[var31] = (byte)((int)((long)buf[var31] | values[i + 2] >>> 22));
      buf[off++] = (byte)((int)(values[i + 2] >>> 14));
      buf[off++] = (byte)((int)(values[i + 2] >>> 6));
      buf[off] = (byte)((int)(values[i + 2] << 2));
      var31 = off++;
      buf[var31] = (byte)((int)((long)buf[var31] | values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 18));
      buf[off++] = (byte)((int)(values[i + 4] >>> 10));
      buf[off++] = (byte)((int)(values[i + 4] >>> 2));
      buf[off] = (byte)((int)(values[i + 4] << 6));
      var31 = off++;
      buf[var31] = (byte)((int)((long)buf[var31] | values[i + 5] >>> 20));
      buf[off++] = (byte)((int)(values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var31 = off++;
      buf[var31] = (byte)((int)((long)buf[var31] | values[i + 6] >>> 22));
      buf[off++] = (byte)((int)(values[i + 6] >>> 14));
      buf[off++] = (byte)((int)(values[i + 6] >>> 6));
      buf[off] = (byte)((int)(values[i + 6] << 2));
      var31 = off++;
      buf[var31] = (byte)((int)((long)buf[var31] | values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits27(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 19));
      buf[off++] = (byte)((int)(values[i + 0] >>> 11));
      buf[off++] = (byte)((int)(values[i + 0] >>> 3));
      buf[off] = (byte)((int)(values[i + 0] << 5));
      int var32 = off++;
      buf[var32] = (byte)((int)((long)buf[var32] | values[i + 1] >>> 22));
      buf[off++] = (byte)((int)(values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var32 = off++;
      buf[var32] = (byte)((int)((long)buf[var32] | values[i + 2] >>> 25));
      buf[off++] = (byte)((int)(values[i + 2] >>> 17));
      buf[off++] = (byte)((int)(values[i + 2] >>> 9));
      buf[off++] = (byte)((int)(values[i + 2] >>> 1));
      buf[off] = (byte)((int)(values[i + 2] << 7));
      var32 = off++;
      buf[var32] = (byte)((int)((long)buf[var32] | values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var32 = off++;
      buf[var32] = (byte)((int)((long)buf[var32] | values[i + 4] >>> 23));
      buf[off++] = (byte)((int)(values[i + 4] >>> 15));
      buf[off++] = (byte)((int)(values[i + 4] >>> 7));
      buf[off] = (byte)((int)(values[i + 4] << 1));
      var32 = off++;
      buf[var32] = (byte)((int)((long)buf[var32] | values[i + 5] >>> 26));
      buf[off++] = (byte)((int)(values[i + 5] >>> 18));
      buf[off++] = (byte)((int)(values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var32 = off++;
      buf[var32] = (byte)((int)((long)buf[var32] | values[i + 6] >>> 21));
      buf[off++] = (byte)((int)(values[i + 6] >>> 13));
      buf[off++] = (byte)((int)(values[i + 6] >>> 5));
      buf[off] = (byte)((int)(values[i + 6] << 3));
      var32 = off++;
      buf[var32] = (byte)((int)((long)buf[var32] | values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits28(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 20));
      buf[off++] = (byte)((int)(values[i + 0] >>> 12));
      buf[off++] = (byte)((int)(values[i + 0] >>> 4));
      buf[off] = (byte)((int)(values[i + 0] << 4));
      int var33 = off++;
      buf[var33] = (byte)((int)((long)buf[var33] | values[i + 1] >>> 24));
      buf[off++] = (byte)((int)(values[i + 1] >>> 16));
      buf[off++] = (byte)((int)(values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 20));
      buf[off++] = (byte)((int)(values[i + 2] >>> 12));
      buf[off++] = (byte)((int)(values[i + 2] >>> 4));
      buf[off] = (byte)((int)(values[i + 2] << 4));
      var33 = off++;
      buf[var33] = (byte)((int)((long)buf[var33] | values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 20));
      buf[off++] = (byte)((int)(values[i + 4] >>> 12));
      buf[off++] = (byte)((int)(values[i + 4] >>> 4));
      buf[off] = (byte)((int)(values[i + 4] << 4));
      var33 = off++;
      buf[var33] = (byte)((int)((long)buf[var33] | values[i + 5] >>> 24));
      buf[off++] = (byte)((int)(values[i + 5] >>> 16));
      buf[off++] = (byte)((int)(values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 20));
      buf[off++] = (byte)((int)(values[i + 6] >>> 12));
      buf[off++] = (byte)((int)(values[i + 6] >>> 4));
      buf[off] = (byte)((int)(values[i + 6] << 4));
      var33 = off++;
      buf[var33] = (byte)((int)((long)buf[var33] | values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits29(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 21));
      buf[off++] = (byte)((int)(values[i + 0] >>> 13));
      buf[off++] = (byte)((int)(values[i + 0] >>> 5));
      buf[off] = (byte)((int)(values[i + 0] << 3));
      int var34 = off++;
      buf[var34] = (byte)((int)((long)buf[var34] | values[i + 1] >>> 26));
      buf[off++] = (byte)((int)(values[i + 1] >>> 18));
      buf[off++] = (byte)((int)(values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var34 = off++;
      buf[var34] = (byte)((int)((long)buf[var34] | values[i + 2] >>> 23));
      buf[off++] = (byte)((int)(values[i + 2] >>> 15));
      buf[off++] = (byte)((int)(values[i + 2] >>> 7));
      buf[off] = (byte)((int)(values[i + 2] << 1));
      var34 = off++;
      buf[var34] = (byte)((int)((long)buf[var34] | values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var34 = off++;
      buf[var34] = (byte)((int)((long)buf[var34] | values[i + 4] >>> 25));
      buf[off++] = (byte)((int)(values[i + 4] >>> 17));
      buf[off++] = (byte)((int)(values[i + 4] >>> 9));
      buf[off++] = (byte)((int)(values[i + 4] >>> 1));
      buf[off] = (byte)((int)(values[i + 4] << 7));
      var34 = off++;
      buf[var34] = (byte)((int)((long)buf[var34] | values[i + 5] >>> 22));
      buf[off++] = (byte)((int)(values[i + 5] >>> 14));
      buf[off++] = (byte)((int)(values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var34 = off++;
      buf[var34] = (byte)((int)((long)buf[var34] | values[i + 6] >>> 27));
      buf[off++] = (byte)((int)(values[i + 6] >>> 19));
      buf[off++] = (byte)((int)(values[i + 6] >>> 11));
      buf[off++] = (byte)((int)(values[i + 6] >>> 3));
      buf[off] = (byte)((int)(values[i + 6] << 5));
      var34 = off++;
      buf[var34] = (byte)((int)((long)buf[var34] | values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits30(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 22));
      buf[off++] = (byte)((int)(values[i + 0] >>> 14));
      buf[off++] = (byte)((int)(values[i + 0] >>> 6));
      buf[off] = (byte)((int)(values[i + 0] << 2));
      int var35 = off++;
      buf[var35] = (byte)((int)((long)buf[var35] | values[i + 1] >>> 28));
      buf[off++] = (byte)((int)(values[i + 1] >>> 20));
      buf[off++] = (byte)((int)(values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var35 = off++;
      buf[var35] = (byte)((int)((long)buf[var35] | values[i + 2] >>> 26));
      buf[off++] = (byte)((int)(values[i + 2] >>> 18));
      buf[off++] = (byte)((int)(values[i + 2] >>> 10));
      buf[off++] = (byte)((int)(values[i + 2] >>> 2));
      buf[off] = (byte)((int)(values[i + 2] << 6));
      var35 = off++;
      buf[var35] = (byte)((int)((long)buf[var35] | values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 22));
      buf[off++] = (byte)((int)(values[i + 4] >>> 14));
      buf[off++] = (byte)((int)(values[i + 4] >>> 6));
      buf[off] = (byte)((int)(values[i + 4] << 2));
      var35 = off++;
      buf[var35] = (byte)((int)((long)buf[var35] | values[i + 5] >>> 28));
      buf[off++] = (byte)((int)(values[i + 5] >>> 20));
      buf[off++] = (byte)((int)(values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var35 = off++;
      buf[var35] = (byte)((int)((long)buf[var35] | values[i + 6] >>> 26));
      buf[off++] = (byte)((int)(values[i + 6] >>> 18));
      buf[off++] = (byte)((int)(values[i + 6] >>> 10));
      buf[off++] = (byte)((int)(values[i + 6] >>> 2));
      buf[off] = (byte)((int)(values[i + 6] << 6));
      var35 = off++;
      buf[var35] = (byte)((int)((long)buf[var35] | values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits31(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 23));
      buf[off++] = (byte)((int)(values[i + 0] >>> 15));
      buf[off++] = (byte)((int)(values[i + 0] >>> 7));
      buf[off] = (byte)((int)(values[i + 0] << 1));
      int var36 = off++;
      buf[var36] = (byte)((int)((long)buf[var36] | values[i + 1] >>> 30));
      buf[off++] = (byte)((int)(values[i + 1] >>> 22));
      buf[off++] = (byte)((int)(values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var36 = off++;
      buf[var36] = (byte)((int)((long)buf[var36] | values[i + 2] >>> 29));
      buf[off++] = (byte)((int)(values[i + 2] >>> 21));
      buf[off++] = (byte)((int)(values[i + 2] >>> 13));
      buf[off++] = (byte)((int)(values[i + 2] >>> 5));
      buf[off] = (byte)((int)(values[i + 2] << 3));
      var36 = off++;
      buf[var36] = (byte)((int)((long)buf[var36] | values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var36 = off++;
      buf[var36] = (byte)((int)((long)buf[var36] | values[i + 4] >>> 27));
      buf[off++] = (byte)((int)(values[i + 4] >>> 19));
      buf[off++] = (byte)((int)(values[i + 4] >>> 11));
      buf[off++] = (byte)((int)(values[i + 4] >>> 3));
      buf[off] = (byte)((int)(values[i + 4] << 5));
      var36 = off++;
      buf[var36] = (byte)((int)((long)buf[var36] | values[i + 5] >>> 26));
      buf[off++] = (byte)((int)(values[i + 5] >>> 18));
      buf[off++] = (byte)((int)(values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var36 = off++;
      buf[var36] = (byte)((int)((long)buf[var36] | values[i + 6] >>> 25));
      buf[off++] = (byte)((int)(values[i + 6] >>> 17));
      buf[off++] = (byte)((int)(values[i + 6] >>> 9));
      buf[off++] = (byte)((int)(values[i + 6] >>> 1));
      buf[off] = (byte)((int)(values[i + 6] << 7));
      var36 = off++;
      buf[var36] = (byte)((int)((long)buf[var36] | values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits32(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 24));
      buf[off++] = (byte)((int)(values[i + 0] >>> 16));
      buf[off++] = (byte)((int)(values[i + 0] >>> 8));
      buf[off++] = (byte)((int)values[i + 0]);
      buf[off++] = (byte)((int)(values[i + 1] >>> 24));
      buf[off++] = (byte)((int)(values[i + 1] >>> 16));
      buf[off++] = (byte)((int)(values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 24));
      buf[off++] = (byte)((int)(values[i + 2] >>> 16));
      buf[off++] = (byte)((int)(values[i + 2] >>> 8));
      buf[off++] = (byte)((int)values[i + 2]);
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 24));
      buf[off++] = (byte)((int)(values[i + 4] >>> 16));
      buf[off++] = (byte)((int)(values[i + 4] >>> 8));
      buf[off++] = (byte)((int)values[i + 4]);
      buf[off++] = (byte)((int)(values[i + 5] >>> 24));
      buf[off++] = (byte)((int)(values[i + 5] >>> 16));
      buf[off++] = (byte)((int)(values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 24));
      buf[off++] = (byte)((int)(values[i + 6] >>> 16));
      buf[off++] = (byte)((int)(values[i + 6] >>> 8));
      buf[off++] = (byte)((int)values[i + 6]);
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits33(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 25));
      buf[off++] = (byte)((int)(values[i + 0] >>> 17));
      buf[off++] = (byte)((int)(values[i + 0] >>> 9));
      buf[off++] = (byte)((int)(values[i + 0] >>> 1));
      buf[off] = (byte)((int)(values[i + 0] << 7));
      int var39 = off++;
      buf[var39] = (byte)((int)((long)buf[var39] | values[i + 1] >>> 26));
      buf[off++] = (byte)((int)(values[i + 1] >>> 18));
      buf[off++] = (byte)((int)(values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var39 = off++;
      buf[var39] = (byte)((int)((long)buf[var39] | values[i + 2] >>> 27));
      buf[off++] = (byte)((int)(values[i + 2] >>> 19));
      buf[off++] = (byte)((int)(values[i + 2] >>> 11));
      buf[off++] = (byte)((int)(values[i + 2] >>> 3));
      buf[off] = (byte)((int)(values[i + 2] << 5));
      var39 = off++;
      buf[var39] = (byte)((int)((long)buf[var39] | values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var39 = off++;
      buf[var39] = (byte)((int)((long)buf[var39] | values[i + 4] >>> 29));
      buf[off++] = (byte)((int)(values[i + 4] >>> 21));
      buf[off++] = (byte)((int)(values[i + 4] >>> 13));
      buf[off++] = (byte)((int)(values[i + 4] >>> 5));
      buf[off] = (byte)((int)(values[i + 4] << 3));
      var39 = off++;
      buf[var39] = (byte)((int)((long)buf[var39] | values[i + 5] >>> 30));
      buf[off++] = (byte)((int)(values[i + 5] >>> 22));
      buf[off++] = (byte)((int)(values[i + 5] >>> 14));
      buf[off++] = (byte)((int)(values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var39 = off++;
      buf[var39] = (byte)((int)((long)buf[var39] | values[i + 6] >>> 31));
      buf[off++] = (byte)((int)(values[i + 6] >>> 23));
      buf[off++] = (byte)((int)(values[i + 6] >>> 15));
      buf[off++] = (byte)((int)(values[i + 6] >>> 7));
      buf[off] = (byte)((int)(values[i + 6] << 1));
      var39 = off++;
      buf[var39] = (byte)((int)((long)buf[var39] | values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits34(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 26));
      buf[off++] = (byte)((int)(values[i + 0] >>> 18));
      buf[off++] = (byte)((int)(values[i + 0] >>> 10));
      buf[off++] = (byte)((int)(values[i + 0] >>> 2));
      buf[off] = (byte)((int)(values[i + 0] << 6));
      int var40 = off++;
      buf[var40] = (byte)((int)((long)buf[var40] | values[i + 1] >>> 28));
      buf[off++] = (byte)((int)(values[i + 1] >>> 20));
      buf[off++] = (byte)((int)(values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var40 = off++;
      buf[var40] = (byte)((int)((long)buf[var40] | values[i + 2] >>> 30));
      buf[off++] = (byte)((int)(values[i + 2] >>> 22));
      buf[off++] = (byte)((int)(values[i + 2] >>> 14));
      buf[off++] = (byte)((int)(values[i + 2] >>> 6));
      buf[off] = (byte)((int)(values[i + 2] << 2));
      var40 = off++;
      buf[var40] = (byte)((int)((long)buf[var40] | values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 26));
      buf[off++] = (byte)((int)(values[i + 4] >>> 18));
      buf[off++] = (byte)((int)(values[i + 4] >>> 10));
      buf[off++] = (byte)((int)(values[i + 4] >>> 2));
      buf[off] = (byte)((int)(values[i + 4] << 6));
      var40 = off++;
      buf[var40] = (byte)((int)((long)buf[var40] | values[i + 5] >>> 28));
      buf[off++] = (byte)((int)(values[i + 5] >>> 20));
      buf[off++] = (byte)((int)(values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var40 = off++;
      buf[var40] = (byte)((int)((long)buf[var40] | values[i + 6] >>> 30));
      buf[off++] = (byte)((int)(values[i + 6] >>> 22));
      buf[off++] = (byte)((int)(values[i + 6] >>> 14));
      buf[off++] = (byte)((int)(values[i + 6] >>> 6));
      buf[off] = (byte)((int)(values[i + 6] << 2));
      var40 = off++;
      buf[var40] = (byte)((int)((long)buf[var40] | values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits35(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 27));
      buf[off++] = (byte)((int)(values[i + 0] >>> 19));
      buf[off++] = (byte)((int)(values[i + 0] >>> 11));
      buf[off++] = (byte)((int)(values[i + 0] >>> 3));
      buf[off] = (byte)((int)(values[i + 0] << 5));
      int var41 = off++;
      buf[var41] = (byte)((int)((long)buf[var41] | values[i + 1] >>> 30));
      buf[off++] = (byte)((int)(values[i + 1] >>> 22));
      buf[off++] = (byte)((int)(values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var41 = off++;
      buf[var41] = (byte)((int)((long)buf[var41] | values[i + 2] >>> 33));
      buf[off++] = (byte)((int)(values[i + 2] >>> 25));
      buf[off++] = (byte)((int)(values[i + 2] >>> 17));
      buf[off++] = (byte)((int)(values[i + 2] >>> 9));
      buf[off++] = (byte)((int)(values[i + 2] >>> 1));
      buf[off] = (byte)((int)(values[i + 2] << 7));
      var41 = off++;
      buf[var41] = (byte)((int)((long)buf[var41] | values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var41 = off++;
      buf[var41] = (byte)((int)((long)buf[var41] | values[i + 4] >>> 31));
      buf[off++] = (byte)((int)(values[i + 4] >>> 23));
      buf[off++] = (byte)((int)(values[i + 4] >>> 15));
      buf[off++] = (byte)((int)(values[i + 4] >>> 7));
      buf[off] = (byte)((int)(values[i + 4] << 1));
      var41 = off++;
      buf[var41] = (byte)((int)((long)buf[var41] | values[i + 5] >>> 34));
      buf[off++] = (byte)((int)(values[i + 5] >>> 26));
      buf[off++] = (byte)((int)(values[i + 5] >>> 18));
      buf[off++] = (byte)((int)(values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var41 = off++;
      buf[var41] = (byte)((int)((long)buf[var41] | values[i + 6] >>> 29));
      buf[off++] = (byte)((int)(values[i + 6] >>> 21));
      buf[off++] = (byte)((int)(values[i + 6] >>> 13));
      buf[off++] = (byte)((int)(values[i + 6] >>> 5));
      buf[off] = (byte)((int)(values[i + 6] << 3));
      var41 = off++;
      buf[var41] = (byte)((int)((long)buf[var41] | values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits36(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 28));
      buf[off++] = (byte)((int)(values[i + 0] >>> 20));
      buf[off++] = (byte)((int)(values[i + 0] >>> 12));
      buf[off++] = (byte)((int)(values[i + 0] >>> 4));
      buf[off] = (byte)((int)(values[i + 0] << 4));
      int var42 = off++;
      buf[var42] = (byte)((int)((long)buf[var42] | values[i + 1] >>> 32));
      buf[off++] = (byte)((int)(values[i + 1] >>> 24));
      buf[off++] = (byte)((int)(values[i + 1] >>> 16));
      buf[off++] = (byte)((int)(values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 28));
      buf[off++] = (byte)((int)(values[i + 2] >>> 20));
      buf[off++] = (byte)((int)(values[i + 2] >>> 12));
      buf[off++] = (byte)((int)(values[i + 2] >>> 4));
      buf[off] = (byte)((int)(values[i + 2] << 4));
      var42 = off++;
      buf[var42] = (byte)((int)((long)buf[var42] | values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 28));
      buf[off++] = (byte)((int)(values[i + 4] >>> 20));
      buf[off++] = (byte)((int)(values[i + 4] >>> 12));
      buf[off++] = (byte)((int)(values[i + 4] >>> 4));
      buf[off] = (byte)((int)(values[i + 4] << 4));
      var42 = off++;
      buf[var42] = (byte)((int)((long)buf[var42] | values[i + 5] >>> 32));
      buf[off++] = (byte)((int)(values[i + 5] >>> 24));
      buf[off++] = (byte)((int)(values[i + 5] >>> 16));
      buf[off++] = (byte)((int)(values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 28));
      buf[off++] = (byte)((int)(values[i + 6] >>> 20));
      buf[off++] = (byte)((int)(values[i + 6] >>> 12));
      buf[off++] = (byte)((int)(values[i + 6] >>> 4));
      buf[off] = (byte)((int)(values[i + 6] << 4));
      var42 = off++;
      buf[var42] = (byte)((int)((long)buf[var42] | values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits37(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 29));
      buf[off++] = (byte)((int)(values[i + 0] >>> 21));
      buf[off++] = (byte)((int)(values[i + 0] >>> 13));
      buf[off++] = (byte)((int)(values[i + 0] >>> 5));
      buf[off] = (byte)((int)(values[i + 0] << 3));
      int var43 = off++;
      buf[var43] = (byte)((int)((long)buf[var43] | values[i + 1] >>> 34));
      buf[off++] = (byte)((int)(values[i + 1] >>> 26));
      buf[off++] = (byte)((int)(values[i + 1] >>> 18));
      buf[off++] = (byte)((int)(values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var43 = off++;
      buf[var43] = (byte)((int)((long)buf[var43] | values[i + 2] >>> 31));
      buf[off++] = (byte)((int)(values[i + 2] >>> 23));
      buf[off++] = (byte)((int)(values[i + 2] >>> 15));
      buf[off++] = (byte)((int)(values[i + 2] >>> 7));
      buf[off] = (byte)((int)(values[i + 2] << 1));
      var43 = off++;
      buf[var43] = (byte)((int)((long)buf[var43] | values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var43 = off++;
      buf[var43] = (byte)((int)((long)buf[var43] | values[i + 4] >>> 33));
      buf[off++] = (byte)((int)(values[i + 4] >>> 25));
      buf[off++] = (byte)((int)(values[i + 4] >>> 17));
      buf[off++] = (byte)((int)(values[i + 4] >>> 9));
      buf[off++] = (byte)((int)(values[i + 4] >>> 1));
      buf[off] = (byte)((int)(values[i + 4] << 7));
      var43 = off++;
      buf[var43] = (byte)((int)((long)buf[var43] | values[i + 5] >>> 30));
      buf[off++] = (byte)((int)(values[i + 5] >>> 22));
      buf[off++] = (byte)((int)(values[i + 5] >>> 14));
      buf[off++] = (byte)((int)(values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var43 = off++;
      buf[var43] = (byte)((int)((long)buf[var43] | values[i + 6] >>> 35));
      buf[off++] = (byte)((int)(values[i + 6] >>> 27));
      buf[off++] = (byte)((int)(values[i + 6] >>> 19));
      buf[off++] = (byte)((int)(values[i + 6] >>> 11));
      buf[off++] = (byte)((int)(values[i + 6] >>> 3));
      buf[off] = (byte)((int)(values[i + 6] << 5));
      var43 = off++;
      buf[var43] = (byte)((int)((long)buf[var43] | values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits38(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 30));
      buf[off++] = (byte)((int)(values[i + 0] >>> 22));
      buf[off++] = (byte)((int)(values[i + 0] >>> 14));
      buf[off++] = (byte)((int)(values[i + 0] >>> 6));
      buf[off] = (byte)((int)(values[i + 0] << 2));
      int var44 = off++;
      buf[var44] = (byte)((int)((long)buf[var44] | values[i + 1] >>> 36));
      buf[off++] = (byte)((int)(values[i + 1] >>> 28));
      buf[off++] = (byte)((int)(values[i + 1] >>> 20));
      buf[off++] = (byte)((int)(values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var44 = off++;
      buf[var44] = (byte)((int)((long)buf[var44] | values[i + 2] >>> 34));
      buf[off++] = (byte)((int)(values[i + 2] >>> 26));
      buf[off++] = (byte)((int)(values[i + 2] >>> 18));
      buf[off++] = (byte)((int)(values[i + 2] >>> 10));
      buf[off++] = (byte)((int)(values[i + 2] >>> 2));
      buf[off] = (byte)((int)(values[i + 2] << 6));
      var44 = off++;
      buf[var44] = (byte)((int)((long)buf[var44] | values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 30));
      buf[off++] = (byte)((int)(values[i + 4] >>> 22));
      buf[off++] = (byte)((int)(values[i + 4] >>> 14));
      buf[off++] = (byte)((int)(values[i + 4] >>> 6));
      buf[off] = (byte)((int)(values[i + 4] << 2));
      var44 = off++;
      buf[var44] = (byte)((int)((long)buf[var44] | values[i + 5] >>> 36));
      buf[off++] = (byte)((int)(values[i + 5] >>> 28));
      buf[off++] = (byte)((int)(values[i + 5] >>> 20));
      buf[off++] = (byte)((int)(values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var44 = off++;
      buf[var44] = (byte)((int)((long)buf[var44] | values[i + 6] >>> 34));
      buf[off++] = (byte)((int)(values[i + 6] >>> 26));
      buf[off++] = (byte)((int)(values[i + 6] >>> 18));
      buf[off++] = (byte)((int)(values[i + 6] >>> 10));
      buf[off++] = (byte)((int)(values[i + 6] >>> 2));
      buf[off] = (byte)((int)(values[i + 6] << 6));
      var44 = off++;
      buf[var44] = (byte)((int)((long)buf[var44] | values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits39(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 31));
      buf[off++] = (byte)((int)(values[i + 0] >>> 23));
      buf[off++] = (byte)((int)(values[i + 0] >>> 15));
      buf[off++] = (byte)((int)(values[i + 0] >>> 7));
      buf[off] = (byte)((int)(values[i + 0] << 1));
      int var45 = off++;
      buf[var45] = (byte)((int)((long)buf[var45] | values[i + 1] >>> 38));
      buf[off++] = (byte)((int)(values[i + 1] >>> 30));
      buf[off++] = (byte)((int)(values[i + 1] >>> 22));
      buf[off++] = (byte)((int)(values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var45 = off++;
      buf[var45] = (byte)((int)((long)buf[var45] | values[i + 2] >>> 37));
      buf[off++] = (byte)((int)(values[i + 2] >>> 29));
      buf[off++] = (byte)((int)(values[i + 2] >>> 21));
      buf[off++] = (byte)((int)(values[i + 2] >>> 13));
      buf[off++] = (byte)((int)(values[i + 2] >>> 5));
      buf[off] = (byte)((int)(values[i + 2] << 3));
      var45 = off++;
      buf[var45] = (byte)((int)((long)buf[var45] | values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var45 = off++;
      buf[var45] = (byte)((int)((long)buf[var45] | values[i + 4] >>> 35));
      buf[off++] = (byte)((int)(values[i + 4] >>> 27));
      buf[off++] = (byte)((int)(values[i + 4] >>> 19));
      buf[off++] = (byte)((int)(values[i + 4] >>> 11));
      buf[off++] = (byte)((int)(values[i + 4] >>> 3));
      buf[off] = (byte)((int)(values[i + 4] << 5));
      var45 = off++;
      buf[var45] = (byte)((int)((long)buf[var45] | values[i + 5] >>> 34));
      buf[off++] = (byte)((int)(values[i + 5] >>> 26));
      buf[off++] = (byte)((int)(values[i + 5] >>> 18));
      buf[off++] = (byte)((int)(values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var45 = off++;
      buf[var45] = (byte)((int)((long)buf[var45] | values[i + 6] >>> 33));
      buf[off++] = (byte)((int)(values[i + 6] >>> 25));
      buf[off++] = (byte)((int)(values[i + 6] >>> 17));
      buf[off++] = (byte)((int)(values[i + 6] >>> 9));
      buf[off++] = (byte)((int)(values[i + 6] >>> 1));
      buf[off] = (byte)((int)(values[i + 6] << 7));
      var45 = off++;
      buf[var45] = (byte)((int)((long)buf[var45] | values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits40(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 32));
      buf[off++] = (byte)((int)(values[i + 0] >>> 24));
      buf[off++] = (byte)((int)(values[i + 0] >>> 16));
      buf[off++] = (byte)((int)(values[i + 0] >>> 8));
      buf[off++] = (byte)((int)values[i + 0]);
      buf[off++] = (byte)((int)(values[i + 1] >>> 32));
      buf[off++] = (byte)((int)(values[i + 1] >>> 24));
      buf[off++] = (byte)((int)(values[i + 1] >>> 16));
      buf[off++] = (byte)((int)(values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 32));
      buf[off++] = (byte)((int)(values[i + 2] >>> 24));
      buf[off++] = (byte)((int)(values[i + 2] >>> 16));
      buf[off++] = (byte)((int)(values[i + 2] >>> 8));
      buf[off++] = (byte)((int)values[i + 2]);
      buf[off++] = (byte)((int)(values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 32));
      buf[off++] = (byte)((int)(values[i + 4] >>> 24));
      buf[off++] = (byte)((int)(values[i + 4] >>> 16));
      buf[off++] = (byte)((int)(values[i + 4] >>> 8));
      buf[off++] = (byte)((int)values[i + 4]);
      buf[off++] = (byte)((int)(values[i + 5] >>> 32));
      buf[off++] = (byte)((int)(values[i + 5] >>> 24));
      buf[off++] = (byte)((int)(values[i + 5] >>> 16));
      buf[off++] = (byte)((int)(values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 32));
      buf[off++] = (byte)((int)(values[i + 6] >>> 24));
      buf[off++] = (byte)((int)(values[i + 6] >>> 16));
      buf[off++] = (byte)((int)(values[i + 6] >>> 8));
      buf[off++] = (byte)((int)values[i + 6]);
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits41(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 33));
      buf[off++] = (byte)((int)(values[i + 0] >>> 25));
      buf[off++] = (byte)((int)(values[i + 0] >>> 17));
      buf[off++] = (byte)((int)(values[i + 0] >>> 9));
      buf[off++] = (byte)((int)(values[i + 0] >>> 1));
      buf[off] = (byte)((int)(values[i + 0] << 7));
      int var48 = off++;
      buf[var48] = (byte)((int)((long)buf[var48] | values[i + 1] >>> 34));
      buf[off++] = (byte)((int)(values[i + 1] >>> 26));
      buf[off++] = (byte)((int)(values[i + 1] >>> 18));
      buf[off++] = (byte)((int)(values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var48 = off++;
      buf[var48] = (byte)((int)((long)buf[var48] | values[i + 2] >>> 35));
      buf[off++] = (byte)((int)(values[i + 2] >>> 27));
      buf[off++] = (byte)((int)(values[i + 2] >>> 19));
      buf[off++] = (byte)((int)(values[i + 2] >>> 11));
      buf[off++] = (byte)((int)(values[i + 2] >>> 3));
      buf[off] = (byte)((int)(values[i + 2] << 5));
      var48 = off++;
      buf[var48] = (byte)((int)((long)buf[var48] | values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var48 = off++;
      buf[var48] = (byte)((int)((long)buf[var48] | values[i + 4] >>> 37));
      buf[off++] = (byte)((int)(values[i + 4] >>> 29));
      buf[off++] = (byte)((int)(values[i + 4] >>> 21));
      buf[off++] = (byte)((int)(values[i + 4] >>> 13));
      buf[off++] = (byte)((int)(values[i + 4] >>> 5));
      buf[off] = (byte)((int)(values[i + 4] << 3));
      var48 = off++;
      buf[var48] = (byte)((int)((long)buf[var48] | values[i + 5] >>> 38));
      buf[off++] = (byte)((int)(values[i + 5] >>> 30));
      buf[off++] = (byte)((int)(values[i + 5] >>> 22));
      buf[off++] = (byte)((int)(values[i + 5] >>> 14));
      buf[off++] = (byte)((int)(values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var48 = off++;
      buf[var48] = (byte)((int)((long)buf[var48] | values[i + 6] >>> 39));
      buf[off++] = (byte)((int)(values[i + 6] >>> 31));
      buf[off++] = (byte)((int)(values[i + 6] >>> 23));
      buf[off++] = (byte)((int)(values[i + 6] >>> 15));
      buf[off++] = (byte)((int)(values[i + 6] >>> 7));
      buf[off] = (byte)((int)(values[i + 6] << 1));
      var48 = off++;
      buf[var48] = (byte)((int)((long)buf[var48] | values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits42(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 34));
      buf[off++] = (byte)((int)(values[i + 0] >>> 26));
      buf[off++] = (byte)((int)(values[i + 0] >>> 18));
      buf[off++] = (byte)((int)(values[i + 0] >>> 10));
      buf[off++] = (byte)((int)(values[i + 0] >>> 2));
      buf[off] = (byte)((int)(values[i + 0] << 6));
      int var49 = off++;
      buf[var49] = (byte)((int)((long)buf[var49] | values[i + 1] >>> 36));
      buf[off++] = (byte)((int)(values[i + 1] >>> 28));
      buf[off++] = (byte)((int)(values[i + 1] >>> 20));
      buf[off++] = (byte)((int)(values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var49 = off++;
      buf[var49] = (byte)((int)((long)buf[var49] | values[i + 2] >>> 38));
      buf[off++] = (byte)((int)(values[i + 2] >>> 30));
      buf[off++] = (byte)((int)(values[i + 2] >>> 22));
      buf[off++] = (byte)((int)(values[i + 2] >>> 14));
      buf[off++] = (byte)((int)(values[i + 2] >>> 6));
      buf[off] = (byte)((int)(values[i + 2] << 2));
      var49 = off++;
      buf[var49] = (byte)((int)((long)buf[var49] | values[i + 3] >>> 40));
      buf[off++] = (byte)((int)(values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 34));
      buf[off++] = (byte)((int)(values[i + 4] >>> 26));
      buf[off++] = (byte)((int)(values[i + 4] >>> 18));
      buf[off++] = (byte)((int)(values[i + 4] >>> 10));
      buf[off++] = (byte)((int)(values[i + 4] >>> 2));
      buf[off] = (byte)((int)(values[i + 4] << 6));
      var49 = off++;
      buf[var49] = (byte)((int)((long)buf[var49] | values[i + 5] >>> 36));
      buf[off++] = (byte)((int)(values[i + 5] >>> 28));
      buf[off++] = (byte)((int)(values[i + 5] >>> 20));
      buf[off++] = (byte)((int)(values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var49 = off++;
      buf[var49] = (byte)((int)((long)buf[var49] | values[i + 6] >>> 38));
      buf[off++] = (byte)((int)(values[i + 6] >>> 30));
      buf[off++] = (byte)((int)(values[i + 6] >>> 22));
      buf[off++] = (byte)((int)(values[i + 6] >>> 14));
      buf[off++] = (byte)((int)(values[i + 6] >>> 6));
      buf[off] = (byte)((int)(values[i + 6] << 2));
      var49 = off++;
      buf[var49] = (byte)((int)((long)buf[var49] | values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits43(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 35));
      buf[off++] = (byte)((int)(values[i + 0] >>> 27));
      buf[off++] = (byte)((int)(values[i + 0] >>> 19));
      buf[off++] = (byte)((int)(values[i + 0] >>> 11));
      buf[off++] = (byte)((int)(values[i + 0] >>> 3));
      buf[off] = (byte)((int)(values[i + 0] << 5));
      int var50 = off++;
      buf[var50] = (byte)((int)((long)buf[var50] | values[i + 1] >>> 38));
      buf[off++] = (byte)((int)(values[i + 1] >>> 30));
      buf[off++] = (byte)((int)(values[i + 1] >>> 22));
      buf[off++] = (byte)((int)(values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var50 = off++;
      buf[var50] = (byte)((int)((long)buf[var50] | values[i + 2] >>> 41));
      buf[off++] = (byte)((int)(values[i + 2] >>> 33));
      buf[off++] = (byte)((int)(values[i + 2] >>> 25));
      buf[off++] = (byte)((int)(values[i + 2] >>> 17));
      buf[off++] = (byte)((int)(values[i + 2] >>> 9));
      buf[off++] = (byte)((int)(values[i + 2] >>> 1));
      buf[off] = (byte)((int)(values[i + 2] << 7));
      var50 = off++;
      buf[var50] = (byte)((int)((long)buf[var50] | values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var50 = off++;
      buf[var50] = (byte)((int)((long)buf[var50] | values[i + 4] >>> 39));
      buf[off++] = (byte)((int)(values[i + 4] >>> 31));
      buf[off++] = (byte)((int)(values[i + 4] >>> 23));
      buf[off++] = (byte)((int)(values[i + 4] >>> 15));
      buf[off++] = (byte)((int)(values[i + 4] >>> 7));
      buf[off] = (byte)((int)(values[i + 4] << 1));
      var50 = off++;
      buf[var50] = (byte)((int)((long)buf[var50] | values[i + 5] >>> 42));
      buf[off++] = (byte)((int)(values[i + 5] >>> 34));
      buf[off++] = (byte)((int)(values[i + 5] >>> 26));
      buf[off++] = (byte)((int)(values[i + 5] >>> 18));
      buf[off++] = (byte)((int)(values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var50 = off++;
      buf[var50] = (byte)((int)((long)buf[var50] | values[i + 6] >>> 37));
      buf[off++] = (byte)((int)(values[i + 6] >>> 29));
      buf[off++] = (byte)((int)(values[i + 6] >>> 21));
      buf[off++] = (byte)((int)(values[i + 6] >>> 13));
      buf[off++] = (byte)((int)(values[i + 6] >>> 5));
      buf[off] = (byte)((int)(values[i + 6] << 3));
      var50 = off++;
      buf[var50] = (byte)((int)((long)buf[var50] | values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits44(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 36));
      buf[off++] = (byte)((int)(values[i + 0] >>> 28));
      buf[off++] = (byte)((int)(values[i + 0] >>> 20));
      buf[off++] = (byte)((int)(values[i + 0] >>> 12));
      buf[off++] = (byte)((int)(values[i + 0] >>> 4));
      buf[off] = (byte)((int)(values[i + 0] << 4));
      int var51 = off++;
      buf[var51] = (byte)((int)((long)buf[var51] | values[i + 1] >>> 40));
      buf[off++] = (byte)((int)(values[i + 1] >>> 32));
      buf[off++] = (byte)((int)(values[i + 1] >>> 24));
      buf[off++] = (byte)((int)(values[i + 1] >>> 16));
      buf[off++] = (byte)((int)(values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 36));
      buf[off++] = (byte)((int)(values[i + 2] >>> 28));
      buf[off++] = (byte)((int)(values[i + 2] >>> 20));
      buf[off++] = (byte)((int)(values[i + 2] >>> 12));
      buf[off++] = (byte)((int)(values[i + 2] >>> 4));
      buf[off] = (byte)((int)(values[i + 2] << 4));
      var51 = off++;
      buf[var51] = (byte)((int)((long)buf[var51] | values[i + 3] >>> 40));
      buf[off++] = (byte)((int)(values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 36));
      buf[off++] = (byte)((int)(values[i + 4] >>> 28));
      buf[off++] = (byte)((int)(values[i + 4] >>> 20));
      buf[off++] = (byte)((int)(values[i + 4] >>> 12));
      buf[off++] = (byte)((int)(values[i + 4] >>> 4));
      buf[off] = (byte)((int)(values[i + 4] << 4));
      var51 = off++;
      buf[var51] = (byte)((int)((long)buf[var51] | values[i + 5] >>> 40));
      buf[off++] = (byte)((int)(values[i + 5] >>> 32));
      buf[off++] = (byte)((int)(values[i + 5] >>> 24));
      buf[off++] = (byte)((int)(values[i + 5] >>> 16));
      buf[off++] = (byte)((int)(values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 36));
      buf[off++] = (byte)((int)(values[i + 6] >>> 28));
      buf[off++] = (byte)((int)(values[i + 6] >>> 20));
      buf[off++] = (byte)((int)(values[i + 6] >>> 12));
      buf[off++] = (byte)((int)(values[i + 6] >>> 4));
      buf[off] = (byte)((int)(values[i + 6] << 4));
      var51 = off++;
      buf[var51] = (byte)((int)((long)buf[var51] | values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits45(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 37));
      buf[off++] = (byte)((int)(values[i + 0] >>> 29));
      buf[off++] = (byte)((int)(values[i + 0] >>> 21));
      buf[off++] = (byte)((int)(values[i + 0] >>> 13));
      buf[off++] = (byte)((int)(values[i + 0] >>> 5));
      buf[off] = (byte)((int)(values[i + 0] << 3));
      int var52 = off++;
      buf[var52] = (byte)((int)((long)buf[var52] | values[i + 1] >>> 42));
      buf[off++] = (byte)((int)(values[i + 1] >>> 34));
      buf[off++] = (byte)((int)(values[i + 1] >>> 26));
      buf[off++] = (byte)((int)(values[i + 1] >>> 18));
      buf[off++] = (byte)((int)(values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var52 = off++;
      buf[var52] = (byte)((int)((long)buf[var52] | values[i + 2] >>> 39));
      buf[off++] = (byte)((int)(values[i + 2] >>> 31));
      buf[off++] = (byte)((int)(values[i + 2] >>> 23));
      buf[off++] = (byte)((int)(values[i + 2] >>> 15));
      buf[off++] = (byte)((int)(values[i + 2] >>> 7));
      buf[off] = (byte)((int)(values[i + 2] << 1));
      var52 = off++;
      buf[var52] = (byte)((int)((long)buf[var52] | values[i + 3] >>> 44));
      buf[off++] = (byte)((int)(values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var52 = off++;
      buf[var52] = (byte)((int)((long)buf[var52] | values[i + 4] >>> 41));
      buf[off++] = (byte)((int)(values[i + 4] >>> 33));
      buf[off++] = (byte)((int)(values[i + 4] >>> 25));
      buf[off++] = (byte)((int)(values[i + 4] >>> 17));
      buf[off++] = (byte)((int)(values[i + 4] >>> 9));
      buf[off++] = (byte)((int)(values[i + 4] >>> 1));
      buf[off] = (byte)((int)(values[i + 4] << 7));
      var52 = off++;
      buf[var52] = (byte)((int)((long)buf[var52] | values[i + 5] >>> 38));
      buf[off++] = (byte)((int)(values[i + 5] >>> 30));
      buf[off++] = (byte)((int)(values[i + 5] >>> 22));
      buf[off++] = (byte)((int)(values[i + 5] >>> 14));
      buf[off++] = (byte)((int)(values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var52 = off++;
      buf[var52] = (byte)((int)((long)buf[var52] | values[i + 6] >>> 43));
      buf[off++] = (byte)((int)(values[i + 6] >>> 35));
      buf[off++] = (byte)((int)(values[i + 6] >>> 27));
      buf[off++] = (byte)((int)(values[i + 6] >>> 19));
      buf[off++] = (byte)((int)(values[i + 6] >>> 11));
      buf[off++] = (byte)((int)(values[i + 6] >>> 3));
      buf[off] = (byte)((int)(values[i + 6] << 5));
      var52 = off++;
      buf[var52] = (byte)((int)((long)buf[var52] | values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits46(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 38));
      buf[off++] = (byte)((int)(values[i + 0] >>> 30));
      buf[off++] = (byte)((int)(values[i + 0] >>> 22));
      buf[off++] = (byte)((int)(values[i + 0] >>> 14));
      buf[off++] = (byte)((int)(values[i + 0] >>> 6));
      buf[off] = (byte)((int)(values[i + 0] << 2));
      int var53 = off++;
      buf[var53] = (byte)((int)((long)buf[var53] | values[i + 1] >>> 44));
      buf[off++] = (byte)((int)(values[i + 1] >>> 36));
      buf[off++] = (byte)((int)(values[i + 1] >>> 28));
      buf[off++] = (byte)((int)(values[i + 1] >>> 20));
      buf[off++] = (byte)((int)(values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var53 = off++;
      buf[var53] = (byte)((int)((long)buf[var53] | values[i + 2] >>> 42));
      buf[off++] = (byte)((int)(values[i + 2] >>> 34));
      buf[off++] = (byte)((int)(values[i + 2] >>> 26));
      buf[off++] = (byte)((int)(values[i + 2] >>> 18));
      buf[off++] = (byte)((int)(values[i + 2] >>> 10));
      buf[off++] = (byte)((int)(values[i + 2] >>> 2));
      buf[off] = (byte)((int)(values[i + 2] << 6));
      var53 = off++;
      buf[var53] = (byte)((int)((long)buf[var53] | values[i + 3] >>> 40));
      buf[off++] = (byte)((int)(values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 38));
      buf[off++] = (byte)((int)(values[i + 4] >>> 30));
      buf[off++] = (byte)((int)(values[i + 4] >>> 22));
      buf[off++] = (byte)((int)(values[i + 4] >>> 14));
      buf[off++] = (byte)((int)(values[i + 4] >>> 6));
      buf[off] = (byte)((int)(values[i + 4] << 2));
      var53 = off++;
      buf[var53] = (byte)((int)((long)buf[var53] | values[i + 5] >>> 44));
      buf[off++] = (byte)((int)(values[i + 5] >>> 36));
      buf[off++] = (byte)((int)(values[i + 5] >>> 28));
      buf[off++] = (byte)((int)(values[i + 5] >>> 20));
      buf[off++] = (byte)((int)(values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var53 = off++;
      buf[var53] = (byte)((int)((long)buf[var53] | values[i + 6] >>> 42));
      buf[off++] = (byte)((int)(values[i + 6] >>> 34));
      buf[off++] = (byte)((int)(values[i + 6] >>> 26));
      buf[off++] = (byte)((int)(values[i + 6] >>> 18));
      buf[off++] = (byte)((int)(values[i + 6] >>> 10));
      buf[off++] = (byte)((int)(values[i + 6] >>> 2));
      buf[off] = (byte)((int)(values[i + 6] << 6));
      var53 = off++;
      buf[var53] = (byte)((int)((long)buf[var53] | values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits47(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 39));
      buf[off++] = (byte)((int)(values[i + 0] >>> 31));
      buf[off++] = (byte)((int)(values[i + 0] >>> 23));
      buf[off++] = (byte)((int)(values[i + 0] >>> 15));
      buf[off++] = (byte)((int)(values[i + 0] >>> 7));
      buf[off] = (byte)((int)(values[i + 0] << 1));
      int var54 = off++;
      buf[var54] = (byte)((int)((long)buf[var54] | values[i + 1] >>> 46));
      buf[off++] = (byte)((int)(values[i + 1] >>> 38));
      buf[off++] = (byte)((int)(values[i + 1] >>> 30));
      buf[off++] = (byte)((int)(values[i + 1] >>> 22));
      buf[off++] = (byte)((int)(values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var54 = off++;
      buf[var54] = (byte)((int)((long)buf[var54] | values[i + 2] >>> 45));
      buf[off++] = (byte)((int)(values[i + 2] >>> 37));
      buf[off++] = (byte)((int)(values[i + 2] >>> 29));
      buf[off++] = (byte)((int)(values[i + 2] >>> 21));
      buf[off++] = (byte)((int)(values[i + 2] >>> 13));
      buf[off++] = (byte)((int)(values[i + 2] >>> 5));
      buf[off] = (byte)((int)(values[i + 2] << 3));
      var54 = off++;
      buf[var54] = (byte)((int)((long)buf[var54] | values[i + 3] >>> 44));
      buf[off++] = (byte)((int)(values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var54 = off++;
      buf[var54] = (byte)((int)((long)buf[var54] | values[i + 4] >>> 43));
      buf[off++] = (byte)((int)(values[i + 4] >>> 35));
      buf[off++] = (byte)((int)(values[i + 4] >>> 27));
      buf[off++] = (byte)((int)(values[i + 4] >>> 19));
      buf[off++] = (byte)((int)(values[i + 4] >>> 11));
      buf[off++] = (byte)((int)(values[i + 4] >>> 3));
      buf[off] = (byte)((int)(values[i + 4] << 5));
      var54 = off++;
      buf[var54] = (byte)((int)((long)buf[var54] | values[i + 5] >>> 42));
      buf[off++] = (byte)((int)(values[i + 5] >>> 34));
      buf[off++] = (byte)((int)(values[i + 5] >>> 26));
      buf[off++] = (byte)((int)(values[i + 5] >>> 18));
      buf[off++] = (byte)((int)(values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var54 = off++;
      buf[var54] = (byte)((int)((long)buf[var54] | values[i + 6] >>> 41));
      buf[off++] = (byte)((int)(values[i + 6] >>> 33));
      buf[off++] = (byte)((int)(values[i + 6] >>> 25));
      buf[off++] = (byte)((int)(values[i + 6] >>> 17));
      buf[off++] = (byte)((int)(values[i + 6] >>> 9));
      buf[off++] = (byte)((int)(values[i + 6] >>> 1));
      buf[off] = (byte)((int)(values[i + 6] << 7));
      var54 = off++;
      buf[var54] = (byte)((int)((long)buf[var54] | values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits48(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 40));
      buf[off++] = (byte)((int)(values[i + 0] >>> 32));
      buf[off++] = (byte)((int)(values[i + 0] >>> 24));
      buf[off++] = (byte)((int)(values[i + 0] >>> 16));
      buf[off++] = (byte)((int)(values[i + 0] >>> 8));
      buf[off++] = (byte)((int)values[i + 0]);
      buf[off++] = (byte)((int)(values[i + 1] >>> 40));
      buf[off++] = (byte)((int)(values[i + 1] >>> 32));
      buf[off++] = (byte)((int)(values[i + 1] >>> 24));
      buf[off++] = (byte)((int)(values[i + 1] >>> 16));
      buf[off++] = (byte)((int)(values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 40));
      buf[off++] = (byte)((int)(values[i + 2] >>> 32));
      buf[off++] = (byte)((int)(values[i + 2] >>> 24));
      buf[off++] = (byte)((int)(values[i + 2] >>> 16));
      buf[off++] = (byte)((int)(values[i + 2] >>> 8));
      buf[off++] = (byte)((int)values[i + 2]);
      buf[off++] = (byte)((int)(values[i + 3] >>> 40));
      buf[off++] = (byte)((int)(values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 40));
      buf[off++] = (byte)((int)(values[i + 4] >>> 32));
      buf[off++] = (byte)((int)(values[i + 4] >>> 24));
      buf[off++] = (byte)((int)(values[i + 4] >>> 16));
      buf[off++] = (byte)((int)(values[i + 4] >>> 8));
      buf[off++] = (byte)((int)values[i + 4]);
      buf[off++] = (byte)((int)(values[i + 5] >>> 40));
      buf[off++] = (byte)((int)(values[i + 5] >>> 32));
      buf[off++] = (byte)((int)(values[i + 5] >>> 24));
      buf[off++] = (byte)((int)(values[i + 5] >>> 16));
      buf[off++] = (byte)((int)(values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 40));
      buf[off++] = (byte)((int)(values[i + 6] >>> 32));
      buf[off++] = (byte)((int)(values[i + 6] >>> 24));
      buf[off++] = (byte)((int)(values[i + 6] >>> 16));
      buf[off++] = (byte)((int)(values[i + 6] >>> 8));
      buf[off++] = (byte)((int)values[i + 6]);
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits49(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 41));
      buf[off++] = (byte)((int)(values[i + 0] >>> 33));
      buf[off++] = (byte)((int)(values[i + 0] >>> 25));
      buf[off++] = (byte)((int)(values[i + 0] >>> 17));
      buf[off++] = (byte)((int)(values[i + 0] >>> 9));
      buf[off++] = (byte)((int)(values[i + 0] >>> 1));
      buf[off] = (byte)((int)(values[i + 0] << 7));
      int var57 = off++;
      buf[var57] = (byte)((int)((long)buf[var57] | values[i + 1] >>> 42));
      buf[off++] = (byte)((int)(values[i + 1] >>> 34));
      buf[off++] = (byte)((int)(values[i + 1] >>> 26));
      buf[off++] = (byte)((int)(values[i + 1] >>> 18));
      buf[off++] = (byte)((int)(values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var57 = off++;
      buf[var57] = (byte)((int)((long)buf[var57] | values[i + 2] >>> 43));
      buf[off++] = (byte)((int)(values[i + 2] >>> 35));
      buf[off++] = (byte)((int)(values[i + 2] >>> 27));
      buf[off++] = (byte)((int)(values[i + 2] >>> 19));
      buf[off++] = (byte)((int)(values[i + 2] >>> 11));
      buf[off++] = (byte)((int)(values[i + 2] >>> 3));
      buf[off] = (byte)((int)(values[i + 2] << 5));
      var57 = off++;
      buf[var57] = (byte)((int)((long)buf[var57] | values[i + 3] >>> 44));
      buf[off++] = (byte)((int)(values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var57 = off++;
      buf[var57] = (byte)((int)((long)buf[var57] | values[i + 4] >>> 45));
      buf[off++] = (byte)((int)(values[i + 4] >>> 37));
      buf[off++] = (byte)((int)(values[i + 4] >>> 29));
      buf[off++] = (byte)((int)(values[i + 4] >>> 21));
      buf[off++] = (byte)((int)(values[i + 4] >>> 13));
      buf[off++] = (byte)((int)(values[i + 4] >>> 5));
      buf[off] = (byte)((int)(values[i + 4] << 3));
      var57 = off++;
      buf[var57] = (byte)((int)((long)buf[var57] | values[i + 5] >>> 46));
      buf[off++] = (byte)((int)(values[i + 5] >>> 38));
      buf[off++] = (byte)((int)(values[i + 5] >>> 30));
      buf[off++] = (byte)((int)(values[i + 5] >>> 22));
      buf[off++] = (byte)((int)(values[i + 5] >>> 14));
      buf[off++] = (byte)((int)(values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var57 = off++;
      buf[var57] = (byte)((int)((long)buf[var57] | values[i + 6] >>> 47));
      buf[off++] = (byte)((int)(values[i + 6] >>> 39));
      buf[off++] = (byte)((int)(values[i + 6] >>> 31));
      buf[off++] = (byte)((int)(values[i + 6] >>> 23));
      buf[off++] = (byte)((int)(values[i + 6] >>> 15));
      buf[off++] = (byte)((int)(values[i + 6] >>> 7));
      buf[off] = (byte)((int)(values[i + 6] << 1));
      var57 = off++;
      buf[var57] = (byte)((int)((long)buf[var57] | values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits50(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 42));
      buf[off++] = (byte)((int)(values[i + 0] >>> 34));
      buf[off++] = (byte)((int)(values[i + 0] >>> 26));
      buf[off++] = (byte)((int)(values[i + 0] >>> 18));
      buf[off++] = (byte)((int)(values[i + 0] >>> 10));
      buf[off++] = (byte)((int)(values[i + 0] >>> 2));
      buf[off] = (byte)((int)(values[i + 0] << 6));
      int var58 = off++;
      buf[var58] = (byte)((int)((long)buf[var58] | values[i + 1] >>> 44));
      buf[off++] = (byte)((int)(values[i + 1] >>> 36));
      buf[off++] = (byte)((int)(values[i + 1] >>> 28));
      buf[off++] = (byte)((int)(values[i + 1] >>> 20));
      buf[off++] = (byte)((int)(values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var58 = off++;
      buf[var58] = (byte)((int)((long)buf[var58] | values[i + 2] >>> 46));
      buf[off++] = (byte)((int)(values[i + 2] >>> 38));
      buf[off++] = (byte)((int)(values[i + 2] >>> 30));
      buf[off++] = (byte)((int)(values[i + 2] >>> 22));
      buf[off++] = (byte)((int)(values[i + 2] >>> 14));
      buf[off++] = (byte)((int)(values[i + 2] >>> 6));
      buf[off] = (byte)((int)(values[i + 2] << 2));
      var58 = off++;
      buf[var58] = (byte)((int)((long)buf[var58] | values[i + 3] >>> 48));
      buf[off++] = (byte)((int)(values[i + 3] >>> 40));
      buf[off++] = (byte)((int)(values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 42));
      buf[off++] = (byte)((int)(values[i + 4] >>> 34));
      buf[off++] = (byte)((int)(values[i + 4] >>> 26));
      buf[off++] = (byte)((int)(values[i + 4] >>> 18));
      buf[off++] = (byte)((int)(values[i + 4] >>> 10));
      buf[off++] = (byte)((int)(values[i + 4] >>> 2));
      buf[off] = (byte)((int)(values[i + 4] << 6));
      var58 = off++;
      buf[var58] = (byte)((int)((long)buf[var58] | values[i + 5] >>> 44));
      buf[off++] = (byte)((int)(values[i + 5] >>> 36));
      buf[off++] = (byte)((int)(values[i + 5] >>> 28));
      buf[off++] = (byte)((int)(values[i + 5] >>> 20));
      buf[off++] = (byte)((int)(values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var58 = off++;
      buf[var58] = (byte)((int)((long)buf[var58] | values[i + 6] >>> 46));
      buf[off++] = (byte)((int)(values[i + 6] >>> 38));
      buf[off++] = (byte)((int)(values[i + 6] >>> 30));
      buf[off++] = (byte)((int)(values[i + 6] >>> 22));
      buf[off++] = (byte)((int)(values[i + 6] >>> 14));
      buf[off++] = (byte)((int)(values[i + 6] >>> 6));
      buf[off] = (byte)((int)(values[i + 6] << 2));
      var58 = off++;
      buf[var58] = (byte)((int)((long)buf[var58] | values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits51(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 43));
      buf[off++] = (byte)((int)(values[i + 0] >>> 35));
      buf[off++] = (byte)((int)(values[i + 0] >>> 27));
      buf[off++] = (byte)((int)(values[i + 0] >>> 19));
      buf[off++] = (byte)((int)(values[i + 0] >>> 11));
      buf[off++] = (byte)((int)(values[i + 0] >>> 3));
      buf[off] = (byte)((int)(values[i + 0] << 5));
      int var59 = off++;
      buf[var59] = (byte)((int)((long)buf[var59] | values[i + 1] >>> 46));
      buf[off++] = (byte)((int)(values[i + 1] >>> 38));
      buf[off++] = (byte)((int)(values[i + 1] >>> 30));
      buf[off++] = (byte)((int)(values[i + 1] >>> 22));
      buf[off++] = (byte)((int)(values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var59 = off++;
      buf[var59] = (byte)((int)((long)buf[var59] | values[i + 2] >>> 49));
      buf[off++] = (byte)((int)(values[i + 2] >>> 41));
      buf[off++] = (byte)((int)(values[i + 2] >>> 33));
      buf[off++] = (byte)((int)(values[i + 2] >>> 25));
      buf[off++] = (byte)((int)(values[i + 2] >>> 17));
      buf[off++] = (byte)((int)(values[i + 2] >>> 9));
      buf[off++] = (byte)((int)(values[i + 2] >>> 1));
      buf[off] = (byte)((int)(values[i + 2] << 7));
      var59 = off++;
      buf[var59] = (byte)((int)((long)buf[var59] | values[i + 3] >>> 44));
      buf[off++] = (byte)((int)(values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var59 = off++;
      buf[var59] = (byte)((int)((long)buf[var59] | values[i + 4] >>> 47));
      buf[off++] = (byte)((int)(values[i + 4] >>> 39));
      buf[off++] = (byte)((int)(values[i + 4] >>> 31));
      buf[off++] = (byte)((int)(values[i + 4] >>> 23));
      buf[off++] = (byte)((int)(values[i + 4] >>> 15));
      buf[off++] = (byte)((int)(values[i + 4] >>> 7));
      buf[off] = (byte)((int)(values[i + 4] << 1));
      var59 = off++;
      buf[var59] = (byte)((int)((long)buf[var59] | values[i + 5] >>> 50));
      buf[off++] = (byte)((int)(values[i + 5] >>> 42));
      buf[off++] = (byte)((int)(values[i + 5] >>> 34));
      buf[off++] = (byte)((int)(values[i + 5] >>> 26));
      buf[off++] = (byte)((int)(values[i + 5] >>> 18));
      buf[off++] = (byte)((int)(values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var59 = off++;
      buf[var59] = (byte)((int)((long)buf[var59] | values[i + 6] >>> 45));
      buf[off++] = (byte)((int)(values[i + 6] >>> 37));
      buf[off++] = (byte)((int)(values[i + 6] >>> 29));
      buf[off++] = (byte)((int)(values[i + 6] >>> 21));
      buf[off++] = (byte)((int)(values[i + 6] >>> 13));
      buf[off++] = (byte)((int)(values[i + 6] >>> 5));
      buf[off] = (byte)((int)(values[i + 6] << 3));
      var59 = off++;
      buf[var59] = (byte)((int)((long)buf[var59] | values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits52(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 44));
      buf[off++] = (byte)((int)(values[i + 0] >>> 36));
      buf[off++] = (byte)((int)(values[i + 0] >>> 28));
      buf[off++] = (byte)((int)(values[i + 0] >>> 20));
      buf[off++] = (byte)((int)(values[i + 0] >>> 12));
      buf[off++] = (byte)((int)(values[i + 0] >>> 4));
      buf[off] = (byte)((int)(values[i + 0] << 4));
      int var60 = off++;
      buf[var60] = (byte)((int)((long)buf[var60] | values[i + 1] >>> 48));
      buf[off++] = (byte)((int)(values[i + 1] >>> 40));
      buf[off++] = (byte)((int)(values[i + 1] >>> 32));
      buf[off++] = (byte)((int)(values[i + 1] >>> 24));
      buf[off++] = (byte)((int)(values[i + 1] >>> 16));
      buf[off++] = (byte)((int)(values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 44));
      buf[off++] = (byte)((int)(values[i + 2] >>> 36));
      buf[off++] = (byte)((int)(values[i + 2] >>> 28));
      buf[off++] = (byte)((int)(values[i + 2] >>> 20));
      buf[off++] = (byte)((int)(values[i + 2] >>> 12));
      buf[off++] = (byte)((int)(values[i + 2] >>> 4));
      buf[off] = (byte)((int)(values[i + 2] << 4));
      var60 = off++;
      buf[var60] = (byte)((int)((long)buf[var60] | values[i + 3] >>> 48));
      buf[off++] = (byte)((int)(values[i + 3] >>> 40));
      buf[off++] = (byte)((int)(values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 44));
      buf[off++] = (byte)((int)(values[i + 4] >>> 36));
      buf[off++] = (byte)((int)(values[i + 4] >>> 28));
      buf[off++] = (byte)((int)(values[i + 4] >>> 20));
      buf[off++] = (byte)((int)(values[i + 4] >>> 12));
      buf[off++] = (byte)((int)(values[i + 4] >>> 4));
      buf[off] = (byte)((int)(values[i + 4] << 4));
      var60 = off++;
      buf[var60] = (byte)((int)((long)buf[var60] | values[i + 5] >>> 48));
      buf[off++] = (byte)((int)(values[i + 5] >>> 40));
      buf[off++] = (byte)((int)(values[i + 5] >>> 32));
      buf[off++] = (byte)((int)(values[i + 5] >>> 24));
      buf[off++] = (byte)((int)(values[i + 5] >>> 16));
      buf[off++] = (byte)((int)(values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 44));
      buf[off++] = (byte)((int)(values[i + 6] >>> 36));
      buf[off++] = (byte)((int)(values[i + 6] >>> 28));
      buf[off++] = (byte)((int)(values[i + 6] >>> 20));
      buf[off++] = (byte)((int)(values[i + 6] >>> 12));
      buf[off++] = (byte)((int)(values[i + 6] >>> 4));
      buf[off] = (byte)((int)(values[i + 6] << 4));
      var60 = off++;
      buf[var60] = (byte)((int)((long)buf[var60] | values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits53(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 45));
      buf[off++] = (byte)((int)(values[i + 0] >>> 37));
      buf[off++] = (byte)((int)(values[i + 0] >>> 29));
      buf[off++] = (byte)((int)(values[i + 0] >>> 21));
      buf[off++] = (byte)((int)(values[i + 0] >>> 13));
      buf[off++] = (byte)((int)(values[i + 0] >>> 5));
      buf[off] = (byte)((int)(values[i + 0] << 3));
      int var61 = off++;
      buf[var61] = (byte)((int)((long)buf[var61] | values[i + 1] >>> 50));
      buf[off++] = (byte)((int)(values[i + 1] >>> 42));
      buf[off++] = (byte)((int)(values[i + 1] >>> 34));
      buf[off++] = (byte)((int)(values[i + 1] >>> 26));
      buf[off++] = (byte)((int)(values[i + 1] >>> 18));
      buf[off++] = (byte)((int)(values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var61 = off++;
      buf[var61] = (byte)((int)((long)buf[var61] | values[i + 2] >>> 47));
      buf[off++] = (byte)((int)(values[i + 2] >>> 39));
      buf[off++] = (byte)((int)(values[i + 2] >>> 31));
      buf[off++] = (byte)((int)(values[i + 2] >>> 23));
      buf[off++] = (byte)((int)(values[i + 2] >>> 15));
      buf[off++] = (byte)((int)(values[i + 2] >>> 7));
      buf[off] = (byte)((int)(values[i + 2] << 1));
      var61 = off++;
      buf[var61] = (byte)((int)((long)buf[var61] | values[i + 3] >>> 52));
      buf[off++] = (byte)((int)(values[i + 3] >>> 44));
      buf[off++] = (byte)((int)(values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var61 = off++;
      buf[var61] = (byte)((int)((long)buf[var61] | values[i + 4] >>> 49));
      buf[off++] = (byte)((int)(values[i + 4] >>> 41));
      buf[off++] = (byte)((int)(values[i + 4] >>> 33));
      buf[off++] = (byte)((int)(values[i + 4] >>> 25));
      buf[off++] = (byte)((int)(values[i + 4] >>> 17));
      buf[off++] = (byte)((int)(values[i + 4] >>> 9));
      buf[off++] = (byte)((int)(values[i + 4] >>> 1));
      buf[off] = (byte)((int)(values[i + 4] << 7));
      var61 = off++;
      buf[var61] = (byte)((int)((long)buf[var61] | values[i + 5] >>> 46));
      buf[off++] = (byte)((int)(values[i + 5] >>> 38));
      buf[off++] = (byte)((int)(values[i + 5] >>> 30));
      buf[off++] = (byte)((int)(values[i + 5] >>> 22));
      buf[off++] = (byte)((int)(values[i + 5] >>> 14));
      buf[off++] = (byte)((int)(values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var61 = off++;
      buf[var61] = (byte)((int)((long)buf[var61] | values[i + 6] >>> 51));
      buf[off++] = (byte)((int)(values[i + 6] >>> 43));
      buf[off++] = (byte)((int)(values[i + 6] >>> 35));
      buf[off++] = (byte)((int)(values[i + 6] >>> 27));
      buf[off++] = (byte)((int)(values[i + 6] >>> 19));
      buf[off++] = (byte)((int)(values[i + 6] >>> 11));
      buf[off++] = (byte)((int)(values[i + 6] >>> 3));
      buf[off] = (byte)((int)(values[i + 6] << 5));
      var61 = off++;
      buf[var61] = (byte)((int)((long)buf[var61] | values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits54(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 46));
      buf[off++] = (byte)((int)(values[i + 0] >>> 38));
      buf[off++] = (byte)((int)(values[i + 0] >>> 30));
      buf[off++] = (byte)((int)(values[i + 0] >>> 22));
      buf[off++] = (byte)((int)(values[i + 0] >>> 14));
      buf[off++] = (byte)((int)(values[i + 0] >>> 6));
      buf[off] = (byte)((int)(values[i + 0] << 2));
      int var62 = off++;
      buf[var62] = (byte)((int)((long)buf[var62] | values[i + 1] >>> 52));
      buf[off++] = (byte)((int)(values[i + 1] >>> 44));
      buf[off++] = (byte)((int)(values[i + 1] >>> 36));
      buf[off++] = (byte)((int)(values[i + 1] >>> 28));
      buf[off++] = (byte)((int)(values[i + 1] >>> 20));
      buf[off++] = (byte)((int)(values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var62 = off++;
      buf[var62] = (byte)((int)((long)buf[var62] | values[i + 2] >>> 50));
      buf[off++] = (byte)((int)(values[i + 2] >>> 42));
      buf[off++] = (byte)((int)(values[i + 2] >>> 34));
      buf[off++] = (byte)((int)(values[i + 2] >>> 26));
      buf[off++] = (byte)((int)(values[i + 2] >>> 18));
      buf[off++] = (byte)((int)(values[i + 2] >>> 10));
      buf[off++] = (byte)((int)(values[i + 2] >>> 2));
      buf[off] = (byte)((int)(values[i + 2] << 6));
      var62 = off++;
      buf[var62] = (byte)((int)((long)buf[var62] | values[i + 3] >>> 48));
      buf[off++] = (byte)((int)(values[i + 3] >>> 40));
      buf[off++] = (byte)((int)(values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 46));
      buf[off++] = (byte)((int)(values[i + 4] >>> 38));
      buf[off++] = (byte)((int)(values[i + 4] >>> 30));
      buf[off++] = (byte)((int)(values[i + 4] >>> 22));
      buf[off++] = (byte)((int)(values[i + 4] >>> 14));
      buf[off++] = (byte)((int)(values[i + 4] >>> 6));
      buf[off] = (byte)((int)(values[i + 4] << 2));
      var62 = off++;
      buf[var62] = (byte)((int)((long)buf[var62] | values[i + 5] >>> 52));
      buf[off++] = (byte)((int)(values[i + 5] >>> 44));
      buf[off++] = (byte)((int)(values[i + 5] >>> 36));
      buf[off++] = (byte)((int)(values[i + 5] >>> 28));
      buf[off++] = (byte)((int)(values[i + 5] >>> 20));
      buf[off++] = (byte)((int)(values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var62 = off++;
      buf[var62] = (byte)((int)((long)buf[var62] | values[i + 6] >>> 50));
      buf[off++] = (byte)((int)(values[i + 6] >>> 42));
      buf[off++] = (byte)((int)(values[i + 6] >>> 34));
      buf[off++] = (byte)((int)(values[i + 6] >>> 26));
      buf[off++] = (byte)((int)(values[i + 6] >>> 18));
      buf[off++] = (byte)((int)(values[i + 6] >>> 10));
      buf[off++] = (byte)((int)(values[i + 6] >>> 2));
      buf[off] = (byte)((int)(values[i + 6] << 6));
      var62 = off++;
      buf[var62] = (byte)((int)((long)buf[var62] | values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits55(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 47));
      buf[off++] = (byte)((int)(values[i + 0] >>> 39));
      buf[off++] = (byte)((int)(values[i + 0] >>> 31));
      buf[off++] = (byte)((int)(values[i + 0] >>> 23));
      buf[off++] = (byte)((int)(values[i + 0] >>> 15));
      buf[off++] = (byte)((int)(values[i + 0] >>> 7));
      buf[off] = (byte)((int)(values[i + 0] << 1));
      int var63 = off++;
      buf[var63] = (byte)((int)((long)buf[var63] | values[i + 1] >>> 54));
      buf[off++] = (byte)((int)(values[i + 1] >>> 46));
      buf[off++] = (byte)((int)(values[i + 1] >>> 38));
      buf[off++] = (byte)((int)(values[i + 1] >>> 30));
      buf[off++] = (byte)((int)(values[i + 1] >>> 22));
      buf[off++] = (byte)((int)(values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var63 = off++;
      buf[var63] = (byte)((int)((long)buf[var63] | values[i + 2] >>> 53));
      buf[off++] = (byte)((int)(values[i + 2] >>> 45));
      buf[off++] = (byte)((int)(values[i + 2] >>> 37));
      buf[off++] = (byte)((int)(values[i + 2] >>> 29));
      buf[off++] = (byte)((int)(values[i + 2] >>> 21));
      buf[off++] = (byte)((int)(values[i + 2] >>> 13));
      buf[off++] = (byte)((int)(values[i + 2] >>> 5));
      buf[off] = (byte)((int)(values[i + 2] << 3));
      var63 = off++;
      buf[var63] = (byte)((int)((long)buf[var63] | values[i + 3] >>> 52));
      buf[off++] = (byte)((int)(values[i + 3] >>> 44));
      buf[off++] = (byte)((int)(values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var63 = off++;
      buf[var63] = (byte)((int)((long)buf[var63] | values[i + 4] >>> 51));
      buf[off++] = (byte)((int)(values[i + 4] >>> 43));
      buf[off++] = (byte)((int)(values[i + 4] >>> 35));
      buf[off++] = (byte)((int)(values[i + 4] >>> 27));
      buf[off++] = (byte)((int)(values[i + 4] >>> 19));
      buf[off++] = (byte)((int)(values[i + 4] >>> 11));
      buf[off++] = (byte)((int)(values[i + 4] >>> 3));
      buf[off] = (byte)((int)(values[i + 4] << 5));
      var63 = off++;
      buf[var63] = (byte)((int)((long)buf[var63] | values[i + 5] >>> 50));
      buf[off++] = (byte)((int)(values[i + 5] >>> 42));
      buf[off++] = (byte)((int)(values[i + 5] >>> 34));
      buf[off++] = (byte)((int)(values[i + 5] >>> 26));
      buf[off++] = (byte)((int)(values[i + 5] >>> 18));
      buf[off++] = (byte)((int)(values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var63 = off++;
      buf[var63] = (byte)((int)((long)buf[var63] | values[i + 6] >>> 49));
      buf[off++] = (byte)((int)(values[i + 6] >>> 41));
      buf[off++] = (byte)((int)(values[i + 6] >>> 33));
      buf[off++] = (byte)((int)(values[i + 6] >>> 25));
      buf[off++] = (byte)((int)(values[i + 6] >>> 17));
      buf[off++] = (byte)((int)(values[i + 6] >>> 9));
      buf[off++] = (byte)((int)(values[i + 6] >>> 1));
      buf[off] = (byte)((int)(values[i + 6] << 7));
      var63 = off++;
      buf[var63] = (byte)((int)((long)buf[var63] | values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits56(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 48));
      buf[off++] = (byte)((int)(values[i + 0] >>> 40));
      buf[off++] = (byte)((int)(values[i + 0] >>> 32));
      buf[off++] = (byte)((int)(values[i + 0] >>> 24));
      buf[off++] = (byte)((int)(values[i + 0] >>> 16));
      buf[off++] = (byte)((int)(values[i + 0] >>> 8));
      buf[off++] = (byte)((int)values[i + 0]);
      buf[off++] = (byte)((int)(values[i + 1] >>> 48));
      buf[off++] = (byte)((int)(values[i + 1] >>> 40));
      buf[off++] = (byte)((int)(values[i + 1] >>> 32));
      buf[off++] = (byte)((int)(values[i + 1] >>> 24));
      buf[off++] = (byte)((int)(values[i + 1] >>> 16));
      buf[off++] = (byte)((int)(values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 48));
      buf[off++] = (byte)((int)(values[i + 2] >>> 40));
      buf[off++] = (byte)((int)(values[i + 2] >>> 32));
      buf[off++] = (byte)((int)(values[i + 2] >>> 24));
      buf[off++] = (byte)((int)(values[i + 2] >>> 16));
      buf[off++] = (byte)((int)(values[i + 2] >>> 8));
      buf[off++] = (byte)((int)values[i + 2]);
      buf[off++] = (byte)((int)(values[i + 3] >>> 48));
      buf[off++] = (byte)((int)(values[i + 3] >>> 40));
      buf[off++] = (byte)((int)(values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 48));
      buf[off++] = (byte)((int)(values[i + 4] >>> 40));
      buf[off++] = (byte)((int)(values[i + 4] >>> 32));
      buf[off++] = (byte)((int)(values[i + 4] >>> 24));
      buf[off++] = (byte)((int)(values[i + 4] >>> 16));
      buf[off++] = (byte)((int)(values[i + 4] >>> 8));
      buf[off++] = (byte)((int)values[i + 4]);
      buf[off++] = (byte)((int)(values[i + 5] >>> 48));
      buf[off++] = (byte)((int)(values[i + 5] >>> 40));
      buf[off++] = (byte)((int)(values[i + 5] >>> 32));
      buf[off++] = (byte)((int)(values[i + 5] >>> 24));
      buf[off++] = (byte)((int)(values[i + 5] >>> 16));
      buf[off++] = (byte)((int)(values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 48));
      buf[off++] = (byte)((int)(values[i + 6] >>> 40));
      buf[off++] = (byte)((int)(values[i + 6] >>> 32));
      buf[off++] = (byte)((int)(values[i + 6] >>> 24));
      buf[off++] = (byte)((int)(values[i + 6] >>> 16));
      buf[off++] = (byte)((int)(values[i + 6] >>> 8));
      buf[off++] = (byte)((int)values[i + 6]);
      buf[off++] = (byte)((int)(values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits57(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 49));
      buf[off++] = (byte)((int)(values[i + 0] >>> 41));
      buf[off++] = (byte)((int)(values[i + 0] >>> 33));
      buf[off++] = (byte)((int)(values[i + 0] >>> 25));
      buf[off++] = (byte)((int)(values[i + 0] >>> 17));
      buf[off++] = (byte)((int)(values[i + 0] >>> 9));
      buf[off++] = (byte)((int)(values[i + 0] >>> 1));
      buf[off] = (byte)((int)(values[i + 0] << 7));
      int var66 = off++;
      buf[var66] = (byte)((int)((long)buf[var66] | values[i + 1] >>> 50));
      buf[off++] = (byte)((int)(values[i + 1] >>> 42));
      buf[off++] = (byte)((int)(values[i + 1] >>> 34));
      buf[off++] = (byte)((int)(values[i + 1] >>> 26));
      buf[off++] = (byte)((int)(values[i + 1] >>> 18));
      buf[off++] = (byte)((int)(values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var66 = off++;
      buf[var66] = (byte)((int)((long)buf[var66] | values[i + 2] >>> 51));
      buf[off++] = (byte)((int)(values[i + 2] >>> 43));
      buf[off++] = (byte)((int)(values[i + 2] >>> 35));
      buf[off++] = (byte)((int)(values[i + 2] >>> 27));
      buf[off++] = (byte)((int)(values[i + 2] >>> 19));
      buf[off++] = (byte)((int)(values[i + 2] >>> 11));
      buf[off++] = (byte)((int)(values[i + 2] >>> 3));
      buf[off] = (byte)((int)(values[i + 2] << 5));
      var66 = off++;
      buf[var66] = (byte)((int)((long)buf[var66] | values[i + 3] >>> 52));
      buf[off++] = (byte)((int)(values[i + 3] >>> 44));
      buf[off++] = (byte)((int)(values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var66 = off++;
      buf[var66] = (byte)((int)((long)buf[var66] | values[i + 4] >>> 53));
      buf[off++] = (byte)((int)(values[i + 4] >>> 45));
      buf[off++] = (byte)((int)(values[i + 4] >>> 37));
      buf[off++] = (byte)((int)(values[i + 4] >>> 29));
      buf[off++] = (byte)((int)(values[i + 4] >>> 21));
      buf[off++] = (byte)((int)(values[i + 4] >>> 13));
      buf[off++] = (byte)((int)(values[i + 4] >>> 5));
      buf[off] = (byte)((int)(values[i + 4] << 3));
      var66 = off++;
      buf[var66] = (byte)((int)((long)buf[var66] | values[i + 5] >>> 54));
      buf[off++] = (byte)((int)(values[i + 5] >>> 46));
      buf[off++] = (byte)((int)(values[i + 5] >>> 38));
      buf[off++] = (byte)((int)(values[i + 5] >>> 30));
      buf[off++] = (byte)((int)(values[i + 5] >>> 22));
      buf[off++] = (byte)((int)(values[i + 5] >>> 14));
      buf[off++] = (byte)((int)(values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var66 = off++;
      buf[var66] = (byte)((int)((long)buf[var66] | values[i + 6] >>> 55));
      buf[off++] = (byte)((int)(values[i + 6] >>> 47));
      buf[off++] = (byte)((int)(values[i + 6] >>> 39));
      buf[off++] = (byte)((int)(values[i + 6] >>> 31));
      buf[off++] = (byte)((int)(values[i + 6] >>> 23));
      buf[off++] = (byte)((int)(values[i + 6] >>> 15));
      buf[off++] = (byte)((int)(values[i + 6] >>> 7));
      buf[off] = (byte)((int)(values[i + 6] << 1));
      var66 = off++;
      buf[var66] = (byte)((int)((long)buf[var66] | values[i + 7] >>> 56));
      buf[off++] = (byte)((int)(values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits58(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 50));
      buf[off++] = (byte)((int)(values[i + 0] >>> 42));
      buf[off++] = (byte)((int)(values[i + 0] >>> 34));
      buf[off++] = (byte)((int)(values[i + 0] >>> 26));
      buf[off++] = (byte)((int)(values[i + 0] >>> 18));
      buf[off++] = (byte)((int)(values[i + 0] >>> 10));
      buf[off++] = (byte)((int)(values[i + 0] >>> 2));
      buf[off] = (byte)((int)(values[i + 0] << 6));
      int var67 = off++;
      buf[var67] = (byte)((int)((long)buf[var67] | values[i + 1] >>> 52));
      buf[off++] = (byte)((int)(values[i + 1] >>> 44));
      buf[off++] = (byte)((int)(values[i + 1] >>> 36));
      buf[off++] = (byte)((int)(values[i + 1] >>> 28));
      buf[off++] = (byte)((int)(values[i + 1] >>> 20));
      buf[off++] = (byte)((int)(values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var67 = off++;
      buf[var67] = (byte)((int)((long)buf[var67] | values[i + 2] >>> 54));
      buf[off++] = (byte)((int)(values[i + 2] >>> 46));
      buf[off++] = (byte)((int)(values[i + 2] >>> 38));
      buf[off++] = (byte)((int)(values[i + 2] >>> 30));
      buf[off++] = (byte)((int)(values[i + 2] >>> 22));
      buf[off++] = (byte)((int)(values[i + 2] >>> 14));
      buf[off++] = (byte)((int)(values[i + 2] >>> 6));
      buf[off] = (byte)((int)(values[i + 2] << 2));
      var67 = off++;
      buf[var67] = (byte)((int)((long)buf[var67] | values[i + 3] >>> 56));
      buf[off++] = (byte)((int)(values[i + 3] >>> 48));
      buf[off++] = (byte)((int)(values[i + 3] >>> 40));
      buf[off++] = (byte)((int)(values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 50));
      buf[off++] = (byte)((int)(values[i + 4] >>> 42));
      buf[off++] = (byte)((int)(values[i + 4] >>> 34));
      buf[off++] = (byte)((int)(values[i + 4] >>> 26));
      buf[off++] = (byte)((int)(values[i + 4] >>> 18));
      buf[off++] = (byte)((int)(values[i + 4] >>> 10));
      buf[off++] = (byte)((int)(values[i + 4] >>> 2));
      buf[off] = (byte)((int)(values[i + 4] << 6));
      var67 = off++;
      buf[var67] = (byte)((int)((long)buf[var67] | values[i + 5] >>> 52));
      buf[off++] = (byte)((int)(values[i + 5] >>> 44));
      buf[off++] = (byte)((int)(values[i + 5] >>> 36));
      buf[off++] = (byte)((int)(values[i + 5] >>> 28));
      buf[off++] = (byte)((int)(values[i + 5] >>> 20));
      buf[off++] = (byte)((int)(values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var67 = off++;
      buf[var67] = (byte)((int)((long)buf[var67] | values[i + 6] >>> 54));
      buf[off++] = (byte)((int)(values[i + 6] >>> 46));
      buf[off++] = (byte)((int)(values[i + 6] >>> 38));
      buf[off++] = (byte)((int)(values[i + 6] >>> 30));
      buf[off++] = (byte)((int)(values[i + 6] >>> 22));
      buf[off++] = (byte)((int)(values[i + 6] >>> 14));
      buf[off++] = (byte)((int)(values[i + 6] >>> 6));
      buf[off] = (byte)((int)(values[i + 6] << 2));
      var67 = off++;
      buf[var67] = (byte)((int)((long)buf[var67] | values[i + 7] >>> 56));
      buf[off++] = (byte)((int)(values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits59(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 51));
      buf[off++] = (byte)((int)(values[i + 0] >>> 43));
      buf[off++] = (byte)((int)(values[i + 0] >>> 35));
      buf[off++] = (byte)((int)(values[i + 0] >>> 27));
      buf[off++] = (byte)((int)(values[i + 0] >>> 19));
      buf[off++] = (byte)((int)(values[i + 0] >>> 11));
      buf[off++] = (byte)((int)(values[i + 0] >>> 3));
      buf[off] = (byte)((int)(values[i + 0] << 5));
      int var68 = off++;
      buf[var68] = (byte)((int)((long)buf[var68] | values[i + 1] >>> 54));
      buf[off++] = (byte)((int)(values[i + 1] >>> 46));
      buf[off++] = (byte)((int)(values[i + 1] >>> 38));
      buf[off++] = (byte)((int)(values[i + 1] >>> 30));
      buf[off++] = (byte)((int)(values[i + 1] >>> 22));
      buf[off++] = (byte)((int)(values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var68 = off++;
      buf[var68] = (byte)((int)((long)buf[var68] | values[i + 2] >>> 57));
      buf[off++] = (byte)((int)(values[i + 2] >>> 49));
      buf[off++] = (byte)((int)(values[i + 2] >>> 41));
      buf[off++] = (byte)((int)(values[i + 2] >>> 33));
      buf[off++] = (byte)((int)(values[i + 2] >>> 25));
      buf[off++] = (byte)((int)(values[i + 2] >>> 17));
      buf[off++] = (byte)((int)(values[i + 2] >>> 9));
      buf[off++] = (byte)((int)(values[i + 2] >>> 1));
      buf[off] = (byte)((int)(values[i + 2] << 7));
      var68 = off++;
      buf[var68] = (byte)((int)((long)buf[var68] | values[i + 3] >>> 52));
      buf[off++] = (byte)((int)(values[i + 3] >>> 44));
      buf[off++] = (byte)((int)(values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var68 = off++;
      buf[var68] = (byte)((int)((long)buf[var68] | values[i + 4] >>> 55));
      buf[off++] = (byte)((int)(values[i + 4] >>> 47));
      buf[off++] = (byte)((int)(values[i + 4] >>> 39));
      buf[off++] = (byte)((int)(values[i + 4] >>> 31));
      buf[off++] = (byte)((int)(values[i + 4] >>> 23));
      buf[off++] = (byte)((int)(values[i + 4] >>> 15));
      buf[off++] = (byte)((int)(values[i + 4] >>> 7));
      buf[off] = (byte)((int)(values[i + 4] << 1));
      var68 = off++;
      buf[var68] = (byte)((int)((long)buf[var68] | values[i + 5] >>> 58));
      buf[off++] = (byte)((int)(values[i + 5] >>> 50));
      buf[off++] = (byte)((int)(values[i + 5] >>> 42));
      buf[off++] = (byte)((int)(values[i + 5] >>> 34));
      buf[off++] = (byte)((int)(values[i + 5] >>> 26));
      buf[off++] = (byte)((int)(values[i + 5] >>> 18));
      buf[off++] = (byte)((int)(values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var68 = off++;
      buf[var68] = (byte)((int)((long)buf[var68] | values[i + 6] >>> 53));
      buf[off++] = (byte)((int)(values[i + 6] >>> 45));
      buf[off++] = (byte)((int)(values[i + 6] >>> 37));
      buf[off++] = (byte)((int)(values[i + 6] >>> 29));
      buf[off++] = (byte)((int)(values[i + 6] >>> 21));
      buf[off++] = (byte)((int)(values[i + 6] >>> 13));
      buf[off++] = (byte)((int)(values[i + 6] >>> 5));
      buf[off] = (byte)((int)(values[i + 6] << 3));
      var68 = off++;
      buf[var68] = (byte)((int)((long)buf[var68] | values[i + 7] >>> 56));
      buf[off++] = (byte)((int)(values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits60(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 52));
      buf[off++] = (byte)((int)(values[i + 0] >>> 44));
      buf[off++] = (byte)((int)(values[i + 0] >>> 36));
      buf[off++] = (byte)((int)(values[i + 0] >>> 28));
      buf[off++] = (byte)((int)(values[i + 0] >>> 20));
      buf[off++] = (byte)((int)(values[i + 0] >>> 12));
      buf[off++] = (byte)((int)(values[i + 0] >>> 4));
      buf[off] = (byte)((int)(values[i + 0] << 4));
      int var69 = off++;
      buf[var69] = (byte)((int)((long)buf[var69] | values[i + 1] >>> 56));
      buf[off++] = (byte)((int)(values[i + 1] >>> 48));
      buf[off++] = (byte)((int)(values[i + 1] >>> 40));
      buf[off++] = (byte)((int)(values[i + 1] >>> 32));
      buf[off++] = (byte)((int)(values[i + 1] >>> 24));
      buf[off++] = (byte)((int)(values[i + 1] >>> 16));
      buf[off++] = (byte)((int)(values[i + 1] >>> 8));
      buf[off++] = (byte)((int)values[i + 1]);
      buf[off++] = (byte)((int)(values[i + 2] >>> 52));
      buf[off++] = (byte)((int)(values[i + 2] >>> 44));
      buf[off++] = (byte)((int)(values[i + 2] >>> 36));
      buf[off++] = (byte)((int)(values[i + 2] >>> 28));
      buf[off++] = (byte)((int)(values[i + 2] >>> 20));
      buf[off++] = (byte)((int)(values[i + 2] >>> 12));
      buf[off++] = (byte)((int)(values[i + 2] >>> 4));
      buf[off] = (byte)((int)(values[i + 2] << 4));
      var69 = off++;
      buf[var69] = (byte)((int)((long)buf[var69] | values[i + 3] >>> 56));
      buf[off++] = (byte)((int)(values[i + 3] >>> 48));
      buf[off++] = (byte)((int)(values[i + 3] >>> 40));
      buf[off++] = (byte)((int)(values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 52));
      buf[off++] = (byte)((int)(values[i + 4] >>> 44));
      buf[off++] = (byte)((int)(values[i + 4] >>> 36));
      buf[off++] = (byte)((int)(values[i + 4] >>> 28));
      buf[off++] = (byte)((int)(values[i + 4] >>> 20));
      buf[off++] = (byte)((int)(values[i + 4] >>> 12));
      buf[off++] = (byte)((int)(values[i + 4] >>> 4));
      buf[off] = (byte)((int)(values[i + 4] << 4));
      var69 = off++;
      buf[var69] = (byte)((int)((long)buf[var69] | values[i + 5] >>> 56));
      buf[off++] = (byte)((int)(values[i + 5] >>> 48));
      buf[off++] = (byte)((int)(values[i + 5] >>> 40));
      buf[off++] = (byte)((int)(values[i + 5] >>> 32));
      buf[off++] = (byte)((int)(values[i + 5] >>> 24));
      buf[off++] = (byte)((int)(values[i + 5] >>> 16));
      buf[off++] = (byte)((int)(values[i + 5] >>> 8));
      buf[off++] = (byte)((int)values[i + 5]);
      buf[off++] = (byte)((int)(values[i + 6] >>> 52));
      buf[off++] = (byte)((int)(values[i + 6] >>> 44));
      buf[off++] = (byte)((int)(values[i + 6] >>> 36));
      buf[off++] = (byte)((int)(values[i + 6] >>> 28));
      buf[off++] = (byte)((int)(values[i + 6] >>> 20));
      buf[off++] = (byte)((int)(values[i + 6] >>> 12));
      buf[off++] = (byte)((int)(values[i + 6] >>> 4));
      buf[off] = (byte)((int)(values[i + 6] << 4));
      var69 = off++;
      buf[var69] = (byte)((int)((long)buf[var69] | values[i + 7] >>> 56));
      buf[off++] = (byte)((int)(values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits61(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 53));
      buf[off++] = (byte)((int)(values[i + 0] >>> 45));
      buf[off++] = (byte)((int)(values[i + 0] >>> 37));
      buf[off++] = (byte)((int)(values[i + 0] >>> 29));
      buf[off++] = (byte)((int)(values[i + 0] >>> 21));
      buf[off++] = (byte)((int)(values[i + 0] >>> 13));
      buf[off++] = (byte)((int)(values[i + 0] >>> 5));
      buf[off] = (byte)((int)(values[i + 0] << 3));
      int var70 = off++;
      buf[var70] = (byte)((int)((long)buf[var70] | values[i + 1] >>> 58));
      buf[off++] = (byte)((int)(values[i + 1] >>> 50));
      buf[off++] = (byte)((int)(values[i + 1] >>> 42));
      buf[off++] = (byte)((int)(values[i + 1] >>> 34));
      buf[off++] = (byte)((int)(values[i + 1] >>> 26));
      buf[off++] = (byte)((int)(values[i + 1] >>> 18));
      buf[off++] = (byte)((int)(values[i + 1] >>> 10));
      buf[off++] = (byte)((int)(values[i + 1] >>> 2));
      buf[off] = (byte)((int)(values[i + 1] << 6));
      var70 = off++;
      buf[var70] = (byte)((int)((long)buf[var70] | values[i + 2] >>> 55));
      buf[off++] = (byte)((int)(values[i + 2] >>> 47));
      buf[off++] = (byte)((int)(values[i + 2] >>> 39));
      buf[off++] = (byte)((int)(values[i + 2] >>> 31));
      buf[off++] = (byte)((int)(values[i + 2] >>> 23));
      buf[off++] = (byte)((int)(values[i + 2] >>> 15));
      buf[off++] = (byte)((int)(values[i + 2] >>> 7));
      buf[off] = (byte)((int)(values[i + 2] << 1));
      var70 = off++;
      buf[var70] = (byte)((int)((long)buf[var70] | values[i + 3] >>> 60));
      buf[off++] = (byte)((int)(values[i + 3] >>> 52));
      buf[off++] = (byte)((int)(values[i + 3] >>> 44));
      buf[off++] = (byte)((int)(values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var70 = off++;
      buf[var70] = (byte)((int)((long)buf[var70] | values[i + 4] >>> 57));
      buf[off++] = (byte)((int)(values[i + 4] >>> 49));
      buf[off++] = (byte)((int)(values[i + 4] >>> 41));
      buf[off++] = (byte)((int)(values[i + 4] >>> 33));
      buf[off++] = (byte)((int)(values[i + 4] >>> 25));
      buf[off++] = (byte)((int)(values[i + 4] >>> 17));
      buf[off++] = (byte)((int)(values[i + 4] >>> 9));
      buf[off++] = (byte)((int)(values[i + 4] >>> 1));
      buf[off] = (byte)((int)(values[i + 4] << 7));
      var70 = off++;
      buf[var70] = (byte)((int)((long)buf[var70] | values[i + 5] >>> 54));
      buf[off++] = (byte)((int)(values[i + 5] >>> 46));
      buf[off++] = (byte)((int)(values[i + 5] >>> 38));
      buf[off++] = (byte)((int)(values[i + 5] >>> 30));
      buf[off++] = (byte)((int)(values[i + 5] >>> 22));
      buf[off++] = (byte)((int)(values[i + 5] >>> 14));
      buf[off++] = (byte)((int)(values[i + 5] >>> 6));
      buf[off] = (byte)((int)(values[i + 5] << 2));
      var70 = off++;
      buf[var70] = (byte)((int)((long)buf[var70] | values[i + 6] >>> 59));
      buf[off++] = (byte)((int)(values[i + 6] >>> 51));
      buf[off++] = (byte)((int)(values[i + 6] >>> 43));
      buf[off++] = (byte)((int)(values[i + 6] >>> 35));
      buf[off++] = (byte)((int)(values[i + 6] >>> 27));
      buf[off++] = (byte)((int)(values[i + 6] >>> 19));
      buf[off++] = (byte)((int)(values[i + 6] >>> 11));
      buf[off++] = (byte)((int)(values[i + 6] >>> 3));
      buf[off] = (byte)((int)(values[i + 6] << 5));
      var70 = off++;
      buf[var70] = (byte)((int)((long)buf[var70] | values[i + 7] >>> 56));
      buf[off++] = (byte)((int)(values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits62(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 54));
      buf[off++] = (byte)((int)(values[i + 0] >>> 46));
      buf[off++] = (byte)((int)(values[i + 0] >>> 38));
      buf[off++] = (byte)((int)(values[i + 0] >>> 30));
      buf[off++] = (byte)((int)(values[i + 0] >>> 22));
      buf[off++] = (byte)((int)(values[i + 0] >>> 14));
      buf[off++] = (byte)((int)(values[i + 0] >>> 6));
      buf[off] = (byte)((int)(values[i + 0] << 2));
      int var71 = off++;
      buf[var71] = (byte)((int)((long)buf[var71] | values[i + 1] >>> 60));
      buf[off++] = (byte)((int)(values[i + 1] >>> 52));
      buf[off++] = (byte)((int)(values[i + 1] >>> 44));
      buf[off++] = (byte)((int)(values[i + 1] >>> 36));
      buf[off++] = (byte)((int)(values[i + 1] >>> 28));
      buf[off++] = (byte)((int)(values[i + 1] >>> 20));
      buf[off++] = (byte)((int)(values[i + 1] >>> 12));
      buf[off++] = (byte)((int)(values[i + 1] >>> 4));
      buf[off] = (byte)((int)(values[i + 1] << 4));
      var71 = off++;
      buf[var71] = (byte)((int)((long)buf[var71] | values[i + 2] >>> 58));
      buf[off++] = (byte)((int)(values[i + 2] >>> 50));
      buf[off++] = (byte)((int)(values[i + 2] >>> 42));
      buf[off++] = (byte)((int)(values[i + 2] >>> 34));
      buf[off++] = (byte)((int)(values[i + 2] >>> 26));
      buf[off++] = (byte)((int)(values[i + 2] >>> 18));
      buf[off++] = (byte)((int)(values[i + 2] >>> 10));
      buf[off++] = (byte)((int)(values[i + 2] >>> 2));
      buf[off] = (byte)((int)(values[i + 2] << 6));
      var71 = off++;
      buf[var71] = (byte)((int)((long)buf[var71] | values[i + 3] >>> 56));
      buf[off++] = (byte)((int)(values[i + 3] >>> 48));
      buf[off++] = (byte)((int)(values[i + 3] >>> 40));
      buf[off++] = (byte)((int)(values[i + 3] >>> 32));
      buf[off++] = (byte)((int)(values[i + 3] >>> 24));
      buf[off++] = (byte)((int)(values[i + 3] >>> 16));
      buf[off++] = (byte)((int)(values[i + 3] >>> 8));
      buf[off++] = (byte)((int)values[i + 3]);
      buf[off++] = (byte)((int)(values[i + 4] >>> 54));
      buf[off++] = (byte)((int)(values[i + 4] >>> 46));
      buf[off++] = (byte)((int)(values[i + 4] >>> 38));
      buf[off++] = (byte)((int)(values[i + 4] >>> 30));
      buf[off++] = (byte)((int)(values[i + 4] >>> 22));
      buf[off++] = (byte)((int)(values[i + 4] >>> 14));
      buf[off++] = (byte)((int)(values[i + 4] >>> 6));
      buf[off] = (byte)((int)(values[i + 4] << 2));
      var71 = off++;
      buf[var71] = (byte)((int)((long)buf[var71] | values[i + 5] >>> 60));
      buf[off++] = (byte)((int)(values[i + 5] >>> 52));
      buf[off++] = (byte)((int)(values[i + 5] >>> 44));
      buf[off++] = (byte)((int)(values[i + 5] >>> 36));
      buf[off++] = (byte)((int)(values[i + 5] >>> 28));
      buf[off++] = (byte)((int)(values[i + 5] >>> 20));
      buf[off++] = (byte)((int)(values[i + 5] >>> 12));
      buf[off++] = (byte)((int)(values[i + 5] >>> 4));
      buf[off] = (byte)((int)(values[i + 5] << 4));
      var71 = off++;
      buf[var71] = (byte)((int)((long)buf[var71] | values[i + 6] >>> 58));
      buf[off++] = (byte)((int)(values[i + 6] >>> 50));
      buf[off++] = (byte)((int)(values[i + 6] >>> 42));
      buf[off++] = (byte)((int)(values[i + 6] >>> 34));
      buf[off++] = (byte)((int)(values[i + 6] >>> 26));
      buf[off++] = (byte)((int)(values[i + 6] >>> 18));
      buf[off++] = (byte)((int)(values[i + 6] >>> 10));
      buf[off++] = (byte)((int)(values[i + 6] >>> 2));
      buf[off] = (byte)((int)(values[i + 6] << 6));
      var71 = off++;
      buf[var71] = (byte)((int)((long)buf[var71] | values[i + 7] >>> 56));
      buf[off++] = (byte)((int)(values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void packBits63(long[] values, int i, byte[] buf, int off) {
      buf[off++] = (byte)((int)(values[i + 0] >>> 55));
      buf[off++] = (byte)((int)(values[i + 0] >>> 47));
      buf[off++] = (byte)((int)(values[i + 0] >>> 39));
      buf[off++] = (byte)((int)(values[i + 0] >>> 31));
      buf[off++] = (byte)((int)(values[i + 0] >>> 23));
      buf[off++] = (byte)((int)(values[i + 0] >>> 15));
      buf[off++] = (byte)((int)(values[i + 0] >>> 7));
      buf[off] = (byte)((int)(values[i + 0] << 1));
      int var72 = off++;
      buf[var72] = (byte)((int)((long)buf[var72] | values[i + 1] >>> 62));
      buf[off++] = (byte)((int)(values[i + 1] >>> 54));
      buf[off++] = (byte)((int)(values[i + 1] >>> 46));
      buf[off++] = (byte)((int)(values[i + 1] >>> 38));
      buf[off++] = (byte)((int)(values[i + 1] >>> 30));
      buf[off++] = (byte)((int)(values[i + 1] >>> 22));
      buf[off++] = (byte)((int)(values[i + 1] >>> 14));
      buf[off++] = (byte)((int)(values[i + 1] >>> 6));
      buf[off] = (byte)((int)(values[i + 1] << 2));
      var72 = off++;
      buf[var72] = (byte)((int)((long)buf[var72] | values[i + 2] >>> 61));
      buf[off++] = (byte)((int)(values[i + 2] >>> 53));
      buf[off++] = (byte)((int)(values[i + 2] >>> 45));
      buf[off++] = (byte)((int)(values[i + 2] >>> 37));
      buf[off++] = (byte)((int)(values[i + 2] >>> 29));
      buf[off++] = (byte)((int)(values[i + 2] >>> 21));
      buf[off++] = (byte)((int)(values[i + 2] >>> 13));
      buf[off++] = (byte)((int)(values[i + 2] >>> 5));
      buf[off] = (byte)((int)(values[i + 2] << 3));
      var72 = off++;
      buf[var72] = (byte)((int)((long)buf[var72] | values[i + 3] >>> 60));
      buf[off++] = (byte)((int)(values[i + 3] >>> 52));
      buf[off++] = (byte)((int)(values[i + 3] >>> 44));
      buf[off++] = (byte)((int)(values[i + 3] >>> 36));
      buf[off++] = (byte)((int)(values[i + 3] >>> 28));
      buf[off++] = (byte)((int)(values[i + 3] >>> 20));
      buf[off++] = (byte)((int)(values[i + 3] >>> 12));
      buf[off++] = (byte)((int)(values[i + 3] >>> 4));
      buf[off] = (byte)((int)(values[i + 3] << 4));
      var72 = off++;
      buf[var72] = (byte)((int)((long)buf[var72] | values[i + 4] >>> 59));
      buf[off++] = (byte)((int)(values[i + 4] >>> 51));
      buf[off++] = (byte)((int)(values[i + 4] >>> 43));
      buf[off++] = (byte)((int)(values[i + 4] >>> 35));
      buf[off++] = (byte)((int)(values[i + 4] >>> 27));
      buf[off++] = (byte)((int)(values[i + 4] >>> 19));
      buf[off++] = (byte)((int)(values[i + 4] >>> 11));
      buf[off++] = (byte)((int)(values[i + 4] >>> 3));
      buf[off] = (byte)((int)(values[i + 4] << 5));
      var72 = off++;
      buf[var72] = (byte)((int)((long)buf[var72] | values[i + 5] >>> 58));
      buf[off++] = (byte)((int)(values[i + 5] >>> 50));
      buf[off++] = (byte)((int)(values[i + 5] >>> 42));
      buf[off++] = (byte)((int)(values[i + 5] >>> 34));
      buf[off++] = (byte)((int)(values[i + 5] >>> 26));
      buf[off++] = (byte)((int)(values[i + 5] >>> 18));
      buf[off++] = (byte)((int)(values[i + 5] >>> 10));
      buf[off++] = (byte)((int)(values[i + 5] >>> 2));
      buf[off] = (byte)((int)(values[i + 5] << 6));
      var72 = off++;
      buf[var72] = (byte)((int)((long)buf[var72] | values[i + 6] >>> 57));
      buf[off++] = (byte)((int)(values[i + 6] >>> 49));
      buf[off++] = (byte)((int)(values[i + 6] >>> 41));
      buf[off++] = (byte)((int)(values[i + 6] >>> 33));
      buf[off++] = (byte)((int)(values[i + 6] >>> 25));
      buf[off++] = (byte)((int)(values[i + 6] >>> 17));
      buf[off++] = (byte)((int)(values[i + 6] >>> 9));
      buf[off++] = (byte)((int)(values[i + 6] >>> 1));
      buf[off] = (byte)((int)(values[i + 6] << 7));
      var72 = off++;
      buf[var72] = (byte)((int)((long)buf[var72] | values[i + 7] >>> 56));
      buf[off++] = (byte)((int)(values[i + 7] >>> 48));
      buf[off++] = (byte)((int)(values[i + 7] >>> 40));
      buf[off++] = (byte)((int)(values[i + 7] >>> 32));
      buf[off++] = (byte)((int)(values[i + 7] >>> 24));
      buf[off++] = (byte)((int)(values[i + 7] >>> 16));
      buf[off++] = (byte)((int)(values[i + 7] >>> 8));
      buf[off] = (byte)((int)values[i + 7]);
   }

   static void unpackBits1(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off]) >>> 7 & 1L;
      values[i + 1] = Byte.toUnsignedLong(buf[off]) >>> 6 & 1L;
      values[i + 2] = Byte.toUnsignedLong(buf[off]) >>> 5 & 1L;
      values[i + 3] = Byte.toUnsignedLong(buf[off]) >>> 4 & 1L;
      values[i + 4] = Byte.toUnsignedLong(buf[off]) >>> 3 & 1L;
      values[i + 5] = Byte.toUnsignedLong(buf[off]) >>> 2 & 1L;
      values[i + 6] = Byte.toUnsignedLong(buf[off]) >>> 1 & 1L;
      values[i + 7] = Byte.toUnsignedLong(buf[off]) & 1L;
   }

   static void unpackBits2(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off]) >>> 6 & 3L;
      values[i + 1] = Byte.toUnsignedLong(buf[off]) >>> 4 & 3L;
      values[i + 2] = Byte.toUnsignedLong(buf[off]) >>> 2 & 3L;
      values[i + 3] = Byte.toUnsignedLong(buf[off++]) & 3L;
      values[i + 4] = Byte.toUnsignedLong(buf[off]) >>> 6 & 3L;
      values[i + 5] = Byte.toUnsignedLong(buf[off]) >>> 4 & 3L;
      values[i + 6] = Byte.toUnsignedLong(buf[off]) >>> 2 & 3L;
      values[i + 7] = Byte.toUnsignedLong(buf[off]) & 3L;
   }

   static void unpackBits3(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 1] = Byte.toUnsignedLong(buf[off]) >>> 2 & 7L;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 1;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 3] = Byte.toUnsignedLong(buf[off]) >>> 4 & 7L;
      values[i + 4] = Byte.toUnsignedLong(buf[off]) >>> 1 & 7L;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = Byte.toUnsignedLong(buf[off]) >>> 3 & 7L;
      values[i + 7] = Byte.toUnsignedLong(buf[off]) & 7L;
   }

   static void unpackBits4(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 1] = Byte.toUnsignedLong(buf[off++]) & 15L;
      values[i + 2] = Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 3] = Byte.toUnsignedLong(buf[off++]) & 15L;
      values[i + 4] = Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 5] = Byte.toUnsignedLong(buf[off++]) & 15L;
      values[i + 6] = Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 7] = Byte.toUnsignedLong(buf[off]) & 15L;
   }

   static void unpackBits5(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = Byte.toUnsignedLong(buf[off]) >>> 1 & 31L;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 1;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 5] = Byte.toUnsignedLong(buf[off]) >>> 2 & 31L;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 3;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 7] = Byte.toUnsignedLong(buf[off]) & 31L;
   }

   static void unpackBits6(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 2;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 3] = Byte.toUnsignedLong(buf[off++]) & 63L;
      values[i + 4] = Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 2;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 7] = Byte.toUnsignedLong(buf[off]) & 63L;
   }

   static void unpackBits7(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 5;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 3;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 1;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 7] = Byte.toUnsignedLong(buf[off]) & 127L;
   }

   static void unpackBits8(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]);
      values[i + 1] = Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]);
      values[i + 3] = Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]);
      values[i + 5] = Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]);
      values[i + 7] = Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits9(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 3;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 5;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 7;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits10(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 6;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 6;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits11(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 9;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 7;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 5;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits12(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits13(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 7;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 9;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 11;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits14(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 10;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 10;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits15(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 13;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 11;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 9;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits16(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 1] = Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 3] = Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 5] = Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 7] = Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits17(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 11;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 13;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 14;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 15;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits18(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 14;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 14;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits19(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 17;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 15;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 18;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 13;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits20(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 16;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 16;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits21(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 18;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 15;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 17;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 14;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 19;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits22(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 20;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 18;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 20;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 18;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits23(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 22;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 21;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 19;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 18;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 17;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits24(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 1] = Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 3] = Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 5] = Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 7] = Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits25(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 18;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 19;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 21;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 22;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 23;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits26(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 20;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 22;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 20;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 22;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits27(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 22;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 25;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 23;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 26;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 21;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits28(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 24;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 24;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits29(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 26;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 23;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 25;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 22;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 27;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits30(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 28;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 26;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 28;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 26;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits31(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 30;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 29;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 27;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 26;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 25;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits32(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 1] = Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 3] = Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 5] = Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 7] = Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits33(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 26;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 27;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 29;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 30;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 31;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits34(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 28;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 30;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 28;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 30;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]);
   }

   static void unpackBits35(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 30;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 2L) << 33;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 31;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 34;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 29;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits36(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 32;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 32;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits37(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 34;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 31;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 33;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 30;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 35;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits38(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 36;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 34;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 36;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 34;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits39(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 38;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 37;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 35;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 34;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 33;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits40(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 1] = Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 3] = Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 5] = Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 7] = Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits41(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 33;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 34;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 35;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 37;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 38;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 39;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits42(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 36;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 38;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 40;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 36;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 38;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits43(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 35;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 38;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 41;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 33;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 39;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 42;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 37;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits44(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 40;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 40;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 40;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits45(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 37;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 42;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 39;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 44;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 41;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 33;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 38;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 43;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 35;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits46(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 44;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 42;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 40;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 44;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 42;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits47(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 39;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 46;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 45;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 37;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 44;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 43;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 35;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 42;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 41;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 33;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits48(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 1] = Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 3] = Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 5] = Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 7] = Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits49(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 41;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 33;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 42;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 43;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 35;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 44;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 45;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 37;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 46;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 47;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 39;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits50(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 44;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 46;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 48;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 44;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 46;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits51(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 43;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 35;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 46;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 49;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 41;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 33;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 44;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 47;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 39;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 50;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 45;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 37;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits52(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 48;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 48;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 48;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits53(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 45;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 37;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 50;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 47;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 39;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 52;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 49;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 41;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 33;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 46;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 51;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 43;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 35;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits54(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 46;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 52;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 50;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 48;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 46;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 52;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 50;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]);
   }

   static void unpackBits55(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 47;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 39;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 54;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 46;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 53;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 45;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 37;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 52;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 51;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 43;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 35;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 50;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 49;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 41;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 33;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits56(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 1] = Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 3] = Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 5] = Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 7] = Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits57(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 49;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 41;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 33;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 50;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 51;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 43;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 35;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 52;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 53;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 45;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 37;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 54;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 46;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 55;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 47;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 39;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 56;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits58(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 50;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 52;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 54;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 46;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 56;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 50;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 52;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 54;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 46;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 56;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]);
   }

   static void unpackBits59(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 51;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 43;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 35;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 54;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 46;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 57;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 49;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 41;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 33;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 52;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 55;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 47;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 39;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 58;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 50;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 53;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 45;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 37;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 56;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits60(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 52;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 56;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 2] = Byte.toUnsignedLong(buf[off++]) << 52;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 56;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 52;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 56;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 6] = Byte.toUnsignedLong(buf[off++]) << 52;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 56;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits61(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 53;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 45;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 37;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 58;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 50;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 55;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 47;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 39;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 60;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 52;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 57;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 49;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 41;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 33;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 54;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 46;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 59;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 51;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 43;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 35;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 56;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits62(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 54;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 46;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 60;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 52;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 58;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 50;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 56;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]);
      values[i + 4] = Byte.toUnsignedLong(buf[off++]) << 54;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 46;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 60;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 52;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 58;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 50;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 56;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }

   static void unpackBits63(long[] values, int i, byte[] buf, int off) {
      values[i + 0] = Byte.toUnsignedLong(buf[off++]) << 55;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 47;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 39;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 31;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 23;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 15;
      values[i + 0] |= Byte.toUnsignedLong(buf[off++]) << 7;
      values[i + 0] |= Byte.toUnsignedLong(buf[off]) >>> 1;
      values[i + 1] = (Byte.toUnsignedLong(buf[off++]) & 1L) << 62;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 54;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 46;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 38;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 30;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 22;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 14;
      values[i + 1] |= Byte.toUnsignedLong(buf[off++]) << 6;
      values[i + 1] |= Byte.toUnsignedLong(buf[off]) >>> 2;
      values[i + 2] = (Byte.toUnsignedLong(buf[off++]) & 3L) << 61;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 53;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 45;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 37;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 29;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 21;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 13;
      values[i + 2] |= Byte.toUnsignedLong(buf[off++]) << 5;
      values[i + 2] |= Byte.toUnsignedLong(buf[off]) >>> 3;
      values[i + 3] = (Byte.toUnsignedLong(buf[off++]) & 7L) << 60;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 52;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 44;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 36;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 28;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 20;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 12;
      values[i + 3] |= Byte.toUnsignedLong(buf[off++]) << 4;
      values[i + 3] |= Byte.toUnsignedLong(buf[off]) >>> 4;
      values[i + 4] = (Byte.toUnsignedLong(buf[off++]) & 15L) << 59;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 51;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 43;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 35;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 27;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 19;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 11;
      values[i + 4] |= Byte.toUnsignedLong(buf[off++]) << 3;
      values[i + 4] |= Byte.toUnsignedLong(buf[off]) >>> 5;
      values[i + 5] = (Byte.toUnsignedLong(buf[off++]) & 31L) << 58;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 50;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 42;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 34;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 26;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 18;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 10;
      values[i + 5] |= Byte.toUnsignedLong(buf[off++]) << 2;
      values[i + 5] |= Byte.toUnsignedLong(buf[off]) >>> 6;
      values[i + 6] = (Byte.toUnsignedLong(buf[off++]) & 63L) << 57;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 49;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 41;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 33;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 25;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 17;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 9;
      values[i + 6] |= Byte.toUnsignedLong(buf[off++]) << 1;
      values[i + 6] |= Byte.toUnsignedLong(buf[off]) >>> 7;
      values[i + 7] = (Byte.toUnsignedLong(buf[off++]) & 127L) << 56;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 48;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 40;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 32;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 24;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 16;
      values[i + 7] |= Byte.toUnsignedLong(buf[off++]) << 8;
      values[i + 7] |= Byte.toUnsignedLong(buf[off]);
   }
}
