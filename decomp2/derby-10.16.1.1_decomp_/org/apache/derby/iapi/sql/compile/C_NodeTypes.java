package org.apache.derby.iapi.sql.compile;

public interface C_NodeTypes {
   int TEST_CONSTRAINT_NODE = 1;
   int CURRENT_ROW_LOCATION_NODE = 2;
   int GROUP_BY_LIST = 3;
   int CURRENT_ISOLATION_NODE = 4;
   int IDENTITY_VAL_NODE = 5;
   int CURRENT_SCHEMA_NODE = 6;
   int ORDER_BY_LIST = 7;
   int PREDICATE_LIST = 8;
   int RESULT_COLUMN_LIST = 9;
   int SUBQUERY_LIST = 11;
   int TABLE_ELEMENT_LIST = 12;
   int UNTYPED_NULL_CONSTANT_NODE = 13;
   int TABLE_ELEMENT_NODE = 14;
   int VALUE_NODE_LIST = 15;
   int ALL_RESULT_COLUMN = 16;
   int GET_CURRENT_CONNECTION_NODE = 18;
   int NOP_STATEMENT_NODE = 19;
   int DB2_LENGTH_OPERATOR_NODE = 20;
   int SET_TRANSACTION_ISOLATION_NODE = 21;
   int CHAR_LENGTH_OPERATOR_NODE = 23;
   int IS_NOT_NULL_NODE = 24;
   int IS_NULL_NODE = 25;
   int NOT_NODE = 26;
   int SQL_TO_JAVA_VALUE_NODE = 28;
   int UNARY_MINUS_OPERATOR_NODE = 29;
   int UNARY_PLUS_OPERATOR_NODE = 30;
   int UNARY_DATE_TIMESTAMP_OPERATOR_NODE = 32;
   int TIMESTAMP_OPERATOR_NODE = 33;
   int TABLE_NAME = 34;
   int GROUP_BY_COLUMN = 35;
   int JAVA_TO_SQL_VALUE_NODE = 36;
   int FROM_LIST = 37;
   int BOOLEAN_CONSTANT_NODE = 38;
   int AND_NODE = 39;
   int BINARY_DIVIDE_OPERATOR_NODE = 40;
   int BINARY_EQUALS_OPERATOR_NODE = 41;
   int BINARY_GREATER_EQUALS_OPERATOR_NODE = 42;
   int BINARY_GREATER_THAN_OPERATOR_NODE = 43;
   int BINARY_LESS_EQUALS_OPERATOR_NODE = 44;
   int BINARY_LESS_THAN_OPERATOR_NODE = 45;
   int BINARY_MINUS_OPERATOR_NODE = 46;
   int BINARY_NOT_EQUALS_OPERATOR_NODE = 47;
   int BINARY_PLUS_OPERATOR_NODE = 48;
   int BINARY_TIMES_OPERATOR_NODE = 49;
   int CONCATENATION_OPERATOR_NODE = 50;
   int LIKE_ESCAPE_OPERATOR_NODE = 51;
   int OR_NODE = 52;
   int BETWEEN_OPERATOR_NODE = 53;
   int CONDITIONAL_NODE = 54;
   int IN_LIST_OPERATOR_NODE = 55;
   int NOT_BETWEEN_OPERATOR_NODE = 56;
   int NOT_IN_LIST_OPERATOR_NODE = 57;
   int BIT_CONSTANT_NODE = 58;
   int VARBIT_CONSTANT_NODE = 59;
   int CAST_NODE = 60;
   int CHAR_CONSTANT_NODE = 61;
   int COLUMN_REFERENCE = 62;
   int DROP_INDEX_NODE = 63;
   int DROP_TRIGGER_NODE = 65;
   int DECIMAL_CONSTANT_NODE = 67;
   int DOUBLE_CONSTANT_NODE = 68;
   int REAL_CONSTANT_NODE = 69;
   int INT_CONSTANT_NODE = 70;
   int BIGINT_CONSTANT_NODE = 71;
   int LONGVARBIT_CONSTANT_NODE = 72;
   int LONGVARCHAR_CONSTANT_NODE = 73;
   int SMALLINT_CONSTANT_NODE = 74;
   int TINYINT_CONSTANT_NODE = 75;
   int USERTYPE_CONSTANT_NODE = 76;
   int VARCHAR_CONSTANT_NODE = 77;
   int PREDICATE = 78;
   int RESULT_COLUMN = 80;
   int SET_SCHEMA_NODE = 81;
   int UPDATE_COLUMN = 82;
   int SIMPLE_STRING_OPERATOR_NODE = 83;
   int STATIC_CLASS_FIELD_REFERENCE_NODE = 84;
   int STATIC_METHOD_CALL_NODE = 85;
   int REVOKE_NODE = 86;
   int EXTRACT_OPERATOR_NODE = 87;
   int PARAMETER_NODE = 88;
   int GRANT_NODE = 89;
   int DROP_SCHEMA_NODE = 90;
   int DROP_TABLE_NODE = 91;
   int DROP_VIEW_NODE = 92;
   int SUBQUERY_NODE = 93;
   int BASE_COLUMN_NODE = 94;
   int CALL_STATEMENT_NODE = 95;
   int MODIFY_COLUMN_DEFAULT_NODE = 97;
   int NON_STATIC_METHOD_CALL_NODE = 98;
   int CURRENT_OF_NODE = 99;
   int DEFAULT_NODE = 100;
   int DELETE_NODE = 101;
   int UPDATE_NODE = 102;
   int PRIVILEGE_NODE = 103;
   int ORDER_BY_COLUMN = 104;
   int ROW_RESULT_SET_NODE = 105;
   int TABLE_PRIVILEGES_NODE = 106;
   int VIRTUAL_COLUMN_NODE = 107;
   int CURRENT_DATETIME_OPERATOR_NODE = 108;
   int CURRENT_USER_NODE = 109;
   int USER_NODE = 110;
   int IS_NODE = 111;
   int LOCK_TABLE_NODE = 112;
   int DROP_COLUMN_NODE = 113;
   int ALTER_TABLE_NODE = 114;
   int AGGREGATE_NODE = 115;
   int COLUMN_DEFINITION_NODE = 116;
   int EXEC_SPS_NODE = 118;
   int FK_CONSTRAINT_DEFINITION_NODE = 119;
   int FROM_VTI = 120;
   int MATERIALIZE_RESULT_SET_NODE = 121;
   int NORMALIZE_RESULT_SET_NODE = 122;
   int SCROLL_INSENSITIVE_RESULT_SET_NODE = 123;
   int DISTINCT_NODE = 124;
   int SESSION_USER_NODE = 125;
   int SYSTEM_USER_NODE = 126;
   int TRIM_OPERATOR_NODE = 127;
   int SELECT_NODE = 129;
   int CREATE_VIEW_NODE = 130;
   int CONSTRAINT_DEFINITION_NODE = 131;
   int NEW_INVOCATION_NODE = 133;
   int CREATE_SCHEMA_NODE = 134;
   int FROM_BASE_TABLE = 135;
   int FROM_SUBQUERY = 136;
   int GROUP_BY_NODE = 137;
   int INSERT_NODE = 138;
   int JOIN_NODE = 139;
   int ORDER_BY_NODE = 140;
   int CREATE_TABLE_NODE = 141;
   int UNION_NODE = 142;
   int CREATE_TRIGGER_NODE = 143;
   int HALF_OUTER_JOIN_NODE = 144;
   int CREATE_INDEX_NODE = 146;
   int CURSOR_NODE = 147;
   int HASH_TABLE_NODE = 148;
   int INDEX_TO_BASE_ROW_NODE = 149;
   int CREATE_ALIAS_NODE = 150;
   int PROJECT_RESTRICT_NODE = 151;
   int SUBSTRING_OPERATOR_NODE = 154;
   int DROP_ALIAS_NODE = 156;
   int INTERSECT_OR_EXCEPT_NODE = 157;
   int TIMESTAMP_ADD_FN_NODE = 184;
   int TIMESTAMP_DIFF_FN_NODE = 185;
   int MODIFY_COLUMN_TYPE_NODE = 186;
   int MODIFY_COLUMN_CONSTRAINT_NODE = 187;
   int ABSOLUTE_OPERATOR_NODE = 188;
   int SQRT_OPERATOR_NODE = 189;
   int LOCATE_FUNCTION_NODE = 190;
   int RENAME_NODE = 191;
   int COALESCE_FUNCTION_NODE = 192;
   int MODIFY_COLUMN_CONSTRAINT_NOT_NULL_NODE = 193;
   int MOD_OPERATOR_NODE = 194;
   int BLOB_CONSTANT_NODE = 195;
   int CLOB_CONSTANT_NODE = 196;
   int SAVEPOINT_NODE = 198;
   int XML_CONSTANT_NODE = 199;
   int XML_PARSE_OPERATOR_NODE = 200;
   int XML_SERIALIZE_OPERATOR_NODE = 201;
   int XML_EXISTS_OPERATOR_NODE = 202;
   int XML_QUERY_OPERATOR_NODE = 203;
   int CURRENT_ROLE_NODE = 210;
   int CREATE_ROLE_NODE = 211;
   int SET_ROLE_NODE = 212;
   int SET_ROLE_DYNAMIC = 213;
   int DROP_ROLE_NODE = 214;
   int GRANT_ROLE_NODE = 215;
   int REVOKE_ROLE_NODE = 216;
   int GENERATION_CLAUSE_NODE = 222;
   int ROW_COUNT_NODE = 223;
   int CREATE_SEQUENCE_NODE = 224;
   int DROP_SEQUENCE_NODE = 225;
   int NEXT_SEQUENCE_NODE = 231;
   int AGGREGATE_WINDOW_FUNCTION_NODE = 226;
   int ROW_NUMBER_FUNCTION_NODE = 227;
   int WINDOW_DEFINITION_NODE = 228;
   int WINDOW_REFERENCE_NODE = 229;
   int WINDOW_RESULTSET_NODE = 230;
   int FINAL_VALUE = 231;
   int MAX_NODE_TYPE = 999;
}
