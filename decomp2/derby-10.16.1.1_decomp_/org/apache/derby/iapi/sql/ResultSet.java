package org.apache.derby.iapi.sql;

import java.sql.SQLWarning;
import java.sql.Timestamp;
import org.apache.derby.iapi.sql.execute.ExecRow;
import org.apache.derby.iapi.sql.execute.NoPutResultSet;
import org.apache.derby.shared.common.error.StandardException;
import org.w3c.dom.Element;

public interface ResultSet {
   int CURRENT_RESULTSET_ONLY = 0;
   int ENTIRE_RESULTSET_TREE = 1;
   int ISBEFOREFIRST = 101;
   int ISFIRST = 102;
   int ISLAST = 103;
   int ISAFTERLAST = 104;

   boolean returnsRows();

   long modifiedRowCount();

   ResultDescription getResultDescription();

   Activation getActivation();

   void open() throws StandardException;

   ExecRow getAbsoluteRow(int var1) throws StandardException;

   ExecRow getRelativeRow(int var1) throws StandardException;

   ExecRow setBeforeFirstRow() throws StandardException;

   ExecRow getFirstRow() throws StandardException;

   ExecRow getNextRow() throws StandardException;

   ExecRow getPreviousRow() throws StandardException;

   ExecRow getLastRow() throws StandardException;

   ExecRow setAfterLastRow() throws StandardException;

   void clearCurrentRow();

   boolean checkRowPosition(int var1) throws StandardException;

   int getRowNumber();

   void close() throws StandardException;

   void cleanUp() throws StandardException;

   boolean isClosed();

   void finish() throws StandardException;

   long getExecuteTime();

   Timestamp getBeginExecutionTimestamp();

   Timestamp getEndExecutionTimestamp();

   long getTimeSpent(int var1);

   NoPutResultSet[] getSubqueryTrackingArray(int var1);

   ResultSet getAutoGeneratedKeysResultset();

   String getCursorName();

   void addWarning(SQLWarning var1);

   SQLWarning getWarnings();

   Element toXML(Element var1, String var2) throws Exception;
}
