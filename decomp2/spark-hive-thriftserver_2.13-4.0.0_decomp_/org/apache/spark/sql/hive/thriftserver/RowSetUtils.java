package org.apache.spark.sql.hive.thriftserver;

import java.nio.ByteBuffer;
import java.util.BitSet;
import org.apache.hive.service.rpc.thrift.TProtocolVersion;
import org.apache.hive.service.rpc.thrift.TRowSet;
import org.apache.spark.sql.types.DataType;
import scala.collection.immutable.Seq;
import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u0005\u0005\u0015u!\u0002\u0006\f\u0011\u0003Ab!\u0002\u000e\f\u0011\u0003Y\u0002\"\u0002\u0012\u0002\t\u0003\u0019\u0003\"\u0002\u0013\u0002\t\u0007)\u0003\"\u0002\u001c\u0002\t\u00039\u0004\"\u00026\u0002\t\u0013Y\u0007bBA\n\u0003\u0011%\u0011Q\u0003\u0005\b\u0003C\tA\u0011BA\u0012\u0011\u001d\ty$\u0001C\u0005\u0003\u0003Bq!!\u001c\u0002\t\u0013\ty'A\u0006S_^\u001cV\r^+uS2\u001c(B\u0001\u0007\u000e\u00031!\bN]5giN,'O^3s\u0015\tqq\"\u0001\u0003iSZ,'B\u0001\t\u0012\u0003\r\u0019\u0018\u000f\u001c\u0006\u0003%M\tQa\u001d9be.T!\u0001F\u000b\u0002\r\u0005\u0004\u0018m\u00195f\u0015\u00051\u0012aA8sO\u000e\u0001\u0001CA\r\u0002\u001b\u0005Y!a\u0003*poN+G/\u0016;jYN\u001c\"!\u0001\u000f\u0011\u0005u\u0001S\"\u0001\u0010\u000b\u0003}\tQa]2bY\u0006L!!\t\u0010\u0003\r\u0005s\u0017PU3g\u0003\u0019a\u0014N\\5u}Q\t\u0001$\u0001\bcSR\u001cV\r\u001e+p\u0005V4g-\u001a:\u0015\u0005\u0019r\u0003CA\u0014-\u001b\u0005A#BA\u0015+\u0003\rq\u0017n\u001c\u0006\u0002W\u0005!!.\u0019<b\u0013\ti\u0003F\u0001\u0006CsR,')\u001e4gKJDQaL\u0002A\u0002A\naAY5u'\u0016$\bCA\u00195\u001b\u0005\u0011$BA\u001a+\u0003\u0011)H/\u001b7\n\u0005U\u0012$A\u0002\"jiN+G/A\u0005u_R\u0013vn^*fiR)\u0001h\u0011%[KB\u0011\u0011(Q\u0007\u0002u)\u00111\bP\u0001\u0007i\"\u0014\u0018N\u001a;\u000b\u0005ur\u0014a\u0001:qG*\u0011q\bQ\u0001\bg\u0016\u0014h/[2f\u0015\tq1#\u0003\u0002Cu\t9AKU8x'\u0016$\b\"\u0002#\u0005\u0001\u0004)\u0015AD:uCJ$(k\\<PM\u001a\u001cV\r\u001e\t\u0003;\u0019K!a\u0012\u0010\u0003\t1{gn\u001a\u0005\u0006\u0013\u0012\u0001\rAS\u0001\u0005e><8\u000fE\u0002L'Zs!\u0001T)\u000f\u00055\u0003V\"\u0001(\u000b\u0005=;\u0012A\u0002\u001fs_>$h(C\u0001 \u0013\t\u0011f$A\u0004qC\u000e\\\u0017mZ3\n\u0005Q+&aA*fc*\u0011!K\b\t\u0003/bk\u0011aD\u0005\u00033>\u00111AU8x\u0011\u0015YF\u00011\u0001]\u0003\u0019\u00198\r[3nCB\u0019Q$X0\n\u0005ys\"!B!se\u0006L\bC\u00011d\u001b\u0005\t'B\u00012\u0010\u0003\u0015!\u0018\u0010]3t\u0013\t!\u0017M\u0001\u0005ECR\fG+\u001f9f\u0011\u00151G\u00011\u0001h\u0003=\u0001(o\u001c;pG>dg+\u001a:tS>t\u0007CA\u001di\u0013\tI'H\u0001\tU!J|Go\\2pYZ+'o]5p]\u0006iAo\u001c*po\n\u000b7/\u001a3TKR$r\u0001\u000f7n]>\fI\u0001C\u0003E\u000b\u0001\u0007Q\tC\u0003J\u000b\u0001\u0007!\nC\u0003\\\u000b\u0001\u0007A\fC\u0003q\u000b\u0001\u0007\u0011/\u0001\buS6,gi\u001c:nCR$XM]:\u0011\u0007I\f\u0019A\u0004\u0002t}:\u0011A\u000f \b\u0003knt!A\u001e>\u000f\u0005]LhBA'y\u0013\u00051\u0012B\u0001\u000b\u0016\u0013\t\u00112#\u0003\u0002\u0011#%\u0011QpD\u0001\nKb,7-\u001e;j_:L1a`A\u0001\u0003)A\u0015N^3SKN,H\u000e\u001e\u0006\u0003{>IA!!\u0002\u0002\b\tqA+[7f\r>\u0014X.\u0019;uKJ\u001c(bA@\u0002\u0002!9\u00111B\u0003A\u0002\u00055\u0011a\u00042j]\u0006\u0014\u0018PR8s[\u0006$H/\u001a:\u0011\u0007I\fy!\u0003\u0003\u0002\u0012\u0005\u001d!a\u0004\"j]\u0006\u0014\u0018PR8s[\u0006$H/\u001a:\u0002!Q|7i\u001c7v[:\u0014\u0015m]3e'\u0016$Hc\u0003\u001d\u0002\u0018\u0005e\u00111DA\u000f\u0003?AQ\u0001\u0012\u0004A\u0002\u0015CQ!\u0013\u0004A\u0002)CQa\u0017\u0004A\u0002qCQ\u0001\u001d\u0004A\u0002EDq!a\u0003\u0007\u0001\u0004\ti!A\u0005u_R\u001bu\u000e\\;n]Ra\u0011QEA\u0016\u0003[\t9$a\u000f\u0002>A\u0019\u0011(a\n\n\u0007\u0005%\"HA\u0004U\u0007>dW/\u001c8\t\u000b%;\u0001\u0019\u0001&\t\u000f\u0005=r\u00011\u0001\u00022\u00059qN\u001d3j]\u0006d\u0007cA\u000f\u00024%\u0019\u0011Q\u0007\u0010\u0003\u0007%sG\u000f\u0003\u0004\u0002:\u001d\u0001\raX\u0001\u0004if\u0004\b\"\u00029\b\u0001\u0004\t\bbBA\u0006\u000f\u0001\u0007\u0011QB\u0001\u000fO\u0016$xJ]*fi\u0006\u001bh*\u001e7m+\u0011\t\u0019%a\u0014\u0015\u0015\u0005\u0015\u0013\u0011MA2\u0003K\nI\u0007E\u00032\u0003\u000f\nY%C\u0002\u0002JI\u0012A\u0001T5tiB!\u0011QJA(\u0019\u0001!q!!\u0015\t\u0005\u0004\t\u0019FA\u0001U#\u0011\t)&a\u0017\u0011\u0007u\t9&C\u0002\u0002Zy\u0011qAT8uQ&tw\rE\u0002\u001e\u0003;J1!a\u0018\u001f\u0005\r\te.\u001f\u0005\u0006\u0013\"\u0001\rA\u0013\u0005\b\u0003_A\u0001\u0019AA\u0019\u0011\u0019\t9\u0007\u0003a\u0001a\u0005)a.\u001e7mg\"9\u00111\u000e\u0005A\u0002\u0005-\u0013A\u00033fM\u0006,H\u000e\u001e,bY\u0006qAo\u001c+D_2,XN\u001c,bYV,G\u0003DA9\u0003o\nI(! \u0002\u0002\u0006\r\u0005cA\u001d\u0002t%\u0019\u0011Q\u000f\u001e\u0003\u0019Q\u001bu\u000e\\;n]Z\u000bG.^3\t\u000f\u0005=\u0012\u00021\u0001\u00022!1\u00111P\u0005A\u0002Y\u000b1A]8x\u0011\u0019\ty(\u0003a\u0001?\u0006AA-\u0019;b)f\u0004X\rC\u0003q\u0013\u0001\u0007\u0011\u000fC\u0004\u0002\f%\u0001\r!!\u0004"
)
public final class RowSetUtils {
   public static TRowSet toTRowSet(final long startRowOffSet, final Seq rows, final DataType[] schema, final TProtocolVersion protocolVersion) {
      return RowSetUtils$.MODULE$.toTRowSet(startRowOffSet, rows, schema, protocolVersion);
   }

   public static ByteBuffer bitSetToBuffer(final BitSet bitSet) {
      return RowSetUtils$.MODULE$.bitSetToBuffer(bitSet);
   }
}
