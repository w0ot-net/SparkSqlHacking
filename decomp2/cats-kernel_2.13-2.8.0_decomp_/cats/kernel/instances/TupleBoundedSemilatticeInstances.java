package cats.kernel.instances;

import cats.kernel.Band;
import cats.kernel.BoundedSemilattice;
import cats.kernel.CommutativeMonoid;
import cats.kernel.CommutativeSemigroup;
import cats.kernel.Eq;
import cats.kernel.Monoid;
import cats.kernel.PartialOrder;
import cats.kernel.Semigroup;
import cats.kernel.Semilattice;
import scala.Option;
import scala.Tuple1;
import scala.Tuple10;
import scala.Tuple11;
import scala.Tuple12;
import scala.Tuple13;
import scala.Tuple14;
import scala.Tuple15;
import scala.Tuple16;
import scala.Tuple17;
import scala.Tuple18;
import scala.Tuple19;
import scala.Tuple2;
import scala.Tuple20;
import scala.Tuple21;
import scala.Tuple22;
import scala.Tuple3;
import scala.Tuple4;
import scala.Tuple5;
import scala.Tuple6;
import scala.Tuple7;
import scala.Tuple8;
import scala.Tuple9;
import scala.collection.IterableOnce;
import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u0005%-h\u0001\u0003\r\u001a!\u0003\r\taG\u0010\t\u000b)\u0002A\u0011\u0001\u0017\t\u000bA\u0002A1A\u0019\t\u000b!\u0003A1A%\t\u000be\u0003A1\u0001.\t\u000b9\u0004A1A8\t\u000f\u0005=\u0001\u0001b\u0001\u0002\u0012!9\u0011\u0011\n\u0001\u0005\u0004\u0005-\u0003bBAF\u0001\u0011\r\u0011Q\u0012\u0005\b\u0003+\u0004A1AAl\u0011\u001d\u00119\u0003\u0001C\u0002\u0005SAqA!!\u0001\t\u0007\u0011\u0019\tC\u0004\u0003d\u0002!\u0019A!:\t\u000f\r5\u0003\u0001b\u0001\u0004P!91q\u0018\u0001\u0005\u0004\r\u0005\u0007b\u0002C\u001d\u0001\u0011\rA1\b\u0005\b\tw\u0003A1\u0001C_\u0011\u001d))\u0005\u0001C\u0002\u000b\u000fBq!b6\u0001\t\u0007)I\u000eC\u0004\u0007r\u0001!\u0019Ab\u001d\t\u000f\u001dM\u0001\u0001b\u0001\b\u0016!9qQ\u0018\u0001\u0005\u0004\u001d}\u0006b\u0002E8\u0001\u0011\r\u0001\u0012\u000f\u0005\b\u0013S\u0001A1AE\u0016\u0005\u0001\"V\u000f\u001d7f\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cW-\u00138ti\u0006t7-Z:\u000b\u0005iY\u0012!C5ogR\fgnY3t\u0015\taR$\u0001\u0004lKJtW\r\u001c\u0006\u0002=\u0005!1-\u0019;t'\r\u0001\u0001E\n\t\u0003C\u0011j\u0011A\t\u0006\u0002G\u0005)1oY1mC&\u0011QE\t\u0002\u0007\u0003:L(+\u001a4\u0011\u0005\u001dBS\"A\r\n\u0005%J\"a\u0005+va2,wI]8va&s7\u000f^1oG\u0016\u001c\u0018A\u0002\u0013j]&$He\u0001\u0001\u0015\u00035\u0002\"!\t\u0018\n\u0005=\u0012#\u0001B+oSR\fQeY1ug.+'O\\3m\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.Z\u0019\u0016\u0005IbDCA\u001aF!\r!TgN\u0007\u00027%\u0011ag\u0007\u0002\u0013\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cW\rE\u0002\"qiJ!!\u000f\u0012\u0003\rQ+\b\u000f\\32!\tYD\b\u0004\u0001\u0005\u000bu\u0012!\u0019\u0001 \u0003\u0005\u0005\u0003\u0014CA C!\t\t\u0003)\u0003\u0002BE\t9aj\u001c;iS:<\u0007CA\u0011D\u0013\t!%EA\u0002B]fDQA\u0012\u0002A\u0004\u001d\u000b!!\u0011\u0019\u0011\u0007Q*$(A\u0013dCR\u001c8*\u001a:oK2\u0014u.\u001e8eK\u0012\u001cV-\\5mCR$\u0018nY3G_J$V\u000f\u001d7feU\u0019!\n\u0015*\u0015\u0007-#f\u000bE\u00025k1\u0003B!I'P#&\u0011aJ\t\u0002\u0007)V\u0004H.\u001a\u001a\u0011\u0005m\u0002F!B\u001f\u0004\u0005\u0004q\u0004CA\u001eS\t\u0015\u00196A1\u0001?\u0005\t\t\u0015\u0007C\u0003G\u0007\u0001\u000fQ\u000bE\u00025k=CQaV\u0002A\u0004a\u000b!!Q\u0019\u0011\u0007Q*\u0014+A\u0013dCR\u001c8*\u001a:oK2\u0014u.\u001e8eK\u0012\u001cV-\\5mCR$\u0018nY3G_J$V\u000f\u001d7fgU!1,Y2f)\u0011av-[6\u0011\u0007Q*T\fE\u0003\"=\u0002\u0014G-\u0003\u0002`E\t1A+\u001e9mKN\u0002\"aO1\u0005\u000bu\"!\u0019\u0001 \u0011\u0005m\u001aG!B*\u0005\u0005\u0004q\u0004CA\u001ef\t\u00151GA1\u0001?\u0005\t\t%\u0007C\u0003G\t\u0001\u000f\u0001\u000eE\u00025k\u0001DQa\u0016\u0003A\u0004)\u00042\u0001N\u001bc\u0011\u0015aG\u0001q\u0001n\u0003\t\t%\u0007E\u00025k\u0011\fQeY1ug.+'O\\3m\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.\u001a\u001b\u0016\u000bA4\bP\u001f?\u0015\u0011Et\u0018\u0011AA\u0003\u0003\u0013\u00012\u0001N\u001bs!\u0019\t3/^<zw&\u0011AO\t\u0002\u0007)V\u0004H.\u001a\u001b\u0011\u0005m2H!B\u001f\u0006\u0005\u0004q\u0004CA\u001ey\t\u0015\u0019VA1\u0001?!\tY$\u0010B\u0003g\u000b\t\u0007a\b\u0005\u0002<y\u0012)Q0\u0002b\u0001}\t\u0011\u0011i\r\u0005\u0006\r\u0016\u0001\u001da \t\u0004iU*\bBB,\u0006\u0001\b\t\u0019\u0001E\u00025k]Da\u0001\\\u0003A\u0004\u0005\u001d\u0001c\u0001\u001b6s\"9\u00111B\u0003A\u0004\u00055\u0011AA!4!\r!Tg_\u0001&G\u0006$8oS3s]\u0016d'i\\;oI\u0016$7+Z7jY\u0006$H/[2f\r>\u0014H+\u001e9mKV*B\"a\u0005\u0002 \u0005\r\u0012qEA\u0016\u0003_!B\"!\u0006\u00024\u0005]\u00121HA \u0003\u0007\u0002B\u0001N\u001b\u0002\u0018Ai\u0011%!\u0007\u0002\u001e\u0005\u0005\u0012QEA\u0015\u0003[I1!a\u0007#\u0005\u0019!V\u000f\u001d7fkA\u00191(a\b\u0005\u000bu2!\u0019\u0001 \u0011\u0007m\n\u0019\u0003B\u0003T\r\t\u0007a\bE\u0002<\u0003O!QA\u001a\u0004C\u0002y\u00022aOA\u0016\t\u0015ihA1\u0001?!\rY\u0014q\u0006\u0003\u0007\u0003c1!\u0019\u0001 \u0003\u0005\u0005#\u0004B\u0002$\u0007\u0001\b\t)\u0004\u0005\u00035k\u0005u\u0001BB,\u0007\u0001\b\tI\u0004\u0005\u00035k\u0005\u0005\u0002B\u00027\u0007\u0001\b\ti\u0004\u0005\u00035k\u0005\u0015\u0002bBA\u0006\r\u0001\u000f\u0011\u0011\t\t\u0005iU\nI\u0003C\u0004\u0002F\u0019\u0001\u001d!a\u0012\u0002\u0005\u0005#\u0004\u0003\u0002\u001b6\u0003[\tQeY1ug.+'O\\3m\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.\u001a\u001c\u0016\u001d\u00055\u0013\u0011LA/\u0003C\n)'!\u001b\u0002nQq\u0011qJA9\u0003k\nI(! \u0002\u0002\u0006\u0015\u0005\u0003\u0002\u001b6\u0003#\u0002r\"IA*\u0003/\nY&a\u0018\u0002d\u0005\u001d\u00141N\u0005\u0004\u0003+\u0012#A\u0002+va2,g\u0007E\u0002<\u00033\"Q!P\u0004C\u0002y\u00022aOA/\t\u0015\u0019vA1\u0001?!\rY\u0014\u0011\r\u0003\u0006M\u001e\u0011\rA\u0010\t\u0004w\u0005\u0015D!B?\b\u0005\u0004q\u0004cA\u001e\u0002j\u00111\u0011\u0011G\u0004C\u0002y\u00022aOA7\t\u0019\tyg\u0002b\u0001}\t\u0011\u0011)\u000e\u0005\u0007\r\u001e\u0001\u001d!a\u001d\u0011\tQ*\u0014q\u000b\u0005\u0007/\u001e\u0001\u001d!a\u001e\u0011\tQ*\u00141\f\u0005\u0007Y\u001e\u0001\u001d!a\u001f\u0011\tQ*\u0014q\f\u0005\b\u0003\u00179\u00019AA@!\u0011!T'a\u0019\t\u000f\u0005\u0015s\u0001q\u0001\u0002\u0004B!A'NA4\u0011\u001d\t9i\u0002a\u0002\u0003\u0013\u000b!!Q\u001b\u0011\tQ*\u00141N\u0001&G\u0006$8oS3s]\u0016d'i\\;oI\u0016$7+Z7jY\u0006$H/[2f\r>\u0014H+\u001e9mK^*\u0002#a$\u0002\u001c\u0006}\u00151UAT\u0003W\u000by+a-\u0015!\u0005E\u0015qWA^\u0003\u007f\u000b\u0019-a2\u0002L\u0006=\u0007\u0003\u0002\u001b6\u0003'\u0003\u0012#IAK\u00033\u000bi*!)\u0002&\u0006%\u0016QVAY\u0013\r\t9J\t\u0002\u0007)V\u0004H.Z\u001c\u0011\u0007m\nY\nB\u0003>\u0011\t\u0007a\bE\u0002<\u0003?#Qa\u0015\u0005C\u0002y\u00022aOAR\t\u00151\u0007B1\u0001?!\rY\u0014q\u0015\u0003\u0006{\"\u0011\rA\u0010\t\u0004w\u0005-FABA\u0019\u0011\t\u0007a\bE\u0002<\u0003_#a!a\u001c\t\u0005\u0004q\u0004cA\u001e\u00024\u00121\u0011Q\u0017\u0005C\u0002y\u0012!!\u0011\u001c\t\r\u0019C\u00019AA]!\u0011!T'!'\t\r]C\u00019AA_!\u0011!T'!(\t\r1D\u00019AAa!\u0011!T'!)\t\u000f\u0005-\u0001\u0002q\u0001\u0002FB!A'NAS\u0011\u001d\t)\u0005\u0003a\u0002\u0003\u0013\u0004B\u0001N\u001b\u0002*\"9\u0011q\u0011\u0005A\u0004\u00055\u0007\u0003\u0002\u001b6\u0003[Cq!!5\t\u0001\b\t\u0019.\u0001\u0002BmA!A'NAY\u0003\u0015\u001a\u0017\r^:LKJtW\r\u001c\"pk:$W\rZ*f[&d\u0017\r\u001e;jG\u00164uN\u001d+va2,\u0007(\u0006\n\u0002Z\u0006\u0015\u0018\u0011^Aw\u0003c\f)0!?\u0002~\n\u0005ACEAn\u0005\u000b\u0011IA!\u0004\u0003\u0012\tU!\u0011\u0004B\u000f\u0005C\u0001B\u0001N\u001b\u0002^B\u0019\u0012%a8\u0002d\u0006\u001d\u00181^Ax\u0003g\f90a?\u0002\u0000&\u0019\u0011\u0011\u001d\u0012\u0003\rQ+\b\u000f\\39!\rY\u0014Q\u001d\u0003\u0006{%\u0011\rA\u0010\t\u0004w\u0005%H!B*\n\u0005\u0004q\u0004cA\u001e\u0002n\u0012)a-\u0003b\u0001}A\u00191(!=\u0005\u000buL!\u0019\u0001 \u0011\u0007m\n)\u0010\u0002\u0004\u00022%\u0011\rA\u0010\t\u0004w\u0005eHABA8\u0013\t\u0007a\bE\u0002<\u0003{$a!!.\n\u0005\u0004q\u0004cA\u001e\u0003\u0002\u00111!1A\u0005C\u0002y\u0012!!Q\u001c\t\r\u0019K\u00019\u0001B\u0004!\u0011!T'a9\t\r]K\u00019\u0001B\u0006!\u0011!T'a:\t\r1L\u00019\u0001B\b!\u0011!T'a;\t\u000f\u0005-\u0011\u0002q\u0001\u0003\u0014A!A'NAx\u0011\u001d\t)%\u0003a\u0002\u0005/\u0001B\u0001N\u001b\u0002t\"9\u0011qQ\u0005A\u0004\tm\u0001\u0003\u0002\u001b6\u0003oDq!!5\n\u0001\b\u0011y\u0002\u0005\u00035k\u0005m\bb\u0002B\u0012\u0013\u0001\u000f!QE\u0001\u0003\u0003^\u0002B\u0001N\u001b\u0002\u0000\u0006)3-\u0019;t\u0017\u0016\u0014h.\u001a7C_VtG-\u001a3TK6LG.\u0019;uS\u000e,gi\u001c:UkBdW-O\u000b\u0015\u0005W\u00119Da\u000f\u0003@\t\r#q\tB&\u0005\u001f\u0012\u0019Fa\u0016\u0015)\t5\"1\fB0\u0005G\u00129Ga\u001b\u0003p\tM$q\u000fB>!\u0011!TGa\f\u0011+\u0005\u0012\tD!\u000e\u0003:\tu\"\u0011\tB#\u0005\u0013\u0012iE!\u0015\u0003V%\u0019!1\u0007\u0012\u0003\rQ+\b\u000f\\3:!\rY$q\u0007\u0003\u0006{)\u0011\rA\u0010\t\u0004w\tmB!B*\u000b\u0005\u0004q\u0004cA\u001e\u0003@\u0011)aM\u0003b\u0001}A\u00191Ha\u0011\u0005\u000buT!\u0019\u0001 \u0011\u0007m\u00129\u0005\u0002\u0004\u00022)\u0011\rA\u0010\t\u0004w\t-CABA8\u0015\t\u0007a\bE\u0002<\u0005\u001f\"a!!.\u000b\u0005\u0004q\u0004cA\u001e\u0003T\u00111!1\u0001\u0006C\u0002y\u00022a\u000fB,\t\u0019\u0011IF\u0003b\u0001}\t\u0011\u0011\t\u000f\u0005\u0007\r*\u0001\u001dA!\u0018\u0011\tQ*$Q\u0007\u0005\u0007/*\u0001\u001dA!\u0019\u0011\tQ*$\u0011\b\u0005\u0007Y*\u0001\u001dA!\u001a\u0011\tQ*$Q\b\u0005\b\u0003\u0017Q\u00019\u0001B5!\u0011!TG!\u0011\t\u000f\u0005\u0015#\u0002q\u0001\u0003nA!A'\u000eB#\u0011\u001d\t9I\u0003a\u0002\u0005c\u0002B\u0001N\u001b\u0003J!9\u0011\u0011\u001b\u0006A\u0004\tU\u0004\u0003\u0002\u001b6\u0005\u001bBqAa\t\u000b\u0001\b\u0011I\b\u0005\u00035k\tE\u0003b\u0002B?\u0015\u0001\u000f!qP\u0001\u0003\u0003b\u0002B\u0001N\u001b\u0003V\u000513-\u0019;t\u0017\u0016\u0014h.\u001a7C_VtG-\u001a3TK6LG.\u0019;uS\u000e,gi\u001c:UkBdW-\r\u0019\u0016-\t\u0015%\u0011\u0013BK\u00053\u0013iJ!)\u0003&\n%&Q\u0016BY\u0005k#bCa\"\u0003:\nu&\u0011\u0019Bc\u0005\u0013\u0014iM!5\u0003V\ne'Q\u001c\t\u0005iU\u0012I\tE\f\"\u0005\u0017\u0013yIa%\u0003\u0018\nm%q\u0014BR\u0005O\u0013YKa,\u00034&\u0019!Q\u0012\u0012\u0003\u000fQ+\b\u000f\\32aA\u00191H!%\u0005\u000buZ!\u0019\u0001 \u0011\u0007m\u0012)\nB\u0003T\u0017\t\u0007a\bE\u0002<\u00053#QAZ\u0006C\u0002y\u00022a\u000fBO\t\u0015i8B1\u0001?!\rY$\u0011\u0015\u0003\u0007\u0003cY!\u0019\u0001 \u0011\u0007m\u0012)\u000b\u0002\u0004\u0002p-\u0011\rA\u0010\t\u0004w\t%FABA[\u0017\t\u0007a\bE\u0002<\u0005[#aAa\u0001\f\u0005\u0004q\u0004cA\u001e\u00032\u00121!\u0011L\u0006C\u0002y\u00022a\u000fB[\t\u0019\u00119l\u0003b\u0001}\t\u0011\u0011)\u000f\u0005\u0007\r.\u0001\u001dAa/\u0011\tQ*$q\u0012\u0005\u0007/.\u0001\u001dAa0\u0011\tQ*$1\u0013\u0005\u0007Y.\u0001\u001dAa1\u0011\tQ*$q\u0013\u0005\b\u0003\u0017Y\u00019\u0001Bd!\u0011!TGa'\t\u000f\u0005\u00153\u0002q\u0001\u0003LB!A'\u000eBP\u0011\u001d\t9i\u0003a\u0002\u0005\u001f\u0004B\u0001N\u001b\u0003$\"9\u0011\u0011[\u0006A\u0004\tM\u0007\u0003\u0002\u001b6\u0005OCqAa\t\f\u0001\b\u00119\u000e\u0005\u00035k\t-\u0006b\u0002B?\u0017\u0001\u000f!1\u001c\t\u0005iU\u0012y\u000bC\u0004\u0003`.\u0001\u001dA!9\u0002\u0005\u0005K\u0004\u0003\u0002\u001b6\u0005g\u000baeY1ug.+'O\\3m\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.Z\u00192+a\u00119Oa=\u0003x\nm(q`B\u0002\u0007\u000f\u0019Yaa\u0004\u0004\u0014\r]11\u0004\u000b\u0019\u0005S\u001cyba\t\u0004(\r-2qFB\u001a\u0007o\u0019Yda\u0010\u0004D\r\u001d\u0003\u0003\u0002\u001b6\u0005W\u0004\u0012$\tBw\u0005c\u0014)P!?\u0003~\u000e\u00051QAB\u0005\u0007\u001b\u0019\tb!\u0006\u0004\u001a%\u0019!q\u001e\u0012\u0003\u000fQ+\b\u000f\\32cA\u00191Ha=\u0005\u000bub!\u0019\u0001 \u0011\u0007m\u00129\u0010B\u0003T\u0019\t\u0007a\bE\u0002<\u0005w$QA\u001a\u0007C\u0002y\u00022a\u000fB\u0000\t\u0015iHB1\u0001?!\rY41\u0001\u0003\u0007\u0003ca!\u0019\u0001 \u0011\u0007m\u001a9\u0001\u0002\u0004\u0002p1\u0011\rA\u0010\t\u0004w\r-AABA[\u0019\t\u0007a\bE\u0002<\u0007\u001f!aAa\u0001\r\u0005\u0004q\u0004cA\u001e\u0004\u0014\u00111!\u0011\f\u0007C\u0002y\u00022aOB\f\t\u0019\u00119\f\u0004b\u0001}A\u00191ha\u0007\u0005\r\ruAB1\u0001?\u0005\r\t\u0015\u0007\r\u0005\u0007\r2\u0001\u001da!\t\u0011\tQ*$\u0011\u001f\u0005\u0007/2\u0001\u001da!\n\u0011\tQ*$Q\u001f\u0005\u0007Y2\u0001\u001da!\u000b\u0011\tQ*$\u0011 \u0005\b\u0003\u0017a\u00019AB\u0017!\u0011!TG!@\t\u000f\u0005\u0015C\u0002q\u0001\u00042A!A'NB\u0001\u0011\u001d\t9\t\u0004a\u0002\u0007k\u0001B\u0001N\u001b\u0004\u0006!9\u0011\u0011\u001b\u0007A\u0004\re\u0002\u0003\u0002\u001b6\u0007\u0013AqAa\t\r\u0001\b\u0019i\u0004\u0005\u00035k\r5\u0001b\u0002B?\u0019\u0001\u000f1\u0011\t\t\u0005iU\u001a\t\u0002C\u0004\u0003`2\u0001\u001da!\u0012\u0011\tQ*4Q\u0003\u0005\b\u0007\u0013b\u00019AB&\u0003\r\t\u0015\u0007\r\t\u0005iU\u001aI\"\u0001\u0014dCR\u001c8*\u001a:oK2\u0014u.\u001e8eK\u0012\u001cV-\\5mCR$\u0018nY3G_J$V\u000f\u001d7fcI*\"d!\u0015\u0004^\r\u00054QMB5\u0007[\u001a\th!\u001e\u0004z\ru4\u0011QBC\u0007\u0013#\"da\u0015\u0004\u000e\u000eE5QSBM\u0007;\u001b\tk!*\u0004*\u000e56\u0011WB[\u0007s\u0003B\u0001N\u001b\u0004VAY\u0012ea\u0016\u0004\\\r}31MB4\u0007W\u001ayga\u001d\u0004x\rm4qPBB\u0007\u000fK1a!\u0017#\u0005\u001d!V\u000f\u001d7fcI\u00022aOB/\t\u0015iTB1\u0001?!\rY4\u0011\r\u0003\u0006'6\u0011\rA\u0010\t\u0004w\r\u0015D!\u00024\u000e\u0005\u0004q\u0004cA\u001e\u0004j\u0011)Q0\u0004b\u0001}A\u00191h!\u001c\u0005\r\u0005ERB1\u0001?!\rY4\u0011\u000f\u0003\u0007\u0003_j!\u0019\u0001 \u0011\u0007m\u001a)\b\u0002\u0004\u000266\u0011\rA\u0010\t\u0004w\reDA\u0002B\u0002\u001b\t\u0007a\bE\u0002<\u0007{\"aA!\u0017\u000e\u0005\u0004q\u0004cA\u001e\u0004\u0002\u00121!qW\u0007C\u0002y\u00022aOBC\t\u0019\u0019i\"\u0004b\u0001}A\u00191h!#\u0005\r\r-UB1\u0001?\u0005\r\t\u0015'\r\u0005\u0007\r6\u0001\u001daa$\u0011\tQ*41\f\u0005\u0007/6\u0001\u001daa%\u0011\tQ*4q\f\u0005\u0007Y6\u0001\u001daa&\u0011\tQ*41\r\u0005\b\u0003\u0017i\u00019ABN!\u0011!Tga\u001a\t\u000f\u0005\u0015S\u0002q\u0001\u0004 B!A'NB6\u0011\u001d\t9)\u0004a\u0002\u0007G\u0003B\u0001N\u001b\u0004p!9\u0011\u0011[\u0007A\u0004\r\u001d\u0006\u0003\u0002\u001b6\u0007gBqAa\t\u000e\u0001\b\u0019Y\u000b\u0005\u00035k\r]\u0004b\u0002B?\u001b\u0001\u000f1q\u0016\t\u0005iU\u001aY\bC\u0004\u0003`6\u0001\u001daa-\u0011\tQ*4q\u0010\u0005\b\u0007\u0013j\u00019AB\\!\u0011!Tga!\t\u000f\rmV\u0002q\u0001\u0004>\u0006\u0019\u0011)M\u0019\u0011\tQ*4qQ\u0001'G\u0006$8oS3s]\u0016d'i\\;oI\u0016$7+Z7jY\u0006$H/[2f\r>\u0014H+\u001e9mKF\u001aT\u0003HBb\u0007\u001f\u001c\u0019na6\u0004\\\u000e}71]Bt\u0007W\u001cyoa=\u0004x\u000em8q \u000b\u001d\u0007\u000b$\u0019\u0001b\u0002\u0005\f\u0011=A1\u0003C\f\t7!y\u0002b\t\u0005(\u0011-Bq\u0006C\u001a!\u0011!Tga2\u0011;\u0005\u001aIm!4\u0004R\u000eU7\u0011\\Bo\u0007C\u001c)o!;\u0004n\u000eE8Q_B}\u0007{L1aa3#\u0005\u001d!V\u000f\u001d7fcM\u00022aOBh\t\u0015idB1\u0001?!\rY41\u001b\u0003\u0006':\u0011\rA\u0010\t\u0004w\r]G!\u00024\u000f\u0005\u0004q\u0004cA\u001e\u0004\\\u0012)QP\u0004b\u0001}A\u00191ha8\u0005\r\u0005EbB1\u0001?!\rY41\u001d\u0003\u0007\u0003_r!\u0019\u0001 \u0011\u0007m\u001a9\u000f\u0002\u0004\u00026:\u0011\rA\u0010\t\u0004w\r-HA\u0002B\u0002\u001d\t\u0007a\bE\u0002<\u0007_$aA!\u0017\u000f\u0005\u0004q\u0004cA\u001e\u0004t\u00121!q\u0017\bC\u0002y\u00022aOB|\t\u0019\u0019iB\u0004b\u0001}A\u00191ha?\u0005\r\r-eB1\u0001?!\rY4q \u0003\u0007\t\u0003q!\u0019\u0001 \u0003\u0007\u0005\u000b$\u0007\u0003\u0004G\u001d\u0001\u000fAQ\u0001\t\u0005iU\u001ai\r\u0003\u0004X\u001d\u0001\u000fA\u0011\u0002\t\u0005iU\u001a\t\u000e\u0003\u0004m\u001d\u0001\u000fAQ\u0002\t\u0005iU\u001a)\u000eC\u0004\u0002\f9\u0001\u001d\u0001\"\u0005\u0011\tQ*4\u0011\u001c\u0005\b\u0003\u000br\u00019\u0001C\u000b!\u0011!Tg!8\t\u000f\u0005\u001de\u0002q\u0001\u0005\u001aA!A'NBq\u0011\u001d\t\tN\u0004a\u0002\t;\u0001B\u0001N\u001b\u0004f\"9!1\u0005\bA\u0004\u0011\u0005\u0002\u0003\u0002\u001b6\u0007SDqA! \u000f\u0001\b!)\u0003\u0005\u00035k\r5\bb\u0002Bp\u001d\u0001\u000fA\u0011\u0006\t\u0005iU\u001a\t\u0010C\u0004\u0004J9\u0001\u001d\u0001\"\f\u0011\tQ*4Q\u001f\u0005\b\u0007ws\u00019\u0001C\u0019!\u0011!Tg!?\t\u000f\u0011Ub\u0002q\u0001\u00058\u0005\u0019\u0011)\r\u001a\u0011\tQ*4Q`\u0001'G\u0006$8oS3s]\u0016d'i\\;oI\u0016$7+Z7jY\u0006$H/[2f\r>\u0014H+\u001e9mKF\"TC\bC\u001f\t\u0013\"i\u0005\"\u0015\u0005V\u0011eCQ\fC1\tK\"I\u0007\"\u001c\u0005r\u0011UD\u0011\u0010C?)y!y\u0004\"!\u0005\u0006\u0012%EQ\u0012CI\t+#I\n\"(\u0005\"\u0012\u0015F\u0011\u0016CW\tc#)\f\u0005\u00035k\u0011\u0005\u0003cH\u0011\u0005D\u0011\u001dC1\nC(\t'\"9\u0006b\u0017\u0005`\u0011\rDq\rC6\t_\"\u0019\bb\u001e\u0005|%\u0019AQ\t\u0012\u0003\u000fQ+\b\u000f\\32iA\u00191\b\"\u0013\u0005\u000buz!\u0019\u0001 \u0011\u0007m\"i\u0005B\u0003T\u001f\t\u0007a\bE\u0002<\t#\"QAZ\bC\u0002y\u00022a\u000fC+\t\u0015ixB1\u0001?!\rYD\u0011\f\u0003\u0007\u0003cy!\u0019\u0001 \u0011\u0007m\"i\u0006\u0002\u0004\u0002p=\u0011\rA\u0010\t\u0004w\u0011\u0005DABA[\u001f\t\u0007a\bE\u0002<\tK\"aAa\u0001\u0010\u0005\u0004q\u0004cA\u001e\u0005j\u00111!\u0011L\bC\u0002y\u00022a\u000fC7\t\u0019\u00119l\u0004b\u0001}A\u00191\b\"\u001d\u0005\r\ruqB1\u0001?!\rYDQ\u000f\u0003\u0007\u0007\u0017{!\u0019\u0001 \u0011\u0007m\"I\b\u0002\u0004\u0005\u0002=\u0011\rA\u0010\t\u0004w\u0011uDA\u0002C@\u001f\t\u0007aHA\u0002BcMBaAR\bA\u0004\u0011\r\u0005\u0003\u0002\u001b6\t\u000fBaaV\bA\u0004\u0011\u001d\u0005\u0003\u0002\u001b6\t\u0017Ba\u0001\\\bA\u0004\u0011-\u0005\u0003\u0002\u001b6\t\u001fBq!a\u0003\u0010\u0001\b!y\t\u0005\u00035k\u0011M\u0003bBA#\u001f\u0001\u000fA1\u0013\t\u0005iU\"9\u0006C\u0004\u0002\b>\u0001\u001d\u0001b&\u0011\tQ*D1\f\u0005\b\u0003#|\u00019\u0001CN!\u0011!T\u0007b\u0018\t\u000f\t\rr\u0002q\u0001\u0005 B!A'\u000eC2\u0011\u001d\u0011ih\u0004a\u0002\tG\u0003B\u0001N\u001b\u0005h!9!q\\\bA\u0004\u0011\u001d\u0006\u0003\u0002\u001b6\tWBqa!\u0013\u0010\u0001\b!Y\u000b\u0005\u00035k\u0011=\u0004bBB^\u001f\u0001\u000fAq\u0016\t\u0005iU\"\u0019\bC\u0004\u00056=\u0001\u001d\u0001b-\u0011\tQ*Dq\u000f\u0005\b\to{\u00019\u0001C]\u0003\r\t\u0015g\r\t\u0005iU\"Y(\u0001\u0014dCR\u001c8*\u001a:oK2\u0014u.\u001e8eK\u0012\u001cV-\\5mCR$\u0018nY3G_J$V\u000f\u001d7fcU*\u0002\u0005b0\u0005L\u0012=G1\u001bCl\t7$y\u000eb9\u0005h\u0012-Hq\u001eCz\to$Y\u0010b@\u0006\u0004Q\u0001C\u0011YC\u0004\u000b\u0017)y!b\u0005\u0006\u0018\u0015mQqDC\u0012\u000bO)Y#b\f\u00064\u0015]R1HC !\u0011!T\u0007b1\u0011C\u0005\")\r\"3\u0005N\u0012EGQ\u001bCm\t;$\t\u000f\":\u0005j\u00125H\u0011\u001fC{\ts$i0\"\u0001\n\u0007\u0011\u001d'EA\u0004UkBdW-M\u001b\u0011\u0007m\"Y\rB\u0003>!\t\u0007a\bE\u0002<\t\u001f$Qa\u0015\tC\u0002y\u00022a\u000fCj\t\u00151\u0007C1\u0001?!\rYDq\u001b\u0003\u0006{B\u0011\rA\u0010\t\u0004w\u0011mGABA\u0019!\t\u0007a\bE\u0002<\t?$a!a\u001c\u0011\u0005\u0004q\u0004cA\u001e\u0005d\u00121\u0011Q\u0017\tC\u0002y\u00022a\u000fCt\t\u0019\u0011\u0019\u0001\u0005b\u0001}A\u00191\bb;\u0005\r\te\u0003C1\u0001?!\rYDq\u001e\u0003\u0007\u0005o\u0003\"\u0019\u0001 \u0011\u0007m\"\u0019\u0010\u0002\u0004\u0004\u001eA\u0011\rA\u0010\t\u0004w\u0011]HABBF!\t\u0007a\bE\u0002<\tw$a\u0001\"\u0001\u0011\u0005\u0004q\u0004cA\u001e\u0005\u0000\u00121Aq\u0010\tC\u0002y\u00022aOC\u0002\t\u0019))\u0001\u0005b\u0001}\t\u0019\u0011)\r\u001b\t\r\u0019\u0003\u00029AC\u0005!\u0011!T\u0007\"3\t\r]\u0003\u00029AC\u0007!\u0011!T\u0007\"4\t\r1\u0004\u00029AC\t!\u0011!T\u0007\"5\t\u000f\u0005-\u0001\u0003q\u0001\u0006\u0016A!A'\u000eCk\u0011\u001d\t)\u0005\u0005a\u0002\u000b3\u0001B\u0001N\u001b\u0005Z\"9\u0011q\u0011\tA\u0004\u0015u\u0001\u0003\u0002\u001b6\t;Dq!!5\u0011\u0001\b)\t\u0003\u0005\u00035k\u0011\u0005\bb\u0002B\u0012!\u0001\u000fQQ\u0005\t\u0005iU\")\u000fC\u0004\u0003~A\u0001\u001d!\"\u000b\u0011\tQ*D\u0011\u001e\u0005\b\u0005?\u0004\u00029AC\u0017!\u0011!T\u0007\"<\t\u000f\r%\u0003\u0003q\u0001\u00062A!A'\u000eCy\u0011\u001d\u0019Y\f\u0005a\u0002\u000bk\u0001B\u0001N\u001b\u0005v\"9AQ\u0007\tA\u0004\u0015e\u0002\u0003\u0002\u001b6\tsDq\u0001b.\u0011\u0001\b)i\u0004\u0005\u00035k\u0011u\bbBC!!\u0001\u000fQ1I\u0001\u0004\u0003F\"\u0004\u0003\u0002\u001b6\u000b\u0003\taeY1ug.+'O\\3m\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.Z\u00197+\t*I%\"\u0016\u0006Z\u0015uS\u0011MC3\u000bS*i'\"\u001d\u0006v\u0015eTQPCA\u000b\u000b+I)\"$\u0006\u0012R\u0011S1JCK\u000b3+i*\")\u0006&\u0016%VQVCY\u000bk+I,\"0\u0006B\u0016\u0015W\u0011ZCg\u000b#\u0004B\u0001N\u001b\u0006NA\u0019\u0013%b\u0014\u0006T\u0015]S1LC0\u000bG*9'b\u001b\u0006p\u0015MTqOC>\u000b\u007f*\u0019)b\"\u0006\f\u0016=\u0015bAC)E\t9A+\u001e9mKF2\u0004cA\u001e\u0006V\u0011)Q(\u0005b\u0001}A\u00191(\"\u0017\u0005\u000bM\u000b\"\u0019\u0001 \u0011\u0007m*i\u0006B\u0003g#\t\u0007a\bE\u0002<\u000bC\"Q!`\tC\u0002y\u00022aOC3\t\u0019\t\t$\u0005b\u0001}A\u00191(\"\u001b\u0005\r\u0005=\u0014C1\u0001?!\rYTQ\u000e\u0003\u0007\u0003k\u000b\"\u0019\u0001 \u0011\u0007m*\t\b\u0002\u0004\u0003\u0004E\u0011\rA\u0010\t\u0004w\u0015UDA\u0002B-#\t\u0007a\bE\u0002<\u000bs\"aAa.\u0012\u0005\u0004q\u0004cA\u001e\u0006~\u001111QD\tC\u0002y\u00022aOCA\t\u0019\u0019Y)\u0005b\u0001}A\u00191(\"\"\u0005\r\u0011\u0005\u0011C1\u0001?!\rYT\u0011\u0012\u0003\u0007\t\u007f\n\"\u0019\u0001 \u0011\u0007m*i\t\u0002\u0004\u0006\u0006E\u0011\rA\u0010\t\u0004w\u0015EEABCJ#\t\u0007aHA\u0002BcUBaAR\tA\u0004\u0015]\u0005\u0003\u0002\u001b6\u000b'BaaV\tA\u0004\u0015m\u0005\u0003\u0002\u001b6\u000b/Ba\u0001\\\tA\u0004\u0015}\u0005\u0003\u0002\u001b6\u000b7Bq!a\u0003\u0012\u0001\b)\u0019\u000b\u0005\u00035k\u0015}\u0003bBA##\u0001\u000fQq\u0015\t\u0005iU*\u0019\u0007C\u0004\u0002\bF\u0001\u001d!b+\u0011\tQ*Tq\r\u0005\b\u0003#\f\u00029ACX!\u0011!T'b\u001b\t\u000f\t\r\u0012\u0003q\u0001\u00064B!A'NC8\u0011\u001d\u0011i(\u0005a\u0002\u000bo\u0003B\u0001N\u001b\u0006t!9!q\\\tA\u0004\u0015m\u0006\u0003\u0002\u001b6\u000boBqa!\u0013\u0012\u0001\b)y\f\u0005\u00035k\u0015m\u0004bBB^#\u0001\u000fQ1\u0019\t\u0005iU*y\bC\u0004\u00056E\u0001\u001d!b2\u0011\tQ*T1\u0011\u0005\b\to\u000b\u00029ACf!\u0011!T'b\"\t\u000f\u0015\u0005\u0013\u0003q\u0001\u0006PB!A'NCF\u0011\u001d)\u0019.\u0005a\u0002\u000b+\f1!Q\u00196!\u0011!T'b$\u0002M\r\fGo]&fe:,GNQ8v]\u0012,GmU3nS2\fG\u000f^5dK\u001a{'\u000fV;qY\u0016\ft'\u0006\u0013\u0006\\\u0016\u001dX1^Cx\u000bg,90b?\u0006\u0000\u001a\raq\u0001D\u0006\r\u001f1\u0019Bb\u0006\u0007\u001c\u0019}a1\u0005D\u0014)\u0011*iNb\u000b\u00070\u0019Mbq\u0007D\u001e\r\u007f1\u0019Eb\u0012\u0007L\u0019=c1\u000bD,\r72yFb\u0019\u0007h\u0019-\u0004\u0003\u0002\u001b6\u000b?\u0004R%ICq\u000bK,I/\"<\u0006r\u0016UX\u0011`C\u007f\r\u00031)A\"\u0003\u0007\u000e\u0019EaQ\u0003D\r\r;1\tC\"\n\n\u0007\u0015\r(EA\u0004UkBdW-M\u001c\u0011\u0007m*9\u000fB\u0003>%\t\u0007a\bE\u0002<\u000bW$Qa\u0015\nC\u0002y\u00022aOCx\t\u00151'C1\u0001?!\rYT1\u001f\u0003\u0006{J\u0011\rA\u0010\t\u0004w\u0015]HABA\u0019%\t\u0007a\bE\u0002<\u000bw$a!a\u001c\u0013\u0005\u0004q\u0004cA\u001e\u0006\u0000\u00121\u0011Q\u0017\nC\u0002y\u00022a\u000fD\u0002\t\u0019\u0011\u0019A\u0005b\u0001}A\u00191Hb\u0002\u0005\r\te#C1\u0001?!\rYd1\u0002\u0003\u0007\u0005o\u0013\"\u0019\u0001 \u0011\u0007m2y\u0001\u0002\u0004\u0004\u001eI\u0011\rA\u0010\t\u0004w\u0019MAABBF%\t\u0007a\bE\u0002<\r/!a\u0001\"\u0001\u0013\u0005\u0004q\u0004cA\u001e\u0007\u001c\u00111Aq\u0010\nC\u0002y\u00022a\u000fD\u0010\t\u0019))A\u0005b\u0001}A\u00191Hb\t\u0005\r\u0015M%C1\u0001?!\rYdq\u0005\u0003\u0007\rS\u0011\"\u0019\u0001 \u0003\u0007\u0005\u000bd\u0007\u0003\u0004G%\u0001\u000faQ\u0006\t\u0005iU*)\u000f\u0003\u0004X%\u0001\u000fa\u0011\u0007\t\u0005iU*I\u000f\u0003\u0004m%\u0001\u000faQ\u0007\t\u0005iU*i\u000fC\u0004\u0002\fI\u0001\u001dA\"\u000f\u0011\tQ*T\u0011\u001f\u0005\b\u0003\u000b\u0012\u00029\u0001D\u001f!\u0011!T'\">\t\u000f\u0005\u001d%\u0003q\u0001\u0007BA!A'NC}\u0011\u001d\t\tN\u0005a\u0002\r\u000b\u0002B\u0001N\u001b\u0006~\"9!1\u0005\nA\u0004\u0019%\u0003\u0003\u0002\u001b6\r\u0003AqA! \u0013\u0001\b1i\u0005\u0005\u00035k\u0019\u0015\u0001b\u0002Bp%\u0001\u000fa\u0011\u000b\t\u0005iU2I\u0001C\u0004\u0004JI\u0001\u001dA\"\u0016\u0011\tQ*dQ\u0002\u0005\b\u0007w\u0013\u00029\u0001D-!\u0011!TG\"\u0005\t\u000f\u0011U\"\u0003q\u0001\u0007^A!A'\u000eD\u000b\u0011\u001d!9L\u0005a\u0002\rC\u0002B\u0001N\u001b\u0007\u001a!9Q\u0011\t\nA\u0004\u0019\u0015\u0004\u0003\u0002\u001b6\r;Aq!b5\u0013\u0001\b1I\u0007\u0005\u00035k\u0019\u0005\u0002b\u0002D7%\u0001\u000faqN\u0001\u0004\u0003F2\u0004\u0003\u0002\u001b6\rK\taeY1ug.+'O\\3m\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.Z\u00199+\u00192)H\"!\u0007\u0006\u001a%eQ\u0012DI\r+3IJ\"(\u0007\"\u001a\u0015f\u0011\u0016DW\rc3)L\"/\u0007>\u001a\u0005gQ\u0019\u000b'\ro2IM\"4\u0007R\u001aUg\u0011\u001cDo\rC4)O\";\u0007n\u001aEhQ\u001fD}\r{<\ta\"\u0002\b\n\u001d5\u0001\u0003\u0002\u001b6\rs\u0002r%\tD>\r\u007f2\u0019Ib\"\u0007\f\u001a=e1\u0013DL\r73yJb)\u0007(\u001a-fq\u0016DZ\ro3YLb0\u0007D&\u0019aQ\u0010\u0012\u0003\u000fQ+\b\u000f\\32qA\u00191H\"!\u0005\u000bu\u001a\"\u0019\u0001 \u0011\u0007m2)\tB\u0003T'\t\u0007a\bE\u0002<\r\u0013#QAZ\nC\u0002y\u00022a\u000fDG\t\u0015i8C1\u0001?!\rYd\u0011\u0013\u0003\u0007\u0003c\u0019\"\u0019\u0001 \u0011\u0007m2)\n\u0002\u0004\u0002pM\u0011\rA\u0010\t\u0004w\u0019eEABA['\t\u0007a\bE\u0002<\r;#aAa\u0001\u0014\u0005\u0004q\u0004cA\u001e\u0007\"\u00121!\u0011L\nC\u0002y\u00022a\u000fDS\t\u0019\u00119l\u0005b\u0001}A\u00191H\"+\u0005\r\ru1C1\u0001?!\rYdQ\u0016\u0003\u0007\u0007\u0017\u001b\"\u0019\u0001 \u0011\u0007m2\t\f\u0002\u0004\u0005\u0002M\u0011\rA\u0010\t\u0004w\u0019UFA\u0002C@'\t\u0007a\bE\u0002<\rs#a!\"\u0002\u0014\u0005\u0004q\u0004cA\u001e\u0007>\u00121Q1S\nC\u0002y\u00022a\u000fDa\t\u00191Ic\u0005b\u0001}A\u00191H\"2\u0005\r\u0019\u001d7C1\u0001?\u0005\r\t\u0015g\u000e\u0005\u0007\rN\u0001\u001dAb3\u0011\tQ*dq\u0010\u0005\u0007/N\u0001\u001dAb4\u0011\tQ*d1\u0011\u0005\u0007YN\u0001\u001dAb5\u0011\tQ*dq\u0011\u0005\b\u0003\u0017\u0019\u00029\u0001Dl!\u0011!TGb#\t\u000f\u0005\u00153\u0003q\u0001\u0007\\B!A'\u000eDH\u0011\u001d\t9i\u0005a\u0002\r?\u0004B\u0001N\u001b\u0007\u0014\"9\u0011\u0011[\nA\u0004\u0019\r\b\u0003\u0002\u001b6\r/CqAa\t\u0014\u0001\b19\u000f\u0005\u00035k\u0019m\u0005b\u0002B?'\u0001\u000fa1\u001e\t\u0005iU2y\nC\u0004\u0003`N\u0001\u001dAb<\u0011\tQ*d1\u0015\u0005\b\u0007\u0013\u001a\u00029\u0001Dz!\u0011!TGb*\t\u000f\rm6\u0003q\u0001\u0007xB!A'\u000eDV\u0011\u001d!)d\u0005a\u0002\rw\u0004B\u0001N\u001b\u00070\"9AqW\nA\u0004\u0019}\b\u0003\u0002\u001b6\rgCq!\"\u0011\u0014\u0001\b9\u0019\u0001\u0005\u00035k\u0019]\u0006bBCj'\u0001\u000fqq\u0001\t\u0005iU2Y\fC\u0004\u0007nM\u0001\u001dab\u0003\u0011\tQ*dq\u0018\u0005\b\u000f\u001f\u0019\u00029AD\t\u0003\r\t\u0015g\u000e\t\u0005iU2\u0019-\u0001\u0014dCR\u001c8*\u001a:oK2\u0014u.\u001e8eK\u0012\u001cV-\\5mCR$\u0018nY3G_J$V\u000f\u001d7fce*\u0002fb\u0006\b$\u001d\u001dr1FD\u0018\u000fg99db\u000f\b@\u001d\rsqID&\u000f\u001f:\u0019fb\u0016\b\\\u001d}s1MD4\u000fW\"\u0002f\"\u0007\bp\u001dMtqOD>\u000f\u007f:\u0019ib\"\b\f\u001e=u1SDL\u000f7;yjb)\b(\u001e-vqVDZ\u000fo\u0003B\u0001N\u001b\b\u001cAI\u0013e\"\b\b\"\u001d\u0015r\u0011FD\u0017\u000fc9)d\"\u000f\b>\u001d\u0005sQID%\u000f\u001b:\tf\"\u0016\bZ\u001dus\u0011MD3\u000fSJ1ab\b#\u0005\u001d!V\u000f\u001d7fce\u00022aOD\u0012\t\u0015iDC1\u0001?!\rYtq\u0005\u0003\u0006'R\u0011\rA\u0010\t\u0004w\u001d-B!\u00024\u0015\u0005\u0004q\u0004cA\u001e\b0\u0011)Q\u0010\u0006b\u0001}A\u00191hb\r\u0005\r\u0005EBC1\u0001?!\rYtq\u0007\u0003\u0007\u0003_\"\"\u0019\u0001 \u0011\u0007m:Y\u0004\u0002\u0004\u00026R\u0011\rA\u0010\t\u0004w\u001d}BA\u0002B\u0002)\t\u0007a\bE\u0002<\u000f\u0007\"aA!\u0017\u0015\u0005\u0004q\u0004cA\u001e\bH\u00111!q\u0017\u000bC\u0002y\u00022aOD&\t\u0019\u0019i\u0002\u0006b\u0001}A\u00191hb\u0014\u0005\r\r-EC1\u0001?!\rYt1\u000b\u0003\u0007\t\u0003!\"\u0019\u0001 \u0011\u0007m:9\u0006\u0002\u0004\u0005\u0000Q\u0011\rA\u0010\t\u0004w\u001dmCABC\u0003)\t\u0007a\bE\u0002<\u000f?\"a!b%\u0015\u0005\u0004q\u0004cA\u001e\bd\u00111a\u0011\u0006\u000bC\u0002y\u00022aOD4\t\u001919\r\u0006b\u0001}A\u00191hb\u001b\u0005\r\u001d5DC1\u0001?\u0005\r\t\u0015\u0007\u000f\u0005\u0007\rR\u0001\u001da\"\u001d\u0011\tQ*t\u0011\u0005\u0005\u0007/R\u0001\u001da\"\u001e\u0011\tQ*tQ\u0005\u0005\u0007YR\u0001\u001da\"\u001f\u0011\tQ*t\u0011\u0006\u0005\b\u0003\u0017!\u00029AD?!\u0011!Tg\"\f\t\u000f\u0005\u0015C\u0003q\u0001\b\u0002B!A'ND\u0019\u0011\u001d\t9\t\u0006a\u0002\u000f\u000b\u0003B\u0001N\u001b\b6!9\u0011\u0011\u001b\u000bA\u0004\u001d%\u0005\u0003\u0002\u001b6\u000fsAqAa\t\u0015\u0001\b9i\t\u0005\u00035k\u001du\u0002b\u0002B?)\u0001\u000fq\u0011\u0013\t\u0005iU:\t\u0005C\u0004\u0003`R\u0001\u001da\"&\u0011\tQ*tQ\t\u0005\b\u0007\u0013\"\u00029ADM!\u0011!Tg\"\u0013\t\u000f\rmF\u0003q\u0001\b\u001eB!A'ND'\u0011\u001d!)\u0004\u0006a\u0002\u000fC\u0003B\u0001N\u001b\bR!9Aq\u0017\u000bA\u0004\u001d\u0015\u0006\u0003\u0002\u001b6\u000f+Bq!\"\u0011\u0015\u0001\b9I\u000b\u0005\u00035k\u001de\u0003bBCj)\u0001\u000fqQ\u0016\t\u0005iU:i\u0006C\u0004\u0007nQ\u0001\u001da\"-\u0011\tQ*t\u0011\r\u0005\b\u000f\u001f!\u00029AD[!\u0011!Tg\"\u001a\t\u000f\u001deF\u0003q\u0001\b<\u0006\u0019\u0011)\r\u001d\u0011\tQ*t\u0011N\u0001'G\u0006$8oS3s]\u0016d'i\\;oI\u0016$7+Z7jY\u0006$H/[2f\r>\u0014H+\u001e9mKJ\u0002TCKDa\u000f\u001b<\tn\"6\bZ\u001euw\u0011]Ds\u000fS<io\"=\bv\u001eexQ E\u0001\u0011\u000bAI\u0001#\u0004\t\u0012!U\u0001\u0012\u0004\u000b+\u000f\u0007Di\u0002#\t\t&!%\u0002R\u0006E\u0019\u0011kAI\u0004#\u0010\tB!\u0015\u0003\u0012\nE'\u0011#B)\u0006#\u0017\t^!\u0005\u0004R\rE5!\u0011!Tg\"2\u0011W\u0005:9mb3\bP\u001eMwq[Dn\u000f?<\u0019ob:\bl\u001e=x1_D|\u000fw<y\u0010c\u0001\t\b!-\u0001r\u0002E\n\u0011/I1a\"3#\u0005\u001d!V\u000f\u001d7feA\u00022aODg\t\u0015iTC1\u0001?!\rYt\u0011\u001b\u0003\u0006'V\u0011\rA\u0010\t\u0004w\u001dUG!\u00024\u0016\u0005\u0004q\u0004cA\u001e\bZ\u0012)Q0\u0006b\u0001}A\u00191h\"8\u0005\r\u0005ERC1\u0001?!\rYt\u0011\u001d\u0003\u0007\u0003_*\"\u0019\u0001 \u0011\u0007m:)\u000f\u0002\u0004\u00026V\u0011\rA\u0010\t\u0004w\u001d%HA\u0002B\u0002+\t\u0007a\bE\u0002<\u000f[$aA!\u0017\u0016\u0005\u0004q\u0004cA\u001e\br\u00121!qW\u000bC\u0002y\u00022aOD{\t\u0019\u0019i\"\u0006b\u0001}A\u00191h\"?\u0005\r\r-UC1\u0001?!\rYtQ \u0003\u0007\t\u0003)\"\u0019\u0001 \u0011\u0007mB\t\u0001\u0002\u0004\u0005\u0000U\u0011\rA\u0010\t\u0004w!\u0015AABC\u0003+\t\u0007a\bE\u0002<\u0011\u0013!a!b%\u0016\u0005\u0004q\u0004cA\u001e\t\u000e\u00111a\u0011F\u000bC\u0002y\u00022a\u000fE\t\t\u001919-\u0006b\u0001}A\u00191\b#\u0006\u0005\r\u001d5TC1\u0001?!\rY\u0004\u0012\u0004\u0003\u0007\u00117)\"\u0019\u0001 \u0003\u0007\u0005\u000b\u0014\b\u0003\u0004G+\u0001\u000f\u0001r\u0004\t\u0005iU:Y\r\u0003\u0004X+\u0001\u000f\u00012\u0005\t\u0005iU:y\r\u0003\u0004m+\u0001\u000f\u0001r\u0005\t\u0005iU:\u0019\u000eC\u0004\u0002\fU\u0001\u001d\u0001c\u000b\u0011\tQ*tq\u001b\u0005\b\u0003\u000b*\u00029\u0001E\u0018!\u0011!Tgb7\t\u000f\u0005\u001dU\u0003q\u0001\t4A!A'NDp\u0011\u001d\t\t.\u0006a\u0002\u0011o\u0001B\u0001N\u001b\bd\"9!1E\u000bA\u0004!m\u0002\u0003\u0002\u001b6\u000fODqA! \u0016\u0001\bAy\u0004\u0005\u00035k\u001d-\bb\u0002Bp+\u0001\u000f\u00012\t\t\u0005iU:y\u000fC\u0004\u0004JU\u0001\u001d\u0001c\u0012\u0011\tQ*t1\u001f\u0005\b\u0007w+\u00029\u0001E&!\u0011!Tgb>\t\u000f\u0011UR\u0003q\u0001\tPA!A'ND~\u0011\u001d!9,\u0006a\u0002\u0011'\u0002B\u0001N\u001b\b\u0000\"9Q\u0011I\u000bA\u0004!]\u0003\u0003\u0002\u001b6\u0011\u0007Aq!b5\u0016\u0001\bAY\u0006\u0005\u00035k!\u001d\u0001b\u0002D7+\u0001\u000f\u0001r\f\t\u0005iUBY\u0001C\u0004\b\u0010U\u0001\u001d\u0001c\u0019\u0011\tQ*\u0004r\u0002\u0005\b\u000fs+\u00029\u0001E4!\u0011!T\u0007c\u0005\t\u000f!-T\u0003q\u0001\tn\u0005\u0019\u0011)M\u001d\u0011\tQ*\u0004rC\u0001'G\u0006$8oS3s]\u0016d'i\\;oI\u0016$7+Z7jY\u0006$H/[2f\r>\u0014H+\u001e9mKJ\nT\u0003\fE:\u0011\u007fB\u0019\tc\"\t\f\"=\u00052\u0013EL\u00117Cy\nc)\t(\"-\u0006r\u0016EZ\u0011oCY\fc0\tD\"\u001d\u00072\u001aEh)1B)\bc5\tX\"m\u0007r\u001cEr\u0011ODY\u000fc<\tt\"]\b2 E\u0000\u0013\u0007I9!c\u0003\n\u0010%M\u0011rCE\u000e\u0013?I\u0019\u0003\u0005\u00035k!]\u0004#L\u0011\tz!u\u0004\u0012\u0011EC\u0011\u0013Ci\t#%\t\u0016\"e\u0005R\u0014EQ\u0011KCI\u000b#,\t2\"U\u0006\u0012\u0018E_\u0011\u0003D)\r#3\tN&\u0019\u00012\u0010\u0012\u0003\u000fQ+\b\u000f\\33cA\u00191\bc \u0005\u000bu2\"\u0019\u0001 \u0011\u0007mB\u0019\tB\u0003T-\t\u0007a\bE\u0002<\u0011\u000f#QA\u001a\fC\u0002y\u00022a\u000fEF\t\u0015ihC1\u0001?!\rY\u0004r\u0012\u0003\u0007\u0003c1\"\u0019\u0001 \u0011\u0007mB\u0019\n\u0002\u0004\u0002pY\u0011\rA\u0010\t\u0004w!]EABA[-\t\u0007a\bE\u0002<\u00117#aAa\u0001\u0017\u0005\u0004q\u0004cA\u001e\t \u00121!\u0011\f\fC\u0002y\u00022a\u000fER\t\u0019\u00119L\u0006b\u0001}A\u00191\bc*\u0005\r\ruaC1\u0001?!\rY\u00042\u0016\u0003\u0007\u0007\u00173\"\u0019\u0001 \u0011\u0007mBy\u000b\u0002\u0004\u0005\u0002Y\u0011\rA\u0010\t\u0004w!MFA\u0002C@-\t\u0007a\bE\u0002<\u0011o#a!\"\u0002\u0017\u0005\u0004q\u0004cA\u001e\t<\u00121Q1\u0013\fC\u0002y\u00022a\u000fE`\t\u00191IC\u0006b\u0001}A\u00191\bc1\u0005\r\u0019\u001dgC1\u0001?!\rY\u0004r\u0019\u0003\u0007\u000f[2\"\u0019\u0001 \u0011\u0007mBY\r\u0002\u0004\t\u001cY\u0011\rA\u0010\t\u0004w!=GA\u0002Ei-\t\u0007aHA\u0002BeABaA\u0012\fA\u0004!U\u0007\u0003\u0002\u001b6\u0011{Baa\u0016\fA\u0004!e\u0007\u0003\u0002\u001b6\u0011\u0003Ca\u0001\u001c\fA\u0004!u\u0007\u0003\u0002\u001b6\u0011\u000bCq!a\u0003\u0017\u0001\bA\t\u000f\u0005\u00035k!%\u0005bBA#-\u0001\u000f\u0001R\u001d\t\u0005iUBi\tC\u0004\u0002\bZ\u0001\u001d\u0001#;\u0011\tQ*\u0004\u0012\u0013\u0005\b\u0003#4\u00029\u0001Ew!\u0011!T\u0007#&\t\u000f\t\rb\u0003q\u0001\trB!A'\u000eEM\u0011\u001d\u0011iH\u0006a\u0002\u0011k\u0004B\u0001N\u001b\t\u001e\"9!q\u001c\fA\u0004!e\b\u0003\u0002\u001b6\u0011CCqa!\u0013\u0017\u0001\bAi\u0010\u0005\u00035k!\u0015\u0006bBB^-\u0001\u000f\u0011\u0012\u0001\t\u0005iUBI\u000bC\u0004\u00056Y\u0001\u001d!#\u0002\u0011\tQ*\u0004R\u0016\u0005\b\to3\u00029AE\u0005!\u0011!T\u0007#-\t\u000f\u0015\u0005c\u0003q\u0001\n\u000eA!A'\u000eE[\u0011\u001d)\u0019N\u0006a\u0002\u0013#\u0001B\u0001N\u001b\t:\"9aQ\u000e\fA\u0004%U\u0001\u0003\u0002\u001b6\u0011{Cqab\u0004\u0017\u0001\bII\u0002\u0005\u00035k!\u0005\u0007bBD]-\u0001\u000f\u0011R\u0004\t\u0005iUB)\rC\u0004\tlY\u0001\u001d!#\t\u0011\tQ*\u0004\u0012\u001a\u0005\b\u0013K1\u00029AE\u0014\u0003\r\t%\u0007\r\t\u0005iUBi-\u0001\u0014dCR\u001c8*\u001a:oK2\u0014u.\u001e8eK\u0012\u001cV-\\5mCR$\u0018nY3G_J$V\u000f\u001d7feI*b&#\f\n:%u\u0012\u0012IE#\u0013\u0013Ji%#\u0015\nV%e\u0013RLE1\u0013KJI'#\u001c\nr%U\u0014\u0012PE?\u0013\u0003K))##\n\u000eRq\u0013rFEI\u0013+KI*#(\n\"&\u0015\u0016\u0012VEW\u0013cK),#/\n>&\u0005\u0017RYEe\u0013\u001bL\t.#6\nZ&u\u0017\u0012]Es!\u0011!T'#\r\u0011_\u0005J\u0019$c\u000e\n<%}\u00122IE$\u0013\u0017Jy%c\u0015\nX%m\u0013rLE2\u0013OJY'c\u001c\nt%]\u00142PE@\u0013\u0007K9)c#\n\u0007%U\"EA\u0004UkBdWM\r\u001a\u0011\u0007mJI\u0004B\u0003>/\t\u0007a\bE\u0002<\u0013{!QaU\fC\u0002y\u00022aOE!\t\u00151wC1\u0001?!\rY\u0014R\t\u0003\u0006{^\u0011\rA\u0010\t\u0004w%%CABA\u0019/\t\u0007a\bE\u0002<\u0013\u001b\"a!a\u001c\u0018\u0005\u0004q\u0004cA\u001e\nR\u00111\u0011QW\fC\u0002y\u00022aOE+\t\u0019\u0011\u0019a\u0006b\u0001}A\u00191(#\u0017\u0005\r\tesC1\u0001?!\rY\u0014R\f\u0003\u0007\u0005o;\"\u0019\u0001 \u0011\u0007mJ\t\u0007\u0002\u0004\u0004\u001e]\u0011\rA\u0010\t\u0004w%\u0015DABBF/\t\u0007a\bE\u0002<\u0013S\"a\u0001\"\u0001\u0018\u0005\u0004q\u0004cA\u001e\nn\u00111AqP\fC\u0002y\u00022aOE9\t\u0019))a\u0006b\u0001}A\u00191(#\u001e\u0005\r\u0015MuC1\u0001?!\rY\u0014\u0012\u0010\u0003\u0007\rS9\"\u0019\u0001 \u0011\u0007mJi\b\u0002\u0004\u0007H^\u0011\rA\u0010\t\u0004w%\u0005EABD7/\t\u0007a\bE\u0002<\u0013\u000b#a\u0001c\u0007\u0018\u0005\u0004q\u0004cA\u001e\n\n\u00121\u0001\u0012[\fC\u0002y\u00022aOEG\t\u0019Iyi\u0006b\u0001}\t\u0019\u0011IM\u0019\t\r\u0019;\u00029AEJ!\u0011!T'c\u000e\t\r];\u00029AEL!\u0011!T'c\u000f\t\r1<\u00029AEN!\u0011!T'c\u0010\t\u000f\u0005-q\u0003q\u0001\n B!A'NE\"\u0011\u001d\t)e\u0006a\u0002\u0013G\u0003B\u0001N\u001b\nH!9\u0011qQ\fA\u0004%\u001d\u0006\u0003\u0002\u001b6\u0013\u0017Bq!!5\u0018\u0001\bIY\u000b\u0005\u00035k%=\u0003b\u0002B\u0012/\u0001\u000f\u0011r\u0016\t\u0005iUJ\u0019\u0006C\u0004\u0003~]\u0001\u001d!c-\u0011\tQ*\u0014r\u000b\u0005\b\u0005?<\u00029AE\\!\u0011!T'c\u0017\t\u000f\r%s\u0003q\u0001\n<B!A'NE0\u0011\u001d\u0019Yl\u0006a\u0002\u0013\u007f\u0003B\u0001N\u001b\nd!9AQG\fA\u0004%\r\u0007\u0003\u0002\u001b6\u0013OBq\u0001b.\u0018\u0001\bI9\r\u0005\u00035k%-\u0004bBC!/\u0001\u000f\u00112\u001a\t\u0005iUJy\u0007C\u0004\u0006T^\u0001\u001d!c4\u0011\tQ*\u00142\u000f\u0005\b\r[:\u00029AEj!\u0011!T'c\u001e\t\u000f\u001d=q\u0003q\u0001\nXB!A'NE>\u0011\u001d9Il\u0006a\u0002\u00137\u0004B\u0001N\u001b\n\u0000!9\u00012N\fA\u0004%}\u0007\u0003\u0002\u001b6\u0013\u0007Cq!#\n\u0018\u0001\bI\u0019\u000f\u0005\u00035k%\u001d\u0005bBEt/\u0001\u000f\u0011\u0012^\u0001\u0004\u0003J\n\u0004\u0003\u0002\u001b6\u0013\u0017\u0003"
)
public interface TupleBoundedSemilatticeInstances extends TupleGroupInstances {
   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple1$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0) {
      return $this.catsKernelBoundedSemilatticeForTuple1(A0);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple1(final BoundedSemilattice A0) {
      return new BoundedSemilattice(A0) {
         private final BoundedSemilattice A0$309;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple1 combine(final Tuple1 x, final Tuple1 y) {
            return new Tuple1(this.A0$309.combine(x._1(), y._1()));
         }

         public Tuple1 empty() {
            return new Tuple1(this.A0$309.empty());
         }

         public {
            this.A0$309 = A0$309;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple2$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1) {
      return $this.catsKernelBoundedSemilatticeForTuple2(A0, A1);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple2(final BoundedSemilattice A0, final BoundedSemilattice A1) {
      return new BoundedSemilattice(A0, A1) {
         private final BoundedSemilattice A0$310;
         private final BoundedSemilattice A1$295;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple2 combine(final Tuple2 x, final Tuple2 y) {
            return new Tuple2(this.A0$310.combine(x._1(), y._1()), this.A1$295.combine(x._2(), y._2()));
         }

         public Tuple2 empty() {
            return new Tuple2(this.A0$310.empty(), this.A1$295.empty());
         }

         public {
            this.A0$310 = A0$310;
            this.A1$295 = A1$295;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple3$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2) {
      return $this.catsKernelBoundedSemilatticeForTuple3(A0, A1, A2);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple3(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2) {
      return new BoundedSemilattice(A0, A1, A2) {
         private final BoundedSemilattice A0$311;
         private final BoundedSemilattice A1$296;
         private final BoundedSemilattice A2$281;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple3 combine(final Tuple3 x, final Tuple3 y) {
            return new Tuple3(this.A0$311.combine(x._1(), y._1()), this.A1$296.combine(x._2(), y._2()), this.A2$281.combine(x._3(), y._3()));
         }

         public Tuple3 empty() {
            return new Tuple3(this.A0$311.empty(), this.A1$296.empty(), this.A2$281.empty());
         }

         public {
            this.A0$311 = A0$311;
            this.A1$296 = A1$296;
            this.A2$281 = A2$281;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple4$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3) {
      return $this.catsKernelBoundedSemilatticeForTuple4(A0, A1, A2, A3);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple4(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3) {
      return new BoundedSemilattice(A0, A1, A2, A3) {
         private final BoundedSemilattice A0$312;
         private final BoundedSemilattice A1$297;
         private final BoundedSemilattice A2$282;
         private final BoundedSemilattice A3$267;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple4 combine(final Tuple4 x, final Tuple4 y) {
            return new Tuple4(this.A0$312.combine(x._1(), y._1()), this.A1$297.combine(x._2(), y._2()), this.A2$282.combine(x._3(), y._3()), this.A3$267.combine(x._4(), y._4()));
         }

         public Tuple4 empty() {
            return new Tuple4(this.A0$312.empty(), this.A1$297.empty(), this.A2$282.empty(), this.A3$267.empty());
         }

         public {
            this.A0$312 = A0$312;
            this.A1$297 = A1$297;
            this.A2$282 = A2$282;
            this.A3$267 = A3$267;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple5$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4) {
      return $this.catsKernelBoundedSemilatticeForTuple5(A0, A1, A2, A3, A4);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple5(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4) {
         private final BoundedSemilattice A0$313;
         private final BoundedSemilattice A1$298;
         private final BoundedSemilattice A2$283;
         private final BoundedSemilattice A3$268;
         private final BoundedSemilattice A4$253;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple5 combine(final Tuple5 x, final Tuple5 y) {
            return new Tuple5(this.A0$313.combine(x._1(), y._1()), this.A1$298.combine(x._2(), y._2()), this.A2$283.combine(x._3(), y._3()), this.A3$268.combine(x._4(), y._4()), this.A4$253.combine(x._5(), y._5()));
         }

         public Tuple5 empty() {
            return new Tuple5(this.A0$313.empty(), this.A1$298.empty(), this.A2$283.empty(), this.A3$268.empty(), this.A4$253.empty());
         }

         public {
            this.A0$313 = A0$313;
            this.A1$298 = A1$298;
            this.A2$283 = A2$283;
            this.A3$268 = A3$268;
            this.A4$253 = A4$253;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple6$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5) {
      return $this.catsKernelBoundedSemilatticeForTuple6(A0, A1, A2, A3, A4, A5);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple6(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5) {
         private final BoundedSemilattice A0$314;
         private final BoundedSemilattice A1$299;
         private final BoundedSemilattice A2$284;
         private final BoundedSemilattice A3$269;
         private final BoundedSemilattice A4$254;
         private final BoundedSemilattice A5$239;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple6 combine(final Tuple6 x, final Tuple6 y) {
            return new Tuple6(this.A0$314.combine(x._1(), y._1()), this.A1$299.combine(x._2(), y._2()), this.A2$284.combine(x._3(), y._3()), this.A3$269.combine(x._4(), y._4()), this.A4$254.combine(x._5(), y._5()), this.A5$239.combine(x._6(), y._6()));
         }

         public Tuple6 empty() {
            return new Tuple6(this.A0$314.empty(), this.A1$299.empty(), this.A2$284.empty(), this.A3$269.empty(), this.A4$254.empty(), this.A5$239.empty());
         }

         public {
            this.A0$314 = A0$314;
            this.A1$299 = A1$299;
            this.A2$284 = A2$284;
            this.A3$269 = A3$269;
            this.A4$254 = A4$254;
            this.A5$239 = A5$239;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple7$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6) {
      return $this.catsKernelBoundedSemilatticeForTuple7(A0, A1, A2, A3, A4, A5, A6);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple7(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6) {
         private final BoundedSemilattice A0$315;
         private final BoundedSemilattice A1$300;
         private final BoundedSemilattice A2$285;
         private final BoundedSemilattice A3$270;
         private final BoundedSemilattice A4$255;
         private final BoundedSemilattice A5$240;
         private final BoundedSemilattice A6$225;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple7 combine(final Tuple7 x, final Tuple7 y) {
            return new Tuple7(this.A0$315.combine(x._1(), y._1()), this.A1$300.combine(x._2(), y._2()), this.A2$285.combine(x._3(), y._3()), this.A3$270.combine(x._4(), y._4()), this.A4$255.combine(x._5(), y._5()), this.A5$240.combine(x._6(), y._6()), this.A6$225.combine(x._7(), y._7()));
         }

         public Tuple7 empty() {
            return new Tuple7(this.A0$315.empty(), this.A1$300.empty(), this.A2$285.empty(), this.A3$270.empty(), this.A4$255.empty(), this.A5$240.empty(), this.A6$225.empty());
         }

         public {
            this.A0$315 = A0$315;
            this.A1$300 = A1$300;
            this.A2$285 = A2$285;
            this.A3$270 = A3$270;
            this.A4$255 = A4$255;
            this.A5$240 = A5$240;
            this.A6$225 = A6$225;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple8$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7) {
      return $this.catsKernelBoundedSemilatticeForTuple8(A0, A1, A2, A3, A4, A5, A6, A7);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple8(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7) {
         private final BoundedSemilattice A0$316;
         private final BoundedSemilattice A1$301;
         private final BoundedSemilattice A2$286;
         private final BoundedSemilattice A3$271;
         private final BoundedSemilattice A4$256;
         private final BoundedSemilattice A5$241;
         private final BoundedSemilattice A6$226;
         private final BoundedSemilattice A7$211;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple8 combine(final Tuple8 x, final Tuple8 y) {
            return new Tuple8(this.A0$316.combine(x._1(), y._1()), this.A1$301.combine(x._2(), y._2()), this.A2$286.combine(x._3(), y._3()), this.A3$271.combine(x._4(), y._4()), this.A4$256.combine(x._5(), y._5()), this.A5$241.combine(x._6(), y._6()), this.A6$226.combine(x._7(), y._7()), this.A7$211.combine(x._8(), y._8()));
         }

         public Tuple8 empty() {
            return new Tuple8(this.A0$316.empty(), this.A1$301.empty(), this.A2$286.empty(), this.A3$271.empty(), this.A4$256.empty(), this.A5$241.empty(), this.A6$226.empty(), this.A7$211.empty());
         }

         public {
            this.A0$316 = A0$316;
            this.A1$301 = A1$301;
            this.A2$286 = A2$286;
            this.A3$271 = A3$271;
            this.A4$256 = A4$256;
            this.A5$241 = A5$241;
            this.A6$226 = A6$226;
            this.A7$211 = A7$211;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple9$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8) {
      return $this.catsKernelBoundedSemilatticeForTuple9(A0, A1, A2, A3, A4, A5, A6, A7, A8);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple9(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8) {
         private final BoundedSemilattice A0$317;
         private final BoundedSemilattice A1$302;
         private final BoundedSemilattice A2$287;
         private final BoundedSemilattice A3$272;
         private final BoundedSemilattice A4$257;
         private final BoundedSemilattice A5$242;
         private final BoundedSemilattice A6$227;
         private final BoundedSemilattice A7$212;
         private final BoundedSemilattice A8$197;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple9 combine(final Tuple9 x, final Tuple9 y) {
            return new Tuple9(this.A0$317.combine(x._1(), y._1()), this.A1$302.combine(x._2(), y._2()), this.A2$287.combine(x._3(), y._3()), this.A3$272.combine(x._4(), y._4()), this.A4$257.combine(x._5(), y._5()), this.A5$242.combine(x._6(), y._6()), this.A6$227.combine(x._7(), y._7()), this.A7$212.combine(x._8(), y._8()), this.A8$197.combine(x._9(), y._9()));
         }

         public Tuple9 empty() {
            return new Tuple9(this.A0$317.empty(), this.A1$302.empty(), this.A2$287.empty(), this.A3$272.empty(), this.A4$257.empty(), this.A5$242.empty(), this.A6$227.empty(), this.A7$212.empty(), this.A8$197.empty());
         }

         public {
            this.A0$317 = A0$317;
            this.A1$302 = A1$302;
            this.A2$287 = A2$287;
            this.A3$272 = A3$272;
            this.A4$257 = A4$257;
            this.A5$242 = A5$242;
            this.A6$227 = A6$227;
            this.A7$212 = A7$212;
            this.A8$197 = A8$197;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple10$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9) {
      return $this.catsKernelBoundedSemilatticeForTuple10(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple10(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) {
         private final BoundedSemilattice A0$318;
         private final BoundedSemilattice A1$303;
         private final BoundedSemilattice A2$288;
         private final BoundedSemilattice A3$273;
         private final BoundedSemilattice A4$258;
         private final BoundedSemilattice A5$243;
         private final BoundedSemilattice A6$228;
         private final BoundedSemilattice A7$213;
         private final BoundedSemilattice A8$198;
         private final BoundedSemilattice A9$183;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple10 combine(final Tuple10 x, final Tuple10 y) {
            return new Tuple10(this.A0$318.combine(x._1(), y._1()), this.A1$303.combine(x._2(), y._2()), this.A2$288.combine(x._3(), y._3()), this.A3$273.combine(x._4(), y._4()), this.A4$258.combine(x._5(), y._5()), this.A5$243.combine(x._6(), y._6()), this.A6$228.combine(x._7(), y._7()), this.A7$213.combine(x._8(), y._8()), this.A8$198.combine(x._9(), y._9()), this.A9$183.combine(x._10(), y._10()));
         }

         public Tuple10 empty() {
            return new Tuple10(this.A0$318.empty(), this.A1$303.empty(), this.A2$288.empty(), this.A3$273.empty(), this.A4$258.empty(), this.A5$243.empty(), this.A6$228.empty(), this.A7$213.empty(), this.A8$198.empty(), this.A9$183.empty());
         }

         public {
            this.A0$318 = A0$318;
            this.A1$303 = A1$303;
            this.A2$288 = A2$288;
            this.A3$273 = A3$273;
            this.A4$258 = A4$258;
            this.A5$243 = A5$243;
            this.A6$228 = A6$228;
            this.A7$213 = A7$213;
            this.A8$198 = A8$198;
            this.A9$183 = A9$183;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple11$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10) {
      return $this.catsKernelBoundedSemilatticeForTuple11(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple11(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) {
         private final BoundedSemilattice A0$319;
         private final BoundedSemilattice A1$304;
         private final BoundedSemilattice A2$289;
         private final BoundedSemilattice A3$274;
         private final BoundedSemilattice A4$259;
         private final BoundedSemilattice A5$244;
         private final BoundedSemilattice A6$229;
         private final BoundedSemilattice A7$214;
         private final BoundedSemilattice A8$199;
         private final BoundedSemilattice A9$184;
         private final BoundedSemilattice A10$169;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple11 combine(final Tuple11 x, final Tuple11 y) {
            return new Tuple11(this.A0$319.combine(x._1(), y._1()), this.A1$304.combine(x._2(), y._2()), this.A2$289.combine(x._3(), y._3()), this.A3$274.combine(x._4(), y._4()), this.A4$259.combine(x._5(), y._5()), this.A5$244.combine(x._6(), y._6()), this.A6$229.combine(x._7(), y._7()), this.A7$214.combine(x._8(), y._8()), this.A8$199.combine(x._9(), y._9()), this.A9$184.combine(x._10(), y._10()), this.A10$169.combine(x._11(), y._11()));
         }

         public Tuple11 empty() {
            return new Tuple11(this.A0$319.empty(), this.A1$304.empty(), this.A2$289.empty(), this.A3$274.empty(), this.A4$259.empty(), this.A5$244.empty(), this.A6$229.empty(), this.A7$214.empty(), this.A8$199.empty(), this.A9$184.empty(), this.A10$169.empty());
         }

         public {
            this.A0$319 = A0$319;
            this.A1$304 = A1$304;
            this.A2$289 = A2$289;
            this.A3$274 = A3$274;
            this.A4$259 = A4$259;
            this.A5$244 = A5$244;
            this.A6$229 = A6$229;
            this.A7$214 = A7$214;
            this.A8$199 = A8$199;
            this.A9$184 = A9$184;
            this.A10$169 = A10$169;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple12$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11) {
      return $this.catsKernelBoundedSemilatticeForTuple12(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple12(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) {
         private final BoundedSemilattice A0$320;
         private final BoundedSemilattice A1$305;
         private final BoundedSemilattice A2$290;
         private final BoundedSemilattice A3$275;
         private final BoundedSemilattice A4$260;
         private final BoundedSemilattice A5$245;
         private final BoundedSemilattice A6$230;
         private final BoundedSemilattice A7$215;
         private final BoundedSemilattice A8$200;
         private final BoundedSemilattice A9$185;
         private final BoundedSemilattice A10$170;
         private final BoundedSemilattice A11$155;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple12 combine(final Tuple12 x, final Tuple12 y) {
            return new Tuple12(this.A0$320.combine(x._1(), y._1()), this.A1$305.combine(x._2(), y._2()), this.A2$290.combine(x._3(), y._3()), this.A3$275.combine(x._4(), y._4()), this.A4$260.combine(x._5(), y._5()), this.A5$245.combine(x._6(), y._6()), this.A6$230.combine(x._7(), y._7()), this.A7$215.combine(x._8(), y._8()), this.A8$200.combine(x._9(), y._9()), this.A9$185.combine(x._10(), y._10()), this.A10$170.combine(x._11(), y._11()), this.A11$155.combine(x._12(), y._12()));
         }

         public Tuple12 empty() {
            return new Tuple12(this.A0$320.empty(), this.A1$305.empty(), this.A2$290.empty(), this.A3$275.empty(), this.A4$260.empty(), this.A5$245.empty(), this.A6$230.empty(), this.A7$215.empty(), this.A8$200.empty(), this.A9$185.empty(), this.A10$170.empty(), this.A11$155.empty());
         }

         public {
            this.A0$320 = A0$320;
            this.A1$305 = A1$305;
            this.A2$290 = A2$290;
            this.A3$275 = A3$275;
            this.A4$260 = A4$260;
            this.A5$245 = A5$245;
            this.A6$230 = A6$230;
            this.A7$215 = A7$215;
            this.A8$200 = A8$200;
            this.A9$185 = A9$185;
            this.A10$170 = A10$170;
            this.A11$155 = A11$155;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple13$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12) {
      return $this.catsKernelBoundedSemilatticeForTuple13(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple13(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) {
         private final BoundedSemilattice A0$321;
         private final BoundedSemilattice A1$306;
         private final BoundedSemilattice A2$291;
         private final BoundedSemilattice A3$276;
         private final BoundedSemilattice A4$261;
         private final BoundedSemilattice A5$246;
         private final BoundedSemilattice A6$231;
         private final BoundedSemilattice A7$216;
         private final BoundedSemilattice A8$201;
         private final BoundedSemilattice A9$186;
         private final BoundedSemilattice A10$171;
         private final BoundedSemilattice A11$156;
         private final BoundedSemilattice A12$141;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple13 combine(final Tuple13 x, final Tuple13 y) {
            return new Tuple13(this.A0$321.combine(x._1(), y._1()), this.A1$306.combine(x._2(), y._2()), this.A2$291.combine(x._3(), y._3()), this.A3$276.combine(x._4(), y._4()), this.A4$261.combine(x._5(), y._5()), this.A5$246.combine(x._6(), y._6()), this.A6$231.combine(x._7(), y._7()), this.A7$216.combine(x._8(), y._8()), this.A8$201.combine(x._9(), y._9()), this.A9$186.combine(x._10(), y._10()), this.A10$171.combine(x._11(), y._11()), this.A11$156.combine(x._12(), y._12()), this.A12$141.combine(x._13(), y._13()));
         }

         public Tuple13 empty() {
            return new Tuple13(this.A0$321.empty(), this.A1$306.empty(), this.A2$291.empty(), this.A3$276.empty(), this.A4$261.empty(), this.A5$246.empty(), this.A6$231.empty(), this.A7$216.empty(), this.A8$201.empty(), this.A9$186.empty(), this.A10$171.empty(), this.A11$156.empty(), this.A12$141.empty());
         }

         public {
            this.A0$321 = A0$321;
            this.A1$306 = A1$306;
            this.A2$291 = A2$291;
            this.A3$276 = A3$276;
            this.A4$261 = A4$261;
            this.A5$246 = A5$246;
            this.A6$231 = A6$231;
            this.A7$216 = A7$216;
            this.A8$201 = A8$201;
            this.A9$186 = A9$186;
            this.A10$171 = A10$171;
            this.A11$156 = A11$156;
            this.A12$141 = A12$141;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple14$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13) {
      return $this.catsKernelBoundedSemilatticeForTuple14(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple14(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) {
         private final BoundedSemilattice A0$322;
         private final BoundedSemilattice A1$307;
         private final BoundedSemilattice A2$292;
         private final BoundedSemilattice A3$277;
         private final BoundedSemilattice A4$262;
         private final BoundedSemilattice A5$247;
         private final BoundedSemilattice A6$232;
         private final BoundedSemilattice A7$217;
         private final BoundedSemilattice A8$202;
         private final BoundedSemilattice A9$187;
         private final BoundedSemilattice A10$172;
         private final BoundedSemilattice A11$157;
         private final BoundedSemilattice A12$142;
         private final BoundedSemilattice A13$127;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple14 combine(final Tuple14 x, final Tuple14 y) {
            return new Tuple14(this.A0$322.combine(x._1(), y._1()), this.A1$307.combine(x._2(), y._2()), this.A2$292.combine(x._3(), y._3()), this.A3$277.combine(x._4(), y._4()), this.A4$262.combine(x._5(), y._5()), this.A5$247.combine(x._6(), y._6()), this.A6$232.combine(x._7(), y._7()), this.A7$217.combine(x._8(), y._8()), this.A8$202.combine(x._9(), y._9()), this.A9$187.combine(x._10(), y._10()), this.A10$172.combine(x._11(), y._11()), this.A11$157.combine(x._12(), y._12()), this.A12$142.combine(x._13(), y._13()), this.A13$127.combine(x._14(), y._14()));
         }

         public Tuple14 empty() {
            return new Tuple14(this.A0$322.empty(), this.A1$307.empty(), this.A2$292.empty(), this.A3$277.empty(), this.A4$262.empty(), this.A5$247.empty(), this.A6$232.empty(), this.A7$217.empty(), this.A8$202.empty(), this.A9$187.empty(), this.A10$172.empty(), this.A11$157.empty(), this.A12$142.empty(), this.A13$127.empty());
         }

         public {
            this.A0$322 = A0$322;
            this.A1$307 = A1$307;
            this.A2$292 = A2$292;
            this.A3$277 = A3$277;
            this.A4$262 = A4$262;
            this.A5$247 = A5$247;
            this.A6$232 = A6$232;
            this.A7$217 = A7$217;
            this.A8$202 = A8$202;
            this.A9$187 = A9$187;
            this.A10$172 = A10$172;
            this.A11$157 = A11$157;
            this.A12$142 = A12$142;
            this.A13$127 = A13$127;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple15$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14) {
      return $this.catsKernelBoundedSemilatticeForTuple15(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple15(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) {
         private final BoundedSemilattice A0$323;
         private final BoundedSemilattice A1$308;
         private final BoundedSemilattice A2$293;
         private final BoundedSemilattice A3$278;
         private final BoundedSemilattice A4$263;
         private final BoundedSemilattice A5$248;
         private final BoundedSemilattice A6$233;
         private final BoundedSemilattice A7$218;
         private final BoundedSemilattice A8$203;
         private final BoundedSemilattice A9$188;
         private final BoundedSemilattice A10$173;
         private final BoundedSemilattice A11$158;
         private final BoundedSemilattice A12$143;
         private final BoundedSemilattice A13$128;
         private final BoundedSemilattice A14$113;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple15 combine(final Tuple15 x, final Tuple15 y) {
            return new Tuple15(this.A0$323.combine(x._1(), y._1()), this.A1$308.combine(x._2(), y._2()), this.A2$293.combine(x._3(), y._3()), this.A3$278.combine(x._4(), y._4()), this.A4$263.combine(x._5(), y._5()), this.A5$248.combine(x._6(), y._6()), this.A6$233.combine(x._7(), y._7()), this.A7$218.combine(x._8(), y._8()), this.A8$203.combine(x._9(), y._9()), this.A9$188.combine(x._10(), y._10()), this.A10$173.combine(x._11(), y._11()), this.A11$158.combine(x._12(), y._12()), this.A12$143.combine(x._13(), y._13()), this.A13$128.combine(x._14(), y._14()), this.A14$113.combine(x._15(), y._15()));
         }

         public Tuple15 empty() {
            return new Tuple15(this.A0$323.empty(), this.A1$308.empty(), this.A2$293.empty(), this.A3$278.empty(), this.A4$263.empty(), this.A5$248.empty(), this.A6$233.empty(), this.A7$218.empty(), this.A8$203.empty(), this.A9$188.empty(), this.A10$173.empty(), this.A11$158.empty(), this.A12$143.empty(), this.A13$128.empty(), this.A14$113.empty());
         }

         public {
            this.A0$323 = A0$323;
            this.A1$308 = A1$308;
            this.A2$293 = A2$293;
            this.A3$278 = A3$278;
            this.A4$263 = A4$263;
            this.A5$248 = A5$248;
            this.A6$233 = A6$233;
            this.A7$218 = A7$218;
            this.A8$203 = A8$203;
            this.A9$188 = A9$188;
            this.A10$173 = A10$173;
            this.A11$158 = A11$158;
            this.A12$143 = A12$143;
            this.A13$128 = A13$128;
            this.A14$113 = A14$113;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple16$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15) {
      return $this.catsKernelBoundedSemilatticeForTuple16(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple16(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) {
         private final BoundedSemilattice A0$324;
         private final BoundedSemilattice A1$309;
         private final BoundedSemilattice A2$294;
         private final BoundedSemilattice A3$279;
         private final BoundedSemilattice A4$264;
         private final BoundedSemilattice A5$249;
         private final BoundedSemilattice A6$234;
         private final BoundedSemilattice A7$219;
         private final BoundedSemilattice A8$204;
         private final BoundedSemilattice A9$189;
         private final BoundedSemilattice A10$174;
         private final BoundedSemilattice A11$159;
         private final BoundedSemilattice A12$144;
         private final BoundedSemilattice A13$129;
         private final BoundedSemilattice A14$114;
         private final BoundedSemilattice A15$99;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple16 combine(final Tuple16 x, final Tuple16 y) {
            return new Tuple16(this.A0$324.combine(x._1(), y._1()), this.A1$309.combine(x._2(), y._2()), this.A2$294.combine(x._3(), y._3()), this.A3$279.combine(x._4(), y._4()), this.A4$264.combine(x._5(), y._5()), this.A5$249.combine(x._6(), y._6()), this.A6$234.combine(x._7(), y._7()), this.A7$219.combine(x._8(), y._8()), this.A8$204.combine(x._9(), y._9()), this.A9$189.combine(x._10(), y._10()), this.A10$174.combine(x._11(), y._11()), this.A11$159.combine(x._12(), y._12()), this.A12$144.combine(x._13(), y._13()), this.A13$129.combine(x._14(), y._14()), this.A14$114.combine(x._15(), y._15()), this.A15$99.combine(x._16(), y._16()));
         }

         public Tuple16 empty() {
            return new Tuple16(this.A0$324.empty(), this.A1$309.empty(), this.A2$294.empty(), this.A3$279.empty(), this.A4$264.empty(), this.A5$249.empty(), this.A6$234.empty(), this.A7$219.empty(), this.A8$204.empty(), this.A9$189.empty(), this.A10$174.empty(), this.A11$159.empty(), this.A12$144.empty(), this.A13$129.empty(), this.A14$114.empty(), this.A15$99.empty());
         }

         public {
            this.A0$324 = A0$324;
            this.A1$309 = A1$309;
            this.A2$294 = A2$294;
            this.A3$279 = A3$279;
            this.A4$264 = A4$264;
            this.A5$249 = A5$249;
            this.A6$234 = A6$234;
            this.A7$219 = A7$219;
            this.A8$204 = A8$204;
            this.A9$189 = A9$189;
            this.A10$174 = A10$174;
            this.A11$159 = A11$159;
            this.A12$144 = A12$144;
            this.A13$129 = A13$129;
            this.A14$114 = A14$114;
            this.A15$99 = A15$99;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple17$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16) {
      return $this.catsKernelBoundedSemilatticeForTuple17(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple17(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) {
         private final BoundedSemilattice A0$325;
         private final BoundedSemilattice A1$310;
         private final BoundedSemilattice A2$295;
         private final BoundedSemilattice A3$280;
         private final BoundedSemilattice A4$265;
         private final BoundedSemilattice A5$250;
         private final BoundedSemilattice A6$235;
         private final BoundedSemilattice A7$220;
         private final BoundedSemilattice A8$205;
         private final BoundedSemilattice A9$190;
         private final BoundedSemilattice A10$175;
         private final BoundedSemilattice A11$160;
         private final BoundedSemilattice A12$145;
         private final BoundedSemilattice A13$130;
         private final BoundedSemilattice A14$115;
         private final BoundedSemilattice A15$100;
         private final BoundedSemilattice A16$85;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple17 combine(final Tuple17 x, final Tuple17 y) {
            return new Tuple17(this.A0$325.combine(x._1(), y._1()), this.A1$310.combine(x._2(), y._2()), this.A2$295.combine(x._3(), y._3()), this.A3$280.combine(x._4(), y._4()), this.A4$265.combine(x._5(), y._5()), this.A5$250.combine(x._6(), y._6()), this.A6$235.combine(x._7(), y._7()), this.A7$220.combine(x._8(), y._8()), this.A8$205.combine(x._9(), y._9()), this.A9$190.combine(x._10(), y._10()), this.A10$175.combine(x._11(), y._11()), this.A11$160.combine(x._12(), y._12()), this.A12$145.combine(x._13(), y._13()), this.A13$130.combine(x._14(), y._14()), this.A14$115.combine(x._15(), y._15()), this.A15$100.combine(x._16(), y._16()), this.A16$85.combine(x._17(), y._17()));
         }

         public Tuple17 empty() {
            return new Tuple17(this.A0$325.empty(), this.A1$310.empty(), this.A2$295.empty(), this.A3$280.empty(), this.A4$265.empty(), this.A5$250.empty(), this.A6$235.empty(), this.A7$220.empty(), this.A8$205.empty(), this.A9$190.empty(), this.A10$175.empty(), this.A11$160.empty(), this.A12$145.empty(), this.A13$130.empty(), this.A14$115.empty(), this.A15$100.empty(), this.A16$85.empty());
         }

         public {
            this.A0$325 = A0$325;
            this.A1$310 = A1$310;
            this.A2$295 = A2$295;
            this.A3$280 = A3$280;
            this.A4$265 = A4$265;
            this.A5$250 = A5$250;
            this.A6$235 = A6$235;
            this.A7$220 = A7$220;
            this.A8$205 = A8$205;
            this.A9$190 = A9$190;
            this.A10$175 = A10$175;
            this.A11$160 = A11$160;
            this.A12$145 = A12$145;
            this.A13$130 = A13$130;
            this.A14$115 = A14$115;
            this.A15$100 = A15$100;
            this.A16$85 = A16$85;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple18$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17) {
      return $this.catsKernelBoundedSemilatticeForTuple18(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple18(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) {
         private final BoundedSemilattice A0$326;
         private final BoundedSemilattice A1$311;
         private final BoundedSemilattice A2$296;
         private final BoundedSemilattice A3$281;
         private final BoundedSemilattice A4$266;
         private final BoundedSemilattice A5$251;
         private final BoundedSemilattice A6$236;
         private final BoundedSemilattice A7$221;
         private final BoundedSemilattice A8$206;
         private final BoundedSemilattice A9$191;
         private final BoundedSemilattice A10$176;
         private final BoundedSemilattice A11$161;
         private final BoundedSemilattice A12$146;
         private final BoundedSemilattice A13$131;
         private final BoundedSemilattice A14$116;
         private final BoundedSemilattice A15$101;
         private final BoundedSemilattice A16$86;
         private final BoundedSemilattice A17$71;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple18 combine(final Tuple18 x, final Tuple18 y) {
            return new Tuple18(this.A0$326.combine(x._1(), y._1()), this.A1$311.combine(x._2(), y._2()), this.A2$296.combine(x._3(), y._3()), this.A3$281.combine(x._4(), y._4()), this.A4$266.combine(x._5(), y._5()), this.A5$251.combine(x._6(), y._6()), this.A6$236.combine(x._7(), y._7()), this.A7$221.combine(x._8(), y._8()), this.A8$206.combine(x._9(), y._9()), this.A9$191.combine(x._10(), y._10()), this.A10$176.combine(x._11(), y._11()), this.A11$161.combine(x._12(), y._12()), this.A12$146.combine(x._13(), y._13()), this.A13$131.combine(x._14(), y._14()), this.A14$116.combine(x._15(), y._15()), this.A15$101.combine(x._16(), y._16()), this.A16$86.combine(x._17(), y._17()), this.A17$71.combine(x._18(), y._18()));
         }

         public Tuple18 empty() {
            return new Tuple18(this.A0$326.empty(), this.A1$311.empty(), this.A2$296.empty(), this.A3$281.empty(), this.A4$266.empty(), this.A5$251.empty(), this.A6$236.empty(), this.A7$221.empty(), this.A8$206.empty(), this.A9$191.empty(), this.A10$176.empty(), this.A11$161.empty(), this.A12$146.empty(), this.A13$131.empty(), this.A14$116.empty(), this.A15$101.empty(), this.A16$86.empty(), this.A17$71.empty());
         }

         public {
            this.A0$326 = A0$326;
            this.A1$311 = A1$311;
            this.A2$296 = A2$296;
            this.A3$281 = A3$281;
            this.A4$266 = A4$266;
            this.A5$251 = A5$251;
            this.A6$236 = A6$236;
            this.A7$221 = A7$221;
            this.A8$206 = A8$206;
            this.A9$191 = A9$191;
            this.A10$176 = A10$176;
            this.A11$161 = A11$161;
            this.A12$146 = A12$146;
            this.A13$131 = A13$131;
            this.A14$116 = A14$116;
            this.A15$101 = A15$101;
            this.A16$86 = A16$86;
            this.A17$71 = A17$71;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple19$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18) {
      return $this.catsKernelBoundedSemilatticeForTuple19(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple19(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) {
         private final BoundedSemilattice A0$327;
         private final BoundedSemilattice A1$312;
         private final BoundedSemilattice A2$297;
         private final BoundedSemilattice A3$282;
         private final BoundedSemilattice A4$267;
         private final BoundedSemilattice A5$252;
         private final BoundedSemilattice A6$237;
         private final BoundedSemilattice A7$222;
         private final BoundedSemilattice A8$207;
         private final BoundedSemilattice A9$192;
         private final BoundedSemilattice A10$177;
         private final BoundedSemilattice A11$162;
         private final BoundedSemilattice A12$147;
         private final BoundedSemilattice A13$132;
         private final BoundedSemilattice A14$117;
         private final BoundedSemilattice A15$102;
         private final BoundedSemilattice A16$87;
         private final BoundedSemilattice A17$72;
         private final BoundedSemilattice A18$57;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple19 combine(final Tuple19 x, final Tuple19 y) {
            return new Tuple19(this.A0$327.combine(x._1(), y._1()), this.A1$312.combine(x._2(), y._2()), this.A2$297.combine(x._3(), y._3()), this.A3$282.combine(x._4(), y._4()), this.A4$267.combine(x._5(), y._5()), this.A5$252.combine(x._6(), y._6()), this.A6$237.combine(x._7(), y._7()), this.A7$222.combine(x._8(), y._8()), this.A8$207.combine(x._9(), y._9()), this.A9$192.combine(x._10(), y._10()), this.A10$177.combine(x._11(), y._11()), this.A11$162.combine(x._12(), y._12()), this.A12$147.combine(x._13(), y._13()), this.A13$132.combine(x._14(), y._14()), this.A14$117.combine(x._15(), y._15()), this.A15$102.combine(x._16(), y._16()), this.A16$87.combine(x._17(), y._17()), this.A17$72.combine(x._18(), y._18()), this.A18$57.combine(x._19(), y._19()));
         }

         public Tuple19 empty() {
            return new Tuple19(this.A0$327.empty(), this.A1$312.empty(), this.A2$297.empty(), this.A3$282.empty(), this.A4$267.empty(), this.A5$252.empty(), this.A6$237.empty(), this.A7$222.empty(), this.A8$207.empty(), this.A9$192.empty(), this.A10$177.empty(), this.A11$162.empty(), this.A12$147.empty(), this.A13$132.empty(), this.A14$117.empty(), this.A15$102.empty(), this.A16$87.empty(), this.A17$72.empty(), this.A18$57.empty());
         }

         public {
            this.A0$327 = A0$327;
            this.A1$312 = A1$312;
            this.A2$297 = A2$297;
            this.A3$282 = A3$282;
            this.A4$267 = A4$267;
            this.A5$252 = A5$252;
            this.A6$237 = A6$237;
            this.A7$222 = A7$222;
            this.A8$207 = A8$207;
            this.A9$192 = A9$192;
            this.A10$177 = A10$177;
            this.A11$162 = A11$162;
            this.A12$147 = A12$147;
            this.A13$132 = A13$132;
            this.A14$117 = A14$117;
            this.A15$102 = A15$102;
            this.A16$87 = A16$87;
            this.A17$72 = A17$72;
            this.A18$57 = A18$57;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple20$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18, final BoundedSemilattice A19) {
      return $this.catsKernelBoundedSemilatticeForTuple20(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple20(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18, final BoundedSemilattice A19) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) {
         private final BoundedSemilattice A0$328;
         private final BoundedSemilattice A1$313;
         private final BoundedSemilattice A2$298;
         private final BoundedSemilattice A3$283;
         private final BoundedSemilattice A4$268;
         private final BoundedSemilattice A5$253;
         private final BoundedSemilattice A6$238;
         private final BoundedSemilattice A7$223;
         private final BoundedSemilattice A8$208;
         private final BoundedSemilattice A9$193;
         private final BoundedSemilattice A10$178;
         private final BoundedSemilattice A11$163;
         private final BoundedSemilattice A12$148;
         private final BoundedSemilattice A13$133;
         private final BoundedSemilattice A14$118;
         private final BoundedSemilattice A15$103;
         private final BoundedSemilattice A16$88;
         private final BoundedSemilattice A17$73;
         private final BoundedSemilattice A18$58;
         private final BoundedSemilattice A19$43;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple20 combine(final Tuple20 x, final Tuple20 y) {
            return new Tuple20(this.A0$328.combine(x._1(), y._1()), this.A1$313.combine(x._2(), y._2()), this.A2$298.combine(x._3(), y._3()), this.A3$283.combine(x._4(), y._4()), this.A4$268.combine(x._5(), y._5()), this.A5$253.combine(x._6(), y._6()), this.A6$238.combine(x._7(), y._7()), this.A7$223.combine(x._8(), y._8()), this.A8$208.combine(x._9(), y._9()), this.A9$193.combine(x._10(), y._10()), this.A10$178.combine(x._11(), y._11()), this.A11$163.combine(x._12(), y._12()), this.A12$148.combine(x._13(), y._13()), this.A13$133.combine(x._14(), y._14()), this.A14$118.combine(x._15(), y._15()), this.A15$103.combine(x._16(), y._16()), this.A16$88.combine(x._17(), y._17()), this.A17$73.combine(x._18(), y._18()), this.A18$58.combine(x._19(), y._19()), this.A19$43.combine(x._20(), y._20()));
         }

         public Tuple20 empty() {
            return new Tuple20(this.A0$328.empty(), this.A1$313.empty(), this.A2$298.empty(), this.A3$283.empty(), this.A4$268.empty(), this.A5$253.empty(), this.A6$238.empty(), this.A7$223.empty(), this.A8$208.empty(), this.A9$193.empty(), this.A10$178.empty(), this.A11$163.empty(), this.A12$148.empty(), this.A13$133.empty(), this.A14$118.empty(), this.A15$103.empty(), this.A16$88.empty(), this.A17$73.empty(), this.A18$58.empty(), this.A19$43.empty());
         }

         public {
            this.A0$328 = A0$328;
            this.A1$313 = A1$313;
            this.A2$298 = A2$298;
            this.A3$283 = A3$283;
            this.A4$268 = A4$268;
            this.A5$253 = A5$253;
            this.A6$238 = A6$238;
            this.A7$223 = A7$223;
            this.A8$208 = A8$208;
            this.A9$193 = A9$193;
            this.A10$178 = A10$178;
            this.A11$163 = A11$163;
            this.A12$148 = A12$148;
            this.A13$133 = A13$133;
            this.A14$118 = A14$118;
            this.A15$103 = A15$103;
            this.A16$88 = A16$88;
            this.A17$73 = A17$73;
            this.A18$58 = A18$58;
            this.A19$43 = A19$43;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple21$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18, final BoundedSemilattice A19, final BoundedSemilattice A20) {
      return $this.catsKernelBoundedSemilatticeForTuple21(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple21(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18, final BoundedSemilattice A19, final BoundedSemilattice A20) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) {
         private final BoundedSemilattice A0$329;
         private final BoundedSemilattice A1$314;
         private final BoundedSemilattice A2$299;
         private final BoundedSemilattice A3$284;
         private final BoundedSemilattice A4$269;
         private final BoundedSemilattice A5$254;
         private final BoundedSemilattice A6$239;
         private final BoundedSemilattice A7$224;
         private final BoundedSemilattice A8$209;
         private final BoundedSemilattice A9$194;
         private final BoundedSemilattice A10$179;
         private final BoundedSemilattice A11$164;
         private final BoundedSemilattice A12$149;
         private final BoundedSemilattice A13$134;
         private final BoundedSemilattice A14$119;
         private final BoundedSemilattice A15$104;
         private final BoundedSemilattice A16$89;
         private final BoundedSemilattice A17$74;
         private final BoundedSemilattice A18$59;
         private final BoundedSemilattice A19$44;
         private final BoundedSemilattice A20$29;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple21 combine(final Tuple21 x, final Tuple21 y) {
            return new Tuple21(this.A0$329.combine(x._1(), y._1()), this.A1$314.combine(x._2(), y._2()), this.A2$299.combine(x._3(), y._3()), this.A3$284.combine(x._4(), y._4()), this.A4$269.combine(x._5(), y._5()), this.A5$254.combine(x._6(), y._6()), this.A6$239.combine(x._7(), y._7()), this.A7$224.combine(x._8(), y._8()), this.A8$209.combine(x._9(), y._9()), this.A9$194.combine(x._10(), y._10()), this.A10$179.combine(x._11(), y._11()), this.A11$164.combine(x._12(), y._12()), this.A12$149.combine(x._13(), y._13()), this.A13$134.combine(x._14(), y._14()), this.A14$119.combine(x._15(), y._15()), this.A15$104.combine(x._16(), y._16()), this.A16$89.combine(x._17(), y._17()), this.A17$74.combine(x._18(), y._18()), this.A18$59.combine(x._19(), y._19()), this.A19$44.combine(x._20(), y._20()), this.A20$29.combine(x._21(), y._21()));
         }

         public Tuple21 empty() {
            return new Tuple21(this.A0$329.empty(), this.A1$314.empty(), this.A2$299.empty(), this.A3$284.empty(), this.A4$269.empty(), this.A5$254.empty(), this.A6$239.empty(), this.A7$224.empty(), this.A8$209.empty(), this.A9$194.empty(), this.A10$179.empty(), this.A11$164.empty(), this.A12$149.empty(), this.A13$134.empty(), this.A14$119.empty(), this.A15$104.empty(), this.A16$89.empty(), this.A17$74.empty(), this.A18$59.empty(), this.A19$44.empty(), this.A20$29.empty());
         }

         public {
            this.A0$329 = A0$329;
            this.A1$314 = A1$314;
            this.A2$299 = A2$299;
            this.A3$284 = A3$284;
            this.A4$269 = A4$269;
            this.A5$254 = A5$254;
            this.A6$239 = A6$239;
            this.A7$224 = A7$224;
            this.A8$209 = A8$209;
            this.A9$194 = A9$194;
            this.A10$179 = A10$179;
            this.A11$164 = A11$164;
            this.A12$149 = A12$149;
            this.A13$134 = A13$134;
            this.A14$119 = A14$119;
            this.A15$104 = A15$104;
            this.A16$89 = A16$89;
            this.A17$74 = A17$74;
            this.A18$59 = A18$59;
            this.A19$44 = A19$44;
            this.A20$29 = A20$29;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelBoundedSemilatticeForTuple22$(final TupleBoundedSemilatticeInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18, final BoundedSemilattice A19, final BoundedSemilattice A20, final BoundedSemilattice A21) {
      return $this.catsKernelBoundedSemilatticeForTuple22(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21);
   }

   default BoundedSemilattice catsKernelBoundedSemilatticeForTuple22(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18, final BoundedSemilattice A19, final BoundedSemilattice A20, final BoundedSemilattice A21) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) {
         private final BoundedSemilattice A0$330;
         private final BoundedSemilattice A1$315;
         private final BoundedSemilattice A2$300;
         private final BoundedSemilattice A3$285;
         private final BoundedSemilattice A4$270;
         private final BoundedSemilattice A5$255;
         private final BoundedSemilattice A6$240;
         private final BoundedSemilattice A7$225;
         private final BoundedSemilattice A8$210;
         private final BoundedSemilattice A9$195;
         private final BoundedSemilattice A10$180;
         private final BoundedSemilattice A11$165;
         private final BoundedSemilattice A12$150;
         private final BoundedSemilattice A13$135;
         private final BoundedSemilattice A14$120;
         private final BoundedSemilattice A15$105;
         private final BoundedSemilattice A16$90;
         private final BoundedSemilattice A17$75;
         private final BoundedSemilattice A18$60;
         private final BoundedSemilattice A19$45;
         private final BoundedSemilattice A20$30;
         private final BoundedSemilattice A21$15;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple22 combine(final Tuple22 x, final Tuple22 y) {
            return new Tuple22(this.A0$330.combine(x._1(), y._1()), this.A1$315.combine(x._2(), y._2()), this.A2$300.combine(x._3(), y._3()), this.A3$285.combine(x._4(), y._4()), this.A4$270.combine(x._5(), y._5()), this.A5$255.combine(x._6(), y._6()), this.A6$240.combine(x._7(), y._7()), this.A7$225.combine(x._8(), y._8()), this.A8$210.combine(x._9(), y._9()), this.A9$195.combine(x._10(), y._10()), this.A10$180.combine(x._11(), y._11()), this.A11$165.combine(x._12(), y._12()), this.A12$150.combine(x._13(), y._13()), this.A13$135.combine(x._14(), y._14()), this.A14$120.combine(x._15(), y._15()), this.A15$105.combine(x._16(), y._16()), this.A16$90.combine(x._17(), y._17()), this.A17$75.combine(x._18(), y._18()), this.A18$60.combine(x._19(), y._19()), this.A19$45.combine(x._20(), y._20()), this.A20$30.combine(x._21(), y._21()), this.A21$15.combine(x._22(), y._22()));
         }

         public Tuple22 empty() {
            return new Tuple22(this.A0$330.empty(), this.A1$315.empty(), this.A2$300.empty(), this.A3$285.empty(), this.A4$270.empty(), this.A5$255.empty(), this.A6$240.empty(), this.A7$225.empty(), this.A8$210.empty(), this.A9$195.empty(), this.A10$180.empty(), this.A11$165.empty(), this.A12$150.empty(), this.A13$135.empty(), this.A14$120.empty(), this.A15$105.empty(), this.A16$90.empty(), this.A17$75.empty(), this.A18$60.empty(), this.A19$45.empty(), this.A20$30.empty(), this.A21$15.empty());
         }

         public {
            this.A0$330 = A0$330;
            this.A1$315 = A1$315;
            this.A2$300 = A2$300;
            this.A3$285 = A3$285;
            this.A4$270 = A4$270;
            this.A5$255 = A5$255;
            this.A6$240 = A6$240;
            this.A7$225 = A7$225;
            this.A8$210 = A8$210;
            this.A9$195 = A9$195;
            this.A10$180 = A10$180;
            this.A11$165 = A11$165;
            this.A12$150 = A12$150;
            this.A13$135 = A13$135;
            this.A14$120 = A14$120;
            this.A15$105 = A15$105;
            this.A16$90 = A16$90;
            this.A17$75 = A17$75;
            this.A18$60 = A18$60;
            this.A19$45 = A19$45;
            this.A20$30 = A20$30;
            this.A21$15 = A21$15;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   static void $init$(final TupleBoundedSemilatticeInstances $this) {
   }
}
