package cats.kernel.instances;

import cats.kernel.Band;
import cats.kernel.BoundedSemilattice;
import cats.kernel.CommutativeGroup;
import cats.kernel.CommutativeMonoid;
import cats.kernel.CommutativeSemigroup;
import cats.kernel.Comparison;
import cats.kernel.Eq;
import cats.kernel.Group;
import cats.kernel.Monoid;
import cats.kernel.Order;
import cats.kernel.PartialOrder;
import cats.kernel.Semigroup;
import cats.kernel.Semilattice;
import java.lang.invoke.SerializedLambda;
import scala.Option;
import scala.Tuple1;
import scala.Tuple10;
import scala.Tuple11;
import scala.Tuple12;
import scala.Tuple13;
import scala.Tuple14;
import scala.Tuple15;
import scala.Tuple16;
import scala.Tuple17;
import scala.Tuple18;
import scala.Tuple19;
import scala.Tuple2;
import scala.Tuple20;
import scala.Tuple21;
import scala.Tuple22;
import scala.Tuple3;
import scala.Tuple4;
import scala.Tuple5;
import scala.Tuple6;
import scala.Tuple7;
import scala.Tuple8;
import scala.Tuple9;
import scala.collection.IterableOnce;
import scala.collection.ArrayOps.;
import scala.math.Ordering;
import scala.reflect.ScalaSignature;
import scala.runtime.BoxedUnit;
import scala.runtime.BoxesRunTime;
import scala.runtime.java8.JFunction0;
import scala.runtime.java8.JFunction1;

@ScalaSignature(
   bytes = "\u0006\u0005mMga\u0002#F!\u0003\r\t\u0001\u0014\u0005\u0006/\u0002!\t\u0001\u0017\u0005\u00069\u0002!\u0019!\u0018\u0005\u0006i\u0002!\u0019!\u001e\u0005\u0007\u007f\u0002!\u0019!!\u0001\t\u000f\u0005U\u0001\u0001b\u0001\u0002\u0018!9\u0011q\u0007\u0001\u0005\u0004\u0005e\u0002bBA)\u0001\u0011\r\u00111\u000b\u0005\b\u0003W\u0002A1AA7\u0011\u001d\t)\n\u0001C\u0002\u0003/Cq!a.\u0001\t\u0007\tI\fC\u0004\u0002Z\u0002!\u0019!a7\t\u000f\t-\u0001\u0001b\u0001\u0003\u000e!9!Q\u0007\u0001\u0005\u0004\t]\u0002b\u0002B0\u0001\u0011\r!\u0011\r\u0005\b\u00053\u0003A1\u0001BN\u0011\u001d\u0011Y\r\u0001C\u0002\u0005\u001bDqA!@\u0001\t\u0007\u0011y\u0010C\u0004\u0004@\u0001!\u0019a!\u0011\t\u000f\re\u0004\u0001b\u0001\u0004|!911\u0017\u0001\u0005\u0004\rU\u0006bBB\u007f\u0001\u0011\r1q \u0005\b\t\u007f\u0001A1\u0001C!\u0011\u001d!\t\t\u0001C\u0002\t\u0007Cq\u0001b5\u0001\t\u0007!)\u000eC\u0004\u0006\u001e\u0001!\u0019!b\b\t\u000f\u0015\u001d\u0004\u0001b\u0001\u0006j!9Q\u0011\u0019\u0001\u0005\u0004\u0015\r\u0007b\u0002D\n\u0001\u0011\raQ\u0003\u0005\b\rK\u0002A1\u0001D4\u0011\u001d19\r\u0001C\u0002\r\u0013Dqa\"\t\u0001\t\u00079\u0019\u0003C\u0004\b|\u0001!\u0019a\" \t\u000f\u001d\u0015\b\u0001b\u0001\bh\"9\u0001r\t\u0001\u0005\u0004!%\u0003b\u0002EU\u0001\u0011\r\u00012\u0016\u0005\b\u00137\u0001A1AE\u000f\u0011\u001dI)\t\u0001C\u0002\u0013\u000fCq!c<\u0001\t\u0007I\t\u0010C\u0004\u000bj\u0001!\u0019Ac\u001b\t\u000f)m\u0007\u0001b\u0001\u000b^\"91R\n\u0001\u0005\u0004-=\u0003bBFh\u0001\u0011\r1\u0012\u001b\u0005\b\u0019\u0013\u0002A1\u0001G&\u0011\u001da\u0019\r\u0001C\u0002\u0019\u000bDq!$\u0014\u0001\t\u0007iy\u0005C\u0004\u000eP\u0002!\u0019!$5\t\u000f9E\u0003\u0001b\u0001\u000fT!9a2\u001d\u0001\u0005\u00049\u0015\bbBH7\u0001\u0011\rqr\u000e\u0005\b\u001fo\u0004A1AH}\u0011\u001d\u0001\n\n\u0001C\u0002!'Cq!e\t\u0001\t\u0007\t*\u0003C\u0004\u00126\u0002!\u0019!e.\t\u000fI]\u0003\u0001b\u0001\u0013Z!9!\u0013\u001f\u0001\u0005\u0004IM\bbBJF\u0001\u0011\r1S\u0012\u0005\b)k\u0001A1\u0001K\u001c\u0011\u001d!:\u000e\u0001C\u0002)3Dq!&\u001f\u0001\t\u0007)Z\bC\u0004\u0017,\u0001!\u0019A&\f\t\u000fYU\u0007\u0001b\u0001\u0017X\"9qs\u0010\u0001\u0005\u0004]\u0005\u0005b\u0002M\u001d\u0001\u0011\r\u00014\b\u0005\b1W\u0004A1\u0001Mw\u0011\u001dIj\n\u0001C\u00023?CqAg\u0018\u0001\t\u0007Q\n\u0007C\u0004\u001c\u001a\u0001!\u0019ag\u0007\u0003\u001dQ+\b\u000f\\3J]N$\u0018M\\2fg*\u0011aiR\u0001\nS:\u001cH/\u00198dKNT!\u0001S%\u0002\r-,'O\\3m\u0015\u0005Q\u0015\u0001B2biN\u001c\u0001aE\u0002\u0001\u001bN\u0003\"AT)\u000e\u0003=S\u0011\u0001U\u0001\u0006g\u000e\fG.Y\u0005\u0003%>\u0013a!\u00118z%\u00164\u0007C\u0001+V\u001b\u0005)\u0015B\u0001,F\u0005=!V\u000f\u001d7f\u0013:\u001cH/\u00198dKN\f\u0014A\u0002\u0013j]&$H\u0005F\u0001Z!\tq%,\u0003\u0002\\\u001f\n!QK\\5u\u0003\u0019\u001a\u0017\r^:LKJtW\r\\*uI\u000e{W.\\;uCRLg/Z$s_V\u0004hi\u001c:UkBdW-M\u000b\u0003=\"$\"aX9\u0011\u0007\u0001\f7-D\u0001H\u0013\t\u0011wI\u0001\tD_6lW\u000f^1uSZ,wI]8vaB\u0019a\n\u001a4\n\u0005\u0015|%A\u0002+va2,\u0017\u0007\u0005\u0002hQ2\u0001A!B5\u0003\u0005\u0004Q'AA!1#\tYg\u000e\u0005\u0002OY&\u0011Qn\u0014\u0002\b\u001d>$\b.\u001b8h!\tqu.\u0003\u0002q\u001f\n\u0019\u0011I\\=\t\u000bI\u0014\u00019A:\u0002\u0005\u0005\u0003\u0004c\u00011bM\u0006Y2-\u0019;t\u0017\u0016\u0014h.\u001a7Ti\u0012|%\u000fZ3s\r>\u0014H+\u001e9mKF*\"A\u001e?\u0015\u0005]l\bc\u00011yu&\u0011\u0011p\u0012\u0002\u0006\u001fJ$WM\u001d\t\u0004\u001d\u0012\\\bCA4}\t\u0015I7A1\u0001k\u0011\u0015\u00118\u0001q\u0001\u007f!\r\u0001\u0007p_\u0001)G\u0006$8oS3s]\u0016d7\u000b\u001e3C_VtG-\u001a3TK6LG.\u0019;uS\u000e,gi\u001c:UkBdW-M\u000b\u0005\u0003\u0007\ty\u0001\u0006\u0003\u0002\u0006\u0005E\u0001#\u00021\u0002\b\u0005-\u0011bAA\u0005\u000f\n\u0011\"i\\;oI\u0016$7+Z7jY\u0006$H/[2f!\u0011qE-!\u0004\u0011\u0007\u001d\fy\u0001B\u0003j\t\t\u0007!\u000e\u0003\u0004s\t\u0001\u000f\u00111\u0003\t\u0006A\u0006\u001d\u0011QB\u0001'G\u0006$8oS3s]\u0016d7\u000b\u001e3D_6lW\u000f^1uSZ,wI]8va\u001a{'\u000fV;qY\u0016\u0014TCBA\r\u0003K\tI\u0003\u0006\u0004\u0002\u001c\u00055\u0012\u0011\u0007\t\u0005A\u0006\fi\u0002E\u0004O\u0003?\t\u0019#a\n\n\u0007\u0005\u0005rJ\u0001\u0004UkBdWM\r\t\u0004O\u0006\u0015B!B5\u0006\u0005\u0004Q\u0007cA4\u0002*\u00111\u00111F\u0003C\u0002)\u0014!!Q\u0019\t\rI,\u00019AA\u0018!\u0011\u0001\u0017-a\t\t\u000f\u0005MR\u0001q\u0001\u00026\u0005\u0011\u0011)\r\t\u0005A\u0006\f9#A\u000edCR\u001c8*\u001a:oK2\u001cF\u000fZ(sI\u0016\u0014hi\u001c:UkBdWMM\u000b\u0007\u0003w\t\u0019%a\u0012\u0015\r\u0005u\u0012\u0011JA'!\u0011\u0001\u00070a\u0010\u0011\u000f9\u000by\"!\u0011\u0002FA\u0019q-a\u0011\u0005\u000b%4!\u0019\u00016\u0011\u0007\u001d\f9\u0005\u0002\u0004\u0002,\u0019\u0011\rA\u001b\u0005\u0007e\u001a\u0001\u001d!a\u0013\u0011\t\u0001D\u0018\u0011\t\u0005\b\u0003g1\u00019AA(!\u0011\u0001\u00070!\u0012\u0002Q\r\fGo]&fe:,Gn\u0015;e\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.\u001a\u001a\u0016\r\u0005U\u0013QLA1)\u0019\t9&a\u0019\u0002hA)\u0001-a\u0002\u0002ZA9a*a\b\u0002\\\u0005}\u0003cA4\u0002^\u0011)\u0011n\u0002b\u0001UB\u0019q-!\u0019\u0005\r\u0005-rA1\u0001k\u0011\u0019\u0011x\u0001q\u0001\u0002fA)\u0001-a\u0002\u0002\\!9\u00111G\u0004A\u0004\u0005%\u0004#\u00021\u0002\b\u0005}\u0013AJ2biN\\UM\u001d8fYN#HmQ8n[V$\u0018\r^5wK\u001e\u0013x.\u001e9G_J$V\u000f\u001d7fgUA\u0011qNA>\u0003\u007f\n\u0019\t\u0006\u0005\u0002r\u0005\u001d\u00151RAH!\u0011\u0001\u0017-a\u001d\u0011\u00139\u000b)(!\u001f\u0002~\u0005\u0005\u0015bAA<\u001f\n1A+\u001e9mKN\u00022aZA>\t\u0015I\u0007B1\u0001k!\r9\u0017q\u0010\u0003\u0007\u0003WA!\u0019\u00016\u0011\u0007\u001d\f\u0019\t\u0002\u0004\u0002\u0006\"\u0011\rA\u001b\u0002\u0003\u0003JBaA\u001d\u0005A\u0004\u0005%\u0005\u0003\u00021b\u0003sBq!a\r\t\u0001\b\ti\t\u0005\u0003aC\u0006u\u0004bBAI\u0011\u0001\u000f\u00111S\u0001\u0003\u0003J\u0002B\u0001Y1\u0002\u0002\u0006Y2-\u0019;t\u0017\u0016\u0014h.\u001a7Ti\u0012|%\u000fZ3s\r>\u0014H+\u001e9mKN*\u0002\"!'\u0002\"\u0006\u0015\u0016\u0011\u0016\u000b\t\u00037\u000bY+a,\u00024B!\u0001\r_AO!%q\u0015QOAP\u0003G\u000b9\u000bE\u0002h\u0003C#Q![\u0005C\u0002)\u00042aZAS\t\u0019\tY#\u0003b\u0001UB\u0019q-!+\u0005\r\u0005\u0015\u0015B1\u0001k\u0011\u0019\u0011\u0018\u0002q\u0001\u0002.B!\u0001\r_AP\u0011\u001d\t\u0019$\u0003a\u0002\u0003c\u0003B\u0001\u0019=\u0002$\"9\u0011\u0011S\u0005A\u0004\u0005U\u0006\u0003\u00021y\u0003O\u000b\u0001fY1ug.+'O\\3m'R$'i\\;oI\u0016$7+Z7jY\u0006$H/[2f\r>\u0014H+\u001e9mKN*\u0002\"a/\u0002D\u0006\u001d\u00171\u001a\u000b\t\u0003{\u000bi-!5\u0002VB)\u0001-a\u0002\u0002@BIa*!\u001e\u0002B\u0006\u0015\u0017\u0011\u001a\t\u0004O\u0006\rG!B5\u000b\u0005\u0004Q\u0007cA4\u0002H\u00121\u00111\u0006\u0006C\u0002)\u00042aZAf\t\u0019\t)I\u0003b\u0001U\"1!O\u0003a\u0002\u0003\u001f\u0004R\u0001YA\u0004\u0003\u0003Dq!a\r\u000b\u0001\b\t\u0019\u000eE\u0003a\u0003\u000f\t)\rC\u0004\u0002\u0012*\u0001\u001d!a6\u0011\u000b\u0001\f9!!3\u0002M\r\fGo]&fe:,Gn\u0015;e\u0007>lW.\u001e;bi&4Xm\u0012:pkB4uN\u001d+va2,G'\u0006\u0006\u0002^\u0006%\u0018Q^Ay\u0003k$\"\"a8\u0002z\u0006u(\u0011\u0001B\u0003!\u0011\u0001\u0017-!9\u0011\u00179\u000b\u0019/a:\u0002l\u0006=\u00181_\u0005\u0004\u0003K|%A\u0002+va2,G\u0007E\u0002h\u0003S$Q![\u0006C\u0002)\u00042aZAw\t\u0019\tYc\u0003b\u0001UB\u0019q-!=\u0005\r\u0005\u00155B1\u0001k!\r9\u0017Q\u001f\u0003\u0007\u0003o\\!\u0019\u00016\u0003\u0005\u0005\u001b\u0004B\u0002:\f\u0001\b\tY\u0010\u0005\u0003aC\u0006\u001d\bbBA\u001a\u0017\u0001\u000f\u0011q \t\u0005A\u0006\fY\u000fC\u0004\u0002\u0012.\u0001\u001dAa\u0001\u0011\t\u0001\f\u0017q\u001e\u0005\b\u0005\u000fY\u00019\u0001B\u0005\u0003\t\t5\u0007\u0005\u0003aC\u0006M\u0018aG2biN\\UM\u001d8fYN#Hm\u0014:eKJ4uN\u001d+va2,G'\u0006\u0006\u0003\u0010\t]!1\u0004B\u0010\u0005G!\"B!\u0005\u0003&\t%\"Q\u0006B\u0019!\u0011\u0001\u0007Pa\u0005\u0011\u00179\u000b\u0019O!\u0006\u0003\u001a\tu!\u0011\u0005\t\u0004O\n]A!B5\r\u0005\u0004Q\u0007cA4\u0003\u001c\u00111\u00111\u0006\u0007C\u0002)\u00042a\u001aB\u0010\t\u0019\t)\t\u0004b\u0001UB\u0019qMa\t\u0005\r\u0005]HB1\u0001k\u0011\u0019\u0011H\u0002q\u0001\u0003(A!\u0001\r\u001fB\u000b\u0011\u001d\t\u0019\u0004\u0004a\u0002\u0005W\u0001B\u0001\u0019=\u0003\u001a!9\u0011\u0011\u0013\u0007A\u0004\t=\u0002\u0003\u00021y\u0005;AqAa\u0002\r\u0001\b\u0011\u0019\u0004\u0005\u0003aq\n\u0005\u0012\u0001K2biN\\UM\u001d8fYN#HMQ8v]\u0012,GmU3nS2\fG\u000f^5dK\u001a{'\u000fV;qY\u0016$TC\u0003B\u001d\u0005\u0003\u0012)E!\u0013\u0003NQQ!1\bB(\u0005'\u00129Fa\u0017\u0011\u000b\u0001\f9A!\u0010\u0011\u00179\u000b\u0019Oa\u0010\u0003D\t\u001d#1\n\t\u0004O\n\u0005C!B5\u000e\u0005\u0004Q\u0007cA4\u0003F\u00111\u00111F\u0007C\u0002)\u00042a\u001aB%\t\u0019\t))\u0004b\u0001UB\u0019qM!\u0014\u0005\r\u0005]XB1\u0001k\u0011\u0019\u0011X\u0002q\u0001\u0003RA)\u0001-a\u0002\u0003@!9\u00111G\u0007A\u0004\tU\u0003#\u00021\u0002\b\t\r\u0003bBAI\u001b\u0001\u000f!\u0011\f\t\u0006A\u0006\u001d!q\t\u0005\b\u0005\u000fi\u00019\u0001B/!\u0015\u0001\u0017q\u0001B&\u0003\u0019\u001a\u0017\r^:LKJtW\r\\*uI\u000e{W.\\;uCRLg/Z$s_V\u0004hi\u001c:UkBdW-N\u000b\r\u0005G\u0012yGa\u001d\u0003x\tm$q\u0010\u000b\r\u0005K\u0012\u0019Ia\"\u0003\f\n=%1\u0013\t\u0005A\u0006\u00149\u0007E\u0007O\u0005S\u0012iG!\u001d\u0003v\te$QP\u0005\u0004\u0005Wz%A\u0002+va2,W\u0007E\u0002h\u0005_\"Q!\u001b\bC\u0002)\u00042a\u001aB:\t\u0019\tYC\u0004b\u0001UB\u0019qMa\u001e\u0005\r\u0005\u0015eB1\u0001k!\r9'1\u0010\u0003\u0007\u0003ot!\u0019\u00016\u0011\u0007\u001d\u0014y\b\u0002\u0004\u0003\u0002:\u0011\rA\u001b\u0002\u0003\u0003RBaA\u001d\bA\u0004\t\u0015\u0005\u0003\u00021b\u0005[Bq!a\r\u000f\u0001\b\u0011I\t\u0005\u0003aC\nE\u0004bBAI\u001d\u0001\u000f!Q\u0012\t\u0005A\u0006\u0014)\bC\u0004\u0003\b9\u0001\u001dA!%\u0011\t\u0001\f'\u0011\u0010\u0005\b\u0005+s\u00019\u0001BL\u0003\t\tE\u0007\u0005\u0003aC\nu\u0014aG2biN\\UM\u001d8fYN#Hm\u0014:eKJ4uN\u001d+va2,W'\u0006\u0007\u0003\u001e\n\u0015&\u0011\u0016BW\u0005c\u0013)\f\u0006\u0007\u0003 \n]&1\u0018B`\u0005\u0007\u00149\r\u0005\u0003aq\n\u0005\u0006#\u0004(\u0003j\t\r&q\u0015BV\u0005_\u0013\u0019\fE\u0002h\u0005K#Q![\bC\u0002)\u00042a\u001aBU\t\u0019\tYc\u0004b\u0001UB\u0019qM!,\u0005\r\u0005\u0015uB1\u0001k!\r9'\u0011\u0017\u0003\u0007\u0003o|!\u0019\u00016\u0011\u0007\u001d\u0014)\f\u0002\u0004\u0003\u0002>\u0011\rA\u001b\u0005\u0007e>\u0001\u001dA!/\u0011\t\u0001D(1\u0015\u0005\b\u0003gy\u00019\u0001B_!\u0011\u0001\u0007Pa*\t\u000f\u0005Eu\u0002q\u0001\u0003BB!\u0001\r\u001fBV\u0011\u001d\u00119a\u0004a\u0002\u0005\u000b\u0004B\u0001\u0019=\u00030\"9!QS\bA\u0004\t%\u0007\u0003\u00021y\u0005g\u000b\u0001fY1ug.+'O\\3m'R$'i\\;oI\u0016$7+Z7jY\u0006$H/[2f\r>\u0014H+\u001e9mKV*BBa4\u0003X\nm'q\u001cBr\u0005O$BB!5\u0003j\n5(\u0011\u001fB{\u0005s\u0004R\u0001YA\u0004\u0005'\u0004RB\u0014B5\u0005+\u0014IN!8\u0003b\n\u0015\bcA4\u0003X\u0012)\u0011\u000e\u0005b\u0001UB\u0019qMa7\u0005\r\u0005-\u0002C1\u0001k!\r9'q\u001c\u0003\u0007\u0003\u000b\u0003\"\u0019\u00016\u0011\u0007\u001d\u0014\u0019\u000f\u0002\u0004\u0002xB\u0011\rA\u001b\t\u0004O\n\u001dHA\u0002BA!\t\u0007!\u000e\u0003\u0004s!\u0001\u000f!1\u001e\t\u0006A\u0006\u001d!Q\u001b\u0005\b\u0003g\u0001\u00029\u0001Bx!\u0015\u0001\u0017q\u0001Bm\u0011\u001d\t\t\n\u0005a\u0002\u0005g\u0004R\u0001YA\u0004\u0005;DqAa\u0002\u0011\u0001\b\u00119\u0010E\u0003a\u0003\u000f\u0011\t\u000fC\u0004\u0003\u0016B\u0001\u001dAa?\u0011\u000b\u0001\f9A!:\u0002M\r\fGo]&fe:,Gn\u0015;e\u0007>lW.\u001e;bi&4Xm\u0012:pkB4uN\u001d+va2,g'\u0006\b\u0004\u0002\r51\u0011CB\u000b\u00073\u0019ib!\t\u0015\u001d\r\r1QEB\u0015\u0007[\u0019\td!\u000e\u0004:A!\u0001-YB\u0003!=q5qAB\u0006\u0007\u001f\u0019\u0019ba\u0006\u0004\u001c\r}\u0011bAB\u0005\u001f\n1A+\u001e9mKZ\u00022aZB\u0007\t\u0015I\u0017C1\u0001k!\r97\u0011\u0003\u0003\u0007\u0003W\t\"\u0019\u00016\u0011\u0007\u001d\u001c)\u0002\u0002\u0004\u0002\u0006F\u0011\rA\u001b\t\u0004O\u000eeAABA|#\t\u0007!\u000eE\u0002h\u0007;!aA!!\u0012\u0005\u0004Q\u0007cA4\u0004\"\u0011111E\tC\u0002)\u0014!!Q\u001b\t\rI\f\u00029AB\u0014!\u0011\u0001\u0017ma\u0003\t\u000f\u0005M\u0012\u0003q\u0001\u0004,A!\u0001-YB\b\u0011\u001d\t\t*\u0005a\u0002\u0007_\u0001B\u0001Y1\u0004\u0014!9!qA\tA\u0004\rM\u0002\u0003\u00021b\u0007/AqA!&\u0012\u0001\b\u00199\u0004\u0005\u0003aC\u000em\u0001bBB\u001e#\u0001\u000f1QH\u0001\u0003\u0003V\u0002B\u0001Y1\u0004 \u0005Y2-\u0019;t\u0017\u0016\u0014h.\u001a7Ti\u0012|%\u000fZ3s\r>\u0014H+\u001e9mKZ*bba\u0011\u0004L\r=31KB,\u00077\u001ay\u0006\u0006\b\u0004F\r\u00054QMB5\u0007[\u001a\th!\u001e\u0011\t\u0001D8q\t\t\u0010\u001d\u000e\u001d1\u0011JB'\u0007#\u001a)f!\u0017\u0004^A\u0019qma\u0013\u0005\u000b%\u0014\"\u0019\u00016\u0011\u0007\u001d\u001cy\u0005\u0002\u0004\u0002,I\u0011\rA\u001b\t\u0004O\u000eMCABAC%\t\u0007!\u000eE\u0002h\u0007/\"a!a>\u0013\u0005\u0004Q\u0007cA4\u0004\\\u00111!\u0011\u0011\nC\u0002)\u00042aZB0\t\u0019\u0019\u0019C\u0005b\u0001U\"1!O\u0005a\u0002\u0007G\u0002B\u0001\u0019=\u0004J!9\u00111\u0007\nA\u0004\r\u001d\u0004\u0003\u00021y\u0007\u001bBq!!%\u0013\u0001\b\u0019Y\u0007\u0005\u0003aq\u000eE\u0003b\u0002B\u0004%\u0001\u000f1q\u000e\t\u0005Ab\u001c)\u0006C\u0004\u0003\u0016J\u0001\u001daa\u001d\u0011\t\u0001D8\u0011\f\u0005\b\u0007w\u0011\u00029AB<!\u0011\u0001\u0007p!\u0018\u0002Q\r\fGo]&fe:,Gn\u0015;e\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.\u001a\u001c\u0016\u001d\ru4QQBE\u0007\u001b\u001b\tj!&\u0004\u001aRq1qPBN\u0007?\u001b\u0019ka*\u0004,\u000e=\u0006#\u00021\u0002\b\r\u0005\u0005c\u0004(\u0004\b\r\r5qQBF\u0007\u001f\u001b\u0019ja&\u0011\u0007\u001d\u001c)\tB\u0003j'\t\u0007!\u000eE\u0002h\u0007\u0013#a!a\u000b\u0014\u0005\u0004Q\u0007cA4\u0004\u000e\u00121\u0011QQ\nC\u0002)\u00042aZBI\t\u0019\t9p\u0005b\u0001UB\u0019qm!&\u0005\r\t\u00055C1\u0001k!\r97\u0011\u0014\u0003\u0007\u0007G\u0019\"\u0019\u00016\t\rI\u001c\u00029ABO!\u0015\u0001\u0017qABB\u0011\u001d\t\u0019d\u0005a\u0002\u0007C\u0003R\u0001YA\u0004\u0007\u000fCq!!%\u0014\u0001\b\u0019)\u000bE\u0003a\u0003\u000f\u0019Y\tC\u0004\u0003\bM\u0001\u001da!+\u0011\u000b\u0001\f9aa$\t\u000f\tU5\u0003q\u0001\u0004.B)\u0001-a\u0002\u0004\u0014\"911H\nA\u0004\rE\u0006#\u00021\u0002\b\r]\u0015AJ2biN\\UM\u001d8fYN#HmQ8n[V$\u0018\r^5wK\u001e\u0013x.\u001e9G_J$V\u000f\u001d7foU\u00012qWBb\u0007\u000f\u001cYma4\u0004T\u000e]71\u001c\u000b\u0011\u0007s\u001byna9\u0004h\u000e-8q^Bz\u0007o\u0004B\u0001Y1\u0004<B\tbj!0\u0004B\u000e\u00157\u0011ZBg\u0007#\u001c)n!7\n\u0007\r}vJ\u0001\u0004UkBdWm\u000e\t\u0004O\u000e\rG!B5\u0015\u0005\u0004Q\u0007cA4\u0004H\u00121\u00111\u0006\u000bC\u0002)\u00042aZBf\t\u0019\t)\t\u0006b\u0001UB\u0019qma4\u0005\r\u0005]HC1\u0001k!\r971\u001b\u0003\u0007\u0005\u0003#\"\u0019\u00016\u0011\u0007\u001d\u001c9\u000e\u0002\u0004\u0004$Q\u0011\rA\u001b\t\u0004O\u000emGABBo)\t\u0007!N\u0001\u0002Bm!1!\u000f\u0006a\u0002\u0007C\u0004B\u0001Y1\u0004B\"9\u00111\u0007\u000bA\u0004\r\u0015\b\u0003\u00021b\u0007\u000bDq!!%\u0015\u0001\b\u0019I\u000f\u0005\u0003aC\u000e%\u0007b\u0002B\u0004)\u0001\u000f1Q\u001e\t\u0005A\u0006\u001ci\rC\u0004\u0003\u0016R\u0001\u001da!=\u0011\t\u0001\f7\u0011\u001b\u0005\b\u0007w!\u00029AB{!\u0011\u0001\u0017m!6\t\u000f\reH\u0003q\u0001\u0004|\u0006\u0011\u0011I\u000e\t\u0005A\u0006\u001cI.A\u000edCR\u001c8*\u001a:oK2\u001cF\u000fZ(sI\u0016\u0014hi\u001c:UkBdWmN\u000b\u0011\t\u0003!I\u0001\"\u0004\u0005\u0012\u0011UA\u0011\u0004C\u000f\tC!\u0002\u0003b\u0001\u0005$\u0011\u001dB1\u0006C\u0018\tg!9\u0004b\u000f\u0011\t\u0001DHQ\u0001\t\u0012\u001d\u000euFq\u0001C\u0006\t\u001f!\u0019\u0002b\u0006\u0005\u001c\u0011}\u0001cA4\u0005\n\u0011)\u0011.\u0006b\u0001UB\u0019q\r\"\u0004\u0005\r\u0005-RC1\u0001k!\r9G\u0011\u0003\u0003\u0007\u0003\u000b+\"\u0019\u00016\u0011\u0007\u001d$)\u0002\u0002\u0004\u0002xV\u0011\rA\u001b\t\u0004O\u0012eAA\u0002BA+\t\u0007!\u000eE\u0002h\t;!aaa\t\u0016\u0005\u0004Q\u0007cA4\u0005\"\u001111Q\\\u000bC\u0002)DaA]\u000bA\u0004\u0011\u0015\u0002\u0003\u00021y\t\u000fAq!a\r\u0016\u0001\b!I\u0003\u0005\u0003aq\u0012-\u0001bBAI+\u0001\u000fAQ\u0006\t\u0005Ab$y\u0001C\u0004\u0003\bU\u0001\u001d\u0001\"\r\u0011\t\u0001DH1\u0003\u0005\b\u0005++\u00029\u0001C\u001b!\u0011\u0001\u0007\u0010b\u0006\t\u000f\rmR\u0003q\u0001\u0005:A!\u0001\r\u001fC\u000e\u0011\u001d\u0019I0\u0006a\u0002\t{\u0001B\u0001\u0019=\u0005 \u0005A3-\u0019;t\u0017\u0016\u0014h.\u001a7Ti\u0012\u0014u.\u001e8eK\u0012\u001cV-\\5mCR$\u0018nY3G_J$V\u000f\u001d7foU\u0001B1\tC&\t\u001f\"\u0019\u0006b\u0016\u0005\\\u0011}C1\r\u000b\u0011\t\u000b\")\u0007\"\u001b\u0005n\u0011EDQ\u000fC=\t{\u0002R\u0001YA\u0004\t\u000f\u0002\u0012CTB_\t\u0013\"i\u0005\"\u0015\u0005V\u0011eCQ\fC1!\r9G1\n\u0003\u0006SZ\u0011\rA\u001b\t\u0004O\u0012=CABA\u0016-\t\u0007!\u000eE\u0002h\t'\"a!!\"\u0017\u0005\u0004Q\u0007cA4\u0005X\u00111\u0011q\u001f\fC\u0002)\u00042a\u001aC.\t\u0019\u0011\tI\u0006b\u0001UB\u0019q\rb\u0018\u0005\r\r\rbC1\u0001k!\r9G1\r\u0003\u0007\u0007;4\"\u0019\u00016\t\rI4\u00029\u0001C4!\u0015\u0001\u0017q\u0001C%\u0011\u001d\t\u0019D\u0006a\u0002\tW\u0002R\u0001YA\u0004\t\u001bBq!!%\u0017\u0001\b!y\u0007E\u0003a\u0003\u000f!\t\u0006C\u0004\u0003\bY\u0001\u001d\u0001b\u001d\u0011\u000b\u0001\f9\u0001\"\u0016\t\u000f\tUe\u0003q\u0001\u0005xA)\u0001-a\u0002\u0005Z!911\b\fA\u0004\u0011m\u0004#\u00021\u0002\b\u0011u\u0003bBB}-\u0001\u000fAq\u0010\t\u0006A\u0006\u001dA\u0011M\u0001'G\u0006$8oS3s]\u0016d7\u000b\u001e3D_6lW\u000f^1uSZ,wI]8va\u001a{'\u000fV;qY\u0016DTC\u0005CC\t##)\n\"'\u0005\u001e\u0012\u0005FQ\u0015CU\t[#\"\u0003b\"\u00052\u0012UF\u0011\u0018C_\t\u0003$)\r\"3\u0005NB!\u0001-\u0019CE!MqE1\u0012CH\t'#9\nb'\u0005 \u0012\rFq\u0015CV\u0013\r!ii\u0014\u0002\u0007)V\u0004H.\u001a\u001d\u0011\u0007\u001d$\t\nB\u0003j/\t\u0007!\u000eE\u0002h\t+#a!a\u000b\u0018\u0005\u0004Q\u0007cA4\u0005\u001a\u00121\u0011QQ\fC\u0002)\u00042a\u001aCO\t\u0019\t9p\u0006b\u0001UB\u0019q\r\")\u0005\r\t\u0005uC1\u0001k!\r9GQ\u0015\u0003\u0007\u0007G9\"\u0019\u00016\u0011\u0007\u001d$I\u000b\u0002\u0004\u0004^^\u0011\rA\u001b\t\u0004O\u00125FA\u0002CX/\t\u0007!N\u0001\u0002Bo!1!o\u0006a\u0002\tg\u0003B\u0001Y1\u0005\u0010\"9\u00111G\fA\u0004\u0011]\u0006\u0003\u00021b\t'Cq!!%\u0018\u0001\b!Y\f\u0005\u0003aC\u0012]\u0005b\u0002B\u0004/\u0001\u000fAq\u0018\t\u0005A\u0006$Y\nC\u0004\u0003\u0016^\u0001\u001d\u0001b1\u0011\t\u0001\fGq\u0014\u0005\b\u0007w9\u00029\u0001Cd!\u0011\u0001\u0017\rb)\t\u000f\rex\u0003q\u0001\u0005LB!\u0001-\u0019CT\u0011\u001d!ym\u0006a\u0002\t#\f!!Q\u001c\u0011\t\u0001\fG1V\u0001\u001cG\u0006$8oS3s]\u0016d7\u000b\u001e3Pe\u0012,'OR8s)V\u0004H.\u001a\u001d\u0016%\u0011]Gq\u001cCr\tO$Y\u000fb<\u0005t\u0012]H1 \u000b\u0013\t3$i0\"\u0001\u0006\u0006\u0015%QQBC\t\u000b+)I\u0002\u0005\u0003aq\u0012m\u0007c\u0005(\u0005\f\u0012uG\u0011\u001dCs\tS$i\u000f\"=\u0005v\u0012e\bcA4\u0005`\u0012)\u0011\u000e\u0007b\u0001UB\u0019q\rb9\u0005\r\u0005-\u0002D1\u0001k!\r9Gq\u001d\u0003\u0007\u0003\u000bC\"\u0019\u00016\u0011\u0007\u001d$Y\u000f\u0002\u0004\u0002xb\u0011\rA\u001b\t\u0004O\u0012=HA\u0002BA1\t\u0007!\u000eE\u0002h\tg$aaa\t\u0019\u0005\u0004Q\u0007cA4\u0005x\u001211Q\u001c\rC\u0002)\u00042a\u001aC~\t\u0019!y\u000b\u0007b\u0001U\"1!\u000f\u0007a\u0002\t\u007f\u0004B\u0001\u0019=\u0005^\"9\u00111\u0007\rA\u0004\u0015\r\u0001\u0003\u00021y\tCDq!!%\u0019\u0001\b)9\u0001\u0005\u0003aq\u0012\u0015\bb\u0002B\u00041\u0001\u000fQ1\u0002\t\u0005Ab$I\u000fC\u0004\u0003\u0016b\u0001\u001d!b\u0004\u0011\t\u0001DHQ\u001e\u0005\b\u0007wA\u00029AC\n!\u0011\u0001\u0007\u0010\"=\t\u000f\re\b\u0004q\u0001\u0006\u0018A!\u0001\r\u001fC{\u0011\u001d!y\r\u0007a\u0002\u000b7\u0001B\u0001\u0019=\u0005z\u0006A3-\u0019;t\u0017\u0016\u0014h.\u001a7Ti\u0012\u0014u.\u001e8eK\u0012\u001cV-\\5mCR$\u0018nY3G_J$V\u000f\u001d7fqU\u0011R\u0011EC\u0015\u000b[)\t$\"\u000e\u0006:\u0015uR\u0011IC#)I)\u0019#b\u0012\u0006L\u0015=S1KC,\u000b7*y&b\u0019\u0011\u000b\u0001\f9!\"\n\u0011'9#Y)b\n\u0006,\u0015=R1GC\u001c\u000bw)y$b\u0011\u0011\u0007\u001d,I\u0003B\u0003j3\t\u0007!\u000eE\u0002h\u000b[!a!a\u000b\u001a\u0005\u0004Q\u0007cA4\u00062\u00111\u0011QQ\rC\u0002)\u00042aZC\u001b\t\u0019\t90\u0007b\u0001UB\u0019q-\"\u000f\u0005\r\t\u0005\u0015D1\u0001k!\r9WQ\b\u0003\u0007\u0007GI\"\u0019\u00016\u0011\u0007\u001d,\t\u0005\u0002\u0004\u0004^f\u0011\rA\u001b\t\u0004O\u0016\u0015CA\u0002CX3\t\u0007!\u000e\u0003\u0004s3\u0001\u000fQ\u0011\n\t\u0006A\u0006\u001dQq\u0005\u0005\b\u0003gI\u00029AC'!\u0015\u0001\u0017qAC\u0016\u0011\u001d\t\t*\u0007a\u0002\u000b#\u0002R\u0001YA\u0004\u000b_AqAa\u0002\u001a\u0001\b))\u0006E\u0003a\u0003\u000f)\u0019\u0004C\u0004\u0003\u0016f\u0001\u001d!\"\u0017\u0011\u000b\u0001\f9!b\u000e\t\u000f\rm\u0012\u0004q\u0001\u0006^A)\u0001-a\u0002\u0006<!91\u0011`\rA\u0004\u0015\u0005\u0004#\u00021\u0002\b\u0015}\u0002b\u0002Ch3\u0001\u000fQQ\r\t\u0006A\u0006\u001dQ1I\u0001'G\u0006$8oS3s]\u0016d7\u000b\u001e3D_6lW\u000f^1uSZ,wI]8va\u001a{'\u000fV;qY\u0016LT\u0003FC6\u000bo*Y(b \u0006\u0004\u0016\u001dU1RCH\u000b'+9\n\u0006\u000b\u0006n\u0015mUqTCR\u000bO+Y+b,\u00064\u0016]V1\u0018\t\u0005A\u0006,y\u0007E\u000bO\u000bc*)(\"\u001f\u0006~\u0015\u0005UQQCE\u000b\u001b+\t*\"&\n\u0007\u0015MtJ\u0001\u0004UkBdW-\u000f\t\u0004O\u0016]D!B5\u001b\u0005\u0004Q\u0007cA4\u0006|\u00111\u00111\u0006\u000eC\u0002)\u00042aZC@\t\u0019\t)I\u0007b\u0001UB\u0019q-b!\u0005\r\u0005](D1\u0001k!\r9Wq\u0011\u0003\u0007\u0005\u0003S\"\u0019\u00016\u0011\u0007\u001d,Y\t\u0002\u0004\u0004$i\u0011\rA\u001b\t\u0004O\u0016=EABBo5\t\u0007!\u000eE\u0002h\u000b'#a\u0001b,\u001b\u0005\u0004Q\u0007cA4\u0006\u0018\u00121Q\u0011\u0014\u000eC\u0002)\u0014!!\u0011\u001d\t\rIT\u00029ACO!\u0011\u0001\u0017-\"\u001e\t\u000f\u0005M\"\u0004q\u0001\u0006\"B!\u0001-YC=\u0011\u001d\t\tJ\u0007a\u0002\u000bK\u0003B\u0001Y1\u0006~!9!q\u0001\u000eA\u0004\u0015%\u0006\u0003\u00021b\u000b\u0003CqA!&\u001b\u0001\b)i\u000b\u0005\u0003aC\u0016\u0015\u0005bBB\u001e5\u0001\u000fQ\u0011\u0017\t\u0005A\u0006,I\tC\u0004\u0004zj\u0001\u001d!\".\u0011\t\u0001\fWQ\u0012\u0005\b\t\u001fT\u00029AC]!\u0011\u0001\u0017-\"%\t\u000f\u0015u&\u0004q\u0001\u0006@\u0006\u0011\u0011\t\u000f\t\u0005A\u0006,)*A\u000edCR\u001c8*\u001a:oK2\u001cF\u000fZ(sI\u0016\u0014hi\u001c:UkBdW-O\u000b\u0015\u000b\u000b,i-\"5\u0006V\u0016eWQ\\Cq\u000bK,I/\"<\u0015)\u0015\u001dWq^Cz\u000bo,Y0b@\u0007\u0004\u0019\u001da1\u0002D\b!\u0011\u0001\u00070\"3\u0011+9+\t(b3\u0006P\u0016MWq[Cn\u000b?,\u0019/b:\u0006lB\u0019q-\"4\u0005\u000b%\\\"\u0019\u00016\u0011\u0007\u001d,\t\u000e\u0002\u0004\u0002,m\u0011\rA\u001b\t\u0004O\u0016UGABAC7\t\u0007!\u000eE\u0002h\u000b3$a!a>\u001c\u0005\u0004Q\u0007cA4\u0006^\u00121!\u0011Q\u000eC\u0002)\u00042aZCq\t\u0019\u0019\u0019c\u0007b\u0001UB\u0019q-\":\u0005\r\ru7D1\u0001k!\r9W\u0011\u001e\u0003\u0007\t_[\"\u0019\u00016\u0011\u0007\u001d,i\u000f\u0002\u0004\u0006\u001an\u0011\rA\u001b\u0005\u0007en\u0001\u001d!\"=\u0011\t\u0001DX1\u001a\u0005\b\u0003gY\u00029AC{!\u0011\u0001\u00070b4\t\u000f\u0005E5\u0004q\u0001\u0006zB!\u0001\r_Cj\u0011\u001d\u00119a\u0007a\u0002\u000b{\u0004B\u0001\u0019=\u0006X\"9!QS\u000eA\u0004\u0019\u0005\u0001\u0003\u00021y\u000b7Dqaa\u000f\u001c\u0001\b1)\u0001\u0005\u0003aq\u0016}\u0007bBB}7\u0001\u000fa\u0011\u0002\t\u0005Ab,\u0019\u000fC\u0004\u0005Pn\u0001\u001dA\"\u0004\u0011\t\u0001DXq\u001d\u0005\b\u000b{[\u00029\u0001D\t!\u0011\u0001\u00070b;\u0002Q\r\fGo]&fe:,Gn\u0015;e\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.Z\u001d\u0016)\u0019]aq\u0004D\u0012\rO1YCb\f\u00074\u0019]b1\bD )Q1IB\"\u0011\u0007F\u0019%cQ\nD)\r+2IF\"\u0018\u0007bA)\u0001-a\u0002\u0007\u001cA)b*\"\u001d\u0007\u001e\u0019\u0005bQ\u0005D\u0015\r[1\tD\"\u000e\u0007:\u0019u\u0002cA4\u0007 \u0011)\u0011\u000e\bb\u0001UB\u0019qMb\t\u0005\r\u0005-BD1\u0001k!\r9gq\u0005\u0003\u0007\u0003\u000bc\"\u0019\u00016\u0011\u0007\u001d4Y\u0003\u0002\u0004\u0002xr\u0011\rA\u001b\t\u0004O\u001a=BA\u0002BA9\t\u0007!\u000eE\u0002h\rg!aaa\t\u001d\u0005\u0004Q\u0007cA4\u00078\u001111Q\u001c\u000fC\u0002)\u00042a\u001aD\u001e\t\u0019!y\u000b\bb\u0001UB\u0019qMb\u0010\u0005\r\u0015eED1\u0001k\u0011\u0019\u0011H\u0004q\u0001\u0007DA)\u0001-a\u0002\u0007\u001e!9\u00111\u0007\u000fA\u0004\u0019\u001d\u0003#\u00021\u0002\b\u0019\u0005\u0002bBAI9\u0001\u000fa1\n\t\u0006A\u0006\u001daQ\u0005\u0005\b\u0005\u000fa\u00029\u0001D(!\u0015\u0001\u0017q\u0001D\u0015\u0011\u001d\u0011)\n\ba\u0002\r'\u0002R\u0001YA\u0004\r[Aqaa\u000f\u001d\u0001\b19\u0006E\u0003a\u0003\u000f1\t\u0004C\u0004\u0004zr\u0001\u001dAb\u0017\u0011\u000b\u0001\f9A\"\u000e\t\u000f\u0011=G\u0004q\u0001\u0007`A)\u0001-a\u0002\u0007:!9QQ\u0018\u000fA\u0004\u0019\r\u0004#\u00021\u0002\b\u0019u\u0012aJ2biN\\UM\u001d8fYN#HmQ8n[V$\u0018\r^5wK\u001e\u0013x.\u001e9G_J$V\u000f\u001d7fcA*bC\"\u001b\u0007v\u0019edQ\u0010DA\r\u000b3II\"$\u0007\u0012\u001aUe\u0011\u0014\u000b\u0017\rW2iJ\")\u0007&\u001a%fQ\u0016DY\rk3IL\"0\u0007BB!\u0001-\u0019D7!]qeq\u000eD:\ro2YHb \u0007\u0004\u001a\u001de1\u0012DH\r'39*C\u0002\u0007r=\u0013q\u0001V;qY\u0016\f\u0004\u0007E\u0002h\rk\"Q![\u000fC\u0002)\u00042a\u001aD=\t\u0019\tY#\bb\u0001UB\u0019qM\" \u0005\r\u0005\u0015UD1\u0001k!\r9g\u0011\u0011\u0003\u0007\u0003ol\"\u0019\u00016\u0011\u0007\u001d4)\t\u0002\u0004\u0003\u0002v\u0011\rA\u001b\t\u0004O\u001a%EABB\u0012;\t\u0007!\u000eE\u0002h\r\u001b#aa!8\u001e\u0005\u0004Q\u0007cA4\u0007\u0012\u00121AqV\u000fC\u0002)\u00042a\u001aDK\t\u0019)I*\bb\u0001UB\u0019qM\"'\u0005\r\u0019mUD1\u0001k\u0005\t\t\u0015\b\u0003\u0004s;\u0001\u000faq\u0014\t\u0005A\u00064\u0019\bC\u0004\u00024u\u0001\u001dAb)\u0011\t\u0001\fgq\u000f\u0005\b\u0003#k\u00029\u0001DT!\u0011\u0001\u0017Mb\u001f\t\u000f\t\u001dQ\u0004q\u0001\u0007,B!\u0001-\u0019D@\u0011\u001d\u0011)*\ba\u0002\r_\u0003B\u0001Y1\u0007\u0004\"911H\u000fA\u0004\u0019M\u0006\u0003\u00021b\r\u000fCqa!?\u001e\u0001\b19\f\u0005\u0003aC\u001a-\u0005b\u0002Ch;\u0001\u000fa1\u0018\t\u0005A\u00064y\tC\u0004\u0006>v\u0001\u001dAb0\u0011\t\u0001\fg1\u0013\u0005\b\r\u0007l\u00029\u0001Dc\u0003\t\t\u0015\b\u0005\u0003aC\u001a]\u0015\u0001H2biN\\UM\u001d8fYN#Hm\u0014:eKJ4uN\u001d+va2,\u0017\u0007M\u000b\u0017\r\u00174\u0019Nb6\u0007\\\u001a}g1\u001dDt\rW4yOb=\u0007xR1bQ\u001aD}\r{<\ta\"\u0002\b\n\u001d5q\u0011CD\u000b\u000f39i\u0002\u0005\u0003aq\u001a=\u0007c\u0006(\u0007p\u0019EgQ\u001bDm\r;4\tO\":\u0007j\u001a5h\u0011\u001fD{!\r9g1\u001b\u0003\u0006Sz\u0011\rA\u001b\t\u0004O\u001a]GABA\u0016=\t\u0007!\u000eE\u0002h\r7$a!!\"\u001f\u0005\u0004Q\u0007cA4\u0007`\u00121\u0011q\u001f\u0010C\u0002)\u00042a\u001aDr\t\u0019\u0011\tI\bb\u0001UB\u0019qMb:\u0005\r\r\rbD1\u0001k!\r9g1\u001e\u0003\u0007\u0007;t\"\u0019\u00016\u0011\u0007\u001d4y\u000f\u0002\u0004\u00050z\u0011\rA\u001b\t\u0004O\u001aMHABCM=\t\u0007!\u000eE\u0002h\ro$aAb'\u001f\u0005\u0004Q\u0007B\u0002:\u001f\u0001\b1Y\u0010\u0005\u0003aq\u001aE\u0007bBA\u001a=\u0001\u000faq \t\u0005Ab4)\u000eC\u0004\u0002\u0012z\u0001\u001dab\u0001\u0011\t\u0001Dh\u0011\u001c\u0005\b\u0005\u000fq\u00029AD\u0004!\u0011\u0001\u0007P\"8\t\u000f\tUe\u0004q\u0001\b\fA!\u0001\r\u001fDq\u0011\u001d\u0019YD\ba\u0002\u000f\u001f\u0001B\u0001\u0019=\u0007f\"91\u0011 \u0010A\u0004\u001dM\u0001\u0003\u00021y\rSDq\u0001b4\u001f\u0001\b99\u0002\u0005\u0003aq\u001a5\bbBC_=\u0001\u000fq1\u0004\t\u0005Ab4\t\u0010C\u0004\u0007Dz\u0001\u001dab\b\u0011\t\u0001DhQ_\u0001*G\u0006$8oS3s]\u0016d7\u000b\u001e3C_VtG-\u001a3TK6LG.\u0019;uS\u000e,gi\u001c:UkBdW-\r\u0019\u0016-\u001d\u0015rQFD\u0019\u000fk9Id\"\u0010\bB\u001d\u0015s\u0011JD'\u000f#\"bcb\n\bT\u001d]s1LD0\u000fG:9gb\u001b\bp\u001dMtq\u000f\t\u0006A\u0006\u001dq\u0011\u0006\t\u0018\u001d\u001a=t1FD\u0018\u000fg99db\u000f\b@\u001d\rsqID&\u000f\u001f\u00022aZD\u0017\t\u0015IwD1\u0001k!\r9w\u0011\u0007\u0003\u0007\u0003Wy\"\u0019\u00016\u0011\u0007\u001d<)\u0004\u0002\u0004\u0002\u0006~\u0011\rA\u001b\t\u0004O\u001eeBABA|?\t\u0007!\u000eE\u0002h\u000f{!aA!! \u0005\u0004Q\u0007cA4\bB\u0011111E\u0010C\u0002)\u00042aZD#\t\u0019\u0019in\bb\u0001UB\u0019qm\"\u0013\u0005\r\u0011=vD1\u0001k!\r9wQ\n\u0003\u0007\u000b3{\"\u0019\u00016\u0011\u0007\u001d<\t\u0006\u0002\u0004\u0007\u001c~\u0011\rA\u001b\u0005\u0007e~\u0001\u001da\"\u0016\u0011\u000b\u0001\f9ab\u000b\t\u000f\u0005Mr\u0004q\u0001\bZA)\u0001-a\u0002\b0!9\u0011\u0011S\u0010A\u0004\u001du\u0003#\u00021\u0002\b\u001dM\u0002b\u0002B\u0004?\u0001\u000fq\u0011\r\t\u0006A\u0006\u001dqq\u0007\u0005\b\u0005+{\u00029AD3!\u0015\u0001\u0017qAD\u001e\u0011\u001d\u0019Yd\ba\u0002\u000fS\u0002R\u0001YA\u0004\u000f\u007fAqa!? \u0001\b9i\u0007E\u0003a\u0003\u000f9\u0019\u0005C\u0004\u0005P~\u0001\u001da\"\u001d\u0011\u000b\u0001\f9ab\u0012\t\u000f\u0015uv\u0004q\u0001\bvA)\u0001-a\u0002\bL!9a1Y\u0010A\u0004\u001de\u0004#\u00021\u0002\b\u001d=\u0013aJ2biN\\UM\u001d8fYN#HmQ8n[V$\u0018\r^5wK\u001e\u0013x.\u001e9G_J$V\u000f\u001d7fcE*\u0002db \b\f\u001e=u1SDL\u000f7;yjb)\b(\u001e-vqVDZ)a9\tib.\b<\u001e}v1YDd\u000f\u0017<ymb5\bX\u001emwq\u001c\t\u0005A\u0006<\u0019\tE\rO\u000f\u000b;Ii\"$\b\u0012\u001eUu\u0011TDO\u000fC;)k\"+\b.\u001eE\u0016bADD\u001f\n9A+\u001e9mKF\n\u0004cA4\b\f\u0012)\u0011\u000e\tb\u0001UB\u0019qmb$\u0005\r\u0005-\u0002E1\u0001k!\r9w1\u0013\u0003\u0007\u0003\u000b\u0003#\u0019\u00016\u0011\u0007\u001d<9\n\u0002\u0004\u0002x\u0002\u0012\rA\u001b\t\u0004O\u001emEA\u0002BAA\t\u0007!\u000eE\u0002h\u000f?#aaa\t!\u0005\u0004Q\u0007cA4\b$\u001211Q\u001c\u0011C\u0002)\u00042aZDT\t\u0019!y\u000b\tb\u0001UB\u0019qmb+\u0005\r\u0015e\u0005E1\u0001k!\r9wq\u0016\u0003\u0007\r7\u0003#\u0019\u00016\u0011\u0007\u001d<\u0019\f\u0002\u0004\b6\u0002\u0012\rA\u001b\u0002\u0004\u0003F\u0002\u0004B\u0002:!\u0001\b9I\f\u0005\u0003aC\u001e%\u0005bBA\u001aA\u0001\u000fqQ\u0018\t\u0005A\u0006<i\tC\u0004\u0002\u0012\u0002\u0002\u001da\"1\u0011\t\u0001\fw\u0011\u0013\u0005\b\u0005\u000f\u0001\u00039ADc!\u0011\u0001\u0017m\"&\t\u000f\tU\u0005\u0005q\u0001\bJB!\u0001-YDM\u0011\u001d\u0019Y\u0004\ta\u0002\u000f\u001b\u0004B\u0001Y1\b\u001e\"91\u0011 \u0011A\u0004\u001dE\u0007\u0003\u00021b\u000fCCq\u0001b4!\u0001\b9)\u000e\u0005\u0003aC\u001e\u0015\u0006bBC_A\u0001\u000fq\u0011\u001c\t\u0005A\u0006<I\u000bC\u0004\u0007D\u0002\u0002\u001da\"8\u0011\t\u0001\fwQ\u0016\u0005\b\u000fC\u0004\u00039ADr\u0003\r\t\u0015\u0007\r\t\u0005A\u0006<\t,\u0001\u000fdCR\u001c8*\u001a:oK2\u001cF\u000fZ(sI\u0016\u0014hi\u001c:UkBdW-M\u0019\u00161\u001d%x\u0011_D{\u000fs<i\u0010#\u0001\t\u0006!%\u0001R\u0002E\t\u0011+AI\u0002\u0006\r\bl\"m\u0001r\u0004E\u0012\u0011OAY\u0003c\f\t4!]\u00022\bE \u0011\u0007\u0002B\u0001\u0019=\bnBIbj\"\"\bp\u001eMxq_D~\u000f\u007fD\u0019\u0001c\u0002\t\f!=\u00012\u0003E\f!\r9w\u0011\u001f\u0003\u0006S\u0006\u0012\rA\u001b\t\u0004O\u001eUHABA\u0016C\t\u0007!\u000eE\u0002h\u000fs$a!!\"\"\u0005\u0004Q\u0007cA4\b~\u00121\u0011q_\u0011C\u0002)\u00042a\u001aE\u0001\t\u0019\u0011\t)\tb\u0001UB\u0019q\r#\u0002\u0005\r\r\r\u0012E1\u0001k!\r9\u0007\u0012\u0002\u0003\u0007\u0007;\f#\u0019\u00016\u0011\u0007\u001dDi\u0001\u0002\u0004\u00050\u0006\u0012\rA\u001b\t\u0004O\"EAABCMC\t\u0007!\u000eE\u0002h\u0011+!aAb'\"\u0005\u0004Q\u0007cA4\t\u001a\u00111qQW\u0011C\u0002)DaA]\u0011A\u0004!u\u0001\u0003\u00021y\u000f_Dq!a\r\"\u0001\bA\t\u0003\u0005\u0003aq\u001eM\bbBAIC\u0001\u000f\u0001R\u0005\t\u0005Ab<9\u0010C\u0004\u0003\b\u0005\u0002\u001d\u0001#\u000b\u0011\t\u0001Dx1 \u0005\b\u0005+\u000b\u00039\u0001E\u0017!\u0011\u0001\u0007pb@\t\u000f\rm\u0012\u0005q\u0001\t2A!\u0001\r\u001fE\u0002\u0011\u001d\u0019I0\ta\u0002\u0011k\u0001B\u0001\u0019=\t\b!9AqZ\u0011A\u0004!e\u0002\u0003\u00021y\u0011\u0017Aq!\"0\"\u0001\bAi\u0004\u0005\u0003aq\"=\u0001b\u0002DbC\u0001\u000f\u0001\u0012\t\t\u0005AbD\u0019\u0002C\u0004\bb\u0006\u0002\u001d\u0001#\u0012\u0011\t\u0001D\brC\u0001*G\u0006$8oS3s]\u0016d7\u000b\u001e3C_VtG-\u001a3TK6LG.\u0019;uS\u000e,gi\u001c:UkBdW-M\u0019\u00161!-\u00032\u000bE,\u00117By\u0006c\u0019\th!-\u0004r\u000eE:\u0011oBY\b\u0006\r\tN!u\u0004\u0012\u0011EC\u0011\u0013Ci\t#%\t\u0016\"e\u0005R\u0014EQ\u0011K\u0003R\u0001YA\u0004\u0011\u001f\u0002\u0012DTDC\u0011#B)\u0006#\u0017\t^!\u0005\u0004R\rE5\u0011[B\t\b#\u001e\tzA\u0019q\rc\u0015\u0005\u000b%\u0014#\u0019\u00016\u0011\u0007\u001dD9\u0006\u0002\u0004\u0002,\t\u0012\rA\u001b\t\u0004O\"mCABACE\t\u0007!\u000eE\u0002h\u0011?\"a!a>#\u0005\u0004Q\u0007cA4\td\u00111!\u0011\u0011\u0012C\u0002)\u00042a\u001aE4\t\u0019\u0019\u0019C\tb\u0001UB\u0019q\rc\u001b\u0005\r\ru'E1\u0001k!\r9\u0007r\u000e\u0003\u0007\t_\u0013#\u0019\u00016\u0011\u0007\u001dD\u0019\b\u0002\u0004\u0006\u001a\n\u0012\rA\u001b\t\u0004O\"]DA\u0002DNE\t\u0007!\u000eE\u0002h\u0011w\"aa\".#\u0005\u0004Q\u0007B\u0002:#\u0001\bAy\bE\u0003a\u0003\u000fA\t\u0006C\u0004\u00024\t\u0002\u001d\u0001c!\u0011\u000b\u0001\f9\u0001#\u0016\t\u000f\u0005E%\u0005q\u0001\t\bB)\u0001-a\u0002\tZ!9!q\u0001\u0012A\u0004!-\u0005#\u00021\u0002\b!u\u0003b\u0002BKE\u0001\u000f\u0001r\u0012\t\u0006A\u0006\u001d\u0001\u0012\r\u0005\b\u0007w\u0011\u00039\u0001EJ!\u0015\u0001\u0017q\u0001E3\u0011\u001d\u0019IP\ta\u0002\u0011/\u0003R\u0001YA\u0004\u0011SBq\u0001b4#\u0001\bAY\nE\u0003a\u0003\u000fAi\u0007C\u0004\u0006>\n\u0002\u001d\u0001c(\u0011\u000b\u0001\f9\u0001#\u001d\t\u000f\u0019\r'\u0005q\u0001\t$B)\u0001-a\u0002\tv!9q\u0011\u001d\u0012A\u0004!\u001d\u0006#\u00021\u0002\b!e\u0014aJ2biN\\UM\u001d8fYN#HmQ8n[V$\u0018\r^5wK\u001e\u0013x.\u001e9G_J$V\u000f\u001d7fcI*\"\u0004#,\t:\"u\u0006\u0012\u0019Ec\u0011\u0013Di\r#5\tV\"e\u0007R\u001cEq\u0011K$\"\u0004c,\tj\"5\b\u0012\u001fE{\u0011sDi0#\u0001\n\u0006%%\u0011RBE\t\u0013+\u0001B\u0001Y1\t2BYb\nc-\t8\"m\u0006r\u0018Eb\u0011\u000fDY\rc4\tT\"]\u00072\u001cEp\u0011GL1\u0001#.P\u0005\u001d!V\u000f\u001d7fcI\u00022a\u001aE]\t\u0015I7E1\u0001k!\r9\u0007R\u0018\u0003\u0007\u0003W\u0019#\u0019\u00016\u0011\u0007\u001dD\t\r\u0002\u0004\u0002\u0006\u000e\u0012\rA\u001b\t\u0004O\"\u0015GABA|G\t\u0007!\u000eE\u0002h\u0011\u0013$aA!!$\u0005\u0004Q\u0007cA4\tN\u0012111E\u0012C\u0002)\u00042a\u001aEi\t\u0019\u0019in\tb\u0001UB\u0019q\r#6\u0005\r\u0011=6E1\u0001k!\r9\u0007\u0012\u001c\u0003\u0007\u000b3\u001b#\u0019\u00016\u0011\u0007\u001dDi\u000e\u0002\u0004\u0007\u001c\u000e\u0012\rA\u001b\t\u0004O\"\u0005HABD[G\t\u0007!\u000eE\u0002h\u0011K$a\u0001c:$\u0005\u0004Q'aA!2c!1!o\ta\u0002\u0011W\u0004B\u0001Y1\t8\"9\u00111G\u0012A\u0004!=\b\u0003\u00021b\u0011wCq!!%$\u0001\bA\u0019\u0010\u0005\u0003aC\"}\u0006b\u0002B\u0004G\u0001\u000f\u0001r\u001f\t\u0005A\u0006D\u0019\rC\u0004\u0003\u0016\u000e\u0002\u001d\u0001c?\u0011\t\u0001\f\u0007r\u0019\u0005\b\u0007w\u0019\u00039\u0001E\u0000!\u0011\u0001\u0017\rc3\t\u000f\re8\u0005q\u0001\n\u0004A!\u0001-\u0019Eh\u0011\u001d!ym\ta\u0002\u0013\u000f\u0001B\u0001Y1\tT\"9QQX\u0012A\u0004%-\u0001\u0003\u00021b\u0011/DqAb1$\u0001\bIy\u0001\u0005\u0003aC\"m\u0007bBDqG\u0001\u000f\u00112\u0003\t\u0005A\u0006Dy\u000eC\u0004\n\u0018\r\u0002\u001d!#\u0007\u0002\u0007\u0005\u000b\u0014\u0007\u0005\u0003aC\"\r\u0018\u0001H2biN\\UM\u001d8fYN#Hm\u0014:eKJ4uN\u001d+va2,\u0017GM\u000b\u001b\u0013?I9#c\u000b\n0%M\u0012rGE\u001e\u0013\u007fI\u0019%c\u0012\nL%=\u00132\u000b\u000b\u001b\u0013CI)&#\u0017\n^%\u0005\u0014RME5\u0013[J\t(#\u001e\nz%u\u0014\u0012\u0011\t\u0005AbL\u0019\u0003E\u000eO\u0011gK)##\u000b\n.%E\u0012RGE\u001d\u0013{I\t%#\u0012\nJ%5\u0013\u0012\u000b\t\u0004O&\u001dB!B5%\u0005\u0004Q\u0007cA4\n,\u00111\u00111\u0006\u0013C\u0002)\u00042aZE\u0018\t\u0019\t)\t\nb\u0001UB\u0019q-c\r\u0005\r\u0005]HE1\u0001k!\r9\u0017r\u0007\u0003\u0007\u0005\u0003##\u0019\u00016\u0011\u0007\u001dLY\u0004\u0002\u0004\u0004$\u0011\u0012\rA\u001b\t\u0004O&}BABBoI\t\u0007!\u000eE\u0002h\u0013\u0007\"a\u0001b,%\u0005\u0004Q\u0007cA4\nH\u00111Q\u0011\u0014\u0013C\u0002)\u00042aZE&\t\u00191Y\n\nb\u0001UB\u0019q-c\u0014\u0005\r\u001dUFE1\u0001k!\r9\u00172\u000b\u0003\u0007\u0011O$#\u0019\u00016\t\rI$\u00039AE,!\u0011\u0001\u00070#\n\t\u000f\u0005MB\u0005q\u0001\n\\A!\u0001\r_E\u0015\u0011\u001d\t\t\n\na\u0002\u0013?\u0002B\u0001\u0019=\n.!9!q\u0001\u0013A\u0004%\r\u0004\u0003\u00021y\u0013cAqA!&%\u0001\bI9\u0007\u0005\u0003aq&U\u0002bBB\u001eI\u0001\u000f\u00112\u000e\t\u0005AbLI\u0004C\u0004\u0004z\u0012\u0002\u001d!c\u001c\u0011\t\u0001D\u0018R\b\u0005\b\t\u001f$\u00039AE:!\u0011\u0001\u00070#\u0011\t\u000f\u0015uF\u0005q\u0001\nxA!\u0001\r_E#\u0011\u001d1\u0019\r\na\u0002\u0013w\u0002B\u0001\u0019=\nJ!9q\u0011\u001d\u0013A\u0004%}\u0004\u0003\u00021y\u0013\u001bBq!c\u0006%\u0001\bI\u0019\t\u0005\u0003aq&E\u0013!K2biN\\UM\u001d8fYN#HMQ8v]\u0012,GmU3nS2\fG\u000f^5dK\u001a{'\u000fV;qY\u0016\f$'\u0006\u000e\n\n&E\u0015RSEM\u0013;K\t+#*\n*&5\u0016\u0012WE[\u0013sKi\f\u0006\u000e\n\f&}\u00162YEd\u0013\u0017Ly-c5\nX&m\u0017r\\Er\u0013OLY\u000fE\u0003a\u0003\u000fIi\tE\u000eO\u0011gKy)c%\n\u0018&m\u0015rTER\u0013OKY+c,\n4&]\u00162\u0018\t\u0004O&EE!B5&\u0005\u0004Q\u0007cA4\n\u0016\u00121\u00111F\u0013C\u0002)\u00042aZEM\t\u0019\t))\nb\u0001UB\u0019q-#(\u0005\r\u0005]XE1\u0001k!\r9\u0017\u0012\u0015\u0003\u0007\u0005\u0003+#\u0019\u00016\u0011\u0007\u001dL)\u000b\u0002\u0004\u0004$\u0015\u0012\rA\u001b\t\u0004O&%FABBoK\t\u0007!\u000eE\u0002h\u0013[#a\u0001b,&\u0005\u0004Q\u0007cA4\n2\u00121Q\u0011T\u0013C\u0002)\u00042aZE[\t\u00191Y*\nb\u0001UB\u0019q-#/\u0005\r\u001dUVE1\u0001k!\r9\u0017R\u0018\u0003\u0007\u0011O,#\u0019\u00016\t\rI,\u00039AEa!\u0015\u0001\u0017qAEH\u0011\u001d\t\u0019$\na\u0002\u0013\u000b\u0004R\u0001YA\u0004\u0013'Cq!!%&\u0001\bII\rE\u0003a\u0003\u000fI9\nC\u0004\u0003\b\u0015\u0002\u001d!#4\u0011\u000b\u0001\f9!c'\t\u000f\tUU\u0005q\u0001\nRB)\u0001-a\u0002\n \"911H\u0013A\u0004%U\u0007#\u00021\u0002\b%\r\u0006bBB}K\u0001\u000f\u0011\u0012\u001c\t\u0006A\u0006\u001d\u0011r\u0015\u0005\b\t\u001f,\u00039AEo!\u0015\u0001\u0017qAEV\u0011\u001d)i,\na\u0002\u0013C\u0004R\u0001YA\u0004\u0013_CqAb1&\u0001\bI)\u000fE\u0003a\u0003\u000fI\u0019\fC\u0004\bb\u0016\u0002\u001d!#;\u0011\u000b\u0001\f9!c.\t\u000f%]Q\u0005q\u0001\nnB)\u0001-a\u0002\n<\u000693-\u0019;t\u0017\u0016\u0014h.\u001a7Ti\u0012\u001cu.\\7vi\u0006$\u0018N^3He>,\bOR8s)V\u0004H.Z\u00194+qI\u00190c@\u000b\u0004)\u001d!2\u0002F\b\u0015'Q9Bc\u0007\u000b )\r\"r\u0005F\u0016\u0015_!B$#>\u000b4)]\"2\bF \u0015\u0007R9Ec\u0013\u000bP)M#r\u000bF.\u0015?R\u0019\u0007\u0005\u0003aC&]\b#\b(\nz&u(\u0012\u0001F\u0003\u0015\u0013QiA#\u0005\u000b\u0016)e!R\u0004F\u0011\u0015KQIC#\f\n\u0007%mxJA\u0004UkBdW-M\u001a\u0011\u0007\u001dLy\u0010B\u0003jM\t\u0007!\u000eE\u0002h\u0015\u0007!a!a\u000b'\u0005\u0004Q\u0007cA4\u000b\b\u00111\u0011Q\u0011\u0014C\u0002)\u00042a\u001aF\u0006\t\u0019\t9P\nb\u0001UB\u0019qMc\u0004\u0005\r\t\u0005eE1\u0001k!\r9'2\u0003\u0003\u0007\u0007G1#\u0019\u00016\u0011\u0007\u001dT9\u0002\u0002\u0004\u0004^\u001a\u0012\rA\u001b\t\u0004O*mAA\u0002CXM\t\u0007!\u000eE\u0002h\u0015?!a!\"''\u0005\u0004Q\u0007cA4\u000b$\u00111a1\u0014\u0014C\u0002)\u00042a\u001aF\u0014\t\u00199)L\nb\u0001UB\u0019qMc\u000b\u0005\r!\u001dhE1\u0001k!\r9'r\u0006\u0003\u0007\u0015c1#\u0019\u00016\u0003\u0007\u0005\u000b$\u0007\u0003\u0004sM\u0001\u000f!R\u0007\t\u0005A\u0006Li\u0010C\u0004\u00024\u0019\u0002\u001dA#\u000f\u0011\t\u0001\f'\u0012\u0001\u0005\b\u0003#3\u00039\u0001F\u001f!\u0011\u0001\u0017M#\u0002\t\u000f\t\u001da\u0005q\u0001\u000bBA!\u0001-\u0019F\u0005\u0011\u001d\u0011)J\na\u0002\u0015\u000b\u0002B\u0001Y1\u000b\u000e!911\b\u0014A\u0004)%\u0003\u0003\u00021b\u0015#Aqa!?'\u0001\bQi\u0005\u0005\u0003aC*U\u0001b\u0002ChM\u0001\u000f!\u0012\u000b\t\u0005A\u0006TI\u0002C\u0004\u0006>\u001a\u0002\u001dA#\u0016\u0011\t\u0001\f'R\u0004\u0005\b\r\u00074\u00039\u0001F-!\u0011\u0001\u0017M#\t\t\u000f\u001d\u0005h\u0005q\u0001\u000b^A!\u0001-\u0019F\u0013\u0011\u001dI9B\na\u0002\u0015C\u0002B\u0001Y1\u000b*!9!R\r\u0014A\u0004)\u001d\u0014aA!2eA!\u0001-\u0019F\u0017\u0003q\u0019\u0017\r^:LKJtW\r\\*uI>\u0013H-\u001a:G_J$V\u000f\u001d7fcM*BD#\u001c\u000bv)e$R\u0010FA\u0015\u000bSII#$\u000b\u0012*U%\u0012\u0014FO\u0015CS)\u000b\u0006\u000f\u000bp)\u001d&2\u0016FX\u0015gS9Lc/\u000b@*\r'r\u0019Ff\u0015\u001fT\u0019Nc6\u0011\t\u0001D(\u0012\u000f\t\u001e\u001d&e(2\u000fF<\u0015wRyHc!\u000b\b*-%r\u0012FJ\u0015/SYJc(\u000b$B\u0019qM#\u001e\u0005\u000b%<#\u0019\u00016\u0011\u0007\u001dTI\b\u0002\u0004\u0002,\u001d\u0012\rA\u001b\t\u0004O*uDABACO\t\u0007!\u000eE\u0002h\u0015\u0003#a!a>(\u0005\u0004Q\u0007cA4\u000b\u0006\u00121!\u0011Q\u0014C\u0002)\u00042a\u001aFE\t\u0019\u0019\u0019c\nb\u0001UB\u0019qM#$\u0005\r\ruwE1\u0001k!\r9'\u0012\u0013\u0003\u0007\t_;#\u0019\u00016\u0011\u0007\u001dT)\n\u0002\u0004\u0006\u001a\u001e\u0012\rA\u001b\t\u0004O*eEA\u0002DNO\t\u0007!\u000eE\u0002h\u0015;#aa\".(\u0005\u0004Q\u0007cA4\u000b\"\u00121\u0001r]\u0014C\u0002)\u00042a\u001aFS\t\u0019Q\td\nb\u0001U\"1!o\na\u0002\u0015S\u0003B\u0001\u0019=\u000bt!9\u00111G\u0014A\u0004)5\u0006\u0003\u00021y\u0015oBq!!%(\u0001\bQ\t\f\u0005\u0003aq*m\u0004b\u0002B\u0004O\u0001\u000f!R\u0017\t\u0005AbTy\bC\u0004\u0003\u0016\u001e\u0002\u001dA#/\u0011\t\u0001D(2\u0011\u0005\b\u0007w9\u00039\u0001F_!\u0011\u0001\u0007Pc\"\t\u000f\rex\u0005q\u0001\u000bBB!\u0001\r\u001fFF\u0011\u001d!ym\na\u0002\u0015\u000b\u0004B\u0001\u0019=\u000b\u0010\"9QQX\u0014A\u0004)%\u0007\u0003\u00021y\u0015'CqAb1(\u0001\bQi\r\u0005\u0003aq*]\u0005bBDqO\u0001\u000f!\u0012\u001b\t\u0005AbTY\nC\u0004\n\u0018\u001d\u0002\u001dA#6\u0011\t\u0001D(r\u0014\u0005\b\u0015K:\u00039\u0001Fm!\u0011\u0001\u0007Pc)\u0002S\r\fGo]&fe:,Gn\u0015;e\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.Z\u00194+qQyNc:\u000bl*=(2\u001fF|\u0015wTypc\u0001\f\b--1rBF\n\u0017/!BD#9\f\u001a-u1\u0012EF\u0013\u0017SYic#\r\f6-e2RHF!\u0017\u000bZI\u0005E\u0003a\u0003\u000fQ\u0019\u000fE\u000fO\u0013sT)O#;\u000bn*E(R\u001fF}\u0015{\\\ta#\u0002\f\n-51\u0012CF\u000b!\r9'r\u001d\u0003\u0006S\"\u0012\rA\u001b\t\u0004O*-HABA\u0016Q\t\u0007!\u000eE\u0002h\u0015_$a!!\")\u0005\u0004Q\u0007cA4\u000bt\u00121\u0011q\u001f\u0015C\u0002)\u00042a\u001aF|\t\u0019\u0011\t\t\u000bb\u0001UB\u0019qMc?\u0005\r\r\r\u0002F1\u0001k!\r9'r \u0003\u0007\u0007;D#\u0019\u00016\u0011\u0007\u001d\\\u0019\u0001\u0002\u0004\u00050\"\u0012\rA\u001b\t\u0004O.\u001dAABCMQ\t\u0007!\u000eE\u0002h\u0017\u0017!aAb')\u0005\u0004Q\u0007cA4\f\u0010\u00111qQ\u0017\u0015C\u0002)\u00042aZF\n\t\u0019A9\u000f\u000bb\u0001UB\u0019qmc\u0006\u0005\r)E\u0002F1\u0001k\u0011\u0019\u0011\b\u0006q\u0001\f\u001cA)\u0001-a\u0002\u000bf\"9\u00111\u0007\u0015A\u0004-}\u0001#\u00021\u0002\b)%\bbBAIQ\u0001\u000f12\u0005\t\u0006A\u0006\u001d!R\u001e\u0005\b\u0005\u000fA\u00039AF\u0014!\u0015\u0001\u0017q\u0001Fy\u0011\u001d\u0011)\n\u000ba\u0002\u0017W\u0001R\u0001YA\u0004\u0015kDqaa\u000f)\u0001\bYy\u0003E\u0003a\u0003\u000fQI\u0010C\u0004\u0004z\"\u0002\u001dac\r\u0011\u000b\u0001\f9A#@\t\u000f\u0011=\u0007\u0006q\u0001\f8A)\u0001-a\u0002\f\u0002!9QQ\u0018\u0015A\u0004-m\u0002#\u00021\u0002\b-\u0015\u0001b\u0002DbQ\u0001\u000f1r\b\t\u0006A\u0006\u001d1\u0012\u0002\u0005\b\u000fCD\u00039AF\"!\u0015\u0001\u0017qAF\u0007\u0011\u001dI9\u0002\u000ba\u0002\u0017\u000f\u0002R\u0001YA\u0004\u0017#AqA#\u001a)\u0001\bYY\u0005E\u0003a\u0003\u000fY)\"A\u0014dCR\u001c8*\u001a:oK2\u001cF\u000fZ\"p[6,H/\u0019;jm\u0016<%o\\;q\r>\u0014H+\u001e9mKF\"TCHF)\u0017;Z\tg#\u001a\fj-54\u0012OF;\u0017sZih#!\f\u0006.%5RRFI)yY\u0019f#&\f\u001a.u5\u0012UFS\u0017S[ik#-\f6.e6RXFa\u0017\u000b\\I\r\u0005\u0003aC.U\u0003c\b(\fX-m3rLF2\u0017OZYgc\u001c\ft-]42PF@\u0017\u0007[9ic#\f\u0010&\u00191\u0012L(\u0003\u000fQ+\b\u000f\\32iA\u0019qm#\u0018\u0005\u000b%L#\u0019\u00016\u0011\u0007\u001d\\\t\u0007\u0002\u0004\u0002,%\u0012\rA\u001b\t\u0004O.\u0015DABACS\t\u0007!\u000eE\u0002h\u0017S\"a!a>*\u0005\u0004Q\u0007cA4\fn\u00111!\u0011Q\u0015C\u0002)\u00042aZF9\t\u0019\u0019\u0019#\u000bb\u0001UB\u0019qm#\u001e\u0005\r\ru\u0017F1\u0001k!\r97\u0012\u0010\u0003\u0007\t_K#\u0019\u00016\u0011\u0007\u001d\\i\b\u0002\u0004\u0006\u001a&\u0012\rA\u001b\t\u0004O.\u0005EA\u0002DNS\t\u0007!\u000eE\u0002h\u0017\u000b#aa\".*\u0005\u0004Q\u0007cA4\f\n\u00121\u0001r]\u0015C\u0002)\u00042aZFG\t\u0019Q\t$\u000bb\u0001UB\u0019qm#%\u0005\r-M\u0015F1\u0001k\u0005\r\t\u0015g\r\u0005\u0007e&\u0002\u001dac&\u0011\t\u0001\f72\f\u0005\b\u0003gI\u00039AFN!\u0011\u0001\u0017mc\u0018\t\u000f\u0005E\u0015\u0006q\u0001\f B!\u0001-YF2\u0011\u001d\u00119!\u000ba\u0002\u0017G\u0003B\u0001Y1\fh!9!QS\u0015A\u0004-\u001d\u0006\u0003\u00021b\u0017WBqaa\u000f*\u0001\bYY\u000b\u0005\u0003aC.=\u0004bBB}S\u0001\u000f1r\u0016\t\u0005A\u0006\\\u0019\bC\u0004\u0005P&\u0002\u001dac-\u0011\t\u0001\f7r\u000f\u0005\b\u000b{K\u00039AF\\!\u0011\u0001\u0017mc\u001f\t\u000f\u0019\r\u0017\u0006q\u0001\f<B!\u0001-YF@\u0011\u001d9\t/\u000ba\u0002\u0017\u007f\u0003B\u0001Y1\f\u0004\"9\u0011rC\u0015A\u0004-\r\u0007\u0003\u00021b\u0017\u000fCqA#\u001a*\u0001\bY9\r\u0005\u0003aC.-\u0005bBFfS\u0001\u000f1RZ\u0001\u0004\u0003F\u001a\u0004\u0003\u00021b\u0017\u001f\u000bAdY1ug.+'O\\3m'R$wJ\u001d3fe\u001a{'\u000fV;qY\u0016\fD'\u0006\u0010\fT.m7r\\Fr\u0017O\\Yoc<\ft.]82`F\u0000\u0019\u0007a9\u0001d\u0003\r\u0010Qq2R\u001bG\t\u0019+aI\u0002$\b\r\"1\u0015B\u0012\u0006G\u0017\u0019ca)\u0004$\u000f\r>1\u0005CR\t\t\u0005Ab\\9\u000eE\u0010O\u0017/ZIn#8\fb.\u00158\u0012^Fw\u0017c\\)p#?\f~2\u0005AR\u0001G\u0005\u0019\u001b\u00012aZFn\t\u0015I'F1\u0001k!\r97r\u001c\u0003\u0007\u0003WQ#\u0019\u00016\u0011\u0007\u001d\\\u0019\u000f\u0002\u0004\u0002\u0006*\u0012\rA\u001b\t\u0004O.\u001dHABA|U\t\u0007!\u000eE\u0002h\u0017W$aA!!+\u0005\u0004Q\u0007cA4\fp\u0012111\u0005\u0016C\u0002)\u00042aZFz\t\u0019\u0019iN\u000bb\u0001UB\u0019qmc>\u0005\r\u0011=&F1\u0001k!\r972 \u0003\u0007\u000b3S#\u0019\u00016\u0011\u0007\u001d\\y\u0010\u0002\u0004\u0007\u001c*\u0012\rA\u001b\t\u0004O2\rAABD[U\t\u0007!\u000eE\u0002h\u0019\u000f!a\u0001c:+\u0005\u0004Q\u0007cA4\r\f\u00111!\u0012\u0007\u0016C\u0002)\u00042a\u001aG\b\t\u0019Y\u0019J\u000bb\u0001U\"1!O\u000ba\u0002\u0019'\u0001B\u0001\u0019=\fZ\"9\u00111\u0007\u0016A\u00041]\u0001\u0003\u00021y\u0017;Dq!!%+\u0001\baY\u0002\u0005\u0003aq.\u0005\bb\u0002B\u0004U\u0001\u000fAr\u0004\t\u0005Ab\\)\u000fC\u0004\u0003\u0016*\u0002\u001d\u0001d\t\u0011\t\u0001D8\u0012\u001e\u0005\b\u0007wQ\u00039\u0001G\u0014!\u0011\u0001\u0007p#<\t\u000f\re(\u0006q\u0001\r,A!\u0001\r_Fy\u0011\u001d!yM\u000ba\u0002\u0019_\u0001B\u0001\u0019=\fv\"9QQ\u0018\u0016A\u00041M\u0002\u0003\u00021y\u0017sDqAb1+\u0001\ba9\u0004\u0005\u0003aq.u\bbBDqU\u0001\u000fA2\b\t\u0005Abd\t\u0001C\u0004\n\u0018)\u0002\u001d\u0001d\u0010\u0011\t\u0001DHR\u0001\u0005\b\u0015KR\u00039\u0001G\"!\u0011\u0001\u0007\u0010$\u0003\t\u000f--'\u0006q\u0001\rHA!\u0001\r\u001fG\u0007\u0003%\u001a\u0017\r^:LKJtW\r\\*uI\n{WO\u001c3fIN+W.\u001b7biRL7-\u001a$peR+\b\u000f\\32iUqBR\nG+\u00193bi\u0006$\u0019\rf1%DR\u000eG9\u0019kbI\b$ \r\u00022\u0015E\u0012\u0012\u000b\u001f\u0019\u001fbY\td$\r\u00142]E2\u0014GP\u0019Gc9\u000bd+\r02MFr\u0017G^\u0019\u007f\u0003R\u0001YA\u0004\u0019#\u0002rDTF,\u0019'b9\u0006d\u0017\r`1\rDr\rG6\u0019_b\u0019\bd\u001e\r|1}D2\u0011GD!\r9GR\u000b\u0003\u0006S.\u0012\rA\u001b\t\u0004O2eCABA\u0016W\t\u0007!\u000eE\u0002h\u0019;\"a!!\",\u0005\u0004Q\u0007cA4\rb\u00111\u0011q_\u0016C\u0002)\u00042a\u001aG3\t\u0019\u0011\ti\u000bb\u0001UB\u0019q\r$\u001b\u0005\r\r\r2F1\u0001k!\r9GR\u000e\u0003\u0007\u0007;\\#\u0019\u00016\u0011\u0007\u001dd\t\b\u0002\u0004\u00050.\u0012\rA\u001b\t\u0004O2UDABCMW\t\u0007!\u000eE\u0002h\u0019s\"aAb',\u0005\u0004Q\u0007cA4\r~\u00111qQW\u0016C\u0002)\u00042a\u001aGA\t\u0019A9o\u000bb\u0001UB\u0019q\r$\"\u0005\r)E2F1\u0001k!\r9G\u0012\u0012\u0003\u0007\u0017'[#\u0019\u00016\t\rI\\\u00039\u0001GG!\u0015\u0001\u0017q\u0001G*\u0011\u001d\t\u0019d\u000ba\u0002\u0019#\u0003R\u0001YA\u0004\u0019/Bq!!%,\u0001\ba)\nE\u0003a\u0003\u000faY\u0006C\u0004\u0003\b-\u0002\u001d\u0001$'\u0011\u000b\u0001\f9\u0001d\u0018\t\u000f\tU5\u0006q\u0001\r\u001eB)\u0001-a\u0002\rd!911H\u0016A\u00041\u0005\u0006#\u00021\u0002\b1\u001d\u0004bBB}W\u0001\u000fAR\u0015\t\u0006A\u0006\u001dA2\u000e\u0005\b\t\u001f\\\u00039\u0001GU!\u0015\u0001\u0017q\u0001G8\u0011\u001d)il\u000ba\u0002\u0019[\u0003R\u0001YA\u0004\u0019gBqAb1,\u0001\ba\t\fE\u0003a\u0003\u000fa9\bC\u0004\bb.\u0002\u001d\u0001$.\u0011\u000b\u0001\f9\u0001d\u001f\t\u000f%]1\u0006q\u0001\r:B)\u0001-a\u0002\r\u0000!9!RM\u0016A\u00041u\u0006#\u00021\u0002\b1\r\u0005bBFfW\u0001\u000fA\u0012\u0019\t\u0006A\u0006\u001dArQ\u0001(G\u0006$8oS3s]\u0016d7\u000b\u001e3D_6lW\u000f^1uSZ,wI]8va\u001a{'\u000fV;qY\u0016\fT'\u0006\u0011\rH2MGr\u001bGn\u0019?d\u0019\u000fd:\rl2=H2\u001fG|\u0019wdy0d\u0001\u000e\b5-A\u0003\tGe\u001b\u001fi\u0019\"d\u0006\u000e\u001c5}Q2EG\u0014\u001bWiy#d\r\u000e85mRrHG\"\u001b\u000f\u0002B\u0001Y1\rLB\tc\n$4\rR2UG\u0012\u001cGo\u0019Cd)\u000f$;\rn2EHR\u001fG}\u0019{l\t!$\u0002\u000e\n%\u0019ArZ(\u0003\u000fQ+\b\u000f\\32kA\u0019q\rd5\u0005\u000b%d#\u0019\u00016\u0011\u0007\u001dd9\u000e\u0002\u0004\u0002,1\u0012\rA\u001b\t\u0004O2mGABACY\t\u0007!\u000eE\u0002h\u0019?$a!a>-\u0005\u0004Q\u0007cA4\rd\u00121!\u0011\u0011\u0017C\u0002)\u00042a\u001aGt\t\u0019\u0019\u0019\u0003\fb\u0001UB\u0019q\rd;\u0005\r\ruGF1\u0001k!\r9Gr\u001e\u0003\u0007\t_c#\u0019\u00016\u0011\u0007\u001dd\u0019\u0010\u0002\u0004\u0006\u001a2\u0012\rA\u001b\t\u0004O2]HA\u0002DNY\t\u0007!\u000eE\u0002h\u0019w$aa\".-\u0005\u0004Q\u0007cA4\r\u0000\u00121\u0001r\u001d\u0017C\u0002)\u00042aZG\u0002\t\u0019Q\t\u0004\fb\u0001UB\u0019q-d\u0002\u0005\r-MEF1\u0001k!\r9W2\u0002\u0003\u0007\u001b\u001ba#\u0019\u00016\u0003\u0007\u0005\u000bD\u0007\u0003\u0004sY\u0001\u000fQ\u0012\u0003\t\u0005A\u0006d\t\u000eC\u0004\u000241\u0002\u001d!$\u0006\u0011\t\u0001\fGR\u001b\u0005\b\u0003#c\u00039AG\r!\u0011\u0001\u0017\r$7\t\u000f\t\u001dA\u0006q\u0001\u000e\u001eA!\u0001-\u0019Go\u0011\u001d\u0011)\n\fa\u0002\u001bC\u0001B\u0001Y1\rb\"911\b\u0017A\u00045\u0015\u0002\u0003\u00021b\u0019KDqa!?-\u0001\biI\u0003\u0005\u0003aC2%\bb\u0002ChY\u0001\u000fQR\u0006\t\u0005A\u0006di\u000fC\u0004\u0006>2\u0002\u001d!$\r\u0011\t\u0001\fG\u0012\u001f\u0005\b\r\u0007d\u00039AG\u001b!\u0011\u0001\u0017\r$>\t\u000f\u001d\u0005H\u0006q\u0001\u000e:A!\u0001-\u0019G}\u0011\u001dI9\u0002\fa\u0002\u001b{\u0001B\u0001Y1\r~\"9!R\r\u0017A\u00045\u0005\u0003\u0003\u00021b\u001b\u0003Aqac3-\u0001\bi)\u0005\u0005\u0003aC6\u0015\u0001bBG%Y\u0001\u000fQ2J\u0001\u0004\u0003F\"\u0004\u0003\u00021b\u001b\u0013\tAdY1ug.+'O\\3m'R$wJ\u001d3fe\u001a{'\u000fV;qY\u0016\fT'\u0006\u0011\u000eR5eSRLG1\u001bKjI'$\u001c\u000er5UT\u0012PG?\u001b\u0003k))$#\u000e\u000e6EE\u0003IG*\u001b'k9*d'\u000e 6\rVrUGV\u001b_k\u0019,d.\u000e<6}V2YGd\u001b\u0017\u0004B\u0001\u0019=\u000eVA\tc\n$4\u000eX5mSrLG2\u001bOjY'd\u001c\u000et5]T2PG@\u001b\u0007k9)d#\u000e\u0010B\u0019q-$\u0017\u0005\u000b%l#\u0019\u00016\u0011\u0007\u001dli\u0006\u0002\u0004\u0002,5\u0012\rA\u001b\t\u0004O6\u0005DABAC[\t\u0007!\u000eE\u0002h\u001bK\"a!a>.\u0005\u0004Q\u0007cA4\u000ej\u00111!\u0011Q\u0017C\u0002)\u00042aZG7\t\u0019\u0019\u0019#\fb\u0001UB\u0019q-$\u001d\u0005\r\ruWF1\u0001k!\r9WR\u000f\u0003\u0007\t_k#\u0019\u00016\u0011\u0007\u001dlI\b\u0002\u0004\u0006\u001a6\u0012\rA\u001b\t\u0004O6uDA\u0002DN[\t\u0007!\u000eE\u0002h\u001b\u0003#aa\"..\u0005\u0004Q\u0007cA4\u000e\u0006\u00121\u0001r]\u0017C\u0002)\u00042aZGE\t\u0019Q\t$\fb\u0001UB\u0019q-$$\u0005\r-MUF1\u0001k!\r9W\u0012\u0013\u0003\u0007\u001b\u001bi#\u0019\u00016\t\rIl\u00039AGK!\u0011\u0001\u00070d\u0016\t\u000f\u0005MR\u0006q\u0001\u000e\u001aB!\u0001\r_G.\u0011\u001d\t\t*\fa\u0002\u001b;\u0003B\u0001\u0019=\u000e`!9!qA\u0017A\u00045\u0005\u0006\u0003\u00021y\u001bGBqA!&.\u0001\bi)\u000b\u0005\u0003aq6\u001d\u0004bBB\u001e[\u0001\u000fQ\u0012\u0016\t\u0005AblY\u0007C\u0004\u0004z6\u0002\u001d!$,\u0011\t\u0001DXr\u000e\u0005\b\t\u001fl\u00039AGY!\u0011\u0001\u00070d\u001d\t\u000f\u0015uV\u0006q\u0001\u000e6B!\u0001\r_G<\u0011\u001d1\u0019-\fa\u0002\u001bs\u0003B\u0001\u0019=\u000e|!9q\u0011]\u0017A\u00045u\u0006\u0003\u00021y\u001b\u007fBq!c\u0006.\u0001\bi\t\r\u0005\u0003aq6\r\u0005b\u0002F3[\u0001\u000fQR\u0019\t\u0005Abl9\tC\u0004\fL6\u0002\u001d!$3\u0011\t\u0001DX2\u0012\u0005\b\u001b\u0013j\u00039AGg!\u0011\u0001\u00070d$\u0002S\r\fGo]&fe:,Gn\u0015;e\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.Z\u00196+\u0001j\u0019.d7\u000e`6\rXr]Gv\u001b_l\u00190d>\u000e|6}h2\u0001H\u0004\u001d\u0017qyAd\u0005\u0015A5UgR\u0003H\r\u001d;q\tC$\n\u000f*95b\u0012\u0007H\u001b\u001dsqiD$\u0011\u000fF9%cR\n\t\u0006A\u0006\u001dQr\u001b\t\"\u001d25W\u0012\\Go\u001bCl)/$;\u000en6EXR_G}\u001b{t\tA$\u0002\u000f\n95a\u0012\u0003\t\u0004O6mG!B5/\u0005\u0004Q\u0007cA4\u000e`\u00121\u00111\u0006\u0018C\u0002)\u00042aZGr\t\u0019\t)I\fb\u0001UB\u0019q-d:\u0005\r\u0005]hF1\u0001k!\r9W2\u001e\u0003\u0007\u0005\u0003s#\u0019\u00016\u0011\u0007\u001dly\u000f\u0002\u0004\u0004$9\u0012\rA\u001b\t\u0004O6MHABBo]\t\u0007!\u000eE\u0002h\u001bo$a\u0001b,/\u0005\u0004Q\u0007cA4\u000e|\u00121Q\u0011\u0014\u0018C\u0002)\u00042aZG\u0000\t\u00191YJ\fb\u0001UB\u0019qMd\u0001\u0005\r\u001dUfF1\u0001k!\r9gr\u0001\u0003\u0007\u0011Ot#\u0019\u00016\u0011\u0007\u001dtY\u0001\u0002\u0004\u000b29\u0012\rA\u001b\t\u0004O:=AABFJ]\t\u0007!\u000eE\u0002h\u001d'!a!$\u0004/\u0005\u0004Q\u0007B\u0002:/\u0001\bq9\u0002E\u0003a\u0003\u000fiI\u000eC\u0004\u000249\u0002\u001dAd\u0007\u0011\u000b\u0001\f9!$8\t\u000f\u0005Ee\u0006q\u0001\u000f A)\u0001-a\u0002\u000eb\"9!q\u0001\u0018A\u00049\r\u0002#\u00021\u0002\b5\u0015\bb\u0002BK]\u0001\u000far\u0005\t\u0006A\u0006\u001dQ\u0012\u001e\u0005\b\u0007wq\u00039\u0001H\u0016!\u0015\u0001\u0017qAGw\u0011\u001d\u0019IP\fa\u0002\u001d_\u0001R\u0001YA\u0004\u001bcDq\u0001b4/\u0001\bq\u0019\u0004E\u0003a\u0003\u000fi)\u0010C\u0004\u0006>:\u0002\u001dAd\u000e\u0011\u000b\u0001\f9!$?\t\u000f\u0019\rg\u0006q\u0001\u000f<A)\u0001-a\u0002\u000e~\"9q\u0011\u001d\u0018A\u00049}\u0002#\u00021\u0002\b9\u0005\u0001bBE\f]\u0001\u000fa2\t\t\u0006A\u0006\u001daR\u0001\u0005\b\u0015Kr\u00039\u0001H$!\u0015\u0001\u0017q\u0001H\u0005\u0011\u001dYYM\fa\u0002\u001d\u0017\u0002R\u0001YA\u0004\u001d\u001bAq!$\u0013/\u0001\bqy\u0005E\u0003a\u0003\u000fq\t\"A\u0014dCR\u001c8*\u001a:oK2\u001cF\u000fZ\"p[6,H/\u0019;jm\u0016<%o\\;q\r>\u0014H+\u001e9mKF2TC\tH+\u001dCr)G$\u001b\u000fn9EdR\u000fH=\u001d{r\tI$\"\u000f\n:5e\u0012\u0013HK\u001d3si\n\u0006\u0012\u000fX9\u0005fR\u0015HU\u001d[s\tL$.\u000f::uf\u0012\u0019Hc\u001d\u0013tiM$5\u000fV:egR\u001c\t\u0005A\u0006tI\u0006E\u0012O\u001d7ryFd\u0019\u000fh9-dr\u000eH:\u001dorYHd \u000f\u0004:\u001de2\u0012HH\u001d's9Jd'\n\u00079usJA\u0004UkBdW-\r\u001c\u0011\u0007\u001dt\t\u0007B\u0003j_\t\u0007!\u000eE\u0002h\u001dK\"a!a\u000b0\u0005\u0004Q\u0007cA4\u000fj\u00111\u0011QQ\u0018C\u0002)\u00042a\u001aH7\t\u0019\t9p\fb\u0001UB\u0019qM$\u001d\u0005\r\t\u0005uF1\u0001k!\r9gR\u000f\u0003\u0007\u0007Gy#\u0019\u00016\u0011\u0007\u001dtI\b\u0002\u0004\u0004^>\u0012\rA\u001b\t\u0004O:uDA\u0002CX_\t\u0007!\u000eE\u0002h\u001d\u0003#a!\"'0\u0005\u0004Q\u0007cA4\u000f\u0006\u00121a1T\u0018C\u0002)\u00042a\u001aHE\t\u00199)l\fb\u0001UB\u0019qM$$\u0005\r!\u001dxF1\u0001k!\r9g\u0012\u0013\u0003\u0007\u0015cy#\u0019\u00016\u0011\u0007\u001dt)\n\u0002\u0004\f\u0014>\u0012\rA\u001b\t\u0004O:eEABG\u0007_\t\u0007!\u000eE\u0002h\u001d;#aAd(0\u0005\u0004Q'aA!2k!1!o\fa\u0002\u001dG\u0003B\u0001Y1\u000f`!9\u00111G\u0018A\u00049\u001d\u0006\u0003\u00021b\u001dGBq!!%0\u0001\bqY\u000b\u0005\u0003aC:\u001d\u0004b\u0002B\u0004_\u0001\u000far\u0016\t\u0005A\u0006tY\u0007C\u0004\u0003\u0016>\u0002\u001dAd-\u0011\t\u0001\fgr\u000e\u0005\b\u0007wy\u00039\u0001H\\!\u0011\u0001\u0017Md\u001d\t\u000f\rex\u0006q\u0001\u000f<B!\u0001-\u0019H<\u0011\u001d!ym\fa\u0002\u001d\u007f\u0003B\u0001Y1\u000f|!9QQX\u0018A\u00049\r\u0007\u0003\u00021b\u001d\u007fBqAb10\u0001\bq9\r\u0005\u0003aC:\r\u0005bBDq_\u0001\u000fa2\u001a\t\u0005A\u0006t9\tC\u0004\n\u0018=\u0002\u001dAd4\u0011\t\u0001\fg2\u0012\u0005\b\u0015Kz\u00039\u0001Hj!\u0011\u0001\u0017Md$\t\u000f--w\u0006q\u0001\u000fXB!\u0001-\u0019HJ\u0011\u001diIe\fa\u0002\u001d7\u0004B\u0001Y1\u000f\u0018\"9ar\\\u0018A\u00049\u0005\u0018aA!2kA!\u0001-\u0019HN\u0003q\u0019\u0017\r^:LKJtW\r\\*uI>\u0013H-\u001a:G_J$V\u000f\u001d7fcY*\"Ed:\u000fp:Mhr\u001fH~\u001d\u007f|\u0019ad\u0002\u0010\f==q2CH\f\u001f7yybd\t\u0010(=-BC\tHu\u001f[y\td$\u000e\u0010:=ur\u0012IH#\u001f\u0013zie$\u0015\u0010V=esRLH1\u001fKzI\u0007\u0005\u0003aq:-\bc\t(\u000f\\95h\u0012\u001fH{\u001dstip$\u0001\u0010\u0006=%qRBH\t\u001f+yIb$\b\u0010\"=\u0015r\u0012\u0006\t\u0004O:=H!B51\u0005\u0004Q\u0007cA4\u000ft\u00121\u00111\u0006\u0019C\u0002)\u00042a\u001aH|\t\u0019\t)\t\rb\u0001UB\u0019qMd?\u0005\r\u0005]\bG1\u0001k!\r9gr \u0003\u0007\u0005\u0003\u0003$\u0019\u00016\u0011\u0007\u001d|\u0019\u0001\u0002\u0004\u0004$A\u0012\rA\u001b\t\u0004O>\u001dAABBoa\t\u0007!\u000eE\u0002h\u001f\u0017!a\u0001b,1\u0005\u0004Q\u0007cA4\u0010\u0010\u00111Q\u0011\u0014\u0019C\u0002)\u00042aZH\n\t\u00191Y\n\rb\u0001UB\u0019qmd\u0006\u0005\r\u001dU\u0006G1\u0001k!\r9w2\u0004\u0003\u0007\u0011O\u0004$\u0019\u00016\u0011\u0007\u001d|y\u0002\u0002\u0004\u000b2A\u0012\rA\u001b\t\u0004O>\rBABFJa\t\u0007!\u000eE\u0002h\u001fO!a!$\u00041\u0005\u0004Q\u0007cA4\u0010,\u00111ar\u0014\u0019C\u0002)DaA\u001d\u0019A\u0004==\u0002\u0003\u00021y\u001d[Dq!a\r1\u0001\by\u0019\u0004\u0005\u0003aq:E\bbBAIa\u0001\u000fqr\u0007\t\u0005Abt)\u0010C\u0004\u0003\bA\u0002\u001dad\u000f\u0011\t\u0001Dh\u0012 \u0005\b\u0005+\u0003\u00049AH !\u0011\u0001\u0007P$@\t\u000f\rm\u0002\u0007q\u0001\u0010DA!\u0001\r_H\u0001\u0011\u001d\u0019I\u0010\ra\u0002\u001f\u000f\u0002B\u0001\u0019=\u0010\u0006!9Aq\u001a\u0019A\u0004=-\u0003\u0003\u00021y\u001f\u0013Aq!\"01\u0001\byy\u0005\u0005\u0003aq>5\u0001b\u0002Dba\u0001\u000fq2\u000b\t\u0005Ab|\t\u0002C\u0004\bbB\u0002\u001dad\u0016\u0011\t\u0001DxR\u0003\u0005\b\u0013/\u0001\u00049AH.!\u0011\u0001\u0007p$\u0007\t\u000f)\u0015\u0004\u0007q\u0001\u0010`A!\u0001\r_H\u000f\u0011\u001dYY\r\ra\u0002\u001fG\u0002B\u0001\u0019=\u0010\"!9Q\u0012\n\u0019A\u0004=\u001d\u0004\u0003\u00021y\u001fKAqAd81\u0001\byY\u0007\u0005\u0003aq>%\u0012!K2biN\\UM\u001d8fYN#HMQ8v]\u0012,GmU3nS2\fG\u000f^5dK\u001a{'\u000fV;qY\u0016\fd'\u0006\u0012\u0010r=etRPHA\u001f\u000b{Ii$$\u0010\u0012>Uu\u0012THO\u001fC{)k$+\u0010.>EvR\u0017\u000b#\u001fgz9ld/\u0010@>\rwrYHf\u001f\u001f|\u0019nd6\u0010\\>}w2]Ht\u001fW|yod=\u0011\u000b\u0001\f9a$\u001e\u0011G9sYfd\u001e\u0010|=}t2QHD\u001f\u0017{yid%\u0010\u0018>murTHR\u001fO{Ykd,\u00104B\u0019qm$\u001f\u0005\u000b%\f$\u0019\u00016\u0011\u0007\u001d|i\b\u0002\u0004\u0002,E\u0012\rA\u001b\t\u0004O>\u0005EABACc\t\u0007!\u000eE\u0002h\u001f\u000b#a!a>2\u0005\u0004Q\u0007cA4\u0010\n\u00121!\u0011Q\u0019C\u0002)\u00042aZHG\t\u0019\u0019\u0019#\rb\u0001UB\u0019qm$%\u0005\r\ru\u0017G1\u0001k!\r9wR\u0013\u0003\u0007\t_\u000b$\u0019\u00016\u0011\u0007\u001d|I\n\u0002\u0004\u0006\u001aF\u0012\rA\u001b\t\u0004O>uEA\u0002DNc\t\u0007!\u000eE\u0002h\u001fC#aa\".2\u0005\u0004Q\u0007cA4\u0010&\u00121\u0001r]\u0019C\u0002)\u00042aZHU\t\u0019Q\t$\rb\u0001UB\u0019qm$,\u0005\r-M\u0015G1\u0001k!\r9w\u0012\u0017\u0003\u0007\u001b\u001b\t$\u0019\u00016\u0011\u0007\u001d|)\f\u0002\u0004\u000f F\u0012\rA\u001b\u0005\u0007eF\u0002\u001da$/\u0011\u000b\u0001\f9ad\u001e\t\u000f\u0005M\u0012\u0007q\u0001\u0010>B)\u0001-a\u0002\u0010|!9\u0011\u0011S\u0019A\u0004=\u0005\u0007#\u00021\u0002\b=}\u0004b\u0002B\u0004c\u0001\u000fqR\u0019\t\u0006A\u0006\u001dq2\u0011\u0005\b\u0005+\u000b\u00049AHe!\u0015\u0001\u0017qAHD\u0011\u001d\u0019Y$\ra\u0002\u001f\u001b\u0004R\u0001YA\u0004\u001f\u0017Cqa!?2\u0001\by\t\u000eE\u0003a\u0003\u000fyy\tC\u0004\u0005PF\u0002\u001da$6\u0011\u000b\u0001\f9ad%\t\u000f\u0015u\u0016\u0007q\u0001\u0010ZB)\u0001-a\u0002\u0010\u0018\"9a1Y\u0019A\u0004=u\u0007#\u00021\u0002\b=m\u0005bBDqc\u0001\u000fq\u0012\u001d\t\u0006A\u0006\u001dqr\u0014\u0005\b\u0013/\t\u00049AHs!\u0015\u0001\u0017qAHR\u0011\u001dQ)'\ra\u0002\u001fS\u0004R\u0001YA\u0004\u001fOCqac32\u0001\byi\u000fE\u0003a\u0003\u000fyY\u000bC\u0004\u000eJE\u0002\u001da$=\u0011\u000b\u0001\f9ad,\t\u000f9}\u0017\u0007q\u0001\u0010vB)\u0001-a\u0002\u00104\u000693-\u0019;t\u0017\u0016\u0014h.\u001a7Ti\u0012\u001cu.\\7vi\u0006$\u0018N^3He>,\bOR8s)V\u0004H.Z\u00198+\u0011zY\u0010e\u0002\u0011\fA=\u00013\u0003I\f!7\u0001z\u0002e\t\u0011(A-\u0002s\u0006I\u001a!o\u0001Z\u0004e\u0010\u0011DA\u001dC\u0003JH\u007f!\u0017\u0002z\u0005e\u0015\u0011XAm\u0003s\fI2!O\u0002Z\u0007e\u001c\u0011tA]\u00043\u0010I@!\u0007\u0003:\te#\u0011\t\u0001\fwr \t&\u001dB\u0005\u0001S\u0001I\u0005!\u001b\u0001\n\u0002%\u0006\u0011\u001aAu\u0001\u0013\u0005I\u0013!S\u0001j\u0003%\r\u00116Ae\u0002S\bI!!\u000bJ1\u0001e\u0001P\u0005\u001d!V\u000f\u001d7fc]\u00022a\u001aI\u0004\t\u0015I'G1\u0001k!\r9\u00073\u0002\u0003\u0007\u0003W\u0011$\u0019\u00016\u0011\u0007\u001d\u0004z\u0001\u0002\u0004\u0002\u0006J\u0012\rA\u001b\t\u0004OBMAABA|e\t\u0007!\u000eE\u0002h!/!aA!!3\u0005\u0004Q\u0007cA4\u0011\u001c\u0011111\u0005\u001aC\u0002)\u00042a\u001aI\u0010\t\u0019\u0019iN\rb\u0001UB\u0019q\re\t\u0005\r\u0011=&G1\u0001k!\r9\u0007s\u0005\u0003\u0007\u000b3\u0013$\u0019\u00016\u0011\u0007\u001d\u0004Z\u0003\u0002\u0004\u0007\u001cJ\u0012\rA\u001b\t\u0004OB=BABD[e\t\u0007!\u000eE\u0002h!g!a\u0001c:3\u0005\u0004Q\u0007cA4\u00118\u00111!\u0012\u0007\u001aC\u0002)\u00042a\u001aI\u001e\t\u0019Y\u0019J\rb\u0001UB\u0019q\re\u0010\u0005\r55!G1\u0001k!\r9\u00073\t\u0003\u0007\u001d?\u0013$\u0019\u00016\u0011\u0007\u001d\u0004:\u0005\u0002\u0004\u0011JI\u0012\rA\u001b\u0002\u0004\u0003F2\u0004B\u0002:3\u0001\b\u0001j\u0005\u0005\u0003aCB\u0015\u0001bBA\u001ae\u0001\u000f\u0001\u0013\u000b\t\u0005A\u0006\u0004J\u0001C\u0004\u0002\u0012J\u0002\u001d\u0001%\u0016\u0011\t\u0001\f\u0007S\u0002\u0005\b\u0005\u000f\u0011\u00049\u0001I-!\u0011\u0001\u0017\r%\u0005\t\u000f\tU%\u0007q\u0001\u0011^A!\u0001-\u0019I\u000b\u0011\u001d\u0019YD\ra\u0002!C\u0002B\u0001Y1\u0011\u001a!91\u0011 \u001aA\u0004A\u0015\u0004\u0003\u00021b!;Aq\u0001b43\u0001\b\u0001J\u0007\u0005\u0003aCB\u0005\u0002bBC_e\u0001\u000f\u0001S\u000e\t\u0005A\u0006\u0004*\u0003C\u0004\u0007DJ\u0002\u001d\u0001%\u001d\u0011\t\u0001\f\u0007\u0013\u0006\u0005\b\u000fC\u0014\u00049\u0001I;!\u0011\u0001\u0017\r%\f\t\u000f%]!\u0007q\u0001\u0011zA!\u0001-\u0019I\u0019\u0011\u001dQ)G\ra\u0002!{\u0002B\u0001Y1\u00116!912\u001a\u001aA\u0004A\u0005\u0005\u0003\u00021b!sAq!$\u00133\u0001\b\u0001*\t\u0005\u0003aCBu\u0002b\u0002Hpe\u0001\u000f\u0001\u0013\u0012\t\u0005A\u0006\u0004\n\u0005C\u0004\u0011\u000eJ\u0002\u001d\u0001e$\u0002\u0007\u0005\u000bd\u0007\u0005\u0003aCB\u0015\u0013\u0001H2biN\\UM\u001d8fYN#Hm\u0014:eKJ4uN\u001d+va2,\u0017gN\u000b%!+\u0003j\n%)\u0011&B%\u0006S\u0016IY!k\u0003J\f%0\u0011BB\u0015\u0007\u0013\u001aIg!#\u0004*\u000e%7\u0011^R!\u0003s\u0013Ip!G\u0004:\u000fe;\u0011pBM\bs\u001fI~!\u007f\f\u001a!e\u0002\u0012\fE=\u00113CI\f#7\tz\u0002\u0005\u0003aqBe\u0005#\n(\u0011\u0002Am\u0005s\u0014IR!O\u0003Z\u000be,\u00114B]\u00063\u0018I`!\u0007\u0004:\re3\u0011PBM\u0007s\u001bIn!\r9\u0007S\u0014\u0003\u0006SN\u0012\rA\u001b\t\u0004OB\u0005FABA\u0016g\t\u0007!\u000eE\u0002h!K#a!!\"4\u0005\u0004Q\u0007cA4\u0011*\u00121\u0011q_\u001aC\u0002)\u00042a\u001aIW\t\u0019\u0011\ti\rb\u0001UB\u0019q\r%-\u0005\r\r\r2G1\u0001k!\r9\u0007S\u0017\u0003\u0007\u0007;\u001c$\u0019\u00016\u0011\u0007\u001d\u0004J\f\u0002\u0004\u00050N\u0012\rA\u001b\t\u0004OBuFABCMg\t\u0007!\u000eE\u0002h!\u0003$aAb'4\u0005\u0004Q\u0007cA4\u0011F\u00121qQW\u001aC\u0002)\u00042a\u001aIe\t\u0019A9o\rb\u0001UB\u0019q\r%4\u0005\r)E2G1\u0001k!\r9\u0007\u0013\u001b\u0003\u0007\u0017'\u001b$\u0019\u00016\u0011\u0007\u001d\u0004*\u000e\u0002\u0004\u000e\u000eM\u0012\rA\u001b\t\u0004OBeGA\u0002HPg\t\u0007!\u000eE\u0002h!;$a\u0001%\u00134\u0005\u0004Q\u0007B\u0002:4\u0001\b\u0001\n\u000f\u0005\u0003aqBm\u0005bBA\u001ag\u0001\u000f\u0001S\u001d\t\u0005Ab\u0004z\nC\u0004\u0002\u0012N\u0002\u001d\u0001%;\u0011\t\u0001D\b3\u0015\u0005\b\u0005\u000f\u0019\u00049\u0001Iw!\u0011\u0001\u0007\u0010e*\t\u000f\tU5\u0007q\u0001\u0011rB!\u0001\r\u001fIV\u0011\u001d\u0019Yd\ra\u0002!k\u0004B\u0001\u0019=\u00110\"91\u0011`\u001aA\u0004Ae\b\u0003\u00021y!gCq\u0001b44\u0001\b\u0001j\u0010\u0005\u0003aqB]\u0006bBC_g\u0001\u000f\u0011\u0013\u0001\t\u0005Ab\u0004Z\fC\u0004\u0007DN\u0002\u001d!%\u0002\u0011\t\u0001D\bs\u0018\u0005\b\u000fC\u001c\u00049AI\u0005!\u0011\u0001\u0007\u0010e1\t\u000f%]1\u0007q\u0001\u0012\u000eA!\u0001\r\u001fId\u0011\u001dQ)g\ra\u0002##\u0001B\u0001\u0019=\u0011L\"912Z\u001aA\u0004EU\u0001\u0003\u00021y!\u001fDq!$\u00134\u0001\b\tJ\u0002\u0005\u0003aqBM\u0007b\u0002Hpg\u0001\u000f\u0011S\u0004\t\u0005Ab\u0004:\u000eC\u0004\u0011\u000eN\u0002\u001d!%\t\u0011\t\u0001D\b3\\\u0001*G\u0006$8oS3s]\u0016d7\u000b\u001e3C_VtG-\u001a3TK6LG.\u0019;uS\u000e,gi\u001c:UkBdW-M\u001c\u0016IE\u001d\u0012sFI\u001a#o\tZ$e\u0010\u0012DE\u001d\u00133JI(#'\n:&e\u0017\u0012`E\r\u0014sMI6#_\"B%%\u000b\u0012rEU\u0014\u0013PI?#\u0003\u000b*)%#\u0012\u000eFE\u0015SSIM#;\u000b\n+%*\u0012*F5\u0016\u0013\u0017\t\u0006A\u0006\u001d\u00113\u0006\t&\u001dB\u0005\u0011SFI\u0019#k\tJ$%\u0010\u0012BE\u0015\u0013\u0013JI'##\n*&%\u0017\u0012^E\u0005\u0014SMI5#[\u00022aZI\u0018\t\u0015IGG1\u0001k!\r9\u00173\u0007\u0003\u0007\u0003W!$\u0019\u00016\u0011\u0007\u001d\f:\u0004\u0002\u0004\u0002\u0006R\u0012\rA\u001b\t\u0004OFmBABA|i\t\u0007!\u000eE\u0002h#\u007f!aA!!5\u0005\u0004Q\u0007cA4\u0012D\u0011111\u0005\u001bC\u0002)\u00042aZI$\t\u0019\u0019i\u000e\u000eb\u0001UB\u0019q-e\u0013\u0005\r\u0011=FG1\u0001k!\r9\u0017s\n\u0003\u0007\u000b3#$\u0019\u00016\u0011\u0007\u001d\f\u001a\u0006\u0002\u0004\u0007\u001cR\u0012\rA\u001b\t\u0004OF]CABD[i\t\u0007!\u000eE\u0002h#7\"a\u0001c:5\u0005\u0004Q\u0007cA4\u0012`\u00111!\u0012\u0007\u001bC\u0002)\u00042aZI2\t\u0019Y\u0019\n\u000eb\u0001UB\u0019q-e\u001a\u0005\r55AG1\u0001k!\r9\u00173\u000e\u0003\u0007\u001d?#$\u0019\u00016\u0011\u0007\u001d\fz\u0007\u0002\u0004\u0011JQ\u0012\rA\u001b\u0005\u0007eR\u0002\u001d!e\u001d\u0011\u000b\u0001\f9!%\f\t\u000f\u0005MB\u0007q\u0001\u0012xA)\u0001-a\u0002\u00122!9\u0011\u0011\u0013\u001bA\u0004Em\u0004#\u00021\u0002\bEU\u0002b\u0002B\u0004i\u0001\u000f\u0011s\u0010\t\u0006A\u0006\u001d\u0011\u0013\b\u0005\b\u0005+#\u00049AIB!\u0015\u0001\u0017qAI\u001f\u0011\u001d\u0019Y\u0004\u000ea\u0002#\u000f\u0003R\u0001YA\u0004#\u0003Bqa!?5\u0001\b\tZ\tE\u0003a\u0003\u000f\t*\u0005C\u0004\u0005PR\u0002\u001d!e$\u0011\u000b\u0001\f9!%\u0013\t\u000f\u0015uF\u0007q\u0001\u0012\u0014B)\u0001-a\u0002\u0012N!9a1\u0019\u001bA\u0004E]\u0005#\u00021\u0002\bEE\u0003bBDqi\u0001\u000f\u00113\u0014\t\u0006A\u0006\u001d\u0011S\u000b\u0005\b\u0013/!\u00049AIP!\u0015\u0001\u0017qAI-\u0011\u001dQ)\u0007\u000ea\u0002#G\u0003R\u0001YA\u0004#;Bqac35\u0001\b\t:\u000bE\u0003a\u0003\u000f\t\n\u0007C\u0004\u000eJQ\u0002\u001d!e+\u0011\u000b\u0001\f9!%\u001a\t\u000f9}G\u0007q\u0001\u00120B)\u0001-a\u0002\u0012j!9\u0001S\u0012\u001bA\u0004EM\u0006#\u00021\u0002\bE5\u0014aJ2biN\\UM\u001d8fYN#HmQ8n[V$\u0018\r^5wK\u001e\u0013x.\u001e9G_J$V\u000f\u001d7fca*b%%/\u0012FF%\u0017SZIi#+\fJ.%8\u0012bF\u0015\u0018\u0013^Iw#c\f*0%?\u0012~J\u0005!S\u0001J\u0005)\u0019\nZL%\u0004\u0013\u0012IU!\u0013\u0004J\u000f%C\u0011*C%\u000b\u0013.IE\"S\u0007J\u001d%{\u0011\nE%\u0012\u0013JI5#\u0013\u000b\t\u0005A\u0006\fj\fE\u0014O#\u007f\u000b\u001a-e2\u0012LF=\u00173[Il#7\fz.e9\u0012hF-\u0018s^Iz#o\fZ0e@\u0013\u0004I\u001d\u0011bAIa\u001f\n9A+\u001e9mKFB\u0004cA4\u0012F\u0012)\u0011.\u000eb\u0001UB\u0019q-%3\u0005\r\u0005-RG1\u0001k!\r9\u0017S\u001a\u0003\u0007\u0003\u000b+$\u0019\u00016\u0011\u0007\u001d\f\n\u000e\u0002\u0004\u0002xV\u0012\rA\u001b\t\u0004OFUGA\u0002BAk\t\u0007!\u000eE\u0002h#3$aaa\t6\u0005\u0004Q\u0007cA4\u0012^\u001211Q\\\u001bC\u0002)\u00042aZIq\t\u0019!y+\u000eb\u0001UB\u0019q-%:\u0005\r\u0015eUG1\u0001k!\r9\u0017\u0013\u001e\u0003\u0007\r7+$\u0019\u00016\u0011\u0007\u001d\fj\u000f\u0002\u0004\b6V\u0012\rA\u001b\t\u0004OFEHA\u0002Etk\t\u0007!\u000eE\u0002h#k$aA#\r6\u0005\u0004Q\u0007cA4\u0012z\u0012112S\u001bC\u0002)\u00042aZI\u007f\t\u0019ii!\u000eb\u0001UB\u0019qM%\u0001\u0005\r9}UG1\u0001k!\r9'S\u0001\u0003\u0007!\u0013*$\u0019\u00016\u0011\u0007\u001d\u0014J\u0001\u0002\u0004\u0013\fU\u0012\rA\u001b\u0002\u0004\u0003F:\u0004B\u0002:6\u0001\b\u0011z\u0001\u0005\u0003aCF\r\u0007bBA\u001ak\u0001\u000f!3\u0003\t\u0005A\u0006\f:\rC\u0004\u0002\u0012V\u0002\u001dAe\u0006\u0011\t\u0001\f\u00173\u001a\u0005\b\u0005\u000f)\u00049\u0001J\u000e!\u0011\u0001\u0017-e4\t\u000f\tUU\u0007q\u0001\u0013 A!\u0001-YIj\u0011\u001d\u0019Y$\u000ea\u0002%G\u0001B\u0001Y1\u0012X\"91\u0011`\u001bA\u0004I\u001d\u0002\u0003\u00021b#7Dq\u0001b46\u0001\b\u0011Z\u0003\u0005\u0003aCF}\u0007bBC_k\u0001\u000f!s\u0006\t\u0005A\u0006\f\u001a\u000fC\u0004\u0007DV\u0002\u001dAe\r\u0011\t\u0001\f\u0017s\u001d\u0005\b\u000fC,\u00049\u0001J\u001c!\u0011\u0001\u0017-e;\t\u000f%]Q\u0007q\u0001\u0013<A!\u0001-YIx\u0011\u001dQ)'\u000ea\u0002%\u007f\u0001B\u0001Y1\u0012t\"912Z\u001bA\u0004I\r\u0003\u0003\u00021b#oDq!$\u00136\u0001\b\u0011:\u0005\u0005\u0003aCFm\bb\u0002Hpk\u0001\u000f!3\n\t\u0005A\u0006\fz\u0010C\u0004\u0011\u000eV\u0002\u001dAe\u0014\u0011\t\u0001\f'3\u0001\u0005\b%'*\u00049\u0001J+\u0003\r\t\u0015g\u000e\t\u0005A\u0006\u0014:!\u0001\u000fdCR\u001c8*\u001a:oK2\u001cF\u000fZ(sI\u0016\u0014hi\u001c:UkBdW-\r\u001d\u0016MIm#3\rJ4%W\u0012zGe\u001d\u0013xIm$s\u0010JB%\u000f\u0013ZIe$\u0013\u0014J]%3\u0014JP%G\u0013:\u000b\u0006\u0014\u0013^I%&S\u0016JY%k\u0013JL%0\u0013BJ\u0015'\u0013\u001aJg%#\u0014*N%7\u0013^J\u0005(S\u001dJu%[\u0004B\u0001\u0019=\u0013`A9c*e0\u0013bI\u0015$\u0013\u000eJ7%c\u0012*H%\u001f\u0013~I\u0005%S\u0011JE%\u001b\u0013\nJ%&\u0013\u001aJu%\u0013\u0015JS!\r9'3\r\u0003\u0006SZ\u0012\rA\u001b\t\u0004OJ\u001dDABA\u0016m\t\u0007!\u000eE\u0002h%W\"a!!\"7\u0005\u0004Q\u0007cA4\u0013p\u00111\u0011q\u001f\u001cC\u0002)\u00042a\u001aJ:\t\u0019\u0011\tI\u000eb\u0001UB\u0019qMe\u001e\u0005\r\r\rbG1\u0001k!\r9'3\u0010\u0003\u0007\u0007;4$\u0019\u00016\u0011\u0007\u001d\u0014z\b\u0002\u0004\u00050Z\u0012\rA\u001b\t\u0004OJ\rEABCMm\t\u0007!\u000eE\u0002h%\u000f#aAb'7\u0005\u0004Q\u0007cA4\u0013\f\u00121qQ\u0017\u001cC\u0002)\u00042a\u001aJH\t\u0019A9O\u000eb\u0001UB\u0019qMe%\u0005\r)EbG1\u0001k!\r9's\u0013\u0003\u0007\u0017'3$\u0019\u00016\u0011\u0007\u001d\u0014Z\n\u0002\u0004\u000e\u000eY\u0012\rA\u001b\t\u0004OJ}EA\u0002HPm\t\u0007!\u000eE\u0002h%G#a\u0001%\u00137\u0005\u0004Q\u0007cA4\u0013(\u00121!3\u0002\u001cC\u0002)DaA\u001d\u001cA\u0004I-\u0006\u0003\u00021y%CBq!a\r7\u0001\b\u0011z\u000b\u0005\u0003aqJ\u0015\u0004bBAIm\u0001\u000f!3\u0017\t\u0005Ab\u0014J\u0007C\u0004\u0003\bY\u0002\u001dAe.\u0011\t\u0001D(S\u000e\u0005\b\u0005+3\u00049\u0001J^!\u0011\u0001\u0007P%\u001d\t\u000f\rmb\u0007q\u0001\u0013@B!\u0001\r\u001fJ;\u0011\u001d\u0019IP\u000ea\u0002%\u0007\u0004B\u0001\u0019=\u0013z!9Aq\u001a\u001cA\u0004I\u001d\u0007\u0003\u00021y%{Bq!\"07\u0001\b\u0011Z\r\u0005\u0003aqJ\u0005\u0005b\u0002Dbm\u0001\u000f!s\u001a\t\u0005Ab\u0014*\tC\u0004\bbZ\u0002\u001dAe5\u0011\t\u0001D(\u0013\u0012\u0005\b\u0013/1\u00049\u0001Jl!\u0011\u0001\u0007P%$\t\u000f)\u0015d\u0007q\u0001\u0013\\B!\u0001\r\u001fJI\u0011\u001dYYM\u000ea\u0002%?\u0004B\u0001\u0019=\u0013\u0016\"9Q\u0012\n\u001cA\u0004I\r\b\u0003\u00021y%3CqAd87\u0001\b\u0011:\u000f\u0005\u0003aqJu\u0005b\u0002IGm\u0001\u000f!3\u001e\t\u0005Ab\u0014\n\u000bC\u0004\u0013TY\u0002\u001dAe<\u0011\t\u0001D(SU\u0001*G\u0006$8oS3s]\u0016d7\u000b\u001e3C_VtG-\u001a3TK6LG.\u0019;uS\u000e,gi\u001c:UkBdW-\r\u001d\u0016MIU(S`J\u0001'\u000b\u0019Ja%\u0004\u0014\u0012MU1\u0013DJ\u000f'C\u0019*c%\u000b\u0014.ME2SGJ\u001d'{\u0019\n\u0005\u0006\u0014\u0013xN\r3sIJ&'\u001f\u001a\u001afe\u0016\u0014\\M}33MJ4'W\u001azge\u001d\u0014xMm4sPJB'\u000f\u0003R\u0001YA\u0004%s\u0004rETI`%w\u0014zpe\u0001\u0014\bM-1sBJ\n'/\u0019Zbe\b\u0014$M\u001d23FJ\u0018'g\u0019:de\u000f\u0014@A\u0019qM%@\u0005\u000b%<$\u0019\u00016\u0011\u0007\u001d\u001c\n\u0001\u0002\u0004\u0002,]\u0012\rA\u001b\t\u0004ON\u0015AABACo\t\u0007!\u000eE\u0002h'\u0013!a!a>8\u0005\u0004Q\u0007cA4\u0014\u000e\u00111!\u0011Q\u001cC\u0002)\u00042aZJ\t\t\u0019\u0019\u0019c\u000eb\u0001UB\u0019qm%\u0006\u0005\r\ruwG1\u0001k!\r97\u0013\u0004\u0003\u0007\t_;$\u0019\u00016\u0011\u0007\u001d\u001cj\u0002\u0002\u0004\u0006\u001a^\u0012\rA\u001b\t\u0004ON\u0005BA\u0002DNo\t\u0007!\u000eE\u0002h'K!aa\".8\u0005\u0004Q\u0007cA4\u0014*\u00111\u0001r]\u001cC\u0002)\u00042aZJ\u0017\t\u0019Q\td\u000eb\u0001UB\u0019qm%\r\u0005\r-MuG1\u0001k!\r97S\u0007\u0003\u0007\u001b\u001b9$\u0019\u00016\u0011\u0007\u001d\u001cJ\u0004\u0002\u0004\u000f ^\u0012\rA\u001b\t\u0004ONuBA\u0002I%o\t\u0007!\u000eE\u0002h'\u0003\"aAe\u00038\u0005\u0004Q\u0007B\u0002:8\u0001\b\u0019*\u0005E\u0003a\u0003\u000f\u0011Z\u0010C\u0004\u00024]\u0002\u001da%\u0013\u0011\u000b\u0001\f9Ae@\t\u000f\u0005Eu\u0007q\u0001\u0014NA)\u0001-a\u0002\u0014\u0004!9!qA\u001cA\u0004ME\u0003#\u00021\u0002\bM\u001d\u0001b\u0002BKo\u0001\u000f1S\u000b\t\u0006A\u0006\u001d13\u0002\u0005\b\u0007w9\u00049AJ-!\u0015\u0001\u0017qAJ\b\u0011\u001d\u0019Ip\u000ea\u0002';\u0002R\u0001YA\u0004''Aq\u0001b48\u0001\b\u0019\n\u0007E\u0003a\u0003\u000f\u0019:\u0002C\u0004\u0006>^\u0002\u001da%\u001a\u0011\u000b\u0001\f9ae\u0007\t\u000f\u0019\rw\u0007q\u0001\u0014jA)\u0001-a\u0002\u0014 !9q\u0011]\u001cA\u0004M5\u0004#\u00021\u0002\bM\r\u0002bBE\fo\u0001\u000f1\u0013\u000f\t\u0006A\u0006\u001d1s\u0005\u0005\b\u0015K:\u00049AJ;!\u0015\u0001\u0017qAJ\u0016\u0011\u001dYYm\u000ea\u0002's\u0002R\u0001YA\u0004'_Aq!$\u00138\u0001\b\u0019j\bE\u0003a\u0003\u000f\u0019\u001a\u0004C\u0004\u000f`^\u0002\u001da%!\u0011\u000b\u0001\f9ae\u000e\t\u000fA5u\u0007q\u0001\u0014\u0006B)\u0001-a\u0002\u0014<!9!3K\u001cA\u0004M%\u0005#\u00021\u0002\bM}\u0012aJ2biN\\UM\u001d8fYN#HmQ8n[V$\u0018\r^5wK\u001e\u0013x.\u001e9G_J$V\u000f\u001d7fce*\u0002fe$\u0014\u001cN}53UJT'W\u001bzke-\u00148Nm6sXJb'\u000f\u001cZme4\u0014TN]73\\Jp'G$\u0002f%%\u0014hN-8s^Jz'o\u001cZpe@\u0015\u0004Q\u001dA3\u0002K\b)'!:\u0002f\u0007\u0015 Q\rBs\u0005K\u0016)_\u0001B\u0001Y1\u0014\u0014BIcj%&\u0014\u001aNu5\u0013UJS'S\u001bjk%-\u00146Ne6SXJa'\u000b\u001cJm%4\u0014RNU7\u0013\\Jo'CL1ae&P\u0005\u001d!V\u000f\u001d7fce\u00022aZJN\t\u0015I\u0007H1\u0001k!\r97s\u0014\u0003\u0007\u0003WA$\u0019\u00016\u0011\u0007\u001d\u001c\u001a\u000b\u0002\u0004\u0002\u0006b\u0012\rA\u001b\t\u0004ON\u001dFABA|q\t\u0007!\u000eE\u0002h'W#aA!!9\u0005\u0004Q\u0007cA4\u00140\u0012111\u0005\u001dC\u0002)\u00042aZJZ\t\u0019\u0019i\u000e\u000fb\u0001UB\u0019qme.\u0005\r\u0011=\u0006H1\u0001k!\r973\u0018\u0003\u0007\u000b3C$\u0019\u00016\u0011\u0007\u001d\u001cz\f\u0002\u0004\u0007\u001cb\u0012\rA\u001b\t\u0004ON\rGABD[q\t\u0007!\u000eE\u0002h'\u000f$a\u0001c:9\u0005\u0004Q\u0007cA4\u0014L\u00121!\u0012\u0007\u001dC\u0002)\u00042aZJh\t\u0019Y\u0019\n\u000fb\u0001UB\u0019qme5\u0005\r55\u0001H1\u0001k!\r97s\u001b\u0003\u0007\u001d?C$\u0019\u00016\u0011\u0007\u001d\u001cZ\u000e\u0002\u0004\u0011Ja\u0012\rA\u001b\t\u0004ON}GA\u0002J\u0006q\t\u0007!\u000eE\u0002h'G$aa%:9\u0005\u0004Q'aA!2q!1!\u000f\u000fa\u0002'S\u0004B\u0001Y1\u0014\u001a\"9\u00111\u0007\u001dA\u0004M5\b\u0003\u00021b';Cq!!%9\u0001\b\u0019\n\u0010\u0005\u0003aCN\u0005\u0006b\u0002B\u0004q\u0001\u000f1S\u001f\t\u0005A\u0006\u001c*\u000bC\u0004\u0003\u0016b\u0002\u001da%?\u0011\t\u0001\f7\u0013\u0016\u0005\b\u0007wA\u00049AJ\u007f!\u0011\u0001\u0017m%,\t\u000f\re\b\bq\u0001\u0015\u0002A!\u0001-YJY\u0011\u001d!y\r\u000fa\u0002)\u000b\u0001B\u0001Y1\u00146\"9QQ\u0018\u001dA\u0004Q%\u0001\u0003\u00021b'sCqAb19\u0001\b!j\u0001\u0005\u0003aCNu\u0006bBDqq\u0001\u000fA\u0013\u0003\t\u0005A\u0006\u001c\n\rC\u0004\n\u0018a\u0002\u001d\u0001&\u0006\u0011\t\u0001\f7S\u0019\u0005\b\u0015KB\u00049\u0001K\r!\u0011\u0001\u0017m%3\t\u000f--\u0007\bq\u0001\u0015\u001eA!\u0001-YJg\u0011\u001diI\u0005\u000fa\u0002)C\u0001B\u0001Y1\u0014R\"9ar\u001c\u001dA\u0004Q\u0015\u0002\u0003\u00021b'+Dq\u0001%$9\u0001\b!J\u0003\u0005\u0003aCNe\u0007b\u0002J*q\u0001\u000fAS\u0006\t\u0005A\u0006\u001cj\u000eC\u0004\u00152a\u0002\u001d\u0001f\r\u0002\u0007\u0005\u000b\u0004\b\u0005\u0003aCN\u0005\u0018\u0001H2biN\\UM\u001d8fYN#Hm\u0014:eKJ4uN\u001d+va2,\u0017'O\u000b))s!\n\u0005&\u0012\u0015JQ5C\u0013\u000bK+)3\"j\u0006&\u0019\u0015fQ%DS\u000eK9)k\"J\b& \u0015\u0002R\u0015E\u0013\u0012\u000b))w!Z\tf$\u0015\u0014R]E3\u0014KP)G#:\u000bf+\u00150RMFs\u0017K^)\u007f#\u001a\rf2\u0015LR=G3\u001b\t\u0005Ab$j\u0004E\u0015O'+#z\u0004f\u0011\u0015HQ-Cs\nK*)/\"Z\u0006f\u0018\u0015dQ\u001dD3\u000eK8)g\":\bf\u001f\u0015\u0000Q\rEs\u0011\t\u0004OR\u0005C!B5:\u0005\u0004Q\u0007cA4\u0015F\u00111\u00111F\u001dC\u0002)\u00042a\u001aK%\t\u0019\t))\u000fb\u0001UB\u0019q\r&\u0014\u0005\r\u0005]\u0018H1\u0001k!\r9G\u0013\u000b\u0003\u0007\u0005\u0003K$\u0019\u00016\u0011\u0007\u001d$*\u0006\u0002\u0004\u0004$e\u0012\rA\u001b\t\u0004OReCABBos\t\u0007!\u000eE\u0002h);\"a\u0001b,:\u0005\u0004Q\u0007cA4\u0015b\u00111Q\u0011T\u001dC\u0002)\u00042a\u001aK3\t\u00191Y*\u000fb\u0001UB\u0019q\r&\u001b\u0005\r\u001dU\u0016H1\u0001k!\r9GS\u000e\u0003\u0007\u0011OL$\u0019\u00016\u0011\u0007\u001d$\n\b\u0002\u0004\u000b2e\u0012\rA\u001b\t\u0004ORUDABFJs\t\u0007!\u000eE\u0002h)s\"a!$\u0004:\u0005\u0004Q\u0007cA4\u0015~\u00111arT\u001dC\u0002)\u00042a\u001aKA\t\u0019\u0001J%\u000fb\u0001UB\u0019q\r&\"\u0005\rI-\u0011H1\u0001k!\r9G\u0013\u0012\u0003\u0007'KL$\u0019\u00016\t\rIL\u00049\u0001KG!\u0011\u0001\u0007\u0010f\u0010\t\u000f\u0005M\u0012\bq\u0001\u0015\u0012B!\u0001\r\u001fK\"\u0011\u001d\t\t*\u000fa\u0002)+\u0003B\u0001\u0019=\u0015H!9!qA\u001dA\u0004Qe\u0005\u0003\u00021y)\u0017BqA!&:\u0001\b!j\n\u0005\u0003aqR=\u0003bBB\u001es\u0001\u000fA\u0013\u0015\t\u0005Ab$\u001a\u0006C\u0004\u0004zf\u0002\u001d\u0001&*\u0011\t\u0001DHs\u000b\u0005\b\t\u001fL\u00049\u0001KU!\u0011\u0001\u0007\u0010f\u0017\t\u000f\u0015u\u0016\bq\u0001\u0015.B!\u0001\r\u001fK0\u0011\u001d1\u0019-\u000fa\u0002)c\u0003B\u0001\u0019=\u0015d!9q\u0011]\u001dA\u0004QU\u0006\u0003\u00021y)OBq!c\u0006:\u0001\b!J\f\u0005\u0003aqR-\u0004b\u0002F3s\u0001\u000fAS\u0018\t\u0005Ab$z\u0007C\u0004\fLf\u0002\u001d\u0001&1\u0011\t\u0001DH3\u000f\u0005\b\u001b\u0013J\u00049\u0001Kc!\u0011\u0001\u0007\u0010f\u001e\t\u000f9}\u0017\bq\u0001\u0015JB!\u0001\r\u001fK>\u0011\u001d\u0001j)\u000fa\u0002)\u001b\u0004B\u0001\u0019=\u0015\u0000!9!3K\u001dA\u0004QE\u0007\u0003\u00021y)\u0007Cq\u0001&\r:\u0001\b!*\u000e\u0005\u0003aqR\u001d\u0015!K2biN\\UM\u001d8fYN#HMQ8v]\u0012,GmU3nS2\fG\u000f^5dK\u001a{'\u000fV;qY\u0016\f\u0014(\u0006\u0015\u0015\\R\rHs\u001dKv)_$\u001a\u0010f>\u0015|R}X3AK\u0004+\u0017)z!f\u0005\u0016\u0018UmQsDK\u0012+O)Z\u0003\u0006\u0015\u0015^V5R\u0013GK\u001b+s)j$&\u0011\u0016FU%SSJK)++*J&&\u0018\u0016bU\u0015T\u0013NK7+c**\bE\u0003a\u0003\u000f!z\u000eE\u0015O'+#\n\u000f&:\u0015jR5H\u0013\u001fK{)s$j0&\u0001\u0016\u0006U%QSBK\t++)J\"&\b\u0016\"U\u0015R\u0013\u0006\t\u0004OR\rH!B5;\u0005\u0004Q\u0007cA4\u0015h\u00121\u00111\u0006\u001eC\u0002)\u00042a\u001aKv\t\u0019\t)I\u000fb\u0001UB\u0019q\rf<\u0005\r\u0005](H1\u0001k!\r9G3\u001f\u0003\u0007\u0005\u0003S$\u0019\u00016\u0011\u0007\u001d$:\u0010\u0002\u0004\u0004$i\u0012\rA\u001b\t\u0004ORmHABBou\t\u0007!\u000eE\u0002h)\u007f$a\u0001b,;\u0005\u0004Q\u0007cA4\u0016\u0004\u00111Q\u0011\u0014\u001eC\u0002)\u00042aZK\u0004\t\u00191YJ\u000fb\u0001UB\u0019q-f\u0003\u0005\r\u001dU&H1\u0001k!\r9Ws\u0002\u0003\u0007\u0011OT$\u0019\u00016\u0011\u0007\u001d,\u001a\u0002\u0002\u0004\u000b2i\u0012\rA\u001b\t\u0004OV]AABFJu\t\u0007!\u000eE\u0002h+7!a!$\u0004;\u0005\u0004Q\u0007cA4\u0016 \u00111ar\u0014\u001eC\u0002)\u00042aZK\u0012\t\u0019\u0001JE\u000fb\u0001UB\u0019q-f\n\u0005\rI-!H1\u0001k!\r9W3\u0006\u0003\u0007'KT$\u0019\u00016\t\rIT\u00049AK\u0018!\u0015\u0001\u0017q\u0001Kq\u0011\u001d\t\u0019D\u000fa\u0002+g\u0001R\u0001YA\u0004)KDq!!%;\u0001\b):\u0004E\u0003a\u0003\u000f!J\u000fC\u0004\u0003\bi\u0002\u001d!f\u000f\u0011\u000b\u0001\f9\u0001&<\t\u000f\tU%\bq\u0001\u0016@A)\u0001-a\u0002\u0015r\"911\b\u001eA\u0004U\r\u0003#\u00021\u0002\bQU\bbBB}u\u0001\u000fQs\t\t\u0006A\u0006\u001dA\u0013 \u0005\b\t\u001fT\u00049AK&!\u0015\u0001\u0017q\u0001K\u007f\u0011\u001d)iL\u000fa\u0002+\u001f\u0002R\u0001YA\u0004+\u0003AqAb1;\u0001\b)\u001a\u0006E\u0003a\u0003\u000f)*\u0001C\u0004\bbj\u0002\u001d!f\u0016\u0011\u000b\u0001\f9!&\u0003\t\u000f%]!\bq\u0001\u0016\\A)\u0001-a\u0002\u0016\u000e!9!R\r\u001eA\u0004U}\u0003#\u00021\u0002\bUE\u0001bBFfu\u0001\u000fQ3\r\t\u0006A\u0006\u001dQS\u0003\u0005\b\u001b\u0013R\u00049AK4!\u0015\u0001\u0017qAK\r\u0011\u001dqyN\u000fa\u0002+W\u0002R\u0001YA\u0004+;Aq\u0001%$;\u0001\b)z\u0007E\u0003a\u0003\u000f)\n\u0003C\u0004\u0013Ti\u0002\u001d!f\u001d\u0011\u000b\u0001\f9!&\n\t\u000fQE\"\bq\u0001\u0016xA)\u0001-a\u0002\u0016*\u000593-\u0019;t\u0017\u0016\u0014h.\u001a7Ti\u0012\u001cu.\\7vi\u0006$\u0018N^3He>,\bOR8s)V\u0004H.\u001a\u001a1+)*j(&#\u0016\u000eVEUSSKM+;+\n+&*\u0016*V5V\u0013WK[+s+j,&1\u0016FV%WSZKi++$\"&f \u0016ZVuW\u0013]Ks+S,j/&=\u0016vVeXS L\u0001-\u000b1JA&\u0004\u0017\u0012YUa\u0013\u0004L\u000f-C1*\u0003\u0005\u0003aCV\u0005\u0005c\u000b(\u0016\u0004V\u001dU3RKH+'+:*f'\u0016 V\rVsUKV+_+\u001a,f.\u0016<V}V3YKd+\u0017,z-f5\n\u0007U\u0015uJA\u0004UkBdWM\r\u0019\u0011\u0007\u001d,J\tB\u0003jw\t\u0007!\u000eE\u0002h+\u001b#a!a\u000b<\u0005\u0004Q\u0007cA4\u0016\u0012\u00121\u0011QQ\u001eC\u0002)\u00042aZKK\t\u0019\t9p\u000fb\u0001UB\u0019q-&'\u0005\r\t\u00055H1\u0001k!\r9WS\u0014\u0003\u0007\u0007GY$\u0019\u00016\u0011\u0007\u001d,\n\u000b\u0002\u0004\u0004^n\u0012\rA\u001b\t\u0004OV\u0015FA\u0002CXw\t\u0007!\u000eE\u0002h+S#a!\"'<\u0005\u0004Q\u0007cA4\u0016.\u00121a1T\u001eC\u0002)\u00042aZKY\t\u00199)l\u000fb\u0001UB\u0019q-&.\u0005\r!\u001d8H1\u0001k!\r9W\u0013\u0018\u0003\u0007\u0015cY$\u0019\u00016\u0011\u0007\u001d,j\f\u0002\u0004\f\u0014n\u0012\rA\u001b\t\u0004OV\u0005GABG\u0007w\t\u0007!\u000eE\u0002h+\u000b$aAd(<\u0005\u0004Q\u0007cA4\u0016J\u00121\u0001\u0013J\u001eC\u0002)\u00042aZKg\t\u0019\u0011Za\u000fb\u0001UB\u0019q-&5\u0005\rM\u00158H1\u0001k!\r9WS\u001b\u0003\u0007+/\\$\u0019\u00016\u0003\u0007\u0005\u000b\u0014\b\u0003\u0004sw\u0001\u000fQ3\u001c\t\u0005A\u0006,:\tC\u0004\u00024m\u0002\u001d!f8\u0011\t\u0001\fW3\u0012\u0005\b\u0003#[\u00049AKr!\u0011\u0001\u0017-f$\t\u000f\t\u001d1\bq\u0001\u0016hB!\u0001-YKJ\u0011\u001d\u0011)j\u000fa\u0002+W\u0004B\u0001Y1\u0016\u0018\"911H\u001eA\u0004U=\b\u0003\u00021b+7Cqa!?<\u0001\b)\u001a\u0010\u0005\u0003aCV}\u0005b\u0002Chw\u0001\u000fQs\u001f\t\u0005A\u0006,\u001a\u000bC\u0004\u0006>n\u0002\u001d!f?\u0011\t\u0001\fWs\u0015\u0005\b\r\u0007\\\u00049AK\u0000!\u0011\u0001\u0017-f+\t\u000f\u001d\u00058\bq\u0001\u0017\u0004A!\u0001-YKX\u0011\u001dI9b\u000fa\u0002-\u000f\u0001B\u0001Y1\u00164\"9!RM\u001eA\u0004Y-\u0001\u0003\u00021b+oCqac3<\u0001\b1z\u0001\u0005\u0003aCVm\u0006bBG%w\u0001\u000fa3\u0003\t\u0005A\u0006,z\fC\u0004\u000f`n\u0002\u001dAf\u0006\u0011\t\u0001\fW3\u0019\u0005\b!\u001b[\u00049\u0001L\u000e!\u0011\u0001\u0017-f2\t\u000fIM3\bq\u0001\u0017 A!\u0001-YKf\u0011\u001d!\nd\u000fa\u0002-G\u0001B\u0001Y1\u0016P\"9asE\u001eA\u0004Y%\u0012aA!2sA!\u0001-YKj\u0003q\u0019\u0017\r^:LKJtW\r\\*uI>\u0013H-\u001a:G_J$V\u000f\u001d7feA*\"Ff\f\u00178Ymbs\bL\"-\u000f2ZEf\u0014\u0017TY]c3\fL0-G2:Gf\u001b\u0017pYMds\u000fL>-\u007f2\u001a\t\u0006\u0016\u00172Y\u0015e\u0013\u0012LG-#3*J&'\u0017\u001eZ\u0005fS\u0015LU-[3\nL&.\u0017:Zuf\u0013\u0019Lc-\u00134jM&5\u0011\t\u0001Dh3\u0007\t,\u001dV\reS\u0007L\u001d-{1\nE&\u0012\u0017JY5c\u0013\u000bL+-32jF&\u0019\u0017fY%dS\u000eL9-k2JH& \u0017\u0002B\u0019qMf\u000e\u0005\u000b%d$\u0019\u00016\u0011\u0007\u001d4Z\u0004\u0002\u0004\u0002,q\u0012\rA\u001b\t\u0004OZ}BABACy\t\u0007!\u000eE\u0002h-\u0007\"a!a>=\u0005\u0004Q\u0007cA4\u0017H\u00111!\u0011\u0011\u001fC\u0002)\u00042a\u001aL&\t\u0019\u0019\u0019\u0003\u0010b\u0001UB\u0019qMf\u0014\u0005\r\ruGH1\u0001k!\r9g3\u000b\u0003\u0007\t_c$\u0019\u00016\u0011\u0007\u001d4:\u0006\u0002\u0004\u0006\u001ar\u0012\rA\u001b\t\u0004OZmCA\u0002DNy\t\u0007!\u000eE\u0002h-?\"aa\".=\u0005\u0004Q\u0007cA4\u0017d\u00111\u0001r\u001d\u001fC\u0002)\u00042a\u001aL4\t\u0019Q\t\u0004\u0010b\u0001UB\u0019qMf\u001b\u0005\r-MEH1\u0001k!\r9gs\u000e\u0003\u0007\u001b\u001ba$\u0019\u00016\u0011\u0007\u001d4\u001a\b\u0002\u0004\u000f r\u0012\rA\u001b\t\u0004OZ]DA\u0002I%y\t\u0007!\u000eE\u0002h-w\"aAe\u0003=\u0005\u0004Q\u0007cA4\u0017\u0000\u001111S\u001d\u001fC\u0002)\u00042a\u001aLB\t\u0019):\u000e\u0010b\u0001U\"1!\u000f\u0010a\u0002-\u000f\u0003B\u0001\u0019=\u00176!9\u00111\u0007\u001fA\u0004Y-\u0005\u0003\u00021y-sAq!!%=\u0001\b1z\t\u0005\u0003aqZu\u0002b\u0002B\u0004y\u0001\u000fa3\u0013\t\u0005Ab4\n\u0005C\u0004\u0003\u0016r\u0002\u001dAf&\u0011\t\u0001DhS\t\u0005\b\u0007wa\u00049\u0001LN!\u0011\u0001\u0007P&\u0013\t\u000f\reH\bq\u0001\u0017 B!\u0001\r\u001fL'\u0011\u001d!y\r\u0010a\u0002-G\u0003B\u0001\u0019=\u0017R!9QQ\u0018\u001fA\u0004Y\u001d\u0006\u0003\u00021y-+BqAb1=\u0001\b1Z\u000b\u0005\u0003aqZe\u0003bBDqy\u0001\u000fas\u0016\t\u0005Ab4j\u0006C\u0004\n\u0018q\u0002\u001dAf-\u0011\t\u0001Dh\u0013\r\u0005\b\u0015Kb\u00049\u0001L\\!\u0011\u0001\u0007P&\u001a\t\u000f--G\bq\u0001\u0017<B!\u0001\r\u001fL5\u0011\u001diI\u0005\u0010a\u0002-\u007f\u0003B\u0001\u0019=\u0017n!9ar\u001c\u001fA\u0004Y\r\u0007\u0003\u00021y-cBq\u0001%$=\u0001\b1:\r\u0005\u0003aqZU\u0004b\u0002J*y\u0001\u000fa3\u001a\t\u0005Ab4J\bC\u0004\u00152q\u0002\u001dAf4\u0011\t\u0001DhS\u0010\u0005\b-Oa\u00049\u0001Lj!\u0011\u0001\u0007P&!\u0002S\r\fGo]&fe:,Gn\u0015;e\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.\u001a\u001a1+)2JN&9\u0017fZ%hS\u001eLy-k4JP&@\u0018\u0002]\u0015q\u0013BL\u0007/#9*b&\u0007\u0018\u001e]\u0005rSEL\u0015/[!\"Ff7\u00180]MrsGL\u001e/\u007f9\u001aef\u0012\u0018L]=s3KL,/7:zff\u0019\u0018h]-tsNL:/o:Z\bE\u0003a\u0003\u000f1j\u000eE\u0016O+\u00073zNf9\u0017hZ-hs\u001eLz-o4ZPf@\u0018\u0004]\u001dq3BL\b/'9:bf\u0007\u0018 ]\rrsEL\u0016!\r9g\u0013\u001d\u0003\u0006Sv\u0012\rA\u001b\t\u0004OZ\u0015HABA\u0016{\t\u0007!\u000eE\u0002h-S$a!!\">\u0005\u0004Q\u0007cA4\u0017n\u00121\u0011q_\u001fC\u0002)\u00042a\u001aLy\t\u0019\u0011\t)\u0010b\u0001UB\u0019qM&>\u0005\r\r\rRH1\u0001k!\r9g\u0013 \u0003\u0007\u0007;l$\u0019\u00016\u0011\u0007\u001d4j\u0010\u0002\u0004\u00050v\u0012\rA\u001b\t\u0004O^\u0005AABCM{\t\u0007!\u000eE\u0002h/\u000b!aAb'>\u0005\u0004Q\u0007cA4\u0018\n\u00111qQW\u001fC\u0002)\u00042aZL\u0007\t\u0019A9/\u0010b\u0001UB\u0019qm&\u0005\u0005\r)ERH1\u0001k!\r9wS\u0003\u0003\u0007\u0017'k$\u0019\u00016\u0011\u0007\u001d<J\u0002\u0002\u0004\u000e\u000eu\u0012\rA\u001b\t\u0004O^uAA\u0002HP{\t\u0007!\u000eE\u0002h/C!a\u0001%\u0013>\u0005\u0004Q\u0007cA4\u0018&\u00111!3B\u001fC\u0002)\u00042aZL\u0015\t\u0019\u0019*/\u0010b\u0001UB\u0019qm&\f\u0005\rU]WH1\u0001k\u0011\u0019\u0011X\bq\u0001\u00182A)\u0001-a\u0002\u0017`\"9\u00111G\u001fA\u0004]U\u0002#\u00021\u0002\bY\r\bbBAI{\u0001\u000fq\u0013\b\t\u0006A\u0006\u001das\u001d\u0005\b\u0005\u000fi\u00049AL\u001f!\u0015\u0001\u0017q\u0001Lv\u0011\u001d\u0011)*\u0010a\u0002/\u0003\u0002R\u0001YA\u0004-_Dqaa\u000f>\u0001\b9*\u0005E\u0003a\u0003\u000f1\u001a\u0010C\u0004\u0004zv\u0002\u001da&\u0013\u0011\u000b\u0001\f9Af>\t\u000f\u0011=W\bq\u0001\u0018NA)\u0001-a\u0002\u0017|\"9QQX\u001fA\u0004]E\u0003#\u00021\u0002\bY}\bb\u0002Db{\u0001\u000fqS\u000b\t\u0006A\u0006\u001dq3\u0001\u0005\b\u000fCl\u00049AL-!\u0015\u0001\u0017qAL\u0004\u0011\u001dI9\"\u0010a\u0002/;\u0002R\u0001YA\u0004/\u0017AqA#\u001a>\u0001\b9\n\u0007E\u0003a\u0003\u000f9z\u0001C\u0004\fLv\u0002\u001da&\u001a\u0011\u000b\u0001\f9af\u0005\t\u000f5%S\bq\u0001\u0018jA)\u0001-a\u0002\u0018\u0018!9ar\\\u001fA\u0004]5\u0004#\u00021\u0002\b]m\u0001b\u0002IG{\u0001\u000fq\u0013\u000f\t\u0006A\u0006\u001dqs\u0004\u0005\b%'j\u00049AL;!\u0015\u0001\u0017qAL\u0012\u0011\u001d!\n$\u0010a\u0002/s\u0002R\u0001YA\u0004/OAqAf\n>\u0001\b9j\bE\u0003a\u0003\u000f9Z#A\u0014dCR\u001c8*\u001a:oK2\u001cF\u000fZ\"p[6,H/\u0019;jm\u0016<%o\\;q\r>\u0014H+\u001e9mKJ\nT\u0003LLB/\u001f;\u001ajf&\u0018\u001c^}u3ULT/W;zkf-\u00188^mvsXLb/\u000f<Zmf4\u0018T^]w3\\Lp)1:*if9\u0018h^-xs^Lz/o<Zpf@\u0019\u0004a\u001d\u00014\u0002M\b1'A:\u0002g\u0007\u0019 a\r\u0002t\u0005M\u00161_A\u001a\u0004\u0005\u0003aC^\u001d\u0005#\f(\u0018\n^5u\u0013SLK/3;jj&)\u0018&^%vSVLY/k;Jl&0\u0018B^\u0015w\u0013ZLg/#<*n&7\u0018^&\u0019q3R(\u0003\u000fQ+\b\u000f\\33cA\u0019qmf$\u0005\u000b%t$\u0019\u00016\u0011\u0007\u001d<\u001a\n\u0002\u0004\u0002,y\u0012\rA\u001b\t\u0004O^]EABAC}\t\u0007!\u000eE\u0002h/7#a!a>?\u0005\u0004Q\u0007cA4\u0018 \u00121!\u0011\u0011 C\u0002)\u00042aZLR\t\u0019\u0019\u0019C\u0010b\u0001UB\u0019qmf*\u0005\r\rugH1\u0001k!\r9w3\u0016\u0003\u0007\t_s$\u0019\u00016\u0011\u0007\u001d<z\u000b\u0002\u0004\u0006\u001az\u0012\rA\u001b\t\u0004O^MFA\u0002DN}\t\u0007!\u000eE\u0002h/o#aa\".?\u0005\u0004Q\u0007cA4\u0018<\u00121\u0001r\u001d C\u0002)\u00042aZL`\t\u0019Q\tD\u0010b\u0001UB\u0019qmf1\u0005\r-MeH1\u0001k!\r9ws\u0019\u0003\u0007\u001b\u001bq$\u0019\u00016\u0011\u0007\u001d<Z\r\u0002\u0004\u000f z\u0012\rA\u001b\t\u0004O^=GA\u0002I%}\t\u0007!\u000eE\u0002h/'$aAe\u0003?\u0005\u0004Q\u0007cA4\u0018X\u001211S\u001d C\u0002)\u00042aZLn\t\u0019):N\u0010b\u0001UB\u0019qmf8\u0005\r]\u0005hH1\u0001k\u0005\r\t%\u0007\r\u0005\u0007ez\u0002\u001da&:\u0011\t\u0001\fwS\u0012\u0005\b\u0003gq\u00049ALu!\u0011\u0001\u0017m&%\t\u000f\u0005Ee\bq\u0001\u0018nB!\u0001-YLK\u0011\u001d\u00119A\u0010a\u0002/c\u0004B\u0001Y1\u0018\u001a\"9!Q\u0013 A\u0004]U\b\u0003\u00021b/;Cqaa\u000f?\u0001\b9J\u0010\u0005\u0003aC^\u0005\u0006bBB}}\u0001\u000fqS \t\u0005A\u0006<*\u000bC\u0004\u0005Pz\u0002\u001d\u0001'\u0001\u0011\t\u0001\fw\u0013\u0016\u0005\b\u000b{s\u00049\u0001M\u0003!\u0011\u0001\u0017m&,\t\u000f\u0019\rg\bq\u0001\u0019\nA!\u0001-YLY\u0011\u001d9\tO\u0010a\u00021\u001b\u0001B\u0001Y1\u00186\"9\u0011r\u0003 A\u0004aE\u0001\u0003\u00021b/sCqA#\u001a?\u0001\bA*\u0002\u0005\u0003aC^u\u0006bBFf}\u0001\u000f\u0001\u0014\u0004\t\u0005A\u0006<\n\rC\u0004\u000eJy\u0002\u001d\u0001'\b\u0011\t\u0001\fwS\u0019\u0005\b\u001d?t\u00049\u0001M\u0011!\u0011\u0001\u0017m&3\t\u000fA5e\bq\u0001\u0019&A!\u0001-YLg\u0011\u001d\u0011\u001aF\u0010a\u00021S\u0001B\u0001Y1\u0018R\"9A\u0013\u0007 A\u0004a5\u0002\u0003\u00021b/+DqAf\n?\u0001\bA\n\u0004\u0005\u0003aC^e\u0007b\u0002M\u001b}\u0001\u000f\u0001tG\u0001\u0004\u0003J\u0002\u0004\u0003\u00021b/;\fAdY1ug.+'O\\3m'R$wJ\u001d3fe\u001a{'\u000fV;qY\u0016\u0014\u0014'\u0006\u0017\u0019>a\u0015\u0003\u0014\nM'1#B*\u0006'\u0017\u0019^a\u0005\u0004T\rM51[B\n\b'\u001e\u0019zau\u0004\u0014\u0011MC1\u0013Cj\t'%\u0019\u0016Ra\u0003t\bML17Cz\ng)\u0019(b-\u0006t\u0016MZ1oCZ\fg0\u0019Db\u001d\u00074\u001aMh1'D:\u000eg7\u0019`b\r\bt\u001d\t\u0005AbD\n\u0005E\u0017O/\u0013C\u001a\u0005g\u0012\u0019La=\u00034\u000bM,17Bz\u0006g\u0019\u0019ha-\u0004t\u000eM:1oBZ\bg \u0019\u0004b\u001d\u00054\u0012MH1'\u00032a\u001aM#\t\u0015IwH1\u0001k!\r9\u0007\u0014\n\u0003\u0007\u0003Wy$\u0019\u00016\u0011\u0007\u001dDj\u0005\u0002\u0004\u0002\u0006~\u0012\rA\u001b\t\u0004ObECABA|\u007f\t\u0007!\u000eE\u0002h1+\"aA!!@\u0005\u0004Q\u0007cA4\u0019Z\u0011111E C\u0002)\u00042a\u001aM/\t\u0019\u0019in\u0010b\u0001UB\u0019q\r'\u0019\u0005\r\u0011=vH1\u0001k!\r9\u0007T\r\u0003\u0007\u000b3{$\u0019\u00016\u0011\u0007\u001dDJ\u0007\u0002\u0004\u0007\u001c~\u0012\rA\u001b\t\u0004Ob5DABD[\u007f\t\u0007!\u000eE\u0002h1c\"a\u0001c:@\u0005\u0004Q\u0007cA4\u0019v\u00111!\u0012G C\u0002)\u00042a\u001aM=\t\u0019Y\u0019j\u0010b\u0001UB\u0019q\r' \u0005\r55qH1\u0001k!\r9\u0007\u0014\u0011\u0003\u0007\u001d?{$\u0019\u00016\u0011\u0007\u001dD*\t\u0002\u0004\u0011J}\u0012\rA\u001b\t\u0004Ob%EA\u0002J\u0006\u007f\t\u0007!\u000eE\u0002h1\u001b#aa%:@\u0005\u0004Q\u0007cA4\u0019\u0012\u00121Qs[ C\u0002)\u00042a\u001aMK\t\u00199\no\u0010b\u0001U\"1!o\u0010a\u000213\u0003B\u0001\u0019=\u0019D!9\u00111G A\u0004au\u0005\u0003\u00021y1\u000fBq!!%@\u0001\bA\n\u000b\u0005\u0003aqb-\u0003b\u0002B\u0004\u007f\u0001\u000f\u0001T\u0015\t\u0005AbDz\u0005C\u0004\u0003\u0016~\u0002\u001d\u0001'+\u0011\t\u0001D\b4\u000b\u0005\b\u0007wy\u00049\u0001MW!\u0011\u0001\u0007\u0010g\u0016\t\u000f\rex\bq\u0001\u00192B!\u0001\r\u001fM.\u0011\u001d!ym\u0010a\u00021k\u0003B\u0001\u0019=\u0019`!9QQX A\u0004ae\u0006\u0003\u00021y1GBqAb1@\u0001\bAj\f\u0005\u0003aqb\u001d\u0004bBDq\u007f\u0001\u000f\u0001\u0014\u0019\t\u0005AbDZ\u0007C\u0004\n\u0018}\u0002\u001d\u0001'2\u0011\t\u0001D\bt\u000e\u0005\b\u0015Kz\u00049\u0001Me!\u0011\u0001\u0007\u0010g\u001d\t\u000f--w\bq\u0001\u0019NB!\u0001\r\u001fM<\u0011\u001diIe\u0010a\u00021#\u0004B\u0001\u0019=\u0019|!9ar\\ A\u0004aU\u0007\u0003\u00021y1\u007fBq\u0001%$@\u0001\bAJ\u000e\u0005\u0003aqb\r\u0005b\u0002J*\u007f\u0001\u000f\u0001T\u001c\t\u0005AbD:\tC\u0004\u00152}\u0002\u001d\u0001'9\u0011\t\u0001D\b4\u0012\u0005\b-Oy\u00049\u0001Ms!\u0011\u0001\u0007\u0010g$\t\u000faUr\bq\u0001\u0019jB!\u0001\r\u001fMJ\u0003%\u001a\u0017\r^:LKJtW\r\\*uI\n{WO\u001c3fIN+W.\u001b7biRL7-\u001a$peR+\b\u000f\\33cUa\u0003t\u001eM|1wDz0g\u0001\u001a\be-\u0011tBM\n3/IZ\"g\b\u001a$e\u001d\u00124FM\u00183gI:$g\u000f\u001a@e\r\u0013t\t\u000b-1cLJ%'\u0014\u001aReU\u0013\u0014LM/3CJ*''\u001b\u001aneE\u0014TOM=3{J\n)'\"\u001a\nf5\u0015\u0014SMK33\u0003R\u0001YA\u00041g\u0004RFTLE1kDJ\u0010'@\u001a\u0002e\u0015\u0011\u0014BM\u00073#I*\"'\u0007\u001a\u001ee\u0005\u0012TEM\u00153[I\n$'\u000e\u001a:eu\u0012\u0014IM#!\r9\u0007t\u001f\u0003\u0006S\u0002\u0013\rA\u001b\t\u0004ObmHABA\u0016\u0001\n\u0007!\u000eE\u0002h1\u007f$a!!\"A\u0005\u0004Q\u0007cA4\u001a\u0004\u00111\u0011q\u001f!C\u0002)\u00042aZM\u0004\t\u0019\u0011\t\t\u0011b\u0001UB\u0019q-g\u0003\u0005\r\r\r\u0002I1\u0001k!\r9\u0017t\u0002\u0003\u0007\u0007;\u0004%\u0019\u00016\u0011\u0007\u001dL\u001a\u0002\u0002\u0004\u00050\u0002\u0013\rA\u001b\t\u0004Of]AABCM\u0001\n\u0007!\u000eE\u0002h37!aAb'A\u0005\u0004Q\u0007cA4\u001a \u00111qQ\u0017!C\u0002)\u00042aZM\u0012\t\u0019A9\u000f\u0011b\u0001UB\u0019q-g\n\u0005\r)E\u0002I1\u0001k!\r9\u00174\u0006\u0003\u0007\u0017'\u0003%\u0019\u00016\u0011\u0007\u001dLz\u0003\u0002\u0004\u000e\u000e\u0001\u0013\rA\u001b\t\u0004OfMBA\u0002HP\u0001\n\u0007!\u000eE\u0002h3o!a\u0001%\u0013A\u0005\u0004Q\u0007cA4\u001a<\u00111!3\u0002!C\u0002)\u00042aZM \t\u0019\u0019*\u000f\u0011b\u0001UB\u0019q-g\u0011\u0005\rU]\u0007I1\u0001k!\r9\u0017t\t\u0003\u0007/C\u0004%\u0019\u00016\t\rI\u0004\u00059AM&!\u0015\u0001\u0017q\u0001M{\u0011\u001d\t\u0019\u0004\u0011a\u00023\u001f\u0002R\u0001YA\u00041sDq!!%A\u0001\bI\u001a\u0006E\u0003a\u0003\u000fAj\u0010C\u0004\u0003\b\u0001\u0003\u001d!g\u0016\u0011\u000b\u0001\f9!'\u0001\t\u000f\tU\u0005\tq\u0001\u001a\\A)\u0001-a\u0002\u001a\u0006!911\b!A\u0004e}\u0003#\u00021\u0002\be%\u0001bBB}\u0001\u0002\u000f\u00114\r\t\u0006A\u0006\u001d\u0011T\u0002\u0005\b\t\u001f\u0004\u00059AM4!\u0015\u0001\u0017qAM\t\u0011\u001d)i\f\u0011a\u00023W\u0002R\u0001YA\u00043+AqAb1A\u0001\bIz\u0007E\u0003a\u0003\u000fIJ\u0002C\u0004\bb\u0002\u0003\u001d!g\u001d\u0011\u000b\u0001\f9!'\b\t\u000f%]\u0001\tq\u0001\u001axA)\u0001-a\u0002\u001a\"!9!R\r!A\u0004em\u0004#\u00021\u0002\be\u0015\u0002bBFf\u0001\u0002\u000f\u0011t\u0010\t\u0006A\u0006\u001d\u0011\u0014\u0006\u0005\b\u001b\u0013\u0002\u00059AMB!\u0015\u0001\u0017qAM\u0017\u0011\u001dqy\u000e\u0011a\u00023\u000f\u0003R\u0001YA\u00043cAq\u0001%$A\u0001\bIZ\tE\u0003a\u0003\u000fI*\u0004C\u0004\u0013T\u0001\u0003\u001d!g$\u0011\u000b\u0001\f9!'\u000f\t\u000fQE\u0002\tq\u0001\u001a\u0014B)\u0001-a\u0002\u001a>!9as\u0005!A\u0004e]\u0005#\u00021\u0002\be\u0005\u0003b\u0002M\u001b\u0001\u0002\u000f\u00114\u0014\t\u0006A\u0006\u001d\u0011TI\u0001(G\u0006$8oS3s]\u0016d7\u000b\u001e3D_6lW\u000f^1uSZ,wI]8va\u001a{'\u000fV;qY\u0016\u0014$'\u0006\u0018\u001a\"f5\u0016\u0014WM[3sKj,'1\u001aFf%\u0017TZMi3+LJ.'8\u001abf\u0015\u0018\u0014^Mw3cL*0'?\u001a~j\u0005ACLMR5\u000bQJA'\u0004\u001b\u0012iU!\u0014\u0004N\u000f5CQ*C'\u000b\u001b.iE\"T\u0007N\u001d5{Q\nE'\u0012\u001bJi5#\u0014\u000bN+53\u0002B\u0001Y1\u001a&Byc*g*\u001a,f=\u00164WM\\3wKz,g1\u001aHf-\u0017tZMj3/LZ.g8\u001adf\u001d\u00184^Mx3gL:0g?\u001a\u0000&\u0019\u0011\u0014V(\u0003\u000fQ+\b\u000f\\33eA\u0019q-',\u0005\u000b%\f%\u0019\u00016\u0011\u0007\u001dL\n\f\u0002\u0004\u0002,\u0005\u0013\rA\u001b\t\u0004OfUFABAC\u0003\n\u0007!\u000eE\u0002h3s#a!a>B\u0005\u0004Q\u0007cA4\u001a>\u00121!\u0011Q!C\u0002)\u00042aZMa\t\u0019\u0019\u0019#\u0011b\u0001UB\u0019q-'2\u0005\r\ru\u0017I1\u0001k!\r9\u0017\u0014\u001a\u0003\u0007\t_\u000b%\u0019\u00016\u0011\u0007\u001dLj\r\u0002\u0004\u0006\u001a\u0006\u0013\rA\u001b\t\u0004OfEGA\u0002DN\u0003\n\u0007!\u000eE\u0002h3+$aa\".B\u0005\u0004Q\u0007cA4\u001aZ\u00121\u0001r]!C\u0002)\u00042aZMo\t\u0019Q\t$\u0011b\u0001UB\u0019q-'9\u0005\r-M\u0015I1\u0001k!\r9\u0017T\u001d\u0003\u0007\u001b\u001b\t%\u0019\u00016\u0011\u0007\u001dLJ\u000f\u0002\u0004\u000f \u0006\u0013\rA\u001b\t\u0004Of5HA\u0002I%\u0003\n\u0007!\u000eE\u0002h3c$aAe\u0003B\u0005\u0004Q\u0007cA4\u001av\u001211S]!C\u0002)\u00042aZM}\t\u0019):.\u0011b\u0001UB\u0019q-'@\u0005\r]\u0005\u0018I1\u0001k!\r9'\u0014\u0001\u0003\u00075\u0007\t%\u0019\u00016\u0003\u0007\u0005\u0013\u0014\u0007\u0003\u0004s\u0003\u0002\u000f!t\u0001\t\u0005A\u0006LZ\u000bC\u0004\u00024\u0005\u0003\u001dAg\u0003\u0011\t\u0001\f\u0017t\u0016\u0005\b\u0003#\u000b\u00059\u0001N\b!\u0011\u0001\u0017-g-\t\u000f\t\u001d\u0011\tq\u0001\u001b\u0014A!\u0001-YM\\\u0011\u001d\u0011)*\u0011a\u00025/\u0001B\u0001Y1\u001a<\"911H!A\u0004im\u0001\u0003\u00021b3\u007fCqa!?B\u0001\bQz\u0002\u0005\u0003aCf\r\u0007b\u0002Ch\u0003\u0002\u000f!4\u0005\t\u0005A\u0006L:\rC\u0004\u0006>\u0006\u0003\u001dAg\n\u0011\t\u0001\f\u00174\u001a\u0005\b\r\u0007\f\u00059\u0001N\u0016!\u0011\u0001\u0017-g4\t\u000f\u001d\u0005\u0018\tq\u0001\u001b0A!\u0001-YMj\u0011\u001dI9\"\u0011a\u00025g\u0001B\u0001Y1\u001aX\"9!RM!A\u0004i]\u0002\u0003\u00021b37Dqac3B\u0001\bQZ\u0004\u0005\u0003aCf}\u0007bBG%\u0003\u0002\u000f!t\b\t\u0005A\u0006L\u001a\u000fC\u0004\u000f`\u0006\u0003\u001dAg\u0011\u0011\t\u0001\f\u0017t\u001d\u0005\b!\u001b\u000b\u00059\u0001N$!\u0011\u0001\u0017-g;\t\u000fIM\u0013\tq\u0001\u001bLA!\u0001-YMx\u0011\u001d!\n$\u0011a\u00025\u001f\u0002B\u0001Y1\u001at\"9asE!A\u0004iM\u0003\u0003\u00021b3oDq\u0001'\u000eB\u0001\bQ:\u0006\u0005\u0003aCfm\bb\u0002N.\u0003\u0002\u000f!TL\u0001\u0004\u0003J\n\u0004\u0003\u00021b3\u007f\fAdY1ug.+'O\\3m'R$wJ\u001d3fe\u001a{'\u000fV;qY\u0016\u0014$'\u0006\u0018\u001bdi-$t\u000eN:5oRZHg \u001b\u0004j\u001d%4\u0012NH5'S:Jg'\u001b j\r&t\u0015NV5_S\u001aLg.\u001b<j}FC\fN35\u0003T*M'3\u001bNjE'T\u001bNm5;T\nO':\u001bjj5(\u0014\u001fN{5sTjp'\u0001\u001c\u0006m%1TBN\t7+\u0001B\u0001\u0019=\u001bhAyc*g*\u001bji5$\u0014\u000fN;5sRjH'!\u001b\u0006j%%T\u0012NI5+SJJ'(\u001b\"j\u0015&\u0014\u0016NW5cS*L'/\u001b>B\u0019qMg\u001b\u0005\u000b%\u0014%\u0019\u00016\u0011\u0007\u001dTz\u0007\u0002\u0004\u0002,\t\u0013\rA\u001b\t\u0004OjMDABAC\u0005\n\u0007!\u000eE\u0002h5o\"a!a>C\u0005\u0004Q\u0007cA4\u001b|\u00111!\u0011\u0011\"C\u0002)\u00042a\u001aN@\t\u0019\u0019\u0019C\u0011b\u0001UB\u0019qMg!\u0005\r\ru'I1\u0001k!\r9't\u0011\u0003\u0007\t_\u0013%\u0019\u00016\u0011\u0007\u001dTZ\t\u0002\u0004\u0006\u001a\n\u0013\rA\u001b\t\u0004Oj=EA\u0002DN\u0005\n\u0007!\u000eE\u0002h5'#aa\".C\u0005\u0004Q\u0007cA4\u001b\u0018\u00121\u0001r\u001d\"C\u0002)\u00042a\u001aNN\t\u0019Q\tD\u0011b\u0001UB\u0019qMg(\u0005\r-M%I1\u0001k!\r9'4\u0015\u0003\u0007\u001b\u001b\u0011%\u0019\u00016\u0011\u0007\u001dT:\u000b\u0002\u0004\u000f \n\u0013\rA\u001b\t\u0004Oj-FA\u0002I%\u0005\n\u0007!\u000eE\u0002h5_#aAe\u0003C\u0005\u0004Q\u0007cA4\u001b4\u001211S\u001d\"C\u0002)\u00042a\u001aN\\\t\u0019):N\u0011b\u0001UB\u0019qMg/\u0005\r]\u0005(I1\u0001k!\r9't\u0018\u0003\u00075\u0007\u0011%\u0019\u00016\t\rI\u0014\u00059\u0001Nb!\u0011\u0001\u0007P'\u001b\t\u000f\u0005M\"\tq\u0001\u001bHB!\u0001\r\u001fN7\u0011\u001d\t\tJ\u0011a\u00025\u0017\u0004B\u0001\u0019=\u001br!9!q\u0001\"A\u0004i=\u0007\u0003\u00021y5kBqA!&C\u0001\bQ\u001a\u000e\u0005\u0003aqje\u0004bBB\u001e\u0005\u0002\u000f!t\u001b\t\u0005AbTj\bC\u0004\u0004z\n\u0003\u001dAg7\u0011\t\u0001D(\u0014\u0011\u0005\b\t\u001f\u0014\u00059\u0001Np!\u0011\u0001\u0007P'\"\t\u000f\u0015u&\tq\u0001\u001bdB!\u0001\r\u001fNE\u0011\u001d1\u0019M\u0011a\u00025O\u0004B\u0001\u0019=\u001b\u000e\"9q\u0011\u001d\"A\u0004i-\b\u0003\u00021y5#Cq!c\u0006C\u0001\bQz\u000f\u0005\u0003aqjU\u0005b\u0002F3\u0005\u0002\u000f!4\u001f\t\u0005AbTJ\nC\u0004\fL\n\u0003\u001dAg>\u0011\t\u0001D(T\u0014\u0005\b\u001b\u0013\u0012\u00059\u0001N~!\u0011\u0001\u0007P')\t\u000f9}'\tq\u0001\u001b\u0000B!\u0001\r\u001fNS\u0011\u001d\u0001jI\u0011a\u00027\u0007\u0001B\u0001\u0019=\u001b*\"9!3\u000b\"A\u0004m\u001d\u0001\u0003\u00021y5[Cq\u0001&\rC\u0001\bYZ\u0001\u0005\u0003aqjE\u0006b\u0002L\u0014\u0005\u0002\u000f1t\u0002\t\u0005AbT*\fC\u0004\u00196\t\u0003\u001dag\u0005\u0011\t\u0001D(\u0014\u0018\u0005\b57\u0012\u00059AN\f!\u0011\u0001\u0007P'0\u0002S\r\fGo]&fe:,Gn\u0015;e\u0005>,h\u000eZ3e'\u0016l\u0017\u000e\\1ui&\u001cWMR8s)V\u0004H.\u001a\u001a3+9Zjb'\n\u001c*m52\u0014GN\u001b7sYjd'\u0011\u001cFm%3TJN)7+ZJf'\u0018\u001cbm\u00154\u0014NN77cZ*h'\u001f\u0015]m}14PN@7\u0007[:ig#\u001c\u0010nM5tSNN7?[\u001akg*\u001c,n=64WN\\7w[zlg1\u001cHn-7t\u001a\t\u0006A\u0006\u001d1\u0014\u0005\t0\u001df\u001d64EN\u00147WYzcg\r\u001c8mm2tHN\"7\u000fZZeg\u0014\u001cTm]34LN07GZ:gg\u001b\u001cpmM4t\u000f\t\u0004On\u0015B!B5D\u0005\u0004Q\u0007cA4\u001c*\u00111\u00111F\"C\u0002)\u00042aZN\u0017\t\u0019\t)i\u0011b\u0001UB\u0019qm'\r\u0005\r\u0005]8I1\u0001k!\r97T\u0007\u0003\u0007\u0005\u0003\u001b%\u0019\u00016\u0011\u0007\u001d\\J\u0004\u0002\u0004\u0004$\r\u0013\rA\u001b\t\u0004OnuBABBo\u0007\n\u0007!\u000eE\u0002h7\u0003\"a\u0001b,D\u0005\u0004Q\u0007cA4\u001cF\u00111Q\u0011T\"C\u0002)\u00042aZN%\t\u00191Yj\u0011b\u0001UB\u0019qm'\u0014\u0005\r\u001dU6I1\u0001k!\r97\u0014\u000b\u0003\u0007\u0011O\u001c%\u0019\u00016\u0011\u0007\u001d\\*\u0006\u0002\u0004\u000b2\r\u0013\rA\u001b\t\u0004OneCABFJ\u0007\n\u0007!\u000eE\u0002h7;\"a!$\u0004D\u0005\u0004Q\u0007cA4\u001cb\u00111arT\"C\u0002)\u00042aZN3\t\u0019\u0001Je\u0011b\u0001UB\u0019qm'\u001b\u0005\rI-1I1\u0001k!\r97T\u000e\u0003\u0007'K\u001c%\u0019\u00016\u0011\u0007\u001d\\\n\b\u0002\u0004\u0016X\u000e\u0013\rA\u001b\t\u0004OnUDABLq\u0007\n\u0007!\u000eE\u0002h7s\"aAg\u0001D\u0005\u0004Q\u0007B\u0002:D\u0001\bYj\bE\u0003a\u0003\u000fY\u001a\u0003C\u0004\u00024\r\u0003\u001da'!\u0011\u000b\u0001\f9ag\n\t\u000f\u0005E5\tq\u0001\u001c\u0006B)\u0001-a\u0002\u001c,!9!qA\"A\u0004m%\u0005#\u00021\u0002\bm=\u0002b\u0002BK\u0007\u0002\u000f1T\u0012\t\u0006A\u0006\u001d14\u0007\u0005\b\u0007w\u0019\u00059ANI!\u0015\u0001\u0017qAN\u001c\u0011\u001d\u0019Ip\u0011a\u00027+\u0003R\u0001YA\u00047wAq\u0001b4D\u0001\bYJ\nE\u0003a\u0003\u000fYz\u0004C\u0004\u0006>\u000e\u0003\u001da'(\u0011\u000b\u0001\f9ag\u0011\t\u000f\u0019\r7\tq\u0001\u001c\"B)\u0001-a\u0002\u001cH!9q\u0011]\"A\u0004m\u0015\u0006#\u00021\u0002\bm-\u0003bBE\f\u0007\u0002\u000f1\u0014\u0016\t\u0006A\u0006\u001d1t\n\u0005\b\u0015K\u001a\u00059ANW!\u0015\u0001\u0017qAN*\u0011\u001dYYm\u0011a\u00027c\u0003R\u0001YA\u00047/Bq!$\u0013D\u0001\bY*\fE\u0003a\u0003\u000fYZ\u0006C\u0004\u000f`\u000e\u0003\u001da'/\u0011\u000b\u0001\f9ag\u0018\t\u000fA55\tq\u0001\u001c>B)\u0001-a\u0002\u001cd!9!3K\"A\u0004m\u0005\u0007#\u00021\u0002\bm\u001d\u0004b\u0002K\u0019\u0007\u0002\u000f1T\u0019\t\u0006A\u0006\u001d14\u000e\u0005\b-O\u0019\u00059ANe!\u0015\u0001\u0017qAN8\u0011\u001dA*d\u0011a\u00027\u001b\u0004R\u0001YA\u00047gBqAg\u0017D\u0001\bY\n\u000eE\u0003a\u0003\u000fY:\b"
)
public interface TupleInstances extends TupleInstances1 {
   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple1$(final TupleInstances $this, final CommutativeGroup A0) {
      return $this.catsKernelStdCommutativeGroupForTuple1(A0);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple1(final CommutativeGroup A0) {
      return new CommutativeGroup(A0) {
         private final CommutativeGroup A0$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple1 combine(final Tuple1 x, final Tuple1 y) {
            return new Tuple1(this.A0$1.combine(x._1(), y._1()));
         }

         public Tuple1 empty() {
            return new Tuple1(this.A0$1.empty());
         }

         public Tuple1 inverse(final Tuple1 x) {
            return new Tuple1(this.A0$1.inverse(x._1()));
         }

         public {
            this.A0$1 = A0$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple1$(final TupleInstances $this, final Order A0) {
      return $this.catsKernelStdOrderForTuple1(A0);
   }

   default Order catsKernelStdOrderForTuple1(final Order A0) {
      return new Order(A0) {
         private final Order A0$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple1 x, final Tuple1 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$2.compare(x._1(), y._1())}), (JFunction1.mcZI.sp)(x$1) -> x$1 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$2 = A0$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple1$(final TupleInstances $this, final BoundedSemilattice A0) {
      return $this.catsKernelStdBoundedSemilatticeForTuple1(A0);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple1(final BoundedSemilattice A0) {
      return new BoundedSemilattice(A0) {
         private final BoundedSemilattice A0$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple1 combine(final Tuple1 x, final Tuple1 y) {
            return new Tuple1(this.A0$3.combine(x._1(), y._1()));
         }

         public Tuple1 empty() {
            return new Tuple1(this.A0$3.empty());
         }

         public {
            this.A0$3 = A0$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple2$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1) {
      return $this.catsKernelStdCommutativeGroupForTuple2(A0, A1);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple2(final CommutativeGroup A0, final CommutativeGroup A1) {
      return new CommutativeGroup(A0, A1) {
         private final CommutativeGroup A0$4;
         private final CommutativeGroup A1$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple2 combine(final Tuple2 x, final Tuple2 y) {
            return new Tuple2(this.A0$4.combine(x._1(), y._1()), this.A1$1.combine(x._2(), y._2()));
         }

         public Tuple2 empty() {
            return new Tuple2(this.A0$4.empty(), this.A1$1.empty());
         }

         public Tuple2 inverse(final Tuple2 x) {
            return new Tuple2(this.A0$4.inverse(x._1()), this.A1$1.inverse(x._2()));
         }

         public {
            this.A0$4 = A0$4;
            this.A1$1 = A1$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple2$(final TupleInstances $this, final Order A0, final Order A1) {
      return $this.catsKernelStdOrderForTuple2(A0, A1);
   }

   default Order catsKernelStdOrderForTuple2(final Order A0, final Order A1) {
      return new Order(A0, A1) {
         private final Order A0$5;
         private final Order A1$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple2 x, final Tuple2 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$5.compare(x._1(), y._1()), this.A1$2.compare(x._2(), y._2())}), (JFunction1.mcZI.sp)(x$2) -> x$2 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$5 = A0$5;
            this.A1$2 = A1$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple2$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1) {
      return $this.catsKernelStdBoundedSemilatticeForTuple2(A0, A1);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple2(final BoundedSemilattice A0, final BoundedSemilattice A1) {
      return new BoundedSemilattice(A0, A1) {
         private final BoundedSemilattice A0$6;
         private final BoundedSemilattice A1$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple2 combine(final Tuple2 x, final Tuple2 y) {
            return new Tuple2(this.A0$6.combine(x._1(), y._1()), this.A1$3.combine(x._2(), y._2()));
         }

         public Tuple2 empty() {
            return new Tuple2(this.A0$6.empty(), this.A1$3.empty());
         }

         public {
            this.A0$6 = A0$6;
            this.A1$3 = A1$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple3$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2) {
      return $this.catsKernelStdCommutativeGroupForTuple3(A0, A1, A2);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple3(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2) {
      return new CommutativeGroup(A0, A1, A2) {
         private final CommutativeGroup A0$7;
         private final CommutativeGroup A1$4;
         private final CommutativeGroup A2$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple3 combine(final Tuple3 x, final Tuple3 y) {
            return new Tuple3(this.A0$7.combine(x._1(), y._1()), this.A1$4.combine(x._2(), y._2()), this.A2$1.combine(x._3(), y._3()));
         }

         public Tuple3 empty() {
            return new Tuple3(this.A0$7.empty(), this.A1$4.empty(), this.A2$1.empty());
         }

         public Tuple3 inverse(final Tuple3 x) {
            return new Tuple3(this.A0$7.inverse(x._1()), this.A1$4.inverse(x._2()), this.A2$1.inverse(x._3()));
         }

         public {
            this.A0$7 = A0$7;
            this.A1$4 = A1$4;
            this.A2$1 = A2$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple3$(final TupleInstances $this, final Order A0, final Order A1, final Order A2) {
      return $this.catsKernelStdOrderForTuple3(A0, A1, A2);
   }

   default Order catsKernelStdOrderForTuple3(final Order A0, final Order A1, final Order A2) {
      return new Order(A0, A1, A2) {
         private final Order A0$8;
         private final Order A1$5;
         private final Order A2$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple3 x, final Tuple3 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$8.compare(x._1(), y._1()), this.A1$5.compare(x._2(), y._2()), this.A2$2.compare(x._3(), y._3())}), (JFunction1.mcZI.sp)(x$3) -> x$3 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$8 = A0$8;
            this.A1$5 = A1$5;
            this.A2$2 = A2$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple3$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2) {
      return $this.catsKernelStdBoundedSemilatticeForTuple3(A0, A1, A2);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple3(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2) {
      return new BoundedSemilattice(A0, A1, A2) {
         private final BoundedSemilattice A0$9;
         private final BoundedSemilattice A1$6;
         private final BoundedSemilattice A2$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple3 combine(final Tuple3 x, final Tuple3 y) {
            return new Tuple3(this.A0$9.combine(x._1(), y._1()), this.A1$6.combine(x._2(), y._2()), this.A2$3.combine(x._3(), y._3()));
         }

         public Tuple3 empty() {
            return new Tuple3(this.A0$9.empty(), this.A1$6.empty(), this.A2$3.empty());
         }

         public {
            this.A0$9 = A0$9;
            this.A1$6 = A1$6;
            this.A2$3 = A2$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple4$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3) {
      return $this.catsKernelStdCommutativeGroupForTuple4(A0, A1, A2, A3);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple4(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3) {
      return new CommutativeGroup(A0, A1, A2, A3) {
         private final CommutativeGroup A0$10;
         private final CommutativeGroup A1$7;
         private final CommutativeGroup A2$4;
         private final CommutativeGroup A3$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple4 combine(final Tuple4 x, final Tuple4 y) {
            return new Tuple4(this.A0$10.combine(x._1(), y._1()), this.A1$7.combine(x._2(), y._2()), this.A2$4.combine(x._3(), y._3()), this.A3$1.combine(x._4(), y._4()));
         }

         public Tuple4 empty() {
            return new Tuple4(this.A0$10.empty(), this.A1$7.empty(), this.A2$4.empty(), this.A3$1.empty());
         }

         public Tuple4 inverse(final Tuple4 x) {
            return new Tuple4(this.A0$10.inverse(x._1()), this.A1$7.inverse(x._2()), this.A2$4.inverse(x._3()), this.A3$1.inverse(x._4()));
         }

         public {
            this.A0$10 = A0$10;
            this.A1$7 = A1$7;
            this.A2$4 = A2$4;
            this.A3$1 = A3$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple4$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3) {
      return $this.catsKernelStdOrderForTuple4(A0, A1, A2, A3);
   }

   default Order catsKernelStdOrderForTuple4(final Order A0, final Order A1, final Order A2, final Order A3) {
      return new Order(A0, A1, A2, A3) {
         private final Order A0$11;
         private final Order A1$8;
         private final Order A2$5;
         private final Order A3$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple4 x, final Tuple4 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$11.compare(x._1(), y._1()), this.A1$8.compare(x._2(), y._2()), this.A2$5.compare(x._3(), y._3()), this.A3$2.compare(x._4(), y._4())}), (JFunction1.mcZI.sp)(x$4) -> x$4 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$11 = A0$11;
            this.A1$8 = A1$8;
            this.A2$5 = A2$5;
            this.A3$2 = A3$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple4$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3) {
      return $this.catsKernelStdBoundedSemilatticeForTuple4(A0, A1, A2, A3);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple4(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3) {
      return new BoundedSemilattice(A0, A1, A2, A3) {
         private final BoundedSemilattice A0$12;
         private final BoundedSemilattice A1$9;
         private final BoundedSemilattice A2$6;
         private final BoundedSemilattice A3$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple4 combine(final Tuple4 x, final Tuple4 y) {
            return new Tuple4(this.A0$12.combine(x._1(), y._1()), this.A1$9.combine(x._2(), y._2()), this.A2$6.combine(x._3(), y._3()), this.A3$3.combine(x._4(), y._4()));
         }

         public Tuple4 empty() {
            return new Tuple4(this.A0$12.empty(), this.A1$9.empty(), this.A2$6.empty(), this.A3$3.empty());
         }

         public {
            this.A0$12 = A0$12;
            this.A1$9 = A1$9;
            this.A2$6 = A2$6;
            this.A3$3 = A3$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple5$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4) {
      return $this.catsKernelStdCommutativeGroupForTuple5(A0, A1, A2, A3, A4);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple5(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4) {
      return new CommutativeGroup(A0, A1, A2, A3, A4) {
         private final CommutativeGroup A0$13;
         private final CommutativeGroup A1$10;
         private final CommutativeGroup A2$7;
         private final CommutativeGroup A3$4;
         private final CommutativeGroup A4$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple5 combine(final Tuple5 x, final Tuple5 y) {
            return new Tuple5(this.A0$13.combine(x._1(), y._1()), this.A1$10.combine(x._2(), y._2()), this.A2$7.combine(x._3(), y._3()), this.A3$4.combine(x._4(), y._4()), this.A4$1.combine(x._5(), y._5()));
         }

         public Tuple5 empty() {
            return new Tuple5(this.A0$13.empty(), this.A1$10.empty(), this.A2$7.empty(), this.A3$4.empty(), this.A4$1.empty());
         }

         public Tuple5 inverse(final Tuple5 x) {
            return new Tuple5(this.A0$13.inverse(x._1()), this.A1$10.inverse(x._2()), this.A2$7.inverse(x._3()), this.A3$4.inverse(x._4()), this.A4$1.inverse(x._5()));
         }

         public {
            this.A0$13 = A0$13;
            this.A1$10 = A1$10;
            this.A2$7 = A2$7;
            this.A3$4 = A3$4;
            this.A4$1 = A4$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple5$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4) {
      return $this.catsKernelStdOrderForTuple5(A0, A1, A2, A3, A4);
   }

   default Order catsKernelStdOrderForTuple5(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4) {
      return new Order(A0, A1, A2, A3, A4) {
         private final Order A0$14;
         private final Order A1$11;
         private final Order A2$8;
         private final Order A3$5;
         private final Order A4$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple5 x, final Tuple5 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$14.compare(x._1(), y._1()), this.A1$11.compare(x._2(), y._2()), this.A2$8.compare(x._3(), y._3()), this.A3$5.compare(x._4(), y._4()), this.A4$2.compare(x._5(), y._5())}), (JFunction1.mcZI.sp)(x$5) -> x$5 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$14 = A0$14;
            this.A1$11 = A1$11;
            this.A2$8 = A2$8;
            this.A3$5 = A3$5;
            this.A4$2 = A4$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple5$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4) {
      return $this.catsKernelStdBoundedSemilatticeForTuple5(A0, A1, A2, A3, A4);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple5(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4) {
         private final BoundedSemilattice A0$15;
         private final BoundedSemilattice A1$12;
         private final BoundedSemilattice A2$9;
         private final BoundedSemilattice A3$6;
         private final BoundedSemilattice A4$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple5 combine(final Tuple5 x, final Tuple5 y) {
            return new Tuple5(this.A0$15.combine(x._1(), y._1()), this.A1$12.combine(x._2(), y._2()), this.A2$9.combine(x._3(), y._3()), this.A3$6.combine(x._4(), y._4()), this.A4$3.combine(x._5(), y._5()));
         }

         public Tuple5 empty() {
            return new Tuple5(this.A0$15.empty(), this.A1$12.empty(), this.A2$9.empty(), this.A3$6.empty(), this.A4$3.empty());
         }

         public {
            this.A0$15 = A0$15;
            this.A1$12 = A1$12;
            this.A2$9 = A2$9;
            this.A3$6 = A3$6;
            this.A4$3 = A4$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple6$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5) {
      return $this.catsKernelStdCommutativeGroupForTuple6(A0, A1, A2, A3, A4, A5);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple6(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5) {
         private final CommutativeGroup A0$16;
         private final CommutativeGroup A1$13;
         private final CommutativeGroup A2$10;
         private final CommutativeGroup A3$7;
         private final CommutativeGroup A4$4;
         private final CommutativeGroup A5$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple6 combine(final Tuple6 x, final Tuple6 y) {
            return new Tuple6(this.A0$16.combine(x._1(), y._1()), this.A1$13.combine(x._2(), y._2()), this.A2$10.combine(x._3(), y._3()), this.A3$7.combine(x._4(), y._4()), this.A4$4.combine(x._5(), y._5()), this.A5$1.combine(x._6(), y._6()));
         }

         public Tuple6 empty() {
            return new Tuple6(this.A0$16.empty(), this.A1$13.empty(), this.A2$10.empty(), this.A3$7.empty(), this.A4$4.empty(), this.A5$1.empty());
         }

         public Tuple6 inverse(final Tuple6 x) {
            return new Tuple6(this.A0$16.inverse(x._1()), this.A1$13.inverse(x._2()), this.A2$10.inverse(x._3()), this.A3$7.inverse(x._4()), this.A4$4.inverse(x._5()), this.A5$1.inverse(x._6()));
         }

         public {
            this.A0$16 = A0$16;
            this.A1$13 = A1$13;
            this.A2$10 = A2$10;
            this.A3$7 = A3$7;
            this.A4$4 = A4$4;
            this.A5$1 = A5$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple6$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5) {
      return $this.catsKernelStdOrderForTuple6(A0, A1, A2, A3, A4, A5);
   }

   default Order catsKernelStdOrderForTuple6(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5) {
      return new Order(A0, A1, A2, A3, A4, A5) {
         private final Order A0$17;
         private final Order A1$14;
         private final Order A2$11;
         private final Order A3$8;
         private final Order A4$5;
         private final Order A5$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple6 x, final Tuple6 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$17.compare(x._1(), y._1()), this.A1$14.compare(x._2(), y._2()), this.A2$11.compare(x._3(), y._3()), this.A3$8.compare(x._4(), y._4()), this.A4$5.compare(x._5(), y._5()), this.A5$2.compare(x._6(), y._6())}), (JFunction1.mcZI.sp)(x$6) -> x$6 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$17 = A0$17;
            this.A1$14 = A1$14;
            this.A2$11 = A2$11;
            this.A3$8 = A3$8;
            this.A4$5 = A4$5;
            this.A5$2 = A5$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple6$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5) {
      return $this.catsKernelStdBoundedSemilatticeForTuple6(A0, A1, A2, A3, A4, A5);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple6(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5) {
         private final BoundedSemilattice A0$18;
         private final BoundedSemilattice A1$15;
         private final BoundedSemilattice A2$12;
         private final BoundedSemilattice A3$9;
         private final BoundedSemilattice A4$6;
         private final BoundedSemilattice A5$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple6 combine(final Tuple6 x, final Tuple6 y) {
            return new Tuple6(this.A0$18.combine(x._1(), y._1()), this.A1$15.combine(x._2(), y._2()), this.A2$12.combine(x._3(), y._3()), this.A3$9.combine(x._4(), y._4()), this.A4$6.combine(x._5(), y._5()), this.A5$3.combine(x._6(), y._6()));
         }

         public Tuple6 empty() {
            return new Tuple6(this.A0$18.empty(), this.A1$15.empty(), this.A2$12.empty(), this.A3$9.empty(), this.A4$6.empty(), this.A5$3.empty());
         }

         public {
            this.A0$18 = A0$18;
            this.A1$15 = A1$15;
            this.A2$12 = A2$12;
            this.A3$9 = A3$9;
            this.A4$6 = A4$6;
            this.A5$3 = A5$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple7$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6) {
      return $this.catsKernelStdCommutativeGroupForTuple7(A0, A1, A2, A3, A4, A5, A6);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple7(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6) {
         private final CommutativeGroup A0$19;
         private final CommutativeGroup A1$16;
         private final CommutativeGroup A2$13;
         private final CommutativeGroup A3$10;
         private final CommutativeGroup A4$7;
         private final CommutativeGroup A5$4;
         private final CommutativeGroup A6$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple7 combine(final Tuple7 x, final Tuple7 y) {
            return new Tuple7(this.A0$19.combine(x._1(), y._1()), this.A1$16.combine(x._2(), y._2()), this.A2$13.combine(x._3(), y._3()), this.A3$10.combine(x._4(), y._4()), this.A4$7.combine(x._5(), y._5()), this.A5$4.combine(x._6(), y._6()), this.A6$1.combine(x._7(), y._7()));
         }

         public Tuple7 empty() {
            return new Tuple7(this.A0$19.empty(), this.A1$16.empty(), this.A2$13.empty(), this.A3$10.empty(), this.A4$7.empty(), this.A5$4.empty(), this.A6$1.empty());
         }

         public Tuple7 inverse(final Tuple7 x) {
            return new Tuple7(this.A0$19.inverse(x._1()), this.A1$16.inverse(x._2()), this.A2$13.inverse(x._3()), this.A3$10.inverse(x._4()), this.A4$7.inverse(x._5()), this.A5$4.inverse(x._6()), this.A6$1.inverse(x._7()));
         }

         public {
            this.A0$19 = A0$19;
            this.A1$16 = A1$16;
            this.A2$13 = A2$13;
            this.A3$10 = A3$10;
            this.A4$7 = A4$7;
            this.A5$4 = A5$4;
            this.A6$1 = A6$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple7$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6) {
      return $this.catsKernelStdOrderForTuple7(A0, A1, A2, A3, A4, A5, A6);
   }

   default Order catsKernelStdOrderForTuple7(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6) {
      return new Order(A0, A1, A2, A3, A4, A5, A6) {
         private final Order A0$20;
         private final Order A1$17;
         private final Order A2$14;
         private final Order A3$11;
         private final Order A4$8;
         private final Order A5$5;
         private final Order A6$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple7 x, final Tuple7 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$20.compare(x._1(), y._1()), this.A1$17.compare(x._2(), y._2()), this.A2$14.compare(x._3(), y._3()), this.A3$11.compare(x._4(), y._4()), this.A4$8.compare(x._5(), y._5()), this.A5$5.compare(x._6(), y._6()), this.A6$2.compare(x._7(), y._7())}), (JFunction1.mcZI.sp)(x$7) -> x$7 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$20 = A0$20;
            this.A1$17 = A1$17;
            this.A2$14 = A2$14;
            this.A3$11 = A3$11;
            this.A4$8 = A4$8;
            this.A5$5 = A5$5;
            this.A6$2 = A6$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple7$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6) {
      return $this.catsKernelStdBoundedSemilatticeForTuple7(A0, A1, A2, A3, A4, A5, A6);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple7(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6) {
         private final BoundedSemilattice A0$21;
         private final BoundedSemilattice A1$18;
         private final BoundedSemilattice A2$15;
         private final BoundedSemilattice A3$12;
         private final BoundedSemilattice A4$9;
         private final BoundedSemilattice A5$6;
         private final BoundedSemilattice A6$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple7 combine(final Tuple7 x, final Tuple7 y) {
            return new Tuple7(this.A0$21.combine(x._1(), y._1()), this.A1$18.combine(x._2(), y._2()), this.A2$15.combine(x._3(), y._3()), this.A3$12.combine(x._4(), y._4()), this.A4$9.combine(x._5(), y._5()), this.A5$6.combine(x._6(), y._6()), this.A6$3.combine(x._7(), y._7()));
         }

         public Tuple7 empty() {
            return new Tuple7(this.A0$21.empty(), this.A1$18.empty(), this.A2$15.empty(), this.A3$12.empty(), this.A4$9.empty(), this.A5$6.empty(), this.A6$3.empty());
         }

         public {
            this.A0$21 = A0$21;
            this.A1$18 = A1$18;
            this.A2$15 = A2$15;
            this.A3$12 = A3$12;
            this.A4$9 = A4$9;
            this.A5$6 = A5$6;
            this.A6$3 = A6$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple8$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7) {
      return $this.catsKernelStdCommutativeGroupForTuple8(A0, A1, A2, A3, A4, A5, A6, A7);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple8(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7) {
         private final CommutativeGroup A0$22;
         private final CommutativeGroup A1$19;
         private final CommutativeGroup A2$16;
         private final CommutativeGroup A3$13;
         private final CommutativeGroup A4$10;
         private final CommutativeGroup A5$7;
         private final CommutativeGroup A6$4;
         private final CommutativeGroup A7$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple8 combine(final Tuple8 x, final Tuple8 y) {
            return new Tuple8(this.A0$22.combine(x._1(), y._1()), this.A1$19.combine(x._2(), y._2()), this.A2$16.combine(x._3(), y._3()), this.A3$13.combine(x._4(), y._4()), this.A4$10.combine(x._5(), y._5()), this.A5$7.combine(x._6(), y._6()), this.A6$4.combine(x._7(), y._7()), this.A7$1.combine(x._8(), y._8()));
         }

         public Tuple8 empty() {
            return new Tuple8(this.A0$22.empty(), this.A1$19.empty(), this.A2$16.empty(), this.A3$13.empty(), this.A4$10.empty(), this.A5$7.empty(), this.A6$4.empty(), this.A7$1.empty());
         }

         public Tuple8 inverse(final Tuple8 x) {
            return new Tuple8(this.A0$22.inverse(x._1()), this.A1$19.inverse(x._2()), this.A2$16.inverse(x._3()), this.A3$13.inverse(x._4()), this.A4$10.inverse(x._5()), this.A5$7.inverse(x._6()), this.A6$4.inverse(x._7()), this.A7$1.inverse(x._8()));
         }

         public {
            this.A0$22 = A0$22;
            this.A1$19 = A1$19;
            this.A2$16 = A2$16;
            this.A3$13 = A3$13;
            this.A4$10 = A4$10;
            this.A5$7 = A5$7;
            this.A6$4 = A6$4;
            this.A7$1 = A7$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple8$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7) {
      return $this.catsKernelStdOrderForTuple8(A0, A1, A2, A3, A4, A5, A6, A7);
   }

   default Order catsKernelStdOrderForTuple8(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7) {
         private final Order A0$23;
         private final Order A1$20;
         private final Order A2$17;
         private final Order A3$14;
         private final Order A4$11;
         private final Order A5$8;
         private final Order A6$5;
         private final Order A7$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple8 x, final Tuple8 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$23.compare(x._1(), y._1()), this.A1$20.compare(x._2(), y._2()), this.A2$17.compare(x._3(), y._3()), this.A3$14.compare(x._4(), y._4()), this.A4$11.compare(x._5(), y._5()), this.A5$8.compare(x._6(), y._6()), this.A6$5.compare(x._7(), y._7()), this.A7$2.compare(x._8(), y._8())}), (JFunction1.mcZI.sp)(x$8) -> x$8 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$23 = A0$23;
            this.A1$20 = A1$20;
            this.A2$17 = A2$17;
            this.A3$14 = A3$14;
            this.A4$11 = A4$11;
            this.A5$8 = A5$8;
            this.A6$5 = A6$5;
            this.A7$2 = A7$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple8$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7) {
      return $this.catsKernelStdBoundedSemilatticeForTuple8(A0, A1, A2, A3, A4, A5, A6, A7);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple8(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7) {
         private final BoundedSemilattice A0$24;
         private final BoundedSemilattice A1$21;
         private final BoundedSemilattice A2$18;
         private final BoundedSemilattice A3$15;
         private final BoundedSemilattice A4$12;
         private final BoundedSemilattice A5$9;
         private final BoundedSemilattice A6$6;
         private final BoundedSemilattice A7$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple8 combine(final Tuple8 x, final Tuple8 y) {
            return new Tuple8(this.A0$24.combine(x._1(), y._1()), this.A1$21.combine(x._2(), y._2()), this.A2$18.combine(x._3(), y._3()), this.A3$15.combine(x._4(), y._4()), this.A4$12.combine(x._5(), y._5()), this.A5$9.combine(x._6(), y._6()), this.A6$6.combine(x._7(), y._7()), this.A7$3.combine(x._8(), y._8()));
         }

         public Tuple8 empty() {
            return new Tuple8(this.A0$24.empty(), this.A1$21.empty(), this.A2$18.empty(), this.A3$15.empty(), this.A4$12.empty(), this.A5$9.empty(), this.A6$6.empty(), this.A7$3.empty());
         }

         public {
            this.A0$24 = A0$24;
            this.A1$21 = A1$21;
            this.A2$18 = A2$18;
            this.A3$15 = A3$15;
            this.A4$12 = A4$12;
            this.A5$9 = A5$9;
            this.A6$6 = A6$6;
            this.A7$3 = A7$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple9$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8) {
      return $this.catsKernelStdCommutativeGroupForTuple9(A0, A1, A2, A3, A4, A5, A6, A7, A8);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple9(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8) {
         private final CommutativeGroup A0$25;
         private final CommutativeGroup A1$22;
         private final CommutativeGroup A2$19;
         private final CommutativeGroup A3$16;
         private final CommutativeGroup A4$13;
         private final CommutativeGroup A5$10;
         private final CommutativeGroup A6$7;
         private final CommutativeGroup A7$4;
         private final CommutativeGroup A8$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple9 combine(final Tuple9 x, final Tuple9 y) {
            return new Tuple9(this.A0$25.combine(x._1(), y._1()), this.A1$22.combine(x._2(), y._2()), this.A2$19.combine(x._3(), y._3()), this.A3$16.combine(x._4(), y._4()), this.A4$13.combine(x._5(), y._5()), this.A5$10.combine(x._6(), y._6()), this.A6$7.combine(x._7(), y._7()), this.A7$4.combine(x._8(), y._8()), this.A8$1.combine(x._9(), y._9()));
         }

         public Tuple9 empty() {
            return new Tuple9(this.A0$25.empty(), this.A1$22.empty(), this.A2$19.empty(), this.A3$16.empty(), this.A4$13.empty(), this.A5$10.empty(), this.A6$7.empty(), this.A7$4.empty(), this.A8$1.empty());
         }

         public Tuple9 inverse(final Tuple9 x) {
            return new Tuple9(this.A0$25.inverse(x._1()), this.A1$22.inverse(x._2()), this.A2$19.inverse(x._3()), this.A3$16.inverse(x._4()), this.A4$13.inverse(x._5()), this.A5$10.inverse(x._6()), this.A6$7.inverse(x._7()), this.A7$4.inverse(x._8()), this.A8$1.inverse(x._9()));
         }

         public {
            this.A0$25 = A0$25;
            this.A1$22 = A1$22;
            this.A2$19 = A2$19;
            this.A3$16 = A3$16;
            this.A4$13 = A4$13;
            this.A5$10 = A5$10;
            this.A6$7 = A6$7;
            this.A7$4 = A7$4;
            this.A8$1 = A8$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple9$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8) {
      return $this.catsKernelStdOrderForTuple9(A0, A1, A2, A3, A4, A5, A6, A7, A8);
   }

   default Order catsKernelStdOrderForTuple9(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8) {
         private final Order A0$26;
         private final Order A1$23;
         private final Order A2$20;
         private final Order A3$17;
         private final Order A4$14;
         private final Order A5$11;
         private final Order A6$8;
         private final Order A7$5;
         private final Order A8$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple9 x, final Tuple9 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$26.compare(x._1(), y._1()), this.A1$23.compare(x._2(), y._2()), this.A2$20.compare(x._3(), y._3()), this.A3$17.compare(x._4(), y._4()), this.A4$14.compare(x._5(), y._5()), this.A5$11.compare(x._6(), y._6()), this.A6$8.compare(x._7(), y._7()), this.A7$5.compare(x._8(), y._8()), this.A8$2.compare(x._9(), y._9())}), (JFunction1.mcZI.sp)(x$9) -> x$9 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$26 = A0$26;
            this.A1$23 = A1$23;
            this.A2$20 = A2$20;
            this.A3$17 = A3$17;
            this.A4$14 = A4$14;
            this.A5$11 = A5$11;
            this.A6$8 = A6$8;
            this.A7$5 = A7$5;
            this.A8$2 = A8$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple9$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8) {
      return $this.catsKernelStdBoundedSemilatticeForTuple9(A0, A1, A2, A3, A4, A5, A6, A7, A8);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple9(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8) {
         private final BoundedSemilattice A0$27;
         private final BoundedSemilattice A1$24;
         private final BoundedSemilattice A2$21;
         private final BoundedSemilattice A3$18;
         private final BoundedSemilattice A4$15;
         private final BoundedSemilattice A5$12;
         private final BoundedSemilattice A6$9;
         private final BoundedSemilattice A7$6;
         private final BoundedSemilattice A8$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple9 combine(final Tuple9 x, final Tuple9 y) {
            return new Tuple9(this.A0$27.combine(x._1(), y._1()), this.A1$24.combine(x._2(), y._2()), this.A2$21.combine(x._3(), y._3()), this.A3$18.combine(x._4(), y._4()), this.A4$15.combine(x._5(), y._5()), this.A5$12.combine(x._6(), y._6()), this.A6$9.combine(x._7(), y._7()), this.A7$6.combine(x._8(), y._8()), this.A8$3.combine(x._9(), y._9()));
         }

         public Tuple9 empty() {
            return new Tuple9(this.A0$27.empty(), this.A1$24.empty(), this.A2$21.empty(), this.A3$18.empty(), this.A4$15.empty(), this.A5$12.empty(), this.A6$9.empty(), this.A7$6.empty(), this.A8$3.empty());
         }

         public {
            this.A0$27 = A0$27;
            this.A1$24 = A1$24;
            this.A2$21 = A2$21;
            this.A3$18 = A3$18;
            this.A4$15 = A4$15;
            this.A5$12 = A5$12;
            this.A6$9 = A6$9;
            this.A7$6 = A7$6;
            this.A8$3 = A8$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple10$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9) {
      return $this.catsKernelStdCommutativeGroupForTuple10(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple10(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) {
         private final CommutativeGroup A0$28;
         private final CommutativeGroup A1$25;
         private final CommutativeGroup A2$22;
         private final CommutativeGroup A3$19;
         private final CommutativeGroup A4$16;
         private final CommutativeGroup A5$13;
         private final CommutativeGroup A6$10;
         private final CommutativeGroup A7$7;
         private final CommutativeGroup A8$4;
         private final CommutativeGroup A9$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple10 combine(final Tuple10 x, final Tuple10 y) {
            return new Tuple10(this.A0$28.combine(x._1(), y._1()), this.A1$25.combine(x._2(), y._2()), this.A2$22.combine(x._3(), y._3()), this.A3$19.combine(x._4(), y._4()), this.A4$16.combine(x._5(), y._5()), this.A5$13.combine(x._6(), y._6()), this.A6$10.combine(x._7(), y._7()), this.A7$7.combine(x._8(), y._8()), this.A8$4.combine(x._9(), y._9()), this.A9$1.combine(x._10(), y._10()));
         }

         public Tuple10 empty() {
            return new Tuple10(this.A0$28.empty(), this.A1$25.empty(), this.A2$22.empty(), this.A3$19.empty(), this.A4$16.empty(), this.A5$13.empty(), this.A6$10.empty(), this.A7$7.empty(), this.A8$4.empty(), this.A9$1.empty());
         }

         public Tuple10 inverse(final Tuple10 x) {
            return new Tuple10(this.A0$28.inverse(x._1()), this.A1$25.inverse(x._2()), this.A2$22.inverse(x._3()), this.A3$19.inverse(x._4()), this.A4$16.inverse(x._5()), this.A5$13.inverse(x._6()), this.A6$10.inverse(x._7()), this.A7$7.inverse(x._8()), this.A8$4.inverse(x._9()), this.A9$1.inverse(x._10()));
         }

         public {
            this.A0$28 = A0$28;
            this.A1$25 = A1$25;
            this.A2$22 = A2$22;
            this.A3$19 = A3$19;
            this.A4$16 = A4$16;
            this.A5$13 = A5$13;
            this.A6$10 = A6$10;
            this.A7$7 = A7$7;
            this.A8$4 = A8$4;
            this.A9$1 = A9$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple10$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9) {
      return $this.catsKernelStdOrderForTuple10(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9);
   }

   default Order catsKernelStdOrderForTuple10(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) {
         private final Order A0$29;
         private final Order A1$26;
         private final Order A2$23;
         private final Order A3$20;
         private final Order A4$17;
         private final Order A5$14;
         private final Order A6$11;
         private final Order A7$8;
         private final Order A8$5;
         private final Order A9$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple10 x, final Tuple10 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$29.compare(x._1(), y._1()), this.A1$26.compare(x._2(), y._2()), this.A2$23.compare(x._3(), y._3()), this.A3$20.compare(x._4(), y._4()), this.A4$17.compare(x._5(), y._5()), this.A5$14.compare(x._6(), y._6()), this.A6$11.compare(x._7(), y._7()), this.A7$8.compare(x._8(), y._8()), this.A8$5.compare(x._9(), y._9()), this.A9$2.compare(x._10(), y._10())}), (JFunction1.mcZI.sp)(x$10) -> x$10 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$29 = A0$29;
            this.A1$26 = A1$26;
            this.A2$23 = A2$23;
            this.A3$20 = A3$20;
            this.A4$17 = A4$17;
            this.A5$14 = A5$14;
            this.A6$11 = A6$11;
            this.A7$8 = A7$8;
            this.A8$5 = A8$5;
            this.A9$2 = A9$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple10$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9) {
      return $this.catsKernelStdBoundedSemilatticeForTuple10(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple10(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) {
         private final BoundedSemilattice A0$30;
         private final BoundedSemilattice A1$27;
         private final BoundedSemilattice A2$24;
         private final BoundedSemilattice A3$21;
         private final BoundedSemilattice A4$18;
         private final BoundedSemilattice A5$15;
         private final BoundedSemilattice A6$12;
         private final BoundedSemilattice A7$9;
         private final BoundedSemilattice A8$6;
         private final BoundedSemilattice A9$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple10 combine(final Tuple10 x, final Tuple10 y) {
            return new Tuple10(this.A0$30.combine(x._1(), y._1()), this.A1$27.combine(x._2(), y._2()), this.A2$24.combine(x._3(), y._3()), this.A3$21.combine(x._4(), y._4()), this.A4$18.combine(x._5(), y._5()), this.A5$15.combine(x._6(), y._6()), this.A6$12.combine(x._7(), y._7()), this.A7$9.combine(x._8(), y._8()), this.A8$6.combine(x._9(), y._9()), this.A9$3.combine(x._10(), y._10()));
         }

         public Tuple10 empty() {
            return new Tuple10(this.A0$30.empty(), this.A1$27.empty(), this.A2$24.empty(), this.A3$21.empty(), this.A4$18.empty(), this.A5$15.empty(), this.A6$12.empty(), this.A7$9.empty(), this.A8$6.empty(), this.A9$3.empty());
         }

         public {
            this.A0$30 = A0$30;
            this.A1$27 = A1$27;
            this.A2$24 = A2$24;
            this.A3$21 = A3$21;
            this.A4$18 = A4$18;
            this.A5$15 = A5$15;
            this.A6$12 = A6$12;
            this.A7$9 = A7$9;
            this.A8$6 = A8$6;
            this.A9$3 = A9$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple11$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10) {
      return $this.catsKernelStdCommutativeGroupForTuple11(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple11(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) {
         private final CommutativeGroup A0$31;
         private final CommutativeGroup A1$28;
         private final CommutativeGroup A2$25;
         private final CommutativeGroup A3$22;
         private final CommutativeGroup A4$19;
         private final CommutativeGroup A5$16;
         private final CommutativeGroup A6$13;
         private final CommutativeGroup A7$10;
         private final CommutativeGroup A8$7;
         private final CommutativeGroup A9$4;
         private final CommutativeGroup A10$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple11 combine(final Tuple11 x, final Tuple11 y) {
            return new Tuple11(this.A0$31.combine(x._1(), y._1()), this.A1$28.combine(x._2(), y._2()), this.A2$25.combine(x._3(), y._3()), this.A3$22.combine(x._4(), y._4()), this.A4$19.combine(x._5(), y._5()), this.A5$16.combine(x._6(), y._6()), this.A6$13.combine(x._7(), y._7()), this.A7$10.combine(x._8(), y._8()), this.A8$7.combine(x._9(), y._9()), this.A9$4.combine(x._10(), y._10()), this.A10$1.combine(x._11(), y._11()));
         }

         public Tuple11 empty() {
            return new Tuple11(this.A0$31.empty(), this.A1$28.empty(), this.A2$25.empty(), this.A3$22.empty(), this.A4$19.empty(), this.A5$16.empty(), this.A6$13.empty(), this.A7$10.empty(), this.A8$7.empty(), this.A9$4.empty(), this.A10$1.empty());
         }

         public Tuple11 inverse(final Tuple11 x) {
            return new Tuple11(this.A0$31.inverse(x._1()), this.A1$28.inverse(x._2()), this.A2$25.inverse(x._3()), this.A3$22.inverse(x._4()), this.A4$19.inverse(x._5()), this.A5$16.inverse(x._6()), this.A6$13.inverse(x._7()), this.A7$10.inverse(x._8()), this.A8$7.inverse(x._9()), this.A9$4.inverse(x._10()), this.A10$1.inverse(x._11()));
         }

         public {
            this.A0$31 = A0$31;
            this.A1$28 = A1$28;
            this.A2$25 = A2$25;
            this.A3$22 = A3$22;
            this.A4$19 = A4$19;
            this.A5$16 = A5$16;
            this.A6$13 = A6$13;
            this.A7$10 = A7$10;
            this.A8$7 = A8$7;
            this.A9$4 = A9$4;
            this.A10$1 = A10$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple11$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10) {
      return $this.catsKernelStdOrderForTuple11(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10);
   }

   default Order catsKernelStdOrderForTuple11(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) {
         private final Order A0$32;
         private final Order A1$29;
         private final Order A2$26;
         private final Order A3$23;
         private final Order A4$20;
         private final Order A5$17;
         private final Order A6$14;
         private final Order A7$11;
         private final Order A8$8;
         private final Order A9$5;
         private final Order A10$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple11 x, final Tuple11 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$32.compare(x._1(), y._1()), this.A1$29.compare(x._2(), y._2()), this.A2$26.compare(x._3(), y._3()), this.A3$23.compare(x._4(), y._4()), this.A4$20.compare(x._5(), y._5()), this.A5$17.compare(x._6(), y._6()), this.A6$14.compare(x._7(), y._7()), this.A7$11.compare(x._8(), y._8()), this.A8$8.compare(x._9(), y._9()), this.A9$5.compare(x._10(), y._10()), this.A10$2.compare(x._11(), y._11())}), (JFunction1.mcZI.sp)(x$11) -> x$11 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$32 = A0$32;
            this.A1$29 = A1$29;
            this.A2$26 = A2$26;
            this.A3$23 = A3$23;
            this.A4$20 = A4$20;
            this.A5$17 = A5$17;
            this.A6$14 = A6$14;
            this.A7$11 = A7$11;
            this.A8$8 = A8$8;
            this.A9$5 = A9$5;
            this.A10$2 = A10$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple11$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10) {
      return $this.catsKernelStdBoundedSemilatticeForTuple11(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple11(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) {
         private final BoundedSemilattice A0$33;
         private final BoundedSemilattice A1$30;
         private final BoundedSemilattice A2$27;
         private final BoundedSemilattice A3$24;
         private final BoundedSemilattice A4$21;
         private final BoundedSemilattice A5$18;
         private final BoundedSemilattice A6$15;
         private final BoundedSemilattice A7$12;
         private final BoundedSemilattice A8$9;
         private final BoundedSemilattice A9$6;
         private final BoundedSemilattice A10$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple11 combine(final Tuple11 x, final Tuple11 y) {
            return new Tuple11(this.A0$33.combine(x._1(), y._1()), this.A1$30.combine(x._2(), y._2()), this.A2$27.combine(x._3(), y._3()), this.A3$24.combine(x._4(), y._4()), this.A4$21.combine(x._5(), y._5()), this.A5$18.combine(x._6(), y._6()), this.A6$15.combine(x._7(), y._7()), this.A7$12.combine(x._8(), y._8()), this.A8$9.combine(x._9(), y._9()), this.A9$6.combine(x._10(), y._10()), this.A10$3.combine(x._11(), y._11()));
         }

         public Tuple11 empty() {
            return new Tuple11(this.A0$33.empty(), this.A1$30.empty(), this.A2$27.empty(), this.A3$24.empty(), this.A4$21.empty(), this.A5$18.empty(), this.A6$15.empty(), this.A7$12.empty(), this.A8$9.empty(), this.A9$6.empty(), this.A10$3.empty());
         }

         public {
            this.A0$33 = A0$33;
            this.A1$30 = A1$30;
            this.A2$27 = A2$27;
            this.A3$24 = A3$24;
            this.A4$21 = A4$21;
            this.A5$18 = A5$18;
            this.A6$15 = A6$15;
            this.A7$12 = A7$12;
            this.A8$9 = A8$9;
            this.A9$6 = A9$6;
            this.A10$3 = A10$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple12$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11) {
      return $this.catsKernelStdCommutativeGroupForTuple12(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple12(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) {
         private final CommutativeGroup A0$34;
         private final CommutativeGroup A1$31;
         private final CommutativeGroup A2$28;
         private final CommutativeGroup A3$25;
         private final CommutativeGroup A4$22;
         private final CommutativeGroup A5$19;
         private final CommutativeGroup A6$16;
         private final CommutativeGroup A7$13;
         private final CommutativeGroup A8$10;
         private final CommutativeGroup A9$7;
         private final CommutativeGroup A10$4;
         private final CommutativeGroup A11$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple12 combine(final Tuple12 x, final Tuple12 y) {
            return new Tuple12(this.A0$34.combine(x._1(), y._1()), this.A1$31.combine(x._2(), y._2()), this.A2$28.combine(x._3(), y._3()), this.A3$25.combine(x._4(), y._4()), this.A4$22.combine(x._5(), y._5()), this.A5$19.combine(x._6(), y._6()), this.A6$16.combine(x._7(), y._7()), this.A7$13.combine(x._8(), y._8()), this.A8$10.combine(x._9(), y._9()), this.A9$7.combine(x._10(), y._10()), this.A10$4.combine(x._11(), y._11()), this.A11$1.combine(x._12(), y._12()));
         }

         public Tuple12 empty() {
            return new Tuple12(this.A0$34.empty(), this.A1$31.empty(), this.A2$28.empty(), this.A3$25.empty(), this.A4$22.empty(), this.A5$19.empty(), this.A6$16.empty(), this.A7$13.empty(), this.A8$10.empty(), this.A9$7.empty(), this.A10$4.empty(), this.A11$1.empty());
         }

         public Tuple12 inverse(final Tuple12 x) {
            return new Tuple12(this.A0$34.inverse(x._1()), this.A1$31.inverse(x._2()), this.A2$28.inverse(x._3()), this.A3$25.inverse(x._4()), this.A4$22.inverse(x._5()), this.A5$19.inverse(x._6()), this.A6$16.inverse(x._7()), this.A7$13.inverse(x._8()), this.A8$10.inverse(x._9()), this.A9$7.inverse(x._10()), this.A10$4.inverse(x._11()), this.A11$1.inverse(x._12()));
         }

         public {
            this.A0$34 = A0$34;
            this.A1$31 = A1$31;
            this.A2$28 = A2$28;
            this.A3$25 = A3$25;
            this.A4$22 = A4$22;
            this.A5$19 = A5$19;
            this.A6$16 = A6$16;
            this.A7$13 = A7$13;
            this.A8$10 = A8$10;
            this.A9$7 = A9$7;
            this.A10$4 = A10$4;
            this.A11$1 = A11$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple12$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11) {
      return $this.catsKernelStdOrderForTuple12(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11);
   }

   default Order catsKernelStdOrderForTuple12(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) {
         private final Order A0$35;
         private final Order A1$32;
         private final Order A2$29;
         private final Order A3$26;
         private final Order A4$23;
         private final Order A5$20;
         private final Order A6$17;
         private final Order A7$14;
         private final Order A8$11;
         private final Order A9$8;
         private final Order A10$5;
         private final Order A11$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple12 x, final Tuple12 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$35.compare(x._1(), y._1()), this.A1$32.compare(x._2(), y._2()), this.A2$29.compare(x._3(), y._3()), this.A3$26.compare(x._4(), y._4()), this.A4$23.compare(x._5(), y._5()), this.A5$20.compare(x._6(), y._6()), this.A6$17.compare(x._7(), y._7()), this.A7$14.compare(x._8(), y._8()), this.A8$11.compare(x._9(), y._9()), this.A9$8.compare(x._10(), y._10()), this.A10$5.compare(x._11(), y._11()), this.A11$2.compare(x._12(), y._12())}), (JFunction1.mcZI.sp)(x$12) -> x$12 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$35 = A0$35;
            this.A1$32 = A1$32;
            this.A2$29 = A2$29;
            this.A3$26 = A3$26;
            this.A4$23 = A4$23;
            this.A5$20 = A5$20;
            this.A6$17 = A6$17;
            this.A7$14 = A7$14;
            this.A8$11 = A8$11;
            this.A9$8 = A9$8;
            this.A10$5 = A10$5;
            this.A11$2 = A11$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple12$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11) {
      return $this.catsKernelStdBoundedSemilatticeForTuple12(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple12(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) {
         private final BoundedSemilattice A0$36;
         private final BoundedSemilattice A1$33;
         private final BoundedSemilattice A2$30;
         private final BoundedSemilattice A3$27;
         private final BoundedSemilattice A4$24;
         private final BoundedSemilattice A5$21;
         private final BoundedSemilattice A6$18;
         private final BoundedSemilattice A7$15;
         private final BoundedSemilattice A8$12;
         private final BoundedSemilattice A9$9;
         private final BoundedSemilattice A10$6;
         private final BoundedSemilattice A11$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple12 combine(final Tuple12 x, final Tuple12 y) {
            return new Tuple12(this.A0$36.combine(x._1(), y._1()), this.A1$33.combine(x._2(), y._2()), this.A2$30.combine(x._3(), y._3()), this.A3$27.combine(x._4(), y._4()), this.A4$24.combine(x._5(), y._5()), this.A5$21.combine(x._6(), y._6()), this.A6$18.combine(x._7(), y._7()), this.A7$15.combine(x._8(), y._8()), this.A8$12.combine(x._9(), y._9()), this.A9$9.combine(x._10(), y._10()), this.A10$6.combine(x._11(), y._11()), this.A11$3.combine(x._12(), y._12()));
         }

         public Tuple12 empty() {
            return new Tuple12(this.A0$36.empty(), this.A1$33.empty(), this.A2$30.empty(), this.A3$27.empty(), this.A4$24.empty(), this.A5$21.empty(), this.A6$18.empty(), this.A7$15.empty(), this.A8$12.empty(), this.A9$9.empty(), this.A10$6.empty(), this.A11$3.empty());
         }

         public {
            this.A0$36 = A0$36;
            this.A1$33 = A1$33;
            this.A2$30 = A2$30;
            this.A3$27 = A3$27;
            this.A4$24 = A4$24;
            this.A5$21 = A5$21;
            this.A6$18 = A6$18;
            this.A7$15 = A7$15;
            this.A8$12 = A8$12;
            this.A9$9 = A9$9;
            this.A10$6 = A10$6;
            this.A11$3 = A11$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple13$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12) {
      return $this.catsKernelStdCommutativeGroupForTuple13(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple13(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) {
         private final CommutativeGroup A0$37;
         private final CommutativeGroup A1$34;
         private final CommutativeGroup A2$31;
         private final CommutativeGroup A3$28;
         private final CommutativeGroup A4$25;
         private final CommutativeGroup A5$22;
         private final CommutativeGroup A6$19;
         private final CommutativeGroup A7$16;
         private final CommutativeGroup A8$13;
         private final CommutativeGroup A9$10;
         private final CommutativeGroup A10$7;
         private final CommutativeGroup A11$4;
         private final CommutativeGroup A12$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple13 combine(final Tuple13 x, final Tuple13 y) {
            return new Tuple13(this.A0$37.combine(x._1(), y._1()), this.A1$34.combine(x._2(), y._2()), this.A2$31.combine(x._3(), y._3()), this.A3$28.combine(x._4(), y._4()), this.A4$25.combine(x._5(), y._5()), this.A5$22.combine(x._6(), y._6()), this.A6$19.combine(x._7(), y._7()), this.A7$16.combine(x._8(), y._8()), this.A8$13.combine(x._9(), y._9()), this.A9$10.combine(x._10(), y._10()), this.A10$7.combine(x._11(), y._11()), this.A11$4.combine(x._12(), y._12()), this.A12$1.combine(x._13(), y._13()));
         }

         public Tuple13 empty() {
            return new Tuple13(this.A0$37.empty(), this.A1$34.empty(), this.A2$31.empty(), this.A3$28.empty(), this.A4$25.empty(), this.A5$22.empty(), this.A6$19.empty(), this.A7$16.empty(), this.A8$13.empty(), this.A9$10.empty(), this.A10$7.empty(), this.A11$4.empty(), this.A12$1.empty());
         }

         public Tuple13 inverse(final Tuple13 x) {
            return new Tuple13(this.A0$37.inverse(x._1()), this.A1$34.inverse(x._2()), this.A2$31.inverse(x._3()), this.A3$28.inverse(x._4()), this.A4$25.inverse(x._5()), this.A5$22.inverse(x._6()), this.A6$19.inverse(x._7()), this.A7$16.inverse(x._8()), this.A8$13.inverse(x._9()), this.A9$10.inverse(x._10()), this.A10$7.inverse(x._11()), this.A11$4.inverse(x._12()), this.A12$1.inverse(x._13()));
         }

         public {
            this.A0$37 = A0$37;
            this.A1$34 = A1$34;
            this.A2$31 = A2$31;
            this.A3$28 = A3$28;
            this.A4$25 = A4$25;
            this.A5$22 = A5$22;
            this.A6$19 = A6$19;
            this.A7$16 = A7$16;
            this.A8$13 = A8$13;
            this.A9$10 = A9$10;
            this.A10$7 = A10$7;
            this.A11$4 = A11$4;
            this.A12$1 = A12$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple13$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12) {
      return $this.catsKernelStdOrderForTuple13(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12);
   }

   default Order catsKernelStdOrderForTuple13(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) {
         private final Order A0$38;
         private final Order A1$35;
         private final Order A2$32;
         private final Order A3$29;
         private final Order A4$26;
         private final Order A5$23;
         private final Order A6$20;
         private final Order A7$17;
         private final Order A8$14;
         private final Order A9$11;
         private final Order A10$8;
         private final Order A11$5;
         private final Order A12$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple13 x, final Tuple13 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$38.compare(x._1(), y._1()), this.A1$35.compare(x._2(), y._2()), this.A2$32.compare(x._3(), y._3()), this.A3$29.compare(x._4(), y._4()), this.A4$26.compare(x._5(), y._5()), this.A5$23.compare(x._6(), y._6()), this.A6$20.compare(x._7(), y._7()), this.A7$17.compare(x._8(), y._8()), this.A8$14.compare(x._9(), y._9()), this.A9$11.compare(x._10(), y._10()), this.A10$8.compare(x._11(), y._11()), this.A11$5.compare(x._12(), y._12()), this.A12$2.compare(x._13(), y._13())}), (JFunction1.mcZI.sp)(x$13) -> x$13 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$38 = A0$38;
            this.A1$35 = A1$35;
            this.A2$32 = A2$32;
            this.A3$29 = A3$29;
            this.A4$26 = A4$26;
            this.A5$23 = A5$23;
            this.A6$20 = A6$20;
            this.A7$17 = A7$17;
            this.A8$14 = A8$14;
            this.A9$11 = A9$11;
            this.A10$8 = A10$8;
            this.A11$5 = A11$5;
            this.A12$2 = A12$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple13$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12) {
      return $this.catsKernelStdBoundedSemilatticeForTuple13(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple13(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) {
         private final BoundedSemilattice A0$39;
         private final BoundedSemilattice A1$36;
         private final BoundedSemilattice A2$33;
         private final BoundedSemilattice A3$30;
         private final BoundedSemilattice A4$27;
         private final BoundedSemilattice A5$24;
         private final BoundedSemilattice A6$21;
         private final BoundedSemilattice A7$18;
         private final BoundedSemilattice A8$15;
         private final BoundedSemilattice A9$12;
         private final BoundedSemilattice A10$9;
         private final BoundedSemilattice A11$6;
         private final BoundedSemilattice A12$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple13 combine(final Tuple13 x, final Tuple13 y) {
            return new Tuple13(this.A0$39.combine(x._1(), y._1()), this.A1$36.combine(x._2(), y._2()), this.A2$33.combine(x._3(), y._3()), this.A3$30.combine(x._4(), y._4()), this.A4$27.combine(x._5(), y._5()), this.A5$24.combine(x._6(), y._6()), this.A6$21.combine(x._7(), y._7()), this.A7$18.combine(x._8(), y._8()), this.A8$15.combine(x._9(), y._9()), this.A9$12.combine(x._10(), y._10()), this.A10$9.combine(x._11(), y._11()), this.A11$6.combine(x._12(), y._12()), this.A12$3.combine(x._13(), y._13()));
         }

         public Tuple13 empty() {
            return new Tuple13(this.A0$39.empty(), this.A1$36.empty(), this.A2$33.empty(), this.A3$30.empty(), this.A4$27.empty(), this.A5$24.empty(), this.A6$21.empty(), this.A7$18.empty(), this.A8$15.empty(), this.A9$12.empty(), this.A10$9.empty(), this.A11$6.empty(), this.A12$3.empty());
         }

         public {
            this.A0$39 = A0$39;
            this.A1$36 = A1$36;
            this.A2$33 = A2$33;
            this.A3$30 = A3$30;
            this.A4$27 = A4$27;
            this.A5$24 = A5$24;
            this.A6$21 = A6$21;
            this.A7$18 = A7$18;
            this.A8$15 = A8$15;
            this.A9$12 = A9$12;
            this.A10$9 = A10$9;
            this.A11$6 = A11$6;
            this.A12$3 = A12$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple14$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13) {
      return $this.catsKernelStdCommutativeGroupForTuple14(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple14(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) {
         private final CommutativeGroup A0$40;
         private final CommutativeGroup A1$37;
         private final CommutativeGroup A2$34;
         private final CommutativeGroup A3$31;
         private final CommutativeGroup A4$28;
         private final CommutativeGroup A5$25;
         private final CommutativeGroup A6$22;
         private final CommutativeGroup A7$19;
         private final CommutativeGroup A8$16;
         private final CommutativeGroup A9$13;
         private final CommutativeGroup A10$10;
         private final CommutativeGroup A11$7;
         private final CommutativeGroup A12$4;
         private final CommutativeGroup A13$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple14 combine(final Tuple14 x, final Tuple14 y) {
            return new Tuple14(this.A0$40.combine(x._1(), y._1()), this.A1$37.combine(x._2(), y._2()), this.A2$34.combine(x._3(), y._3()), this.A3$31.combine(x._4(), y._4()), this.A4$28.combine(x._5(), y._5()), this.A5$25.combine(x._6(), y._6()), this.A6$22.combine(x._7(), y._7()), this.A7$19.combine(x._8(), y._8()), this.A8$16.combine(x._9(), y._9()), this.A9$13.combine(x._10(), y._10()), this.A10$10.combine(x._11(), y._11()), this.A11$7.combine(x._12(), y._12()), this.A12$4.combine(x._13(), y._13()), this.A13$1.combine(x._14(), y._14()));
         }

         public Tuple14 empty() {
            return new Tuple14(this.A0$40.empty(), this.A1$37.empty(), this.A2$34.empty(), this.A3$31.empty(), this.A4$28.empty(), this.A5$25.empty(), this.A6$22.empty(), this.A7$19.empty(), this.A8$16.empty(), this.A9$13.empty(), this.A10$10.empty(), this.A11$7.empty(), this.A12$4.empty(), this.A13$1.empty());
         }

         public Tuple14 inverse(final Tuple14 x) {
            return new Tuple14(this.A0$40.inverse(x._1()), this.A1$37.inverse(x._2()), this.A2$34.inverse(x._3()), this.A3$31.inverse(x._4()), this.A4$28.inverse(x._5()), this.A5$25.inverse(x._6()), this.A6$22.inverse(x._7()), this.A7$19.inverse(x._8()), this.A8$16.inverse(x._9()), this.A9$13.inverse(x._10()), this.A10$10.inverse(x._11()), this.A11$7.inverse(x._12()), this.A12$4.inverse(x._13()), this.A13$1.inverse(x._14()));
         }

         public {
            this.A0$40 = A0$40;
            this.A1$37 = A1$37;
            this.A2$34 = A2$34;
            this.A3$31 = A3$31;
            this.A4$28 = A4$28;
            this.A5$25 = A5$25;
            this.A6$22 = A6$22;
            this.A7$19 = A7$19;
            this.A8$16 = A8$16;
            this.A9$13 = A9$13;
            this.A10$10 = A10$10;
            this.A11$7 = A11$7;
            this.A12$4 = A12$4;
            this.A13$1 = A13$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple14$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13) {
      return $this.catsKernelStdOrderForTuple14(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13);
   }

   default Order catsKernelStdOrderForTuple14(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) {
         private final Order A0$41;
         private final Order A1$38;
         private final Order A2$35;
         private final Order A3$32;
         private final Order A4$29;
         private final Order A5$26;
         private final Order A6$23;
         private final Order A7$20;
         private final Order A8$17;
         private final Order A9$14;
         private final Order A10$11;
         private final Order A11$8;
         private final Order A12$5;
         private final Order A13$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple14 x, final Tuple14 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$41.compare(x._1(), y._1()), this.A1$38.compare(x._2(), y._2()), this.A2$35.compare(x._3(), y._3()), this.A3$32.compare(x._4(), y._4()), this.A4$29.compare(x._5(), y._5()), this.A5$26.compare(x._6(), y._6()), this.A6$23.compare(x._7(), y._7()), this.A7$20.compare(x._8(), y._8()), this.A8$17.compare(x._9(), y._9()), this.A9$14.compare(x._10(), y._10()), this.A10$11.compare(x._11(), y._11()), this.A11$8.compare(x._12(), y._12()), this.A12$5.compare(x._13(), y._13()), this.A13$2.compare(x._14(), y._14())}), (JFunction1.mcZI.sp)(x$14) -> x$14 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$41 = A0$41;
            this.A1$38 = A1$38;
            this.A2$35 = A2$35;
            this.A3$32 = A3$32;
            this.A4$29 = A4$29;
            this.A5$26 = A5$26;
            this.A6$23 = A6$23;
            this.A7$20 = A7$20;
            this.A8$17 = A8$17;
            this.A9$14 = A9$14;
            this.A10$11 = A10$11;
            this.A11$8 = A11$8;
            this.A12$5 = A12$5;
            this.A13$2 = A13$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple14$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13) {
      return $this.catsKernelStdBoundedSemilatticeForTuple14(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple14(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) {
         private final BoundedSemilattice A0$42;
         private final BoundedSemilattice A1$39;
         private final BoundedSemilattice A2$36;
         private final BoundedSemilattice A3$33;
         private final BoundedSemilattice A4$30;
         private final BoundedSemilattice A5$27;
         private final BoundedSemilattice A6$24;
         private final BoundedSemilattice A7$21;
         private final BoundedSemilattice A8$18;
         private final BoundedSemilattice A9$15;
         private final BoundedSemilattice A10$12;
         private final BoundedSemilattice A11$9;
         private final BoundedSemilattice A12$6;
         private final BoundedSemilattice A13$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple14 combine(final Tuple14 x, final Tuple14 y) {
            return new Tuple14(this.A0$42.combine(x._1(), y._1()), this.A1$39.combine(x._2(), y._2()), this.A2$36.combine(x._3(), y._3()), this.A3$33.combine(x._4(), y._4()), this.A4$30.combine(x._5(), y._5()), this.A5$27.combine(x._6(), y._6()), this.A6$24.combine(x._7(), y._7()), this.A7$21.combine(x._8(), y._8()), this.A8$18.combine(x._9(), y._9()), this.A9$15.combine(x._10(), y._10()), this.A10$12.combine(x._11(), y._11()), this.A11$9.combine(x._12(), y._12()), this.A12$6.combine(x._13(), y._13()), this.A13$3.combine(x._14(), y._14()));
         }

         public Tuple14 empty() {
            return new Tuple14(this.A0$42.empty(), this.A1$39.empty(), this.A2$36.empty(), this.A3$33.empty(), this.A4$30.empty(), this.A5$27.empty(), this.A6$24.empty(), this.A7$21.empty(), this.A8$18.empty(), this.A9$15.empty(), this.A10$12.empty(), this.A11$9.empty(), this.A12$6.empty(), this.A13$3.empty());
         }

         public {
            this.A0$42 = A0$42;
            this.A1$39 = A1$39;
            this.A2$36 = A2$36;
            this.A3$33 = A3$33;
            this.A4$30 = A4$30;
            this.A5$27 = A5$27;
            this.A6$24 = A6$24;
            this.A7$21 = A7$21;
            this.A8$18 = A8$18;
            this.A9$15 = A9$15;
            this.A10$12 = A10$12;
            this.A11$9 = A11$9;
            this.A12$6 = A12$6;
            this.A13$3 = A13$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple15$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14) {
      return $this.catsKernelStdCommutativeGroupForTuple15(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple15(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) {
         private final CommutativeGroup A0$43;
         private final CommutativeGroup A1$40;
         private final CommutativeGroup A2$37;
         private final CommutativeGroup A3$34;
         private final CommutativeGroup A4$31;
         private final CommutativeGroup A5$28;
         private final CommutativeGroup A6$25;
         private final CommutativeGroup A7$22;
         private final CommutativeGroup A8$19;
         private final CommutativeGroup A9$16;
         private final CommutativeGroup A10$13;
         private final CommutativeGroup A11$10;
         private final CommutativeGroup A12$7;
         private final CommutativeGroup A13$4;
         private final CommutativeGroup A14$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple15 combine(final Tuple15 x, final Tuple15 y) {
            return new Tuple15(this.A0$43.combine(x._1(), y._1()), this.A1$40.combine(x._2(), y._2()), this.A2$37.combine(x._3(), y._3()), this.A3$34.combine(x._4(), y._4()), this.A4$31.combine(x._5(), y._5()), this.A5$28.combine(x._6(), y._6()), this.A6$25.combine(x._7(), y._7()), this.A7$22.combine(x._8(), y._8()), this.A8$19.combine(x._9(), y._9()), this.A9$16.combine(x._10(), y._10()), this.A10$13.combine(x._11(), y._11()), this.A11$10.combine(x._12(), y._12()), this.A12$7.combine(x._13(), y._13()), this.A13$4.combine(x._14(), y._14()), this.A14$1.combine(x._15(), y._15()));
         }

         public Tuple15 empty() {
            return new Tuple15(this.A0$43.empty(), this.A1$40.empty(), this.A2$37.empty(), this.A3$34.empty(), this.A4$31.empty(), this.A5$28.empty(), this.A6$25.empty(), this.A7$22.empty(), this.A8$19.empty(), this.A9$16.empty(), this.A10$13.empty(), this.A11$10.empty(), this.A12$7.empty(), this.A13$4.empty(), this.A14$1.empty());
         }

         public Tuple15 inverse(final Tuple15 x) {
            return new Tuple15(this.A0$43.inverse(x._1()), this.A1$40.inverse(x._2()), this.A2$37.inverse(x._3()), this.A3$34.inverse(x._4()), this.A4$31.inverse(x._5()), this.A5$28.inverse(x._6()), this.A6$25.inverse(x._7()), this.A7$22.inverse(x._8()), this.A8$19.inverse(x._9()), this.A9$16.inverse(x._10()), this.A10$13.inverse(x._11()), this.A11$10.inverse(x._12()), this.A12$7.inverse(x._13()), this.A13$4.inverse(x._14()), this.A14$1.inverse(x._15()));
         }

         public {
            this.A0$43 = A0$43;
            this.A1$40 = A1$40;
            this.A2$37 = A2$37;
            this.A3$34 = A3$34;
            this.A4$31 = A4$31;
            this.A5$28 = A5$28;
            this.A6$25 = A6$25;
            this.A7$22 = A7$22;
            this.A8$19 = A8$19;
            this.A9$16 = A9$16;
            this.A10$13 = A10$13;
            this.A11$10 = A11$10;
            this.A12$7 = A12$7;
            this.A13$4 = A13$4;
            this.A14$1 = A14$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple15$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14) {
      return $this.catsKernelStdOrderForTuple15(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14);
   }

   default Order catsKernelStdOrderForTuple15(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) {
         private final Order A0$44;
         private final Order A1$41;
         private final Order A2$38;
         private final Order A3$35;
         private final Order A4$32;
         private final Order A5$29;
         private final Order A6$26;
         private final Order A7$23;
         private final Order A8$20;
         private final Order A9$17;
         private final Order A10$14;
         private final Order A11$11;
         private final Order A12$8;
         private final Order A13$5;
         private final Order A14$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple15 x, final Tuple15 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$44.compare(x._1(), y._1()), this.A1$41.compare(x._2(), y._2()), this.A2$38.compare(x._3(), y._3()), this.A3$35.compare(x._4(), y._4()), this.A4$32.compare(x._5(), y._5()), this.A5$29.compare(x._6(), y._6()), this.A6$26.compare(x._7(), y._7()), this.A7$23.compare(x._8(), y._8()), this.A8$20.compare(x._9(), y._9()), this.A9$17.compare(x._10(), y._10()), this.A10$14.compare(x._11(), y._11()), this.A11$11.compare(x._12(), y._12()), this.A12$8.compare(x._13(), y._13()), this.A13$5.compare(x._14(), y._14()), this.A14$2.compare(x._15(), y._15())}), (JFunction1.mcZI.sp)(x$15) -> x$15 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$44 = A0$44;
            this.A1$41 = A1$41;
            this.A2$38 = A2$38;
            this.A3$35 = A3$35;
            this.A4$32 = A4$32;
            this.A5$29 = A5$29;
            this.A6$26 = A6$26;
            this.A7$23 = A7$23;
            this.A8$20 = A8$20;
            this.A9$17 = A9$17;
            this.A10$14 = A10$14;
            this.A11$11 = A11$11;
            this.A12$8 = A12$8;
            this.A13$5 = A13$5;
            this.A14$2 = A14$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple15$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14) {
      return $this.catsKernelStdBoundedSemilatticeForTuple15(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple15(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) {
         private final BoundedSemilattice A0$45;
         private final BoundedSemilattice A1$42;
         private final BoundedSemilattice A2$39;
         private final BoundedSemilattice A3$36;
         private final BoundedSemilattice A4$33;
         private final BoundedSemilattice A5$30;
         private final BoundedSemilattice A6$27;
         private final BoundedSemilattice A7$24;
         private final BoundedSemilattice A8$21;
         private final BoundedSemilattice A9$18;
         private final BoundedSemilattice A10$15;
         private final BoundedSemilattice A11$12;
         private final BoundedSemilattice A12$9;
         private final BoundedSemilattice A13$6;
         private final BoundedSemilattice A14$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple15 combine(final Tuple15 x, final Tuple15 y) {
            return new Tuple15(this.A0$45.combine(x._1(), y._1()), this.A1$42.combine(x._2(), y._2()), this.A2$39.combine(x._3(), y._3()), this.A3$36.combine(x._4(), y._4()), this.A4$33.combine(x._5(), y._5()), this.A5$30.combine(x._6(), y._6()), this.A6$27.combine(x._7(), y._7()), this.A7$24.combine(x._8(), y._8()), this.A8$21.combine(x._9(), y._9()), this.A9$18.combine(x._10(), y._10()), this.A10$15.combine(x._11(), y._11()), this.A11$12.combine(x._12(), y._12()), this.A12$9.combine(x._13(), y._13()), this.A13$6.combine(x._14(), y._14()), this.A14$3.combine(x._15(), y._15()));
         }

         public Tuple15 empty() {
            return new Tuple15(this.A0$45.empty(), this.A1$42.empty(), this.A2$39.empty(), this.A3$36.empty(), this.A4$33.empty(), this.A5$30.empty(), this.A6$27.empty(), this.A7$24.empty(), this.A8$21.empty(), this.A9$18.empty(), this.A10$15.empty(), this.A11$12.empty(), this.A12$9.empty(), this.A13$6.empty(), this.A14$3.empty());
         }

         public {
            this.A0$45 = A0$45;
            this.A1$42 = A1$42;
            this.A2$39 = A2$39;
            this.A3$36 = A3$36;
            this.A4$33 = A4$33;
            this.A5$30 = A5$30;
            this.A6$27 = A6$27;
            this.A7$24 = A7$24;
            this.A8$21 = A8$21;
            this.A9$18 = A9$18;
            this.A10$15 = A10$15;
            this.A11$12 = A11$12;
            this.A12$9 = A12$9;
            this.A13$6 = A13$6;
            this.A14$3 = A14$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple16$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15) {
      return $this.catsKernelStdCommutativeGroupForTuple16(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple16(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) {
         private final CommutativeGroup A0$46;
         private final CommutativeGroup A1$43;
         private final CommutativeGroup A2$40;
         private final CommutativeGroup A3$37;
         private final CommutativeGroup A4$34;
         private final CommutativeGroup A5$31;
         private final CommutativeGroup A6$28;
         private final CommutativeGroup A7$25;
         private final CommutativeGroup A8$22;
         private final CommutativeGroup A9$19;
         private final CommutativeGroup A10$16;
         private final CommutativeGroup A11$13;
         private final CommutativeGroup A12$10;
         private final CommutativeGroup A13$7;
         private final CommutativeGroup A14$4;
         private final CommutativeGroup A15$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple16 combine(final Tuple16 x, final Tuple16 y) {
            return new Tuple16(this.A0$46.combine(x._1(), y._1()), this.A1$43.combine(x._2(), y._2()), this.A2$40.combine(x._3(), y._3()), this.A3$37.combine(x._4(), y._4()), this.A4$34.combine(x._5(), y._5()), this.A5$31.combine(x._6(), y._6()), this.A6$28.combine(x._7(), y._7()), this.A7$25.combine(x._8(), y._8()), this.A8$22.combine(x._9(), y._9()), this.A9$19.combine(x._10(), y._10()), this.A10$16.combine(x._11(), y._11()), this.A11$13.combine(x._12(), y._12()), this.A12$10.combine(x._13(), y._13()), this.A13$7.combine(x._14(), y._14()), this.A14$4.combine(x._15(), y._15()), this.A15$1.combine(x._16(), y._16()));
         }

         public Tuple16 empty() {
            return new Tuple16(this.A0$46.empty(), this.A1$43.empty(), this.A2$40.empty(), this.A3$37.empty(), this.A4$34.empty(), this.A5$31.empty(), this.A6$28.empty(), this.A7$25.empty(), this.A8$22.empty(), this.A9$19.empty(), this.A10$16.empty(), this.A11$13.empty(), this.A12$10.empty(), this.A13$7.empty(), this.A14$4.empty(), this.A15$1.empty());
         }

         public Tuple16 inverse(final Tuple16 x) {
            return new Tuple16(this.A0$46.inverse(x._1()), this.A1$43.inverse(x._2()), this.A2$40.inverse(x._3()), this.A3$37.inverse(x._4()), this.A4$34.inverse(x._5()), this.A5$31.inverse(x._6()), this.A6$28.inverse(x._7()), this.A7$25.inverse(x._8()), this.A8$22.inverse(x._9()), this.A9$19.inverse(x._10()), this.A10$16.inverse(x._11()), this.A11$13.inverse(x._12()), this.A12$10.inverse(x._13()), this.A13$7.inverse(x._14()), this.A14$4.inverse(x._15()), this.A15$1.inverse(x._16()));
         }

         public {
            this.A0$46 = A0$46;
            this.A1$43 = A1$43;
            this.A2$40 = A2$40;
            this.A3$37 = A3$37;
            this.A4$34 = A4$34;
            this.A5$31 = A5$31;
            this.A6$28 = A6$28;
            this.A7$25 = A7$25;
            this.A8$22 = A8$22;
            this.A9$19 = A9$19;
            this.A10$16 = A10$16;
            this.A11$13 = A11$13;
            this.A12$10 = A12$10;
            this.A13$7 = A13$7;
            this.A14$4 = A14$4;
            this.A15$1 = A15$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple16$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15) {
      return $this.catsKernelStdOrderForTuple16(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15);
   }

   default Order catsKernelStdOrderForTuple16(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) {
         private final Order A0$47;
         private final Order A1$44;
         private final Order A2$41;
         private final Order A3$38;
         private final Order A4$35;
         private final Order A5$32;
         private final Order A6$29;
         private final Order A7$26;
         private final Order A8$23;
         private final Order A9$20;
         private final Order A10$17;
         private final Order A11$14;
         private final Order A12$11;
         private final Order A13$8;
         private final Order A14$5;
         private final Order A15$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple16 x, final Tuple16 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$47.compare(x._1(), y._1()), this.A1$44.compare(x._2(), y._2()), this.A2$41.compare(x._3(), y._3()), this.A3$38.compare(x._4(), y._4()), this.A4$35.compare(x._5(), y._5()), this.A5$32.compare(x._6(), y._6()), this.A6$29.compare(x._7(), y._7()), this.A7$26.compare(x._8(), y._8()), this.A8$23.compare(x._9(), y._9()), this.A9$20.compare(x._10(), y._10()), this.A10$17.compare(x._11(), y._11()), this.A11$14.compare(x._12(), y._12()), this.A12$11.compare(x._13(), y._13()), this.A13$8.compare(x._14(), y._14()), this.A14$5.compare(x._15(), y._15()), this.A15$2.compare(x._16(), y._16())}), (JFunction1.mcZI.sp)(x$16) -> x$16 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$47 = A0$47;
            this.A1$44 = A1$44;
            this.A2$41 = A2$41;
            this.A3$38 = A3$38;
            this.A4$35 = A4$35;
            this.A5$32 = A5$32;
            this.A6$29 = A6$29;
            this.A7$26 = A7$26;
            this.A8$23 = A8$23;
            this.A9$20 = A9$20;
            this.A10$17 = A10$17;
            this.A11$14 = A11$14;
            this.A12$11 = A12$11;
            this.A13$8 = A13$8;
            this.A14$5 = A14$5;
            this.A15$2 = A15$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple16$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15) {
      return $this.catsKernelStdBoundedSemilatticeForTuple16(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple16(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) {
         private final BoundedSemilattice A0$48;
         private final BoundedSemilattice A1$45;
         private final BoundedSemilattice A2$42;
         private final BoundedSemilattice A3$39;
         private final BoundedSemilattice A4$36;
         private final BoundedSemilattice A5$33;
         private final BoundedSemilattice A6$30;
         private final BoundedSemilattice A7$27;
         private final BoundedSemilattice A8$24;
         private final BoundedSemilattice A9$21;
         private final BoundedSemilattice A10$18;
         private final BoundedSemilattice A11$15;
         private final BoundedSemilattice A12$12;
         private final BoundedSemilattice A13$9;
         private final BoundedSemilattice A14$6;
         private final BoundedSemilattice A15$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple16 combine(final Tuple16 x, final Tuple16 y) {
            return new Tuple16(this.A0$48.combine(x._1(), y._1()), this.A1$45.combine(x._2(), y._2()), this.A2$42.combine(x._3(), y._3()), this.A3$39.combine(x._4(), y._4()), this.A4$36.combine(x._5(), y._5()), this.A5$33.combine(x._6(), y._6()), this.A6$30.combine(x._7(), y._7()), this.A7$27.combine(x._8(), y._8()), this.A8$24.combine(x._9(), y._9()), this.A9$21.combine(x._10(), y._10()), this.A10$18.combine(x._11(), y._11()), this.A11$15.combine(x._12(), y._12()), this.A12$12.combine(x._13(), y._13()), this.A13$9.combine(x._14(), y._14()), this.A14$6.combine(x._15(), y._15()), this.A15$3.combine(x._16(), y._16()));
         }

         public Tuple16 empty() {
            return new Tuple16(this.A0$48.empty(), this.A1$45.empty(), this.A2$42.empty(), this.A3$39.empty(), this.A4$36.empty(), this.A5$33.empty(), this.A6$30.empty(), this.A7$27.empty(), this.A8$24.empty(), this.A9$21.empty(), this.A10$18.empty(), this.A11$15.empty(), this.A12$12.empty(), this.A13$9.empty(), this.A14$6.empty(), this.A15$3.empty());
         }

         public {
            this.A0$48 = A0$48;
            this.A1$45 = A1$45;
            this.A2$42 = A2$42;
            this.A3$39 = A3$39;
            this.A4$36 = A4$36;
            this.A5$33 = A5$33;
            this.A6$30 = A6$30;
            this.A7$27 = A7$27;
            this.A8$24 = A8$24;
            this.A9$21 = A9$21;
            this.A10$18 = A10$18;
            this.A11$15 = A11$15;
            this.A12$12 = A12$12;
            this.A13$9 = A13$9;
            this.A14$6 = A14$6;
            this.A15$3 = A15$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple17$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16) {
      return $this.catsKernelStdCommutativeGroupForTuple17(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple17(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) {
         private final CommutativeGroup A0$49;
         private final CommutativeGroup A1$46;
         private final CommutativeGroup A2$43;
         private final CommutativeGroup A3$40;
         private final CommutativeGroup A4$37;
         private final CommutativeGroup A5$34;
         private final CommutativeGroup A6$31;
         private final CommutativeGroup A7$28;
         private final CommutativeGroup A8$25;
         private final CommutativeGroup A9$22;
         private final CommutativeGroup A10$19;
         private final CommutativeGroup A11$16;
         private final CommutativeGroup A12$13;
         private final CommutativeGroup A13$10;
         private final CommutativeGroup A14$7;
         private final CommutativeGroup A15$4;
         private final CommutativeGroup A16$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple17 combine(final Tuple17 x, final Tuple17 y) {
            return new Tuple17(this.A0$49.combine(x._1(), y._1()), this.A1$46.combine(x._2(), y._2()), this.A2$43.combine(x._3(), y._3()), this.A3$40.combine(x._4(), y._4()), this.A4$37.combine(x._5(), y._5()), this.A5$34.combine(x._6(), y._6()), this.A6$31.combine(x._7(), y._7()), this.A7$28.combine(x._8(), y._8()), this.A8$25.combine(x._9(), y._9()), this.A9$22.combine(x._10(), y._10()), this.A10$19.combine(x._11(), y._11()), this.A11$16.combine(x._12(), y._12()), this.A12$13.combine(x._13(), y._13()), this.A13$10.combine(x._14(), y._14()), this.A14$7.combine(x._15(), y._15()), this.A15$4.combine(x._16(), y._16()), this.A16$1.combine(x._17(), y._17()));
         }

         public Tuple17 empty() {
            return new Tuple17(this.A0$49.empty(), this.A1$46.empty(), this.A2$43.empty(), this.A3$40.empty(), this.A4$37.empty(), this.A5$34.empty(), this.A6$31.empty(), this.A7$28.empty(), this.A8$25.empty(), this.A9$22.empty(), this.A10$19.empty(), this.A11$16.empty(), this.A12$13.empty(), this.A13$10.empty(), this.A14$7.empty(), this.A15$4.empty(), this.A16$1.empty());
         }

         public Tuple17 inverse(final Tuple17 x) {
            return new Tuple17(this.A0$49.inverse(x._1()), this.A1$46.inverse(x._2()), this.A2$43.inverse(x._3()), this.A3$40.inverse(x._4()), this.A4$37.inverse(x._5()), this.A5$34.inverse(x._6()), this.A6$31.inverse(x._7()), this.A7$28.inverse(x._8()), this.A8$25.inverse(x._9()), this.A9$22.inverse(x._10()), this.A10$19.inverse(x._11()), this.A11$16.inverse(x._12()), this.A12$13.inverse(x._13()), this.A13$10.inverse(x._14()), this.A14$7.inverse(x._15()), this.A15$4.inverse(x._16()), this.A16$1.inverse(x._17()));
         }

         public {
            this.A0$49 = A0$49;
            this.A1$46 = A1$46;
            this.A2$43 = A2$43;
            this.A3$40 = A3$40;
            this.A4$37 = A4$37;
            this.A5$34 = A5$34;
            this.A6$31 = A6$31;
            this.A7$28 = A7$28;
            this.A8$25 = A8$25;
            this.A9$22 = A9$22;
            this.A10$19 = A10$19;
            this.A11$16 = A11$16;
            this.A12$13 = A12$13;
            this.A13$10 = A13$10;
            this.A14$7 = A14$7;
            this.A15$4 = A15$4;
            this.A16$1 = A16$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple17$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15, final Order A16) {
      return $this.catsKernelStdOrderForTuple17(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16);
   }

   default Order catsKernelStdOrderForTuple17(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15, final Order A16) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) {
         private final Order A0$50;
         private final Order A1$47;
         private final Order A2$44;
         private final Order A3$41;
         private final Order A4$38;
         private final Order A5$35;
         private final Order A6$32;
         private final Order A7$29;
         private final Order A8$26;
         private final Order A9$23;
         private final Order A10$20;
         private final Order A11$17;
         private final Order A12$14;
         private final Order A13$11;
         private final Order A14$8;
         private final Order A15$5;
         private final Order A16$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple17 x, final Tuple17 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$50.compare(x._1(), y._1()), this.A1$47.compare(x._2(), y._2()), this.A2$44.compare(x._3(), y._3()), this.A3$41.compare(x._4(), y._4()), this.A4$38.compare(x._5(), y._5()), this.A5$35.compare(x._6(), y._6()), this.A6$32.compare(x._7(), y._7()), this.A7$29.compare(x._8(), y._8()), this.A8$26.compare(x._9(), y._9()), this.A9$23.compare(x._10(), y._10()), this.A10$20.compare(x._11(), y._11()), this.A11$17.compare(x._12(), y._12()), this.A12$14.compare(x._13(), y._13()), this.A13$11.compare(x._14(), y._14()), this.A14$8.compare(x._15(), y._15()), this.A15$5.compare(x._16(), y._16()), this.A16$2.compare(x._17(), y._17())}), (JFunction1.mcZI.sp)(x$17) -> x$17 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$50 = A0$50;
            this.A1$47 = A1$47;
            this.A2$44 = A2$44;
            this.A3$41 = A3$41;
            this.A4$38 = A4$38;
            this.A5$35 = A5$35;
            this.A6$32 = A6$32;
            this.A7$29 = A7$29;
            this.A8$26 = A8$26;
            this.A9$23 = A9$23;
            this.A10$20 = A10$20;
            this.A11$17 = A11$17;
            this.A12$14 = A12$14;
            this.A13$11 = A13$11;
            this.A14$8 = A14$8;
            this.A15$5 = A15$5;
            this.A16$2 = A16$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple17$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16) {
      return $this.catsKernelStdBoundedSemilatticeForTuple17(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple17(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) {
         private final BoundedSemilattice A0$51;
         private final BoundedSemilattice A1$48;
         private final BoundedSemilattice A2$45;
         private final BoundedSemilattice A3$42;
         private final BoundedSemilattice A4$39;
         private final BoundedSemilattice A5$36;
         private final BoundedSemilattice A6$33;
         private final BoundedSemilattice A7$30;
         private final BoundedSemilattice A8$27;
         private final BoundedSemilattice A9$24;
         private final BoundedSemilattice A10$21;
         private final BoundedSemilattice A11$18;
         private final BoundedSemilattice A12$15;
         private final BoundedSemilattice A13$12;
         private final BoundedSemilattice A14$9;
         private final BoundedSemilattice A15$6;
         private final BoundedSemilattice A16$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple17 combine(final Tuple17 x, final Tuple17 y) {
            return new Tuple17(this.A0$51.combine(x._1(), y._1()), this.A1$48.combine(x._2(), y._2()), this.A2$45.combine(x._3(), y._3()), this.A3$42.combine(x._4(), y._4()), this.A4$39.combine(x._5(), y._5()), this.A5$36.combine(x._6(), y._6()), this.A6$33.combine(x._7(), y._7()), this.A7$30.combine(x._8(), y._8()), this.A8$27.combine(x._9(), y._9()), this.A9$24.combine(x._10(), y._10()), this.A10$21.combine(x._11(), y._11()), this.A11$18.combine(x._12(), y._12()), this.A12$15.combine(x._13(), y._13()), this.A13$12.combine(x._14(), y._14()), this.A14$9.combine(x._15(), y._15()), this.A15$6.combine(x._16(), y._16()), this.A16$3.combine(x._17(), y._17()));
         }

         public Tuple17 empty() {
            return new Tuple17(this.A0$51.empty(), this.A1$48.empty(), this.A2$45.empty(), this.A3$42.empty(), this.A4$39.empty(), this.A5$36.empty(), this.A6$33.empty(), this.A7$30.empty(), this.A8$27.empty(), this.A9$24.empty(), this.A10$21.empty(), this.A11$18.empty(), this.A12$15.empty(), this.A13$12.empty(), this.A14$9.empty(), this.A15$6.empty(), this.A16$3.empty());
         }

         public {
            this.A0$51 = A0$51;
            this.A1$48 = A1$48;
            this.A2$45 = A2$45;
            this.A3$42 = A3$42;
            this.A4$39 = A4$39;
            this.A5$36 = A5$36;
            this.A6$33 = A6$33;
            this.A7$30 = A7$30;
            this.A8$27 = A8$27;
            this.A9$24 = A9$24;
            this.A10$21 = A10$21;
            this.A11$18 = A11$18;
            this.A12$15 = A12$15;
            this.A13$12 = A13$12;
            this.A14$9 = A14$9;
            this.A15$6 = A15$6;
            this.A16$3 = A16$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple18$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17) {
      return $this.catsKernelStdCommutativeGroupForTuple18(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple18(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) {
         private final CommutativeGroup A0$52;
         private final CommutativeGroup A1$49;
         private final CommutativeGroup A2$46;
         private final CommutativeGroup A3$43;
         private final CommutativeGroup A4$40;
         private final CommutativeGroup A5$37;
         private final CommutativeGroup A6$34;
         private final CommutativeGroup A7$31;
         private final CommutativeGroup A8$28;
         private final CommutativeGroup A9$25;
         private final CommutativeGroup A10$22;
         private final CommutativeGroup A11$19;
         private final CommutativeGroup A12$16;
         private final CommutativeGroup A13$13;
         private final CommutativeGroup A14$10;
         private final CommutativeGroup A15$7;
         private final CommutativeGroup A16$4;
         private final CommutativeGroup A17$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple18 combine(final Tuple18 x, final Tuple18 y) {
            return new Tuple18(this.A0$52.combine(x._1(), y._1()), this.A1$49.combine(x._2(), y._2()), this.A2$46.combine(x._3(), y._3()), this.A3$43.combine(x._4(), y._4()), this.A4$40.combine(x._5(), y._5()), this.A5$37.combine(x._6(), y._6()), this.A6$34.combine(x._7(), y._7()), this.A7$31.combine(x._8(), y._8()), this.A8$28.combine(x._9(), y._9()), this.A9$25.combine(x._10(), y._10()), this.A10$22.combine(x._11(), y._11()), this.A11$19.combine(x._12(), y._12()), this.A12$16.combine(x._13(), y._13()), this.A13$13.combine(x._14(), y._14()), this.A14$10.combine(x._15(), y._15()), this.A15$7.combine(x._16(), y._16()), this.A16$4.combine(x._17(), y._17()), this.A17$1.combine(x._18(), y._18()));
         }

         public Tuple18 empty() {
            return new Tuple18(this.A0$52.empty(), this.A1$49.empty(), this.A2$46.empty(), this.A3$43.empty(), this.A4$40.empty(), this.A5$37.empty(), this.A6$34.empty(), this.A7$31.empty(), this.A8$28.empty(), this.A9$25.empty(), this.A10$22.empty(), this.A11$19.empty(), this.A12$16.empty(), this.A13$13.empty(), this.A14$10.empty(), this.A15$7.empty(), this.A16$4.empty(), this.A17$1.empty());
         }

         public Tuple18 inverse(final Tuple18 x) {
            return new Tuple18(this.A0$52.inverse(x._1()), this.A1$49.inverse(x._2()), this.A2$46.inverse(x._3()), this.A3$43.inverse(x._4()), this.A4$40.inverse(x._5()), this.A5$37.inverse(x._6()), this.A6$34.inverse(x._7()), this.A7$31.inverse(x._8()), this.A8$28.inverse(x._9()), this.A9$25.inverse(x._10()), this.A10$22.inverse(x._11()), this.A11$19.inverse(x._12()), this.A12$16.inverse(x._13()), this.A13$13.inverse(x._14()), this.A14$10.inverse(x._15()), this.A15$7.inverse(x._16()), this.A16$4.inverse(x._17()), this.A17$1.inverse(x._18()));
         }

         public {
            this.A0$52 = A0$52;
            this.A1$49 = A1$49;
            this.A2$46 = A2$46;
            this.A3$43 = A3$43;
            this.A4$40 = A4$40;
            this.A5$37 = A5$37;
            this.A6$34 = A6$34;
            this.A7$31 = A7$31;
            this.A8$28 = A8$28;
            this.A9$25 = A9$25;
            this.A10$22 = A10$22;
            this.A11$19 = A11$19;
            this.A12$16 = A12$16;
            this.A13$13 = A13$13;
            this.A14$10 = A14$10;
            this.A15$7 = A15$7;
            this.A16$4 = A16$4;
            this.A17$1 = A17$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple18$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15, final Order A16, final Order A17) {
      return $this.catsKernelStdOrderForTuple18(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17);
   }

   default Order catsKernelStdOrderForTuple18(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15, final Order A16, final Order A17) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) {
         private final Order A0$53;
         private final Order A1$50;
         private final Order A2$47;
         private final Order A3$44;
         private final Order A4$41;
         private final Order A5$38;
         private final Order A6$35;
         private final Order A7$32;
         private final Order A8$29;
         private final Order A9$26;
         private final Order A10$23;
         private final Order A11$20;
         private final Order A12$17;
         private final Order A13$14;
         private final Order A14$11;
         private final Order A15$8;
         private final Order A16$5;
         private final Order A17$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple18 x, final Tuple18 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$53.compare(x._1(), y._1()), this.A1$50.compare(x._2(), y._2()), this.A2$47.compare(x._3(), y._3()), this.A3$44.compare(x._4(), y._4()), this.A4$41.compare(x._5(), y._5()), this.A5$38.compare(x._6(), y._6()), this.A6$35.compare(x._7(), y._7()), this.A7$32.compare(x._8(), y._8()), this.A8$29.compare(x._9(), y._9()), this.A9$26.compare(x._10(), y._10()), this.A10$23.compare(x._11(), y._11()), this.A11$20.compare(x._12(), y._12()), this.A12$17.compare(x._13(), y._13()), this.A13$14.compare(x._14(), y._14()), this.A14$11.compare(x._15(), y._15()), this.A15$8.compare(x._16(), y._16()), this.A16$5.compare(x._17(), y._17()), this.A17$2.compare(x._18(), y._18())}), (JFunction1.mcZI.sp)(x$18) -> x$18 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$53 = A0$53;
            this.A1$50 = A1$50;
            this.A2$47 = A2$47;
            this.A3$44 = A3$44;
            this.A4$41 = A4$41;
            this.A5$38 = A5$38;
            this.A6$35 = A6$35;
            this.A7$32 = A7$32;
            this.A8$29 = A8$29;
            this.A9$26 = A9$26;
            this.A10$23 = A10$23;
            this.A11$20 = A11$20;
            this.A12$17 = A12$17;
            this.A13$14 = A13$14;
            this.A14$11 = A14$11;
            this.A15$8 = A15$8;
            this.A16$5 = A16$5;
            this.A17$2 = A17$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple18$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17) {
      return $this.catsKernelStdBoundedSemilatticeForTuple18(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple18(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) {
         private final BoundedSemilattice A0$54;
         private final BoundedSemilattice A1$51;
         private final BoundedSemilattice A2$48;
         private final BoundedSemilattice A3$45;
         private final BoundedSemilattice A4$42;
         private final BoundedSemilattice A5$39;
         private final BoundedSemilattice A6$36;
         private final BoundedSemilattice A7$33;
         private final BoundedSemilattice A8$30;
         private final BoundedSemilattice A9$27;
         private final BoundedSemilattice A10$24;
         private final BoundedSemilattice A11$21;
         private final BoundedSemilattice A12$18;
         private final BoundedSemilattice A13$15;
         private final BoundedSemilattice A14$12;
         private final BoundedSemilattice A15$9;
         private final BoundedSemilattice A16$6;
         private final BoundedSemilattice A17$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple18 combine(final Tuple18 x, final Tuple18 y) {
            return new Tuple18(this.A0$54.combine(x._1(), y._1()), this.A1$51.combine(x._2(), y._2()), this.A2$48.combine(x._3(), y._3()), this.A3$45.combine(x._4(), y._4()), this.A4$42.combine(x._5(), y._5()), this.A5$39.combine(x._6(), y._6()), this.A6$36.combine(x._7(), y._7()), this.A7$33.combine(x._8(), y._8()), this.A8$30.combine(x._9(), y._9()), this.A9$27.combine(x._10(), y._10()), this.A10$24.combine(x._11(), y._11()), this.A11$21.combine(x._12(), y._12()), this.A12$18.combine(x._13(), y._13()), this.A13$15.combine(x._14(), y._14()), this.A14$12.combine(x._15(), y._15()), this.A15$9.combine(x._16(), y._16()), this.A16$6.combine(x._17(), y._17()), this.A17$3.combine(x._18(), y._18()));
         }

         public Tuple18 empty() {
            return new Tuple18(this.A0$54.empty(), this.A1$51.empty(), this.A2$48.empty(), this.A3$45.empty(), this.A4$42.empty(), this.A5$39.empty(), this.A6$36.empty(), this.A7$33.empty(), this.A8$30.empty(), this.A9$27.empty(), this.A10$24.empty(), this.A11$21.empty(), this.A12$18.empty(), this.A13$15.empty(), this.A14$12.empty(), this.A15$9.empty(), this.A16$6.empty(), this.A17$3.empty());
         }

         public {
            this.A0$54 = A0$54;
            this.A1$51 = A1$51;
            this.A2$48 = A2$48;
            this.A3$45 = A3$45;
            this.A4$42 = A4$42;
            this.A5$39 = A5$39;
            this.A6$36 = A6$36;
            this.A7$33 = A7$33;
            this.A8$30 = A8$30;
            this.A9$27 = A9$27;
            this.A10$24 = A10$24;
            this.A11$21 = A11$21;
            this.A12$18 = A12$18;
            this.A13$15 = A13$15;
            this.A14$12 = A14$12;
            this.A15$9 = A15$9;
            this.A16$6 = A16$6;
            this.A17$3 = A17$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple19$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18) {
      return $this.catsKernelStdCommutativeGroupForTuple19(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple19(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) {
         private final CommutativeGroup A0$55;
         private final CommutativeGroup A1$52;
         private final CommutativeGroup A2$49;
         private final CommutativeGroup A3$46;
         private final CommutativeGroup A4$43;
         private final CommutativeGroup A5$40;
         private final CommutativeGroup A6$37;
         private final CommutativeGroup A7$34;
         private final CommutativeGroup A8$31;
         private final CommutativeGroup A9$28;
         private final CommutativeGroup A10$25;
         private final CommutativeGroup A11$22;
         private final CommutativeGroup A12$19;
         private final CommutativeGroup A13$16;
         private final CommutativeGroup A14$13;
         private final CommutativeGroup A15$10;
         private final CommutativeGroup A16$7;
         private final CommutativeGroup A17$4;
         private final CommutativeGroup A18$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple19 combine(final Tuple19 x, final Tuple19 y) {
            return new Tuple19(this.A0$55.combine(x._1(), y._1()), this.A1$52.combine(x._2(), y._2()), this.A2$49.combine(x._3(), y._3()), this.A3$46.combine(x._4(), y._4()), this.A4$43.combine(x._5(), y._5()), this.A5$40.combine(x._6(), y._6()), this.A6$37.combine(x._7(), y._7()), this.A7$34.combine(x._8(), y._8()), this.A8$31.combine(x._9(), y._9()), this.A9$28.combine(x._10(), y._10()), this.A10$25.combine(x._11(), y._11()), this.A11$22.combine(x._12(), y._12()), this.A12$19.combine(x._13(), y._13()), this.A13$16.combine(x._14(), y._14()), this.A14$13.combine(x._15(), y._15()), this.A15$10.combine(x._16(), y._16()), this.A16$7.combine(x._17(), y._17()), this.A17$4.combine(x._18(), y._18()), this.A18$1.combine(x._19(), y._19()));
         }

         public Tuple19 empty() {
            return new Tuple19(this.A0$55.empty(), this.A1$52.empty(), this.A2$49.empty(), this.A3$46.empty(), this.A4$43.empty(), this.A5$40.empty(), this.A6$37.empty(), this.A7$34.empty(), this.A8$31.empty(), this.A9$28.empty(), this.A10$25.empty(), this.A11$22.empty(), this.A12$19.empty(), this.A13$16.empty(), this.A14$13.empty(), this.A15$10.empty(), this.A16$7.empty(), this.A17$4.empty(), this.A18$1.empty());
         }

         public Tuple19 inverse(final Tuple19 x) {
            return new Tuple19(this.A0$55.inverse(x._1()), this.A1$52.inverse(x._2()), this.A2$49.inverse(x._3()), this.A3$46.inverse(x._4()), this.A4$43.inverse(x._5()), this.A5$40.inverse(x._6()), this.A6$37.inverse(x._7()), this.A7$34.inverse(x._8()), this.A8$31.inverse(x._9()), this.A9$28.inverse(x._10()), this.A10$25.inverse(x._11()), this.A11$22.inverse(x._12()), this.A12$19.inverse(x._13()), this.A13$16.inverse(x._14()), this.A14$13.inverse(x._15()), this.A15$10.inverse(x._16()), this.A16$7.inverse(x._17()), this.A17$4.inverse(x._18()), this.A18$1.inverse(x._19()));
         }

         public {
            this.A0$55 = A0$55;
            this.A1$52 = A1$52;
            this.A2$49 = A2$49;
            this.A3$46 = A3$46;
            this.A4$43 = A4$43;
            this.A5$40 = A5$40;
            this.A6$37 = A6$37;
            this.A7$34 = A7$34;
            this.A8$31 = A8$31;
            this.A9$28 = A9$28;
            this.A10$25 = A10$25;
            this.A11$22 = A11$22;
            this.A12$19 = A12$19;
            this.A13$16 = A13$16;
            this.A14$13 = A14$13;
            this.A15$10 = A15$10;
            this.A16$7 = A16$7;
            this.A17$4 = A17$4;
            this.A18$1 = A18$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple19$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15, final Order A16, final Order A17, final Order A18) {
      return $this.catsKernelStdOrderForTuple19(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18);
   }

   default Order catsKernelStdOrderForTuple19(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15, final Order A16, final Order A17, final Order A18) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) {
         private final Order A0$56;
         private final Order A1$53;
         private final Order A2$50;
         private final Order A3$47;
         private final Order A4$44;
         private final Order A5$41;
         private final Order A6$38;
         private final Order A7$35;
         private final Order A8$32;
         private final Order A9$29;
         private final Order A10$26;
         private final Order A11$23;
         private final Order A12$20;
         private final Order A13$17;
         private final Order A14$14;
         private final Order A15$11;
         private final Order A16$8;
         private final Order A17$5;
         private final Order A18$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple19 x, final Tuple19 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$56.compare(x._1(), y._1()), this.A1$53.compare(x._2(), y._2()), this.A2$50.compare(x._3(), y._3()), this.A3$47.compare(x._4(), y._4()), this.A4$44.compare(x._5(), y._5()), this.A5$41.compare(x._6(), y._6()), this.A6$38.compare(x._7(), y._7()), this.A7$35.compare(x._8(), y._8()), this.A8$32.compare(x._9(), y._9()), this.A9$29.compare(x._10(), y._10()), this.A10$26.compare(x._11(), y._11()), this.A11$23.compare(x._12(), y._12()), this.A12$20.compare(x._13(), y._13()), this.A13$17.compare(x._14(), y._14()), this.A14$14.compare(x._15(), y._15()), this.A15$11.compare(x._16(), y._16()), this.A16$8.compare(x._17(), y._17()), this.A17$5.compare(x._18(), y._18()), this.A18$2.compare(x._19(), y._19())}), (JFunction1.mcZI.sp)(x$19) -> x$19 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$56 = A0$56;
            this.A1$53 = A1$53;
            this.A2$50 = A2$50;
            this.A3$47 = A3$47;
            this.A4$44 = A4$44;
            this.A5$41 = A5$41;
            this.A6$38 = A6$38;
            this.A7$35 = A7$35;
            this.A8$32 = A8$32;
            this.A9$29 = A9$29;
            this.A10$26 = A10$26;
            this.A11$23 = A11$23;
            this.A12$20 = A12$20;
            this.A13$17 = A13$17;
            this.A14$14 = A14$14;
            this.A15$11 = A15$11;
            this.A16$8 = A16$8;
            this.A17$5 = A17$5;
            this.A18$2 = A18$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple19$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18) {
      return $this.catsKernelStdBoundedSemilatticeForTuple19(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple19(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) {
         private final BoundedSemilattice A0$57;
         private final BoundedSemilattice A1$54;
         private final BoundedSemilattice A2$51;
         private final BoundedSemilattice A3$48;
         private final BoundedSemilattice A4$45;
         private final BoundedSemilattice A5$42;
         private final BoundedSemilattice A6$39;
         private final BoundedSemilattice A7$36;
         private final BoundedSemilattice A8$33;
         private final BoundedSemilattice A9$30;
         private final BoundedSemilattice A10$27;
         private final BoundedSemilattice A11$24;
         private final BoundedSemilattice A12$21;
         private final BoundedSemilattice A13$18;
         private final BoundedSemilattice A14$15;
         private final BoundedSemilattice A15$12;
         private final BoundedSemilattice A16$9;
         private final BoundedSemilattice A17$6;
         private final BoundedSemilattice A18$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple19 combine(final Tuple19 x, final Tuple19 y) {
            return new Tuple19(this.A0$57.combine(x._1(), y._1()), this.A1$54.combine(x._2(), y._2()), this.A2$51.combine(x._3(), y._3()), this.A3$48.combine(x._4(), y._4()), this.A4$45.combine(x._5(), y._5()), this.A5$42.combine(x._6(), y._6()), this.A6$39.combine(x._7(), y._7()), this.A7$36.combine(x._8(), y._8()), this.A8$33.combine(x._9(), y._9()), this.A9$30.combine(x._10(), y._10()), this.A10$27.combine(x._11(), y._11()), this.A11$24.combine(x._12(), y._12()), this.A12$21.combine(x._13(), y._13()), this.A13$18.combine(x._14(), y._14()), this.A14$15.combine(x._15(), y._15()), this.A15$12.combine(x._16(), y._16()), this.A16$9.combine(x._17(), y._17()), this.A17$6.combine(x._18(), y._18()), this.A18$3.combine(x._19(), y._19()));
         }

         public Tuple19 empty() {
            return new Tuple19(this.A0$57.empty(), this.A1$54.empty(), this.A2$51.empty(), this.A3$48.empty(), this.A4$45.empty(), this.A5$42.empty(), this.A6$39.empty(), this.A7$36.empty(), this.A8$33.empty(), this.A9$30.empty(), this.A10$27.empty(), this.A11$24.empty(), this.A12$21.empty(), this.A13$18.empty(), this.A14$15.empty(), this.A15$12.empty(), this.A16$9.empty(), this.A17$6.empty(), this.A18$3.empty());
         }

         public {
            this.A0$57 = A0$57;
            this.A1$54 = A1$54;
            this.A2$51 = A2$51;
            this.A3$48 = A3$48;
            this.A4$45 = A4$45;
            this.A5$42 = A5$42;
            this.A6$39 = A6$39;
            this.A7$36 = A7$36;
            this.A8$33 = A8$33;
            this.A9$30 = A9$30;
            this.A10$27 = A10$27;
            this.A11$24 = A11$24;
            this.A12$21 = A12$21;
            this.A13$18 = A13$18;
            this.A14$15 = A14$15;
            this.A15$12 = A15$12;
            this.A16$9 = A16$9;
            this.A17$6 = A17$6;
            this.A18$3 = A18$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple20$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18, final CommutativeGroup A19) {
      return $this.catsKernelStdCommutativeGroupForTuple20(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple20(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18, final CommutativeGroup A19) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) {
         private final CommutativeGroup A0$58;
         private final CommutativeGroup A1$55;
         private final CommutativeGroup A2$52;
         private final CommutativeGroup A3$49;
         private final CommutativeGroup A4$46;
         private final CommutativeGroup A5$43;
         private final CommutativeGroup A6$40;
         private final CommutativeGroup A7$37;
         private final CommutativeGroup A8$34;
         private final CommutativeGroup A9$31;
         private final CommutativeGroup A10$28;
         private final CommutativeGroup A11$25;
         private final CommutativeGroup A12$22;
         private final CommutativeGroup A13$19;
         private final CommutativeGroup A14$16;
         private final CommutativeGroup A15$13;
         private final CommutativeGroup A16$10;
         private final CommutativeGroup A17$7;
         private final CommutativeGroup A18$4;
         private final CommutativeGroup A19$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple20 combine(final Tuple20 x, final Tuple20 y) {
            return new Tuple20(this.A0$58.combine(x._1(), y._1()), this.A1$55.combine(x._2(), y._2()), this.A2$52.combine(x._3(), y._3()), this.A3$49.combine(x._4(), y._4()), this.A4$46.combine(x._5(), y._5()), this.A5$43.combine(x._6(), y._6()), this.A6$40.combine(x._7(), y._7()), this.A7$37.combine(x._8(), y._8()), this.A8$34.combine(x._9(), y._9()), this.A9$31.combine(x._10(), y._10()), this.A10$28.combine(x._11(), y._11()), this.A11$25.combine(x._12(), y._12()), this.A12$22.combine(x._13(), y._13()), this.A13$19.combine(x._14(), y._14()), this.A14$16.combine(x._15(), y._15()), this.A15$13.combine(x._16(), y._16()), this.A16$10.combine(x._17(), y._17()), this.A17$7.combine(x._18(), y._18()), this.A18$4.combine(x._19(), y._19()), this.A19$1.combine(x._20(), y._20()));
         }

         public Tuple20 empty() {
            return new Tuple20(this.A0$58.empty(), this.A1$55.empty(), this.A2$52.empty(), this.A3$49.empty(), this.A4$46.empty(), this.A5$43.empty(), this.A6$40.empty(), this.A7$37.empty(), this.A8$34.empty(), this.A9$31.empty(), this.A10$28.empty(), this.A11$25.empty(), this.A12$22.empty(), this.A13$19.empty(), this.A14$16.empty(), this.A15$13.empty(), this.A16$10.empty(), this.A17$7.empty(), this.A18$4.empty(), this.A19$1.empty());
         }

         public Tuple20 inverse(final Tuple20 x) {
            return new Tuple20(this.A0$58.inverse(x._1()), this.A1$55.inverse(x._2()), this.A2$52.inverse(x._3()), this.A3$49.inverse(x._4()), this.A4$46.inverse(x._5()), this.A5$43.inverse(x._6()), this.A6$40.inverse(x._7()), this.A7$37.inverse(x._8()), this.A8$34.inverse(x._9()), this.A9$31.inverse(x._10()), this.A10$28.inverse(x._11()), this.A11$25.inverse(x._12()), this.A12$22.inverse(x._13()), this.A13$19.inverse(x._14()), this.A14$16.inverse(x._15()), this.A15$13.inverse(x._16()), this.A16$10.inverse(x._17()), this.A17$7.inverse(x._18()), this.A18$4.inverse(x._19()), this.A19$1.inverse(x._20()));
         }

         public {
            this.A0$58 = A0$58;
            this.A1$55 = A1$55;
            this.A2$52 = A2$52;
            this.A3$49 = A3$49;
            this.A4$46 = A4$46;
            this.A5$43 = A5$43;
            this.A6$40 = A6$40;
            this.A7$37 = A7$37;
            this.A8$34 = A8$34;
            this.A9$31 = A9$31;
            this.A10$28 = A10$28;
            this.A11$25 = A11$25;
            this.A12$22 = A12$22;
            this.A13$19 = A13$19;
            this.A14$16 = A14$16;
            this.A15$13 = A15$13;
            this.A16$10 = A16$10;
            this.A17$7 = A17$7;
            this.A18$4 = A18$4;
            this.A19$1 = A19$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple20$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15, final Order A16, final Order A17, final Order A18, final Order A19) {
      return $this.catsKernelStdOrderForTuple20(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19);
   }

   default Order catsKernelStdOrderForTuple20(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15, final Order A16, final Order A17, final Order A18, final Order A19) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) {
         private final Order A0$59;
         private final Order A1$56;
         private final Order A2$53;
         private final Order A3$50;
         private final Order A4$47;
         private final Order A5$44;
         private final Order A6$41;
         private final Order A7$38;
         private final Order A8$35;
         private final Order A9$32;
         private final Order A10$29;
         private final Order A11$26;
         private final Order A12$23;
         private final Order A13$20;
         private final Order A14$17;
         private final Order A15$14;
         private final Order A16$11;
         private final Order A17$8;
         private final Order A18$5;
         private final Order A19$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple20 x, final Tuple20 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$59.compare(x._1(), y._1()), this.A1$56.compare(x._2(), y._2()), this.A2$53.compare(x._3(), y._3()), this.A3$50.compare(x._4(), y._4()), this.A4$47.compare(x._5(), y._5()), this.A5$44.compare(x._6(), y._6()), this.A6$41.compare(x._7(), y._7()), this.A7$38.compare(x._8(), y._8()), this.A8$35.compare(x._9(), y._9()), this.A9$32.compare(x._10(), y._10()), this.A10$29.compare(x._11(), y._11()), this.A11$26.compare(x._12(), y._12()), this.A12$23.compare(x._13(), y._13()), this.A13$20.compare(x._14(), y._14()), this.A14$17.compare(x._15(), y._15()), this.A15$14.compare(x._16(), y._16()), this.A16$11.compare(x._17(), y._17()), this.A17$8.compare(x._18(), y._18()), this.A18$5.compare(x._19(), y._19()), this.A19$2.compare(x._20(), y._20())}), (JFunction1.mcZI.sp)(x$20) -> x$20 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$59 = A0$59;
            this.A1$56 = A1$56;
            this.A2$53 = A2$53;
            this.A3$50 = A3$50;
            this.A4$47 = A4$47;
            this.A5$44 = A5$44;
            this.A6$41 = A6$41;
            this.A7$38 = A7$38;
            this.A8$35 = A8$35;
            this.A9$32 = A9$32;
            this.A10$29 = A10$29;
            this.A11$26 = A11$26;
            this.A12$23 = A12$23;
            this.A13$20 = A13$20;
            this.A14$17 = A14$17;
            this.A15$14 = A15$14;
            this.A16$11 = A16$11;
            this.A17$8 = A17$8;
            this.A18$5 = A18$5;
            this.A19$2 = A19$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple20$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18, final BoundedSemilattice A19) {
      return $this.catsKernelStdBoundedSemilatticeForTuple20(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple20(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18, final BoundedSemilattice A19) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) {
         private final BoundedSemilattice A0$60;
         private final BoundedSemilattice A1$57;
         private final BoundedSemilattice A2$54;
         private final BoundedSemilattice A3$51;
         private final BoundedSemilattice A4$48;
         private final BoundedSemilattice A5$45;
         private final BoundedSemilattice A6$42;
         private final BoundedSemilattice A7$39;
         private final BoundedSemilattice A8$36;
         private final BoundedSemilattice A9$33;
         private final BoundedSemilattice A10$30;
         private final BoundedSemilattice A11$27;
         private final BoundedSemilattice A12$24;
         private final BoundedSemilattice A13$21;
         private final BoundedSemilattice A14$18;
         private final BoundedSemilattice A15$15;
         private final BoundedSemilattice A16$12;
         private final BoundedSemilattice A17$9;
         private final BoundedSemilattice A18$6;
         private final BoundedSemilattice A19$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple20 combine(final Tuple20 x, final Tuple20 y) {
            return new Tuple20(this.A0$60.combine(x._1(), y._1()), this.A1$57.combine(x._2(), y._2()), this.A2$54.combine(x._3(), y._3()), this.A3$51.combine(x._4(), y._4()), this.A4$48.combine(x._5(), y._5()), this.A5$45.combine(x._6(), y._6()), this.A6$42.combine(x._7(), y._7()), this.A7$39.combine(x._8(), y._8()), this.A8$36.combine(x._9(), y._9()), this.A9$33.combine(x._10(), y._10()), this.A10$30.combine(x._11(), y._11()), this.A11$27.combine(x._12(), y._12()), this.A12$24.combine(x._13(), y._13()), this.A13$21.combine(x._14(), y._14()), this.A14$18.combine(x._15(), y._15()), this.A15$15.combine(x._16(), y._16()), this.A16$12.combine(x._17(), y._17()), this.A17$9.combine(x._18(), y._18()), this.A18$6.combine(x._19(), y._19()), this.A19$3.combine(x._20(), y._20()));
         }

         public Tuple20 empty() {
            return new Tuple20(this.A0$60.empty(), this.A1$57.empty(), this.A2$54.empty(), this.A3$51.empty(), this.A4$48.empty(), this.A5$45.empty(), this.A6$42.empty(), this.A7$39.empty(), this.A8$36.empty(), this.A9$33.empty(), this.A10$30.empty(), this.A11$27.empty(), this.A12$24.empty(), this.A13$21.empty(), this.A14$18.empty(), this.A15$15.empty(), this.A16$12.empty(), this.A17$9.empty(), this.A18$6.empty(), this.A19$3.empty());
         }

         public {
            this.A0$60 = A0$60;
            this.A1$57 = A1$57;
            this.A2$54 = A2$54;
            this.A3$51 = A3$51;
            this.A4$48 = A4$48;
            this.A5$45 = A5$45;
            this.A6$42 = A6$42;
            this.A7$39 = A7$39;
            this.A8$36 = A8$36;
            this.A9$33 = A9$33;
            this.A10$30 = A10$30;
            this.A11$27 = A11$27;
            this.A12$24 = A12$24;
            this.A13$21 = A13$21;
            this.A14$18 = A14$18;
            this.A15$15 = A15$15;
            this.A16$12 = A16$12;
            this.A17$9 = A17$9;
            this.A18$6 = A18$6;
            this.A19$3 = A19$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple21$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18, final CommutativeGroup A19, final CommutativeGroup A20) {
      return $this.catsKernelStdCommutativeGroupForTuple21(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple21(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18, final CommutativeGroup A19, final CommutativeGroup A20) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) {
         private final CommutativeGroup A0$61;
         private final CommutativeGroup A1$58;
         private final CommutativeGroup A2$55;
         private final CommutativeGroup A3$52;
         private final CommutativeGroup A4$49;
         private final CommutativeGroup A5$46;
         private final CommutativeGroup A6$43;
         private final CommutativeGroup A7$40;
         private final CommutativeGroup A8$37;
         private final CommutativeGroup A9$34;
         private final CommutativeGroup A10$31;
         private final CommutativeGroup A11$28;
         private final CommutativeGroup A12$25;
         private final CommutativeGroup A13$22;
         private final CommutativeGroup A14$19;
         private final CommutativeGroup A15$16;
         private final CommutativeGroup A16$13;
         private final CommutativeGroup A17$10;
         private final CommutativeGroup A18$7;
         private final CommutativeGroup A19$4;
         private final CommutativeGroup A20$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple21 combine(final Tuple21 x, final Tuple21 y) {
            return new Tuple21(this.A0$61.combine(x._1(), y._1()), this.A1$58.combine(x._2(), y._2()), this.A2$55.combine(x._3(), y._3()), this.A3$52.combine(x._4(), y._4()), this.A4$49.combine(x._5(), y._5()), this.A5$46.combine(x._6(), y._6()), this.A6$43.combine(x._7(), y._7()), this.A7$40.combine(x._8(), y._8()), this.A8$37.combine(x._9(), y._9()), this.A9$34.combine(x._10(), y._10()), this.A10$31.combine(x._11(), y._11()), this.A11$28.combine(x._12(), y._12()), this.A12$25.combine(x._13(), y._13()), this.A13$22.combine(x._14(), y._14()), this.A14$19.combine(x._15(), y._15()), this.A15$16.combine(x._16(), y._16()), this.A16$13.combine(x._17(), y._17()), this.A17$10.combine(x._18(), y._18()), this.A18$7.combine(x._19(), y._19()), this.A19$4.combine(x._20(), y._20()), this.A20$1.combine(x._21(), y._21()));
         }

         public Tuple21 empty() {
            return new Tuple21(this.A0$61.empty(), this.A1$58.empty(), this.A2$55.empty(), this.A3$52.empty(), this.A4$49.empty(), this.A5$46.empty(), this.A6$43.empty(), this.A7$40.empty(), this.A8$37.empty(), this.A9$34.empty(), this.A10$31.empty(), this.A11$28.empty(), this.A12$25.empty(), this.A13$22.empty(), this.A14$19.empty(), this.A15$16.empty(), this.A16$13.empty(), this.A17$10.empty(), this.A18$7.empty(), this.A19$4.empty(), this.A20$1.empty());
         }

         public Tuple21 inverse(final Tuple21 x) {
            return new Tuple21(this.A0$61.inverse(x._1()), this.A1$58.inverse(x._2()), this.A2$55.inverse(x._3()), this.A3$52.inverse(x._4()), this.A4$49.inverse(x._5()), this.A5$46.inverse(x._6()), this.A6$43.inverse(x._7()), this.A7$40.inverse(x._8()), this.A8$37.inverse(x._9()), this.A9$34.inverse(x._10()), this.A10$31.inverse(x._11()), this.A11$28.inverse(x._12()), this.A12$25.inverse(x._13()), this.A13$22.inverse(x._14()), this.A14$19.inverse(x._15()), this.A15$16.inverse(x._16()), this.A16$13.inverse(x._17()), this.A17$10.inverse(x._18()), this.A18$7.inverse(x._19()), this.A19$4.inverse(x._20()), this.A20$1.inverse(x._21()));
         }

         public {
            this.A0$61 = A0$61;
            this.A1$58 = A1$58;
            this.A2$55 = A2$55;
            this.A3$52 = A3$52;
            this.A4$49 = A4$49;
            this.A5$46 = A5$46;
            this.A6$43 = A6$43;
            this.A7$40 = A7$40;
            this.A8$37 = A8$37;
            this.A9$34 = A9$34;
            this.A10$31 = A10$31;
            this.A11$28 = A11$28;
            this.A12$25 = A12$25;
            this.A13$22 = A13$22;
            this.A14$19 = A14$19;
            this.A15$16 = A15$16;
            this.A16$13 = A16$13;
            this.A17$10 = A17$10;
            this.A18$7 = A18$7;
            this.A19$4 = A19$4;
            this.A20$1 = A20$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple21$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15, final Order A16, final Order A17, final Order A18, final Order A19, final Order A20) {
      return $this.catsKernelStdOrderForTuple21(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20);
   }

   default Order catsKernelStdOrderForTuple21(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15, final Order A16, final Order A17, final Order A18, final Order A19, final Order A20) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) {
         private final Order A0$62;
         private final Order A1$59;
         private final Order A2$56;
         private final Order A3$53;
         private final Order A4$50;
         private final Order A5$47;
         private final Order A6$44;
         private final Order A7$41;
         private final Order A8$38;
         private final Order A9$35;
         private final Order A10$32;
         private final Order A11$29;
         private final Order A12$26;
         private final Order A13$23;
         private final Order A14$20;
         private final Order A15$17;
         private final Order A16$14;
         private final Order A17$11;
         private final Order A18$8;
         private final Order A19$5;
         private final Order A20$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple21 x, final Tuple21 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$62.compare(x._1(), y._1()), this.A1$59.compare(x._2(), y._2()), this.A2$56.compare(x._3(), y._3()), this.A3$53.compare(x._4(), y._4()), this.A4$50.compare(x._5(), y._5()), this.A5$47.compare(x._6(), y._6()), this.A6$44.compare(x._7(), y._7()), this.A7$41.compare(x._8(), y._8()), this.A8$38.compare(x._9(), y._9()), this.A9$35.compare(x._10(), y._10()), this.A10$32.compare(x._11(), y._11()), this.A11$29.compare(x._12(), y._12()), this.A12$26.compare(x._13(), y._13()), this.A13$23.compare(x._14(), y._14()), this.A14$20.compare(x._15(), y._15()), this.A15$17.compare(x._16(), y._16()), this.A16$14.compare(x._17(), y._17()), this.A17$11.compare(x._18(), y._18()), this.A18$8.compare(x._19(), y._19()), this.A19$5.compare(x._20(), y._20()), this.A20$2.compare(x._21(), y._21())}), (JFunction1.mcZI.sp)(x$21) -> x$21 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$62 = A0$62;
            this.A1$59 = A1$59;
            this.A2$56 = A2$56;
            this.A3$53 = A3$53;
            this.A4$50 = A4$50;
            this.A5$47 = A5$47;
            this.A6$44 = A6$44;
            this.A7$41 = A7$41;
            this.A8$38 = A8$38;
            this.A9$35 = A9$35;
            this.A10$32 = A10$32;
            this.A11$29 = A11$29;
            this.A12$26 = A12$26;
            this.A13$23 = A13$23;
            this.A14$20 = A14$20;
            this.A15$17 = A15$17;
            this.A16$14 = A16$14;
            this.A17$11 = A17$11;
            this.A18$8 = A18$8;
            this.A19$5 = A19$5;
            this.A20$2 = A20$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple21$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18, final BoundedSemilattice A19, final BoundedSemilattice A20) {
      return $this.catsKernelStdBoundedSemilatticeForTuple21(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple21(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18, final BoundedSemilattice A19, final BoundedSemilattice A20) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) {
         private final BoundedSemilattice A0$63;
         private final BoundedSemilattice A1$60;
         private final BoundedSemilattice A2$57;
         private final BoundedSemilattice A3$54;
         private final BoundedSemilattice A4$51;
         private final BoundedSemilattice A5$48;
         private final BoundedSemilattice A6$45;
         private final BoundedSemilattice A7$42;
         private final BoundedSemilattice A8$39;
         private final BoundedSemilattice A9$36;
         private final BoundedSemilattice A10$33;
         private final BoundedSemilattice A11$30;
         private final BoundedSemilattice A12$27;
         private final BoundedSemilattice A13$24;
         private final BoundedSemilattice A14$21;
         private final BoundedSemilattice A15$18;
         private final BoundedSemilattice A16$15;
         private final BoundedSemilattice A17$12;
         private final BoundedSemilattice A18$9;
         private final BoundedSemilattice A19$6;
         private final BoundedSemilattice A20$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple21 combine(final Tuple21 x, final Tuple21 y) {
            return new Tuple21(this.A0$63.combine(x._1(), y._1()), this.A1$60.combine(x._2(), y._2()), this.A2$57.combine(x._3(), y._3()), this.A3$54.combine(x._4(), y._4()), this.A4$51.combine(x._5(), y._5()), this.A5$48.combine(x._6(), y._6()), this.A6$45.combine(x._7(), y._7()), this.A7$42.combine(x._8(), y._8()), this.A8$39.combine(x._9(), y._9()), this.A9$36.combine(x._10(), y._10()), this.A10$33.combine(x._11(), y._11()), this.A11$30.combine(x._12(), y._12()), this.A12$27.combine(x._13(), y._13()), this.A13$24.combine(x._14(), y._14()), this.A14$21.combine(x._15(), y._15()), this.A15$18.combine(x._16(), y._16()), this.A16$15.combine(x._17(), y._17()), this.A17$12.combine(x._18(), y._18()), this.A18$9.combine(x._19(), y._19()), this.A19$6.combine(x._20(), y._20()), this.A20$3.combine(x._21(), y._21()));
         }

         public Tuple21 empty() {
            return new Tuple21(this.A0$63.empty(), this.A1$60.empty(), this.A2$57.empty(), this.A3$54.empty(), this.A4$51.empty(), this.A5$48.empty(), this.A6$45.empty(), this.A7$42.empty(), this.A8$39.empty(), this.A9$36.empty(), this.A10$33.empty(), this.A11$30.empty(), this.A12$27.empty(), this.A13$24.empty(), this.A14$21.empty(), this.A15$18.empty(), this.A16$15.empty(), this.A17$12.empty(), this.A18$9.empty(), this.A19$6.empty(), this.A20$3.empty());
         }

         public {
            this.A0$63 = A0$63;
            this.A1$60 = A1$60;
            this.A2$57 = A2$57;
            this.A3$54 = A3$54;
            this.A4$51 = A4$51;
            this.A5$48 = A5$48;
            this.A6$45 = A6$45;
            this.A7$42 = A7$42;
            this.A8$39 = A8$39;
            this.A9$36 = A9$36;
            this.A10$33 = A10$33;
            this.A11$30 = A11$30;
            this.A12$27 = A12$27;
            this.A13$24 = A13$24;
            this.A14$21 = A14$21;
            this.A15$18 = A15$18;
            this.A16$15 = A16$15;
            this.A17$12 = A17$12;
            this.A18$9 = A18$9;
            this.A19$6 = A19$6;
            this.A20$3 = A20$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelStdCommutativeGroupForTuple22$(final TupleInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18, final CommutativeGroup A19, final CommutativeGroup A20, final CommutativeGroup A21) {
      return $this.catsKernelStdCommutativeGroupForTuple22(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21);
   }

   default CommutativeGroup catsKernelStdCommutativeGroupForTuple22(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18, final CommutativeGroup A19, final CommutativeGroup A20, final CommutativeGroup A21) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) {
         private final CommutativeGroup A0$64;
         private final CommutativeGroup A1$61;
         private final CommutativeGroup A2$58;
         private final CommutativeGroup A3$55;
         private final CommutativeGroup A4$52;
         private final CommutativeGroup A5$49;
         private final CommutativeGroup A6$46;
         private final CommutativeGroup A7$43;
         private final CommutativeGroup A8$40;
         private final CommutativeGroup A9$37;
         private final CommutativeGroup A10$34;
         private final CommutativeGroup A11$31;
         private final CommutativeGroup A12$28;
         private final CommutativeGroup A13$25;
         private final CommutativeGroup A14$22;
         private final CommutativeGroup A15$19;
         private final CommutativeGroup A16$16;
         private final CommutativeGroup A17$13;
         private final CommutativeGroup A18$10;
         private final CommutativeGroup A19$7;
         private final CommutativeGroup A20$4;
         private final CommutativeGroup A21$1;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple22 combine(final Tuple22 x, final Tuple22 y) {
            return new Tuple22(this.A0$64.combine(x._1(), y._1()), this.A1$61.combine(x._2(), y._2()), this.A2$58.combine(x._3(), y._3()), this.A3$55.combine(x._4(), y._4()), this.A4$52.combine(x._5(), y._5()), this.A5$49.combine(x._6(), y._6()), this.A6$46.combine(x._7(), y._7()), this.A7$43.combine(x._8(), y._8()), this.A8$40.combine(x._9(), y._9()), this.A9$37.combine(x._10(), y._10()), this.A10$34.combine(x._11(), y._11()), this.A11$31.combine(x._12(), y._12()), this.A12$28.combine(x._13(), y._13()), this.A13$25.combine(x._14(), y._14()), this.A14$22.combine(x._15(), y._15()), this.A15$19.combine(x._16(), y._16()), this.A16$16.combine(x._17(), y._17()), this.A17$13.combine(x._18(), y._18()), this.A18$10.combine(x._19(), y._19()), this.A19$7.combine(x._20(), y._20()), this.A20$4.combine(x._21(), y._21()), this.A21$1.combine(x._22(), y._22()));
         }

         public Tuple22 empty() {
            return new Tuple22(this.A0$64.empty(), this.A1$61.empty(), this.A2$58.empty(), this.A3$55.empty(), this.A4$52.empty(), this.A5$49.empty(), this.A6$46.empty(), this.A7$43.empty(), this.A8$40.empty(), this.A9$37.empty(), this.A10$34.empty(), this.A11$31.empty(), this.A12$28.empty(), this.A13$25.empty(), this.A14$22.empty(), this.A15$19.empty(), this.A16$16.empty(), this.A17$13.empty(), this.A18$10.empty(), this.A19$7.empty(), this.A20$4.empty(), this.A21$1.empty());
         }

         public Tuple22 inverse(final Tuple22 x) {
            return new Tuple22(this.A0$64.inverse(x._1()), this.A1$61.inverse(x._2()), this.A2$58.inverse(x._3()), this.A3$55.inverse(x._4()), this.A4$52.inverse(x._5()), this.A5$49.inverse(x._6()), this.A6$46.inverse(x._7()), this.A7$43.inverse(x._8()), this.A8$40.inverse(x._9()), this.A9$37.inverse(x._10()), this.A10$34.inverse(x._11()), this.A11$31.inverse(x._12()), this.A12$28.inverse(x._13()), this.A13$25.inverse(x._14()), this.A14$22.inverse(x._15()), this.A15$19.inverse(x._16()), this.A16$16.inverse(x._17()), this.A17$13.inverse(x._18()), this.A18$10.inverse(x._19()), this.A19$7.inverse(x._20()), this.A20$4.inverse(x._21()), this.A21$1.inverse(x._22()));
         }

         public {
            this.A0$64 = A0$64;
            this.A1$61 = A1$61;
            this.A2$58 = A2$58;
            this.A3$55 = A3$55;
            this.A4$52 = A4$52;
            this.A5$49 = A5$49;
            this.A6$46 = A6$46;
            this.A7$43 = A7$43;
            this.A8$40 = A8$40;
            this.A9$37 = A9$37;
            this.A10$34 = A10$34;
            this.A11$31 = A11$31;
            this.A12$28 = A12$28;
            this.A13$25 = A13$25;
            this.A14$22 = A14$22;
            this.A15$19 = A15$19;
            this.A16$16 = A16$16;
            this.A17$13 = A17$13;
            this.A18$10 = A18$10;
            this.A19$7 = A19$7;
            this.A20$4 = A20$4;
            this.A21$1 = A21$1;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static Order catsKernelStdOrderForTuple22$(final TupleInstances $this, final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15, final Order A16, final Order A17, final Order A18, final Order A19, final Order A20, final Order A21) {
      return $this.catsKernelStdOrderForTuple22(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21);
   }

   default Order catsKernelStdOrderForTuple22(final Order A0, final Order A1, final Order A2, final Order A3, final Order A4, final Order A5, final Order A6, final Order A7, final Order A8, final Order A9, final Order A10, final Order A11, final Order A12, final Order A13, final Order A14, final Order A15, final Order A16, final Order A17, final Order A18, final Order A19, final Order A20, final Order A21) {
      return new Order(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) {
         private final Order A0$65;
         private final Order A1$62;
         private final Order A2$59;
         private final Order A3$56;
         private final Order A4$53;
         private final Order A5$50;
         private final Order A6$47;
         private final Order A7$44;
         private final Order A8$41;
         private final Order A9$38;
         private final Order A10$35;
         private final Order A11$32;
         private final Order A12$29;
         private final Order A13$26;
         private final Order A14$23;
         private final Order A15$20;
         private final Order A16$17;
         private final Order A17$14;
         private final Order A18$11;
         private final Order A19$8;
         private final Order A20$5;
         private final Order A21$2;

         public int compare$mcZ$sp(final boolean x, final boolean y) {
            return Order.compare$mcZ$sp$(this, x, y);
         }

         public int compare$mcB$sp(final byte x, final byte y) {
            return Order.compare$mcB$sp$(this, x, y);
         }

         public int compare$mcC$sp(final char x, final char y) {
            return Order.compare$mcC$sp$(this, x, y);
         }

         public int compare$mcD$sp(final double x, final double y) {
            return Order.compare$mcD$sp$(this, x, y);
         }

         public int compare$mcF$sp(final float x, final float y) {
            return Order.compare$mcF$sp$(this, x, y);
         }

         public int compare$mcI$sp(final int x, final int y) {
            return Order.compare$mcI$sp$(this, x, y);
         }

         public int compare$mcJ$sp(final long x, final long y) {
            return Order.compare$mcJ$sp$(this, x, y);
         }

         public int compare$mcS$sp(final short x, final short y) {
            return Order.compare$mcS$sp$(this, x, y);
         }

         public int compare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.compare$mcV$sp$(this, x, y);
         }

         public Comparison comparison(final Object x, final Object y) {
            return Order.comparison$(this, x, y);
         }

         public Comparison comparison$mcZ$sp(final boolean x, final boolean y) {
            return Order.comparison$mcZ$sp$(this, x, y);
         }

         public Comparison comparison$mcB$sp(final byte x, final byte y) {
            return Order.comparison$mcB$sp$(this, x, y);
         }

         public Comparison comparison$mcC$sp(final char x, final char y) {
            return Order.comparison$mcC$sp$(this, x, y);
         }

         public Comparison comparison$mcD$sp(final double x, final double y) {
            return Order.comparison$mcD$sp$(this, x, y);
         }

         public Comparison comparison$mcF$sp(final float x, final float y) {
            return Order.comparison$mcF$sp$(this, x, y);
         }

         public Comparison comparison$mcI$sp(final int x, final int y) {
            return Order.comparison$mcI$sp$(this, x, y);
         }

         public Comparison comparison$mcJ$sp(final long x, final long y) {
            return Order.comparison$mcJ$sp$(this, x, y);
         }

         public Comparison comparison$mcS$sp(final short x, final short y) {
            return Order.comparison$mcS$sp$(this, x, y);
         }

         public Comparison comparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.comparison$mcV$sp$(this, x, y);
         }

         public double partialCompare(final Object x, final Object y) {
            return Order.partialCompare$(this, x, y);
         }

         public double partialCompare$mcZ$sp(final boolean x, final boolean y) {
            return Order.partialCompare$mcZ$sp$(this, x, y);
         }

         public double partialCompare$mcB$sp(final byte x, final byte y) {
            return Order.partialCompare$mcB$sp$(this, x, y);
         }

         public double partialCompare$mcC$sp(final char x, final char y) {
            return Order.partialCompare$mcC$sp$(this, x, y);
         }

         public double partialCompare$mcD$sp(final double x, final double y) {
            return Order.partialCompare$mcD$sp$(this, x, y);
         }

         public double partialCompare$mcF$sp(final float x, final float y) {
            return Order.partialCompare$mcF$sp$(this, x, y);
         }

         public double partialCompare$mcI$sp(final int x, final int y) {
            return Order.partialCompare$mcI$sp$(this, x, y);
         }

         public double partialCompare$mcJ$sp(final long x, final long y) {
            return Order.partialCompare$mcJ$sp$(this, x, y);
         }

         public double partialCompare$mcS$sp(final short x, final short y) {
            return Order.partialCompare$mcS$sp$(this, x, y);
         }

         public double partialCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.partialCompare$mcV$sp$(this, x, y);
         }

         public Object min(final Object x, final Object y) {
            return Order.min$(this, x, y);
         }

         public boolean min$mcZ$sp(final boolean x, final boolean y) {
            return Order.min$mcZ$sp$(this, x, y);
         }

         public byte min$mcB$sp(final byte x, final byte y) {
            return Order.min$mcB$sp$(this, x, y);
         }

         public char min$mcC$sp(final char x, final char y) {
            return Order.min$mcC$sp$(this, x, y);
         }

         public double min$mcD$sp(final double x, final double y) {
            return Order.min$mcD$sp$(this, x, y);
         }

         public float min$mcF$sp(final float x, final float y) {
            return Order.min$mcF$sp$(this, x, y);
         }

         public int min$mcI$sp(final int x, final int y) {
            return Order.min$mcI$sp$(this, x, y);
         }

         public long min$mcJ$sp(final long x, final long y) {
            return Order.min$mcJ$sp$(this, x, y);
         }

         public short min$mcS$sp(final short x, final short y) {
            return Order.min$mcS$sp$(this, x, y);
         }

         public void min$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.min$mcV$sp$(this, x, y);
         }

         public Object max(final Object x, final Object y) {
            return Order.max$(this, x, y);
         }

         public boolean max$mcZ$sp(final boolean x, final boolean y) {
            return Order.max$mcZ$sp$(this, x, y);
         }

         public byte max$mcB$sp(final byte x, final byte y) {
            return Order.max$mcB$sp$(this, x, y);
         }

         public char max$mcC$sp(final char x, final char y) {
            return Order.max$mcC$sp$(this, x, y);
         }

         public double max$mcD$sp(final double x, final double y) {
            return Order.max$mcD$sp$(this, x, y);
         }

         public float max$mcF$sp(final float x, final float y) {
            return Order.max$mcF$sp$(this, x, y);
         }

         public int max$mcI$sp(final int x, final int y) {
            return Order.max$mcI$sp$(this, x, y);
         }

         public long max$mcJ$sp(final long x, final long y) {
            return Order.max$mcJ$sp$(this, x, y);
         }

         public short max$mcS$sp(final short x, final short y) {
            return Order.max$mcS$sp$(this, x, y);
         }

         public void max$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            Order.max$mcV$sp$(this, x, y);
         }

         public boolean eqv(final Object x, final Object y) {
            return Order.eqv$(this, x, y);
         }

         public boolean eqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.eqv$mcZ$sp$(this, x, y);
         }

         public boolean eqv$mcB$sp(final byte x, final byte y) {
            return Order.eqv$mcB$sp$(this, x, y);
         }

         public boolean eqv$mcC$sp(final char x, final char y) {
            return Order.eqv$mcC$sp$(this, x, y);
         }

         public boolean eqv$mcD$sp(final double x, final double y) {
            return Order.eqv$mcD$sp$(this, x, y);
         }

         public boolean eqv$mcF$sp(final float x, final float y) {
            return Order.eqv$mcF$sp$(this, x, y);
         }

         public boolean eqv$mcI$sp(final int x, final int y) {
            return Order.eqv$mcI$sp$(this, x, y);
         }

         public boolean eqv$mcJ$sp(final long x, final long y) {
            return Order.eqv$mcJ$sp$(this, x, y);
         }

         public boolean eqv$mcS$sp(final short x, final short y) {
            return Order.eqv$mcS$sp$(this, x, y);
         }

         public boolean eqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.eqv$mcV$sp$(this, x, y);
         }

         public boolean neqv(final Object x, final Object y) {
            return Order.neqv$(this, x, y);
         }

         public boolean neqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.neqv$mcZ$sp$(this, x, y);
         }

         public boolean neqv$mcB$sp(final byte x, final byte y) {
            return Order.neqv$mcB$sp$(this, x, y);
         }

         public boolean neqv$mcC$sp(final char x, final char y) {
            return Order.neqv$mcC$sp$(this, x, y);
         }

         public boolean neqv$mcD$sp(final double x, final double y) {
            return Order.neqv$mcD$sp$(this, x, y);
         }

         public boolean neqv$mcF$sp(final float x, final float y) {
            return Order.neqv$mcF$sp$(this, x, y);
         }

         public boolean neqv$mcI$sp(final int x, final int y) {
            return Order.neqv$mcI$sp$(this, x, y);
         }

         public boolean neqv$mcJ$sp(final long x, final long y) {
            return Order.neqv$mcJ$sp$(this, x, y);
         }

         public boolean neqv$mcS$sp(final short x, final short y) {
            return Order.neqv$mcS$sp$(this, x, y);
         }

         public boolean neqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.neqv$mcV$sp$(this, x, y);
         }

         public boolean lteqv(final Object x, final Object y) {
            return Order.lteqv$(this, x, y);
         }

         public boolean lteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.lteqv$mcZ$sp$(this, x, y);
         }

         public boolean lteqv$mcB$sp(final byte x, final byte y) {
            return Order.lteqv$mcB$sp$(this, x, y);
         }

         public boolean lteqv$mcC$sp(final char x, final char y) {
            return Order.lteqv$mcC$sp$(this, x, y);
         }

         public boolean lteqv$mcD$sp(final double x, final double y) {
            return Order.lteqv$mcD$sp$(this, x, y);
         }

         public boolean lteqv$mcF$sp(final float x, final float y) {
            return Order.lteqv$mcF$sp$(this, x, y);
         }

         public boolean lteqv$mcI$sp(final int x, final int y) {
            return Order.lteqv$mcI$sp$(this, x, y);
         }

         public boolean lteqv$mcJ$sp(final long x, final long y) {
            return Order.lteqv$mcJ$sp$(this, x, y);
         }

         public boolean lteqv$mcS$sp(final short x, final short y) {
            return Order.lteqv$mcS$sp$(this, x, y);
         }

         public boolean lteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lteqv$mcV$sp$(this, x, y);
         }

         public boolean lt(final Object x, final Object y) {
            return Order.lt$(this, x, y);
         }

         public boolean lt$mcZ$sp(final boolean x, final boolean y) {
            return Order.lt$mcZ$sp$(this, x, y);
         }

         public boolean lt$mcB$sp(final byte x, final byte y) {
            return Order.lt$mcB$sp$(this, x, y);
         }

         public boolean lt$mcC$sp(final char x, final char y) {
            return Order.lt$mcC$sp$(this, x, y);
         }

         public boolean lt$mcD$sp(final double x, final double y) {
            return Order.lt$mcD$sp$(this, x, y);
         }

         public boolean lt$mcF$sp(final float x, final float y) {
            return Order.lt$mcF$sp$(this, x, y);
         }

         public boolean lt$mcI$sp(final int x, final int y) {
            return Order.lt$mcI$sp$(this, x, y);
         }

         public boolean lt$mcJ$sp(final long x, final long y) {
            return Order.lt$mcJ$sp$(this, x, y);
         }

         public boolean lt$mcS$sp(final short x, final short y) {
            return Order.lt$mcS$sp$(this, x, y);
         }

         public boolean lt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.lt$mcV$sp$(this, x, y);
         }

         public boolean gteqv(final Object x, final Object y) {
            return Order.gteqv$(this, x, y);
         }

         public boolean gteqv$mcZ$sp(final boolean x, final boolean y) {
            return Order.gteqv$mcZ$sp$(this, x, y);
         }

         public boolean gteqv$mcB$sp(final byte x, final byte y) {
            return Order.gteqv$mcB$sp$(this, x, y);
         }

         public boolean gteqv$mcC$sp(final char x, final char y) {
            return Order.gteqv$mcC$sp$(this, x, y);
         }

         public boolean gteqv$mcD$sp(final double x, final double y) {
            return Order.gteqv$mcD$sp$(this, x, y);
         }

         public boolean gteqv$mcF$sp(final float x, final float y) {
            return Order.gteqv$mcF$sp$(this, x, y);
         }

         public boolean gteqv$mcI$sp(final int x, final int y) {
            return Order.gteqv$mcI$sp$(this, x, y);
         }

         public boolean gteqv$mcJ$sp(final long x, final long y) {
            return Order.gteqv$mcJ$sp$(this, x, y);
         }

         public boolean gteqv$mcS$sp(final short x, final short y) {
            return Order.gteqv$mcS$sp$(this, x, y);
         }

         public boolean gteqv$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gteqv$mcV$sp$(this, x, y);
         }

         public boolean gt(final Object x, final Object y) {
            return Order.gt$(this, x, y);
         }

         public boolean gt$mcZ$sp(final boolean x, final boolean y) {
            return Order.gt$mcZ$sp$(this, x, y);
         }

         public boolean gt$mcB$sp(final byte x, final byte y) {
            return Order.gt$mcB$sp$(this, x, y);
         }

         public boolean gt$mcC$sp(final char x, final char y) {
            return Order.gt$mcC$sp$(this, x, y);
         }

         public boolean gt$mcD$sp(final double x, final double y) {
            return Order.gt$mcD$sp$(this, x, y);
         }

         public boolean gt$mcF$sp(final float x, final float y) {
            return Order.gt$mcF$sp$(this, x, y);
         }

         public boolean gt$mcI$sp(final int x, final int y) {
            return Order.gt$mcI$sp$(this, x, y);
         }

         public boolean gt$mcJ$sp(final long x, final long y) {
            return Order.gt$mcJ$sp$(this, x, y);
         }

         public boolean gt$mcS$sp(final short x, final short y) {
            return Order.gt$mcS$sp$(this, x, y);
         }

         public boolean gt$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return Order.gt$mcV$sp$(this, x, y);
         }

         public Ordering toOrdering() {
            return Order.toOrdering$(this);
         }

         public Option partialComparison(final Object x, final Object y) {
            return PartialOrder.partialComparison$(this, x, y);
         }

         public Option partialComparison$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.partialComparison$mcZ$sp$(this, x, y);
         }

         public Option partialComparison$mcB$sp(final byte x, final byte y) {
            return PartialOrder.partialComparison$mcB$sp$(this, x, y);
         }

         public Option partialComparison$mcC$sp(final char x, final char y) {
            return PartialOrder.partialComparison$mcC$sp$(this, x, y);
         }

         public Option partialComparison$mcD$sp(final double x, final double y) {
            return PartialOrder.partialComparison$mcD$sp$(this, x, y);
         }

         public Option partialComparison$mcF$sp(final float x, final float y) {
            return PartialOrder.partialComparison$mcF$sp$(this, x, y);
         }

         public Option partialComparison$mcI$sp(final int x, final int y) {
            return PartialOrder.partialComparison$mcI$sp$(this, x, y);
         }

         public Option partialComparison$mcJ$sp(final long x, final long y) {
            return PartialOrder.partialComparison$mcJ$sp$(this, x, y);
         }

         public Option partialComparison$mcS$sp(final short x, final short y) {
            return PartialOrder.partialComparison$mcS$sp$(this, x, y);
         }

         public Option partialComparison$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.partialComparison$mcV$sp$(this, x, y);
         }

         public Option tryCompare(final Object x, final Object y) {
            return PartialOrder.tryCompare$(this, x, y);
         }

         public Option tryCompare$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.tryCompare$mcZ$sp$(this, x, y);
         }

         public Option tryCompare$mcB$sp(final byte x, final byte y) {
            return PartialOrder.tryCompare$mcB$sp$(this, x, y);
         }

         public Option tryCompare$mcC$sp(final char x, final char y) {
            return PartialOrder.tryCompare$mcC$sp$(this, x, y);
         }

         public Option tryCompare$mcD$sp(final double x, final double y) {
            return PartialOrder.tryCompare$mcD$sp$(this, x, y);
         }

         public Option tryCompare$mcF$sp(final float x, final float y) {
            return PartialOrder.tryCompare$mcF$sp$(this, x, y);
         }

         public Option tryCompare$mcI$sp(final int x, final int y) {
            return PartialOrder.tryCompare$mcI$sp$(this, x, y);
         }

         public Option tryCompare$mcJ$sp(final long x, final long y) {
            return PartialOrder.tryCompare$mcJ$sp$(this, x, y);
         }

         public Option tryCompare$mcS$sp(final short x, final short y) {
            return PartialOrder.tryCompare$mcS$sp$(this, x, y);
         }

         public Option tryCompare$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.tryCompare$mcV$sp$(this, x, y);
         }

         public Option pmin(final Object x, final Object y) {
            return PartialOrder.pmin$(this, x, y);
         }

         public Option pmin$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmin$mcZ$sp$(this, x, y);
         }

         public Option pmin$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmin$mcB$sp$(this, x, y);
         }

         public Option pmin$mcC$sp(final char x, final char y) {
            return PartialOrder.pmin$mcC$sp$(this, x, y);
         }

         public Option pmin$mcD$sp(final double x, final double y) {
            return PartialOrder.pmin$mcD$sp$(this, x, y);
         }

         public Option pmin$mcF$sp(final float x, final float y) {
            return PartialOrder.pmin$mcF$sp$(this, x, y);
         }

         public Option pmin$mcI$sp(final int x, final int y) {
            return PartialOrder.pmin$mcI$sp$(this, x, y);
         }

         public Option pmin$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmin$mcJ$sp$(this, x, y);
         }

         public Option pmin$mcS$sp(final short x, final short y) {
            return PartialOrder.pmin$mcS$sp$(this, x, y);
         }

         public Option pmin$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmin$mcV$sp$(this, x, y);
         }

         public Option pmax(final Object x, final Object y) {
            return PartialOrder.pmax$(this, x, y);
         }

         public Option pmax$mcZ$sp(final boolean x, final boolean y) {
            return PartialOrder.pmax$mcZ$sp$(this, x, y);
         }

         public Option pmax$mcB$sp(final byte x, final byte y) {
            return PartialOrder.pmax$mcB$sp$(this, x, y);
         }

         public Option pmax$mcC$sp(final char x, final char y) {
            return PartialOrder.pmax$mcC$sp$(this, x, y);
         }

         public Option pmax$mcD$sp(final double x, final double y) {
            return PartialOrder.pmax$mcD$sp$(this, x, y);
         }

         public Option pmax$mcF$sp(final float x, final float y) {
            return PartialOrder.pmax$mcF$sp$(this, x, y);
         }

         public Option pmax$mcI$sp(final int x, final int y) {
            return PartialOrder.pmax$mcI$sp$(this, x, y);
         }

         public Option pmax$mcJ$sp(final long x, final long y) {
            return PartialOrder.pmax$mcJ$sp$(this, x, y);
         }

         public Option pmax$mcS$sp(final short x, final short y) {
            return PartialOrder.pmax$mcS$sp$(this, x, y);
         }

         public Option pmax$mcV$sp(final BoxedUnit x, final BoxedUnit y) {
            return PartialOrder.pmax$mcV$sp$(this, x, y);
         }

         public int compare(final Tuple22 x, final Tuple22 y) {
            return BoxesRunTime.unboxToInt(.MODULE$.find$extension(scala.Predef..MODULE$.intArrayOps(new int[]{this.A0$65.compare(x._1(), y._1()), this.A1$62.compare(x._2(), y._2()), this.A2$59.compare(x._3(), y._3()), this.A3$56.compare(x._4(), y._4()), this.A4$53.compare(x._5(), y._5()), this.A5$50.compare(x._6(), y._6()), this.A6$47.compare(x._7(), y._7()), this.A7$44.compare(x._8(), y._8()), this.A8$41.compare(x._9(), y._9()), this.A9$38.compare(x._10(), y._10()), this.A10$35.compare(x._11(), y._11()), this.A11$32.compare(x._12(), y._12()), this.A12$29.compare(x._13(), y._13()), this.A13$26.compare(x._14(), y._14()), this.A14$23.compare(x._15(), y._15()), this.A15$20.compare(x._16(), y._16()), this.A16$17.compare(x._17(), y._17()), this.A17$14.compare(x._18(), y._18()), this.A18$11.compare(x._19(), y._19()), this.A19$8.compare(x._20(), y._20()), this.A20$5.compare(x._21(), y._21()), this.A21$2.compare(x._22(), y._22())}), (JFunction1.mcZI.sp)(x$22) -> x$22 != 0).getOrElse((JFunction0.mcI.sp)() -> 0));
         }

         public {
            this.A0$65 = A0$65;
            this.A1$62 = A1$62;
            this.A2$59 = A2$59;
            this.A3$56 = A3$56;
            this.A4$53 = A4$53;
            this.A5$50 = A5$50;
            this.A6$47 = A6$47;
            this.A7$44 = A7$44;
            this.A8$41 = A8$41;
            this.A9$38 = A9$38;
            this.A10$35 = A10$35;
            this.A11$32 = A11$32;
            this.A12$29 = A12$29;
            this.A13$26 = A13$26;
            this.A14$23 = A14$23;
            this.A15$20 = A15$20;
            this.A16$17 = A16$17;
            this.A17$14 = A17$14;
            this.A18$11 = A18$11;
            this.A19$8 = A19$8;
            this.A20$5 = A20$5;
            this.A21$2 = A21$2;
            Eq.$init$(this);
            PartialOrder.$init$(this);
            Order.$init$(this);
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }
      };
   }

   // $FF: synthetic method
   static BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple22$(final TupleInstances $this, final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18, final BoundedSemilattice A19, final BoundedSemilattice A20, final BoundedSemilattice A21) {
      return $this.catsKernelStdBoundedSemilatticeForTuple22(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21);
   }

   default BoundedSemilattice catsKernelStdBoundedSemilatticeForTuple22(final BoundedSemilattice A0, final BoundedSemilattice A1, final BoundedSemilattice A2, final BoundedSemilattice A3, final BoundedSemilattice A4, final BoundedSemilattice A5, final BoundedSemilattice A6, final BoundedSemilattice A7, final BoundedSemilattice A8, final BoundedSemilattice A9, final BoundedSemilattice A10, final BoundedSemilattice A11, final BoundedSemilattice A12, final BoundedSemilattice A13, final BoundedSemilattice A14, final BoundedSemilattice A15, final BoundedSemilattice A16, final BoundedSemilattice A17, final BoundedSemilattice A18, final BoundedSemilattice A19, final BoundedSemilattice A20, final BoundedSemilattice A21) {
      return new BoundedSemilattice(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) {
         private final BoundedSemilattice A0$66;
         private final BoundedSemilattice A1$63;
         private final BoundedSemilattice A2$60;
         private final BoundedSemilattice A3$57;
         private final BoundedSemilattice A4$54;
         private final BoundedSemilattice A5$51;
         private final BoundedSemilattice A6$48;
         private final BoundedSemilattice A7$45;
         private final BoundedSemilattice A8$42;
         private final BoundedSemilattice A9$39;
         private final BoundedSemilattice A10$36;
         private final BoundedSemilattice A11$33;
         private final BoundedSemilattice A12$30;
         private final BoundedSemilattice A13$27;
         private final BoundedSemilattice A14$24;
         private final BoundedSemilattice A15$21;
         private final BoundedSemilattice A16$18;
         private final BoundedSemilattice A17$15;
         private final BoundedSemilattice A18$12;
         private final BoundedSemilattice A19$9;
         private final BoundedSemilattice A20$6;
         private final BoundedSemilattice A21$3;

         public Object combineN(final Object a, final int n) {
            return BoundedSemilattice.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return BoundedSemilattice.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return BoundedSemilattice.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return BoundedSemilattice.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return BoundedSemilattice.combineN$mcJ$sp$(this, a, n);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public PartialOrder asMeetPartialOrder(final Eq ev) {
            return Semilattice.asMeetPartialOrder$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asMeetPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asMeetPartialOrder$mcJ$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder(final Eq ev) {
            return Semilattice.asJoinPartialOrder$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcD$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcD$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcF$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcF$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcI$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcI$sp$(this, ev);
         }

         public PartialOrder asJoinPartialOrder$mcJ$sp(final Eq ev) {
            return Semilattice.asJoinPartialOrder$mcJ$sp$(this, ev);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Band.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Band.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Band.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Band.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Band.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Tuple22 combine(final Tuple22 x, final Tuple22 y) {
            return new Tuple22(this.A0$66.combine(x._1(), y._1()), this.A1$63.combine(x._2(), y._2()), this.A2$60.combine(x._3(), y._3()), this.A3$57.combine(x._4(), y._4()), this.A4$54.combine(x._5(), y._5()), this.A5$51.combine(x._6(), y._6()), this.A6$48.combine(x._7(), y._7()), this.A7$45.combine(x._8(), y._8()), this.A8$42.combine(x._9(), y._9()), this.A9$39.combine(x._10(), y._10()), this.A10$36.combine(x._11(), y._11()), this.A11$33.combine(x._12(), y._12()), this.A12$30.combine(x._13(), y._13()), this.A13$27.combine(x._14(), y._14()), this.A14$24.combine(x._15(), y._15()), this.A15$21.combine(x._16(), y._16()), this.A16$18.combine(x._17(), y._17()), this.A17$15.combine(x._18(), y._18()), this.A18$12.combine(x._19(), y._19()), this.A19$9.combine(x._20(), y._20()), this.A20$6.combine(x._21(), y._21()), this.A21$3.combine(x._22(), y._22()));
         }

         public Tuple22 empty() {
            return new Tuple22(this.A0$66.empty(), this.A1$63.empty(), this.A2$60.empty(), this.A3$57.empty(), this.A4$54.empty(), this.A5$51.empty(), this.A6$48.empty(), this.A7$45.empty(), this.A8$42.empty(), this.A9$39.empty(), this.A10$36.empty(), this.A11$33.empty(), this.A12$30.empty(), this.A13$27.empty(), this.A14$24.empty(), this.A15$21.empty(), this.A16$18.empty(), this.A17$15.empty(), this.A18$12.empty(), this.A19$9.empty(), this.A20$6.empty(), this.A21$3.empty());
         }

         public {
            this.A0$66 = A0$66;
            this.A1$63 = A1$63;
            this.A2$60 = A2$60;
            this.A3$57 = A3$57;
            this.A4$54 = A4$54;
            this.A5$51 = A5$51;
            this.A6$48 = A6$48;
            this.A7$45 = A7$45;
            this.A8$42 = A8$42;
            this.A9$39 = A9$39;
            this.A10$36 = A10$36;
            this.A11$33 = A11$33;
            this.A12$30 = A12$30;
            this.A13$27 = A13$27;
            this.A14$24 = A14$24;
            this.A15$21 = A15$21;
            this.A16$18 = A16$18;
            this.A17$15 = A17$15;
            this.A18$12 = A18$12;
            this.A19$9 = A19$9;
            this.A20$6 = A20$6;
            this.A21$3 = A21$3;
            Semigroup.$init$(this);
            Band.$init$(this);
            CommutativeSemigroup.$init$(this);
            Semilattice.$init$(this);
            Monoid.$init$(this);
            CommutativeMonoid.$init$(this);
            BoundedSemilattice.$init$(this);
         }
      };
   }

   static void $init$(final TupleInstances $this) {
   }
}
