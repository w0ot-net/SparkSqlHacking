package cats.kernel.instances;

import cats.kernel.CommutativeMonoid;
import cats.kernel.CommutativeSemigroup;
import cats.kernel.Eq;
import cats.kernel.Monoid;
import cats.kernel.Semigroup;
import scala.Option;
import scala.Tuple1;
import scala.Tuple10;
import scala.Tuple11;
import scala.Tuple12;
import scala.Tuple13;
import scala.Tuple14;
import scala.Tuple15;
import scala.Tuple16;
import scala.Tuple17;
import scala.Tuple18;
import scala.Tuple19;
import scala.Tuple2;
import scala.Tuple20;
import scala.Tuple21;
import scala.Tuple22;
import scala.Tuple3;
import scala.Tuple4;
import scala.Tuple5;
import scala.Tuple6;
import scala.Tuple7;
import scala.Tuple8;
import scala.Tuple9;
import scala.collection.IterableOnce;
import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u0005%-h\u0001\u0003\r\u001a!\u0003\r\taG\u0010\t\u000b)\u0002A\u0011\u0001\u0017\t\u000bA\u0002A1A\u0019\t\u000b!\u0003A1A%\t\u000be\u0003A1\u0001.\t\u000b9\u0004A1A8\t\u000f\u0005=\u0001\u0001b\u0001\u0002\u0012!9\u0011\u0011\n\u0001\u0005\u0004\u0005-\u0003bBAF\u0001\u0011\r\u0011Q\u0012\u0005\b\u0003+\u0004A1AAl\u0011\u001d\u00119\u0003\u0001C\u0002\u0005SAqA!!\u0001\t\u0007\u0011\u0019\tC\u0004\u0003d\u0002!\u0019A!:\t\u000f\r5\u0003\u0001b\u0001\u0004P!91q\u0018\u0001\u0005\u0004\r\u0005\u0007b\u0002C\u001d\u0001\u0011\rA1\b\u0005\b\tw\u0003A1\u0001C_\u0011\u001d))\u0005\u0001C\u0002\u000b\u000fBq!b6\u0001\t\u0007)I\u000eC\u0004\u0007r\u0001!\u0019Ab\u001d\t\u000f\u001dM\u0001\u0001b\u0001\b\u0016!9qQ\u0018\u0001\u0005\u0004\u001d}\u0006b\u0002E8\u0001\u0011\r\u0001\u0012\u000f\u0005\b\u0013S\u0001A1AE\u0016\u0005}!V\u000f\u001d7f\u0007>lW.\u001e;bi&4X-T8o_&$\u0017J\\:uC:\u001cWm\u001d\u0006\u00035m\t\u0011\"\u001b8ti\u0006t7-Z:\u000b\u0005qi\u0012AB6fe:,GNC\u0001\u001f\u0003\u0011\u0019\u0017\r^:\u0014\u0007\u0001\u0001c\u0005\u0005\u0002\"I5\t!EC\u0001$\u0003\u0015\u00198-\u00197b\u0013\t)#E\u0001\u0004B]f\u0014VM\u001a\t\u0003O!j\u0011!G\u0005\u0003Se\u0011\u0011\u0004V;qY\u0016\u001cV-\\5mCR$\u0018nY3J]N$\u0018M\\2fg\u00061A%\u001b8ji\u0012\u001a\u0001\u0001F\u0001.!\t\tc&\u0003\u00020E\t!QK\\5u\u0003\u0011\u001a\u0017\r^:LKJtW\r\\\"p[6,H/\u0019;jm\u0016luN\\8jI\u001a{'\u000fV;qY\u0016\fTC\u0001\u001a=)\t\u0019T\tE\u00025k]j\u0011aG\u0005\u0003mm\u0011\u0011cQ8n[V$\u0018\r^5wK6{gn\\5e!\r\t\u0003HO\u0005\u0003s\t\u0012a\u0001V;qY\u0016\f\u0004CA\u001e=\u0019\u0001!Q!\u0010\u0002C\u0002y\u0012!!\u0011\u0019\u0012\u0005}\u0012\u0005CA\u0011A\u0013\t\t%EA\u0004O_RD\u0017N\\4\u0011\u0005\u0005\u001a\u0015B\u0001##\u0005\r\te.\u001f\u0005\u0006\r\n\u0001\u001daR\u0001\u0003\u0003B\u00022\u0001N\u001b;\u0003\u0011\u001a\u0017\r^:LKJtW\r\\\"p[6,H/\u0019;jm\u0016luN\\8jI\u001a{'\u000fV;qY\u0016\u0014Tc\u0001&Q%R\u00191\n\u0016,\u0011\u0007Q*D\n\u0005\u0003\"\u001b>\u000b\u0016B\u0001(#\u0005\u0019!V\u000f\u001d7feA\u00111\b\u0015\u0003\u0006{\r\u0011\rA\u0010\t\u0003wI#QaU\u0002C\u0002y\u0012!!Q\u0019\t\u000b\u0019\u001b\u00019A+\u0011\u0007Q*t\nC\u0003X\u0007\u0001\u000f\u0001,\u0001\u0002BcA\u0019A'N)\u0002I\r\fGo]&fe:,GnQ8n[V$\u0018\r^5wK6{gn\\5e\r>\u0014H+\u001e9mKN*BaW1dKR!AlZ5l!\r!T'\u0018\t\u0006Cy\u0003'\rZ\u0005\u0003?\n\u0012a\u0001V;qY\u0016\u001c\u0004CA\u001eb\t\u0015iDA1\u0001?!\tY4\rB\u0003T\t\t\u0007a\b\u0005\u0002<K\u0012)a\r\u0002b\u0001}\t\u0011\u0011I\r\u0005\u0006\r\u0012\u0001\u001d\u0001\u001b\t\u0004iU\u0002\u0007\"B,\u0005\u0001\bQ\u0007c\u0001\u001b6E\")A\u000e\u0002a\u0002[\u0006\u0011\u0011I\r\t\u0004iU\"\u0017\u0001J2biN\\UM\u001d8fY\u000e{W.\\;uCRLg/Z'p]>LGMR8s)V\u0004H.\u001a\u001b\u0016\u000bA4\bP\u001f?\u0015\u0011Et\u0018\u0011AA\u0003\u0003\u0013\u00012\u0001N\u001bs!\u0019\t3/^<zw&\u0011AO\t\u0002\u0007)V\u0004H.\u001a\u001b\u0011\u0005m2H!B\u001f\u0006\u0005\u0004q\u0004CA\u001ey\t\u0015\u0019VA1\u0001?!\tY$\u0010B\u0003g\u000b\t\u0007a\b\u0005\u0002<y\u0012)Q0\u0002b\u0001}\t\u0011\u0011i\r\u0005\u0006\r\u0016\u0001\u001da \t\u0004iU*\bBB,\u0006\u0001\b\t\u0019\u0001E\u00025k]Da\u0001\\\u0003A\u0004\u0005\u001d\u0001c\u0001\u001b6s\"9\u00111B\u0003A\u0004\u00055\u0011AA!4!\r!Tg_\u0001%G\u0006$8oS3s]\u0016d7i\\7nkR\fG/\u001b<f\u001b>tw.\u001b3G_J$V\u000f\u001d7fkUa\u00111CA\u0010\u0003G\t9#a\u000b\u00020Qa\u0011QCA\u001a\u0003o\tY$a\u0010\u0002DA!A'NA\f!5\t\u0013\u0011DA\u000f\u0003C\t)#!\u000b\u0002.%\u0019\u00111\u0004\u0012\u0003\rQ+\b\u000f\\36!\rY\u0014q\u0004\u0003\u0006{\u0019\u0011\rA\u0010\t\u0004w\u0005\rB!B*\u0007\u0005\u0004q\u0004cA\u001e\u0002(\u0011)aM\u0002b\u0001}A\u00191(a\u000b\u0005\u000bu4!\u0019\u0001 \u0011\u0007m\ny\u0003\u0002\u0004\u00022\u0019\u0011\rA\u0010\u0002\u0003\u0003RBaA\u0012\u0004A\u0004\u0005U\u0002\u0003\u0002\u001b6\u0003;Aaa\u0016\u0004A\u0004\u0005e\u0002\u0003\u0002\u001b6\u0003CAa\u0001\u001c\u0004A\u0004\u0005u\u0002\u0003\u0002\u001b6\u0003KAq!a\u0003\u0007\u0001\b\t\t\u0005\u0005\u00035k\u0005%\u0002bBA#\r\u0001\u000f\u0011qI\u0001\u0003\u0003R\u0002B\u0001N\u001b\u0002.\u0005!3-\u0019;t\u0017\u0016\u0014h.\u001a7D_6lW\u000f^1uSZ,Wj\u001c8pS\u00124uN\u001d+va2,g'\u0006\b\u0002N\u0005e\u0013QLA1\u0003K\nI'!\u001c\u0015\u001d\u0005=\u0013\u0011OA;\u0003s\ni(!!\u0002\u0006B!A'NA)!=\t\u00131KA,\u00037\ny&a\u0019\u0002h\u0005-\u0014bAA+E\t1A+\u001e9mKZ\u00022aOA-\t\u0015itA1\u0001?!\rY\u0014Q\f\u0003\u0006'\u001e\u0011\rA\u0010\t\u0004w\u0005\u0005D!\u00024\b\u0005\u0004q\u0004cA\u001e\u0002f\u0011)Qp\u0002b\u0001}A\u00191(!\u001b\u0005\r\u0005ErA1\u0001?!\rY\u0014Q\u000e\u0003\u0007\u0003_:!\u0019\u0001 \u0003\u0005\u0005+\u0004B\u0002$\b\u0001\b\t\u0019\b\u0005\u00035k\u0005]\u0003BB,\b\u0001\b\t9\b\u0005\u00035k\u0005m\u0003B\u00027\b\u0001\b\tY\b\u0005\u00035k\u0005}\u0003bBA\u0006\u000f\u0001\u000f\u0011q\u0010\t\u0005iU\n\u0019\u0007C\u0004\u0002F\u001d\u0001\u001d!a!\u0011\tQ*\u0014q\r\u0005\b\u0003\u000f;\u00019AAE\u0003\t\tU\u0007\u0005\u00035k\u0005-\u0014\u0001J2biN\\UM\u001d8fY\u000e{W.\\;uCRLg/Z'p]>LGMR8s)V\u0004H.Z\u001c\u0016!\u0005=\u00151TAP\u0003G\u000b9+a+\u00020\u0006MF\u0003EAI\u0003o\u000bY,a0\u0002D\u0006\u001d\u00171ZAh!\u0011!T'a%\u0011#\u0005\n)*!'\u0002\u001e\u0006\u0005\u0016QUAU\u0003[\u000b\t,C\u0002\u0002\u0018\n\u0012a\u0001V;qY\u0016<\u0004cA\u001e\u0002\u001c\u0012)Q\b\u0003b\u0001}A\u00191(a(\u0005\u000bMC!\u0019\u0001 \u0011\u0007m\n\u0019\u000bB\u0003g\u0011\t\u0007a\bE\u0002<\u0003O#Q! \u0005C\u0002y\u00022aOAV\t\u0019\t\t\u0004\u0003b\u0001}A\u00191(a,\u0005\r\u0005=\u0004B1\u0001?!\rY\u00141\u0017\u0003\u0007\u0003kC!\u0019\u0001 \u0003\u0005\u00053\u0004B\u0002$\t\u0001\b\tI\f\u0005\u00035k\u0005e\u0005BB,\t\u0001\b\ti\f\u0005\u00035k\u0005u\u0005B\u00027\t\u0001\b\t\t\r\u0005\u00035k\u0005\u0005\u0006bBA\u0006\u0011\u0001\u000f\u0011Q\u0019\t\u0005iU\n)\u000bC\u0004\u0002F!\u0001\u001d!!3\u0011\tQ*\u0014\u0011\u0016\u0005\b\u0003\u000fC\u00019AAg!\u0011!T'!,\t\u000f\u0005E\u0007\u0002q\u0001\u0002T\u0006\u0011\u0011I\u000e\t\u0005iU\n\t,\u0001\u0013dCR\u001c8*\u001a:oK2\u001cu.\\7vi\u0006$\u0018N^3N_:|\u0017\u000e\u001a$peR+\b\u000f\\39+I\tI.!:\u0002j\u00065\u0018\u0011_A{\u0003s\fiP!\u0001\u0015%\u0005m'Q\u0001B\u0005\u0005\u001b\u0011\tB!\u0006\u0003\u001a\tu!\u0011\u0005\t\u0005iU\ni\u000eE\n\"\u0003?\f\u0019/a:\u0002l\u0006=\u00181_A|\u0003w\fy0C\u0002\u0002b\n\u0012a\u0001V;qY\u0016D\u0004cA\u001e\u0002f\u0012)Q(\u0003b\u0001}A\u00191(!;\u0005\u000bMK!\u0019\u0001 \u0011\u0007m\ni\u000fB\u0003g\u0013\t\u0007a\bE\u0002<\u0003c$Q!`\u0005C\u0002y\u00022aOA{\t\u0019\t\t$\u0003b\u0001}A\u00191(!?\u0005\r\u0005=\u0014B1\u0001?!\rY\u0014Q \u0003\u0007\u0003kK!\u0019\u0001 \u0011\u0007m\u0012\t\u0001\u0002\u0004\u0003\u0004%\u0011\rA\u0010\u0002\u0003\u0003^BaAR\u0005A\u0004\t\u001d\u0001\u0003\u0002\u001b6\u0003GDaaV\u0005A\u0004\t-\u0001\u0003\u0002\u001b6\u0003ODa\u0001\\\u0005A\u0004\t=\u0001\u0003\u0002\u001b6\u0003WDq!a\u0003\n\u0001\b\u0011\u0019\u0002\u0005\u00035k\u0005=\bbBA#\u0013\u0001\u000f!q\u0003\t\u0005iU\n\u0019\u0010C\u0004\u0002\b&\u0001\u001dAa\u0007\u0011\tQ*\u0014q\u001f\u0005\b\u0003#L\u00019\u0001B\u0010!\u0011!T'a?\t\u000f\t\r\u0012\u0002q\u0001\u0003&\u0005\u0011\u0011i\u000e\t\u0005iU\ny0\u0001\u0013dCR\u001c8*\u001a:oK2\u001cu.\\7vi\u0006$\u0018N^3N_:|\u0017\u000e\u001a$peR+\b\u000f\\3:+Q\u0011YCa\u000e\u0003<\t}\"1\tB$\u0005\u0017\u0012yEa\u0015\u0003XQ!\"Q\u0006B.\u0005?\u0012\u0019Ga\u001a\u0003l\t=$1\u000fB<\u0005w\u0002B\u0001N\u001b\u00030A)\u0012E!\r\u00036\te\"Q\bB!\u0005\u000b\u0012IE!\u0014\u0003R\tU\u0013b\u0001B\u001aE\t1A+\u001e9mKf\u00022a\u000fB\u001c\t\u0015i$B1\u0001?!\rY$1\b\u0003\u0006'*\u0011\rA\u0010\t\u0004w\t}B!\u00024\u000b\u0005\u0004q\u0004cA\u001e\u0003D\u0011)QP\u0003b\u0001}A\u00191Ha\u0012\u0005\r\u0005E\"B1\u0001?!\rY$1\n\u0003\u0007\u0003_R!\u0019\u0001 \u0011\u0007m\u0012y\u0005\u0002\u0004\u00026*\u0011\rA\u0010\t\u0004w\tMCA\u0002B\u0002\u0015\t\u0007a\bE\u0002<\u0005/\"aA!\u0017\u000b\u0005\u0004q$AA!9\u0011\u00191%\u0002q\u0001\u0003^A!A'\u000eB\u001b\u0011\u00199&\u0002q\u0001\u0003bA!A'\u000eB\u001d\u0011\u0019a'\u0002q\u0001\u0003fA!A'\u000eB\u001f\u0011\u001d\tYA\u0003a\u0002\u0005S\u0002B\u0001N\u001b\u0003B!9\u0011Q\t\u0006A\u0004\t5\u0004\u0003\u0002\u001b6\u0005\u000bBq!a\"\u000b\u0001\b\u0011\t\b\u0005\u00035k\t%\u0003bBAi\u0015\u0001\u000f!Q\u000f\t\u0005iU\u0012i\u0005C\u0004\u0003$)\u0001\u001dA!\u001f\u0011\tQ*$\u0011\u000b\u0005\b\u0005{R\u00019\u0001B@\u0003\t\t\u0005\b\u0005\u00035k\tU\u0013!J2biN\\UM\u001d8fY\u000e{W.\\;uCRLg/Z'p]>LGMR8s)V\u0004H.Z\u00191+Y\u0011)I!%\u0003\u0016\ne%Q\u0014BQ\u0005K\u0013IK!,\u00032\nUFC\u0006BD\u0005s\u0013iL!1\u0003F\n%'Q\u001aBi\u0005+\u0014IN!8\u0011\tQ*$\u0011\u0012\t\u0018C\t-%q\u0012BJ\u0005/\u0013YJa(\u0003$\n\u001d&1\u0016BX\u0005gK1A!$#\u0005\u001d!V\u000f\u001d7fcA\u00022a\u000fBI\t\u0015i4B1\u0001?!\rY$Q\u0013\u0003\u0006'.\u0011\rA\u0010\t\u0004w\teE!\u00024\f\u0005\u0004q\u0004cA\u001e\u0003\u001e\u0012)Qp\u0003b\u0001}A\u00191H!)\u0005\r\u0005E2B1\u0001?!\rY$Q\u0015\u0003\u0007\u0003_Z!\u0019\u0001 \u0011\u0007m\u0012I\u000b\u0002\u0004\u00026.\u0011\rA\u0010\t\u0004w\t5FA\u0002B\u0002\u0017\t\u0007a\bE\u0002<\u0005c#aA!\u0017\f\u0005\u0004q\u0004cA\u001e\u00036\u00121!qW\u0006C\u0002y\u0012!!Q\u001d\t\r\u0019[\u00019\u0001B^!\u0011!TGa$\t\r][\u00019\u0001B`!\u0011!TGa%\t\r1\\\u00019\u0001Bb!\u0011!TGa&\t\u000f\u0005-1\u0002q\u0001\u0003HB!A'\u000eBN\u0011\u001d\t)e\u0003a\u0002\u0005\u0017\u0004B\u0001N\u001b\u0003 \"9\u0011qQ\u0006A\u0004\t=\u0007\u0003\u0002\u001b6\u0005GCq!!5\f\u0001\b\u0011\u0019\u000e\u0005\u00035k\t\u001d\u0006b\u0002B\u0012\u0017\u0001\u000f!q\u001b\t\u0005iU\u0012Y\u000bC\u0004\u0003~-\u0001\u001dAa7\u0011\tQ*$q\u0016\u0005\b\u0005?\\\u00019\u0001Bq\u0003\t\t\u0015\b\u0005\u00035k\tM\u0016!J2biN\\UM\u001d8fY\u000e{W.\\;uCRLg/Z'p]>LGMR8s)V\u0004H.Z\u00192+a\u00119Oa=\u0003x\nm(q`B\u0002\u0007\u000f\u0019Yaa\u0004\u0004\u0014\r]11\u0004\u000b\u0019\u0005S\u001cyba\t\u0004(\r-2qFB\u001a\u0007o\u0019Yda\u0010\u0004D\r\u001d\u0003\u0003\u0002\u001b6\u0005W\u0004\u0012$\tBw\u0005c\u0014)P!?\u0003~\u000e\u00051QAB\u0005\u0007\u001b\u0019\tb!\u0006\u0004\u001a%\u0019!q\u001e\u0012\u0003\u000fQ+\b\u000f\\32cA\u00191Ha=\u0005\u000bub!\u0019\u0001 \u0011\u0007m\u00129\u0010B\u0003T\u0019\t\u0007a\bE\u0002<\u0005w$QA\u001a\u0007C\u0002y\u00022a\u000fB\u0000\t\u0015iHB1\u0001?!\rY41\u0001\u0003\u0007\u0003ca!\u0019\u0001 \u0011\u0007m\u001a9\u0001\u0002\u0004\u0002p1\u0011\rA\u0010\t\u0004w\r-AABA[\u0019\t\u0007a\bE\u0002<\u0007\u001f!aAa\u0001\r\u0005\u0004q\u0004cA\u001e\u0004\u0014\u00111!\u0011\f\u0007C\u0002y\u00022aOB\f\t\u0019\u00119\f\u0004b\u0001}A\u00191ha\u0007\u0005\r\ruAB1\u0001?\u0005\r\t\u0015\u0007\r\u0005\u0007\r2\u0001\u001da!\t\u0011\tQ*$\u0011\u001f\u0005\u0007/2\u0001\u001da!\n\u0011\tQ*$Q\u001f\u0005\u0007Y2\u0001\u001da!\u000b\u0011\tQ*$\u0011 \u0005\b\u0003\u0017a\u00019AB\u0017!\u0011!TG!@\t\u000f\u0005\u0015C\u0002q\u0001\u00042A!A'NB\u0001\u0011\u001d\t9\t\u0004a\u0002\u0007k\u0001B\u0001N\u001b\u0004\u0006!9\u0011\u0011\u001b\u0007A\u0004\re\u0002\u0003\u0002\u001b6\u0007\u0013AqAa\t\r\u0001\b\u0019i\u0004\u0005\u00035k\r5\u0001b\u0002B?\u0019\u0001\u000f1\u0011\t\t\u0005iU\u001a\t\u0002C\u0004\u0003`2\u0001\u001da!\u0012\u0011\tQ*4Q\u0003\u0005\b\u0007\u0013b\u00019AB&\u0003\r\t\u0015\u0007\r\t\u0005iU\u001aI\"A\u0013dCR\u001c8*\u001a:oK2\u001cu.\\7vi\u0006$\u0018N^3N_:|\u0017\u000e\u001a$peR+\b\u000f\\32eUQ2\u0011KB/\u0007C\u001a)g!\u001b\u0004n\rE4QOB=\u0007{\u001a\ti!\"\u0004\nRQ21KBG\u0007#\u001b)j!'\u0004\u001e\u000e\u00056QUBU\u0007[\u001b\tl!.\u0004:B!A'NB+!m\t3qKB.\u0007?\u001a\u0019ga\u001a\u0004l\r=41OB<\u0007w\u001ayha!\u0004\b&\u00191\u0011\f\u0012\u0003\u000fQ+\b\u000f\\32eA\u00191h!\u0018\u0005\u000buj!\u0019\u0001 \u0011\u0007m\u001a\t\u0007B\u0003T\u001b\t\u0007a\bE\u0002<\u0007K\"QAZ\u0007C\u0002y\u00022aOB5\t\u0015iXB1\u0001?!\rY4Q\u000e\u0003\u0007\u0003ci!\u0019\u0001 \u0011\u0007m\u001a\t\b\u0002\u0004\u0002p5\u0011\rA\u0010\t\u0004w\rUDABA[\u001b\t\u0007a\bE\u0002<\u0007s\"aAa\u0001\u000e\u0005\u0004q\u0004cA\u001e\u0004~\u00111!\u0011L\u0007C\u0002y\u00022aOBA\t\u0019\u00119,\u0004b\u0001}A\u00191h!\"\u0005\r\ruQB1\u0001?!\rY4\u0011\u0012\u0003\u0007\u0007\u0017k!\u0019\u0001 \u0003\u0007\u0005\u000b\u0014\u0007\u0003\u0004G\u001b\u0001\u000f1q\u0012\t\u0005iU\u001aY\u0006\u0003\u0004X\u001b\u0001\u000f11\u0013\t\u0005iU\u001ay\u0006\u0003\u0004m\u001b\u0001\u000f1q\u0013\t\u0005iU\u001a\u0019\u0007C\u0004\u0002\f5\u0001\u001daa'\u0011\tQ*4q\r\u0005\b\u0003\u000bj\u00019ABP!\u0011!Tga\u001b\t\u000f\u0005\u001dU\u0002q\u0001\u0004$B!A'NB8\u0011\u001d\t\t.\u0004a\u0002\u0007O\u0003B\u0001N\u001b\u0004t!9!1E\u0007A\u0004\r-\u0006\u0003\u0002\u001b6\u0007oBqA! \u000e\u0001\b\u0019y\u000b\u0005\u00035k\rm\u0004b\u0002Bp\u001b\u0001\u000f11\u0017\t\u0005iU\u001ay\bC\u0004\u0004J5\u0001\u001daa.\u0011\tQ*41\u0011\u0005\b\u0007wk\u00019AB_\u0003\r\t\u0015'\r\t\u0005iU\u001a9)A\u0013dCR\u001c8*\u001a:oK2\u001cu.\\7vi\u0006$\u0018N^3N_:|\u0017\u000e\u001a$peR+\b\u000f\\32gUa21YBh\u0007'\u001c9na7\u0004`\u000e\r8q]Bv\u0007_\u001c\u0019pa>\u0004|\u000e}H\u0003HBc\t\u0007!9\u0001b\u0003\u0005\u0010\u0011MAq\u0003C\u000e\t?!\u0019\u0003b\n\u0005,\u0011=B1\u0007\t\u0005iU\u001a9\rE\u000f\"\u0007\u0013\u001cim!5\u0004V\u000ee7Q\\Bq\u0007K\u001cIo!<\u0004r\u000eU8\u0011`B\u007f\u0013\r\u0019YM\t\u0002\b)V\u0004H.Z\u00194!\rY4q\u001a\u0003\u0006{9\u0011\rA\u0010\t\u0004w\rMG!B*\u000f\u0005\u0004q\u0004cA\u001e\u0004X\u0012)aM\u0004b\u0001}A\u00191ha7\u0005\u000but!\u0019\u0001 \u0011\u0007m\u001ay\u000e\u0002\u0004\u000229\u0011\rA\u0010\t\u0004w\r\rHABA8\u001d\t\u0007a\bE\u0002<\u0007O$a!!.\u000f\u0005\u0004q\u0004cA\u001e\u0004l\u00121!1\u0001\bC\u0002y\u00022aOBx\t\u0019\u0011IF\u0004b\u0001}A\u00191ha=\u0005\r\t]fB1\u0001?!\rY4q\u001f\u0003\u0007\u0007;q!\u0019\u0001 \u0011\u0007m\u001aY\u0010\u0002\u0004\u0004\f:\u0011\rA\u0010\t\u0004w\r}HA\u0002C\u0001\u001d\t\u0007aHA\u0002BcIBaA\u0012\bA\u0004\u0011\u0015\u0001\u0003\u0002\u001b6\u0007\u001bDaa\u0016\bA\u0004\u0011%\u0001\u0003\u0002\u001b6\u0007#Da\u0001\u001c\bA\u0004\u00115\u0001\u0003\u0002\u001b6\u0007+Dq!a\u0003\u000f\u0001\b!\t\u0002\u0005\u00035k\re\u0007bBA#\u001d\u0001\u000fAQ\u0003\t\u0005iU\u001ai\u000eC\u0004\u0002\b:\u0001\u001d\u0001\"\u0007\u0011\tQ*4\u0011\u001d\u0005\b\u0003#t\u00019\u0001C\u000f!\u0011!Tg!:\t\u000f\t\rb\u0002q\u0001\u0005\"A!A'NBu\u0011\u001d\u0011iH\u0004a\u0002\tK\u0001B\u0001N\u001b\u0004n\"9!q\u001c\bA\u0004\u0011%\u0002\u0003\u0002\u001b6\u0007cDqa!\u0013\u000f\u0001\b!i\u0003\u0005\u00035k\rU\bbBB^\u001d\u0001\u000fA\u0011\u0007\t\u0005iU\u001aI\u0010C\u0004\u000569\u0001\u001d\u0001b\u000e\u0002\u0007\u0005\u000b$\u0007\u0005\u00035k\ru\u0018!J2biN\\UM\u001d8fY\u000e{W.\\;uCRLg/Z'p]>LGMR8s)V\u0004H.Z\u00195+y!i\u0004\"\u0013\u0005N\u0011ECQ\u000bC-\t;\"\t\u0007\"\u001a\u0005j\u00115D\u0011\u000fC;\ts\"i\b\u0006\u0010\u0005@\u0011\u0005EQ\u0011CE\t\u001b#\t\n\"&\u0005\u001a\u0012uE\u0011\u0015CS\tS#i\u000b\"-\u00056B!A'\u000eC!!}\tC1\tC$\t\u0017\"y\u0005b\u0015\u0005X\u0011mCq\fC2\tO\"Y\u0007b\u001c\u0005t\u0011]D1P\u0005\u0004\t\u000b\u0012#a\u0002+va2,\u0017\u0007\u000e\t\u0004w\u0011%C!B\u001f\u0010\u0005\u0004q\u0004cA\u001e\u0005N\u0011)1k\u0004b\u0001}A\u00191\b\"\u0015\u0005\u000b\u0019|!\u0019\u0001 \u0011\u0007m\")\u0006B\u0003~\u001f\t\u0007a\bE\u0002<\t3\"a!!\r\u0010\u0005\u0004q\u0004cA\u001e\u0005^\u00111\u0011qN\bC\u0002y\u00022a\u000fC1\t\u0019\t)l\u0004b\u0001}A\u00191\b\"\u001a\u0005\r\t\rqB1\u0001?!\rYD\u0011\u000e\u0003\u0007\u00053z!\u0019\u0001 \u0011\u0007m\"i\u0007\u0002\u0004\u00038>\u0011\rA\u0010\t\u0004w\u0011EDABB\u000f\u001f\t\u0007a\bE\u0002<\tk\"aaa#\u0010\u0005\u0004q\u0004cA\u001e\u0005z\u00111A\u0011A\bC\u0002y\u00022a\u000fC?\t\u0019!yh\u0004b\u0001}\t\u0019\u0011)M\u001a\t\r\u0019{\u00019\u0001CB!\u0011!T\u0007b\u0012\t\r]{\u00019\u0001CD!\u0011!T\u0007b\u0013\t\r1|\u00019\u0001CF!\u0011!T\u0007b\u0014\t\u000f\u0005-q\u0002q\u0001\u0005\u0010B!A'\u000eC*\u0011\u001d\t)e\u0004a\u0002\t'\u0003B\u0001N\u001b\u0005X!9\u0011qQ\bA\u0004\u0011]\u0005\u0003\u0002\u001b6\t7Bq!!5\u0010\u0001\b!Y\n\u0005\u00035k\u0011}\u0003b\u0002B\u0012\u001f\u0001\u000fAq\u0014\t\u0005iU\"\u0019\u0007C\u0004\u0003~=\u0001\u001d\u0001b)\u0011\tQ*Dq\r\u0005\b\u0005?|\u00019\u0001CT!\u0011!T\u0007b\u001b\t\u000f\r%s\u0002q\u0001\u0005,B!A'\u000eC8\u0011\u001d\u0019Yl\u0004a\u0002\t_\u0003B\u0001N\u001b\u0005t!9AQG\bA\u0004\u0011M\u0006\u0003\u0002\u001b6\toBq\u0001b.\u0010\u0001\b!I,A\u0002BcM\u0002B\u0001N\u001b\u0005|\u0005)3-\u0019;t\u0017\u0016\u0014h.\u001a7D_6lW\u000f^1uSZ,Wj\u001c8pS\u00124uN\u001d+va2,\u0017'N\u000b!\t\u007f#Y\rb4\u0005T\u0012]G1\u001cCp\tG$9\u000fb;\u0005p\u0012MHq\u001fC~\t\u007f,\u0019\u0001\u0006\u0011\u0005B\u0016\u001dQ1BC\b\u000b')9\"b\u0007\u0006 \u0015\rRqEC\u0016\u000b_)\u0019$b\u000e\u0006<\u0015}\u0002\u0003\u0002\u001b6\t\u0007\u0004\u0012%\tCc\t\u0013$i\r\"5\u0005V\u0012eGQ\u001cCq\tK$I\u000f\"<\u0005r\u0012UH\u0011 C\u007f\u000b\u0003I1\u0001b2#\u0005\u001d!V\u000f\u001d7fcU\u00022a\u000fCf\t\u0015i\u0004C1\u0001?!\rYDq\u001a\u0003\u0006'B\u0011\rA\u0010\t\u0004w\u0011MG!\u00024\u0011\u0005\u0004q\u0004cA\u001e\u0005X\u0012)Q\u0010\u0005b\u0001}A\u00191\bb7\u0005\r\u0005E\u0002C1\u0001?!\rYDq\u001c\u0003\u0007\u0003_\u0002\"\u0019\u0001 \u0011\u0007m\"\u0019\u000f\u0002\u0004\u00026B\u0011\rA\u0010\t\u0004w\u0011\u001dHA\u0002B\u0002!\t\u0007a\bE\u0002<\tW$aA!\u0017\u0011\u0005\u0004q\u0004cA\u001e\u0005p\u00121!q\u0017\tC\u0002y\u00022a\u000fCz\t\u0019\u0019i\u0002\u0005b\u0001}A\u00191\bb>\u0005\r\r-\u0005C1\u0001?!\rYD1 \u0003\u0007\t\u0003\u0001\"\u0019\u0001 \u0011\u0007m\"y\u0010\u0002\u0004\u0005\u0000A\u0011\rA\u0010\t\u0004w\u0015\rAABC\u0003!\t\u0007aHA\u0002BcQBaA\u0012\tA\u0004\u0015%\u0001\u0003\u0002\u001b6\t\u0013Daa\u0016\tA\u0004\u00155\u0001\u0003\u0002\u001b6\t\u001bDa\u0001\u001c\tA\u0004\u0015E\u0001\u0003\u0002\u001b6\t#Dq!a\u0003\u0011\u0001\b))\u0002\u0005\u00035k\u0011U\u0007bBA#!\u0001\u000fQ\u0011\u0004\t\u0005iU\"I\u000eC\u0004\u0002\bB\u0001\u001d!\"\b\u0011\tQ*DQ\u001c\u0005\b\u0003#\u0004\u00029AC\u0011!\u0011!T\u0007\"9\t\u000f\t\r\u0002\u0003q\u0001\u0006&A!A'\u000eCs\u0011\u001d\u0011i\b\u0005a\u0002\u000bS\u0001B\u0001N\u001b\u0005j\"9!q\u001c\tA\u0004\u00155\u0002\u0003\u0002\u001b6\t[Dqa!\u0013\u0011\u0001\b)\t\u0004\u0005\u00035k\u0011E\bbBB^!\u0001\u000fQQ\u0007\t\u0005iU\")\u0010C\u0004\u00056A\u0001\u001d!\"\u000f\u0011\tQ*D\u0011 \u0005\b\to\u0003\u00029AC\u001f!\u0011!T\u0007\"@\t\u000f\u0015\u0005\u0003\u0003q\u0001\u0006D\u0005\u0019\u0011)\r\u001b\u0011\tQ*T\u0011A\u0001&G\u0006$8oS3s]\u0016d7i\\7nkR\fG/\u001b<f\u001b>tw.\u001b3G_J$V\u000f\u001d7fcY*\"%\"\u0013\u0006V\u0015eSQLC1\u000bK*I'\"\u001c\u0006r\u0015UT\u0011PC?\u000b\u0003+))\"#\u0006\u000e\u0016EECIC&\u000b++I*\"(\u0006\"\u0016\u0015V\u0011VCW\u000bc+),\"/\u0006>\u0016\u0005WQYCe\u000b\u001b,\t\u000e\u0005\u00035k\u00155\u0003cI\u0011\u0006P\u0015MSqKC.\u000b?*\u0019'b\u001a\u0006l\u0015=T1OC<\u000bw*y(b!\u0006\b\u0016-UqR\u0005\u0004\u000b#\u0012#a\u0002+va2,\u0017G\u000e\t\u0004w\u0015UC!B\u001f\u0012\u0005\u0004q\u0004cA\u001e\u0006Z\u0011)1+\u0005b\u0001}A\u00191(\"\u0018\u0005\u000b\u0019\f\"\u0019\u0001 \u0011\u0007m*\t\u0007B\u0003~#\t\u0007a\bE\u0002<\u000bK\"a!!\r\u0012\u0005\u0004q\u0004cA\u001e\u0006j\u00111\u0011qN\tC\u0002y\u00022aOC7\t\u0019\t),\u0005b\u0001}A\u00191(\"\u001d\u0005\r\t\r\u0011C1\u0001?!\rYTQ\u000f\u0003\u0007\u00053\n\"\u0019\u0001 \u0011\u0007m*I\b\u0002\u0004\u00038F\u0011\rA\u0010\t\u0004w\u0015uDABB\u000f#\t\u0007a\bE\u0002<\u000b\u0003#aaa#\u0012\u0005\u0004q\u0004cA\u001e\u0006\u0006\u00121A\u0011A\tC\u0002y\u00022aOCE\t\u0019!y(\u0005b\u0001}A\u00191(\"$\u0005\r\u0015\u0015\u0011C1\u0001?!\rYT\u0011\u0013\u0003\u0007\u000b'\u000b\"\u0019\u0001 \u0003\u0007\u0005\u000bT\u0007\u0003\u0004G#\u0001\u000fQq\u0013\t\u0005iU*\u0019\u0006\u0003\u0004X#\u0001\u000fQ1\u0014\t\u0005iU*9\u0006\u0003\u0004m#\u0001\u000fQq\u0014\t\u0005iU*Y\u0006C\u0004\u0002\fE\u0001\u001d!b)\u0011\tQ*Tq\f\u0005\b\u0003\u000b\n\u00029ACT!\u0011!T'b\u0019\t\u000f\u0005\u001d\u0015\u0003q\u0001\u0006,B!A'NC4\u0011\u001d\t\t.\u0005a\u0002\u000b_\u0003B\u0001N\u001b\u0006l!9!1E\tA\u0004\u0015M\u0006\u0003\u0002\u001b6\u000b_BqA! \u0012\u0001\b)9\f\u0005\u00035k\u0015M\u0004b\u0002Bp#\u0001\u000fQ1\u0018\t\u0005iU*9\bC\u0004\u0004JE\u0001\u001d!b0\u0011\tQ*T1\u0010\u0005\b\u0007w\u000b\u00029ACb!\u0011!T'b \t\u000f\u0011U\u0012\u0003q\u0001\u0006HB!A'NCB\u0011\u001d!9,\u0005a\u0002\u000b\u0017\u0004B\u0001N\u001b\u0006\b\"9Q\u0011I\tA\u0004\u0015=\u0007\u0003\u0002\u001b6\u000b\u0017Cq!b5\u0012\u0001\b)).A\u0002BcU\u0002B\u0001N\u001b\u0006\u0010\u0006)3-\u0019;t\u0017\u0016\u0014h.\u001a7D_6lW\u000f^1uSZ,Wj\u001c8pS\u00124uN\u001d+va2,\u0017gN\u000b%\u000b7,9/b;\u0006p\u0016MXq_C~\u000b\u007f4\u0019Ab\u0002\u0007\f\u0019=a1\u0003D\f\r71yBb\t\u0007(Q!SQ\u001cD\u0016\r_1\u0019Db\u000e\u0007<\u0019}b1\tD$\r\u00172yEb\u0015\u0007X\u0019mcq\fD2\rO2Y\u0007\u0005\u00035k\u0015}\u0007#J\u0011\u0006b\u0016\u0015X\u0011^Cw\u000bc,)0\"?\u0006~\u001a\u0005aQ\u0001D\u0005\r\u001b1\tB\"\u0006\u0007\u001a\u0019ua\u0011\u0005D\u0013\u0013\r)\u0019O\t\u0002\b)V\u0004H.Z\u00198!\rYTq\u001d\u0003\u0006{I\u0011\rA\u0010\t\u0004w\u0015-H!B*\u0013\u0005\u0004q\u0004cA\u001e\u0006p\u0012)aM\u0005b\u0001}A\u00191(b=\u0005\u000bu\u0014\"\u0019\u0001 \u0011\u0007m*9\u0010\u0002\u0004\u00022I\u0011\rA\u0010\t\u0004w\u0015mHABA8%\t\u0007a\bE\u0002<\u000b\u007f$a!!.\u0013\u0005\u0004q\u0004cA\u001e\u0007\u0004\u00111!1\u0001\nC\u0002y\u00022a\u000fD\u0004\t\u0019\u0011IF\u0005b\u0001}A\u00191Hb\u0003\u0005\r\t]&C1\u0001?!\rYdq\u0002\u0003\u0007\u0007;\u0011\"\u0019\u0001 \u0011\u0007m2\u0019\u0002\u0002\u0004\u0004\fJ\u0011\rA\u0010\t\u0004w\u0019]AA\u0002C\u0001%\t\u0007a\bE\u0002<\r7!a\u0001b \u0013\u0005\u0004q\u0004cA\u001e\u0007 \u00111QQ\u0001\nC\u0002y\u00022a\u000fD\u0012\t\u0019)\u0019J\u0005b\u0001}A\u00191Hb\n\u0005\r\u0019%\"C1\u0001?\u0005\r\t\u0015G\u000e\u0005\u0007\rJ\u0001\u001dA\"\f\u0011\tQ*TQ\u001d\u0005\u0007/J\u0001\u001dA\"\r\u0011\tQ*T\u0011\u001e\u0005\u0007YJ\u0001\u001dA\"\u000e\u0011\tQ*TQ\u001e\u0005\b\u0003\u0017\u0011\u00029\u0001D\u001d!\u0011!T'\"=\t\u000f\u0005\u0015#\u0003q\u0001\u0007>A!A'NC{\u0011\u001d\t9I\u0005a\u0002\r\u0003\u0002B\u0001N\u001b\u0006z\"9\u0011\u0011\u001b\nA\u0004\u0019\u0015\u0003\u0003\u0002\u001b6\u000b{DqAa\t\u0013\u0001\b1I\u0005\u0005\u00035k\u0019\u0005\u0001b\u0002B?%\u0001\u000faQ\n\t\u0005iU2)\u0001C\u0004\u0003`J\u0001\u001dA\"\u0015\u0011\tQ*d\u0011\u0002\u0005\b\u0007\u0013\u0012\u00029\u0001D+!\u0011!TG\"\u0004\t\u000f\rm&\u0003q\u0001\u0007ZA!A'\u000eD\t\u0011\u001d!)D\u0005a\u0002\r;\u0002B\u0001N\u001b\u0007\u0016!9Aq\u0017\nA\u0004\u0019\u0005\u0004\u0003\u0002\u001b6\r3Aq!\"\u0011\u0013\u0001\b1)\u0007\u0005\u00035k\u0019u\u0001bBCj%\u0001\u000fa\u0011\u000e\t\u0005iU2\t\u0003C\u0004\u0007nI\u0001\u001dAb\u001c\u0002\u0007\u0005\u000bd\u0007\u0005\u00035k\u0019\u0015\u0012!J2biN\\UM\u001d8fY\u000e{W.\\;uCRLg/Z'p]>LGMR8s)V\u0004H.Z\u00199+\u00192)H\"!\u0007\u0006\u001a%eQ\u0012DI\r+3IJ\"(\u0007\"\u001a\u0015f\u0011\u0016DW\rc3)L\"/\u0007>\u001a\u0005gQ\u0019\u000b'\ro2IM\"4\u0007R\u001aUg\u0011\u001cDo\rC4)O\";\u0007n\u001aEhQ\u001fD}\r{<\ta\"\u0002\b\n\u001d5\u0001\u0003\u0002\u001b6\rs\u0002r%\tD>\r\u007f2\u0019Ib\"\u0007\f\u001a=e1\u0013DL\r73yJb)\u0007(\u001a-fq\u0016DZ\ro3YLb0\u0007D&\u0019aQ\u0010\u0012\u0003\u000fQ+\b\u000f\\32qA\u00191H\"!\u0005\u000bu\u001a\"\u0019\u0001 \u0011\u0007m2)\tB\u0003T'\t\u0007a\bE\u0002<\r\u0013#QAZ\nC\u0002y\u00022a\u000fDG\t\u0015i8C1\u0001?!\rYd\u0011\u0013\u0003\u0007\u0003c\u0019\"\u0019\u0001 \u0011\u0007m2)\n\u0002\u0004\u0002pM\u0011\rA\u0010\t\u0004w\u0019eEABA['\t\u0007a\bE\u0002<\r;#aAa\u0001\u0014\u0005\u0004q\u0004cA\u001e\u0007\"\u00121!\u0011L\nC\u0002y\u00022a\u000fDS\t\u0019\u00119l\u0005b\u0001}A\u00191H\"+\u0005\r\ru1C1\u0001?!\rYdQ\u0016\u0003\u0007\u0007\u0017\u001b\"\u0019\u0001 \u0011\u0007m2\t\f\u0002\u0004\u0005\u0002M\u0011\rA\u0010\t\u0004w\u0019UFA\u0002C@'\t\u0007a\bE\u0002<\rs#a!\"\u0002\u0014\u0005\u0004q\u0004cA\u001e\u0007>\u00121Q1S\nC\u0002y\u00022a\u000fDa\t\u00191Ic\u0005b\u0001}A\u00191H\"2\u0005\r\u0019\u001d7C1\u0001?\u0005\r\t\u0015g\u000e\u0005\u0007\rN\u0001\u001dAb3\u0011\tQ*dq\u0010\u0005\u0007/N\u0001\u001dAb4\u0011\tQ*d1\u0011\u0005\u0007YN\u0001\u001dAb5\u0011\tQ*dq\u0011\u0005\b\u0003\u0017\u0019\u00029\u0001Dl!\u0011!TGb#\t\u000f\u0005\u00153\u0003q\u0001\u0007\\B!A'\u000eDH\u0011\u001d\t9i\u0005a\u0002\r?\u0004B\u0001N\u001b\u0007\u0014\"9\u0011\u0011[\nA\u0004\u0019\r\b\u0003\u0002\u001b6\r/CqAa\t\u0014\u0001\b19\u000f\u0005\u00035k\u0019m\u0005b\u0002B?'\u0001\u000fa1\u001e\t\u0005iU2y\nC\u0004\u0003`N\u0001\u001dAb<\u0011\tQ*d1\u0015\u0005\b\u0007\u0013\u001a\u00029\u0001Dz!\u0011!TGb*\t\u000f\rm6\u0003q\u0001\u0007xB!A'\u000eDV\u0011\u001d!)d\u0005a\u0002\rw\u0004B\u0001N\u001b\u00070\"9AqW\nA\u0004\u0019}\b\u0003\u0002\u001b6\rgCq!\"\u0011\u0014\u0001\b9\u0019\u0001\u0005\u00035k\u0019]\u0006bBCj'\u0001\u000fqq\u0001\t\u0005iU2Y\fC\u0004\u0007nM\u0001\u001dab\u0003\u0011\tQ*dq\u0018\u0005\b\u000f\u001f\u0019\u00029AD\t\u0003\r\t\u0015g\u000e\t\u0005iU2\u0019-A\u0013dCR\u001c8*\u001a:oK2\u001cu.\\7vi\u0006$\u0018N^3N_:|\u0017\u000e\u001a$peR+\b\u000f\\32sUAsqCD\u0012\u000fO9Ycb\f\b4\u001d]r1HD \u000f\u0007:9eb\u0013\bP\u001dMsqKD.\u000f?:\u0019gb\u001a\blQAs\u0011DD8\u000fg:9hb\u001f\b\u0000\u001d\ruqQDF\u000f\u001f;\u0019jb&\b\u001c\u001e}u1UDT\u000fW;ykb-\b8B!A'ND\u000e!%\nsQDD\u0011\u000fK9Ic\"\f\b2\u001dUr\u0011HD\u001f\u000f\u0003:)e\"\u0013\bN\u001dEsQKD-\u000f;:\tg\"\u001a\bj%\u0019qq\u0004\u0012\u0003\u000fQ+\b\u000f\\32sA\u00191hb\t\u0005\u000bu\"\"\u0019\u0001 \u0011\u0007m:9\u0003B\u0003T)\t\u0007a\bE\u0002<\u000fW!QA\u001a\u000bC\u0002y\u00022aOD\u0018\t\u0015iHC1\u0001?!\rYt1\u0007\u0003\u0007\u0003c!\"\u0019\u0001 \u0011\u0007m:9\u0004\u0002\u0004\u0002pQ\u0011\rA\u0010\t\u0004w\u001dmBABA[)\t\u0007a\bE\u0002<\u000f\u007f!aAa\u0001\u0015\u0005\u0004q\u0004cA\u001e\bD\u00111!\u0011\f\u000bC\u0002y\u00022aOD$\t\u0019\u00119\f\u0006b\u0001}A\u00191hb\u0013\u0005\r\ruAC1\u0001?!\rYtq\n\u0003\u0007\u0007\u0017#\"\u0019\u0001 \u0011\u0007m:\u0019\u0006\u0002\u0004\u0005\u0002Q\u0011\rA\u0010\t\u0004w\u001d]CA\u0002C@)\t\u0007a\bE\u0002<\u000f7\"a!\"\u0002\u0015\u0005\u0004q\u0004cA\u001e\b`\u00111Q1\u0013\u000bC\u0002y\u00022aOD2\t\u00191I\u0003\u0006b\u0001}A\u00191hb\u001a\u0005\r\u0019\u001dGC1\u0001?!\rYt1\u000e\u0003\u0007\u000f[\"\"\u0019\u0001 \u0003\u0007\u0005\u000b\u0004\b\u0003\u0004G)\u0001\u000fq\u0011\u000f\t\u0005iU:\t\u0003\u0003\u0004X)\u0001\u000fqQ\u000f\t\u0005iU:)\u0003\u0003\u0004m)\u0001\u000fq\u0011\u0010\t\u0005iU:I\u0003C\u0004\u0002\fQ\u0001\u001da\" \u0011\tQ*tQ\u0006\u0005\b\u0003\u000b\"\u00029ADA!\u0011!Tg\"\r\t\u000f\u0005\u001dE\u0003q\u0001\b\u0006B!A'ND\u001b\u0011\u001d\t\t\u000e\u0006a\u0002\u000f\u0013\u0003B\u0001N\u001b\b:!9!1\u0005\u000bA\u0004\u001d5\u0005\u0003\u0002\u001b6\u000f{AqA! \u0015\u0001\b9\t\n\u0005\u00035k\u001d\u0005\u0003b\u0002Bp)\u0001\u000fqQ\u0013\t\u0005iU:)\u0005C\u0004\u0004JQ\u0001\u001da\"'\u0011\tQ*t\u0011\n\u0005\b\u0007w#\u00029ADO!\u0011!Tg\"\u0014\t\u000f\u0011UB\u0003q\u0001\b\"B!A'ND)\u0011\u001d!9\f\u0006a\u0002\u000fK\u0003B\u0001N\u001b\bV!9Q\u0011\t\u000bA\u0004\u001d%\u0006\u0003\u0002\u001b6\u000f3Bq!b5\u0015\u0001\b9i\u000b\u0005\u00035k\u001du\u0003b\u0002D7)\u0001\u000fq\u0011\u0017\t\u0005iU:\t\u0007C\u0004\b\u0010Q\u0001\u001da\".\u0011\tQ*tQ\r\u0005\b\u000fs#\u00029AD^\u0003\r\t\u0015\u0007\u000f\t\u0005iU:I'A\u0013dCR\u001c8*\u001a:oK2\u001cu.\\7vi\u0006$\u0018N^3N_:|\u0017\u000e\u001a$peR+\b\u000f\\33aUQs\u0011YDg\u000f#<)n\"7\b^\u001e\u0005xQ]Du\u000f[<\tp\">\bz\u001eu\b\u0012\u0001E\u0003\u0011\u0013Ai\u0001#\u0005\t\u0016!eACKDb\u0011;A\t\u0003#\n\t*!5\u0002\u0012\u0007E\u001b\u0011sAi\u0004#\u0011\tF!%\u0003R\nE)\u0011+BI\u0006#\u0018\tb!\u0015\u0004\u0012\u000e\t\u0005iU:)\rE\u0016\"\u000f\u000f<Ymb4\bT\u001e]w1\\Dp\u000fG<9ob;\bp\u001eMxq_D~\u000f\u007fD\u0019\u0001c\u0002\t\f!=\u00012\u0003E\f\u0013\r9IM\t\u0002\b)V\u0004H.\u001a\u001a1!\rYtQ\u001a\u0003\u0006{U\u0011\rA\u0010\t\u0004w\u001dEG!B*\u0016\u0005\u0004q\u0004cA\u001e\bV\u0012)a-\u0006b\u0001}A\u00191h\"7\u0005\u000bu,\"\u0019\u0001 \u0011\u0007m:i\u000e\u0002\u0004\u00022U\u0011\rA\u0010\t\u0004w\u001d\u0005HABA8+\t\u0007a\bE\u0002<\u000fK$a!!.\u0016\u0005\u0004q\u0004cA\u001e\bj\u00121!1A\u000bC\u0002y\u00022aODw\t\u0019\u0011I&\u0006b\u0001}A\u00191h\"=\u0005\r\t]VC1\u0001?!\rYtQ\u001f\u0003\u0007\u0007;)\"\u0019\u0001 \u0011\u0007m:I\u0010\u0002\u0004\u0004\fV\u0011\rA\u0010\t\u0004w\u001duHA\u0002C\u0001+\t\u0007a\bE\u0002<\u0011\u0003!a\u0001b \u0016\u0005\u0004q\u0004cA\u001e\t\u0006\u00111QQA\u000bC\u0002y\u00022a\u000fE\u0005\t\u0019)\u0019*\u0006b\u0001}A\u00191\b#\u0004\u0005\r\u0019%RC1\u0001?!\rY\u0004\u0012\u0003\u0003\u0007\r\u000f,\"\u0019\u0001 \u0011\u0007mB)\u0002\u0002\u0004\bnU\u0011\rA\u0010\t\u0004w!eAA\u0002E\u000e+\t\u0007aHA\u0002BceBaAR\u000bA\u0004!}\u0001\u0003\u0002\u001b6\u000f\u0017DaaV\u000bA\u0004!\r\u0002\u0003\u0002\u001b6\u000f\u001fDa\u0001\\\u000bA\u0004!\u001d\u0002\u0003\u0002\u001b6\u000f'Dq!a\u0003\u0016\u0001\bAY\u0003\u0005\u00035k\u001d]\u0007bBA#+\u0001\u000f\u0001r\u0006\t\u0005iU:Y\u000eC\u0004\u0002\bV\u0001\u001d\u0001c\r\u0011\tQ*tq\u001c\u0005\b\u0003#,\u00029\u0001E\u001c!\u0011!Tgb9\t\u000f\t\rR\u0003q\u0001\t<A!A'NDt\u0011\u001d\u0011i(\u0006a\u0002\u0011\u007f\u0001B\u0001N\u001b\bl\"9!q\\\u000bA\u0004!\r\u0003\u0003\u0002\u001b6\u000f_Dqa!\u0013\u0016\u0001\bA9\u0005\u0005\u00035k\u001dM\bbBB^+\u0001\u000f\u00012\n\t\u0005iU:9\u0010C\u0004\u00056U\u0001\u001d\u0001c\u0014\u0011\tQ*t1 \u0005\b\to+\u00029\u0001E*!\u0011!Tgb@\t\u000f\u0015\u0005S\u0003q\u0001\tXA!A'\u000eE\u0002\u0011\u001d)\u0019.\u0006a\u0002\u00117\u0002B\u0001N\u001b\t\b!9aQN\u000bA\u0004!}\u0003\u0003\u0002\u001b6\u0011\u0017Aqab\u0004\u0016\u0001\bA\u0019\u0007\u0005\u00035k!=\u0001bBD]+\u0001\u000f\u0001r\r\t\u0005iUB\u0019\u0002C\u0004\tlU\u0001\u001d\u0001#\u001c\u0002\u0007\u0005\u000b\u0014\b\u0005\u00035k!]\u0011!J2biN\\UM\u001d8fY\u000e{W.\\;uCRLg/Z'p]>LGMR8s)V\u0004H.\u001a\u001a2+1B\u0019\bc \t\u0004\"\u001d\u00052\u0012EH\u0011'C9\nc'\t \"\r\u0006r\u0015EV\u0011_C\u0019\fc.\t<\"}\u00062\u0019Ed\u0011\u0017Dy\r\u0006\u0017\tv!M\u0007r\u001bEn\u0011?D\u0019\u000fc:\tl\"=\b2\u001fE|\u0011wDy0c\u0001\n\b%-\u0011rBE\n\u0013/IY\"c\b\n$A!A'\u000eE<!5\n\u0003\u0012\u0010E?\u0011\u0003C)\t##\t\u000e\"E\u0005R\u0013EM\u0011;C\t\u000b#*\t*\"5\u0006\u0012\u0017E[\u0011sCi\f#1\tF\"%\u0007RZ\u0005\u0004\u0011w\u0012#a\u0002+va2,''\r\t\u0004w!}D!B\u001f\u0017\u0005\u0004q\u0004cA\u001e\t\u0004\u0012)1K\u0006b\u0001}A\u00191\bc\"\u0005\u000b\u00194\"\u0019\u0001 \u0011\u0007mBY\tB\u0003~-\t\u0007a\bE\u0002<\u0011\u001f#a!!\r\u0017\u0005\u0004q\u0004cA\u001e\t\u0014\u00121\u0011q\u000e\fC\u0002y\u00022a\u000fEL\t\u0019\t)L\u0006b\u0001}A\u00191\bc'\u0005\r\t\raC1\u0001?!\rY\u0004r\u0014\u0003\u0007\u000532\"\u0019\u0001 \u0011\u0007mB\u0019\u000b\u0002\u0004\u00038Z\u0011\rA\u0010\t\u0004w!\u001dFABB\u000f-\t\u0007a\bE\u0002<\u0011W#aaa#\u0017\u0005\u0004q\u0004cA\u001e\t0\u00121A\u0011\u0001\fC\u0002y\u00022a\u000fEZ\t\u0019!yH\u0006b\u0001}A\u00191\bc.\u0005\r\u0015\u0015aC1\u0001?!\rY\u00042\u0018\u0003\u0007\u000b'3\"\u0019\u0001 \u0011\u0007mBy\f\u0002\u0004\u0007*Y\u0011\rA\u0010\t\u0004w!\rGA\u0002Dd-\t\u0007a\bE\u0002<\u0011\u000f$aa\"\u001c\u0017\u0005\u0004q\u0004cA\u001e\tL\u00121\u00012\u0004\fC\u0002y\u00022a\u000fEh\t\u0019A\tN\u0006b\u0001}\t\u0019\u0011I\r\u0019\t\r\u00193\u00029\u0001Ek!\u0011!T\u0007# \t\r]3\u00029\u0001Em!\u0011!T\u0007#!\t\r14\u00029\u0001Eo!\u0011!T\u0007#\"\t\u000f\u0005-a\u0003q\u0001\tbB!A'\u000eEE\u0011\u001d\t)E\u0006a\u0002\u0011K\u0004B\u0001N\u001b\t\u000e\"9\u0011q\u0011\fA\u0004!%\b\u0003\u0002\u001b6\u0011#Cq!!5\u0017\u0001\bAi\u000f\u0005\u00035k!U\u0005b\u0002B\u0012-\u0001\u000f\u0001\u0012\u001f\t\u0005iUBI\nC\u0004\u0003~Y\u0001\u001d\u0001#>\u0011\tQ*\u0004R\u0014\u0005\b\u0005?4\u00029\u0001E}!\u0011!T\u0007#)\t\u000f\r%c\u0003q\u0001\t~B!A'\u000eES\u0011\u001d\u0019YL\u0006a\u0002\u0013\u0003\u0001B\u0001N\u001b\t*\"9AQ\u0007\fA\u0004%\u0015\u0001\u0003\u0002\u001b6\u0011[Cq\u0001b.\u0017\u0001\bII\u0001\u0005\u00035k!E\u0006bBC!-\u0001\u000f\u0011R\u0002\t\u0005iUB)\fC\u0004\u0006TZ\u0001\u001d!#\u0005\u0011\tQ*\u0004\u0012\u0018\u0005\b\r[2\u00029AE\u000b!\u0011!T\u0007#0\t\u000f\u001d=a\u0003q\u0001\n\u001aA!A'\u000eEa\u0011\u001d9IL\u0006a\u0002\u0013;\u0001B\u0001N\u001b\tF\"9\u00012\u000e\fA\u0004%\u0005\u0002\u0003\u0002\u001b6\u0011\u0013Dq!#\n\u0017\u0001\bI9#A\u0002BeA\u0002B\u0001N\u001b\tN\u0006)3-\u0019;t\u0017\u0016\u0014h.\u001a7D_6lW\u000f^1uSZ,Wj\u001c8pS\u00124uN\u001d+va2,'GM\u000b/\u0013[II$#\u0010\nB%\u0015\u0013\u0012JE'\u0013#J)&#\u0017\n^%\u0005\u0014RME5\u0013[J\t(#\u001e\nz%u\u0014\u0012QEC\u0013\u0013Ki\t\u0006\u0018\n0%E\u0015RSEM\u0013;K\t+#*\n*&5\u0016\u0012WE[\u0013sKi,#1\nF&%\u0017RZEi\u0013+LI.#8\nb&\u0015\b\u0003\u0002\u001b6\u0013c\u0001r&IE\u001a\u0013oIY$c\u0010\nD%\u001d\u00132JE(\u0013'J9&c\u0017\n`%\r\u0014rME6\u0013_J\u0019(c\u001e\n|%}\u00142QED\u0013\u0017K1!#\u000e#\u0005\u001d!V\u000f\u001d7feI\u00022aOE\u001d\t\u0015itC1\u0001?!\rY\u0014R\b\u0003\u0006'^\u0011\rA\u0010\t\u0004w%\u0005C!\u00024\u0018\u0005\u0004q\u0004cA\u001e\nF\u0011)Qp\u0006b\u0001}A\u00191(#\u0013\u0005\r\u0005ErC1\u0001?!\rY\u0014R\n\u0003\u0007\u0003_:\"\u0019\u0001 \u0011\u0007mJ\t\u0006\u0002\u0004\u00026^\u0011\rA\u0010\t\u0004w%UCA\u0002B\u0002/\t\u0007a\bE\u0002<\u00133\"aA!\u0017\u0018\u0005\u0004q\u0004cA\u001e\n^\u00111!qW\fC\u0002y\u00022aOE1\t\u0019\u0019ib\u0006b\u0001}A\u00191(#\u001a\u0005\r\r-uC1\u0001?!\rY\u0014\u0012\u000e\u0003\u0007\t\u00039\"\u0019\u0001 \u0011\u0007mJi\u0007\u0002\u0004\u0005\u0000]\u0011\rA\u0010\t\u0004w%EDABC\u0003/\t\u0007a\bE\u0002<\u0013k\"a!b%\u0018\u0005\u0004q\u0004cA\u001e\nz\u00111a\u0011F\fC\u0002y\u00022aOE?\t\u001919m\u0006b\u0001}A\u00191(#!\u0005\r\u001d5tC1\u0001?!\rY\u0014R\u0011\u0003\u0007\u001179\"\u0019\u0001 \u0011\u0007mJI\t\u0002\u0004\tR^\u0011\rA\u0010\t\u0004w%5EABEH/\t\u0007aHA\u0002BeEBaAR\fA\u0004%M\u0005\u0003\u0002\u001b6\u0013oAaaV\fA\u0004%]\u0005\u0003\u0002\u001b6\u0013wAa\u0001\\\fA\u0004%m\u0005\u0003\u0002\u001b6\u0013\u007fAq!a\u0003\u0018\u0001\bIy\n\u0005\u00035k%\r\u0003bBA#/\u0001\u000f\u00112\u0015\t\u0005iUJ9\u0005C\u0004\u0002\b^\u0001\u001d!c*\u0011\tQ*\u00142\n\u0005\b\u0003#<\u00029AEV!\u0011!T'c\u0014\t\u000f\t\rr\u0003q\u0001\n0B!A'NE*\u0011\u001d\u0011ih\u0006a\u0002\u0013g\u0003B\u0001N\u001b\nX!9!q\\\fA\u0004%]\u0006\u0003\u0002\u001b6\u00137Bqa!\u0013\u0018\u0001\bIY\f\u0005\u00035k%}\u0003bBB^/\u0001\u000f\u0011r\u0018\t\u0005iUJ\u0019\u0007C\u0004\u00056]\u0001\u001d!c1\u0011\tQ*\u0014r\r\u0005\b\to;\u00029AEd!\u0011!T'c\u001b\t\u000f\u0015\u0005s\u0003q\u0001\nLB!A'NE8\u0011\u001d)\u0019n\u0006a\u0002\u0013\u001f\u0004B\u0001N\u001b\nt!9aQN\fA\u0004%M\u0007\u0003\u0002\u001b6\u0013oBqab\u0004\u0018\u0001\bI9\u000e\u0005\u00035k%m\u0004bBD]/\u0001\u000f\u00112\u001c\t\u0005iUJy\bC\u0004\tl]\u0001\u001d!c8\u0011\tQ*\u00142\u0011\u0005\b\u0013K9\u00029AEr!\u0011!T'c\"\t\u000f%\u001dx\u0003q\u0001\nj\u0006\u0019\u0011IM\u0019\u0011\tQ*\u00142\u0012"
)
public interface TupleCommutativeMonoidInstances extends TupleSemilatticeInstances {
   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple1$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0) {
      return $this.catsKernelCommutativeMonoidForTuple1(A0);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple1(final CommutativeMonoid A0) {
      return new CommutativeMonoid(A0) {
         private final CommutativeMonoid A0$353;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple1 combine(final Tuple1 x, final Tuple1 y) {
            return new Tuple1(this.A0$353.combine(x._1(), y._1()));
         }

         public Tuple1 empty() {
            return new Tuple1(this.A0$353.empty());
         }

         public {
            this.A0$353 = A0$353;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple2$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1) {
      return $this.catsKernelCommutativeMonoidForTuple2(A0, A1);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple2(final CommutativeMonoid A0, final CommutativeMonoid A1) {
      return new CommutativeMonoid(A0, A1) {
         private final CommutativeMonoid A0$354;
         private final CommutativeMonoid A1$337;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple2 combine(final Tuple2 x, final Tuple2 y) {
            return new Tuple2(this.A0$354.combine(x._1(), y._1()), this.A1$337.combine(x._2(), y._2()));
         }

         public Tuple2 empty() {
            return new Tuple2(this.A0$354.empty(), this.A1$337.empty());
         }

         public {
            this.A0$354 = A0$354;
            this.A1$337 = A1$337;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple3$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2) {
      return $this.catsKernelCommutativeMonoidForTuple3(A0, A1, A2);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple3(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2) {
      return new CommutativeMonoid(A0, A1, A2) {
         private final CommutativeMonoid A0$355;
         private final CommutativeMonoid A1$338;
         private final CommutativeMonoid A2$321;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple3 combine(final Tuple3 x, final Tuple3 y) {
            return new Tuple3(this.A0$355.combine(x._1(), y._1()), this.A1$338.combine(x._2(), y._2()), this.A2$321.combine(x._3(), y._3()));
         }

         public Tuple3 empty() {
            return new Tuple3(this.A0$355.empty(), this.A1$338.empty(), this.A2$321.empty());
         }

         public {
            this.A0$355 = A0$355;
            this.A1$338 = A1$338;
            this.A2$321 = A2$321;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple4$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3) {
      return $this.catsKernelCommutativeMonoidForTuple4(A0, A1, A2, A3);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple4(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3) {
      return new CommutativeMonoid(A0, A1, A2, A3) {
         private final CommutativeMonoid A0$356;
         private final CommutativeMonoid A1$339;
         private final CommutativeMonoid A2$322;
         private final CommutativeMonoid A3$305;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple4 combine(final Tuple4 x, final Tuple4 y) {
            return new Tuple4(this.A0$356.combine(x._1(), y._1()), this.A1$339.combine(x._2(), y._2()), this.A2$322.combine(x._3(), y._3()), this.A3$305.combine(x._4(), y._4()));
         }

         public Tuple4 empty() {
            return new Tuple4(this.A0$356.empty(), this.A1$339.empty(), this.A2$322.empty(), this.A3$305.empty());
         }

         public {
            this.A0$356 = A0$356;
            this.A1$339 = A1$339;
            this.A2$322 = A2$322;
            this.A3$305 = A3$305;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple5$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4) {
      return $this.catsKernelCommutativeMonoidForTuple5(A0, A1, A2, A3, A4);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple5(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4) {
         private final CommutativeMonoid A0$357;
         private final CommutativeMonoid A1$340;
         private final CommutativeMonoid A2$323;
         private final CommutativeMonoid A3$306;
         private final CommutativeMonoid A4$289;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple5 combine(final Tuple5 x, final Tuple5 y) {
            return new Tuple5(this.A0$357.combine(x._1(), y._1()), this.A1$340.combine(x._2(), y._2()), this.A2$323.combine(x._3(), y._3()), this.A3$306.combine(x._4(), y._4()), this.A4$289.combine(x._5(), y._5()));
         }

         public Tuple5 empty() {
            return new Tuple5(this.A0$357.empty(), this.A1$340.empty(), this.A2$323.empty(), this.A3$306.empty(), this.A4$289.empty());
         }

         public {
            this.A0$357 = A0$357;
            this.A1$340 = A1$340;
            this.A2$323 = A2$323;
            this.A3$306 = A3$306;
            this.A4$289 = A4$289;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple6$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5) {
      return $this.catsKernelCommutativeMonoidForTuple6(A0, A1, A2, A3, A4, A5);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple6(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5) {
         private final CommutativeMonoid A0$358;
         private final CommutativeMonoid A1$341;
         private final CommutativeMonoid A2$324;
         private final CommutativeMonoid A3$307;
         private final CommutativeMonoid A4$290;
         private final CommutativeMonoid A5$273;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple6 combine(final Tuple6 x, final Tuple6 y) {
            return new Tuple6(this.A0$358.combine(x._1(), y._1()), this.A1$341.combine(x._2(), y._2()), this.A2$324.combine(x._3(), y._3()), this.A3$307.combine(x._4(), y._4()), this.A4$290.combine(x._5(), y._5()), this.A5$273.combine(x._6(), y._6()));
         }

         public Tuple6 empty() {
            return new Tuple6(this.A0$358.empty(), this.A1$341.empty(), this.A2$324.empty(), this.A3$307.empty(), this.A4$290.empty(), this.A5$273.empty());
         }

         public {
            this.A0$358 = A0$358;
            this.A1$341 = A1$341;
            this.A2$324 = A2$324;
            this.A3$307 = A3$307;
            this.A4$290 = A4$290;
            this.A5$273 = A5$273;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple7$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6) {
      return $this.catsKernelCommutativeMonoidForTuple7(A0, A1, A2, A3, A4, A5, A6);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple7(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6) {
         private final CommutativeMonoid A0$359;
         private final CommutativeMonoid A1$342;
         private final CommutativeMonoid A2$325;
         private final CommutativeMonoid A3$308;
         private final CommutativeMonoid A4$291;
         private final CommutativeMonoid A5$274;
         private final CommutativeMonoid A6$257;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple7 combine(final Tuple7 x, final Tuple7 y) {
            return new Tuple7(this.A0$359.combine(x._1(), y._1()), this.A1$342.combine(x._2(), y._2()), this.A2$325.combine(x._3(), y._3()), this.A3$308.combine(x._4(), y._4()), this.A4$291.combine(x._5(), y._5()), this.A5$274.combine(x._6(), y._6()), this.A6$257.combine(x._7(), y._7()));
         }

         public Tuple7 empty() {
            return new Tuple7(this.A0$359.empty(), this.A1$342.empty(), this.A2$325.empty(), this.A3$308.empty(), this.A4$291.empty(), this.A5$274.empty(), this.A6$257.empty());
         }

         public {
            this.A0$359 = A0$359;
            this.A1$342 = A1$342;
            this.A2$325 = A2$325;
            this.A3$308 = A3$308;
            this.A4$291 = A4$291;
            this.A5$274 = A5$274;
            this.A6$257 = A6$257;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple8$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7) {
      return $this.catsKernelCommutativeMonoidForTuple8(A0, A1, A2, A3, A4, A5, A6, A7);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple8(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7) {
         private final CommutativeMonoid A0$360;
         private final CommutativeMonoid A1$343;
         private final CommutativeMonoid A2$326;
         private final CommutativeMonoid A3$309;
         private final CommutativeMonoid A4$292;
         private final CommutativeMonoid A5$275;
         private final CommutativeMonoid A6$258;
         private final CommutativeMonoid A7$241;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple8 combine(final Tuple8 x, final Tuple8 y) {
            return new Tuple8(this.A0$360.combine(x._1(), y._1()), this.A1$343.combine(x._2(), y._2()), this.A2$326.combine(x._3(), y._3()), this.A3$309.combine(x._4(), y._4()), this.A4$292.combine(x._5(), y._5()), this.A5$275.combine(x._6(), y._6()), this.A6$258.combine(x._7(), y._7()), this.A7$241.combine(x._8(), y._8()));
         }

         public Tuple8 empty() {
            return new Tuple8(this.A0$360.empty(), this.A1$343.empty(), this.A2$326.empty(), this.A3$309.empty(), this.A4$292.empty(), this.A5$275.empty(), this.A6$258.empty(), this.A7$241.empty());
         }

         public {
            this.A0$360 = A0$360;
            this.A1$343 = A1$343;
            this.A2$326 = A2$326;
            this.A3$309 = A3$309;
            this.A4$292 = A4$292;
            this.A5$275 = A5$275;
            this.A6$258 = A6$258;
            this.A7$241 = A7$241;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple9$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8) {
      return $this.catsKernelCommutativeMonoidForTuple9(A0, A1, A2, A3, A4, A5, A6, A7, A8);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple9(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8) {
         private final CommutativeMonoid A0$361;
         private final CommutativeMonoid A1$344;
         private final CommutativeMonoid A2$327;
         private final CommutativeMonoid A3$310;
         private final CommutativeMonoid A4$293;
         private final CommutativeMonoid A5$276;
         private final CommutativeMonoid A6$259;
         private final CommutativeMonoid A7$242;
         private final CommutativeMonoid A8$225;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple9 combine(final Tuple9 x, final Tuple9 y) {
            return new Tuple9(this.A0$361.combine(x._1(), y._1()), this.A1$344.combine(x._2(), y._2()), this.A2$327.combine(x._3(), y._3()), this.A3$310.combine(x._4(), y._4()), this.A4$293.combine(x._5(), y._5()), this.A5$276.combine(x._6(), y._6()), this.A6$259.combine(x._7(), y._7()), this.A7$242.combine(x._8(), y._8()), this.A8$225.combine(x._9(), y._9()));
         }

         public Tuple9 empty() {
            return new Tuple9(this.A0$361.empty(), this.A1$344.empty(), this.A2$327.empty(), this.A3$310.empty(), this.A4$293.empty(), this.A5$276.empty(), this.A6$259.empty(), this.A7$242.empty(), this.A8$225.empty());
         }

         public {
            this.A0$361 = A0$361;
            this.A1$344 = A1$344;
            this.A2$327 = A2$327;
            this.A3$310 = A3$310;
            this.A4$293 = A4$293;
            this.A5$276 = A5$276;
            this.A6$259 = A6$259;
            this.A7$242 = A7$242;
            this.A8$225 = A8$225;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple10$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9) {
      return $this.catsKernelCommutativeMonoidForTuple10(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple10(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) {
         private final CommutativeMonoid A0$362;
         private final CommutativeMonoid A1$345;
         private final CommutativeMonoid A2$328;
         private final CommutativeMonoid A3$311;
         private final CommutativeMonoid A4$294;
         private final CommutativeMonoid A5$277;
         private final CommutativeMonoid A6$260;
         private final CommutativeMonoid A7$243;
         private final CommutativeMonoid A8$226;
         private final CommutativeMonoid A9$209;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple10 combine(final Tuple10 x, final Tuple10 y) {
            return new Tuple10(this.A0$362.combine(x._1(), y._1()), this.A1$345.combine(x._2(), y._2()), this.A2$328.combine(x._3(), y._3()), this.A3$311.combine(x._4(), y._4()), this.A4$294.combine(x._5(), y._5()), this.A5$277.combine(x._6(), y._6()), this.A6$260.combine(x._7(), y._7()), this.A7$243.combine(x._8(), y._8()), this.A8$226.combine(x._9(), y._9()), this.A9$209.combine(x._10(), y._10()));
         }

         public Tuple10 empty() {
            return new Tuple10(this.A0$362.empty(), this.A1$345.empty(), this.A2$328.empty(), this.A3$311.empty(), this.A4$294.empty(), this.A5$277.empty(), this.A6$260.empty(), this.A7$243.empty(), this.A8$226.empty(), this.A9$209.empty());
         }

         public {
            this.A0$362 = A0$362;
            this.A1$345 = A1$345;
            this.A2$328 = A2$328;
            this.A3$311 = A3$311;
            this.A4$294 = A4$294;
            this.A5$277 = A5$277;
            this.A6$260 = A6$260;
            this.A7$243 = A7$243;
            this.A8$226 = A8$226;
            this.A9$209 = A9$209;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple11$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10) {
      return $this.catsKernelCommutativeMonoidForTuple11(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple11(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) {
         private final CommutativeMonoid A0$363;
         private final CommutativeMonoid A1$346;
         private final CommutativeMonoid A2$329;
         private final CommutativeMonoid A3$312;
         private final CommutativeMonoid A4$295;
         private final CommutativeMonoid A5$278;
         private final CommutativeMonoid A6$261;
         private final CommutativeMonoid A7$244;
         private final CommutativeMonoid A8$227;
         private final CommutativeMonoid A9$210;
         private final CommutativeMonoid A10$193;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple11 combine(final Tuple11 x, final Tuple11 y) {
            return new Tuple11(this.A0$363.combine(x._1(), y._1()), this.A1$346.combine(x._2(), y._2()), this.A2$329.combine(x._3(), y._3()), this.A3$312.combine(x._4(), y._4()), this.A4$295.combine(x._5(), y._5()), this.A5$278.combine(x._6(), y._6()), this.A6$261.combine(x._7(), y._7()), this.A7$244.combine(x._8(), y._8()), this.A8$227.combine(x._9(), y._9()), this.A9$210.combine(x._10(), y._10()), this.A10$193.combine(x._11(), y._11()));
         }

         public Tuple11 empty() {
            return new Tuple11(this.A0$363.empty(), this.A1$346.empty(), this.A2$329.empty(), this.A3$312.empty(), this.A4$295.empty(), this.A5$278.empty(), this.A6$261.empty(), this.A7$244.empty(), this.A8$227.empty(), this.A9$210.empty(), this.A10$193.empty());
         }

         public {
            this.A0$363 = A0$363;
            this.A1$346 = A1$346;
            this.A2$329 = A2$329;
            this.A3$312 = A3$312;
            this.A4$295 = A4$295;
            this.A5$278 = A5$278;
            this.A6$261 = A6$261;
            this.A7$244 = A7$244;
            this.A8$227 = A8$227;
            this.A9$210 = A9$210;
            this.A10$193 = A10$193;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple12$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11) {
      return $this.catsKernelCommutativeMonoidForTuple12(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple12(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) {
         private final CommutativeMonoid A0$364;
         private final CommutativeMonoid A1$347;
         private final CommutativeMonoid A2$330;
         private final CommutativeMonoid A3$313;
         private final CommutativeMonoid A4$296;
         private final CommutativeMonoid A5$279;
         private final CommutativeMonoid A6$262;
         private final CommutativeMonoid A7$245;
         private final CommutativeMonoid A8$228;
         private final CommutativeMonoid A9$211;
         private final CommutativeMonoid A10$194;
         private final CommutativeMonoid A11$177;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple12 combine(final Tuple12 x, final Tuple12 y) {
            return new Tuple12(this.A0$364.combine(x._1(), y._1()), this.A1$347.combine(x._2(), y._2()), this.A2$330.combine(x._3(), y._3()), this.A3$313.combine(x._4(), y._4()), this.A4$296.combine(x._5(), y._5()), this.A5$279.combine(x._6(), y._6()), this.A6$262.combine(x._7(), y._7()), this.A7$245.combine(x._8(), y._8()), this.A8$228.combine(x._9(), y._9()), this.A9$211.combine(x._10(), y._10()), this.A10$194.combine(x._11(), y._11()), this.A11$177.combine(x._12(), y._12()));
         }

         public Tuple12 empty() {
            return new Tuple12(this.A0$364.empty(), this.A1$347.empty(), this.A2$330.empty(), this.A3$313.empty(), this.A4$296.empty(), this.A5$279.empty(), this.A6$262.empty(), this.A7$245.empty(), this.A8$228.empty(), this.A9$211.empty(), this.A10$194.empty(), this.A11$177.empty());
         }

         public {
            this.A0$364 = A0$364;
            this.A1$347 = A1$347;
            this.A2$330 = A2$330;
            this.A3$313 = A3$313;
            this.A4$296 = A4$296;
            this.A5$279 = A5$279;
            this.A6$262 = A6$262;
            this.A7$245 = A7$245;
            this.A8$228 = A8$228;
            this.A9$211 = A9$211;
            this.A10$194 = A10$194;
            this.A11$177 = A11$177;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple13$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12) {
      return $this.catsKernelCommutativeMonoidForTuple13(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple13(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) {
         private final CommutativeMonoid A0$365;
         private final CommutativeMonoid A1$348;
         private final CommutativeMonoid A2$331;
         private final CommutativeMonoid A3$314;
         private final CommutativeMonoid A4$297;
         private final CommutativeMonoid A5$280;
         private final CommutativeMonoid A6$263;
         private final CommutativeMonoid A7$246;
         private final CommutativeMonoid A8$229;
         private final CommutativeMonoid A9$212;
         private final CommutativeMonoid A10$195;
         private final CommutativeMonoid A11$178;
         private final CommutativeMonoid A12$161;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple13 combine(final Tuple13 x, final Tuple13 y) {
            return new Tuple13(this.A0$365.combine(x._1(), y._1()), this.A1$348.combine(x._2(), y._2()), this.A2$331.combine(x._3(), y._3()), this.A3$314.combine(x._4(), y._4()), this.A4$297.combine(x._5(), y._5()), this.A5$280.combine(x._6(), y._6()), this.A6$263.combine(x._7(), y._7()), this.A7$246.combine(x._8(), y._8()), this.A8$229.combine(x._9(), y._9()), this.A9$212.combine(x._10(), y._10()), this.A10$195.combine(x._11(), y._11()), this.A11$178.combine(x._12(), y._12()), this.A12$161.combine(x._13(), y._13()));
         }

         public Tuple13 empty() {
            return new Tuple13(this.A0$365.empty(), this.A1$348.empty(), this.A2$331.empty(), this.A3$314.empty(), this.A4$297.empty(), this.A5$280.empty(), this.A6$263.empty(), this.A7$246.empty(), this.A8$229.empty(), this.A9$212.empty(), this.A10$195.empty(), this.A11$178.empty(), this.A12$161.empty());
         }

         public {
            this.A0$365 = A0$365;
            this.A1$348 = A1$348;
            this.A2$331 = A2$331;
            this.A3$314 = A3$314;
            this.A4$297 = A4$297;
            this.A5$280 = A5$280;
            this.A6$263 = A6$263;
            this.A7$246 = A7$246;
            this.A8$229 = A8$229;
            this.A9$212 = A9$212;
            this.A10$195 = A10$195;
            this.A11$178 = A11$178;
            this.A12$161 = A12$161;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple14$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13) {
      return $this.catsKernelCommutativeMonoidForTuple14(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple14(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) {
         private final CommutativeMonoid A0$366;
         private final CommutativeMonoid A1$349;
         private final CommutativeMonoid A2$332;
         private final CommutativeMonoid A3$315;
         private final CommutativeMonoid A4$298;
         private final CommutativeMonoid A5$281;
         private final CommutativeMonoid A6$264;
         private final CommutativeMonoid A7$247;
         private final CommutativeMonoid A8$230;
         private final CommutativeMonoid A9$213;
         private final CommutativeMonoid A10$196;
         private final CommutativeMonoid A11$179;
         private final CommutativeMonoid A12$162;
         private final CommutativeMonoid A13$145;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple14 combine(final Tuple14 x, final Tuple14 y) {
            return new Tuple14(this.A0$366.combine(x._1(), y._1()), this.A1$349.combine(x._2(), y._2()), this.A2$332.combine(x._3(), y._3()), this.A3$315.combine(x._4(), y._4()), this.A4$298.combine(x._5(), y._5()), this.A5$281.combine(x._6(), y._6()), this.A6$264.combine(x._7(), y._7()), this.A7$247.combine(x._8(), y._8()), this.A8$230.combine(x._9(), y._9()), this.A9$213.combine(x._10(), y._10()), this.A10$196.combine(x._11(), y._11()), this.A11$179.combine(x._12(), y._12()), this.A12$162.combine(x._13(), y._13()), this.A13$145.combine(x._14(), y._14()));
         }

         public Tuple14 empty() {
            return new Tuple14(this.A0$366.empty(), this.A1$349.empty(), this.A2$332.empty(), this.A3$315.empty(), this.A4$298.empty(), this.A5$281.empty(), this.A6$264.empty(), this.A7$247.empty(), this.A8$230.empty(), this.A9$213.empty(), this.A10$196.empty(), this.A11$179.empty(), this.A12$162.empty(), this.A13$145.empty());
         }

         public {
            this.A0$366 = A0$366;
            this.A1$349 = A1$349;
            this.A2$332 = A2$332;
            this.A3$315 = A3$315;
            this.A4$298 = A4$298;
            this.A5$281 = A5$281;
            this.A6$264 = A6$264;
            this.A7$247 = A7$247;
            this.A8$230 = A8$230;
            this.A9$213 = A9$213;
            this.A10$196 = A10$196;
            this.A11$179 = A11$179;
            this.A12$162 = A12$162;
            this.A13$145 = A13$145;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple15$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14) {
      return $this.catsKernelCommutativeMonoidForTuple15(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple15(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) {
         private final CommutativeMonoid A0$367;
         private final CommutativeMonoid A1$350;
         private final CommutativeMonoid A2$333;
         private final CommutativeMonoid A3$316;
         private final CommutativeMonoid A4$299;
         private final CommutativeMonoid A5$282;
         private final CommutativeMonoid A6$265;
         private final CommutativeMonoid A7$248;
         private final CommutativeMonoid A8$231;
         private final CommutativeMonoid A9$214;
         private final CommutativeMonoid A10$197;
         private final CommutativeMonoid A11$180;
         private final CommutativeMonoid A12$163;
         private final CommutativeMonoid A13$146;
         private final CommutativeMonoid A14$129;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple15 combine(final Tuple15 x, final Tuple15 y) {
            return new Tuple15(this.A0$367.combine(x._1(), y._1()), this.A1$350.combine(x._2(), y._2()), this.A2$333.combine(x._3(), y._3()), this.A3$316.combine(x._4(), y._4()), this.A4$299.combine(x._5(), y._5()), this.A5$282.combine(x._6(), y._6()), this.A6$265.combine(x._7(), y._7()), this.A7$248.combine(x._8(), y._8()), this.A8$231.combine(x._9(), y._9()), this.A9$214.combine(x._10(), y._10()), this.A10$197.combine(x._11(), y._11()), this.A11$180.combine(x._12(), y._12()), this.A12$163.combine(x._13(), y._13()), this.A13$146.combine(x._14(), y._14()), this.A14$129.combine(x._15(), y._15()));
         }

         public Tuple15 empty() {
            return new Tuple15(this.A0$367.empty(), this.A1$350.empty(), this.A2$333.empty(), this.A3$316.empty(), this.A4$299.empty(), this.A5$282.empty(), this.A6$265.empty(), this.A7$248.empty(), this.A8$231.empty(), this.A9$214.empty(), this.A10$197.empty(), this.A11$180.empty(), this.A12$163.empty(), this.A13$146.empty(), this.A14$129.empty());
         }

         public {
            this.A0$367 = A0$367;
            this.A1$350 = A1$350;
            this.A2$333 = A2$333;
            this.A3$316 = A3$316;
            this.A4$299 = A4$299;
            this.A5$282 = A5$282;
            this.A6$265 = A6$265;
            this.A7$248 = A7$248;
            this.A8$231 = A8$231;
            this.A9$214 = A9$214;
            this.A10$197 = A10$197;
            this.A11$180 = A11$180;
            this.A12$163 = A12$163;
            this.A13$146 = A13$146;
            this.A14$129 = A14$129;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple16$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15) {
      return $this.catsKernelCommutativeMonoidForTuple16(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple16(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) {
         private final CommutativeMonoid A0$368;
         private final CommutativeMonoid A1$351;
         private final CommutativeMonoid A2$334;
         private final CommutativeMonoid A3$317;
         private final CommutativeMonoid A4$300;
         private final CommutativeMonoid A5$283;
         private final CommutativeMonoid A6$266;
         private final CommutativeMonoid A7$249;
         private final CommutativeMonoid A8$232;
         private final CommutativeMonoid A9$215;
         private final CommutativeMonoid A10$198;
         private final CommutativeMonoid A11$181;
         private final CommutativeMonoid A12$164;
         private final CommutativeMonoid A13$147;
         private final CommutativeMonoid A14$130;
         private final CommutativeMonoid A15$113;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple16 combine(final Tuple16 x, final Tuple16 y) {
            return new Tuple16(this.A0$368.combine(x._1(), y._1()), this.A1$351.combine(x._2(), y._2()), this.A2$334.combine(x._3(), y._3()), this.A3$317.combine(x._4(), y._4()), this.A4$300.combine(x._5(), y._5()), this.A5$283.combine(x._6(), y._6()), this.A6$266.combine(x._7(), y._7()), this.A7$249.combine(x._8(), y._8()), this.A8$232.combine(x._9(), y._9()), this.A9$215.combine(x._10(), y._10()), this.A10$198.combine(x._11(), y._11()), this.A11$181.combine(x._12(), y._12()), this.A12$164.combine(x._13(), y._13()), this.A13$147.combine(x._14(), y._14()), this.A14$130.combine(x._15(), y._15()), this.A15$113.combine(x._16(), y._16()));
         }

         public Tuple16 empty() {
            return new Tuple16(this.A0$368.empty(), this.A1$351.empty(), this.A2$334.empty(), this.A3$317.empty(), this.A4$300.empty(), this.A5$283.empty(), this.A6$266.empty(), this.A7$249.empty(), this.A8$232.empty(), this.A9$215.empty(), this.A10$198.empty(), this.A11$181.empty(), this.A12$164.empty(), this.A13$147.empty(), this.A14$130.empty(), this.A15$113.empty());
         }

         public {
            this.A0$368 = A0$368;
            this.A1$351 = A1$351;
            this.A2$334 = A2$334;
            this.A3$317 = A3$317;
            this.A4$300 = A4$300;
            this.A5$283 = A5$283;
            this.A6$266 = A6$266;
            this.A7$249 = A7$249;
            this.A8$232 = A8$232;
            this.A9$215 = A9$215;
            this.A10$198 = A10$198;
            this.A11$181 = A11$181;
            this.A12$164 = A12$164;
            this.A13$147 = A13$147;
            this.A14$130 = A14$130;
            this.A15$113 = A15$113;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple17$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15, final CommutativeMonoid A16) {
      return $this.catsKernelCommutativeMonoidForTuple17(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple17(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15, final CommutativeMonoid A16) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) {
         private final CommutativeMonoid A0$369;
         private final CommutativeMonoid A1$352;
         private final CommutativeMonoid A2$335;
         private final CommutativeMonoid A3$318;
         private final CommutativeMonoid A4$301;
         private final CommutativeMonoid A5$284;
         private final CommutativeMonoid A6$267;
         private final CommutativeMonoid A7$250;
         private final CommutativeMonoid A8$233;
         private final CommutativeMonoid A9$216;
         private final CommutativeMonoid A10$199;
         private final CommutativeMonoid A11$182;
         private final CommutativeMonoid A12$165;
         private final CommutativeMonoid A13$148;
         private final CommutativeMonoid A14$131;
         private final CommutativeMonoid A15$114;
         private final CommutativeMonoid A16$97;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple17 combine(final Tuple17 x, final Tuple17 y) {
            return new Tuple17(this.A0$369.combine(x._1(), y._1()), this.A1$352.combine(x._2(), y._2()), this.A2$335.combine(x._3(), y._3()), this.A3$318.combine(x._4(), y._4()), this.A4$301.combine(x._5(), y._5()), this.A5$284.combine(x._6(), y._6()), this.A6$267.combine(x._7(), y._7()), this.A7$250.combine(x._8(), y._8()), this.A8$233.combine(x._9(), y._9()), this.A9$216.combine(x._10(), y._10()), this.A10$199.combine(x._11(), y._11()), this.A11$182.combine(x._12(), y._12()), this.A12$165.combine(x._13(), y._13()), this.A13$148.combine(x._14(), y._14()), this.A14$131.combine(x._15(), y._15()), this.A15$114.combine(x._16(), y._16()), this.A16$97.combine(x._17(), y._17()));
         }

         public Tuple17 empty() {
            return new Tuple17(this.A0$369.empty(), this.A1$352.empty(), this.A2$335.empty(), this.A3$318.empty(), this.A4$301.empty(), this.A5$284.empty(), this.A6$267.empty(), this.A7$250.empty(), this.A8$233.empty(), this.A9$216.empty(), this.A10$199.empty(), this.A11$182.empty(), this.A12$165.empty(), this.A13$148.empty(), this.A14$131.empty(), this.A15$114.empty(), this.A16$97.empty());
         }

         public {
            this.A0$369 = A0$369;
            this.A1$352 = A1$352;
            this.A2$335 = A2$335;
            this.A3$318 = A3$318;
            this.A4$301 = A4$301;
            this.A5$284 = A5$284;
            this.A6$267 = A6$267;
            this.A7$250 = A7$250;
            this.A8$233 = A8$233;
            this.A9$216 = A9$216;
            this.A10$199 = A10$199;
            this.A11$182 = A11$182;
            this.A12$165 = A12$165;
            this.A13$148 = A13$148;
            this.A14$131 = A14$131;
            this.A15$114 = A15$114;
            this.A16$97 = A16$97;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple18$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15, final CommutativeMonoid A16, final CommutativeMonoid A17) {
      return $this.catsKernelCommutativeMonoidForTuple18(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple18(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15, final CommutativeMonoid A16, final CommutativeMonoid A17) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) {
         private final CommutativeMonoid A0$370;
         private final CommutativeMonoid A1$353;
         private final CommutativeMonoid A2$336;
         private final CommutativeMonoid A3$319;
         private final CommutativeMonoid A4$302;
         private final CommutativeMonoid A5$285;
         private final CommutativeMonoid A6$268;
         private final CommutativeMonoid A7$251;
         private final CommutativeMonoid A8$234;
         private final CommutativeMonoid A9$217;
         private final CommutativeMonoid A10$200;
         private final CommutativeMonoid A11$183;
         private final CommutativeMonoid A12$166;
         private final CommutativeMonoid A13$149;
         private final CommutativeMonoid A14$132;
         private final CommutativeMonoid A15$115;
         private final CommutativeMonoid A16$98;
         private final CommutativeMonoid A17$81;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple18 combine(final Tuple18 x, final Tuple18 y) {
            return new Tuple18(this.A0$370.combine(x._1(), y._1()), this.A1$353.combine(x._2(), y._2()), this.A2$336.combine(x._3(), y._3()), this.A3$319.combine(x._4(), y._4()), this.A4$302.combine(x._5(), y._5()), this.A5$285.combine(x._6(), y._6()), this.A6$268.combine(x._7(), y._7()), this.A7$251.combine(x._8(), y._8()), this.A8$234.combine(x._9(), y._9()), this.A9$217.combine(x._10(), y._10()), this.A10$200.combine(x._11(), y._11()), this.A11$183.combine(x._12(), y._12()), this.A12$166.combine(x._13(), y._13()), this.A13$149.combine(x._14(), y._14()), this.A14$132.combine(x._15(), y._15()), this.A15$115.combine(x._16(), y._16()), this.A16$98.combine(x._17(), y._17()), this.A17$81.combine(x._18(), y._18()));
         }

         public Tuple18 empty() {
            return new Tuple18(this.A0$370.empty(), this.A1$353.empty(), this.A2$336.empty(), this.A3$319.empty(), this.A4$302.empty(), this.A5$285.empty(), this.A6$268.empty(), this.A7$251.empty(), this.A8$234.empty(), this.A9$217.empty(), this.A10$200.empty(), this.A11$183.empty(), this.A12$166.empty(), this.A13$149.empty(), this.A14$132.empty(), this.A15$115.empty(), this.A16$98.empty(), this.A17$81.empty());
         }

         public {
            this.A0$370 = A0$370;
            this.A1$353 = A1$353;
            this.A2$336 = A2$336;
            this.A3$319 = A3$319;
            this.A4$302 = A4$302;
            this.A5$285 = A5$285;
            this.A6$268 = A6$268;
            this.A7$251 = A7$251;
            this.A8$234 = A8$234;
            this.A9$217 = A9$217;
            this.A10$200 = A10$200;
            this.A11$183 = A11$183;
            this.A12$166 = A12$166;
            this.A13$149 = A13$149;
            this.A14$132 = A14$132;
            this.A15$115 = A15$115;
            this.A16$98 = A16$98;
            this.A17$81 = A17$81;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple19$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15, final CommutativeMonoid A16, final CommutativeMonoid A17, final CommutativeMonoid A18) {
      return $this.catsKernelCommutativeMonoidForTuple19(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple19(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15, final CommutativeMonoid A16, final CommutativeMonoid A17, final CommutativeMonoid A18) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) {
         private final CommutativeMonoid A0$371;
         private final CommutativeMonoid A1$354;
         private final CommutativeMonoid A2$337;
         private final CommutativeMonoid A3$320;
         private final CommutativeMonoid A4$303;
         private final CommutativeMonoid A5$286;
         private final CommutativeMonoid A6$269;
         private final CommutativeMonoid A7$252;
         private final CommutativeMonoid A8$235;
         private final CommutativeMonoid A9$218;
         private final CommutativeMonoid A10$201;
         private final CommutativeMonoid A11$184;
         private final CommutativeMonoid A12$167;
         private final CommutativeMonoid A13$150;
         private final CommutativeMonoid A14$133;
         private final CommutativeMonoid A15$116;
         private final CommutativeMonoid A16$99;
         private final CommutativeMonoid A17$82;
         private final CommutativeMonoid A18$65;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple19 combine(final Tuple19 x, final Tuple19 y) {
            return new Tuple19(this.A0$371.combine(x._1(), y._1()), this.A1$354.combine(x._2(), y._2()), this.A2$337.combine(x._3(), y._3()), this.A3$320.combine(x._4(), y._4()), this.A4$303.combine(x._5(), y._5()), this.A5$286.combine(x._6(), y._6()), this.A6$269.combine(x._7(), y._7()), this.A7$252.combine(x._8(), y._8()), this.A8$235.combine(x._9(), y._9()), this.A9$218.combine(x._10(), y._10()), this.A10$201.combine(x._11(), y._11()), this.A11$184.combine(x._12(), y._12()), this.A12$167.combine(x._13(), y._13()), this.A13$150.combine(x._14(), y._14()), this.A14$133.combine(x._15(), y._15()), this.A15$116.combine(x._16(), y._16()), this.A16$99.combine(x._17(), y._17()), this.A17$82.combine(x._18(), y._18()), this.A18$65.combine(x._19(), y._19()));
         }

         public Tuple19 empty() {
            return new Tuple19(this.A0$371.empty(), this.A1$354.empty(), this.A2$337.empty(), this.A3$320.empty(), this.A4$303.empty(), this.A5$286.empty(), this.A6$269.empty(), this.A7$252.empty(), this.A8$235.empty(), this.A9$218.empty(), this.A10$201.empty(), this.A11$184.empty(), this.A12$167.empty(), this.A13$150.empty(), this.A14$133.empty(), this.A15$116.empty(), this.A16$99.empty(), this.A17$82.empty(), this.A18$65.empty());
         }

         public {
            this.A0$371 = A0$371;
            this.A1$354 = A1$354;
            this.A2$337 = A2$337;
            this.A3$320 = A3$320;
            this.A4$303 = A4$303;
            this.A5$286 = A5$286;
            this.A6$269 = A6$269;
            this.A7$252 = A7$252;
            this.A8$235 = A8$235;
            this.A9$218 = A9$218;
            this.A10$201 = A10$201;
            this.A11$184 = A11$184;
            this.A12$167 = A12$167;
            this.A13$150 = A13$150;
            this.A14$133 = A14$133;
            this.A15$116 = A15$116;
            this.A16$99 = A16$99;
            this.A17$82 = A17$82;
            this.A18$65 = A18$65;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple20$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15, final CommutativeMonoid A16, final CommutativeMonoid A17, final CommutativeMonoid A18, final CommutativeMonoid A19) {
      return $this.catsKernelCommutativeMonoidForTuple20(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple20(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15, final CommutativeMonoid A16, final CommutativeMonoid A17, final CommutativeMonoid A18, final CommutativeMonoid A19) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) {
         private final CommutativeMonoid A0$372;
         private final CommutativeMonoid A1$355;
         private final CommutativeMonoid A2$338;
         private final CommutativeMonoid A3$321;
         private final CommutativeMonoid A4$304;
         private final CommutativeMonoid A5$287;
         private final CommutativeMonoid A6$270;
         private final CommutativeMonoid A7$253;
         private final CommutativeMonoid A8$236;
         private final CommutativeMonoid A9$219;
         private final CommutativeMonoid A10$202;
         private final CommutativeMonoid A11$185;
         private final CommutativeMonoid A12$168;
         private final CommutativeMonoid A13$151;
         private final CommutativeMonoid A14$134;
         private final CommutativeMonoid A15$117;
         private final CommutativeMonoid A16$100;
         private final CommutativeMonoid A17$83;
         private final CommutativeMonoid A18$66;
         private final CommutativeMonoid A19$49;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple20 combine(final Tuple20 x, final Tuple20 y) {
            return new Tuple20(this.A0$372.combine(x._1(), y._1()), this.A1$355.combine(x._2(), y._2()), this.A2$338.combine(x._3(), y._3()), this.A3$321.combine(x._4(), y._4()), this.A4$304.combine(x._5(), y._5()), this.A5$287.combine(x._6(), y._6()), this.A6$270.combine(x._7(), y._7()), this.A7$253.combine(x._8(), y._8()), this.A8$236.combine(x._9(), y._9()), this.A9$219.combine(x._10(), y._10()), this.A10$202.combine(x._11(), y._11()), this.A11$185.combine(x._12(), y._12()), this.A12$168.combine(x._13(), y._13()), this.A13$151.combine(x._14(), y._14()), this.A14$134.combine(x._15(), y._15()), this.A15$117.combine(x._16(), y._16()), this.A16$100.combine(x._17(), y._17()), this.A17$83.combine(x._18(), y._18()), this.A18$66.combine(x._19(), y._19()), this.A19$49.combine(x._20(), y._20()));
         }

         public Tuple20 empty() {
            return new Tuple20(this.A0$372.empty(), this.A1$355.empty(), this.A2$338.empty(), this.A3$321.empty(), this.A4$304.empty(), this.A5$287.empty(), this.A6$270.empty(), this.A7$253.empty(), this.A8$236.empty(), this.A9$219.empty(), this.A10$202.empty(), this.A11$185.empty(), this.A12$168.empty(), this.A13$151.empty(), this.A14$134.empty(), this.A15$117.empty(), this.A16$100.empty(), this.A17$83.empty(), this.A18$66.empty(), this.A19$49.empty());
         }

         public {
            this.A0$372 = A0$372;
            this.A1$355 = A1$355;
            this.A2$338 = A2$338;
            this.A3$321 = A3$321;
            this.A4$304 = A4$304;
            this.A5$287 = A5$287;
            this.A6$270 = A6$270;
            this.A7$253 = A7$253;
            this.A8$236 = A8$236;
            this.A9$219 = A9$219;
            this.A10$202 = A10$202;
            this.A11$185 = A11$185;
            this.A12$168 = A12$168;
            this.A13$151 = A13$151;
            this.A14$134 = A14$134;
            this.A15$117 = A15$117;
            this.A16$100 = A16$100;
            this.A17$83 = A17$83;
            this.A18$66 = A18$66;
            this.A19$49 = A19$49;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple21$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15, final CommutativeMonoid A16, final CommutativeMonoid A17, final CommutativeMonoid A18, final CommutativeMonoid A19, final CommutativeMonoid A20) {
      return $this.catsKernelCommutativeMonoidForTuple21(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple21(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15, final CommutativeMonoid A16, final CommutativeMonoid A17, final CommutativeMonoid A18, final CommutativeMonoid A19, final CommutativeMonoid A20) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) {
         private final CommutativeMonoid A0$373;
         private final CommutativeMonoid A1$356;
         private final CommutativeMonoid A2$339;
         private final CommutativeMonoid A3$322;
         private final CommutativeMonoid A4$305;
         private final CommutativeMonoid A5$288;
         private final CommutativeMonoid A6$271;
         private final CommutativeMonoid A7$254;
         private final CommutativeMonoid A8$237;
         private final CommutativeMonoid A9$220;
         private final CommutativeMonoid A10$203;
         private final CommutativeMonoid A11$186;
         private final CommutativeMonoid A12$169;
         private final CommutativeMonoid A13$152;
         private final CommutativeMonoid A14$135;
         private final CommutativeMonoid A15$118;
         private final CommutativeMonoid A16$101;
         private final CommutativeMonoid A17$84;
         private final CommutativeMonoid A18$67;
         private final CommutativeMonoid A19$50;
         private final CommutativeMonoid A20$33;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple21 combine(final Tuple21 x, final Tuple21 y) {
            return new Tuple21(this.A0$373.combine(x._1(), y._1()), this.A1$356.combine(x._2(), y._2()), this.A2$339.combine(x._3(), y._3()), this.A3$322.combine(x._4(), y._4()), this.A4$305.combine(x._5(), y._5()), this.A5$288.combine(x._6(), y._6()), this.A6$271.combine(x._7(), y._7()), this.A7$254.combine(x._8(), y._8()), this.A8$237.combine(x._9(), y._9()), this.A9$220.combine(x._10(), y._10()), this.A10$203.combine(x._11(), y._11()), this.A11$186.combine(x._12(), y._12()), this.A12$169.combine(x._13(), y._13()), this.A13$152.combine(x._14(), y._14()), this.A14$135.combine(x._15(), y._15()), this.A15$118.combine(x._16(), y._16()), this.A16$101.combine(x._17(), y._17()), this.A17$84.combine(x._18(), y._18()), this.A18$67.combine(x._19(), y._19()), this.A19$50.combine(x._20(), y._20()), this.A20$33.combine(x._21(), y._21()));
         }

         public Tuple21 empty() {
            return new Tuple21(this.A0$373.empty(), this.A1$356.empty(), this.A2$339.empty(), this.A3$322.empty(), this.A4$305.empty(), this.A5$288.empty(), this.A6$271.empty(), this.A7$254.empty(), this.A8$237.empty(), this.A9$220.empty(), this.A10$203.empty(), this.A11$186.empty(), this.A12$169.empty(), this.A13$152.empty(), this.A14$135.empty(), this.A15$118.empty(), this.A16$101.empty(), this.A17$84.empty(), this.A18$67.empty(), this.A19$50.empty(), this.A20$33.empty());
         }

         public {
            this.A0$373 = A0$373;
            this.A1$356 = A1$356;
            this.A2$339 = A2$339;
            this.A3$322 = A3$322;
            this.A4$305 = A4$305;
            this.A5$288 = A5$288;
            this.A6$271 = A6$271;
            this.A7$254 = A7$254;
            this.A8$237 = A8$237;
            this.A9$220 = A9$220;
            this.A10$203 = A10$203;
            this.A11$186 = A11$186;
            this.A12$169 = A12$169;
            this.A13$152 = A13$152;
            this.A14$135 = A14$135;
            this.A15$118 = A15$118;
            this.A16$101 = A16$101;
            this.A17$84 = A17$84;
            this.A18$67 = A18$67;
            this.A19$50 = A19$50;
            this.A20$33 = A20$33;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeMonoid catsKernelCommutativeMonoidForTuple22$(final TupleCommutativeMonoidInstances $this, final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15, final CommutativeMonoid A16, final CommutativeMonoid A17, final CommutativeMonoid A18, final CommutativeMonoid A19, final CommutativeMonoid A20, final CommutativeMonoid A21) {
      return $this.catsKernelCommutativeMonoidForTuple22(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21);
   }

   default CommutativeMonoid catsKernelCommutativeMonoidForTuple22(final CommutativeMonoid A0, final CommutativeMonoid A1, final CommutativeMonoid A2, final CommutativeMonoid A3, final CommutativeMonoid A4, final CommutativeMonoid A5, final CommutativeMonoid A6, final CommutativeMonoid A7, final CommutativeMonoid A8, final CommutativeMonoid A9, final CommutativeMonoid A10, final CommutativeMonoid A11, final CommutativeMonoid A12, final CommutativeMonoid A13, final CommutativeMonoid A14, final CommutativeMonoid A15, final CommutativeMonoid A16, final CommutativeMonoid A17, final CommutativeMonoid A18, final CommutativeMonoid A19, final CommutativeMonoid A20, final CommutativeMonoid A21) {
      return new CommutativeMonoid(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) {
         private final CommutativeMonoid A0$374;
         private final CommutativeMonoid A1$357;
         private final CommutativeMonoid A2$340;
         private final CommutativeMonoid A3$323;
         private final CommutativeMonoid A4$306;
         private final CommutativeMonoid A5$289;
         private final CommutativeMonoid A6$272;
         private final CommutativeMonoid A7$255;
         private final CommutativeMonoid A8$238;
         private final CommutativeMonoid A9$221;
         private final CommutativeMonoid A10$204;
         private final CommutativeMonoid A11$187;
         private final CommutativeMonoid A12$170;
         private final CommutativeMonoid A13$153;
         private final CommutativeMonoid A14$136;
         private final CommutativeMonoid A15$119;
         private final CommutativeMonoid A16$102;
         private final CommutativeMonoid A17$85;
         private final CommutativeMonoid A18$68;
         private final CommutativeMonoid A19$51;
         private final CommutativeMonoid A20$34;
         private final CommutativeMonoid A21$17;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineN(final Object a, final int n) {
            return Monoid.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Monoid.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Monoid.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Monoid.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Monoid.combineN$mcJ$sp$(this, a, n);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple22 combine(final Tuple22 x, final Tuple22 y) {
            return new Tuple22(this.A0$374.combine(x._1(), y._1()), this.A1$357.combine(x._2(), y._2()), this.A2$340.combine(x._3(), y._3()), this.A3$323.combine(x._4(), y._4()), this.A4$306.combine(x._5(), y._5()), this.A5$289.combine(x._6(), y._6()), this.A6$272.combine(x._7(), y._7()), this.A7$255.combine(x._8(), y._8()), this.A8$238.combine(x._9(), y._9()), this.A9$221.combine(x._10(), y._10()), this.A10$204.combine(x._11(), y._11()), this.A11$187.combine(x._12(), y._12()), this.A12$170.combine(x._13(), y._13()), this.A13$153.combine(x._14(), y._14()), this.A14$136.combine(x._15(), y._15()), this.A15$119.combine(x._16(), y._16()), this.A16$102.combine(x._17(), y._17()), this.A17$85.combine(x._18(), y._18()), this.A18$68.combine(x._19(), y._19()), this.A19$51.combine(x._20(), y._20()), this.A20$34.combine(x._21(), y._21()), this.A21$17.combine(x._22(), y._22()));
         }

         public Tuple22 empty() {
            return new Tuple22(this.A0$374.empty(), this.A1$357.empty(), this.A2$340.empty(), this.A3$323.empty(), this.A4$306.empty(), this.A5$289.empty(), this.A6$272.empty(), this.A7$255.empty(), this.A8$238.empty(), this.A9$221.empty(), this.A10$204.empty(), this.A11$187.empty(), this.A12$170.empty(), this.A13$153.empty(), this.A14$136.empty(), this.A15$119.empty(), this.A16$102.empty(), this.A17$85.empty(), this.A18$68.empty(), this.A19$51.empty(), this.A20$34.empty(), this.A21$17.empty());
         }

         public {
            this.A0$374 = A0$374;
            this.A1$357 = A1$357;
            this.A2$340 = A2$340;
            this.A3$323 = A3$323;
            this.A4$306 = A4$306;
            this.A5$289 = A5$289;
            this.A6$272 = A6$272;
            this.A7$255 = A7$255;
            this.A8$238 = A8$238;
            this.A9$221 = A9$221;
            this.A10$204 = A10$204;
            this.A11$187 = A11$187;
            this.A12$170 = A12$170;
            this.A13$153 = A13$153;
            this.A14$136 = A14$136;
            this.A15$119 = A15$119;
            this.A16$102 = A16$102;
            this.A17$85 = A17$85;
            this.A18$68 = A18$68;
            this.A19$51 = A19$51;
            this.A20$34 = A20$34;
            this.A21$17 = A21$17;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   static void $init$(final TupleCommutativeMonoidInstances $this) {
   }
}
