package cats.kernel.instances;

import cats.kernel.CommutativeGroup;
import cats.kernel.CommutativeMonoid;
import cats.kernel.CommutativeSemigroup;
import cats.kernel.Eq;
import cats.kernel.Group;
import cats.kernel.Monoid;
import cats.kernel.Semigroup;
import scala.Option;
import scala.Tuple1;
import scala.Tuple10;
import scala.Tuple11;
import scala.Tuple12;
import scala.Tuple13;
import scala.Tuple14;
import scala.Tuple15;
import scala.Tuple16;
import scala.Tuple17;
import scala.Tuple18;
import scala.Tuple19;
import scala.Tuple2;
import scala.Tuple20;
import scala.Tuple21;
import scala.Tuple22;
import scala.Tuple3;
import scala.Tuple4;
import scala.Tuple5;
import scala.Tuple6;
import scala.Tuple7;
import scala.Tuple8;
import scala.Tuple9;
import scala.collection.IterableOnce;
import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u0005%-h\u0001\u0003\r\u001a!\u0003\r\taG\u0010\t\u000b)\u0002A\u0011\u0001\u0017\t\u000bA\u0002A1A\u0019\t\u000b!\u0003A1A%\t\u000be\u0003A1\u0001.\t\u000b9\u0004A1A8\t\u000f\u0005=\u0001\u0001b\u0001\u0002\u0012!9\u0011\u0011\n\u0001\u0005\u0004\u0005-\u0003bBAF\u0001\u0011\r\u0011Q\u0012\u0005\b\u0003+\u0004A1AAl\u0011\u001d\u00119\u0003\u0001C\u0002\u0005SAqA!!\u0001\t\u0007\u0011\u0019\tC\u0004\u0003d\u0002!\u0019A!:\t\u000f\r5\u0003\u0001b\u0001\u0004P!91q\u0018\u0001\u0005\u0004\r\u0005\u0007b\u0002C\u001d\u0001\u0011\rA1\b\u0005\b\tw\u0003A1\u0001C_\u0011\u001d))\u0005\u0001C\u0002\u000b\u000fBq!b6\u0001\t\u0007)I\u000eC\u0004\u0007r\u0001!\u0019Ab\u001d\t\u000f\u001dM\u0001\u0001b\u0001\b\u0016!9qQ\u0018\u0001\u0005\u0004\u001d}\u0006b\u0002E8\u0001\u0011\r\u0001\u0012\u000f\u0005\b\u0013S\u0001A1AE\u0016\u0005y!V\u000f\u001d7f\u0007>lW.\u001e;bi&4Xm\u0012:pkBLen\u001d;b]\u000e,7O\u0003\u0002\u001b7\u0005I\u0011N\\:uC:\u001cWm\u001d\u0006\u00039u\taa[3s]\u0016d'\"\u0001\u0010\u0002\t\r\fGo]\n\u0004\u0001\u00012\u0003CA\u0011%\u001b\u0005\u0011#\"A\u0012\u0002\u000bM\u001c\u0017\r\\1\n\u0005\u0015\u0012#AB!osJ+g\r\u0005\u0002(Q5\t\u0011$\u0003\u0002*3\t\u0001C+\u001e9mK\n{WO\u001c3fIN+W.\u001b7biRL7-Z%ogR\fgnY3t\u0003\u0019!\u0013N\\5uI\r\u0001A#A\u0017\u0011\u0005\u0005r\u0013BA\u0018#\u0005\u0011)f.\u001b;\u0002G\r\fGo]&fe:,GnQ8n[V$\u0018\r^5wK\u001e\u0013x.\u001e9G_J$V\u000f\u001d7fcU\u0011!\u0007\u0010\u000b\u0003g\u0015\u00032\u0001N\u001b8\u001b\u0005Y\u0012B\u0001\u001c\u001c\u0005A\u0019u.\\7vi\u0006$\u0018N^3He>,\b\u000fE\u0002\"qiJ!!\u000f\u0012\u0003\rQ+\b\u000f\\32!\tYD\b\u0004\u0001\u0005\u000bu\u0012!\u0019\u0001 \u0003\u0005\u0005\u0003\u0014CA C!\t\t\u0003)\u0003\u0002BE\t9aj\u001c;iS:<\u0007CA\u0011D\u0013\t!%EA\u0002B]fDQA\u0012\u0002A\u0004\u001d\u000b!!\u0011\u0019\u0011\u0007Q*$(A\u0012dCR\u001c8*\u001a:oK2\u001cu.\\7vi\u0006$\u0018N^3He>,\bOR8s)V\u0004H.\u001a\u001a\u0016\u0007)\u0003&\u000bF\u0002L)Z\u00032\u0001N\u001bM!\u0011\tSjT)\n\u00059\u0013#A\u0002+va2,'\u0007\u0005\u0002<!\u0012)Qh\u0001b\u0001}A\u00111H\u0015\u0003\u0006'\u000e\u0011\rA\u0010\u0002\u0003\u0003FBQAR\u0002A\u0004U\u00032\u0001N\u001bP\u0011\u001596\u0001q\u0001Y\u0003\t\t\u0015\u0007E\u00025kE\u000b1eY1ug.+'O\\3m\u0007>lW.\u001e;bi&4Xm\u0012:pkB4uN\u001d+va2,7'\u0006\u0003\\C\u000e,G\u0003\u0002/hS.\u00042\u0001N\u001b^!\u0015\tc\f\u00192e\u0013\ty&E\u0001\u0004UkBdWm\r\t\u0003w\u0005$Q!\u0010\u0003C\u0002y\u0002\"aO2\u0005\u000bM#!\u0019\u0001 \u0011\u0005m*G!\u00024\u0005\u0005\u0004q$AA!3\u0011\u00151E\u0001q\u0001i!\r!T\u0007\u0019\u0005\u0006/\u0012\u0001\u001dA\u001b\t\u0004iU\u0012\u0007\"\u00027\u0005\u0001\bi\u0017AA!3!\r!T\u0007Z\u0001$G\u0006$8oS3s]\u0016d7i\\7nkR\fG/\u001b<f\u000fJ|W\u000f\u001d$peR+\b\u000f\\35+\u0015\u0001h\u000f\u001f>})!\th0!\u0001\u0002\u0006\u0005%\u0001c\u0001\u001b6eB1\u0011e];xsnL!\u0001\u001e\u0012\u0003\rQ+\b\u000f\\35!\tYd\u000fB\u0003>\u000b\t\u0007a\b\u0005\u0002<q\u0012)1+\u0002b\u0001}A\u00111H\u001f\u0003\u0006M\u0016\u0011\rA\u0010\t\u0003wq$Q!`\u0003C\u0002y\u0012!!Q\u001a\t\u000b\u0019+\u00019A@\u0011\u0007Q*T\u000f\u0003\u0004X\u000b\u0001\u000f\u00111\u0001\t\u0004iU:\bB\u00027\u0006\u0001\b\t9\u0001E\u00025keDq!a\u0003\u0006\u0001\b\ti!\u0001\u0002BgA\u0019A'N>\u0002G\r\fGo]&fe:,GnQ8n[V$\u0018\r^5wK\u001e\u0013x.\u001e9G_J$V\u000f\u001d7fkUa\u00111CA\u0010\u0003G\t9#a\u000b\u00020Qa\u0011QCA\u001a\u0003o\tY$a\u0010\u0002DA!A'NA\f!5\t\u0013\u0011DA\u000f\u0003C\t)#!\u000b\u0002.%\u0019\u00111\u0004\u0012\u0003\rQ+\b\u000f\\36!\rY\u0014q\u0004\u0003\u0006{\u0019\u0011\rA\u0010\t\u0004w\u0005\rB!B*\u0007\u0005\u0004q\u0004cA\u001e\u0002(\u0011)aM\u0002b\u0001}A\u00191(a\u000b\u0005\u000bu4!\u0019\u0001 \u0011\u0007m\ny\u0003\u0002\u0004\u00022\u0019\u0011\rA\u0010\u0002\u0003\u0003RBaA\u0012\u0004A\u0004\u0005U\u0002\u0003\u0002\u001b6\u0003;Aaa\u0016\u0004A\u0004\u0005e\u0002\u0003\u0002\u001b6\u0003CAa\u0001\u001c\u0004A\u0004\u0005u\u0002\u0003\u0002\u001b6\u0003KAq!a\u0003\u0007\u0001\b\t\t\u0005\u0005\u00035k\u0005%\u0002bBA#\r\u0001\u000f\u0011qI\u0001\u0003\u0003R\u0002B\u0001N\u001b\u0002.\u0005\u00193-\u0019;t\u0017\u0016\u0014h.\u001a7D_6lW\u000f^1uSZ,wI]8va\u001a{'\u000fV;qY\u00164TCDA'\u00033\ni&!\u0019\u0002f\u0005%\u0014Q\u000e\u000b\u000f\u0003\u001f\n\t(!\u001e\u0002z\u0005u\u0014\u0011QAC!\u0011!T'!\u0015\u0011\u001f\u0005\n\u0019&a\u0016\u0002\\\u0005}\u00131MA4\u0003WJ1!!\u0016#\u0005\u0019!V\u000f\u001d7fmA\u00191(!\u0017\u0005\u000bu:!\u0019\u0001 \u0011\u0007m\ni\u0006B\u0003T\u000f\t\u0007a\bE\u0002<\u0003C\"QAZ\u0004C\u0002y\u00022aOA3\t\u0015ixA1\u0001?!\rY\u0014\u0011\u000e\u0003\u0007\u0003c9!\u0019\u0001 \u0011\u0007m\ni\u0007\u0002\u0004\u0002p\u001d\u0011\rA\u0010\u0002\u0003\u0003VBaAR\u0004A\u0004\u0005M\u0004\u0003\u0002\u001b6\u0003/BaaV\u0004A\u0004\u0005]\u0004\u0003\u0002\u001b6\u00037Ba\u0001\\\u0004A\u0004\u0005m\u0004\u0003\u0002\u001b6\u0003?Bq!a\u0003\b\u0001\b\ty\b\u0005\u00035k\u0005\r\u0004bBA#\u000f\u0001\u000f\u00111\u0011\t\u0005iU\n9\u0007C\u0004\u0002\b\u001e\u0001\u001d!!#\u0002\u0005\u0005+\u0004\u0003\u0002\u001b6\u0003W\n1eY1ug.+'O\\3m\u0007>lW.\u001e;bi&4Xm\u0012:pkB4uN\u001d+va2,w'\u0006\t\u0002\u0010\u0006m\u0015qTAR\u0003O\u000bY+a,\u00024R\u0001\u0012\u0011SA\\\u0003w\u000by,a1\u0002H\u0006-\u0017q\u001a\t\u0005iU\n\u0019\nE\t\"\u0003+\u000bI*!(\u0002\"\u0006\u0015\u0016\u0011VAW\u0003cK1!a&#\u0005\u0019!V\u000f\u001d7foA\u00191(a'\u0005\u000buB!\u0019\u0001 \u0011\u0007m\ny\nB\u0003T\u0011\t\u0007a\bE\u0002<\u0003G#QA\u001a\u0005C\u0002y\u00022aOAT\t\u0015i\bB1\u0001?!\rY\u00141\u0016\u0003\u0007\u0003cA!\u0019\u0001 \u0011\u0007m\ny\u000b\u0002\u0004\u0002p!\u0011\rA\u0010\t\u0004w\u0005MFABA[\u0011\t\u0007aH\u0001\u0002Bm!1a\t\u0003a\u0002\u0003s\u0003B\u0001N\u001b\u0002\u001a\"1q\u000b\u0003a\u0002\u0003{\u0003B\u0001N\u001b\u0002\u001e\"1A\u000e\u0003a\u0002\u0003\u0003\u0004B\u0001N\u001b\u0002\"\"9\u00111\u0002\u0005A\u0004\u0005\u0015\u0007\u0003\u0002\u001b6\u0003KCq!!\u0012\t\u0001\b\tI\r\u0005\u00035k\u0005%\u0006bBAD\u0011\u0001\u000f\u0011Q\u001a\t\u0005iU\ni\u000bC\u0004\u0002R\"\u0001\u001d!a5\u0002\u0005\u00053\u0004\u0003\u0002\u001b6\u0003c\u000b1eY1ug.+'O\\3m\u0007>lW.\u001e;bi&4Xm\u0012:pkB4uN\u001d+va2,\u0007(\u0006\n\u0002Z\u0006\u0015\u0018\u0011^Aw\u0003c\f)0!?\u0002~\n\u0005ACEAn\u0005\u000b\u0011IA!\u0004\u0003\u0012\tU!\u0011\u0004B\u000f\u0005C\u0001B\u0001N\u001b\u0002^B\u0019\u0012%a8\u0002d\u0006\u001d\u00181^Ax\u0003g\f90a?\u0002\u0000&\u0019\u0011\u0011\u001d\u0012\u0003\rQ+\b\u000f\\39!\rY\u0014Q\u001d\u0003\u0006{%\u0011\rA\u0010\t\u0004w\u0005%H!B*\n\u0005\u0004q\u0004cA\u001e\u0002n\u0012)a-\u0003b\u0001}A\u00191(!=\u0005\u000buL!\u0019\u0001 \u0011\u0007m\n)\u0010\u0002\u0004\u00022%\u0011\rA\u0010\t\u0004w\u0005eHABA8\u0013\t\u0007a\bE\u0002<\u0003{$a!!.\n\u0005\u0004q\u0004cA\u001e\u0003\u0002\u00111!1A\u0005C\u0002y\u0012!!Q\u001c\t\r\u0019K\u00019\u0001B\u0004!\u0011!T'a9\t\r]K\u00019\u0001B\u0006!\u0011!T'a:\t\r1L\u00019\u0001B\b!\u0011!T'a;\t\u000f\u0005-\u0011\u0002q\u0001\u0003\u0014A!A'NAx\u0011\u001d\t)%\u0003a\u0002\u0005/\u0001B\u0001N\u001b\u0002t\"9\u0011qQ\u0005A\u0004\tm\u0001\u0003\u0002\u001b6\u0003oDq!!5\n\u0001\b\u0011y\u0002\u0005\u00035k\u0005m\bb\u0002B\u0012\u0013\u0001\u000f!QE\u0001\u0003\u0003^\u0002B\u0001N\u001b\u0002\u0000\u0006\u00193-\u0019;t\u0017\u0016\u0014h.\u001a7D_6lW\u000f^1uSZ,wI]8va\u001a{'\u000fV;qY\u0016LT\u0003\u0006B\u0016\u0005o\u0011YDa\u0010\u0003D\t\u001d#1\nB(\u0005'\u00129\u0006\u0006\u000b\u0003.\tm#q\fB2\u0005O\u0012YGa\u001c\u0003t\t]$1\u0010\t\u0005iU\u0012y\u0003E\u000b\"\u0005c\u0011)D!\u000f\u0003>\t\u0005#Q\tB%\u0005\u001b\u0012\tF!\u0016\n\u0007\tM\"E\u0001\u0004UkBdW-\u000f\t\u0004w\t]B!B\u001f\u000b\u0005\u0004q\u0004cA\u001e\u0003<\u0011)1K\u0003b\u0001}A\u00191Ha\u0010\u0005\u000b\u0019T!\u0019\u0001 \u0011\u0007m\u0012\u0019\u0005B\u0003~\u0015\t\u0007a\bE\u0002<\u0005\u000f\"a!!\r\u000b\u0005\u0004q\u0004cA\u001e\u0003L\u00111\u0011q\u000e\u0006C\u0002y\u00022a\u000fB(\t\u0019\t)L\u0003b\u0001}A\u00191Ha\u0015\u0005\r\t\r!B1\u0001?!\rY$q\u000b\u0003\u0007\u00053R!\u0019\u0001 \u0003\u0005\u0005C\u0004B\u0002$\u000b\u0001\b\u0011i\u0006\u0005\u00035k\tU\u0002BB,\u000b\u0001\b\u0011\t\u0007\u0005\u00035k\te\u0002B\u00027\u000b\u0001\b\u0011)\u0007\u0005\u00035k\tu\u0002bBA\u0006\u0015\u0001\u000f!\u0011\u000e\t\u0005iU\u0012\t\u0005C\u0004\u0002F)\u0001\u001dA!\u001c\u0011\tQ*$Q\t\u0005\b\u0003\u000fS\u00019\u0001B9!\u0011!TG!\u0013\t\u000f\u0005E'\u0002q\u0001\u0003vA!A'\u000eB'\u0011\u001d\u0011\u0019C\u0003a\u0002\u0005s\u0002B\u0001N\u001b\u0003R!9!Q\u0010\u0006A\u0004\t}\u0014AA!9!\u0011!TG!\u0016\u0002I\r\fGo]&fe:,GnQ8n[V$\u0018\r^5wK\u001e\u0013x.\u001e9G_J$V\u000f\u001d7fcA*bC!\"\u0003\u0012\nU%\u0011\u0014BO\u0005C\u0013)K!+\u0003.\nE&Q\u0017\u000b\u0017\u0005\u000f\u0013IL!0\u0003B\n\u0015'\u0011\u001aBg\u0005#\u0014)N!7\u0003^B!A'\u000eBE!]\t#1\u0012BH\u0005'\u00139Ja'\u0003 \n\r&q\u0015BV\u0005_\u0013\u0019,C\u0002\u0003\u000e\n\u0012q\u0001V;qY\u0016\f\u0004\u0007E\u0002<\u0005##Q!P\u0006C\u0002y\u00022a\u000fBK\t\u0015\u00196B1\u0001?!\rY$\u0011\u0014\u0003\u0006M.\u0011\rA\u0010\t\u0004w\tuE!B?\f\u0005\u0004q\u0004cA\u001e\u0003\"\u00121\u0011\u0011G\u0006C\u0002y\u00022a\u000fBS\t\u0019\tyg\u0003b\u0001}A\u00191H!+\u0005\r\u0005U6B1\u0001?!\rY$Q\u0016\u0003\u0007\u0005\u0007Y!\u0019\u0001 \u0011\u0007m\u0012\t\f\u0002\u0004\u0003Z-\u0011\rA\u0010\t\u0004w\tUFA\u0002B\\\u0017\t\u0007aH\u0001\u0002Bs!1ai\u0003a\u0002\u0005w\u0003B\u0001N\u001b\u0003\u0010\"1qk\u0003a\u0002\u0005\u007f\u0003B\u0001N\u001b\u0003\u0014\"1An\u0003a\u0002\u0005\u0007\u0004B\u0001N\u001b\u0003\u0018\"9\u00111B\u0006A\u0004\t\u001d\u0007\u0003\u0002\u001b6\u00057Cq!!\u0012\f\u0001\b\u0011Y\r\u0005\u00035k\t}\u0005bBAD\u0017\u0001\u000f!q\u001a\t\u0005iU\u0012\u0019\u000bC\u0004\u0002R.\u0001\u001dAa5\u0011\tQ*$q\u0015\u0005\b\u0005GY\u00019\u0001Bl!\u0011!TGa+\t\u000f\tu4\u0002q\u0001\u0003\\B!A'\u000eBX\u0011\u001d\u0011yn\u0003a\u0002\u0005C\f!!Q\u001d\u0011\tQ*$1W\u0001%G\u0006$8oS3s]\u0016d7i\\7nkR\fG/\u001b<f\u000fJ|W\u000f\u001d$peR+\b\u000f\\32cUA\"q\u001dBz\u0005o\u0014YPa@\u0004\u0004\r\u001d11BB\b\u0007'\u00199ba\u0007\u00151\t%8qDB\u0012\u0007O\u0019Yca\f\u00044\r]21HB \u0007\u0007\u001a9\u0005\u0005\u00035k\t-\b#G\u0011\u0003n\nE(Q\u001fB}\u0005{\u001c\ta!\u0002\u0004\n\r51\u0011CB\u000b\u00073I1Aa<#\u0005\u001d!V\u000f\u001d7fcE\u00022a\u000fBz\t\u0015iDB1\u0001?!\rY$q\u001f\u0003\u0006'2\u0011\rA\u0010\t\u0004w\tmH!\u00024\r\u0005\u0004q\u0004cA\u001e\u0003\u0000\u0012)Q\u0010\u0004b\u0001}A\u00191ha\u0001\u0005\r\u0005EBB1\u0001?!\rY4q\u0001\u0003\u0007\u0003_b!\u0019\u0001 \u0011\u0007m\u001aY\u0001\u0002\u0004\u000262\u0011\rA\u0010\t\u0004w\r=AA\u0002B\u0002\u0019\t\u0007a\bE\u0002<\u0007'!aA!\u0017\r\u0005\u0004q\u0004cA\u001e\u0004\u0018\u00111!q\u0017\u0007C\u0002y\u00022aOB\u000e\t\u0019\u0019i\u0002\u0004b\u0001}\t\u0019\u0011)\r\u0019\t\r\u0019c\u00019AB\u0011!\u0011!TG!=\t\r]c\u00019AB\u0013!\u0011!TG!>\t\r1d\u00019AB\u0015!\u0011!TG!?\t\u000f\u0005-A\u0002q\u0001\u0004.A!A'\u000eB\u007f\u0011\u001d\t)\u0005\u0004a\u0002\u0007c\u0001B\u0001N\u001b\u0004\u0002!9\u0011q\u0011\u0007A\u0004\rU\u0002\u0003\u0002\u001b6\u0007\u000bAq!!5\r\u0001\b\u0019I\u0004\u0005\u00035k\r%\u0001b\u0002B\u0012\u0019\u0001\u000f1Q\b\t\u0005iU\u001ai\u0001C\u0004\u0003~1\u0001\u001da!\u0011\u0011\tQ*4\u0011\u0003\u0005\b\u0005?d\u00019AB#!\u0011!Tg!\u0006\t\u000f\r%C\u0002q\u0001\u0004L\u0005\u0019\u0011)\r\u0019\u0011\tQ*4\u0011D\u0001%G\u0006$8oS3s]\u0016d7i\\7nkR\fG/\u001b<f\u000fJ|W\u000f\u001d$peR+\b\u000f\\32eUQ2\u0011KB/\u0007C\u001a)g!\u001b\u0004n\rE4QOB=\u0007{\u001a\ti!\"\u0004\nRQ21KBG\u0007#\u001b)j!'\u0004\u001e\u000e\u00056QUBU\u0007[\u001b\tl!.\u0004:B!A'NB+!m\t3qKB.\u0007?\u001a\u0019ga\u001a\u0004l\r=41OB<\u0007w\u001ayha!\u0004\b&\u00191\u0011\f\u0012\u0003\u000fQ+\b\u000f\\32eA\u00191h!\u0018\u0005\u000buj!\u0019\u0001 \u0011\u0007m\u001a\t\u0007B\u0003T\u001b\t\u0007a\bE\u0002<\u0007K\"QAZ\u0007C\u0002y\u00022aOB5\t\u0015iXB1\u0001?!\rY4Q\u000e\u0003\u0007\u0003ci!\u0019\u0001 \u0011\u0007m\u001a\t\b\u0002\u0004\u0002p5\u0011\rA\u0010\t\u0004w\rUDABA[\u001b\t\u0007a\bE\u0002<\u0007s\"aAa\u0001\u000e\u0005\u0004q\u0004cA\u001e\u0004~\u00111!\u0011L\u0007C\u0002y\u00022aOBA\t\u0019\u00119,\u0004b\u0001}A\u00191h!\"\u0005\r\ruQB1\u0001?!\rY4\u0011\u0012\u0003\u0007\u0007\u0017k!\u0019\u0001 \u0003\u0007\u0005\u000b\u0014\u0007\u0003\u0004G\u001b\u0001\u000f1q\u0012\t\u0005iU\u001aY\u0006\u0003\u0004X\u001b\u0001\u000f11\u0013\t\u0005iU\u001ay\u0006\u0003\u0004m\u001b\u0001\u000f1q\u0013\t\u0005iU\u001a\u0019\u0007C\u0004\u0002\f5\u0001\u001daa'\u0011\tQ*4q\r\u0005\b\u0003\u000bj\u00019ABP!\u0011!Tga\u001b\t\u000f\u0005\u001dU\u0002q\u0001\u0004$B!A'NB8\u0011\u001d\t\t.\u0004a\u0002\u0007O\u0003B\u0001N\u001b\u0004t!9!1E\u0007A\u0004\r-\u0006\u0003\u0002\u001b6\u0007oBqA! \u000e\u0001\b\u0019y\u000b\u0005\u00035k\rm\u0004b\u0002Bp\u001b\u0001\u000f11\u0017\t\u0005iU\u001ay\bC\u0004\u0004J5\u0001\u001daa.\u0011\tQ*41\u0011\u0005\b\u0007wk\u00019AB_\u0003\r\t\u0015'\r\t\u0005iU\u001a9)\u0001\u0013dCR\u001c8*\u001a:oK2\u001cu.\\7vi\u0006$\u0018N^3He>,\bOR8s)V\u0004H.Z\u00194+q\u0019\u0019ma4\u0004T\u000e]71\\Bp\u0007G\u001c9oa;\u0004p\u000eM8q_B~\u0007\u007f$Bd!2\u0005\u0004\u0011\u001dA1\u0002C\b\t'!9\u0002b\u0007\u0005 \u0011\rBq\u0005C\u0016\t_!\u0019\u0004\u0005\u00035k\r\u001d\u0007#H\u0011\u0004J\u000e57\u0011[Bk\u00073\u001cin!9\u0004f\u000e%8Q^By\u0007k\u001cIp!@\n\u0007\r-'EA\u0004UkBdW-M\u001a\u0011\u0007m\u001ay\rB\u0003>\u001d\t\u0007a\bE\u0002<\u0007'$Qa\u0015\bC\u0002y\u00022aOBl\t\u00151gB1\u0001?!\rY41\u001c\u0003\u0006{:\u0011\rA\u0010\t\u0004w\r}GABA\u0019\u001d\t\u0007a\bE\u0002<\u0007G$a!a\u001c\u000f\u0005\u0004q\u0004cA\u001e\u0004h\u00121\u0011Q\u0017\bC\u0002y\u00022aOBv\t\u0019\u0011\u0019A\u0004b\u0001}A\u00191ha<\u0005\r\tecB1\u0001?!\rY41\u001f\u0003\u0007\u0005os!\u0019\u0001 \u0011\u0007m\u001a9\u0010\u0002\u0004\u0004\u001e9\u0011\rA\u0010\t\u0004w\rmHABBF\u001d\t\u0007a\bE\u0002<\u0007\u007f$a\u0001\"\u0001\u000f\u0005\u0004q$aA!2e!1aI\u0004a\u0002\t\u000b\u0001B\u0001N\u001b\u0004N\"1qK\u0004a\u0002\t\u0013\u0001B\u0001N\u001b\u0004R\"1AN\u0004a\u0002\t\u001b\u0001B\u0001N\u001b\u0004V\"9\u00111\u0002\bA\u0004\u0011E\u0001\u0003\u0002\u001b6\u00073Dq!!\u0012\u000f\u0001\b!)\u0002\u0005\u00035k\ru\u0007bBAD\u001d\u0001\u000fA\u0011\u0004\t\u0005iU\u001a\t\u000fC\u0004\u0002R:\u0001\u001d\u0001\"\b\u0011\tQ*4Q\u001d\u0005\b\u0005Gq\u00019\u0001C\u0011!\u0011!Tg!;\t\u000f\tud\u0002q\u0001\u0005&A!A'NBw\u0011\u001d\u0011yN\u0004a\u0002\tS\u0001B\u0001N\u001b\u0004r\"91\u0011\n\bA\u0004\u00115\u0002\u0003\u0002\u001b6\u0007kDqaa/\u000f\u0001\b!\t\u0004\u0005\u00035k\re\bb\u0002C\u001b\u001d\u0001\u000fAqG\u0001\u0004\u0003F\u0012\u0004\u0003\u0002\u001b6\u0007{\fAeY1ug.+'O\\3m\u0007>lW.\u001e;bi&4Xm\u0012:pkB4uN\u001d+va2,\u0017\u0007N\u000b\u001f\t{!I\u0005\"\u0014\u0005R\u0011UC\u0011\fC/\tC\")\u0007\"\u001b\u0005n\u0011EDQ\u000fC=\t{\"b\u0004b\u0010\u0005\u0002\u0012\u0015E\u0011\u0012CG\t##)\n\"'\u0005\u001e\u0012\u0005FQ\u0015CU\t[#\t\f\".\u0011\tQ*D\u0011\t\t C\u0011\rCq\tC&\t\u001f\"\u0019\u0006b\u0016\u0005\\\u0011}C1\rC4\tW\"y\u0007b\u001d\u0005x\u0011m\u0014b\u0001C#E\t9A+\u001e9mKF\"\u0004cA\u001e\u0005J\u0011)Qh\u0004b\u0001}A\u00191\b\"\u0014\u0005\u000bM{!\u0019\u0001 \u0011\u0007m\"\t\u0006B\u0003g\u001f\t\u0007a\bE\u0002<\t+\"Q!`\bC\u0002y\u00022a\u000fC-\t\u0019\t\td\u0004b\u0001}A\u00191\b\"\u0018\u0005\r\u0005=tB1\u0001?!\rYD\u0011\r\u0003\u0007\u0003k{!\u0019\u0001 \u0011\u0007m\")\u0007\u0002\u0004\u0003\u0004=\u0011\rA\u0010\t\u0004w\u0011%DA\u0002B-\u001f\t\u0007a\bE\u0002<\t[\"aAa.\u0010\u0005\u0004q\u0004cA\u001e\u0005r\u001111QD\bC\u0002y\u00022a\u000fC;\t\u0019\u0019Yi\u0004b\u0001}A\u00191\b\"\u001f\u0005\r\u0011\u0005qB1\u0001?!\rYDQ\u0010\u0003\u0007\t\u007fz!\u0019\u0001 \u0003\u0007\u0005\u000b4\u0007\u0003\u0004G\u001f\u0001\u000fA1\u0011\t\u0005iU\"9\u0005\u0003\u0004X\u001f\u0001\u000fAq\u0011\t\u0005iU\"Y\u0005\u0003\u0004m\u001f\u0001\u000fA1\u0012\t\u0005iU\"y\u0005C\u0004\u0002\f=\u0001\u001d\u0001b$\u0011\tQ*D1\u000b\u0005\b\u0003\u000bz\u00019\u0001CJ!\u0011!T\u0007b\u0016\t\u000f\u0005\u001du\u0002q\u0001\u0005\u0018B!A'\u000eC.\u0011\u001d\t\tn\u0004a\u0002\t7\u0003B\u0001N\u001b\u0005`!9!1E\bA\u0004\u0011}\u0005\u0003\u0002\u001b6\tGBqA! \u0010\u0001\b!\u0019\u000b\u0005\u00035k\u0011\u001d\u0004b\u0002Bp\u001f\u0001\u000fAq\u0015\t\u0005iU\"Y\u0007C\u0004\u0004J=\u0001\u001d\u0001b+\u0011\tQ*Dq\u000e\u0005\b\u0007w{\u00019\u0001CX!\u0011!T\u0007b\u001d\t\u000f\u0011Ur\u0002q\u0001\u00054B!A'\u000eC<\u0011\u001d!9l\u0004a\u0002\ts\u000b1!Q\u00194!\u0011!T\u0007b\u001f\u0002I\r\fGo]&fe:,GnQ8n[V$\u0018\r^5wK\u001e\u0013x.\u001e9G_J$V\u000f\u001d7fcU*\u0002\u0005b0\u0005L\u0012=G1\u001bCl\t7$y\u000eb9\u0005h\u0012-Hq\u001eCz\to$Y\u0010b@\u0006\u0004Q\u0001C\u0011YC\u0004\u000b\u0017)y!b\u0005\u0006\u0018\u0015mQqDC\u0012\u000bO)Y#b\f\u00064\u0015]R1HC !\u0011!T\u0007b1\u0011C\u0005\")\r\"3\u0005N\u0012EGQ\u001bCm\t;$\t\u000f\":\u0005j\u00125H\u0011\u001fC{\ts$i0\"\u0001\n\u0007\u0011\u001d'EA\u0004UkBdW-M\u001b\u0011\u0007m\"Y\rB\u0003>!\t\u0007a\bE\u0002<\t\u001f$Qa\u0015\tC\u0002y\u00022a\u000fCj\t\u00151\u0007C1\u0001?!\rYDq\u001b\u0003\u0006{B\u0011\rA\u0010\t\u0004w\u0011mGABA\u0019!\t\u0007a\bE\u0002<\t?$a!a\u001c\u0011\u0005\u0004q\u0004cA\u001e\u0005d\u00121\u0011Q\u0017\tC\u0002y\u00022a\u000fCt\t\u0019\u0011\u0019\u0001\u0005b\u0001}A\u00191\bb;\u0005\r\te\u0003C1\u0001?!\rYDq\u001e\u0003\u0007\u0005o\u0003\"\u0019\u0001 \u0011\u0007m\"\u0019\u0010\u0002\u0004\u0004\u001eA\u0011\rA\u0010\t\u0004w\u0011]HABBF!\t\u0007a\bE\u0002<\tw$a\u0001\"\u0001\u0011\u0005\u0004q\u0004cA\u001e\u0005\u0000\u00121Aq\u0010\tC\u0002y\u00022aOC\u0002\t\u0019))\u0001\u0005b\u0001}\t\u0019\u0011)\r\u001b\t\r\u0019\u0003\u00029AC\u0005!\u0011!T\u0007\"3\t\r]\u0003\u00029AC\u0007!\u0011!T\u0007\"4\t\r1\u0004\u00029AC\t!\u0011!T\u0007\"5\t\u000f\u0005-\u0001\u0003q\u0001\u0006\u0016A!A'\u000eCk\u0011\u001d\t)\u0005\u0005a\u0002\u000b3\u0001B\u0001N\u001b\u0005Z\"9\u0011q\u0011\tA\u0004\u0015u\u0001\u0003\u0002\u001b6\t;Dq!!5\u0011\u0001\b)\t\u0003\u0005\u00035k\u0011\u0005\bb\u0002B\u0012!\u0001\u000fQQ\u0005\t\u0005iU\")\u000fC\u0004\u0003~A\u0001\u001d!\"\u000b\u0011\tQ*D\u0011\u001e\u0005\b\u0005?\u0004\u00029AC\u0017!\u0011!T\u0007\"<\t\u000f\r%\u0003\u0003q\u0001\u00062A!A'\u000eCy\u0011\u001d\u0019Y\f\u0005a\u0002\u000bk\u0001B\u0001N\u001b\u0005v\"9AQ\u0007\tA\u0004\u0015e\u0002\u0003\u0002\u001b6\tsDq\u0001b.\u0011\u0001\b)i\u0004\u0005\u00035k\u0011u\bbBC!!\u0001\u000fQ1I\u0001\u0004\u0003F\"\u0004\u0003\u0002\u001b6\u000b\u0003\tAeY1ug.+'O\\3m\u0007>lW.\u001e;bi&4Xm\u0012:pkB4uN\u001d+va2,\u0017GN\u000b#\u000b\u0013*)&\"\u0017\u0006^\u0015\u0005TQMC5\u000b[*\t(\"\u001e\u0006z\u0015uT\u0011QCC\u000b\u0013+i)\"%\u0015E\u0015-SQSCM\u000b;+\t+\"*\u0006*\u00165V\u0011WC[\u000bs+i,\"1\u0006F\u0016%WQZCi!\u0011!T'\"\u0014\u0011G\u0005*y%b\u0015\u0006X\u0015mSqLC2\u000bO*Y'b\u001c\u0006t\u0015]T1PC@\u000b\u0007+9)b#\u0006\u0010&\u0019Q\u0011\u000b\u0012\u0003\u000fQ+\b\u000f\\32mA\u00191(\"\u0016\u0005\u000bu\n\"\u0019\u0001 \u0011\u0007m*I\u0006B\u0003T#\t\u0007a\bE\u0002<\u000b;\"QAZ\tC\u0002y\u00022aOC1\t\u0015i\u0018C1\u0001?!\rYTQ\r\u0003\u0007\u0003c\t\"\u0019\u0001 \u0011\u0007m*I\u0007\u0002\u0004\u0002pE\u0011\rA\u0010\t\u0004w\u00155DABA[#\t\u0007a\bE\u0002<\u000bc\"aAa\u0001\u0012\u0005\u0004q\u0004cA\u001e\u0006v\u00111!\u0011L\tC\u0002y\u00022aOC=\t\u0019\u00119,\u0005b\u0001}A\u00191(\" \u0005\r\ru\u0011C1\u0001?!\rYT\u0011\u0011\u0003\u0007\u0007\u0017\u000b\"\u0019\u0001 \u0011\u0007m*)\t\u0002\u0004\u0005\u0002E\u0011\rA\u0010\t\u0004w\u0015%EA\u0002C@#\t\u0007a\bE\u0002<\u000b\u001b#a!\"\u0002\u0012\u0005\u0004q\u0004cA\u001e\u0006\u0012\u00121Q1S\tC\u0002y\u00121!Q\u00196\u0011\u00191\u0015\u0003q\u0001\u0006\u0018B!A'NC*\u0011\u00199\u0016\u0003q\u0001\u0006\u001cB!A'NC,\u0011\u0019a\u0017\u0003q\u0001\u0006 B!A'NC.\u0011\u001d\tY!\u0005a\u0002\u000bG\u0003B\u0001N\u001b\u0006`!9\u0011QI\tA\u0004\u0015\u001d\u0006\u0003\u0002\u001b6\u000bGBq!a\"\u0012\u0001\b)Y\u000b\u0005\u00035k\u0015\u001d\u0004bBAi#\u0001\u000fQq\u0016\t\u0005iU*Y\u0007C\u0004\u0003$E\u0001\u001d!b-\u0011\tQ*Tq\u000e\u0005\b\u0005{\n\u00029AC\\!\u0011!T'b\u001d\t\u000f\t}\u0017\u0003q\u0001\u0006<B!A'NC<\u0011\u001d\u0019I%\u0005a\u0002\u000b\u007f\u0003B\u0001N\u001b\u0006|!911X\tA\u0004\u0015\r\u0007\u0003\u0002\u001b6\u000b\u007fBq\u0001\"\u000e\u0012\u0001\b)9\r\u0005\u00035k\u0015\r\u0005b\u0002C\\#\u0001\u000fQ1\u001a\t\u0005iU*9\tC\u0004\u0006BE\u0001\u001d!b4\u0011\tQ*T1\u0012\u0005\b\u000b'\f\u00029ACk\u0003\r\t\u0015'\u000e\t\u0005iU*y)\u0001\u0013dCR\u001c8*\u001a:oK2\u001cu.\\7vi\u0006$\u0018N^3He>,\bOR8s)V\u0004H.Z\u00198+\u0011*Y.b:\u0006l\u0016=X1_C|\u000bw,yPb\u0001\u0007\b\u0019-aq\u0002D\n\r/1YBb\b\u0007$\u0019\u001dB\u0003JCo\rW1yCb\r\u00078\u0019mbq\bD\"\r\u000f2YEb\u0014\u0007T\u0019]c1\fD0\rG29Gb\u001b\u0011\tQ*Tq\u001c\t&C\u0015\u0005XQ]Cu\u000b[,\t0\">\u0006z\u0016uh\u0011\u0001D\u0003\r\u00131iA\"\u0005\u0007\u0016\u0019eaQ\u0004D\u0011\rKI1!b9#\u0005\u001d!V\u000f\u001d7fc]\u00022aOCt\t\u0015i$C1\u0001?!\rYT1\u001e\u0003\u0006'J\u0011\rA\u0010\t\u0004w\u0015=H!\u00024\u0013\u0005\u0004q\u0004cA\u001e\u0006t\u0012)QP\u0005b\u0001}A\u00191(b>\u0005\r\u0005E\"C1\u0001?!\rYT1 \u0003\u0007\u0003_\u0012\"\u0019\u0001 \u0011\u0007m*y\u0010\u0002\u0004\u00026J\u0011\rA\u0010\t\u0004w\u0019\rAA\u0002B\u0002%\t\u0007a\bE\u0002<\r\u000f!aA!\u0017\u0013\u0005\u0004q\u0004cA\u001e\u0007\f\u00111!q\u0017\nC\u0002y\u00022a\u000fD\b\t\u0019\u0019iB\u0005b\u0001}A\u00191Hb\u0005\u0005\r\r-%C1\u0001?!\rYdq\u0003\u0003\u0007\t\u0003\u0011\"\u0019\u0001 \u0011\u0007m2Y\u0002\u0002\u0004\u0005\u0000I\u0011\rA\u0010\t\u0004w\u0019}AABC\u0003%\t\u0007a\bE\u0002<\rG!a!b%\u0013\u0005\u0004q\u0004cA\u001e\u0007(\u00111a\u0011\u0006\nC\u0002y\u00121!Q\u00197\u0011\u00191%\u0003q\u0001\u0007.A!A'NCs\u0011\u00199&\u0003q\u0001\u00072A!A'NCu\u0011\u0019a'\u0003q\u0001\u00076A!A'NCw\u0011\u001d\tYA\u0005a\u0002\rs\u0001B\u0001N\u001b\u0006r\"9\u0011Q\t\nA\u0004\u0019u\u0002\u0003\u0002\u001b6\u000bkDq!a\"\u0013\u0001\b1\t\u0005\u0005\u00035k\u0015e\bbBAi%\u0001\u000faQ\t\t\u0005iU*i\u0010C\u0004\u0003$I\u0001\u001dA\"\u0013\u0011\tQ*d\u0011\u0001\u0005\b\u0005{\u0012\u00029\u0001D'!\u0011!TG\"\u0002\t\u000f\t}'\u0003q\u0001\u0007RA!A'\u000eD\u0005\u0011\u001d\u0019IE\u0005a\u0002\r+\u0002B\u0001N\u001b\u0007\u000e!911\u0018\nA\u0004\u0019e\u0003\u0003\u0002\u001b6\r#Aq\u0001\"\u000e\u0013\u0001\b1i\u0006\u0005\u00035k\u0019U\u0001b\u0002C\\%\u0001\u000fa\u0011\r\t\u0005iU2I\u0002C\u0004\u0006BI\u0001\u001dA\"\u001a\u0011\tQ*dQ\u0004\u0005\b\u000b'\u0014\u00029\u0001D5!\u0011!TG\"\t\t\u000f\u00195$\u0003q\u0001\u0007p\u0005\u0019\u0011)\r\u001c\u0011\tQ*dQE\u0001%G\u0006$8oS3s]\u0016d7i\\7nkR\fG/\u001b<f\u000fJ|W\u000f\u001d$peR+\b\u000f\\32qU1cQ\u000fDA\r\u000b3II\"$\u0007\u0012\u001aUe\u0011\u0014DO\rC3)K\"+\u0007.\u001aEfQ\u0017D]\r{3\tM\"2\u0015M\u0019]d\u0011\u001aDg\r#4)N\"7\u0007^\u001a\u0005hQ\u001dDu\r[4\tP\">\u0007z\u001aux\u0011AD\u0003\u000f\u00139i\u0001\u0005\u00035k\u0019e\u0004cJ\u0011\u0007|\u0019}d1\u0011DD\r\u00173yIb%\u0007\u0018\u001ameq\u0014DR\rO3YKb,\u00074\u001a]f1\u0018D`\r\u0007L1A\" #\u0005\u001d!V\u000f\u001d7fca\u00022a\u000fDA\t\u0015i4C1\u0001?!\rYdQ\u0011\u0003\u0006'N\u0011\rA\u0010\t\u0004w\u0019%E!\u00024\u0014\u0005\u0004q\u0004cA\u001e\u0007\u000e\u0012)Qp\u0005b\u0001}A\u00191H\"%\u0005\r\u0005E2C1\u0001?!\rYdQ\u0013\u0003\u0007\u0003_\u001a\"\u0019\u0001 \u0011\u0007m2I\n\u0002\u0004\u00026N\u0011\rA\u0010\t\u0004w\u0019uEA\u0002B\u0002'\t\u0007a\bE\u0002<\rC#aA!\u0017\u0014\u0005\u0004q\u0004cA\u001e\u0007&\u00121!qW\nC\u0002y\u00022a\u000fDU\t\u0019\u0019ib\u0005b\u0001}A\u00191H\",\u0005\r\r-5C1\u0001?!\rYd\u0011\u0017\u0003\u0007\t\u0003\u0019\"\u0019\u0001 \u0011\u0007m2)\f\u0002\u0004\u0005\u0000M\u0011\rA\u0010\t\u0004w\u0019eFABC\u0003'\t\u0007a\bE\u0002<\r{#a!b%\u0014\u0005\u0004q\u0004cA\u001e\u0007B\u00121a\u0011F\nC\u0002y\u00022a\u000fDc\t\u001919m\u0005b\u0001}\t\u0019\u0011)M\u001c\t\r\u0019\u001b\u00029\u0001Df!\u0011!TGb \t\r]\u001b\u00029\u0001Dh!\u0011!TGb!\t\r1\u001c\u00029\u0001Dj!\u0011!TGb\"\t\u000f\u0005-1\u0003q\u0001\u0007XB!A'\u000eDF\u0011\u001d\t)e\u0005a\u0002\r7\u0004B\u0001N\u001b\u0007\u0010\"9\u0011qQ\nA\u0004\u0019}\u0007\u0003\u0002\u001b6\r'Cq!!5\u0014\u0001\b1\u0019\u000f\u0005\u00035k\u0019]\u0005b\u0002B\u0012'\u0001\u000faq\u001d\t\u0005iU2Y\nC\u0004\u0003~M\u0001\u001dAb;\u0011\tQ*dq\u0014\u0005\b\u0005?\u001c\u00029\u0001Dx!\u0011!TGb)\t\u000f\r%3\u0003q\u0001\u0007tB!A'\u000eDT\u0011\u001d\u0019Yl\u0005a\u0002\ro\u0004B\u0001N\u001b\u0007,\"9AQG\nA\u0004\u0019m\b\u0003\u0002\u001b6\r_Cq\u0001b.\u0014\u0001\b1y\u0010\u0005\u00035k\u0019M\u0006bBC!'\u0001\u000fq1\u0001\t\u0005iU29\fC\u0004\u0006TN\u0001\u001dab\u0002\u0011\tQ*d1\u0018\u0005\b\r[\u001a\u00029AD\u0006!\u0011!TGb0\t\u000f\u001d=1\u0003q\u0001\b\u0012\u0005\u0019\u0011)M\u001c\u0011\tQ*d1Y\u0001%G\u0006$8oS3s]\u0016d7i\\7nkR\fG/\u001b<f\u000fJ|W\u000f\u001d$peR+\b\u000f\\32sUAsqCD\u0012\u000fO9Ycb\f\b4\u001d]r1HD \u000f\u0007:9eb\u0013\bP\u001dMsqKD.\u000f?:\u0019gb\u001a\blQAs\u0011DD8\u000fg:9hb\u001f\b\u0000\u001d\ruqQDF\u000f\u001f;\u0019jb&\b\u001c\u001e}u1UDT\u000fW;ykb-\b8B!A'ND\u000e!%\nsQDD\u0011\u000fK9Ic\"\f\b2\u001dUr\u0011HD\u001f\u000f\u0003:)e\"\u0013\bN\u001dEsQKD-\u000f;:\tg\"\u001a\bj%\u0019qq\u0004\u0012\u0003\u000fQ+\b\u000f\\32sA\u00191hb\t\u0005\u000bu\"\"\u0019\u0001 \u0011\u0007m:9\u0003B\u0003T)\t\u0007a\bE\u0002<\u000fW!QA\u001a\u000bC\u0002y\u00022aOD\u0018\t\u0015iHC1\u0001?!\rYt1\u0007\u0003\u0007\u0003c!\"\u0019\u0001 \u0011\u0007m:9\u0004\u0002\u0004\u0002pQ\u0011\rA\u0010\t\u0004w\u001dmBABA[)\t\u0007a\bE\u0002<\u000f\u007f!aAa\u0001\u0015\u0005\u0004q\u0004cA\u001e\bD\u00111!\u0011\f\u000bC\u0002y\u00022aOD$\t\u0019\u00119\f\u0006b\u0001}A\u00191hb\u0013\u0005\r\ruAC1\u0001?!\rYtq\n\u0003\u0007\u0007\u0017#\"\u0019\u0001 \u0011\u0007m:\u0019\u0006\u0002\u0004\u0005\u0002Q\u0011\rA\u0010\t\u0004w\u001d]CA\u0002C@)\t\u0007a\bE\u0002<\u000f7\"a!\"\u0002\u0015\u0005\u0004q\u0004cA\u001e\b`\u00111Q1\u0013\u000bC\u0002y\u00022aOD2\t\u00191I\u0003\u0006b\u0001}A\u00191hb\u001a\u0005\r\u0019\u001dGC1\u0001?!\rYt1\u000e\u0003\u0007\u000f[\"\"\u0019\u0001 \u0003\u0007\u0005\u000b\u0004\b\u0003\u0004G)\u0001\u000fq\u0011\u000f\t\u0005iU:\t\u0003\u0003\u0004X)\u0001\u000fqQ\u000f\t\u0005iU:)\u0003\u0003\u0004m)\u0001\u000fq\u0011\u0010\t\u0005iU:I\u0003C\u0004\u0002\fQ\u0001\u001da\" \u0011\tQ*tQ\u0006\u0005\b\u0003\u000b\"\u00029ADA!\u0011!Tg\"\r\t\u000f\u0005\u001dE\u0003q\u0001\b\u0006B!A'ND\u001b\u0011\u001d\t\t\u000e\u0006a\u0002\u000f\u0013\u0003B\u0001N\u001b\b:!9!1\u0005\u000bA\u0004\u001d5\u0005\u0003\u0002\u001b6\u000f{AqA! \u0015\u0001\b9\t\n\u0005\u00035k\u001d\u0005\u0003b\u0002Bp)\u0001\u000fqQ\u0013\t\u0005iU:)\u0005C\u0004\u0004JQ\u0001\u001da\"'\u0011\tQ*t\u0011\n\u0005\b\u0007w#\u00029ADO!\u0011!Tg\"\u0014\t\u000f\u0011UB\u0003q\u0001\b\"B!A'ND)\u0011\u001d!9\f\u0006a\u0002\u000fK\u0003B\u0001N\u001b\bV!9Q\u0011\t\u000bA\u0004\u001d%\u0006\u0003\u0002\u001b6\u000f3Bq!b5\u0015\u0001\b9i\u000b\u0005\u00035k\u001du\u0003b\u0002D7)\u0001\u000fq\u0011\u0017\t\u0005iU:\t\u0007C\u0004\b\u0010Q\u0001\u001da\".\u0011\tQ*tQ\r\u0005\b\u000fs#\u00029AD^\u0003\r\t\u0015\u0007\u000f\t\u0005iU:I'\u0001\u0013dCR\u001c8*\u001a:oK2\u001cu.\\7vi\u0006$\u0018N^3He>,\bOR8s)V\u0004H.\u001a\u001a1+):\tm\"4\bR\u001eUw\u0011\\Do\u000fC<)o\";\bn\u001eExQ_D}\u000f{D\t\u0001#\u0002\t\n!5\u0001\u0012\u0003E\u000b\u00113!\"fb1\t\u001e!\u0005\u0002R\u0005E\u0015\u0011[A\t\u0004#\u000e\t:!u\u0002\u0012\tE#\u0011\u0013Bi\u0005#\u0015\tV!e\u0003R\fE1\u0011KBI\u0007\u0005\u00035k\u001d\u0015\u0007cK\u0011\bH\u001e-wqZDj\u000f/<Ynb8\bd\u001e\u001dx1^Dx\u000fg<9pb?\b\u0000\"\r\u0001r\u0001E\u0006\u0011\u001fA\u0019\u0002c\u0006\n\u0007\u001d%'EA\u0004UkBdWM\r\u0019\u0011\u0007m:i\rB\u0003>+\t\u0007a\bE\u0002<\u000f#$QaU\u000bC\u0002y\u00022aODk\t\u00151WC1\u0001?!\rYt\u0011\u001c\u0003\u0006{V\u0011\rA\u0010\t\u0004w\u001duGABA\u0019+\t\u0007a\bE\u0002<\u000fC$a!a\u001c\u0016\u0005\u0004q\u0004cA\u001e\bf\u00121\u0011QW\u000bC\u0002y\u00022aODu\t\u0019\u0011\u0019!\u0006b\u0001}A\u00191h\"<\u0005\r\teSC1\u0001?!\rYt\u0011\u001f\u0003\u0007\u0005o+\"\u0019\u0001 \u0011\u0007m:)\u0010\u0002\u0004\u0004\u001eU\u0011\rA\u0010\t\u0004w\u001deHABBF+\t\u0007a\bE\u0002<\u000f{$a\u0001\"\u0001\u0016\u0005\u0004q\u0004cA\u001e\t\u0002\u00111AqP\u000bC\u0002y\u00022a\u000fE\u0003\t\u0019))!\u0006b\u0001}A\u00191\b#\u0003\u0005\r\u0015MUC1\u0001?!\rY\u0004R\u0002\u0003\u0007\rS)\"\u0019\u0001 \u0011\u0007mB\t\u0002\u0002\u0004\u0007HV\u0011\rA\u0010\t\u0004w!UAABD7+\t\u0007a\bE\u0002<\u00113!a\u0001c\u0007\u0016\u0005\u0004q$aA!2s!1a)\u0006a\u0002\u0011?\u0001B\u0001N\u001b\bL\"1q+\u0006a\u0002\u0011G\u0001B\u0001N\u001b\bP\"1A.\u0006a\u0002\u0011O\u0001B\u0001N\u001b\bT\"9\u00111B\u000bA\u0004!-\u0002\u0003\u0002\u001b6\u000f/Dq!!\u0012\u0016\u0001\bAy\u0003\u0005\u00035k\u001dm\u0007bBAD+\u0001\u000f\u00012\u0007\t\u0005iU:y\u000eC\u0004\u0002RV\u0001\u001d\u0001c\u000e\u0011\tQ*t1\u001d\u0005\b\u0005G)\u00029\u0001E\u001e!\u0011!Tgb:\t\u000f\tuT\u0003q\u0001\t@A!A'NDv\u0011\u001d\u0011y.\u0006a\u0002\u0011\u0007\u0002B\u0001N\u001b\bp\"91\u0011J\u000bA\u0004!\u001d\u0003\u0003\u0002\u001b6\u000fgDqaa/\u0016\u0001\bAY\u0005\u0005\u00035k\u001d]\bb\u0002C\u001b+\u0001\u000f\u0001r\n\t\u0005iU:Y\u0010C\u0004\u00058V\u0001\u001d\u0001c\u0015\u0011\tQ*tq \u0005\b\u000b\u0003*\u00029\u0001E,!\u0011!T\u0007c\u0001\t\u000f\u0015MW\u0003q\u0001\t\\A!A'\u000eE\u0004\u0011\u001d1i'\u0006a\u0002\u0011?\u0002B\u0001N\u001b\t\f!9qqB\u000bA\u0004!\r\u0004\u0003\u0002\u001b6\u0011\u001fAqa\"/\u0016\u0001\bA9\u0007\u0005\u00035k!M\u0001b\u0002E6+\u0001\u000f\u0001RN\u0001\u0004\u0003FJ\u0004\u0003\u0002\u001b6\u0011/\tAeY1ug.+'O\\3m\u0007>lW.\u001e;bi&4Xm\u0012:pkB4uN\u001d+va2,''M\u000b-\u0011gBy\bc!\t\b\"-\u0005r\u0012EJ\u0011/CY\nc(\t$\"\u001d\u00062\u0016EX\u0011gC9\fc/\t@\"\r\u0007r\u0019Ef\u0011\u001f$B\u0006#\u001e\tT\"]\u00072\u001cEp\u0011GD9\u000fc;\tp\"M\br\u001fE~\u0011\u007fL\u0019!c\u0002\n\f%=\u00112CE\f\u00137Iy\"c\t\u0011\tQ*\u0004r\u000f\t.C!e\u0004R\u0010EA\u0011\u000bCI\t#$\t\u0012\"U\u0005\u0012\u0014EO\u0011CC)\u000b#+\t.\"E\u0006R\u0017E]\u0011{C\t\r#2\tJ\"5\u0017b\u0001E>E\t9A+\u001e9mKJ\n\u0004cA\u001e\t\u0000\u0011)QH\u0006b\u0001}A\u00191\bc!\u0005\u000bM3\"\u0019\u0001 \u0011\u0007mB9\tB\u0003g-\t\u0007a\bE\u0002<\u0011\u0017#Q! \fC\u0002y\u00022a\u000fEH\t\u0019\t\tD\u0006b\u0001}A\u00191\bc%\u0005\r\u0005=dC1\u0001?!\rY\u0004r\u0013\u0003\u0007\u0003k3\"\u0019\u0001 \u0011\u0007mBY\n\u0002\u0004\u0003\u0004Y\u0011\rA\u0010\t\u0004w!}EA\u0002B--\t\u0007a\bE\u0002<\u0011G#aAa.\u0017\u0005\u0004q\u0004cA\u001e\t(\u001211Q\u0004\fC\u0002y\u00022a\u000fEV\t\u0019\u0019YI\u0006b\u0001}A\u00191\bc,\u0005\r\u0011\u0005aC1\u0001?!\rY\u00042\u0017\u0003\u0007\t\u007f2\"\u0019\u0001 \u0011\u0007mB9\f\u0002\u0004\u0006\u0006Y\u0011\rA\u0010\t\u0004w!mFABCJ-\t\u0007a\bE\u0002<\u0011\u007f#aA\"\u000b\u0017\u0005\u0004q\u0004cA\u001e\tD\u00121aq\u0019\fC\u0002y\u00022a\u000fEd\t\u00199iG\u0006b\u0001}A\u00191\bc3\u0005\r!maC1\u0001?!\rY\u0004r\u001a\u0003\u0007\u0011#4\"\u0019\u0001 \u0003\u0007\u0005\u0013\u0004\u0007\u0003\u0004G-\u0001\u000f\u0001R\u001b\t\u0005iUBi\b\u0003\u0004X-\u0001\u000f\u0001\u0012\u001c\t\u0005iUB\t\t\u0003\u0004m-\u0001\u000f\u0001R\u001c\t\u0005iUB)\tC\u0004\u0002\fY\u0001\u001d\u0001#9\u0011\tQ*\u0004\u0012\u0012\u0005\b\u0003\u000b2\u00029\u0001Es!\u0011!T\u0007#$\t\u000f\u0005\u001de\u0003q\u0001\tjB!A'\u000eEI\u0011\u001d\t\tN\u0006a\u0002\u0011[\u0004B\u0001N\u001b\t\u0016\"9!1\u0005\fA\u0004!E\b\u0003\u0002\u001b6\u00113CqA! \u0017\u0001\bA)\u0010\u0005\u00035k!u\u0005b\u0002Bp-\u0001\u000f\u0001\u0012 \t\u0005iUB\t\u000bC\u0004\u0004JY\u0001\u001d\u0001#@\u0011\tQ*\u0004R\u0015\u0005\b\u0007w3\u00029AE\u0001!\u0011!T\u0007#+\t\u000f\u0011Ub\u0003q\u0001\n\u0006A!A'\u000eEW\u0011\u001d!9L\u0006a\u0002\u0013\u0013\u0001B\u0001N\u001b\t2\"9Q\u0011\t\fA\u0004%5\u0001\u0003\u0002\u001b6\u0011kCq!b5\u0017\u0001\bI\t\u0002\u0005\u00035k!e\u0006b\u0002D7-\u0001\u000f\u0011R\u0003\t\u0005iUBi\fC\u0004\b\u0010Y\u0001\u001d!#\u0007\u0011\tQ*\u0004\u0012\u0019\u0005\b\u000fs3\u00029AE\u000f!\u0011!T\u0007#2\t\u000f!-d\u0003q\u0001\n\"A!A'\u000eEe\u0011\u001dI)C\u0006a\u0002\u0013O\t1!\u0011\u001a1!\u0011!T\u0007#4\u0002I\r\fGo]&fe:,GnQ8n[V$\u0018\r^5wK\u001e\u0013x.\u001e9G_J$V\u000f\u001d7feI*b&#\f\n:%u\u0012\u0012IE#\u0013\u0013Ji%#\u0015\nV%e\u0013RLE1\u0013KJI'#\u001c\nr%U\u0014\u0012PE?\u0013\u0003K))##\n\u000eRq\u0013rFEI\u0013+KI*#(\n\"&\u0015\u0016\u0012VEW\u0013cK),#/\n>&\u0005\u0017RYEe\u0013\u001bL\t.#6\nZ&u\u0017\u0012]Es!\u0011!T'#\r\u0011_\u0005J\u0019$c\u000e\n<%}\u00122IE$\u0013\u0017Jy%c\u0015\nX%m\u0013rLE2\u0013OJY'c\u001c\nt%]\u00142PE@\u0013\u0007K9)c#\n\u0007%U\"EA\u0004UkBdWM\r\u001a\u0011\u0007mJI\u0004B\u0003>/\t\u0007a\bE\u0002<\u0013{!QaU\fC\u0002y\u00022aOE!\t\u00151wC1\u0001?!\rY\u0014R\t\u0003\u0006{^\u0011\rA\u0010\t\u0004w%%CABA\u0019/\t\u0007a\bE\u0002<\u0013\u001b\"a!a\u001c\u0018\u0005\u0004q\u0004cA\u001e\nR\u00111\u0011QW\fC\u0002y\u00022aOE+\t\u0019\u0011\u0019a\u0006b\u0001}A\u00191(#\u0017\u0005\r\tesC1\u0001?!\rY\u0014R\f\u0003\u0007\u0005o;\"\u0019\u0001 \u0011\u0007mJ\t\u0007\u0002\u0004\u0004\u001e]\u0011\rA\u0010\t\u0004w%\u0015DABBF/\t\u0007a\bE\u0002<\u0013S\"a\u0001\"\u0001\u0018\u0005\u0004q\u0004cA\u001e\nn\u00111AqP\fC\u0002y\u00022aOE9\t\u0019))a\u0006b\u0001}A\u00191(#\u001e\u0005\r\u0015MuC1\u0001?!\rY\u0014\u0012\u0010\u0003\u0007\rS9\"\u0019\u0001 \u0011\u0007mJi\b\u0002\u0004\u0007H^\u0011\rA\u0010\t\u0004w%\u0005EABD7/\t\u0007a\bE\u0002<\u0013\u000b#a\u0001c\u0007\u0018\u0005\u0004q\u0004cA\u001e\n\n\u00121\u0001\u0012[\fC\u0002y\u00022aOEG\t\u0019Iyi\u0006b\u0001}\t\u0019\u0011IM\u0019\t\r\u0019;\u00029AEJ!\u0011!T'c\u000e\t\r];\u00029AEL!\u0011!T'c\u000f\t\r1<\u00029AEN!\u0011!T'c\u0010\t\u000f\u0005-q\u0003q\u0001\n B!A'NE\"\u0011\u001d\t)e\u0006a\u0002\u0013G\u0003B\u0001N\u001b\nH!9\u0011qQ\fA\u0004%\u001d\u0006\u0003\u0002\u001b6\u0013\u0017Bq!!5\u0018\u0001\bIY\u000b\u0005\u00035k%=\u0003b\u0002B\u0012/\u0001\u000f\u0011r\u0016\t\u0005iUJ\u0019\u0006C\u0004\u0003~]\u0001\u001d!c-\u0011\tQ*\u0014r\u000b\u0005\b\u0005?<\u00029AE\\!\u0011!T'c\u0017\t\u000f\r%s\u0003q\u0001\n<B!A'NE0\u0011\u001d\u0019Yl\u0006a\u0002\u0013\u007f\u0003B\u0001N\u001b\nd!9AQG\fA\u0004%\r\u0007\u0003\u0002\u001b6\u0013OBq\u0001b.\u0018\u0001\bI9\r\u0005\u00035k%-\u0004bBC!/\u0001\u000f\u00112\u001a\t\u0005iUJy\u0007C\u0004\u0006T^\u0001\u001d!c4\u0011\tQ*\u00142\u000f\u0005\b\r[:\u00029AEj!\u0011!T'c\u001e\t\u000f\u001d=q\u0003q\u0001\nXB!A'NE>\u0011\u001d9Il\u0006a\u0002\u00137\u0004B\u0001N\u001b\n\u0000!9\u00012N\fA\u0004%}\u0007\u0003\u0002\u001b6\u0013\u0007Cq!#\n\u0018\u0001\bI\u0019\u000f\u0005\u00035k%\u001d\u0005bBEt/\u0001\u000f\u0011\u0012^\u0001\u0004\u0003J\n\u0004\u0003\u0002\u001b6\u0013\u0017\u0003"
)
public interface TupleCommutativeGroupInstances extends TupleBoundedSemilatticeInstances {
   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple1$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0) {
      return $this.catsKernelCommutativeGroupForTuple1(A0);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple1(final CommutativeGroup A0) {
      return new CommutativeGroup(A0) {
         private final CommutativeGroup A0$331;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple1 combine(final Tuple1 x, final Tuple1 y) {
            return new Tuple1(this.A0$331.combine(x._1(), y._1()));
         }

         public Tuple1 empty() {
            return new Tuple1(this.A0$331.empty());
         }

         public Tuple1 inverse(final Tuple1 x) {
            return new Tuple1(this.A0$331.inverse(x._1()));
         }

         public {
            this.A0$331 = A0$331;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple2$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1) {
      return $this.catsKernelCommutativeGroupForTuple2(A0, A1);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple2(final CommutativeGroup A0, final CommutativeGroup A1) {
      return new CommutativeGroup(A0, A1) {
         private final CommutativeGroup A0$332;
         private final CommutativeGroup A1$316;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple2 combine(final Tuple2 x, final Tuple2 y) {
            return new Tuple2(this.A0$332.combine(x._1(), y._1()), this.A1$316.combine(x._2(), y._2()));
         }

         public Tuple2 empty() {
            return new Tuple2(this.A0$332.empty(), this.A1$316.empty());
         }

         public Tuple2 inverse(final Tuple2 x) {
            return new Tuple2(this.A0$332.inverse(x._1()), this.A1$316.inverse(x._2()));
         }

         public {
            this.A0$332 = A0$332;
            this.A1$316 = A1$316;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple3$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2) {
      return $this.catsKernelCommutativeGroupForTuple3(A0, A1, A2);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple3(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2) {
      return new CommutativeGroup(A0, A1, A2) {
         private final CommutativeGroup A0$333;
         private final CommutativeGroup A1$317;
         private final CommutativeGroup A2$301;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple3 combine(final Tuple3 x, final Tuple3 y) {
            return new Tuple3(this.A0$333.combine(x._1(), y._1()), this.A1$317.combine(x._2(), y._2()), this.A2$301.combine(x._3(), y._3()));
         }

         public Tuple3 empty() {
            return new Tuple3(this.A0$333.empty(), this.A1$317.empty(), this.A2$301.empty());
         }

         public Tuple3 inverse(final Tuple3 x) {
            return new Tuple3(this.A0$333.inverse(x._1()), this.A1$317.inverse(x._2()), this.A2$301.inverse(x._3()));
         }

         public {
            this.A0$333 = A0$333;
            this.A1$317 = A1$317;
            this.A2$301 = A2$301;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple4$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3) {
      return $this.catsKernelCommutativeGroupForTuple4(A0, A1, A2, A3);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple4(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3) {
      return new CommutativeGroup(A0, A1, A2, A3) {
         private final CommutativeGroup A0$334;
         private final CommutativeGroup A1$318;
         private final CommutativeGroup A2$302;
         private final CommutativeGroup A3$286;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple4 combine(final Tuple4 x, final Tuple4 y) {
            return new Tuple4(this.A0$334.combine(x._1(), y._1()), this.A1$318.combine(x._2(), y._2()), this.A2$302.combine(x._3(), y._3()), this.A3$286.combine(x._4(), y._4()));
         }

         public Tuple4 empty() {
            return new Tuple4(this.A0$334.empty(), this.A1$318.empty(), this.A2$302.empty(), this.A3$286.empty());
         }

         public Tuple4 inverse(final Tuple4 x) {
            return new Tuple4(this.A0$334.inverse(x._1()), this.A1$318.inverse(x._2()), this.A2$302.inverse(x._3()), this.A3$286.inverse(x._4()));
         }

         public {
            this.A0$334 = A0$334;
            this.A1$318 = A1$318;
            this.A2$302 = A2$302;
            this.A3$286 = A3$286;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple5$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4) {
      return $this.catsKernelCommutativeGroupForTuple5(A0, A1, A2, A3, A4);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple5(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4) {
      return new CommutativeGroup(A0, A1, A2, A3, A4) {
         private final CommutativeGroup A0$335;
         private final CommutativeGroup A1$319;
         private final CommutativeGroup A2$303;
         private final CommutativeGroup A3$287;
         private final CommutativeGroup A4$271;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple5 combine(final Tuple5 x, final Tuple5 y) {
            return new Tuple5(this.A0$335.combine(x._1(), y._1()), this.A1$319.combine(x._2(), y._2()), this.A2$303.combine(x._3(), y._3()), this.A3$287.combine(x._4(), y._4()), this.A4$271.combine(x._5(), y._5()));
         }

         public Tuple5 empty() {
            return new Tuple5(this.A0$335.empty(), this.A1$319.empty(), this.A2$303.empty(), this.A3$287.empty(), this.A4$271.empty());
         }

         public Tuple5 inverse(final Tuple5 x) {
            return new Tuple5(this.A0$335.inverse(x._1()), this.A1$319.inverse(x._2()), this.A2$303.inverse(x._3()), this.A3$287.inverse(x._4()), this.A4$271.inverse(x._5()));
         }

         public {
            this.A0$335 = A0$335;
            this.A1$319 = A1$319;
            this.A2$303 = A2$303;
            this.A3$287 = A3$287;
            this.A4$271 = A4$271;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple6$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5) {
      return $this.catsKernelCommutativeGroupForTuple6(A0, A1, A2, A3, A4, A5);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple6(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5) {
         private final CommutativeGroup A0$336;
         private final CommutativeGroup A1$320;
         private final CommutativeGroup A2$304;
         private final CommutativeGroup A3$288;
         private final CommutativeGroup A4$272;
         private final CommutativeGroup A5$256;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple6 combine(final Tuple6 x, final Tuple6 y) {
            return new Tuple6(this.A0$336.combine(x._1(), y._1()), this.A1$320.combine(x._2(), y._2()), this.A2$304.combine(x._3(), y._3()), this.A3$288.combine(x._4(), y._4()), this.A4$272.combine(x._5(), y._5()), this.A5$256.combine(x._6(), y._6()));
         }

         public Tuple6 empty() {
            return new Tuple6(this.A0$336.empty(), this.A1$320.empty(), this.A2$304.empty(), this.A3$288.empty(), this.A4$272.empty(), this.A5$256.empty());
         }

         public Tuple6 inverse(final Tuple6 x) {
            return new Tuple6(this.A0$336.inverse(x._1()), this.A1$320.inverse(x._2()), this.A2$304.inverse(x._3()), this.A3$288.inverse(x._4()), this.A4$272.inverse(x._5()), this.A5$256.inverse(x._6()));
         }

         public {
            this.A0$336 = A0$336;
            this.A1$320 = A1$320;
            this.A2$304 = A2$304;
            this.A3$288 = A3$288;
            this.A4$272 = A4$272;
            this.A5$256 = A5$256;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple7$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6) {
      return $this.catsKernelCommutativeGroupForTuple7(A0, A1, A2, A3, A4, A5, A6);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple7(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6) {
         private final CommutativeGroup A0$337;
         private final CommutativeGroup A1$321;
         private final CommutativeGroup A2$305;
         private final CommutativeGroup A3$289;
         private final CommutativeGroup A4$273;
         private final CommutativeGroup A5$257;
         private final CommutativeGroup A6$241;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple7 combine(final Tuple7 x, final Tuple7 y) {
            return new Tuple7(this.A0$337.combine(x._1(), y._1()), this.A1$321.combine(x._2(), y._2()), this.A2$305.combine(x._3(), y._3()), this.A3$289.combine(x._4(), y._4()), this.A4$273.combine(x._5(), y._5()), this.A5$257.combine(x._6(), y._6()), this.A6$241.combine(x._7(), y._7()));
         }

         public Tuple7 empty() {
            return new Tuple7(this.A0$337.empty(), this.A1$321.empty(), this.A2$305.empty(), this.A3$289.empty(), this.A4$273.empty(), this.A5$257.empty(), this.A6$241.empty());
         }

         public Tuple7 inverse(final Tuple7 x) {
            return new Tuple7(this.A0$337.inverse(x._1()), this.A1$321.inverse(x._2()), this.A2$305.inverse(x._3()), this.A3$289.inverse(x._4()), this.A4$273.inverse(x._5()), this.A5$257.inverse(x._6()), this.A6$241.inverse(x._7()));
         }

         public {
            this.A0$337 = A0$337;
            this.A1$321 = A1$321;
            this.A2$305 = A2$305;
            this.A3$289 = A3$289;
            this.A4$273 = A4$273;
            this.A5$257 = A5$257;
            this.A6$241 = A6$241;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple8$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7) {
      return $this.catsKernelCommutativeGroupForTuple8(A0, A1, A2, A3, A4, A5, A6, A7);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple8(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7) {
         private final CommutativeGroup A0$338;
         private final CommutativeGroup A1$322;
         private final CommutativeGroup A2$306;
         private final CommutativeGroup A3$290;
         private final CommutativeGroup A4$274;
         private final CommutativeGroup A5$258;
         private final CommutativeGroup A6$242;
         private final CommutativeGroup A7$226;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple8 combine(final Tuple8 x, final Tuple8 y) {
            return new Tuple8(this.A0$338.combine(x._1(), y._1()), this.A1$322.combine(x._2(), y._2()), this.A2$306.combine(x._3(), y._3()), this.A3$290.combine(x._4(), y._4()), this.A4$274.combine(x._5(), y._5()), this.A5$258.combine(x._6(), y._6()), this.A6$242.combine(x._7(), y._7()), this.A7$226.combine(x._8(), y._8()));
         }

         public Tuple8 empty() {
            return new Tuple8(this.A0$338.empty(), this.A1$322.empty(), this.A2$306.empty(), this.A3$290.empty(), this.A4$274.empty(), this.A5$258.empty(), this.A6$242.empty(), this.A7$226.empty());
         }

         public Tuple8 inverse(final Tuple8 x) {
            return new Tuple8(this.A0$338.inverse(x._1()), this.A1$322.inverse(x._2()), this.A2$306.inverse(x._3()), this.A3$290.inverse(x._4()), this.A4$274.inverse(x._5()), this.A5$258.inverse(x._6()), this.A6$242.inverse(x._7()), this.A7$226.inverse(x._8()));
         }

         public {
            this.A0$338 = A0$338;
            this.A1$322 = A1$322;
            this.A2$306 = A2$306;
            this.A3$290 = A3$290;
            this.A4$274 = A4$274;
            this.A5$258 = A5$258;
            this.A6$242 = A6$242;
            this.A7$226 = A7$226;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple9$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8) {
      return $this.catsKernelCommutativeGroupForTuple9(A0, A1, A2, A3, A4, A5, A6, A7, A8);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple9(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8) {
         private final CommutativeGroup A0$339;
         private final CommutativeGroup A1$323;
         private final CommutativeGroup A2$307;
         private final CommutativeGroup A3$291;
         private final CommutativeGroup A4$275;
         private final CommutativeGroup A5$259;
         private final CommutativeGroup A6$243;
         private final CommutativeGroup A7$227;
         private final CommutativeGroup A8$211;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple9 combine(final Tuple9 x, final Tuple9 y) {
            return new Tuple9(this.A0$339.combine(x._1(), y._1()), this.A1$323.combine(x._2(), y._2()), this.A2$307.combine(x._3(), y._3()), this.A3$291.combine(x._4(), y._4()), this.A4$275.combine(x._5(), y._5()), this.A5$259.combine(x._6(), y._6()), this.A6$243.combine(x._7(), y._7()), this.A7$227.combine(x._8(), y._8()), this.A8$211.combine(x._9(), y._9()));
         }

         public Tuple9 empty() {
            return new Tuple9(this.A0$339.empty(), this.A1$323.empty(), this.A2$307.empty(), this.A3$291.empty(), this.A4$275.empty(), this.A5$259.empty(), this.A6$243.empty(), this.A7$227.empty(), this.A8$211.empty());
         }

         public Tuple9 inverse(final Tuple9 x) {
            return new Tuple9(this.A0$339.inverse(x._1()), this.A1$323.inverse(x._2()), this.A2$307.inverse(x._3()), this.A3$291.inverse(x._4()), this.A4$275.inverse(x._5()), this.A5$259.inverse(x._6()), this.A6$243.inverse(x._7()), this.A7$227.inverse(x._8()), this.A8$211.inverse(x._9()));
         }

         public {
            this.A0$339 = A0$339;
            this.A1$323 = A1$323;
            this.A2$307 = A2$307;
            this.A3$291 = A3$291;
            this.A4$275 = A4$275;
            this.A5$259 = A5$259;
            this.A6$243 = A6$243;
            this.A7$227 = A7$227;
            this.A8$211 = A8$211;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple10$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9) {
      return $this.catsKernelCommutativeGroupForTuple10(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple10(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) {
         private final CommutativeGroup A0$340;
         private final CommutativeGroup A1$324;
         private final CommutativeGroup A2$308;
         private final CommutativeGroup A3$292;
         private final CommutativeGroup A4$276;
         private final CommutativeGroup A5$260;
         private final CommutativeGroup A6$244;
         private final CommutativeGroup A7$228;
         private final CommutativeGroup A8$212;
         private final CommutativeGroup A9$196;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple10 combine(final Tuple10 x, final Tuple10 y) {
            return new Tuple10(this.A0$340.combine(x._1(), y._1()), this.A1$324.combine(x._2(), y._2()), this.A2$308.combine(x._3(), y._3()), this.A3$292.combine(x._4(), y._4()), this.A4$276.combine(x._5(), y._5()), this.A5$260.combine(x._6(), y._6()), this.A6$244.combine(x._7(), y._7()), this.A7$228.combine(x._8(), y._8()), this.A8$212.combine(x._9(), y._9()), this.A9$196.combine(x._10(), y._10()));
         }

         public Tuple10 empty() {
            return new Tuple10(this.A0$340.empty(), this.A1$324.empty(), this.A2$308.empty(), this.A3$292.empty(), this.A4$276.empty(), this.A5$260.empty(), this.A6$244.empty(), this.A7$228.empty(), this.A8$212.empty(), this.A9$196.empty());
         }

         public Tuple10 inverse(final Tuple10 x) {
            return new Tuple10(this.A0$340.inverse(x._1()), this.A1$324.inverse(x._2()), this.A2$308.inverse(x._3()), this.A3$292.inverse(x._4()), this.A4$276.inverse(x._5()), this.A5$260.inverse(x._6()), this.A6$244.inverse(x._7()), this.A7$228.inverse(x._8()), this.A8$212.inverse(x._9()), this.A9$196.inverse(x._10()));
         }

         public {
            this.A0$340 = A0$340;
            this.A1$324 = A1$324;
            this.A2$308 = A2$308;
            this.A3$292 = A3$292;
            this.A4$276 = A4$276;
            this.A5$260 = A5$260;
            this.A6$244 = A6$244;
            this.A7$228 = A7$228;
            this.A8$212 = A8$212;
            this.A9$196 = A9$196;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple11$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10) {
      return $this.catsKernelCommutativeGroupForTuple11(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple11(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) {
         private final CommutativeGroup A0$341;
         private final CommutativeGroup A1$325;
         private final CommutativeGroup A2$309;
         private final CommutativeGroup A3$293;
         private final CommutativeGroup A4$277;
         private final CommutativeGroup A5$261;
         private final CommutativeGroup A6$245;
         private final CommutativeGroup A7$229;
         private final CommutativeGroup A8$213;
         private final CommutativeGroup A9$197;
         private final CommutativeGroup A10$181;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple11 combine(final Tuple11 x, final Tuple11 y) {
            return new Tuple11(this.A0$341.combine(x._1(), y._1()), this.A1$325.combine(x._2(), y._2()), this.A2$309.combine(x._3(), y._3()), this.A3$293.combine(x._4(), y._4()), this.A4$277.combine(x._5(), y._5()), this.A5$261.combine(x._6(), y._6()), this.A6$245.combine(x._7(), y._7()), this.A7$229.combine(x._8(), y._8()), this.A8$213.combine(x._9(), y._9()), this.A9$197.combine(x._10(), y._10()), this.A10$181.combine(x._11(), y._11()));
         }

         public Tuple11 empty() {
            return new Tuple11(this.A0$341.empty(), this.A1$325.empty(), this.A2$309.empty(), this.A3$293.empty(), this.A4$277.empty(), this.A5$261.empty(), this.A6$245.empty(), this.A7$229.empty(), this.A8$213.empty(), this.A9$197.empty(), this.A10$181.empty());
         }

         public Tuple11 inverse(final Tuple11 x) {
            return new Tuple11(this.A0$341.inverse(x._1()), this.A1$325.inverse(x._2()), this.A2$309.inverse(x._3()), this.A3$293.inverse(x._4()), this.A4$277.inverse(x._5()), this.A5$261.inverse(x._6()), this.A6$245.inverse(x._7()), this.A7$229.inverse(x._8()), this.A8$213.inverse(x._9()), this.A9$197.inverse(x._10()), this.A10$181.inverse(x._11()));
         }

         public {
            this.A0$341 = A0$341;
            this.A1$325 = A1$325;
            this.A2$309 = A2$309;
            this.A3$293 = A3$293;
            this.A4$277 = A4$277;
            this.A5$261 = A5$261;
            this.A6$245 = A6$245;
            this.A7$229 = A7$229;
            this.A8$213 = A8$213;
            this.A9$197 = A9$197;
            this.A10$181 = A10$181;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple12$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11) {
      return $this.catsKernelCommutativeGroupForTuple12(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple12(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) {
         private final CommutativeGroup A0$342;
         private final CommutativeGroup A1$326;
         private final CommutativeGroup A2$310;
         private final CommutativeGroup A3$294;
         private final CommutativeGroup A4$278;
         private final CommutativeGroup A5$262;
         private final CommutativeGroup A6$246;
         private final CommutativeGroup A7$230;
         private final CommutativeGroup A8$214;
         private final CommutativeGroup A9$198;
         private final CommutativeGroup A10$182;
         private final CommutativeGroup A11$166;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple12 combine(final Tuple12 x, final Tuple12 y) {
            return new Tuple12(this.A0$342.combine(x._1(), y._1()), this.A1$326.combine(x._2(), y._2()), this.A2$310.combine(x._3(), y._3()), this.A3$294.combine(x._4(), y._4()), this.A4$278.combine(x._5(), y._5()), this.A5$262.combine(x._6(), y._6()), this.A6$246.combine(x._7(), y._7()), this.A7$230.combine(x._8(), y._8()), this.A8$214.combine(x._9(), y._9()), this.A9$198.combine(x._10(), y._10()), this.A10$182.combine(x._11(), y._11()), this.A11$166.combine(x._12(), y._12()));
         }

         public Tuple12 empty() {
            return new Tuple12(this.A0$342.empty(), this.A1$326.empty(), this.A2$310.empty(), this.A3$294.empty(), this.A4$278.empty(), this.A5$262.empty(), this.A6$246.empty(), this.A7$230.empty(), this.A8$214.empty(), this.A9$198.empty(), this.A10$182.empty(), this.A11$166.empty());
         }

         public Tuple12 inverse(final Tuple12 x) {
            return new Tuple12(this.A0$342.inverse(x._1()), this.A1$326.inverse(x._2()), this.A2$310.inverse(x._3()), this.A3$294.inverse(x._4()), this.A4$278.inverse(x._5()), this.A5$262.inverse(x._6()), this.A6$246.inverse(x._7()), this.A7$230.inverse(x._8()), this.A8$214.inverse(x._9()), this.A9$198.inverse(x._10()), this.A10$182.inverse(x._11()), this.A11$166.inverse(x._12()));
         }

         public {
            this.A0$342 = A0$342;
            this.A1$326 = A1$326;
            this.A2$310 = A2$310;
            this.A3$294 = A3$294;
            this.A4$278 = A4$278;
            this.A5$262 = A5$262;
            this.A6$246 = A6$246;
            this.A7$230 = A7$230;
            this.A8$214 = A8$214;
            this.A9$198 = A9$198;
            this.A10$182 = A10$182;
            this.A11$166 = A11$166;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple13$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12) {
      return $this.catsKernelCommutativeGroupForTuple13(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple13(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) {
         private final CommutativeGroup A0$343;
         private final CommutativeGroup A1$327;
         private final CommutativeGroup A2$311;
         private final CommutativeGroup A3$295;
         private final CommutativeGroup A4$279;
         private final CommutativeGroup A5$263;
         private final CommutativeGroup A6$247;
         private final CommutativeGroup A7$231;
         private final CommutativeGroup A8$215;
         private final CommutativeGroup A9$199;
         private final CommutativeGroup A10$183;
         private final CommutativeGroup A11$167;
         private final CommutativeGroup A12$151;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple13 combine(final Tuple13 x, final Tuple13 y) {
            return new Tuple13(this.A0$343.combine(x._1(), y._1()), this.A1$327.combine(x._2(), y._2()), this.A2$311.combine(x._3(), y._3()), this.A3$295.combine(x._4(), y._4()), this.A4$279.combine(x._5(), y._5()), this.A5$263.combine(x._6(), y._6()), this.A6$247.combine(x._7(), y._7()), this.A7$231.combine(x._8(), y._8()), this.A8$215.combine(x._9(), y._9()), this.A9$199.combine(x._10(), y._10()), this.A10$183.combine(x._11(), y._11()), this.A11$167.combine(x._12(), y._12()), this.A12$151.combine(x._13(), y._13()));
         }

         public Tuple13 empty() {
            return new Tuple13(this.A0$343.empty(), this.A1$327.empty(), this.A2$311.empty(), this.A3$295.empty(), this.A4$279.empty(), this.A5$263.empty(), this.A6$247.empty(), this.A7$231.empty(), this.A8$215.empty(), this.A9$199.empty(), this.A10$183.empty(), this.A11$167.empty(), this.A12$151.empty());
         }

         public Tuple13 inverse(final Tuple13 x) {
            return new Tuple13(this.A0$343.inverse(x._1()), this.A1$327.inverse(x._2()), this.A2$311.inverse(x._3()), this.A3$295.inverse(x._4()), this.A4$279.inverse(x._5()), this.A5$263.inverse(x._6()), this.A6$247.inverse(x._7()), this.A7$231.inverse(x._8()), this.A8$215.inverse(x._9()), this.A9$199.inverse(x._10()), this.A10$183.inverse(x._11()), this.A11$167.inverse(x._12()), this.A12$151.inverse(x._13()));
         }

         public {
            this.A0$343 = A0$343;
            this.A1$327 = A1$327;
            this.A2$311 = A2$311;
            this.A3$295 = A3$295;
            this.A4$279 = A4$279;
            this.A5$263 = A5$263;
            this.A6$247 = A6$247;
            this.A7$231 = A7$231;
            this.A8$215 = A8$215;
            this.A9$199 = A9$199;
            this.A10$183 = A10$183;
            this.A11$167 = A11$167;
            this.A12$151 = A12$151;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple14$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13) {
      return $this.catsKernelCommutativeGroupForTuple14(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple14(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) {
         private final CommutativeGroup A0$344;
         private final CommutativeGroup A1$328;
         private final CommutativeGroup A2$312;
         private final CommutativeGroup A3$296;
         private final CommutativeGroup A4$280;
         private final CommutativeGroup A5$264;
         private final CommutativeGroup A6$248;
         private final CommutativeGroup A7$232;
         private final CommutativeGroup A8$216;
         private final CommutativeGroup A9$200;
         private final CommutativeGroup A10$184;
         private final CommutativeGroup A11$168;
         private final CommutativeGroup A12$152;
         private final CommutativeGroup A13$136;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple14 combine(final Tuple14 x, final Tuple14 y) {
            return new Tuple14(this.A0$344.combine(x._1(), y._1()), this.A1$328.combine(x._2(), y._2()), this.A2$312.combine(x._3(), y._3()), this.A3$296.combine(x._4(), y._4()), this.A4$280.combine(x._5(), y._5()), this.A5$264.combine(x._6(), y._6()), this.A6$248.combine(x._7(), y._7()), this.A7$232.combine(x._8(), y._8()), this.A8$216.combine(x._9(), y._9()), this.A9$200.combine(x._10(), y._10()), this.A10$184.combine(x._11(), y._11()), this.A11$168.combine(x._12(), y._12()), this.A12$152.combine(x._13(), y._13()), this.A13$136.combine(x._14(), y._14()));
         }

         public Tuple14 empty() {
            return new Tuple14(this.A0$344.empty(), this.A1$328.empty(), this.A2$312.empty(), this.A3$296.empty(), this.A4$280.empty(), this.A5$264.empty(), this.A6$248.empty(), this.A7$232.empty(), this.A8$216.empty(), this.A9$200.empty(), this.A10$184.empty(), this.A11$168.empty(), this.A12$152.empty(), this.A13$136.empty());
         }

         public Tuple14 inverse(final Tuple14 x) {
            return new Tuple14(this.A0$344.inverse(x._1()), this.A1$328.inverse(x._2()), this.A2$312.inverse(x._3()), this.A3$296.inverse(x._4()), this.A4$280.inverse(x._5()), this.A5$264.inverse(x._6()), this.A6$248.inverse(x._7()), this.A7$232.inverse(x._8()), this.A8$216.inverse(x._9()), this.A9$200.inverse(x._10()), this.A10$184.inverse(x._11()), this.A11$168.inverse(x._12()), this.A12$152.inverse(x._13()), this.A13$136.inverse(x._14()));
         }

         public {
            this.A0$344 = A0$344;
            this.A1$328 = A1$328;
            this.A2$312 = A2$312;
            this.A3$296 = A3$296;
            this.A4$280 = A4$280;
            this.A5$264 = A5$264;
            this.A6$248 = A6$248;
            this.A7$232 = A7$232;
            this.A8$216 = A8$216;
            this.A9$200 = A9$200;
            this.A10$184 = A10$184;
            this.A11$168 = A11$168;
            this.A12$152 = A12$152;
            this.A13$136 = A13$136;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple15$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14) {
      return $this.catsKernelCommutativeGroupForTuple15(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple15(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) {
         private final CommutativeGroup A0$345;
         private final CommutativeGroup A1$329;
         private final CommutativeGroup A2$313;
         private final CommutativeGroup A3$297;
         private final CommutativeGroup A4$281;
         private final CommutativeGroup A5$265;
         private final CommutativeGroup A6$249;
         private final CommutativeGroup A7$233;
         private final CommutativeGroup A8$217;
         private final CommutativeGroup A9$201;
         private final CommutativeGroup A10$185;
         private final CommutativeGroup A11$169;
         private final CommutativeGroup A12$153;
         private final CommutativeGroup A13$137;
         private final CommutativeGroup A14$121;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple15 combine(final Tuple15 x, final Tuple15 y) {
            return new Tuple15(this.A0$345.combine(x._1(), y._1()), this.A1$329.combine(x._2(), y._2()), this.A2$313.combine(x._3(), y._3()), this.A3$297.combine(x._4(), y._4()), this.A4$281.combine(x._5(), y._5()), this.A5$265.combine(x._6(), y._6()), this.A6$249.combine(x._7(), y._7()), this.A7$233.combine(x._8(), y._8()), this.A8$217.combine(x._9(), y._9()), this.A9$201.combine(x._10(), y._10()), this.A10$185.combine(x._11(), y._11()), this.A11$169.combine(x._12(), y._12()), this.A12$153.combine(x._13(), y._13()), this.A13$137.combine(x._14(), y._14()), this.A14$121.combine(x._15(), y._15()));
         }

         public Tuple15 empty() {
            return new Tuple15(this.A0$345.empty(), this.A1$329.empty(), this.A2$313.empty(), this.A3$297.empty(), this.A4$281.empty(), this.A5$265.empty(), this.A6$249.empty(), this.A7$233.empty(), this.A8$217.empty(), this.A9$201.empty(), this.A10$185.empty(), this.A11$169.empty(), this.A12$153.empty(), this.A13$137.empty(), this.A14$121.empty());
         }

         public Tuple15 inverse(final Tuple15 x) {
            return new Tuple15(this.A0$345.inverse(x._1()), this.A1$329.inverse(x._2()), this.A2$313.inverse(x._3()), this.A3$297.inverse(x._4()), this.A4$281.inverse(x._5()), this.A5$265.inverse(x._6()), this.A6$249.inverse(x._7()), this.A7$233.inverse(x._8()), this.A8$217.inverse(x._9()), this.A9$201.inverse(x._10()), this.A10$185.inverse(x._11()), this.A11$169.inverse(x._12()), this.A12$153.inverse(x._13()), this.A13$137.inverse(x._14()), this.A14$121.inverse(x._15()));
         }

         public {
            this.A0$345 = A0$345;
            this.A1$329 = A1$329;
            this.A2$313 = A2$313;
            this.A3$297 = A3$297;
            this.A4$281 = A4$281;
            this.A5$265 = A5$265;
            this.A6$249 = A6$249;
            this.A7$233 = A7$233;
            this.A8$217 = A8$217;
            this.A9$201 = A9$201;
            this.A10$185 = A10$185;
            this.A11$169 = A11$169;
            this.A12$153 = A12$153;
            this.A13$137 = A13$137;
            this.A14$121 = A14$121;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple16$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15) {
      return $this.catsKernelCommutativeGroupForTuple16(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple16(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) {
         private final CommutativeGroup A0$346;
         private final CommutativeGroup A1$330;
         private final CommutativeGroup A2$314;
         private final CommutativeGroup A3$298;
         private final CommutativeGroup A4$282;
         private final CommutativeGroup A5$266;
         private final CommutativeGroup A6$250;
         private final CommutativeGroup A7$234;
         private final CommutativeGroup A8$218;
         private final CommutativeGroup A9$202;
         private final CommutativeGroup A10$186;
         private final CommutativeGroup A11$170;
         private final CommutativeGroup A12$154;
         private final CommutativeGroup A13$138;
         private final CommutativeGroup A14$122;
         private final CommutativeGroup A15$106;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple16 combine(final Tuple16 x, final Tuple16 y) {
            return new Tuple16(this.A0$346.combine(x._1(), y._1()), this.A1$330.combine(x._2(), y._2()), this.A2$314.combine(x._3(), y._3()), this.A3$298.combine(x._4(), y._4()), this.A4$282.combine(x._5(), y._5()), this.A5$266.combine(x._6(), y._6()), this.A6$250.combine(x._7(), y._7()), this.A7$234.combine(x._8(), y._8()), this.A8$218.combine(x._9(), y._9()), this.A9$202.combine(x._10(), y._10()), this.A10$186.combine(x._11(), y._11()), this.A11$170.combine(x._12(), y._12()), this.A12$154.combine(x._13(), y._13()), this.A13$138.combine(x._14(), y._14()), this.A14$122.combine(x._15(), y._15()), this.A15$106.combine(x._16(), y._16()));
         }

         public Tuple16 empty() {
            return new Tuple16(this.A0$346.empty(), this.A1$330.empty(), this.A2$314.empty(), this.A3$298.empty(), this.A4$282.empty(), this.A5$266.empty(), this.A6$250.empty(), this.A7$234.empty(), this.A8$218.empty(), this.A9$202.empty(), this.A10$186.empty(), this.A11$170.empty(), this.A12$154.empty(), this.A13$138.empty(), this.A14$122.empty(), this.A15$106.empty());
         }

         public Tuple16 inverse(final Tuple16 x) {
            return new Tuple16(this.A0$346.inverse(x._1()), this.A1$330.inverse(x._2()), this.A2$314.inverse(x._3()), this.A3$298.inverse(x._4()), this.A4$282.inverse(x._5()), this.A5$266.inverse(x._6()), this.A6$250.inverse(x._7()), this.A7$234.inverse(x._8()), this.A8$218.inverse(x._9()), this.A9$202.inverse(x._10()), this.A10$186.inverse(x._11()), this.A11$170.inverse(x._12()), this.A12$154.inverse(x._13()), this.A13$138.inverse(x._14()), this.A14$122.inverse(x._15()), this.A15$106.inverse(x._16()));
         }

         public {
            this.A0$346 = A0$346;
            this.A1$330 = A1$330;
            this.A2$314 = A2$314;
            this.A3$298 = A3$298;
            this.A4$282 = A4$282;
            this.A5$266 = A5$266;
            this.A6$250 = A6$250;
            this.A7$234 = A7$234;
            this.A8$218 = A8$218;
            this.A9$202 = A9$202;
            this.A10$186 = A10$186;
            this.A11$170 = A11$170;
            this.A12$154 = A12$154;
            this.A13$138 = A13$138;
            this.A14$122 = A14$122;
            this.A15$106 = A15$106;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple17$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16) {
      return $this.catsKernelCommutativeGroupForTuple17(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple17(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) {
         private final CommutativeGroup A0$347;
         private final CommutativeGroup A1$331;
         private final CommutativeGroup A2$315;
         private final CommutativeGroup A3$299;
         private final CommutativeGroup A4$283;
         private final CommutativeGroup A5$267;
         private final CommutativeGroup A6$251;
         private final CommutativeGroup A7$235;
         private final CommutativeGroup A8$219;
         private final CommutativeGroup A9$203;
         private final CommutativeGroup A10$187;
         private final CommutativeGroup A11$171;
         private final CommutativeGroup A12$155;
         private final CommutativeGroup A13$139;
         private final CommutativeGroup A14$123;
         private final CommutativeGroup A15$107;
         private final CommutativeGroup A16$91;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple17 combine(final Tuple17 x, final Tuple17 y) {
            return new Tuple17(this.A0$347.combine(x._1(), y._1()), this.A1$331.combine(x._2(), y._2()), this.A2$315.combine(x._3(), y._3()), this.A3$299.combine(x._4(), y._4()), this.A4$283.combine(x._5(), y._5()), this.A5$267.combine(x._6(), y._6()), this.A6$251.combine(x._7(), y._7()), this.A7$235.combine(x._8(), y._8()), this.A8$219.combine(x._9(), y._9()), this.A9$203.combine(x._10(), y._10()), this.A10$187.combine(x._11(), y._11()), this.A11$171.combine(x._12(), y._12()), this.A12$155.combine(x._13(), y._13()), this.A13$139.combine(x._14(), y._14()), this.A14$123.combine(x._15(), y._15()), this.A15$107.combine(x._16(), y._16()), this.A16$91.combine(x._17(), y._17()));
         }

         public Tuple17 empty() {
            return new Tuple17(this.A0$347.empty(), this.A1$331.empty(), this.A2$315.empty(), this.A3$299.empty(), this.A4$283.empty(), this.A5$267.empty(), this.A6$251.empty(), this.A7$235.empty(), this.A8$219.empty(), this.A9$203.empty(), this.A10$187.empty(), this.A11$171.empty(), this.A12$155.empty(), this.A13$139.empty(), this.A14$123.empty(), this.A15$107.empty(), this.A16$91.empty());
         }

         public Tuple17 inverse(final Tuple17 x) {
            return new Tuple17(this.A0$347.inverse(x._1()), this.A1$331.inverse(x._2()), this.A2$315.inverse(x._3()), this.A3$299.inverse(x._4()), this.A4$283.inverse(x._5()), this.A5$267.inverse(x._6()), this.A6$251.inverse(x._7()), this.A7$235.inverse(x._8()), this.A8$219.inverse(x._9()), this.A9$203.inverse(x._10()), this.A10$187.inverse(x._11()), this.A11$171.inverse(x._12()), this.A12$155.inverse(x._13()), this.A13$139.inverse(x._14()), this.A14$123.inverse(x._15()), this.A15$107.inverse(x._16()), this.A16$91.inverse(x._17()));
         }

         public {
            this.A0$347 = A0$347;
            this.A1$331 = A1$331;
            this.A2$315 = A2$315;
            this.A3$299 = A3$299;
            this.A4$283 = A4$283;
            this.A5$267 = A5$267;
            this.A6$251 = A6$251;
            this.A7$235 = A7$235;
            this.A8$219 = A8$219;
            this.A9$203 = A9$203;
            this.A10$187 = A10$187;
            this.A11$171 = A11$171;
            this.A12$155 = A12$155;
            this.A13$139 = A13$139;
            this.A14$123 = A14$123;
            this.A15$107 = A15$107;
            this.A16$91 = A16$91;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple18$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17) {
      return $this.catsKernelCommutativeGroupForTuple18(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple18(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) {
         private final CommutativeGroup A0$348;
         private final CommutativeGroup A1$332;
         private final CommutativeGroup A2$316;
         private final CommutativeGroup A3$300;
         private final CommutativeGroup A4$284;
         private final CommutativeGroup A5$268;
         private final CommutativeGroup A6$252;
         private final CommutativeGroup A7$236;
         private final CommutativeGroup A8$220;
         private final CommutativeGroup A9$204;
         private final CommutativeGroup A10$188;
         private final CommutativeGroup A11$172;
         private final CommutativeGroup A12$156;
         private final CommutativeGroup A13$140;
         private final CommutativeGroup A14$124;
         private final CommutativeGroup A15$108;
         private final CommutativeGroup A16$92;
         private final CommutativeGroup A17$76;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple18 combine(final Tuple18 x, final Tuple18 y) {
            return new Tuple18(this.A0$348.combine(x._1(), y._1()), this.A1$332.combine(x._2(), y._2()), this.A2$316.combine(x._3(), y._3()), this.A3$300.combine(x._4(), y._4()), this.A4$284.combine(x._5(), y._5()), this.A5$268.combine(x._6(), y._6()), this.A6$252.combine(x._7(), y._7()), this.A7$236.combine(x._8(), y._8()), this.A8$220.combine(x._9(), y._9()), this.A9$204.combine(x._10(), y._10()), this.A10$188.combine(x._11(), y._11()), this.A11$172.combine(x._12(), y._12()), this.A12$156.combine(x._13(), y._13()), this.A13$140.combine(x._14(), y._14()), this.A14$124.combine(x._15(), y._15()), this.A15$108.combine(x._16(), y._16()), this.A16$92.combine(x._17(), y._17()), this.A17$76.combine(x._18(), y._18()));
         }

         public Tuple18 empty() {
            return new Tuple18(this.A0$348.empty(), this.A1$332.empty(), this.A2$316.empty(), this.A3$300.empty(), this.A4$284.empty(), this.A5$268.empty(), this.A6$252.empty(), this.A7$236.empty(), this.A8$220.empty(), this.A9$204.empty(), this.A10$188.empty(), this.A11$172.empty(), this.A12$156.empty(), this.A13$140.empty(), this.A14$124.empty(), this.A15$108.empty(), this.A16$92.empty(), this.A17$76.empty());
         }

         public Tuple18 inverse(final Tuple18 x) {
            return new Tuple18(this.A0$348.inverse(x._1()), this.A1$332.inverse(x._2()), this.A2$316.inverse(x._3()), this.A3$300.inverse(x._4()), this.A4$284.inverse(x._5()), this.A5$268.inverse(x._6()), this.A6$252.inverse(x._7()), this.A7$236.inverse(x._8()), this.A8$220.inverse(x._9()), this.A9$204.inverse(x._10()), this.A10$188.inverse(x._11()), this.A11$172.inverse(x._12()), this.A12$156.inverse(x._13()), this.A13$140.inverse(x._14()), this.A14$124.inverse(x._15()), this.A15$108.inverse(x._16()), this.A16$92.inverse(x._17()), this.A17$76.inverse(x._18()));
         }

         public {
            this.A0$348 = A0$348;
            this.A1$332 = A1$332;
            this.A2$316 = A2$316;
            this.A3$300 = A3$300;
            this.A4$284 = A4$284;
            this.A5$268 = A5$268;
            this.A6$252 = A6$252;
            this.A7$236 = A7$236;
            this.A8$220 = A8$220;
            this.A9$204 = A9$204;
            this.A10$188 = A10$188;
            this.A11$172 = A11$172;
            this.A12$156 = A12$156;
            this.A13$140 = A13$140;
            this.A14$124 = A14$124;
            this.A15$108 = A15$108;
            this.A16$92 = A16$92;
            this.A17$76 = A17$76;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple19$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18) {
      return $this.catsKernelCommutativeGroupForTuple19(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple19(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) {
         private final CommutativeGroup A0$349;
         private final CommutativeGroup A1$333;
         private final CommutativeGroup A2$317;
         private final CommutativeGroup A3$301;
         private final CommutativeGroup A4$285;
         private final CommutativeGroup A5$269;
         private final CommutativeGroup A6$253;
         private final CommutativeGroup A7$237;
         private final CommutativeGroup A8$221;
         private final CommutativeGroup A9$205;
         private final CommutativeGroup A10$189;
         private final CommutativeGroup A11$173;
         private final CommutativeGroup A12$157;
         private final CommutativeGroup A13$141;
         private final CommutativeGroup A14$125;
         private final CommutativeGroup A15$109;
         private final CommutativeGroup A16$93;
         private final CommutativeGroup A17$77;
         private final CommutativeGroup A18$61;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple19 combine(final Tuple19 x, final Tuple19 y) {
            return new Tuple19(this.A0$349.combine(x._1(), y._1()), this.A1$333.combine(x._2(), y._2()), this.A2$317.combine(x._3(), y._3()), this.A3$301.combine(x._4(), y._4()), this.A4$285.combine(x._5(), y._5()), this.A5$269.combine(x._6(), y._6()), this.A6$253.combine(x._7(), y._7()), this.A7$237.combine(x._8(), y._8()), this.A8$221.combine(x._9(), y._9()), this.A9$205.combine(x._10(), y._10()), this.A10$189.combine(x._11(), y._11()), this.A11$173.combine(x._12(), y._12()), this.A12$157.combine(x._13(), y._13()), this.A13$141.combine(x._14(), y._14()), this.A14$125.combine(x._15(), y._15()), this.A15$109.combine(x._16(), y._16()), this.A16$93.combine(x._17(), y._17()), this.A17$77.combine(x._18(), y._18()), this.A18$61.combine(x._19(), y._19()));
         }

         public Tuple19 empty() {
            return new Tuple19(this.A0$349.empty(), this.A1$333.empty(), this.A2$317.empty(), this.A3$301.empty(), this.A4$285.empty(), this.A5$269.empty(), this.A6$253.empty(), this.A7$237.empty(), this.A8$221.empty(), this.A9$205.empty(), this.A10$189.empty(), this.A11$173.empty(), this.A12$157.empty(), this.A13$141.empty(), this.A14$125.empty(), this.A15$109.empty(), this.A16$93.empty(), this.A17$77.empty(), this.A18$61.empty());
         }

         public Tuple19 inverse(final Tuple19 x) {
            return new Tuple19(this.A0$349.inverse(x._1()), this.A1$333.inverse(x._2()), this.A2$317.inverse(x._3()), this.A3$301.inverse(x._4()), this.A4$285.inverse(x._5()), this.A5$269.inverse(x._6()), this.A6$253.inverse(x._7()), this.A7$237.inverse(x._8()), this.A8$221.inverse(x._9()), this.A9$205.inverse(x._10()), this.A10$189.inverse(x._11()), this.A11$173.inverse(x._12()), this.A12$157.inverse(x._13()), this.A13$141.inverse(x._14()), this.A14$125.inverse(x._15()), this.A15$109.inverse(x._16()), this.A16$93.inverse(x._17()), this.A17$77.inverse(x._18()), this.A18$61.inverse(x._19()));
         }

         public {
            this.A0$349 = A0$349;
            this.A1$333 = A1$333;
            this.A2$317 = A2$317;
            this.A3$301 = A3$301;
            this.A4$285 = A4$285;
            this.A5$269 = A5$269;
            this.A6$253 = A6$253;
            this.A7$237 = A7$237;
            this.A8$221 = A8$221;
            this.A9$205 = A9$205;
            this.A10$189 = A10$189;
            this.A11$173 = A11$173;
            this.A12$157 = A12$157;
            this.A13$141 = A13$141;
            this.A14$125 = A14$125;
            this.A15$109 = A15$109;
            this.A16$93 = A16$93;
            this.A17$77 = A17$77;
            this.A18$61 = A18$61;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple20$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18, final CommutativeGroup A19) {
      return $this.catsKernelCommutativeGroupForTuple20(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple20(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18, final CommutativeGroup A19) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) {
         private final CommutativeGroup A0$350;
         private final CommutativeGroup A1$334;
         private final CommutativeGroup A2$318;
         private final CommutativeGroup A3$302;
         private final CommutativeGroup A4$286;
         private final CommutativeGroup A5$270;
         private final CommutativeGroup A6$254;
         private final CommutativeGroup A7$238;
         private final CommutativeGroup A8$222;
         private final CommutativeGroup A9$206;
         private final CommutativeGroup A10$190;
         private final CommutativeGroup A11$174;
         private final CommutativeGroup A12$158;
         private final CommutativeGroup A13$142;
         private final CommutativeGroup A14$126;
         private final CommutativeGroup A15$110;
         private final CommutativeGroup A16$94;
         private final CommutativeGroup A17$78;
         private final CommutativeGroup A18$62;
         private final CommutativeGroup A19$46;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple20 combine(final Tuple20 x, final Tuple20 y) {
            return new Tuple20(this.A0$350.combine(x._1(), y._1()), this.A1$334.combine(x._2(), y._2()), this.A2$318.combine(x._3(), y._3()), this.A3$302.combine(x._4(), y._4()), this.A4$286.combine(x._5(), y._5()), this.A5$270.combine(x._6(), y._6()), this.A6$254.combine(x._7(), y._7()), this.A7$238.combine(x._8(), y._8()), this.A8$222.combine(x._9(), y._9()), this.A9$206.combine(x._10(), y._10()), this.A10$190.combine(x._11(), y._11()), this.A11$174.combine(x._12(), y._12()), this.A12$158.combine(x._13(), y._13()), this.A13$142.combine(x._14(), y._14()), this.A14$126.combine(x._15(), y._15()), this.A15$110.combine(x._16(), y._16()), this.A16$94.combine(x._17(), y._17()), this.A17$78.combine(x._18(), y._18()), this.A18$62.combine(x._19(), y._19()), this.A19$46.combine(x._20(), y._20()));
         }

         public Tuple20 empty() {
            return new Tuple20(this.A0$350.empty(), this.A1$334.empty(), this.A2$318.empty(), this.A3$302.empty(), this.A4$286.empty(), this.A5$270.empty(), this.A6$254.empty(), this.A7$238.empty(), this.A8$222.empty(), this.A9$206.empty(), this.A10$190.empty(), this.A11$174.empty(), this.A12$158.empty(), this.A13$142.empty(), this.A14$126.empty(), this.A15$110.empty(), this.A16$94.empty(), this.A17$78.empty(), this.A18$62.empty(), this.A19$46.empty());
         }

         public Tuple20 inverse(final Tuple20 x) {
            return new Tuple20(this.A0$350.inverse(x._1()), this.A1$334.inverse(x._2()), this.A2$318.inverse(x._3()), this.A3$302.inverse(x._4()), this.A4$286.inverse(x._5()), this.A5$270.inverse(x._6()), this.A6$254.inverse(x._7()), this.A7$238.inverse(x._8()), this.A8$222.inverse(x._9()), this.A9$206.inverse(x._10()), this.A10$190.inverse(x._11()), this.A11$174.inverse(x._12()), this.A12$158.inverse(x._13()), this.A13$142.inverse(x._14()), this.A14$126.inverse(x._15()), this.A15$110.inverse(x._16()), this.A16$94.inverse(x._17()), this.A17$78.inverse(x._18()), this.A18$62.inverse(x._19()), this.A19$46.inverse(x._20()));
         }

         public {
            this.A0$350 = A0$350;
            this.A1$334 = A1$334;
            this.A2$318 = A2$318;
            this.A3$302 = A3$302;
            this.A4$286 = A4$286;
            this.A5$270 = A5$270;
            this.A6$254 = A6$254;
            this.A7$238 = A7$238;
            this.A8$222 = A8$222;
            this.A9$206 = A9$206;
            this.A10$190 = A10$190;
            this.A11$174 = A11$174;
            this.A12$158 = A12$158;
            this.A13$142 = A13$142;
            this.A14$126 = A14$126;
            this.A15$110 = A15$110;
            this.A16$94 = A16$94;
            this.A17$78 = A17$78;
            this.A18$62 = A18$62;
            this.A19$46 = A19$46;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple21$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18, final CommutativeGroup A19, final CommutativeGroup A20) {
      return $this.catsKernelCommutativeGroupForTuple21(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple21(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18, final CommutativeGroup A19, final CommutativeGroup A20) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) {
         private final CommutativeGroup A0$351;
         private final CommutativeGroup A1$335;
         private final CommutativeGroup A2$319;
         private final CommutativeGroup A3$303;
         private final CommutativeGroup A4$287;
         private final CommutativeGroup A5$271;
         private final CommutativeGroup A6$255;
         private final CommutativeGroup A7$239;
         private final CommutativeGroup A8$223;
         private final CommutativeGroup A9$207;
         private final CommutativeGroup A10$191;
         private final CommutativeGroup A11$175;
         private final CommutativeGroup A12$159;
         private final CommutativeGroup A13$143;
         private final CommutativeGroup A14$127;
         private final CommutativeGroup A15$111;
         private final CommutativeGroup A16$95;
         private final CommutativeGroup A17$79;
         private final CommutativeGroup A18$63;
         private final CommutativeGroup A19$47;
         private final CommutativeGroup A20$31;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple21 combine(final Tuple21 x, final Tuple21 y) {
            return new Tuple21(this.A0$351.combine(x._1(), y._1()), this.A1$335.combine(x._2(), y._2()), this.A2$319.combine(x._3(), y._3()), this.A3$303.combine(x._4(), y._4()), this.A4$287.combine(x._5(), y._5()), this.A5$271.combine(x._6(), y._6()), this.A6$255.combine(x._7(), y._7()), this.A7$239.combine(x._8(), y._8()), this.A8$223.combine(x._9(), y._9()), this.A9$207.combine(x._10(), y._10()), this.A10$191.combine(x._11(), y._11()), this.A11$175.combine(x._12(), y._12()), this.A12$159.combine(x._13(), y._13()), this.A13$143.combine(x._14(), y._14()), this.A14$127.combine(x._15(), y._15()), this.A15$111.combine(x._16(), y._16()), this.A16$95.combine(x._17(), y._17()), this.A17$79.combine(x._18(), y._18()), this.A18$63.combine(x._19(), y._19()), this.A19$47.combine(x._20(), y._20()), this.A20$31.combine(x._21(), y._21()));
         }

         public Tuple21 empty() {
            return new Tuple21(this.A0$351.empty(), this.A1$335.empty(), this.A2$319.empty(), this.A3$303.empty(), this.A4$287.empty(), this.A5$271.empty(), this.A6$255.empty(), this.A7$239.empty(), this.A8$223.empty(), this.A9$207.empty(), this.A10$191.empty(), this.A11$175.empty(), this.A12$159.empty(), this.A13$143.empty(), this.A14$127.empty(), this.A15$111.empty(), this.A16$95.empty(), this.A17$79.empty(), this.A18$63.empty(), this.A19$47.empty(), this.A20$31.empty());
         }

         public Tuple21 inverse(final Tuple21 x) {
            return new Tuple21(this.A0$351.inverse(x._1()), this.A1$335.inverse(x._2()), this.A2$319.inverse(x._3()), this.A3$303.inverse(x._4()), this.A4$287.inverse(x._5()), this.A5$271.inverse(x._6()), this.A6$255.inverse(x._7()), this.A7$239.inverse(x._8()), this.A8$223.inverse(x._9()), this.A9$207.inverse(x._10()), this.A10$191.inverse(x._11()), this.A11$175.inverse(x._12()), this.A12$159.inverse(x._13()), this.A13$143.inverse(x._14()), this.A14$127.inverse(x._15()), this.A15$111.inverse(x._16()), this.A16$95.inverse(x._17()), this.A17$79.inverse(x._18()), this.A18$63.inverse(x._19()), this.A19$47.inverse(x._20()), this.A20$31.inverse(x._21()));
         }

         public {
            this.A0$351 = A0$351;
            this.A1$335 = A1$335;
            this.A2$319 = A2$319;
            this.A3$303 = A3$303;
            this.A4$287 = A4$287;
            this.A5$271 = A5$271;
            this.A6$255 = A6$255;
            this.A7$239 = A7$239;
            this.A8$223 = A8$223;
            this.A9$207 = A9$207;
            this.A10$191 = A10$191;
            this.A11$175 = A11$175;
            this.A12$159 = A12$159;
            this.A13$143 = A13$143;
            this.A14$127 = A14$127;
            this.A15$111 = A15$111;
            this.A16$95 = A16$95;
            this.A17$79 = A17$79;
            this.A18$63 = A18$63;
            this.A19$47 = A19$47;
            this.A20$31 = A20$31;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup catsKernelCommutativeGroupForTuple22$(final TupleCommutativeGroupInstances $this, final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18, final CommutativeGroup A19, final CommutativeGroup A20, final CommutativeGroup A21) {
      return $this.catsKernelCommutativeGroupForTuple22(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21);
   }

   default CommutativeGroup catsKernelCommutativeGroupForTuple22(final CommutativeGroup A0, final CommutativeGroup A1, final CommutativeGroup A2, final CommutativeGroup A3, final CommutativeGroup A4, final CommutativeGroup A5, final CommutativeGroup A6, final CommutativeGroup A7, final CommutativeGroup A8, final CommutativeGroup A9, final CommutativeGroup A10, final CommutativeGroup A11, final CommutativeGroup A12, final CommutativeGroup A13, final CommutativeGroup A14, final CommutativeGroup A15, final CommutativeGroup A16, final CommutativeGroup A17, final CommutativeGroup A18, final CommutativeGroup A19, final CommutativeGroup A20, final CommutativeGroup A21) {
      return new CommutativeGroup(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) {
         private final CommutativeGroup A0$352;
         private final CommutativeGroup A1$336;
         private final CommutativeGroup A2$320;
         private final CommutativeGroup A3$304;
         private final CommutativeGroup A4$288;
         private final CommutativeGroup A5$272;
         private final CommutativeGroup A6$256;
         private final CommutativeGroup A7$240;
         private final CommutativeGroup A8$224;
         private final CommutativeGroup A9$208;
         private final CommutativeGroup A10$192;
         private final CommutativeGroup A11$176;
         private final CommutativeGroup A12$160;
         private final CommutativeGroup A13$144;
         private final CommutativeGroup A14$128;
         private final CommutativeGroup A15$112;
         private final CommutativeGroup A16$96;
         private final CommutativeGroup A17$80;
         private final CommutativeGroup A18$64;
         private final CommutativeGroup A19$48;
         private final CommutativeGroup A20$32;
         private final CommutativeGroup A21$16;

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Tuple22 combine(final Tuple22 x, final Tuple22 y) {
            return new Tuple22(this.A0$352.combine(x._1(), y._1()), this.A1$336.combine(x._2(), y._2()), this.A2$320.combine(x._3(), y._3()), this.A3$304.combine(x._4(), y._4()), this.A4$288.combine(x._5(), y._5()), this.A5$272.combine(x._6(), y._6()), this.A6$256.combine(x._7(), y._7()), this.A7$240.combine(x._8(), y._8()), this.A8$224.combine(x._9(), y._9()), this.A9$208.combine(x._10(), y._10()), this.A10$192.combine(x._11(), y._11()), this.A11$176.combine(x._12(), y._12()), this.A12$160.combine(x._13(), y._13()), this.A13$144.combine(x._14(), y._14()), this.A14$128.combine(x._15(), y._15()), this.A15$112.combine(x._16(), y._16()), this.A16$96.combine(x._17(), y._17()), this.A17$80.combine(x._18(), y._18()), this.A18$64.combine(x._19(), y._19()), this.A19$48.combine(x._20(), y._20()), this.A20$32.combine(x._21(), y._21()), this.A21$16.combine(x._22(), y._22()));
         }

         public Tuple22 empty() {
            return new Tuple22(this.A0$352.empty(), this.A1$336.empty(), this.A2$320.empty(), this.A3$304.empty(), this.A4$288.empty(), this.A5$272.empty(), this.A6$256.empty(), this.A7$240.empty(), this.A8$224.empty(), this.A9$208.empty(), this.A10$192.empty(), this.A11$176.empty(), this.A12$160.empty(), this.A13$144.empty(), this.A14$128.empty(), this.A15$112.empty(), this.A16$96.empty(), this.A17$80.empty(), this.A18$64.empty(), this.A19$48.empty(), this.A20$32.empty(), this.A21$16.empty());
         }

         public Tuple22 inverse(final Tuple22 x) {
            return new Tuple22(this.A0$352.inverse(x._1()), this.A1$336.inverse(x._2()), this.A2$320.inverse(x._3()), this.A3$304.inverse(x._4()), this.A4$288.inverse(x._5()), this.A5$272.inverse(x._6()), this.A6$256.inverse(x._7()), this.A7$240.inverse(x._8()), this.A8$224.inverse(x._9()), this.A9$208.inverse(x._10()), this.A10$192.inverse(x._11()), this.A11$176.inverse(x._12()), this.A12$160.inverse(x._13()), this.A13$144.inverse(x._14()), this.A14$128.inverse(x._15()), this.A15$112.inverse(x._16()), this.A16$96.inverse(x._17()), this.A17$80.inverse(x._18()), this.A18$64.inverse(x._19()), this.A19$48.inverse(x._20()), this.A20$32.inverse(x._21()), this.A21$16.inverse(x._22()));
         }

         public {
            this.A0$352 = A0$352;
            this.A1$336 = A1$336;
            this.A2$320 = A2$320;
            this.A3$304 = A3$304;
            this.A4$288 = A4$288;
            this.A5$272 = A5$272;
            this.A6$256 = A6$256;
            this.A7$240 = A7$240;
            this.A8$224 = A8$224;
            this.A9$208 = A9$208;
            this.A10$192 = A10$192;
            this.A11$176 = A11$176;
            this.A12$160 = A12$160;
            this.A13$144 = A13$144;
            this.A14$128 = A14$128;
            this.A15$112 = A15$112;
            this.A16$96 = A16$96;
            this.A17$80 = A17$80;
            this.A18$64 = A18$64;
            this.A19$48 = A19$48;
            this.A20$32 = A20$32;
            this.A21$16 = A21$16;
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
         }
      };
   }

   static void $init$(final TupleCommutativeGroupInstances $this) {
   }
}
