package spire.algebra;

import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u0005\u00054qAB\u0004\u0011\u0002G\u0005AbB\u0003:\u000f!\u0005!HB\u0003\u0007\u000f!\u00051\bC\u0003H\u0005\u0011\u0005\u0001\nC\u0003J\u0005\u0011\u0015!\nC\u0004Z\u0005\u0005\u0005I\u0011\u0002.\u0003/\u0019KW\r\u001c3BgN|7-[1uSZ,\u0017\t\\4fEJ\f'B\u0001\u0005\n\u0003\u001d\tGnZ3ce\u0006T\u0011AC\u0001\u0006gBL'/Z\u0002\u0001+\ri!$I\n\u0005\u00019!b\u0007\u0005\u0002\u0010%5\t\u0001CC\u0001\u0012\u0003\u0015\u00198-\u00197b\u0013\t\u0019\u0002CA\u0002B]f\u0004B!\u0006\f\u0019A5\tq!\u0003\u0002\u0018\u000f\t1\"+\u001b8h\u0003N\u001cxnY5bi&4X-\u00117hK\n\u0014\u0018\r\u0005\u0002\u001a51\u0001A!B\u000e\u0001\u0005\u0004a\"!\u0001,\u0012\u0005uq\u0001CA\b\u001f\u0013\ty\u0002CA\u0004O_RD\u0017N\\4\u0011\u0005e\tC!\u0003\u0012\u0001A\u0003\u0005\tQ1\u0001\u001d\u0005\u00051\u0005\u0006B\u0011%OE\u0002\"aD\u0013\n\u0005\u0019\u0002\"aC:qK\u000eL\u0017\r\\5{K\u0012\fTa\t\u0015*W)r!aD\u0015\n\u0005)\u0002\u0012!\u0002$m_\u0006$\u0018\u0007\u0002\u0013-aEq!!\f\u0019\u000e\u00039R!aL\u0006\u0002\rq\u0012xn\u001c;?\u0013\u0005\t\u0012'B\u00123gU\"dBA\b4\u0013\t!\u0004#\u0001\u0004E_V\u0014G.Z\u0019\u0005I1\u0002\u0014\u0003\u0005\u0003\u0016oa\u0001\u0013B\u0001\u001d\b\u0005-1Vm\u0019;peN\u0003\u0018mY3\u0002/\u0019KW\r\u001c3BgN|7-[1uSZ,\u0017\t\\4fEJ\f\u0007CA\u000b\u0003'\r\u0011Ah\u0010\t\u0003\u001fuJ!A\u0010\t\u0003\r\u0005s\u0017PU3g!\t\u0001U)D\u0001B\u0015\t\u00115)\u0001\u0002j_*\tA)\u0001\u0003kCZ\f\u0017B\u0001$B\u00051\u0019VM]5bY&T\u0018M\u00197f\u0003\u0019a\u0014N\\5u}Q\t!(A\u0003baBd\u00170F\u0002L\u001dB#\"\u0001T*\u0011\tU\u0001Qj\u0014\t\u000339#Qa\u0007\u0003C\u0002q\u0001\"!\u0007)\u0005\u0013E#\u0001\u0015!A\u0001\u0006\u0004a\"!\u0001*)\u0005A#\u0003\"\u0002+\u0005\u0001\ba\u0015!\u0001,)\u0005\u00111\u0006CA\bX\u0013\tA\u0006C\u0001\u0004j]2Lg.Z\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u00027B\u0011AlX\u0007\u0002;*\u0011alQ\u0001\u0005Y\u0006tw-\u0003\u0002a;\n1qJ\u00196fGR\u0004"
)
public interface FieldAssociativeAlgebra extends RingAssociativeAlgebra, VectorSpace {
   static FieldAssociativeAlgebra apply(final FieldAssociativeAlgebra V) {
      return FieldAssociativeAlgebra$.MODULE$.apply(V);
   }
}
