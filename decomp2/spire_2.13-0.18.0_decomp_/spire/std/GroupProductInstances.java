package spire.std;

import cats.kernel.Eq;
import cats.kernel.Group;
import cats.kernel.Monoid;
import cats.kernel.Semigroup;
import scala.Option;
import scala.Tuple10;
import scala.Tuple11;
import scala.Tuple12;
import scala.Tuple13;
import scala.Tuple14;
import scala.Tuple15;
import scala.Tuple16;
import scala.Tuple17;
import scala.Tuple18;
import scala.Tuple19;
import scala.Tuple2;
import scala.Tuple20;
import scala.Tuple21;
import scala.Tuple22;
import scala.Tuple3;
import scala.Tuple4;
import scala.Tuple5;
import scala.Tuple6;
import scala.Tuple7;
import scala.Tuple8;
import scala.Tuple9;
import scala.collection.IterableOnce;
import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u0005)\u0015baB\f\u0019!\u0003\r\t!\b\u0005\u0006I\u0001!\t!\n\u0005\u0006S\u0001!\u0019A\u000b\u0005\u0006m\u0002!\u0019a\u001e\u0005\b\u0003/\u0001A1AA\r\u0011\u001d\tI\u0005\u0001C\u0002\u0003\u0017Bq!a!\u0001\t\u0007\t)\tC\u0004\u0002F\u0002!\u0019!a2\t\u000f\t=\u0001\u0001b\u0001\u0003\u0012!9!\u0011\r\u0001\u0005\u0004\t\r\u0004b\u0002B^\u0001\u0011\r!Q\u0018\u0005\b\u0007;\u0001A1AB\u0010\u0011\u001d\u00199\t\u0001C\u0002\u0007\u0013Cqa!?\u0001\t\u0007\u0019Y\u0010C\u0004\u0005t\u0001!\u0019\u0001\"\u001e\t\u000f\u0011U\b\u0001b\u0001\u0005x\"9Qq\u0010\u0001\u0005\u0004\u0015\u0005\u0005b\u0002D\t\u0001\u0011\ra1\u0003\u0005\b\rW\u0003A1\u0001DW\u0011\u001d9i\u0005\u0001C\u0002\u000f\u001fBqab>\u0001\t\u00079I\u0010C\u0004\t*\u0002!\u0019\u0001c+\t\u000f%\r\u0004\u0001b\u0001\nf\t)rI]8vaB\u0013x\u000eZ;di&s7\u000f^1oG\u0016\u001c(BA\r\u001b\u0003\r\u0019H\u000f\u001a\u0006\u00027\u0005)1\u000f]5sK\u000e\u00011C\u0001\u0001\u001f!\ty\"%D\u0001!\u0015\u0005\t\u0013!B:dC2\f\u0017BA\u0012!\u0005\u0019\te.\u001f*fM\u00061A%\u001b8ji\u0012\"\u0012A\n\t\u0003?\u001dJ!\u0001\u000b\u0011\u0003\tUs\u0017\u000e^\u0001\u000e\u000fJ|W\u000f\u001d)s_\u0012,8\r\u001e\u001a\u0016\u0007-\nU\rF\u0002-aN\u00042!L\u001d=\u001d\tqcG\u0004\u00020i9\u0011\u0001gM\u0007\u0002c)\u0011!\u0007H\u0001\u0007yI|w\u000e\u001e \n\u0003mI!!\u000e\u000e\u0002\u000f\u0005dw-\u001a2sC&\u0011q\u0007O\u0001\ba\u0006\u001c7.Y4f\u0015\t)$$\u0003\u0002;w\t)qI]8va*\u0011q\u0007\u000f\t\u0005?uzD-\u0003\u0002?A\t1A+\u001e9mKJ\u0002\"\u0001Q!\r\u0001\u0011I!I\u0001Q\u0001\u0002\u0003\u0015\ra\u0011\u0002\u0002\u0003F\u0011Ai\u0012\t\u0003?\u0015K!A\u0012\u0011\u0003\u000f9{G\u000f[5oOB\u0011q\u0004S\u0005\u0003\u0013\u0002\u00121!\u00118zQ\u0019\t5JT+[?B\u0011q\u0004T\u0005\u0003\u001b\u0002\u00121b\u001d9fG&\fG.\u001b>fIF*1e\u0014)S#:\u0011q\u0004U\u0005\u0003#\u0002\n1!\u00138uc\u0011!3\u000bV\u0011\u000f\u0005A\"\u0016\"A\u00112\u000b\r2v+\u0017-\u000f\u0005}9\u0016B\u0001-!\u0003\u0011auN\\42\t\u0011\u001aF+I\u0019\u0006Gmcf,\u0018\b\u0003?qK!!\u0018\u0011\u0002\u000b\u0019cw.\u0019;2\t\u0011\u001aF+I\u0019\u0006G\u0001\f7M\u0019\b\u0003?\u0005L!A\u0019\u0011\u0002\r\u0011{WO\u00197fc\u0011!3\u000bV\u0011\u0011\u0005\u0001+G!\u00034\u0003A\u0003\u0005\tQ1\u0001D\u0005\u0005\u0011\u0005FB3LQ*dg.M\u0003$\u001fBK\u0017+\r\u0003%'R\u000b\u0013'B\u0012W/.D\u0016\u0007\u0002\u0013T)\u0006\nTaI.][v\u000bD\u0001J*UCE*1\u0005Y1pEF\"Ae\u0015+\"\u0011\u0015\t(\u0001q\u0001s\u0003-y6\u000f\u001e:vGR,(/Z\u0019\u0011\u00075Jt\bC\u0003u\u0005\u0001\u000fQ/A\u0006`gR\u0014Xo\u0019;ve\u0016\u0014\u0004cA\u0017:I\u0006iqI]8vaB\u0013x\u000eZ;diN*b\u0001\u001f@\u0002\u0002\u0005\u0015AcB=\u0002\n\u00055\u0011\u0011\u0003\t\u0004[eR\bCB\u0010|{~\f\u0019!\u0003\u0002}A\t1A+\u001e9mKN\u0002\"\u0001\u0011@\u0005\u000b\t\u001b!\u0019A\"\u0011\u0007\u0001\u000b\t\u0001B\u0003g\u0007\t\u00071\tE\u0002A\u0003\u000b!a!a\u0002\u0004\u0005\u0004\u0019%!A\"\t\rE\u001c\u00019AA\u0006!\ri\u0013( \u0005\u0007i\u000e\u0001\u001d!a\u0004\u0011\u00075Jt\u0010C\u0004\u0002\u0014\r\u0001\u001d!!\u0006\u0002\u0017}\u001bHO];diV\u0014Xm\r\t\u0005[e\n\u0019!A\u0007He>,\b\u000f\u0015:pIV\u001cG\u000fN\u000b\u000b\u00037\t9#a\u000b\u00020\u0005MBCCA\u000f\u0003o\tY$a\u0010\u0002DA!Q&OA\u0010!-y\u0012\u0011EA\u0013\u0003S\ti#!\r\n\u0007\u0005\r\u0002E\u0001\u0004UkBdW\r\u000e\t\u0004\u0001\u0006\u001dB!\u0002\"\u0005\u0005\u0004\u0019\u0005c\u0001!\u0002,\u0011)a\r\u0002b\u0001\u0007B\u0019\u0001)a\f\u0005\r\u0005\u001dAA1\u0001D!\r\u0001\u00151\u0007\u0003\u0007\u0003k!!\u0019A\"\u0003\u0003\u0011Ca!\u001d\u0003A\u0004\u0005e\u0002\u0003B\u0017:\u0003KAa\u0001\u001e\u0003A\u0004\u0005u\u0002\u0003B\u0017:\u0003SAq!a\u0005\u0005\u0001\b\t\t\u0005\u0005\u0003.s\u00055\u0002bBA#\t\u0001\u000f\u0011qI\u0001\f?N$(/^2ukJ,G\u0007\u0005\u0003.s\u0005E\u0012!D$s_V\u0004\bK]8ek\u000e$X'\u0006\u0007\u0002N\u0005e\u0013QLA1\u0003K\nI\u0007\u0006\u0007\u0002P\u00055\u0014\u0011OA;\u0003s\ni\b\u0005\u0003.s\u0005E\u0003#D\u0010\u0002T\u0005]\u00131LA0\u0003G\n9'C\u0002\u0002V\u0001\u0012a\u0001V;qY\u0016,\u0004c\u0001!\u0002Z\u0011)!)\u0002b\u0001\u0007B\u0019\u0001)!\u0018\u0005\u000b\u0019,!\u0019A\"\u0011\u0007\u0001\u000b\t\u0007\u0002\u0004\u0002\b\u0015\u0011\ra\u0011\t\u0004\u0001\u0006\u0015DABA\u001b\u000b\t\u00071\tE\u0002A\u0003S\"a!a\u001b\u0006\u0005\u0004\u0019%!A#\t\rE,\u00019AA8!\u0011i\u0013(a\u0016\t\rQ,\u00019AA:!\u0011i\u0013(a\u0017\t\u000f\u0005MQ\u0001q\u0001\u0002xA!Q&OA0\u0011\u001d\t)%\u0002a\u0002\u0003w\u0002B!L\u001d\u0002d!9\u0011qP\u0003A\u0004\u0005\u0005\u0015aC0tiJ,8\r^;sKV\u0002B!L\u001d\u0002h\u0005iqI]8vaB\u0013x\u000eZ;diZ*b\"a\"\u0002\u0014\u0006]\u00151TAP\u0003G\u000b9\u000b\u0006\b\u0002\n\u0006-\u0016qVAZ\u0003o\u000bY,a0\u0011\t5J\u00141\u0012\t\u0010?\u00055\u0015\u0011SAK\u00033\u000bi*!)\u0002&&\u0019\u0011q\u0012\u0011\u0003\rQ+\b\u000f\\37!\r\u0001\u00151\u0013\u0003\u0006\u0005\u001a\u0011\ra\u0011\t\u0004\u0001\u0006]E!\u00024\u0007\u0005\u0004\u0019\u0005c\u0001!\u0002\u001c\u00121\u0011q\u0001\u0004C\u0002\r\u00032\u0001QAP\t\u0019\t)D\u0002b\u0001\u0007B\u0019\u0001)a)\u0005\r\u0005-dA1\u0001D!\r\u0001\u0015q\u0015\u0003\u0007\u0003S3!\u0019A\"\u0003\u0003\u0019Ca!\u001d\u0004A\u0004\u00055\u0006\u0003B\u0017:\u0003#Ca\u0001\u001e\u0004A\u0004\u0005E\u0006\u0003B\u0017:\u0003+Cq!a\u0005\u0007\u0001\b\t)\f\u0005\u0003.s\u0005e\u0005bBA#\r\u0001\u000f\u0011\u0011\u0018\t\u0005[e\ni\nC\u0004\u0002\u0000\u0019\u0001\u001d!!0\u0011\t5J\u0014\u0011\u0015\u0005\b\u0003\u00034\u00019AAb\u0003-y6\u000f\u001e:vGR,(/\u001a\u001c\u0011\t5J\u0014QU\u0001\u000e\u000fJ|W\u000f\u001d)s_\u0012,8\r^\u001c\u0016!\u0005%\u0017Q[Am\u0003;\f\t/!:\u0002j\u00065H\u0003EAf\u0003c\f)0!?\u0002~\n\u0005!Q\u0001B\u0005!\u0011i\u0013(!4\u0011#}\ty-a5\u0002X\u0006m\u0017q\\Ar\u0003O\fY/C\u0002\u0002R\u0002\u0012a\u0001V;qY\u0016<\u0004c\u0001!\u0002V\u0012)!i\u0002b\u0001\u0007B\u0019\u0001)!7\u0005\u000b\u0019<!\u0019A\"\u0011\u0007\u0001\u000bi\u000e\u0002\u0004\u0002\b\u001d\u0011\ra\u0011\t\u0004\u0001\u0006\u0005HABA\u001b\u000f\t\u00071\tE\u0002A\u0003K$a!a\u001b\b\u0005\u0004\u0019\u0005c\u0001!\u0002j\u00121\u0011\u0011V\u0004C\u0002\r\u00032\u0001QAw\t\u0019\tyo\u0002b\u0001\u0007\n\tq\t\u0003\u0004r\u000f\u0001\u000f\u00111\u001f\t\u0005[e\n\u0019\u000e\u0003\u0004u\u000f\u0001\u000f\u0011q\u001f\t\u0005[e\n9\u000eC\u0004\u0002\u0014\u001d\u0001\u001d!a?\u0011\t5J\u00141\u001c\u0005\b\u0003\u000b:\u00019AA\u0000!\u0011i\u0013(a8\t\u000f\u0005}t\u0001q\u0001\u0003\u0004A!Q&OAr\u0011\u001d\t\tm\u0002a\u0002\u0005\u000f\u0001B!L\u001d\u0002h\"9!1B\u0004A\u0004\t5\u0011aC0tiJ,8\r^;sK^\u0002B!L\u001d\u0002l\u0006iqI]8vaB\u0013x\u000eZ;dib*\"Ca\u0005\u0003 \t\r\"q\u0005B\u0016\u0005_\u0011\u0019Da\u000e\u0003<Q\u0011\"Q\u0003B \u0005\u0007\u00129Ea\u0013\u0003P\tM#q\u000bB.!\u0011i\u0013Ha\u0006\u0011'}\u0011IB!\b\u0003\"\t\u0015\"\u0011\u0006B\u0017\u0005c\u0011)D!\u000f\n\u0007\tm\u0001E\u0001\u0004UkBdW\r\u000f\t\u0004\u0001\n}A!\u0002\"\t\u0005\u0004\u0019\u0005c\u0001!\u0003$\u0011)a\r\u0003b\u0001\u0007B\u0019\u0001Ia\n\u0005\r\u0005\u001d\u0001B1\u0001D!\r\u0001%1\u0006\u0003\u0007\u0003kA!\u0019A\"\u0011\u0007\u0001\u0013y\u0003\u0002\u0004\u0002l!\u0011\ra\u0011\t\u0004\u0001\nMBABAU\u0011\t\u00071\tE\u0002A\u0005o!a!a<\t\u0005\u0004\u0019\u0005c\u0001!\u0003<\u00111!Q\b\u0005C\u0002\r\u0013\u0011\u0001\u0013\u0005\u0007c\"\u0001\u001dA!\u0011\u0011\t5J$Q\u0004\u0005\u0007i\"\u0001\u001dA!\u0012\u0011\t5J$\u0011\u0005\u0005\b\u0003'A\u00019\u0001B%!\u0011i\u0013H!\n\t\u000f\u0005\u0015\u0003\u0002q\u0001\u0003NA!Q&\u000fB\u0015\u0011\u001d\ty\b\u0003a\u0002\u0005#\u0002B!L\u001d\u0003.!9\u0011\u0011\u0019\u0005A\u0004\tU\u0003\u0003B\u0017:\u0005cAqAa\u0003\t\u0001\b\u0011I\u0006\u0005\u0003.s\tU\u0002b\u0002B/\u0011\u0001\u000f!qL\u0001\f?N$(/^2ukJ,\u0007\b\u0005\u0003.s\te\u0012!D$s_V\u0004\bK]8ek\u000e$\u0018(\u0006\u000b\u0003f\tE$Q\u000fB=\u0005{\u0012\tI!\"\u0003\n\n5%\u0011\u0013\u000b\u0015\u0005O\u0012)J!'\u0003\u001e\n\u0005&Q\u0015BU\u0005[\u0013\tL!.\u0011\t5J$\u0011\u000e\t\u0016?\t-$q\u000eB:\u0005o\u0012YHa \u0003\u0004\n\u001d%1\u0012BH\u0013\r\u0011i\u0007\t\u0002\u0007)V\u0004H.Z\u001d\u0011\u0007\u0001\u0013\t\bB\u0003C\u0013\t\u00071\tE\u0002A\u0005k\"QAZ\u0005C\u0002\r\u00032\u0001\u0011B=\t\u0019\t9!\u0003b\u0001\u0007B\u0019\u0001I! \u0005\r\u0005U\u0012B1\u0001D!\r\u0001%\u0011\u0011\u0003\u0007\u0003WJ!\u0019A\"\u0011\u0007\u0001\u0013)\t\u0002\u0004\u0002*&\u0011\ra\u0011\t\u0004\u0001\n%EABAx\u0013\t\u00071\tE\u0002A\u0005\u001b#aA!\u0010\n\u0005\u0004\u0019\u0005c\u0001!\u0003\u0012\u00121!1S\u0005C\u0002\r\u0013\u0011!\u0013\u0005\u0007c&\u0001\u001dAa&\u0011\t5J$q\u000e\u0005\u0007i&\u0001\u001dAa'\u0011\t5J$1\u000f\u0005\b\u0003'I\u00019\u0001BP!\u0011i\u0013Ha\u001e\t\u000f\u0005\u0015\u0013\u0002q\u0001\u0003$B!Q&\u000fB>\u0011\u001d\ty(\u0003a\u0002\u0005O\u0003B!L\u001d\u0003\u0000!9\u0011\u0011Y\u0005A\u0004\t-\u0006\u0003B\u0017:\u0005\u0007CqAa\u0003\n\u0001\b\u0011y\u000b\u0005\u0003.s\t\u001d\u0005b\u0002B/\u0013\u0001\u000f!1\u0017\t\u0005[e\u0012Y\tC\u0004\u00038&\u0001\u001dA!/\u0002\u0017}\u001bHO];diV\u0014X-\u000f\t\u0005[e\u0012y)\u0001\bHe>,\b\u000f\u0015:pIV\u001cG/\r\u0019\u0016-\t}&1\u001aBh\u0005'\u00149Na7\u0003`\n\r(q\u001dBv\u0005_$bC!1\u0003t\n](1 B\u0000\u0007\u0007\u00199aa\u0003\u0004\u0010\rM1q\u0003\t\u0005[e\u0012\u0019\rE\f \u0005\u000b\u0014IM!4\u0003R\nU'\u0011\u001cBo\u0005C\u0014)O!;\u0003n&\u0019!q\u0019\u0011\u0003\u000fQ+\b\u000f\\32aA\u0019\u0001Ia3\u0005\u000b\tS!\u0019A\"\u0011\u0007\u0001\u0013y\rB\u0003g\u0015\t\u00071\tE\u0002A\u0005'$a!a\u0002\u000b\u0005\u0004\u0019\u0005c\u0001!\u0003X\u00121\u0011Q\u0007\u0006C\u0002\r\u00032\u0001\u0011Bn\t\u0019\tYG\u0003b\u0001\u0007B\u0019\u0001Ia8\u0005\r\u0005%&B1\u0001D!\r\u0001%1\u001d\u0003\u0007\u0003_T!\u0019A\"\u0011\u0007\u0001\u00139\u000f\u0002\u0004\u0003>)\u0011\ra\u0011\t\u0004\u0001\n-HA\u0002BJ\u0015\t\u00071\tE\u0002A\u0005_$aA!=\u000b\u0005\u0004\u0019%!\u0001&\t\rET\u00019\u0001B{!\u0011i\u0013H!3\t\rQT\u00019\u0001B}!\u0011i\u0013H!4\t\u000f\u0005M!\u0002q\u0001\u0003~B!Q&\u000fBi\u0011\u001d\t)E\u0003a\u0002\u0007\u0003\u0001B!L\u001d\u0003V\"9\u0011q\u0010\u0006A\u0004\r\u0015\u0001\u0003B\u0017:\u00053Dq!!1\u000b\u0001\b\u0019I\u0001\u0005\u0003.s\tu\u0007b\u0002B\u0006\u0015\u0001\u000f1Q\u0002\t\u0005[e\u0012\t\u000fC\u0004\u0003^)\u0001\u001da!\u0005\u0011\t5J$Q\u001d\u0005\b\u0005oS\u00019AB\u000b!\u0011i\u0013H!;\t\u000f\re!\u0002q\u0001\u0004\u001c\u0005aql\u001d;sk\u000e$XO]32aA!Q&\u000fBw\u000399%o\\;q!J|G-^2ucE*\u0002d!\t\u0004.\rE2QGB\u001d\u0007{\u0019\te!\u0012\u0004J\r53\u0011KB+)a\u0019\u0019c!\u0017\u0004^\r\u00054QMB5\u0007[\u001a\th!\u001e\u0004z\ru4\u0011\u0011\t\u0005[e\u001a)\u0003E\r \u0007O\u0019Yca\f\u00044\r]21HB \u0007\u0007\u001a9ea\u0013\u0004P\rM\u0013bAB\u0015A\t9A+\u001e9mKF\n\u0004c\u0001!\u0004.\u0011)!i\u0003b\u0001\u0007B\u0019\u0001i!\r\u0005\u000b\u0019\\!\u0019A\"\u0011\u0007\u0001\u001b)\u0004\u0002\u0004\u0002\b-\u0011\ra\u0011\t\u0004\u0001\u000eeBABA\u001b\u0017\t\u00071\tE\u0002A\u0007{!a!a\u001b\f\u0005\u0004\u0019\u0005c\u0001!\u0004B\u00111\u0011\u0011V\u0006C\u0002\r\u00032\u0001QB#\t\u0019\tyo\u0003b\u0001\u0007B\u0019\u0001i!\u0013\u0005\r\tu2B1\u0001D!\r\u00015Q\n\u0003\u0007\u0005'[!\u0019A\"\u0011\u0007\u0001\u001b\t\u0006\u0002\u0004\u0003r.\u0011\ra\u0011\t\u0004\u0001\u000eUCABB,\u0017\t\u00071IA\u0001L\u0011\u0019\t8\u0002q\u0001\u0004\\A!Q&OB\u0016\u0011\u0019!8\u0002q\u0001\u0004`A!Q&OB\u0018\u0011\u001d\t\u0019b\u0003a\u0002\u0007G\u0002B!L\u001d\u00044!9\u0011QI\u0006A\u0004\r\u001d\u0004\u0003B\u0017:\u0007oAq!a \f\u0001\b\u0019Y\u0007\u0005\u0003.s\rm\u0002bBAa\u0017\u0001\u000f1q\u000e\t\u0005[e\u001ay\u0004C\u0004\u0003\f-\u0001\u001daa\u001d\u0011\t5J41\t\u0005\b\u0005;Z\u00019AB<!\u0011i\u0013ha\u0012\t\u000f\t]6\u0002q\u0001\u0004|A!Q&OB&\u0011\u001d\u0019Ib\u0003a\u0002\u0007\u007f\u0002B!L\u001d\u0004P!911Q\u0006A\u0004\r\u0015\u0015\u0001D0tiJ,8\r^;sKF\n\u0004\u0003B\u0017:\u0007'\nab\u0012:pkB\u0004&o\u001c3vGR\f$'\u0006\u000e\u0004\f\u000e]51TBP\u0007G\u001b9ka+\u00040\u000eM6qWB^\u0007\u007f\u001b\u0019\r\u0006\u000e\u0004\u000e\u000e\u001d71ZBh\u0007'\u001c9na7\u0004`\u000e\r8q]Bv\u0007_\u001c\u0019\u0010\u0005\u0003.s\r=\u0005cG\u0010\u0004\u0012\u000eU5\u0011TBO\u0007C\u001b)k!+\u0004.\u000eE6QWB]\u0007{\u001b\t-C\u0002\u0004\u0014\u0002\u0012q\u0001V;qY\u0016\f$\u0007E\u0002A\u0007/#QA\u0011\u0007C\u0002\r\u00032\u0001QBN\t\u00151GB1\u0001D!\r\u00015q\u0014\u0003\u0007\u0003\u000fa!\u0019A\"\u0011\u0007\u0001\u001b\u0019\u000b\u0002\u0004\u000261\u0011\ra\u0011\t\u0004\u0001\u000e\u001dFABA6\u0019\t\u00071\tE\u0002A\u0007W#a!!+\r\u0005\u0004\u0019\u0005c\u0001!\u00040\u00121\u0011q\u001e\u0007C\u0002\r\u00032\u0001QBZ\t\u0019\u0011i\u0004\u0004b\u0001\u0007B\u0019\u0001ia.\u0005\r\tMEB1\u0001D!\r\u000151\u0018\u0003\u0007\u0005cd!\u0019A\"\u0011\u0007\u0001\u001by\f\u0002\u0004\u0004X1\u0011\ra\u0011\t\u0004\u0001\u000e\rGABBc\u0019\t\u00071IA\u0001M\u0011\u0019\tH\u0002q\u0001\u0004JB!Q&OBK\u0011\u0019!H\u0002q\u0001\u0004NB!Q&OBM\u0011\u001d\t\u0019\u0002\u0004a\u0002\u0007#\u0004B!L\u001d\u0004\u001e\"9\u0011Q\t\u0007A\u0004\rU\u0007\u0003B\u0017:\u0007CCq!a \r\u0001\b\u0019I\u000e\u0005\u0003.s\r\u0015\u0006bBAa\u0019\u0001\u000f1Q\u001c\t\u0005[e\u001aI\u000bC\u0004\u0003\f1\u0001\u001da!9\u0011\t5J4Q\u0016\u0005\b\u0005;b\u00019ABs!\u0011i\u0013h!-\t\u000f\t]F\u0002q\u0001\u0004jB!Q&OB[\u0011\u001d\u0019I\u0002\u0004a\u0002\u0007[\u0004B!L\u001d\u0004:\"911\u0011\u0007A\u0004\rE\b\u0003B\u0017:\u0007{Cqa!>\r\u0001\b\u001990\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\f$\u0007\u0005\u0003.s\r\u0005\u0017AD$s_V\u0004\bK]8ek\u000e$\u0018gM\u000b\u001d\u0007{$I\u0001\"\u0004\u0005\u0012\u0011UA\u0011\u0004C\u000f\tC!)\u0003\"\u000b\u0005.\u0011EBQ\u0007C\u001d)q\u0019y\u0010\"\u0010\u0005B\u0011\u0015C\u0011\nC'\t#\")\u0006\"\u0017\u0005^\u0011\u0005DQ\rC5\t[\u0002B!L\u001d\u0005\u0002Air\u0004b\u0001\u0005\b\u0011-Aq\u0002C\n\t/!Y\u0002b\b\u0005$\u0011\u001dB1\u0006C\u0018\tg!9$C\u0002\u0005\u0006\u0001\u0012q\u0001V;qY\u0016\f4\u0007E\u0002A\t\u0013!QAQ\u0007C\u0002\r\u00032\u0001\u0011C\u0007\t\u00151WB1\u0001D!\r\u0001E\u0011\u0003\u0003\u0007\u0003\u000fi!\u0019A\"\u0011\u0007\u0001#)\u0002\u0002\u0004\u000265\u0011\ra\u0011\t\u0004\u0001\u0012eAABA6\u001b\t\u00071\tE\u0002A\t;!a!!+\u000e\u0005\u0004\u0019\u0005c\u0001!\u0005\"\u00111\u0011q^\u0007C\u0002\r\u00032\u0001\u0011C\u0013\t\u0019\u0011i$\u0004b\u0001\u0007B\u0019\u0001\t\"\u000b\u0005\r\tMUB1\u0001D!\r\u0001EQ\u0006\u0003\u0007\u0005cl!\u0019A\"\u0011\u0007\u0001#\t\u0004\u0002\u0004\u0004X5\u0011\ra\u0011\t\u0004\u0001\u0012UBABBc\u001b\t\u00071\tE\u0002A\ts!a\u0001b\u000f\u000e\u0005\u0004\u0019%!A'\t\rEl\u00019\u0001C !\u0011i\u0013\bb\u0002\t\rQl\u00019\u0001C\"!\u0011i\u0013\bb\u0003\t\u000f\u0005MQ\u0002q\u0001\u0005HA!Q&\u000fC\b\u0011\u001d\t)%\u0004a\u0002\t\u0017\u0002B!L\u001d\u0005\u0014!9\u0011qP\u0007A\u0004\u0011=\u0003\u0003B\u0017:\t/Aq!!1\u000e\u0001\b!\u0019\u0006\u0005\u0003.s\u0011m\u0001b\u0002B\u0006\u001b\u0001\u000fAq\u000b\t\u0005[e\"y\u0002C\u0004\u0003^5\u0001\u001d\u0001b\u0017\u0011\t5JD1\u0005\u0005\b\u0005ok\u00019\u0001C0!\u0011i\u0013\bb\n\t\u000f\reQ\u0002q\u0001\u0005dA!Q&\u000fC\u0016\u0011\u001d\u0019\u0019)\u0004a\u0002\tO\u0002B!L\u001d\u00050!91Q_\u0007A\u0004\u0011-\u0004\u0003B\u0017:\tgAq\u0001b\u001c\u000e\u0001\b!\t(\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\f4\u0007\u0005\u0003.s\u0011]\u0012AD$s_V\u0004\bK]8ek\u000e$\u0018\u0007N\u000b\u001f\to\"\u0019\tb\"\u0005\f\u0012=E1\u0013CL\t7#y\nb)\u0005(\u0012-Fq\u0016CZ\to#b\u0004\"\u001f\u0005<\u0012}F1\u0019Cd\t\u0017$y\rb5\u0005X\u0012mGq\u001cCr\tO$Y\u000fb<\u0011\t5JD1\u0010\t ?\u0011uD\u0011\u0011CC\t\u0013#i\t\"%\u0005\u0016\u0012eEQ\u0014CQ\tK#I\u000b\",\u00052\u0012U\u0016b\u0001C@A\t9A+\u001e9mKF\"\u0004c\u0001!\u0005\u0004\u0012)!I\u0004b\u0001\u0007B\u0019\u0001\tb\"\u0005\u000b\u0019t!\u0019A\"\u0011\u0007\u0001#Y\t\u0002\u0004\u0002\b9\u0011\ra\u0011\t\u0004\u0001\u0012=EABA\u001b\u001d\t\u00071\tE\u0002A\t'#a!a\u001b\u000f\u0005\u0004\u0019\u0005c\u0001!\u0005\u0018\u00121\u0011\u0011\u0016\bC\u0002\r\u00032\u0001\u0011CN\t\u0019\tyO\u0004b\u0001\u0007B\u0019\u0001\tb(\u0005\r\tubB1\u0001D!\r\u0001E1\u0015\u0003\u0007\u0005's!\u0019A\"\u0011\u0007\u0001#9\u000b\u0002\u0004\u0003r:\u0011\ra\u0011\t\u0004\u0001\u0012-FABB,\u001d\t\u00071\tE\u0002A\t_#aa!2\u000f\u0005\u0004\u0019\u0005c\u0001!\u00054\u00121A1\b\bC\u0002\r\u00032\u0001\u0011C\\\t\u0019!IL\u0004b\u0001\u0007\n\ta\n\u0003\u0004r\u001d\u0001\u000fAQ\u0018\t\u0005[e\"\t\t\u0003\u0004u\u001d\u0001\u000fA\u0011\u0019\t\u0005[e\")\tC\u0004\u0002\u00149\u0001\u001d\u0001\"2\u0011\t5JD\u0011\u0012\u0005\b\u0003\u000br\u00019\u0001Ce!\u0011i\u0013\b\"$\t\u000f\u0005}d\u0002q\u0001\u0005NB!Q&\u000fCI\u0011\u001d\t\tM\u0004a\u0002\t#\u0004B!L\u001d\u0005\u0016\"9!1\u0002\bA\u0004\u0011U\u0007\u0003B\u0017:\t3CqA!\u0018\u000f\u0001\b!I\u000e\u0005\u0003.s\u0011u\u0005b\u0002B\\\u001d\u0001\u000fAQ\u001c\t\u0005[e\"\t\u000bC\u0004\u0004\u001a9\u0001\u001d\u0001\"9\u0011\t5JDQ\u0015\u0005\b\u0007\u0007s\u00019\u0001Cs!\u0011i\u0013\b\"+\t\u000f\rUh\u0002q\u0001\u0005jB!Q&\u000fCW\u0011\u001d!yG\u0004a\u0002\t[\u0004B!L\u001d\u00052\"9A\u0011\u001f\bA\u0004\u0011M\u0018\u0001D0tiJ,8\r^;sKF\"\u0004\u0003B\u0017:\tk\u000bab\u0012:pkB\u0004&o\u001c3vGR\fT'\u0006\u0011\u0005z\u0016\u0015Q\u0011BC\u0007\u000b#))\"\"\u0007\u0006\u001e\u0015\u0005RQEC\u0015\u000b[)\t$\"\u000e\u0006:\u0015uB\u0003\tC~\u000b\u0003*)%\"\u0013\u0006N\u0015ESQKC-\u000b;*\t'\"\u001a\u0006j\u00155T\u0011OC;\u000bs\u0002B!L\u001d\u0005~B\ts\u0004b@\u0006\u0004\u0015\u001dQ1BC\b\u000b')9\"b\u0007\u0006 \u0015\rRqEC\u0016\u000b_)\u0019$b\u000e\u0006<%\u0019Q\u0011\u0001\u0011\u0003\u000fQ+\b\u000f\\32kA\u0019\u0001)\"\u0002\u0005\u000b\t{!\u0019A\"\u0011\u0007\u0001+I\u0001B\u0003g\u001f\t\u00071\tE\u0002A\u000b\u001b!a!a\u0002\u0010\u0005\u0004\u0019\u0005c\u0001!\u0006\u0012\u00111\u0011QG\bC\u0002\r\u00032\u0001QC\u000b\t\u0019\tYg\u0004b\u0001\u0007B\u0019\u0001)\"\u0007\u0005\r\u0005%vB1\u0001D!\r\u0001UQ\u0004\u0003\u0007\u0003_|!\u0019A\"\u0011\u0007\u0001+\t\u0003\u0002\u0004\u0003>=\u0011\ra\u0011\t\u0004\u0001\u0016\u0015BA\u0002BJ\u001f\t\u00071\tE\u0002A\u000bS!aA!=\u0010\u0005\u0004\u0019\u0005c\u0001!\u0006.\u001111qK\bC\u0002\r\u00032\u0001QC\u0019\t\u0019\u0019)m\u0004b\u0001\u0007B\u0019\u0001)\"\u000e\u0005\r\u0011mrB1\u0001D!\r\u0001U\u0011\b\u0003\u0007\ts{!\u0019A\"\u0011\u0007\u0001+i\u0004\u0002\u0004\u0006@=\u0011\ra\u0011\u0002\u0002\u001f\"1\u0011o\u0004a\u0002\u000b\u0007\u0002B!L\u001d\u0006\u0004!1Ao\u0004a\u0002\u000b\u000f\u0002B!L\u001d\u0006\b!9\u00111C\bA\u0004\u0015-\u0003\u0003B\u0017:\u000b\u0017Aq!!\u0012\u0010\u0001\b)y\u0005\u0005\u0003.s\u0015=\u0001bBA@\u001f\u0001\u000fQ1\u000b\t\u0005[e*\u0019\u0002C\u0004\u0002B>\u0001\u001d!b\u0016\u0011\t5JTq\u0003\u0005\b\u0005\u0017y\u00019AC.!\u0011i\u0013(b\u0007\t\u000f\tus\u0002q\u0001\u0006`A!Q&OC\u0010\u0011\u001d\u00119l\u0004a\u0002\u000bG\u0002B!L\u001d\u0006$!91\u0011D\bA\u0004\u0015\u001d\u0004\u0003B\u0017:\u000bOAqaa!\u0010\u0001\b)Y\u0007\u0005\u0003.s\u0015-\u0002bBB{\u001f\u0001\u000fQq\u000e\t\u0005[e*y\u0003C\u0004\u0005p=\u0001\u001d!b\u001d\u0011\t5JT1\u0007\u0005\b\tc|\u00019AC<!\u0011i\u0013(b\u000e\t\u000f\u0015mt\u0002q\u0001\u0006~\u0005aql\u001d;sk\u000e$XO]32kA!Q&OC\u001e\u000399%o\\;q!J|G-^2ucY*\"%b!\u0006\u0010\u0016MUqSCN\u000b?+\u0019+b*\u0006,\u0016=V1WC\\\u000bw+y,b1\u0006H\u0016-GCICC\u000b\u001f,\u0019.b6\u0006\\\u0016}W1]Ct\u000bW,y/b=\u0006x\u0016mXq D\u0002\r\u000f1Y\u0001\u0005\u0003.s\u0015\u001d\u0005cI\u0010\u0006\n\u00165U\u0011SCK\u000b3+i*\")\u0006&\u0016%VQVCY\u000bk+I,\"0\u0006B\u0016\u0015W\u0011Z\u0005\u0004\u000b\u0017\u0003#a\u0002+va2,\u0017G\u000e\t\u0004\u0001\u0016=E!\u0002\"\u0011\u0005\u0004\u0019\u0005c\u0001!\u0006\u0014\u0012)a\r\u0005b\u0001\u0007B\u0019\u0001)b&\u0005\r\u0005\u001d\u0001C1\u0001D!\r\u0001U1\u0014\u0003\u0007\u0003k\u0001\"\u0019A\"\u0011\u0007\u0001+y\n\u0002\u0004\u0002lA\u0011\ra\u0011\t\u0004\u0001\u0016\rFABAU!\t\u00071\tE\u0002A\u000bO#a!a<\u0011\u0005\u0004\u0019\u0005c\u0001!\u0006,\u00121!Q\b\tC\u0002\r\u00032\u0001QCX\t\u0019\u0011\u0019\n\u0005b\u0001\u0007B\u0019\u0001)b-\u0005\r\tE\bC1\u0001D!\r\u0001Uq\u0017\u0003\u0007\u0007/\u0002\"\u0019A\"\u0011\u0007\u0001+Y\f\u0002\u0004\u0004FB\u0011\ra\u0011\t\u0004\u0001\u0016}FA\u0002C\u001e!\t\u00071\tE\u0002A\u000b\u0007$a\u0001\"/\u0011\u0005\u0004\u0019\u0005c\u0001!\u0006H\u00121Qq\b\tC\u0002\r\u00032\u0001QCf\t\u0019)i\r\u0005b\u0001\u0007\n\t\u0001\u000b\u0003\u0004r!\u0001\u000fQ\u0011\u001b\t\u0005[e*i\t\u0003\u0004u!\u0001\u000fQQ\u001b\t\u0005[e*\t\nC\u0004\u0002\u0014A\u0001\u001d!\"7\u0011\t5JTQ\u0013\u0005\b\u0003\u000b\u0002\u00029ACo!\u0011i\u0013(\"'\t\u000f\u0005}\u0004\u0003q\u0001\u0006bB!Q&OCO\u0011\u001d\t\t\r\u0005a\u0002\u000bK\u0004B!L\u001d\u0006\"\"9!1\u0002\tA\u0004\u0015%\b\u0003B\u0017:\u000bKCqA!\u0018\u0011\u0001\b)i\u000f\u0005\u0003.s\u0015%\u0006b\u0002B\\!\u0001\u000fQ\u0011\u001f\t\u0005[e*i\u000bC\u0004\u0004\u001aA\u0001\u001d!\">\u0011\t5JT\u0011\u0017\u0005\b\u0007\u0007\u0003\u00029AC}!\u0011i\u0013(\".\t\u000f\rU\b\u0003q\u0001\u0006~B!Q&OC]\u0011\u001d!y\u0007\u0005a\u0002\r\u0003\u0001B!L\u001d\u0006>\"9A\u0011\u001f\tA\u0004\u0019\u0015\u0001\u0003B\u0017:\u000b\u0003Dq!b\u001f\u0011\u0001\b1I\u0001\u0005\u0003.s\u0015\u0015\u0007b\u0002D\u0007!\u0001\u000faqB\u0001\r?N$(/^2ukJ,\u0017G\u000e\t\u0005[e*I-\u0001\bHe>,\b\u000f\u0015:pIV\u001cG/M\u001c\u0016I\u0019Ua\u0011\u0005D\u0013\rS1iC\"\r\u00076\u0019ebQ\bD!\r\u000b2IE\"\u0014\u0007R\u0019Uc\u0011\fD/\rC\"BEb\u0006\u0007f\u0019%dQ\u000eD9\rk2IH\" \u0007\u0002\u001a\u0015e\u0011\u0012DG\r#3)J\"'\u0007\u001e\u001a\u0005fQ\u0015\t\u0005[e2I\u0002E\u0013 \r71yBb\t\u0007(\u0019-bq\u0006D\u001a\ro1YDb\u0010\u0007D\u0019\u001dc1\nD(\r'29Fb\u0017\u0007`%\u0019aQ\u0004\u0011\u0003\u000fQ+\b\u000f\\32oA\u0019\u0001I\"\t\u0005\u000b\t\u000b\"\u0019A\"\u0011\u0007\u00013)\u0003B\u0003g#\t\u00071\tE\u0002A\rS!a!a\u0002\u0012\u0005\u0004\u0019\u0005c\u0001!\u0007.\u00111\u0011QG\tC\u0002\r\u00032\u0001\u0011D\u0019\t\u0019\tY'\u0005b\u0001\u0007B\u0019\u0001I\"\u000e\u0005\r\u0005%\u0016C1\u0001D!\r\u0001e\u0011\b\u0003\u0007\u0003_\f\"\u0019A\"\u0011\u0007\u00013i\u0004\u0002\u0004\u0003>E\u0011\ra\u0011\t\u0004\u0001\u001a\u0005CA\u0002BJ#\t\u00071\tE\u0002A\r\u000b\"aA!=\u0012\u0005\u0004\u0019\u0005c\u0001!\u0007J\u001111qK\tC\u0002\r\u00032\u0001\u0011D'\t\u0019\u0019)-\u0005b\u0001\u0007B\u0019\u0001I\"\u0015\u0005\r\u0011m\u0012C1\u0001D!\r\u0001eQ\u000b\u0003\u0007\ts\u000b\"\u0019A\"\u0011\u0007\u00013I\u0006\u0002\u0004\u0006@E\u0011\ra\u0011\t\u0004\u0001\u001auCABCg#\t\u00071\tE\u0002A\rC\"aAb\u0019\u0012\u0005\u0004\u0019%!A)\t\rE\f\u00029\u0001D4!\u0011i\u0013Hb\b\t\rQ\f\u00029\u0001D6!\u0011i\u0013Hb\t\t\u000f\u0005M\u0011\u0003q\u0001\u0007pA!Q&\u000fD\u0014\u0011\u001d\t)%\u0005a\u0002\rg\u0002B!L\u001d\u0007,!9\u0011qP\tA\u0004\u0019]\u0004\u0003B\u0017:\r_Aq!!1\u0012\u0001\b1Y\b\u0005\u0003.s\u0019M\u0002b\u0002B\u0006#\u0001\u000faq\u0010\t\u0005[e29\u0004C\u0004\u0003^E\u0001\u001dAb!\u0011\t5Jd1\b\u0005\b\u0005o\u000b\u00029\u0001DD!\u0011i\u0013Hb\u0010\t\u000f\re\u0011\u0003q\u0001\u0007\fB!Q&\u000fD\"\u0011\u001d\u0019\u0019)\u0005a\u0002\r\u001f\u0003B!L\u001d\u0007H!91Q_\tA\u0004\u0019M\u0005\u0003B\u0017:\r\u0017Bq\u0001b\u001c\u0012\u0001\b19\n\u0005\u0003.s\u0019=\u0003b\u0002Cy#\u0001\u000fa1\u0014\t\u0005[e2\u0019\u0006C\u0004\u0006|E\u0001\u001dAb(\u0011\t5Jdq\u000b\u0005\b\r\u001b\t\u00029\u0001DR!\u0011i\u0013Hb\u0017\t\u000f\u0019\u001d\u0016\u0003q\u0001\u0007*\u0006aql\u001d;sk\u000e$XO]32oA!Q&\u000fD0\u000399%o\\;q!J|G-^2uca*bEb,\u0007<\u001a}f1\u0019Dd\r\u00174yMb5\u0007X\u001amgq\u001cDr\rO4YOb<\u0007t\u001a]h1 D\u0000)\u00192\tlb\u0001\b\b\u001d-qqBD\n\u000f/9Ybb\b\b$\u001d\u001dr1FD\u0018\u000fg99db\u000f\b@\u001d\rsq\t\t\u0005[e2\u0019\fE\u0014 \rk3IL\"0\u0007B\u001a\u0015g\u0011\u001aDg\r#4)N\"7\u0007^\u001a\u0005hQ\u001dDu\r[4\tP\">\u0007z\u001au\u0018b\u0001D\\A\t9A+\u001e9mKFB\u0004c\u0001!\u0007<\u0012)!I\u0005b\u0001\u0007B\u0019\u0001Ib0\u0005\u000b\u0019\u0014\"\u0019A\"\u0011\u0007\u00013\u0019\r\u0002\u0004\u0002\bI\u0011\ra\u0011\t\u0004\u0001\u001a\u001dGABA\u001b%\t\u00071\tE\u0002A\r\u0017$a!a\u001b\u0013\u0005\u0004\u0019\u0005c\u0001!\u0007P\u00121\u0011\u0011\u0016\nC\u0002\r\u00032\u0001\u0011Dj\t\u0019\tyO\u0005b\u0001\u0007B\u0019\u0001Ib6\u0005\r\tu\"C1\u0001D!\r\u0001e1\u001c\u0003\u0007\u0005'\u0013\"\u0019A\"\u0011\u0007\u00013y\u000e\u0002\u0004\u0003rJ\u0011\ra\u0011\t\u0004\u0001\u001a\rHABB,%\t\u00071\tE\u0002A\rO$aa!2\u0013\u0005\u0004\u0019\u0005c\u0001!\u0007l\u00121A1\b\nC\u0002\r\u00032\u0001\u0011Dx\t\u0019!IL\u0005b\u0001\u0007B\u0019\u0001Ib=\u0005\r\u0015}\"C1\u0001D!\r\u0001eq\u001f\u0003\u0007\u000b\u001b\u0014\"\u0019A\"\u0011\u0007\u00013Y\u0010\u0002\u0004\u0007dI\u0011\ra\u0011\t\u0004\u0001\u001a}HABD\u0001%\t\u00071IA\u0001S\u0011\u0019\t(\u0003q\u0001\b\u0006A!Q&\u000fD]\u0011\u0019!(\u0003q\u0001\b\nA!Q&\u000fD_\u0011\u001d\t\u0019B\u0005a\u0002\u000f\u001b\u0001B!L\u001d\u0007B\"9\u0011Q\t\nA\u0004\u001dE\u0001\u0003B\u0017:\r\u000bDq!a \u0013\u0001\b9)\u0002\u0005\u0003.s\u0019%\u0007bBAa%\u0001\u000fq\u0011\u0004\t\u0005[e2i\rC\u0004\u0003\fI\u0001\u001da\"\b\u0011\t5Jd\u0011\u001b\u0005\b\u0005;\u0012\u00029AD\u0011!\u0011i\u0013H\"6\t\u000f\t]&\u0003q\u0001\b&A!Q&\u000fDm\u0011\u001d\u0019IB\u0005a\u0002\u000fS\u0001B!L\u001d\u0007^\"911\u0011\nA\u0004\u001d5\u0002\u0003B\u0017:\rCDqa!>\u0013\u0001\b9\t\u0004\u0005\u0003.s\u0019\u0015\bb\u0002C8%\u0001\u000fqQ\u0007\t\u0005[e2I\u000fC\u0004\u0005rJ\u0001\u001da\"\u000f\u0011\t5JdQ\u001e\u0005\b\u000bw\u0012\u00029AD\u001f!\u0011i\u0013H\"=\t\u000f\u00195!\u0003q\u0001\bBA!Q&\u000fD{\u0011\u001d19K\u0005a\u0002\u000f\u000b\u0002B!L\u001d\u0007z\"9q\u0011\n\nA\u0004\u001d-\u0013\u0001D0tiJ,8\r^;sKFB\u0004\u0003B\u0017:\r{\fab\u0012:pkB\u0004&o\u001c3vGR\f\u0014(\u0006\u0015\bR\u001dus\u0011MD3\u000fS:ig\"\u001d\bv\u001detQPDA\u000f\u000b;Ii\"$\b\u0012\u001eUu\u0011TDO\u000fC;)\u000b\u0006\u0015\bT\u001d%vQVDY\u000fk;Il\"0\bB\u001e\u0015w\u0011ZDg\u000f#<)n\"7\b^\u001e\u0005xQ]Du\u000f[<\t\u0010\u0005\u0003.s\u001dU\u0003#K\u0010\bX\u001dmsqLD2\u000fO:Ygb\u001c\bt\u001d]t1PD@\u000f\u0007;9ib#\b\u0010\u001eMuqSDN\u000f?;\u0019+C\u0002\bZ\u0001\u0012q\u0001V;qY\u0016\f\u0014\bE\u0002A\u000f;\"QAQ\nC\u0002\r\u00032\u0001QD1\t\u001517C1\u0001D!\r\u0001uQ\r\u0003\u0007\u0003\u000f\u0019\"\u0019A\"\u0011\u0007\u0001;I\u0007\u0002\u0004\u00026M\u0011\ra\u0011\t\u0004\u0001\u001e5DABA6'\t\u00071\tE\u0002A\u000fc\"a!!+\u0014\u0005\u0004\u0019\u0005c\u0001!\bv\u00111\u0011q^\nC\u0002\r\u00032\u0001QD=\t\u0019\u0011id\u0005b\u0001\u0007B\u0019\u0001i\" \u0005\r\tM5C1\u0001D!\r\u0001u\u0011\u0011\u0003\u0007\u0005c\u001c\"\u0019A\"\u0011\u0007\u0001;)\t\u0002\u0004\u0004XM\u0011\ra\u0011\t\u0004\u0001\u001e%EABBc'\t\u00071\tE\u0002A\u000f\u001b#a\u0001b\u000f\u0014\u0005\u0004\u0019\u0005c\u0001!\b\u0012\u00121A\u0011X\nC\u0002\r\u00032\u0001QDK\t\u0019)yd\u0005b\u0001\u0007B\u0019\u0001i\"'\u0005\r\u001557C1\u0001D!\r\u0001uQ\u0014\u0003\u0007\rG\u001a\"\u0019A\"\u0011\u0007\u0001;\t\u000b\u0002\u0004\b\u0002M\u0011\ra\u0011\t\u0004\u0001\u001e\u0015FABDT'\t\u00071IA\u0001T\u0011\u0019\t8\u0003q\u0001\b,B!Q&OD.\u0011\u0019!8\u0003q\u0001\b0B!Q&OD0\u0011\u001d\t\u0019b\u0005a\u0002\u000fg\u0003B!L\u001d\bd!9\u0011QI\nA\u0004\u001d]\u0006\u0003B\u0017:\u000fOBq!a \u0014\u0001\b9Y\f\u0005\u0003.s\u001d-\u0004bBAa'\u0001\u000fqq\u0018\t\u0005[e:y\u0007C\u0004\u0003\fM\u0001\u001dab1\u0011\t5Jt1\u000f\u0005\b\u0005;\u001a\u00029ADd!\u0011i\u0013hb\u001e\t\u000f\t]6\u0003q\u0001\bLB!Q&OD>\u0011\u001d\u0019Ib\u0005a\u0002\u000f\u001f\u0004B!L\u001d\b\u0000!911Q\nA\u0004\u001dM\u0007\u0003B\u0017:\u000f\u0007Cqa!>\u0014\u0001\b99\u000e\u0005\u0003.s\u001d\u001d\u0005b\u0002C8'\u0001\u000fq1\u001c\t\u0005[e:Y\tC\u0004\u0005rN\u0001\u001dab8\u0011\t5Jtq\u0012\u0005\b\u000bw\u001a\u00029ADr!\u0011i\u0013hb%\t\u000f\u001951\u0003q\u0001\bhB!Q&ODL\u0011\u001d19k\u0005a\u0002\u000fW\u0004B!L\u001d\b\u001c\"9q\u0011J\nA\u0004\u001d=\b\u0003B\u0017:\u000f?Cqab=\u0014\u0001\b9)0\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\f\u0014\b\u0005\u0003.s\u001d\r\u0016AD$s_V\u0004\bK]8ek\u000e$(\u0007M\u000b+\u000fwD9\u0001c\u0003\t\u0010!M\u0001r\u0003E\u000e\u0011?A\u0019\u0003c\n\t,!=\u00022\u0007E\u001c\u0011wAy\u0004c\u0011\tH!-\u0003r\nE*)):i\u0010c\u0016\t\\!}\u00032\rE4\u0011WBy\u0007c\u001d\tx!m\u0004r\u0010EB\u0011\u000fCY\tc$\t\u0014\"]\u00052\u0014EP\u0011G\u0003B!L\u001d\b\u0000BYs\u0004#\u0001\t\u0006!%\u0001R\u0002E\t\u0011+AI\u0002#\b\t\"!\u0015\u0002\u0012\u0006E\u0017\u0011cA)\u0004#\u000f\t>!\u0005\u0003R\tE%\u0011\u001bB\t&C\u0002\t\u0004\u0001\u0012q\u0001V;qY\u0016\u0014\u0004\u0007E\u0002A\u0011\u000f!QA\u0011\u000bC\u0002\r\u00032\u0001\u0011E\u0006\t\u00151GC1\u0001D!\r\u0001\u0005r\u0002\u0003\u0007\u0003\u000f!\"\u0019A\"\u0011\u0007\u0001C\u0019\u0002\u0002\u0004\u00026Q\u0011\ra\u0011\t\u0004\u0001\"]AABA6)\t\u00071\tE\u0002A\u00117!a!!+\u0015\u0005\u0004\u0019\u0005c\u0001!\t \u00111\u0011q\u001e\u000bC\u0002\r\u00032\u0001\u0011E\u0012\t\u0019\u0011i\u0004\u0006b\u0001\u0007B\u0019\u0001\tc\n\u0005\r\tMEC1\u0001D!\r\u0001\u00052\u0006\u0003\u0007\u0005c$\"\u0019A\"\u0011\u0007\u0001Cy\u0003\u0002\u0004\u0004XQ\u0011\ra\u0011\t\u0004\u0001\"MBABBc)\t\u00071\tE\u0002A\u0011o!a\u0001b\u000f\u0015\u0005\u0004\u0019\u0005c\u0001!\t<\u00111A\u0011\u0018\u000bC\u0002\r\u00032\u0001\u0011E \t\u0019)y\u0004\u0006b\u0001\u0007B\u0019\u0001\tc\u0011\u0005\r\u00155GC1\u0001D!\r\u0001\u0005r\t\u0003\u0007\rG\"\"\u0019A\"\u0011\u0007\u0001CY\u0005\u0002\u0004\b\u0002Q\u0011\ra\u0011\t\u0004\u0001\"=CABDT)\t\u00071\tE\u0002A\u0011'\"a\u0001#\u0016\u0015\u0005\u0004\u0019%!\u0001+\t\rE$\u00029\u0001E-!\u0011i\u0013\b#\u0002\t\rQ$\u00029\u0001E/!\u0011i\u0013\b#\u0003\t\u000f\u0005MA\u0003q\u0001\tbA!Q&\u000fE\u0007\u0011\u001d\t)\u0005\u0006a\u0002\u0011K\u0002B!L\u001d\t\u0012!9\u0011q\u0010\u000bA\u0004!%\u0004\u0003B\u0017:\u0011+Aq!!1\u0015\u0001\bAi\u0007\u0005\u0003.s!e\u0001b\u0002B\u0006)\u0001\u000f\u0001\u0012\u000f\t\u0005[eBi\u0002C\u0004\u0003^Q\u0001\u001d\u0001#\u001e\u0011\t5J\u0004\u0012\u0005\u0005\b\u0005o#\u00029\u0001E=!\u0011i\u0013\b#\n\t\u000f\reA\u0003q\u0001\t~A!Q&\u000fE\u0015\u0011\u001d\u0019\u0019\t\u0006a\u0002\u0011\u0003\u0003B!L\u001d\t.!91Q\u001f\u000bA\u0004!\u0015\u0005\u0003B\u0017:\u0011cAq\u0001b\u001c\u0015\u0001\bAI\t\u0005\u0003.s!U\u0002b\u0002Cy)\u0001\u000f\u0001R\u0012\t\u0005[eBI\u0004C\u0004\u0006|Q\u0001\u001d\u0001#%\u0011\t5J\u0004R\b\u0005\b\r\u001b!\u00029\u0001EK!\u0011i\u0013\b#\u0011\t\u000f\u0019\u001dF\u0003q\u0001\t\u001aB!Q&\u000fE#\u0011\u001d9I\u0005\u0006a\u0002\u0011;\u0003B!L\u001d\tJ!9q1\u001f\u000bA\u0004!\u0005\u0006\u0003B\u0017:\u0011\u001bBq\u0001#*\u0015\u0001\bA9+\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\u0014\u0004\u0007\u0005\u0003.s!E\u0013AD$s_V\u0004\bK]8ek\u000e$('M\u000b-\u0011[CI\f#0\tB\"\u0015\u0007\u0012\u001aEg\u0011#D)\u000e#7\t^\"\u0005\bR\u001dEu\u0011[D\t\u0010#>\tz\"u\u0018\u0012AE\u0003\u0013\u0013!B\u0006c,\n\u000e%E\u0011RCE\r\u0013;I\t##\n\n*%5\u0012\u0012GE\u001b\u0013sIi$#\u0011\nF%%\u0013RJE)\u0013+JI&#\u0018\u0011\t5J\u0004\u0012\u0017\t.?!M\u0006r\u0017E^\u0011\u007fC\u0019\rc2\tL\"=\u00072\u001bEl\u00117Dy\u000ec9\th\"-\br\u001eEz\u0011oDY\u0010c@\n\u0004%\u001d\u0011b\u0001E[A\t9A+\u001e9mKJ\n\u0004c\u0001!\t:\u0012)!)\u0006b\u0001\u0007B\u0019\u0001\t#0\u0005\u000b\u0019,\"\u0019A\"\u0011\u0007\u0001C\t\r\u0002\u0004\u0002\bU\u0011\ra\u0011\t\u0004\u0001\"\u0015GABA\u001b+\t\u00071\tE\u0002A\u0011\u0013$a!a\u001b\u0016\u0005\u0004\u0019\u0005c\u0001!\tN\u00121\u0011\u0011V\u000bC\u0002\r\u00032\u0001\u0011Ei\t\u0019\ty/\u0006b\u0001\u0007B\u0019\u0001\t#6\u0005\r\tuRC1\u0001D!\r\u0001\u0005\u0012\u001c\u0003\u0007\u0005'+\"\u0019A\"\u0011\u0007\u0001Ci\u000e\u0002\u0004\u0003rV\u0011\ra\u0011\t\u0004\u0001\"\u0005HABB,+\t\u00071\tE\u0002A\u0011K$aa!2\u0016\u0005\u0004\u0019\u0005c\u0001!\tj\u00121A1H\u000bC\u0002\r\u00032\u0001\u0011Ew\t\u0019!I,\u0006b\u0001\u0007B\u0019\u0001\t#=\u0005\r\u0015}RC1\u0001D!\r\u0001\u0005R\u001f\u0003\u0007\u000b\u001b,\"\u0019A\"\u0011\u0007\u0001CI\u0010\u0002\u0004\u0007dU\u0011\ra\u0011\t\u0004\u0001\"uHABD\u0001+\t\u00071\tE\u0002A\u0013\u0003!aab*\u0016\u0005\u0004\u0019\u0005c\u0001!\n\u0006\u00111\u0001RK\u000bC\u0002\r\u00032\u0001QE\u0005\t\u0019IY!\u0006b\u0001\u0007\n\tQ\u000b\u0003\u0004r+\u0001\u000f\u0011r\u0002\t\u0005[eB9\f\u0003\u0004u+\u0001\u000f\u00112\u0003\t\u0005[eBY\fC\u0004\u0002\u0014U\u0001\u001d!c\u0006\u0011\t5J\u0004r\u0018\u0005\b\u0003\u000b*\u00029AE\u000e!\u0011i\u0013\bc1\t\u000f\u0005}T\u0003q\u0001\n A!Q&\u000fEd\u0011\u001d\t\t-\u0006a\u0002\u0013G\u0001B!L\u001d\tL\"9!1B\u000bA\u0004%\u001d\u0002\u0003B\u0017:\u0011\u001fDqA!\u0018\u0016\u0001\bIY\u0003\u0005\u0003.s!M\u0007b\u0002B\\+\u0001\u000f\u0011r\u0006\t\u0005[eB9\u000eC\u0004\u0004\u001aU\u0001\u001d!c\r\u0011\t5J\u00042\u001c\u0005\b\u0007\u0007+\u00029AE\u001c!\u0011i\u0013\bc8\t\u000f\rUX\u0003q\u0001\n<A!Q&\u000fEr\u0011\u001d!y'\u0006a\u0002\u0013\u007f\u0001B!L\u001d\th\"9A\u0011_\u000bA\u0004%\r\u0003\u0003B\u0017:\u0011WDq!b\u001f\u0016\u0001\bI9\u0005\u0005\u0003.s!=\bb\u0002D\u0007+\u0001\u000f\u00112\n\t\u0005[eB\u0019\u0010C\u0004\u0007(V\u0001\u001d!c\u0014\u0011\t5J\u0004r\u001f\u0005\b\u000f\u0013*\u00029AE*!\u0011i\u0013\bc?\t\u000f\u001dMX\u0003q\u0001\nXA!Q&\u000fE\u0000\u0011\u001dA)+\u0006a\u0002\u00137\u0002B!L\u001d\n\u0004!9\u0011rL\u000bA\u0004%\u0005\u0014\u0001D0tiJ,8\r^;sKJ\n\u0004\u0003B\u0017:\u0013\u000f\tab\u0012:pkB\u0004&o\u001c3vGR\u0014$'\u0006\u0018\nh%M\u0014rOE>\u0013\u007fJ\u0019)c\"\n\f&=\u00152SEL\u00137Ky*c)\n(&-\u0016rVEZ\u0013oKY,c0\nD&\u001dGCLE5\u0013\u0017Ly-c5\nX&m\u0017r\\Er\u0013OLY/c<\nt&]\u00182`E\u0000\u0015\u0007Q9Ac\u0003\u000b\u0010)M!r\u0003F\u000e\u0015?\u0001B!L\u001d\nlAys$#\u001c\nr%U\u0014\u0012PE?\u0013\u0003K))##\n\u000e&E\u0015RSEM\u0013;K\t+#*\n*&5\u0016\u0012WE[\u0013sKi,#1\nF&\u0019\u0011r\u000e\u0011\u0003\u000fQ+\b\u000f\\33eA\u0019\u0001)c\u001d\u0005\u000b\t3\"\u0019A\"\u0011\u0007\u0001K9\bB\u0003g-\t\u00071\tE\u0002A\u0013w\"a!a\u0002\u0017\u0005\u0004\u0019\u0005c\u0001!\n\u0000\u00111\u0011Q\u0007\fC\u0002\r\u00032\u0001QEB\t\u0019\tYG\u0006b\u0001\u0007B\u0019\u0001)c\"\u0005\r\u0005%fC1\u0001D!\r\u0001\u00152\u0012\u0003\u0007\u0003_4\"\u0019A\"\u0011\u0007\u0001Ky\t\u0002\u0004\u0003>Y\u0011\ra\u0011\t\u0004\u0001&MEA\u0002BJ-\t\u00071\tE\u0002A\u0013/#aA!=\u0017\u0005\u0004\u0019\u0005c\u0001!\n\u001c\u001211q\u000b\fC\u0002\r\u00032\u0001QEP\t\u0019\u0019)M\u0006b\u0001\u0007B\u0019\u0001)c)\u0005\r\u0011mbC1\u0001D!\r\u0001\u0015r\u0015\u0003\u0007\ts3\"\u0019A\"\u0011\u0007\u0001KY\u000b\u0002\u0004\u0006@Y\u0011\ra\u0011\t\u0004\u0001&=FABCg-\t\u00071\tE\u0002A\u0013g#aAb\u0019\u0017\u0005\u0004\u0019\u0005c\u0001!\n8\u00121q\u0011\u0001\fC\u0002\r\u00032\u0001QE^\t\u001999K\u0006b\u0001\u0007B\u0019\u0001)c0\u0005\r!UcC1\u0001D!\r\u0001\u00152\u0019\u0003\u0007\u0013\u00171\"\u0019A\"\u0011\u0007\u0001K9\r\u0002\u0004\nJZ\u0011\ra\u0011\u0002\u0002-\"1\u0011O\u0006a\u0002\u0013\u001b\u0004B!L\u001d\nr!1AO\u0006a\u0002\u0013#\u0004B!L\u001d\nv!9\u00111\u0003\fA\u0004%U\u0007\u0003B\u0017:\u0013sBq!!\u0012\u0017\u0001\bII\u000e\u0005\u0003.s%u\u0004bBA@-\u0001\u000f\u0011R\u001c\t\u0005[eJ\t\tC\u0004\u0002BZ\u0001\u001d!#9\u0011\t5J\u0014R\u0011\u0005\b\u0005\u00171\u00029AEs!\u0011i\u0013(##\t\u000f\tuc\u0003q\u0001\njB!Q&OEG\u0011\u001d\u00119L\u0006a\u0002\u0013[\u0004B!L\u001d\n\u0012\"91\u0011\u0004\fA\u0004%E\b\u0003B\u0017:\u0013+Cqaa!\u0017\u0001\bI)\u0010\u0005\u0003.s%e\u0005bBB{-\u0001\u000f\u0011\u0012 \t\u0005[eJi\nC\u0004\u0005pY\u0001\u001d!#@\u0011\t5J\u0014\u0012\u0015\u0005\b\tc4\u00029\u0001F\u0001!\u0011i\u0013(#*\t\u000f\u0015md\u0003q\u0001\u000b\u0006A!Q&OEU\u0011\u001d1iA\u0006a\u0002\u0015\u0013\u0001B!L\u001d\n.\"9aq\u0015\fA\u0004)5\u0001\u0003B\u0017:\u0013cCqa\"\u0013\u0017\u0001\bQ\t\u0002\u0005\u0003.s%U\u0006bBDz-\u0001\u000f!R\u0003\t\u0005[eJI\fC\u0004\t&Z\u0001\u001dA#\u0007\u0011\t5J\u0014R\u0018\u0005\b\u0013?2\u00029\u0001F\u000f!\u0011i\u0013(#1\t\u000f)\u0005b\u0003q\u0001\u000b$\u0005aql\u001d;sk\u000e$XO]33eA!Q&OEc\u0001"
)
public interface GroupProductInstances {
   // $FF: synthetic method
   static Group GroupProduct2$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2(_structure1, _structure2);
   }

   default Group GroupProduct2(final Group _structure1, final Group _structure2) {
      return new GroupProduct2(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2.inverse$(this, x0);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2.empty$(this);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$75;
            this.structure2 = _structure2$75;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct3$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3) {
      return $this.GroupProduct3(_structure1, _structure2, _structure3);
   }

   default Group GroupProduct3(final Group _structure1, final Group _structure2, final Group _structure3) {
      return new GroupProduct3(_structure1, _structure2, _structure3) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;

         public Tuple3 inverse(final Tuple3 x0) {
            return GroupProduct3.inverse$(this, x0);
         }

         public Tuple3 empty() {
            return MonoidProduct3.empty$(this);
         }

         public Tuple3 combine(final Tuple3 x0, final Tuple3 x1) {
            return SemigroupProduct3.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct3.$init$(this);
            MonoidProduct3.$init$(this);
            GroupProduct3.$init$(this);
            this.structure1 = _structure1$76;
            this.structure2 = _structure2$76;
            this.structure3 = _structure3$41;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct4$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4) {
      return $this.GroupProduct4(_structure1, _structure2, _structure3, _structure4);
   }

   default Group GroupProduct4(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4) {
      return new GroupProduct4(_structure1, _structure2, _structure3, _structure4) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;

         public Tuple4 inverse(final Tuple4 x0) {
            return GroupProduct4.inverse$(this, x0);
         }

         public Tuple4 empty() {
            return MonoidProduct4.empty$(this);
         }

         public Tuple4 combine(final Tuple4 x0, final Tuple4 x1) {
            return SemigroupProduct4.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct4.$init$(this);
            MonoidProduct4.$init$(this);
            GroupProduct4.$init$(this);
            this.structure1 = _structure1$77;
            this.structure2 = _structure2$77;
            this.structure3 = _structure3$42;
            this.structure4 = _structure4$39;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct5$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5) {
      return $this.GroupProduct5(_structure1, _structure2, _structure3, _structure4, _structure5);
   }

   default Group GroupProduct5(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5) {
      return new GroupProduct5(_structure1, _structure2, _structure3, _structure4, _structure5) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;

         public Tuple5 inverse(final Tuple5 x0) {
            return GroupProduct5.inverse$(this, x0);
         }

         public Tuple5 empty() {
            return MonoidProduct5.empty$(this);
         }

         public Tuple5 combine(final Tuple5 x0, final Tuple5 x1) {
            return SemigroupProduct5.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct5.$init$(this);
            MonoidProduct5.$init$(this);
            GroupProduct5.$init$(this);
            this.structure1 = _structure1$78;
            this.structure2 = _structure2$78;
            this.structure3 = _structure3$43;
            this.structure4 = _structure4$40;
            this.structure5 = _structure5$37;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct6$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6) {
      return $this.GroupProduct6(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6);
   }

   default Group GroupProduct6(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6) {
      return new GroupProduct6(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;

         public Tuple6 inverse(final Tuple6 x0) {
            return GroupProduct6.inverse$(this, x0);
         }

         public Tuple6 empty() {
            return MonoidProduct6.empty$(this);
         }

         public Tuple6 combine(final Tuple6 x0, final Tuple6 x1) {
            return SemigroupProduct6.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct6.$init$(this);
            MonoidProduct6.$init$(this);
            GroupProduct6.$init$(this);
            this.structure1 = _structure1$79;
            this.structure2 = _structure2$79;
            this.structure3 = _structure3$44;
            this.structure4 = _structure4$41;
            this.structure5 = _structure5$38;
            this.structure6 = _structure6$35;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct7$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7) {
      return $this.GroupProduct7(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7);
   }

   default Group GroupProduct7(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7) {
      return new GroupProduct7(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;

         public Tuple7 inverse(final Tuple7 x0) {
            return GroupProduct7.inverse$(this, x0);
         }

         public Tuple7 empty() {
            return MonoidProduct7.empty$(this);
         }

         public Tuple7 combine(final Tuple7 x0, final Tuple7 x1) {
            return SemigroupProduct7.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct7.$init$(this);
            MonoidProduct7.$init$(this);
            GroupProduct7.$init$(this);
            this.structure1 = _structure1$80;
            this.structure2 = _structure2$80;
            this.structure3 = _structure3$45;
            this.structure4 = _structure4$42;
            this.structure5 = _structure5$39;
            this.structure6 = _structure6$36;
            this.structure7 = _structure7$33;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct8$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8) {
      return $this.GroupProduct8(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8);
   }

   default Group GroupProduct8(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8) {
      return new GroupProduct8(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;

         public Tuple8 inverse(final Tuple8 x0) {
            return GroupProduct8.inverse$(this, x0);
         }

         public Tuple8 empty() {
            return MonoidProduct8.empty$(this);
         }

         public Tuple8 combine(final Tuple8 x0, final Tuple8 x1) {
            return SemigroupProduct8.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct8.$init$(this);
            MonoidProduct8.$init$(this);
            GroupProduct8.$init$(this);
            this.structure1 = _structure1$81;
            this.structure2 = _structure2$81;
            this.structure3 = _structure3$46;
            this.structure4 = _structure4$43;
            this.structure5 = _structure5$40;
            this.structure6 = _structure6$37;
            this.structure7 = _structure7$34;
            this.structure8 = _structure8$31;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct9$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9) {
      return $this.GroupProduct9(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9);
   }

   default Group GroupProduct9(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9) {
      return new GroupProduct9(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;

         public Tuple9 inverse(final Tuple9 x0) {
            return GroupProduct9.inverse$(this, x0);
         }

         public Tuple9 empty() {
            return MonoidProduct9.empty$(this);
         }

         public Tuple9 combine(final Tuple9 x0, final Tuple9 x1) {
            return SemigroupProduct9.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct9.$init$(this);
            MonoidProduct9.$init$(this);
            GroupProduct9.$init$(this);
            this.structure1 = _structure1$82;
            this.structure2 = _structure2$82;
            this.structure3 = _structure3$47;
            this.structure4 = _structure4$44;
            this.structure5 = _structure5$41;
            this.structure6 = _structure6$38;
            this.structure7 = _structure7$35;
            this.structure8 = _structure8$32;
            this.structure9 = _structure9$29;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct10$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10) {
      return $this.GroupProduct10(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10);
   }

   default Group GroupProduct10(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10) {
      return new GroupProduct10(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;

         public Tuple10 inverse(final Tuple10 x0) {
            return GroupProduct10.inverse$(this, x0);
         }

         public Tuple10 empty() {
            return MonoidProduct10.empty$(this);
         }

         public Tuple10 combine(final Tuple10 x0, final Tuple10 x1) {
            return SemigroupProduct10.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct10.$init$(this);
            MonoidProduct10.$init$(this);
            GroupProduct10.$init$(this);
            this.structure1 = _structure1$83;
            this.structure2 = _structure2$83;
            this.structure3 = _structure3$48;
            this.structure4 = _structure4$45;
            this.structure5 = _structure5$42;
            this.structure6 = _structure6$39;
            this.structure7 = _structure7$36;
            this.structure8 = _structure8$33;
            this.structure9 = _structure9$30;
            this.structure10 = _structure10$27;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct11$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11) {
      return $this.GroupProduct11(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11);
   }

   default Group GroupProduct11(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11) {
      return new GroupProduct11(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;
         private final Group structure11;

         public Tuple11 inverse(final Tuple11 x0) {
            return GroupProduct11.inverse$(this, x0);
         }

         public Tuple11 empty() {
            return MonoidProduct11.empty$(this);
         }

         public Tuple11 combine(final Tuple11 x0, final Tuple11 x1) {
            return SemigroupProduct11.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public Group structure11() {
            return this.structure11;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct11.$init$(this);
            MonoidProduct11.$init$(this);
            GroupProduct11.$init$(this);
            this.structure1 = _structure1$84;
            this.structure2 = _structure2$84;
            this.structure3 = _structure3$49;
            this.structure4 = _structure4$46;
            this.structure5 = _structure5$43;
            this.structure6 = _structure6$40;
            this.structure7 = _structure7$37;
            this.structure8 = _structure8$34;
            this.structure9 = _structure9$31;
            this.structure10 = _structure10$28;
            this.structure11 = _structure11$25;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct12$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12) {
      return $this.GroupProduct12(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12);
   }

   default Group GroupProduct12(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12) {
      return new GroupProduct12(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;
         private final Group structure11;
         private final Group structure12;

         public Tuple12 inverse(final Tuple12 x0) {
            return GroupProduct12.inverse$(this, x0);
         }

         public Tuple12 empty() {
            return MonoidProduct12.empty$(this);
         }

         public Tuple12 combine(final Tuple12 x0, final Tuple12 x1) {
            return SemigroupProduct12.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public Group structure11() {
            return this.structure11;
         }

         public Group structure12() {
            return this.structure12;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct12.$init$(this);
            MonoidProduct12.$init$(this);
            GroupProduct12.$init$(this);
            this.structure1 = _structure1$85;
            this.structure2 = _structure2$85;
            this.structure3 = _structure3$50;
            this.structure4 = _structure4$47;
            this.structure5 = _structure5$44;
            this.structure6 = _structure6$41;
            this.structure7 = _structure7$38;
            this.structure8 = _structure8$35;
            this.structure9 = _structure9$32;
            this.structure10 = _structure10$29;
            this.structure11 = _structure11$26;
            this.structure12 = _structure12$23;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct13$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13) {
      return $this.GroupProduct13(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13);
   }

   default Group GroupProduct13(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13) {
      return new GroupProduct13(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;
         private final Group structure11;
         private final Group structure12;
         private final Group structure13;

         public Tuple13 inverse(final Tuple13 x0) {
            return GroupProduct13.inverse$(this, x0);
         }

         public Tuple13 empty() {
            return MonoidProduct13.empty$(this);
         }

         public Tuple13 combine(final Tuple13 x0, final Tuple13 x1) {
            return SemigroupProduct13.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public Group structure11() {
            return this.structure11;
         }

         public Group structure12() {
            return this.structure12;
         }

         public Group structure13() {
            return this.structure13;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct13.$init$(this);
            MonoidProduct13.$init$(this);
            GroupProduct13.$init$(this);
            this.structure1 = _structure1$86;
            this.structure2 = _structure2$86;
            this.structure3 = _structure3$51;
            this.structure4 = _structure4$48;
            this.structure5 = _structure5$45;
            this.structure6 = _structure6$42;
            this.structure7 = _structure7$39;
            this.structure8 = _structure8$36;
            this.structure9 = _structure9$33;
            this.structure10 = _structure10$30;
            this.structure11 = _structure11$27;
            this.structure12 = _structure12$24;
            this.structure13 = _structure13$21;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct14$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14) {
      return $this.GroupProduct14(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14);
   }

   default Group GroupProduct14(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14) {
      return new GroupProduct14(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;
         private final Group structure11;
         private final Group structure12;
         private final Group structure13;
         private final Group structure14;

         public Tuple14 inverse(final Tuple14 x0) {
            return GroupProduct14.inverse$(this, x0);
         }

         public Tuple14 empty() {
            return MonoidProduct14.empty$(this);
         }

         public Tuple14 combine(final Tuple14 x0, final Tuple14 x1) {
            return SemigroupProduct14.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public Group structure11() {
            return this.structure11;
         }

         public Group structure12() {
            return this.structure12;
         }

         public Group structure13() {
            return this.structure13;
         }

         public Group structure14() {
            return this.structure14;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct14.$init$(this);
            MonoidProduct14.$init$(this);
            GroupProduct14.$init$(this);
            this.structure1 = _structure1$87;
            this.structure2 = _structure2$87;
            this.structure3 = _structure3$52;
            this.structure4 = _structure4$49;
            this.structure5 = _structure5$46;
            this.structure6 = _structure6$43;
            this.structure7 = _structure7$40;
            this.structure8 = _structure8$37;
            this.structure9 = _structure9$34;
            this.structure10 = _structure10$31;
            this.structure11 = _structure11$28;
            this.structure12 = _structure12$25;
            this.structure13 = _structure13$22;
            this.structure14 = _structure14$19;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct15$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15) {
      return $this.GroupProduct15(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15);
   }

   default Group GroupProduct15(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15) {
      return new GroupProduct15(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;
         private final Group structure11;
         private final Group structure12;
         private final Group structure13;
         private final Group structure14;
         private final Group structure15;

         public Tuple15 inverse(final Tuple15 x0) {
            return GroupProduct15.inverse$(this, x0);
         }

         public Tuple15 empty() {
            return MonoidProduct15.empty$(this);
         }

         public Tuple15 combine(final Tuple15 x0, final Tuple15 x1) {
            return SemigroupProduct15.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public Group structure11() {
            return this.structure11;
         }

         public Group structure12() {
            return this.structure12;
         }

         public Group structure13() {
            return this.structure13;
         }

         public Group structure14() {
            return this.structure14;
         }

         public Group structure15() {
            return this.structure15;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct15.$init$(this);
            MonoidProduct15.$init$(this);
            GroupProduct15.$init$(this);
            this.structure1 = _structure1$88;
            this.structure2 = _structure2$88;
            this.structure3 = _structure3$53;
            this.structure4 = _structure4$50;
            this.structure5 = _structure5$47;
            this.structure6 = _structure6$44;
            this.structure7 = _structure7$41;
            this.structure8 = _structure8$38;
            this.structure9 = _structure9$35;
            this.structure10 = _structure10$32;
            this.structure11 = _structure11$29;
            this.structure12 = _structure12$26;
            this.structure13 = _structure13$23;
            this.structure14 = _structure14$20;
            this.structure15 = _structure15$17;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct16$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16) {
      return $this.GroupProduct16(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16);
   }

   default Group GroupProduct16(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16) {
      return new GroupProduct16(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;
         private final Group structure11;
         private final Group structure12;
         private final Group structure13;
         private final Group structure14;
         private final Group structure15;
         private final Group structure16;

         public Tuple16 inverse(final Tuple16 x0) {
            return GroupProduct16.inverse$(this, x0);
         }

         public Tuple16 empty() {
            return MonoidProduct16.empty$(this);
         }

         public Tuple16 combine(final Tuple16 x0, final Tuple16 x1) {
            return SemigroupProduct16.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public Group structure11() {
            return this.structure11;
         }

         public Group structure12() {
            return this.structure12;
         }

         public Group structure13() {
            return this.structure13;
         }

         public Group structure14() {
            return this.structure14;
         }

         public Group structure15() {
            return this.structure15;
         }

         public Group structure16() {
            return this.structure16;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct16.$init$(this);
            MonoidProduct16.$init$(this);
            GroupProduct16.$init$(this);
            this.structure1 = _structure1$89;
            this.structure2 = _structure2$89;
            this.structure3 = _structure3$54;
            this.structure4 = _structure4$51;
            this.structure5 = _structure5$48;
            this.structure6 = _structure6$45;
            this.structure7 = _structure7$42;
            this.structure8 = _structure8$39;
            this.structure9 = _structure9$36;
            this.structure10 = _structure10$33;
            this.structure11 = _structure11$30;
            this.structure12 = _structure12$27;
            this.structure13 = _structure13$24;
            this.structure14 = _structure14$21;
            this.structure15 = _structure15$18;
            this.structure16 = _structure16$15;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct17$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16, final Group _structure17) {
      return $this.GroupProduct17(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17);
   }

   default Group GroupProduct17(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16, final Group _structure17) {
      return new GroupProduct17(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;
         private final Group structure11;
         private final Group structure12;
         private final Group structure13;
         private final Group structure14;
         private final Group structure15;
         private final Group structure16;
         private final Group structure17;

         public Tuple17 inverse(final Tuple17 x0) {
            return GroupProduct17.inverse$(this, x0);
         }

         public Tuple17 empty() {
            return MonoidProduct17.empty$(this);
         }

         public Tuple17 combine(final Tuple17 x0, final Tuple17 x1) {
            return SemigroupProduct17.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public Group structure11() {
            return this.structure11;
         }

         public Group structure12() {
            return this.structure12;
         }

         public Group structure13() {
            return this.structure13;
         }

         public Group structure14() {
            return this.structure14;
         }

         public Group structure15() {
            return this.structure15;
         }

         public Group structure16() {
            return this.structure16;
         }

         public Group structure17() {
            return this.structure17;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct17.$init$(this);
            MonoidProduct17.$init$(this);
            GroupProduct17.$init$(this);
            this.structure1 = _structure1$90;
            this.structure2 = _structure2$90;
            this.structure3 = _structure3$55;
            this.structure4 = _structure4$52;
            this.structure5 = _structure5$49;
            this.structure6 = _structure6$46;
            this.structure7 = _structure7$43;
            this.structure8 = _structure8$40;
            this.structure9 = _structure9$37;
            this.structure10 = _structure10$34;
            this.structure11 = _structure11$31;
            this.structure12 = _structure12$28;
            this.structure13 = _structure13$25;
            this.structure14 = _structure14$22;
            this.structure15 = _structure15$19;
            this.structure16 = _structure16$16;
            this.structure17 = _structure17$13;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct18$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16, final Group _structure17, final Group _structure18) {
      return $this.GroupProduct18(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18);
   }

   default Group GroupProduct18(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16, final Group _structure17, final Group _structure18) {
      return new GroupProduct18(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;
         private final Group structure11;
         private final Group structure12;
         private final Group structure13;
         private final Group structure14;
         private final Group structure15;
         private final Group structure16;
         private final Group structure17;
         private final Group structure18;

         public Tuple18 inverse(final Tuple18 x0) {
            return GroupProduct18.inverse$(this, x0);
         }

         public Tuple18 empty() {
            return MonoidProduct18.empty$(this);
         }

         public Tuple18 combine(final Tuple18 x0, final Tuple18 x1) {
            return SemigroupProduct18.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public Group structure11() {
            return this.structure11;
         }

         public Group structure12() {
            return this.structure12;
         }

         public Group structure13() {
            return this.structure13;
         }

         public Group structure14() {
            return this.structure14;
         }

         public Group structure15() {
            return this.structure15;
         }

         public Group structure16() {
            return this.structure16;
         }

         public Group structure17() {
            return this.structure17;
         }

         public Group structure18() {
            return this.structure18;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct18.$init$(this);
            MonoidProduct18.$init$(this);
            GroupProduct18.$init$(this);
            this.structure1 = _structure1$91;
            this.structure2 = _structure2$91;
            this.structure3 = _structure3$56;
            this.structure4 = _structure4$53;
            this.structure5 = _structure5$50;
            this.structure6 = _structure6$47;
            this.structure7 = _structure7$44;
            this.structure8 = _structure8$41;
            this.structure9 = _structure9$38;
            this.structure10 = _structure10$35;
            this.structure11 = _structure11$32;
            this.structure12 = _structure12$29;
            this.structure13 = _structure13$26;
            this.structure14 = _structure14$23;
            this.structure15 = _structure15$20;
            this.structure16 = _structure16$17;
            this.structure17 = _structure17$14;
            this.structure18 = _structure18$11;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct19$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16, final Group _structure17, final Group _structure18, final Group _structure19) {
      return $this.GroupProduct19(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19);
   }

   default Group GroupProduct19(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16, final Group _structure17, final Group _structure18, final Group _structure19) {
      return new GroupProduct19(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;
         private final Group structure11;
         private final Group structure12;
         private final Group structure13;
         private final Group structure14;
         private final Group structure15;
         private final Group structure16;
         private final Group structure17;
         private final Group structure18;
         private final Group structure19;

         public Tuple19 inverse(final Tuple19 x0) {
            return GroupProduct19.inverse$(this, x0);
         }

         public Tuple19 empty() {
            return MonoidProduct19.empty$(this);
         }

         public Tuple19 combine(final Tuple19 x0, final Tuple19 x1) {
            return SemigroupProduct19.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public Group structure11() {
            return this.structure11;
         }

         public Group structure12() {
            return this.structure12;
         }

         public Group structure13() {
            return this.structure13;
         }

         public Group structure14() {
            return this.structure14;
         }

         public Group structure15() {
            return this.structure15;
         }

         public Group structure16() {
            return this.structure16;
         }

         public Group structure17() {
            return this.structure17;
         }

         public Group structure18() {
            return this.structure18;
         }

         public Group structure19() {
            return this.structure19;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct19.$init$(this);
            MonoidProduct19.$init$(this);
            GroupProduct19.$init$(this);
            this.structure1 = _structure1$92;
            this.structure2 = _structure2$92;
            this.structure3 = _structure3$57;
            this.structure4 = _structure4$54;
            this.structure5 = _structure5$51;
            this.structure6 = _structure6$48;
            this.structure7 = _structure7$45;
            this.structure8 = _structure8$42;
            this.structure9 = _structure9$39;
            this.structure10 = _structure10$36;
            this.structure11 = _structure11$33;
            this.structure12 = _structure12$30;
            this.structure13 = _structure13$27;
            this.structure14 = _structure14$24;
            this.structure15 = _structure15$21;
            this.structure16 = _structure16$18;
            this.structure17 = _structure17$15;
            this.structure18 = _structure18$12;
            this.structure19 = _structure19$9;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct20$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16, final Group _structure17, final Group _structure18, final Group _structure19, final Group _structure20) {
      return $this.GroupProduct20(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20);
   }

   default Group GroupProduct20(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16, final Group _structure17, final Group _structure18, final Group _structure19, final Group _structure20) {
      return new GroupProduct20(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;
         private final Group structure11;
         private final Group structure12;
         private final Group structure13;
         private final Group structure14;
         private final Group structure15;
         private final Group structure16;
         private final Group structure17;
         private final Group structure18;
         private final Group structure19;
         private final Group structure20;

         public Tuple20 inverse(final Tuple20 x0) {
            return GroupProduct20.inverse$(this, x0);
         }

         public Tuple20 empty() {
            return MonoidProduct20.empty$(this);
         }

         public Tuple20 combine(final Tuple20 x0, final Tuple20 x1) {
            return SemigroupProduct20.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public Group structure11() {
            return this.structure11;
         }

         public Group structure12() {
            return this.structure12;
         }

         public Group structure13() {
            return this.structure13;
         }

         public Group structure14() {
            return this.structure14;
         }

         public Group structure15() {
            return this.structure15;
         }

         public Group structure16() {
            return this.structure16;
         }

         public Group structure17() {
            return this.structure17;
         }

         public Group structure18() {
            return this.structure18;
         }

         public Group structure19() {
            return this.structure19;
         }

         public Group structure20() {
            return this.structure20;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct20.$init$(this);
            MonoidProduct20.$init$(this);
            GroupProduct20.$init$(this);
            this.structure1 = _structure1$93;
            this.structure2 = _structure2$93;
            this.structure3 = _structure3$58;
            this.structure4 = _structure4$55;
            this.structure5 = _structure5$52;
            this.structure6 = _structure6$49;
            this.structure7 = _structure7$46;
            this.structure8 = _structure8$43;
            this.structure9 = _structure9$40;
            this.structure10 = _structure10$37;
            this.structure11 = _structure11$34;
            this.structure12 = _structure12$31;
            this.structure13 = _structure13$28;
            this.structure14 = _structure14$25;
            this.structure15 = _structure15$22;
            this.structure16 = _structure16$19;
            this.structure17 = _structure17$16;
            this.structure18 = _structure18$13;
            this.structure19 = _structure19$10;
            this.structure20 = _structure20$7;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct21$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16, final Group _structure17, final Group _structure18, final Group _structure19, final Group _structure20, final Group _structure21) {
      return $this.GroupProduct21(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21);
   }

   default Group GroupProduct21(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16, final Group _structure17, final Group _structure18, final Group _structure19, final Group _structure20, final Group _structure21) {
      return new GroupProduct21(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;
         private final Group structure11;
         private final Group structure12;
         private final Group structure13;
         private final Group structure14;
         private final Group structure15;
         private final Group structure16;
         private final Group structure17;
         private final Group structure18;
         private final Group structure19;
         private final Group structure20;
         private final Group structure21;

         public Tuple21 inverse(final Tuple21 x0) {
            return GroupProduct21.inverse$(this, x0);
         }

         public Tuple21 empty() {
            return MonoidProduct21.empty$(this);
         }

         public Tuple21 combine(final Tuple21 x0, final Tuple21 x1) {
            return SemigroupProduct21.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public Group structure11() {
            return this.structure11;
         }

         public Group structure12() {
            return this.structure12;
         }

         public Group structure13() {
            return this.structure13;
         }

         public Group structure14() {
            return this.structure14;
         }

         public Group structure15() {
            return this.structure15;
         }

         public Group structure16() {
            return this.structure16;
         }

         public Group structure17() {
            return this.structure17;
         }

         public Group structure18() {
            return this.structure18;
         }

         public Group structure19() {
            return this.structure19;
         }

         public Group structure20() {
            return this.structure20;
         }

         public Group structure21() {
            return this.structure21;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct21.$init$(this);
            MonoidProduct21.$init$(this);
            GroupProduct21.$init$(this);
            this.structure1 = _structure1$94;
            this.structure2 = _structure2$94;
            this.structure3 = _structure3$59;
            this.structure4 = _structure4$56;
            this.structure5 = _structure5$53;
            this.structure6 = _structure6$50;
            this.structure7 = _structure7$47;
            this.structure8 = _structure8$44;
            this.structure9 = _structure9$41;
            this.structure10 = _structure10$38;
            this.structure11 = _structure11$35;
            this.structure12 = _structure12$32;
            this.structure13 = _structure13$29;
            this.structure14 = _structure14$26;
            this.structure15 = _structure15$23;
            this.structure16 = _structure16$20;
            this.structure17 = _structure17$17;
            this.structure18 = _structure18$14;
            this.structure19 = _structure19$11;
            this.structure20 = _structure20$8;
            this.structure21 = _structure21$5;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct22$(final GroupProductInstances $this, final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16, final Group _structure17, final Group _structure18, final Group _structure19, final Group _structure20, final Group _structure21, final Group _structure22) {
      return $this.GroupProduct22(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21, _structure22);
   }

   default Group GroupProduct22(final Group _structure1, final Group _structure2, final Group _structure3, final Group _structure4, final Group _structure5, final Group _structure6, final Group _structure7, final Group _structure8, final Group _structure9, final Group _structure10, final Group _structure11, final Group _structure12, final Group _structure13, final Group _structure14, final Group _structure15, final Group _structure16, final Group _structure17, final Group _structure18, final Group _structure19, final Group _structure20, final Group _structure21, final Group _structure22) {
      return new GroupProduct22(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21, _structure22) {
         private final Group structure1;
         private final Group structure2;
         private final Group structure3;
         private final Group structure4;
         private final Group structure5;
         private final Group structure6;
         private final Group structure7;
         private final Group structure8;
         private final Group structure9;
         private final Group structure10;
         private final Group structure11;
         private final Group structure12;
         private final Group structure13;
         private final Group structure14;
         private final Group structure15;
         private final Group structure16;
         private final Group structure17;
         private final Group structure18;
         private final Group structure19;
         private final Group structure20;
         private final Group structure21;
         private final Group structure22;

         public Tuple22 inverse(final Tuple22 x0) {
            return GroupProduct22.inverse$(this, x0);
         }

         public Tuple22 empty() {
            return MonoidProduct22.empty$(this);
         }

         public Tuple22 combine(final Tuple22 x0, final Tuple22 x1) {
            return SemigroupProduct22.combine$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1;
         }

         public Group structure2() {
            return this.structure2;
         }

         public Group structure3() {
            return this.structure3;
         }

         public Group structure4() {
            return this.structure4;
         }

         public Group structure5() {
            return this.structure5;
         }

         public Group structure6() {
            return this.structure6;
         }

         public Group structure7() {
            return this.structure7;
         }

         public Group structure8() {
            return this.structure8;
         }

         public Group structure9() {
            return this.structure9;
         }

         public Group structure10() {
            return this.structure10;
         }

         public Group structure11() {
            return this.structure11;
         }

         public Group structure12() {
            return this.structure12;
         }

         public Group structure13() {
            return this.structure13;
         }

         public Group structure14() {
            return this.structure14;
         }

         public Group structure15() {
            return this.structure15;
         }

         public Group structure16() {
            return this.structure16;
         }

         public Group structure17() {
            return this.structure17;
         }

         public Group structure18() {
            return this.structure18;
         }

         public Group structure19() {
            return this.structure19;
         }

         public Group structure20() {
            return this.structure20;
         }

         public Group structure21() {
            return this.structure21;
         }

         public Group structure22() {
            return this.structure22;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct22.$init$(this);
            MonoidProduct22.$init$(this);
            GroupProduct22.$init$(this);
            this.structure1 = _structure1$95;
            this.structure2 = _structure2$95;
            this.structure3 = _structure3$60;
            this.structure4 = _structure4$57;
            this.structure5 = _structure5$54;
            this.structure6 = _structure6$51;
            this.structure7 = _structure7$48;
            this.structure8 = _structure8$45;
            this.structure9 = _structure9$42;
            this.structure10 = _structure10$39;
            this.structure11 = _structure11$36;
            this.structure12 = _structure12$33;
            this.structure13 = _structure13$30;
            this.structure14 = _structure14$27;
            this.structure15 = _structure15$24;
            this.structure16 = _structure16$21;
            this.structure17 = _structure17$18;
            this.structure18 = _structure18$15;
            this.structure19 = _structure19$12;
            this.structure20 = _structure20$9;
            this.structure21 = _structure21$6;
            this.structure22 = _structure22$3;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mDDc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mDDc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mDDc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcDD$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcDD$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2$mcDD$sp.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcDD$sp.empty$(this);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2$mcDD$sp.empty$mcDD$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDD$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDD$sp.combine$mcDD$sp$(this, x0, x1);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcD$sp();
         }

         public Group structure2() {
            return this.structure2$mcD$sp();
         }

         public Group structure1$mcD$sp() {
            return this.structure1;
         }

         public Group structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$96;
            this.structure2 = _structure2$96;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mDFc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mDFc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mDFc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcDF$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcDF$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2$mcDF$sp.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcDF$sp.empty$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2$mcDF$sp.empty$mcDF$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDF$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDF$sp.combine$mcDF$sp$(this, x0, x1);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcD$sp();
         }

         public Group structure2() {
            return this.structure2$mcF$sp();
         }

         public Group structure1$mcD$sp() {
            return this.structure1;
         }

         public Group structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$97;
            this.structure2 = _structure2$97;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mDIc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mDIc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mDIc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcDI$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcDI$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2$mcDI$sp.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcDI$sp.empty$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2$mcDI$sp.empty$mcDI$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDI$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDI$sp.combine$mcDI$sp$(this, x0, x1);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcD$sp();
         }

         public Group structure2() {
            return this.structure2$mcI$sp();
         }

         public Group structure1$mcD$sp() {
            return this.structure1;
         }

         public Group structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$98;
            this.structure2 = _structure2$98;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mDJc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mDJc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mDJc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcDJ$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcDJ$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2$mcDJ$sp.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcDJ$sp.empty$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2$mcDJ$sp.empty$mcDJ$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDJ$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDJ$sp.combine$mcDJ$sp$(this, x0, x1);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcD$sp();
         }

         public Group structure2() {
            return this.structure2$mcJ$sp();
         }

         public Group structure1$mcD$sp() {
            return this.structure1;
         }

         public Group structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$99;
            this.structure2 = _structure2$99;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mFDc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mFDc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mFDc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcFD$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcFD$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2$mcFD$sp.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcFD$sp.empty$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2$mcFD$sp.empty$mcFD$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFD$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFD$sp.combine$mcFD$sp$(this, x0, x1);
         }

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcF$sp();
         }

         public Group structure2() {
            return this.structure2$mcD$sp();
         }

         public Group structure1$mcF$sp() {
            return this.structure1;
         }

         public Group structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$100;
            this.structure2 = _structure2$100;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mFFc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mFFc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mFFc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcFF$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcFF$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2$mcFF$sp.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcFF$sp.empty$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2$mcFF$sp.empty$mcFF$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFF$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFF$sp.combine$mcFF$sp$(this, x0, x1);
         }

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcF$sp();
         }

         public Group structure2() {
            return this.structure2$mcF$sp();
         }

         public Group structure1$mcF$sp() {
            return this.structure1;
         }

         public Group structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$101;
            this.structure2 = _structure2$101;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mFIc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mFIc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mFIc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcFI$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcFI$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2$mcFI$sp.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcFI$sp.empty$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2$mcFI$sp.empty$mcFI$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFI$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFI$sp.combine$mcFI$sp$(this, x0, x1);
         }

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcF$sp();
         }

         public Group structure2() {
            return this.structure2$mcI$sp();
         }

         public Group structure1$mcF$sp() {
            return this.structure1;
         }

         public Group structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$102;
            this.structure2 = _structure2$102;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mFJc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mFJc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mFJc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcFJ$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcFJ$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2$mcFJ$sp.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcFJ$sp.empty$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2$mcFJ$sp.empty$mcFJ$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFJ$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFJ$sp.combine$mcFJ$sp$(this, x0, x1);
         }

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcF$sp();
         }

         public Group structure2() {
            return this.structure2$mcJ$sp();
         }

         public Group structure1$mcF$sp() {
            return this.structure1;
         }

         public Group structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$103;
            this.structure2 = _structure2$103;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mIDc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mIDc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mIDc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcID$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcID$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2$mcID$sp.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcID$sp.empty$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2$mcID$sp.empty$mcID$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcID$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcID$sp.combine$mcID$sp$(this, x0, x1);
         }

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcI$sp();
         }

         public Group structure2() {
            return this.structure2$mcD$sp();
         }

         public Group structure1$mcI$sp() {
            return this.structure1;
         }

         public Group structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$104;
            this.structure2 = _structure2$104;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mIFc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mIFc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mIFc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcIF$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcIF$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2$mcIF$sp.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcIF$sp.empty$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2$mcIF$sp.empty$mcIF$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcIF$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcIF$sp.combine$mcIF$sp$(this, x0, x1);
         }

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcI$sp();
         }

         public Group structure2() {
            return this.structure2$mcF$sp();
         }

         public Group structure1$mcI$sp() {
            return this.structure1;
         }

         public Group structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$105;
            this.structure2 = _structure2$105;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mIIc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mIIc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mIIc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcII$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcII$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2$mcII$sp.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcII$sp.empty$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2$mcII$sp.empty$mcII$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcII$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcII$sp.combine$mcII$sp$(this, x0, x1);
         }

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcI$sp();
         }

         public Group structure2() {
            return this.structure2$mcI$sp();
         }

         public Group structure1$mcI$sp() {
            return this.structure1;
         }

         public Group structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$106;
            this.structure2 = _structure2$106;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mIJc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mIJc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mIJc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcIJ$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcIJ$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2$mcIJ$sp.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcIJ$sp.empty$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2$mcIJ$sp.empty$mcIJ$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcIJ$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcIJ$sp.combine$mcIJ$sp$(this, x0, x1);
         }

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcJ$sp() {
            return GroupProduct2.structure1$mcJ$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcI$sp();
         }

         public Group structure2() {
            return this.structure2$mcJ$sp();
         }

         public Group structure1$mcI$sp() {
            return this.structure1;
         }

         public Group structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$107;
            this.structure2 = _structure2$107;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mJDc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mJDc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mJDc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcJD$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcJD$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2$mcJD$sp.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcJD$sp.empty$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2$mcJD$sp.empty$mcJD$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJD$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJD$sp.combine$mcJD$sp$(this, x0, x1);
         }

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcJ$sp();
         }

         public Group structure2() {
            return this.structure2$mcD$sp();
         }

         public Group structure1$mcJ$sp() {
            return this.structure1;
         }

         public Group structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$108;
            this.structure2 = _structure2$108;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mJFc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mJFc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mJFc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcJF$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcJF$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2$mcJF$sp.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcJF$sp.empty$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2$mcJF$sp.empty$mcJF$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJF$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJF$sp.combine$mcJF$sp$(this, x0, x1);
         }

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcJ$sp();
         }

         public Group structure2() {
            return this.structure2$mcF$sp();
         }

         public Group structure1$mcJ$sp() {
            return this.structure1;
         }

         public Group structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$109;
            this.structure2 = _structure2$109;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mJIc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mJIc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mJIc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcJI$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcJI$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2$mcJI$sp.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcJI$sp.empty$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2$mcJI$sp.empty$mcJI$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJI$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJI$sp.combine$mcJI$sp$(this, x0, x1);
         }

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcJ$sp() {
            return GroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcJ$sp();
         }

         public Group structure2() {
            return this.structure2$mcI$sp();
         }

         public Group structure1$mcJ$sp() {
            return this.structure1;
         }

         public Group structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$110;
            this.structure2 = _structure2$110;
         }
      };
   }

   // $FF: synthetic method
   static Group GroupProduct2$mJJc$sp$(final GroupProductInstances $this, final Group _structure1, final Group _structure2) {
      return $this.GroupProduct2$mJJc$sp(_structure1, _structure2);
   }

   default Group GroupProduct2$mJJc$sp(final Group _structure1, final Group _structure2) {
      return new GroupProduct2$mcJJ$sp(_structure1, _structure2) {
         private final Group structure1;
         private final Group structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcJJ$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2$mcJJ$sp.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcJJ$sp.empty$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2$mcJJ$sp.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJJ$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJJ$sp.combine$mcJJ$sp$(this, x0, x1);
         }

         public Group structure1$mcD$sp() {
            return GroupProduct2.structure1$mcD$sp$(this);
         }

         public Group structure1$mcF$sp() {
            return GroupProduct2.structure1$mcF$sp$(this);
         }

         public Group structure1$mcI$sp() {
            return GroupProduct2.structure1$mcI$sp$(this);
         }

         public Group structure2$mcD$sp() {
            return GroupProduct2.structure2$mcD$sp$(this);
         }

         public Group structure2$mcF$sp() {
            return GroupProduct2.structure2$mcF$sp$(this);
         }

         public Group structure2$mcI$sp() {
            return GroupProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public Monoid reverse() {
            return Monoid.reverse$(this);
         }

         public Monoid reverse$mcD$sp() {
            return Monoid.reverse$mcD$sp$(this);
         }

         public Monoid reverse$mcF$sp() {
            return Monoid.reverse$mcF$sp$(this);
         }

         public Monoid reverse$mcI$sp() {
            return Monoid.reverse$mcI$sp$(this);
         }

         public Monoid reverse$mcJ$sp() {
            return Monoid.reverse$mcJ$sp$(this);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public Semigroup intercalate(final Object middle) {
            return Semigroup.intercalate$(this, middle);
         }

         public Semigroup intercalate$mcD$sp(final double middle) {
            return Semigroup.intercalate$mcD$sp$(this, middle);
         }

         public Semigroup intercalate$mcF$sp(final float middle) {
            return Semigroup.intercalate$mcF$sp$(this, middle);
         }

         public Semigroup intercalate$mcI$sp(final int middle) {
            return Semigroup.intercalate$mcI$sp$(this, middle);
         }

         public Semigroup intercalate$mcJ$sp(final long middle) {
            return Semigroup.intercalate$mcJ$sp$(this, middle);
         }

         public Group structure1() {
            return this.structure1$mcJ$sp();
         }

         public Group structure2() {
            return this.structure2$mcJ$sp();
         }

         public Group structure1$mcJ$sp() {
            return this.structure1;
         }

         public Group structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$111;
            this.structure2 = _structure2$111;
         }
      };
   }

   static void $init$(final GroupProductInstances $this) {
   }
}
