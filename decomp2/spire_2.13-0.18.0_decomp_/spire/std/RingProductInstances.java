package spire.std;

import algebra.ring.AdditiveCommutativeGroup;
import algebra.ring.AdditiveCommutativeMonoid;
import algebra.ring.AdditiveCommutativeSemigroup;
import algebra.ring.AdditiveGroup;
import algebra.ring.AdditiveMonoid;
import algebra.ring.AdditiveSemigroup;
import algebra.ring.MultiplicativeMonoid;
import algebra.ring.MultiplicativeSemigroup;
import algebra.ring.Ring;
import cats.kernel.CommutativeGroup;
import cats.kernel.Eq;
import cats.kernel.Monoid;
import scala.Option;
import scala.Tuple10;
import scala.Tuple11;
import scala.Tuple12;
import scala.Tuple13;
import scala.Tuple14;
import scala.Tuple15;
import scala.Tuple16;
import scala.Tuple17;
import scala.Tuple18;
import scala.Tuple19;
import scala.Tuple2;
import scala.Tuple20;
import scala.Tuple21;
import scala.Tuple22;
import scala.Tuple3;
import scala.Tuple4;
import scala.Tuple5;
import scala.Tuple6;
import scala.Tuple7;
import scala.Tuple8;
import scala.Tuple9;
import scala.collection.IterableOnce;
import scala.math.BigInt;
import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u0005)\u0015baB\f\u0019!\u0003\r\t!\b\u0005\u0006I\u0001!\t!\n\u0005\u0006S\u0001!\u0019A\u000b\u0005\u0006m\u0002!\u0019a\u001e\u0005\b\u0003/\u0001A1AA\r\u0011\u001d\tI\u0005\u0001C\u0002\u0003\u0017Bq!a!\u0001\t\u0007\t)\tC\u0004\u0002F\u0002!\u0019!a2\t\u000f\t=\u0001\u0001b\u0001\u0003\u0012!9!\u0011\r\u0001\u0005\u0004\t\r\u0004b\u0002B^\u0001\u0011\r!Q\u0018\u0005\b\u0007;\u0001A1AB\u0010\u0011\u001d\u00199\t\u0001C\u0002\u0007\u0013Cqa!?\u0001\t\u0007\u0019Y\u0010C\u0004\u0005t\u0001!\u0019\u0001\"\u001e\t\u000f\u0011U\b\u0001b\u0001\u0005x\"9Qq\u0010\u0001\u0005\u0004\u0015\u0005\u0005b\u0002D\t\u0001\u0011\ra1\u0003\u0005\b\rW\u0003A1\u0001DW\u0011\u001d9i\u0005\u0001C\u0002\u000f\u001fBqab>\u0001\t\u00079I\u0010C\u0004\t*\u0002!\u0019\u0001c+\t\u000f%\r\u0004\u0001b\u0001\nf\t!\"+\u001b8h!J|G-^2u\u0013:\u001cH/\u00198dKNT!!\u0007\u000e\u0002\u0007M$HMC\u0001\u001c\u0003\u0015\u0019\b/\u001b:f\u0007\u0001\u0019\"\u0001\u0001\u0010\u0011\u0005}\u0011S\"\u0001\u0011\u000b\u0003\u0005\nQa]2bY\u0006L!a\t\u0011\u0003\r\u0005s\u0017PU3g\u0003\u0019!\u0013N\\5uIQ\ta\u0005\u0005\u0002 O%\u0011\u0001\u0006\t\u0002\u0005+:LG/\u0001\u0007SS:<\u0007K]8ek\u000e$('F\u0002,\u0003\u0016$2\u0001\f9t!\ri\u0013\b\u0010\b\u0003]Yr!a\f\u001b\u000f\u0005A\u001aT\"A\u0019\u000b\u0005Ib\u0012A\u0002\u001fs_>$h(C\u0001\u001c\u0013\t)$$A\u0004bY\u001e,'M]1\n\u0005]B\u0014a\u00029bG.\fw-\u001a\u0006\u0003kiI!AO\u001e\u0003\tIKgn\u001a\u0006\u0003oa\u0002BaH\u001f@I&\u0011a\b\t\u0002\u0007)V\u0004H.\u001a\u001a\u0011\u0005\u0001\u000bE\u0002\u0001\u0003\n\u0005\n\u0001\u000b\u0011!AC\u0002\r\u0013\u0011!Q\t\u0003\t\u001e\u0003\"aH#\n\u0005\u0019\u0003#a\u0002(pi\"Lgn\u001a\t\u0003?!K!!\u0013\u0011\u0003\u0007\u0005s\u0017\u0010\u000b\u0004B\u0017:+&l\u0018\t\u0003?1K!!\u0014\u0011\u0003\u0017M\u0004XmY5bY&TX\rZ\u0019\u0006G=\u0003&+\u0015\b\u0003?AK!!\u0015\u0011\u0002\u0007%sG/\r\u0003%'R\u000bcB\u0001\u0019U\u0013\u0005\t\u0013'B\u0012W/fCfBA\u0010X\u0013\tA\u0006%\u0001\u0003M_:<\u0017\u0007\u0002\u0013T)\u0006\nTaI.]=vs!a\b/\n\u0005u\u0003\u0013!\u0002$m_\u0006$\u0018\u0007\u0002\u0013T)\u0006\nTa\t1bG\nt!aH1\n\u0005\t\u0004\u0013A\u0002#pk\ndW-\r\u0003%'R\u000b\u0003C\u0001!f\t%1'\u0001)A\u0001\u0002\u000b\u00071IA\u0001CQ\u0019)7\n\u001b6m]F*1e\u0014)j#F\"Ae\u0015+\"c\u0015\u0019ckV6Yc\u0011!3\u000bV\u00112\u000b\rZF,\\/2\t\u0011\u001aF+I\u0019\u0006G\u0001\fwNY\u0019\u0005IM#\u0016\u0005C\u0003r\u0005\u0001\u000f!/A\u0006`gR\u0014Xo\u0019;ve\u0016\f\u0004cA\u0017:\u007f!)AO\u0001a\u0002k\u0006Yql\u001d;sk\u000e$XO]33!\ri\u0013\bZ\u0001\r%&tw\r\u0015:pIV\u001cGoM\u000b\u0007qz\f\t!!\u0002\u0015\u000fe\fI!!\u0004\u0002\u0012A\u0019Q&\u000f>\u0011\r}YXp`A\u0002\u0013\ta\bE\u0001\u0004UkBdWm\r\t\u0003\u0001z$QAQ\u0002C\u0002\r\u00032\u0001QA\u0001\t\u001517A1\u0001D!\r\u0001\u0015Q\u0001\u0003\u0007\u0003\u000f\u0019!\u0019A\"\u0003\u0003\rCa!]\u0002A\u0004\u0005-\u0001cA\u0017:{\"1Ao\u0001a\u0002\u0003\u001f\u00012!L\u001d\u0000\u0011\u001d\t\u0019b\u0001a\u0002\u0003+\t1bX:ueV\u001cG/\u001e:fgA!Q&OA\u0002\u00031\u0011\u0016N\\4Qe>$Wo\u0019;5+)\tY\"a\n\u0002,\u0005=\u00121\u0007\u000b\u000b\u0003;\t9$a\u000f\u0002@\u0005\r\u0003\u0003B\u0017:\u0003?\u00012bHA\u0011\u0003K\tI#!\f\u00022%\u0019\u00111\u0005\u0011\u0003\rQ+\b\u000f\\35!\r\u0001\u0015q\u0005\u0003\u0006\u0005\u0012\u0011\ra\u0011\t\u0004\u0001\u0006-B!\u00024\u0005\u0005\u0004\u0019\u0005c\u0001!\u00020\u00111\u0011q\u0001\u0003C\u0002\r\u00032\u0001QA\u001a\t\u0019\t)\u0004\u0002b\u0001\u0007\n\tA\t\u0003\u0004r\t\u0001\u000f\u0011\u0011\b\t\u0005[e\n)\u0003\u0003\u0004u\t\u0001\u000f\u0011Q\b\t\u0005[e\nI\u0003C\u0004\u0002\u0014\u0011\u0001\u001d!!\u0011\u0011\t5J\u0014Q\u0006\u0005\b\u0003\u000b\"\u00019AA$\u0003-y6\u000f\u001e:vGR,(/\u001a\u001b\u0011\t5J\u0014\u0011G\u0001\r%&tw\r\u0015:pIV\u001cG/N\u000b\r\u0003\u001b\nI&!\u0018\u0002b\u0005\u0015\u0014\u0011\u000e\u000b\r\u0003\u001f\ni'!\u001d\u0002v\u0005e\u0014Q\u0010\t\u0005[e\n\t\u0006E\u0007 \u0003'\n9&a\u0017\u0002`\u0005\r\u0014qM\u0005\u0004\u0003+\u0002#A\u0002+va2,W\u0007E\u0002A\u00033\"QAQ\u0003C\u0002\r\u00032\u0001QA/\t\u00151WA1\u0001D!\r\u0001\u0015\u0011\r\u0003\u0007\u0003\u000f)!\u0019A\"\u0011\u0007\u0001\u000b)\u0007\u0002\u0004\u00026\u0015\u0011\ra\u0011\t\u0004\u0001\u0006%DABA6\u000b\t\u00071IA\u0001F\u0011\u0019\tX\u0001q\u0001\u0002pA!Q&OA,\u0011\u0019!X\u0001q\u0001\u0002tA!Q&OA.\u0011\u001d\t\u0019\"\u0002a\u0002\u0003o\u0002B!L\u001d\u0002`!9\u0011QI\u0003A\u0004\u0005m\u0004\u0003B\u0017:\u0003GBq!a \u0006\u0001\b\t\t)A\u0006`gR\u0014Xo\u0019;ve\u0016,\u0004\u0003B\u0017:\u0003O\nABU5oOB\u0013x\u000eZ;diZ*b\"a\"\u0002\u0014\u0006]\u00151TAP\u0003G\u000b9\u000b\u0006\b\u0002\n\u0006-\u0016qVAZ\u0003o\u000bY,a0\u0011\t5J\u00141\u0012\t\u0010?\u00055\u0015\u0011SAK\u00033\u000bi*!)\u0002&&\u0019\u0011q\u0012\u0011\u0003\rQ+\b\u000f\\37!\r\u0001\u00151\u0013\u0003\u0006\u0005\u001a\u0011\ra\u0011\t\u0004\u0001\u0006]E!\u00024\u0007\u0005\u0004\u0019\u0005c\u0001!\u0002\u001c\u00121\u0011q\u0001\u0004C\u0002\r\u00032\u0001QAP\t\u0019\t)D\u0002b\u0001\u0007B\u0019\u0001)a)\u0005\r\u0005-dA1\u0001D!\r\u0001\u0015q\u0015\u0003\u0007\u0003S3!\u0019A\"\u0003\u0003\u0019Ca!\u001d\u0004A\u0004\u00055\u0006\u0003B\u0017:\u0003#Ca\u0001\u001e\u0004A\u0004\u0005E\u0006\u0003B\u0017:\u0003+Cq!a\u0005\u0007\u0001\b\t)\f\u0005\u0003.s\u0005e\u0005bBA#\r\u0001\u000f\u0011\u0011\u0018\t\u0005[e\ni\nC\u0004\u0002\u0000\u0019\u0001\u001d!!0\u0011\t5J\u0014\u0011\u0015\u0005\b\u0003\u00034\u00019AAb\u0003-y6\u000f\u001e:vGR,(/\u001a\u001c\u0011\t5J\u0014QU\u0001\r%&tw\r\u0015:pIV\u001cGoN\u000b\u0011\u0003\u0013\f).!7\u0002^\u0006\u0005\u0018Q]Au\u0003[$\u0002#a3\u0002r\u0006U\u0018\u0011`A\u007f\u0005\u0003\u0011)A!\u0003\u0011\t5J\u0014Q\u001a\t\u0012?\u0005=\u00171[Al\u00037\fy.a9\u0002h\u0006-\u0018bAAiA\t1A+\u001e9mK^\u00022\u0001QAk\t\u0015\u0011uA1\u0001D!\r\u0001\u0015\u0011\u001c\u0003\u0006M\u001e\u0011\ra\u0011\t\u0004\u0001\u0006uGABA\u0004\u000f\t\u00071\tE\u0002A\u0003C$a!!\u000e\b\u0005\u0004\u0019\u0005c\u0001!\u0002f\u00121\u00111N\u0004C\u0002\r\u00032\u0001QAu\t\u0019\tIk\u0002b\u0001\u0007B\u0019\u0001)!<\u0005\r\u0005=xA1\u0001D\u0005\u00059\u0005BB9\b\u0001\b\t\u0019\u0010\u0005\u0003.s\u0005M\u0007B\u0002;\b\u0001\b\t9\u0010\u0005\u0003.s\u0005]\u0007bBA\n\u000f\u0001\u000f\u00111 \t\u0005[e\nY\u000eC\u0004\u0002F\u001d\u0001\u001d!a@\u0011\t5J\u0014q\u001c\u0005\b\u0003\u007f:\u00019\u0001B\u0002!\u0011i\u0013(a9\t\u000f\u0005\u0005w\u0001q\u0001\u0003\bA!Q&OAt\u0011\u001d\u0011Ya\u0002a\u0002\u0005\u001b\t1bX:ueV\u001cG/\u001e:foA!Q&OAv\u00031\u0011\u0016N\\4Qe>$Wo\u0019;9+I\u0011\u0019Ba\b\u0003$\t\u001d\"1\u0006B\u0018\u0005g\u00119Da\u000f\u0015%\tU!q\bB\"\u0005\u000f\u0012YEa\u0014\u0003T\t]#1\f\t\u0005[e\u00129\u0002E\n \u00053\u0011iB!\t\u0003&\t%\"Q\u0006B\u0019\u0005k\u0011I$C\u0002\u0003\u001c\u0001\u0012a\u0001V;qY\u0016D\u0004c\u0001!\u0003 \u0011)!\t\u0003b\u0001\u0007B\u0019\u0001Ia\t\u0005\u000b\u0019D!\u0019A\"\u0011\u0007\u0001\u00139\u0003\u0002\u0004\u0002\b!\u0011\ra\u0011\t\u0004\u0001\n-BABA\u001b\u0011\t\u00071\tE\u0002A\u0005_!a!a\u001b\t\u0005\u0004\u0019\u0005c\u0001!\u00034\u00111\u0011\u0011\u0016\u0005C\u0002\r\u00032\u0001\u0011B\u001c\t\u0019\ty\u000f\u0003b\u0001\u0007B\u0019\u0001Ia\u000f\u0005\r\tu\u0002B1\u0001D\u0005\u0005A\u0005BB9\t\u0001\b\u0011\t\u0005\u0005\u0003.s\tu\u0001B\u0002;\t\u0001\b\u0011)\u0005\u0005\u0003.s\t\u0005\u0002bBA\n\u0011\u0001\u000f!\u0011\n\t\u0005[e\u0012)\u0003C\u0004\u0002F!\u0001\u001dA!\u0014\u0011\t5J$\u0011\u0006\u0005\b\u0003\u007fB\u00019\u0001B)!\u0011i\u0013H!\f\t\u000f\u0005\u0005\u0007\u0002q\u0001\u0003VA!Q&\u000fB\u0019\u0011\u001d\u0011Y\u0001\u0003a\u0002\u00053\u0002B!L\u001d\u00036!9!Q\f\u0005A\u0004\t}\u0013aC0tiJ,8\r^;sKb\u0002B!L\u001d\u0003:\u0005a!+\u001b8h!J|G-^2usU!\"Q\rB9\u0005k\u0012IH! \u0003\u0002\n\u0015%\u0011\u0012BG\u0005##BCa\u001a\u0003\u0016\ne%Q\u0014BQ\u0005K\u0013IK!,\u00032\nU\u0006\u0003B\u0017:\u0005S\u0002Rc\bB6\u0005_\u0012\u0019Ha\u001e\u0003|\t}$1\u0011BD\u0005\u0017\u0013y)C\u0002\u0003n\u0001\u0012a\u0001V;qY\u0016L\u0004c\u0001!\u0003r\u0011)!)\u0003b\u0001\u0007B\u0019\u0001I!\u001e\u0005\u000b\u0019L!\u0019A\"\u0011\u0007\u0001\u0013I\b\u0002\u0004\u0002\b%\u0011\ra\u0011\t\u0004\u0001\nuDABA\u001b\u0013\t\u00071\tE\u0002A\u0005\u0003#a!a\u001b\n\u0005\u0004\u0019\u0005c\u0001!\u0003\u0006\u00121\u0011\u0011V\u0005C\u0002\r\u00032\u0001\u0011BE\t\u0019\ty/\u0003b\u0001\u0007B\u0019\u0001I!$\u0005\r\tu\u0012B1\u0001D!\r\u0001%\u0011\u0013\u0003\u0007\u0005'K!\u0019A\"\u0003\u0003%Ca!]\u0005A\u0004\t]\u0005\u0003B\u0017:\u0005_Ba\u0001^\u0005A\u0004\tm\u0005\u0003B\u0017:\u0005gBq!a\u0005\n\u0001\b\u0011y\n\u0005\u0003.s\t]\u0004bBA#\u0013\u0001\u000f!1\u0015\t\u0005[e\u0012Y\bC\u0004\u0002\u0000%\u0001\u001dAa*\u0011\t5J$q\u0010\u0005\b\u0003\u0003L\u00019\u0001BV!\u0011i\u0013Ha!\t\u000f\t-\u0011\u0002q\u0001\u00030B!Q&\u000fBD\u0011\u001d\u0011i&\u0003a\u0002\u0005g\u0003B!L\u001d\u0003\f\"9!qW\u0005A\u0004\te\u0016aC0tiJ,8\r^;sKf\u0002B!L\u001d\u0003\u0010\u0006i!+\u001b8h!J|G-^2ucA*bCa0\u0003L\n='1\u001bBl\u00057\u0014yNa9\u0003h\n-(q\u001e\u000b\u0017\u0005\u0003\u0014\u0019Pa>\u0003|\n}81AB\u0004\u0007\u0017\u0019yaa\u0005\u0004\u0018A!Q&\u000fBb!]y\"Q\u0019Be\u0005\u001b\u0014\tN!6\u0003Z\nu'\u0011\u001dBs\u0005S\u0014i/C\u0002\u0003H\u0002\u0012q\u0001V;qY\u0016\f\u0004\u0007E\u0002A\u0005\u0017$QA\u0011\u0006C\u0002\r\u00032\u0001\u0011Bh\t\u00151'B1\u0001D!\r\u0001%1\u001b\u0003\u0007\u0003\u000fQ!\u0019A\"\u0011\u0007\u0001\u00139\u000e\u0002\u0004\u00026)\u0011\ra\u0011\t\u0004\u0001\nmGABA6\u0015\t\u00071\tE\u0002A\u0005?$a!!+\u000b\u0005\u0004\u0019\u0005c\u0001!\u0003d\u00121\u0011q\u001e\u0006C\u0002\r\u00032\u0001\u0011Bt\t\u0019\u0011iD\u0003b\u0001\u0007B\u0019\u0001Ia;\u0005\r\tM%B1\u0001D!\r\u0001%q\u001e\u0003\u0007\u0005cT!\u0019A\"\u0003\u0003)Ca!\u001d\u0006A\u0004\tU\b\u0003B\u0017:\u0005\u0013Da\u0001\u001e\u0006A\u0004\te\b\u0003B\u0017:\u0005\u001bDq!a\u0005\u000b\u0001\b\u0011i\u0010\u0005\u0003.s\tE\u0007bBA#\u0015\u0001\u000f1\u0011\u0001\t\u0005[e\u0012)\u000eC\u0004\u0002\u0000)\u0001\u001da!\u0002\u0011\t5J$\u0011\u001c\u0005\b\u0003\u0003T\u00019AB\u0005!\u0011i\u0013H!8\t\u000f\t-!\u0002q\u0001\u0004\u000eA!Q&\u000fBq\u0011\u001d\u0011iF\u0003a\u0002\u0007#\u0001B!L\u001d\u0003f\"9!q\u0017\u0006A\u0004\rU\u0001\u0003B\u0017:\u0005SDqa!\u0007\u000b\u0001\b\u0019Y\"\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\f\u0004\u0007\u0005\u0003.s\t5\u0018!\u0004*j]\u001e\u0004&o\u001c3vGR\f\u0014'\u0006\r\u0004\"\r52\u0011GB\u001b\u0007s\u0019id!\u0011\u0004F\r%3QJB)\u0007+\"\u0002da\t\u0004Z\ru3\u0011MB3\u0007S\u001aig!\u001d\u0004v\re4QPBA!\u0011i\u0013h!\n\u00113}\u00199ca\u000b\u00040\rM2qGB\u001e\u0007\u007f\u0019\u0019ea\u0012\u0004L\r=31K\u0005\u0004\u0007S\u0001#a\u0002+va2,\u0017'\r\t\u0004\u0001\u000e5B!\u0002\"\f\u0005\u0004\u0019\u0005c\u0001!\u00042\u0011)am\u0003b\u0001\u0007B\u0019\u0001i!\u000e\u0005\r\u0005\u001d1B1\u0001D!\r\u00015\u0011\b\u0003\u0007\u0003kY!\u0019A\"\u0011\u0007\u0001\u001bi\u0004\u0002\u0004\u0002l-\u0011\ra\u0011\t\u0004\u0001\u000e\u0005CABAU\u0017\t\u00071\tE\u0002A\u0007\u000b\"a!a<\f\u0005\u0004\u0019\u0005c\u0001!\u0004J\u00111!QH\u0006C\u0002\r\u00032\u0001QB'\t\u0019\u0011\u0019j\u0003b\u0001\u0007B\u0019\u0001i!\u0015\u0005\r\tE8B1\u0001D!\r\u00015Q\u000b\u0003\u0007\u0007/Z!\u0019A\"\u0003\u0003-Ca!]\u0006A\u0004\rm\u0003\u0003B\u0017:\u0007WAa\u0001^\u0006A\u0004\r}\u0003\u0003B\u0017:\u0007_Aq!a\u0005\f\u0001\b\u0019\u0019\u0007\u0005\u0003.s\rM\u0002bBA#\u0017\u0001\u000f1q\r\t\u0005[e\u001a9\u0004C\u0004\u0002\u0000-\u0001\u001daa\u001b\u0011\t5J41\b\u0005\b\u0003\u0003\\\u00019AB8!\u0011i\u0013ha\u0010\t\u000f\t-1\u0002q\u0001\u0004tA!Q&OB\"\u0011\u001d\u0011if\u0003a\u0002\u0007o\u0002B!L\u001d\u0004H!9!qW\u0006A\u0004\rm\u0004\u0003B\u0017:\u0007\u0017Bqa!\u0007\f\u0001\b\u0019y\b\u0005\u0003.s\r=\u0003bBBB\u0017\u0001\u000f1QQ\u0001\r?N$(/^2ukJ,\u0017'\r\t\u0005[e\u001a\u0019&A\u0007SS:<\u0007K]8ek\u000e$\u0018GM\u000b\u001b\u0007\u0017\u001b9ja'\u0004 \u000e\r6qUBV\u0007_\u001b\u0019la.\u0004<\u000e}61\u0019\u000b\u001b\u0007\u001b\u001b9ma3\u0004P\u000eM7q[Bn\u0007?\u001c\u0019oa:\u0004l\u000e=81\u001f\t\u0005[e\u001ay\tE\u000e \u0007#\u001b)j!'\u0004\u001e\u000e\u00056QUBU\u0007[\u001b\tl!.\u0004:\u000eu6\u0011Y\u0005\u0004\u0007'\u0003#a\u0002+va2,\u0017G\r\t\u0004\u0001\u000e]E!\u0002\"\r\u0005\u0004\u0019\u0005c\u0001!\u0004\u001c\u0012)a\r\u0004b\u0001\u0007B\u0019\u0001ia(\u0005\r\u0005\u001dAB1\u0001D!\r\u000151\u0015\u0003\u0007\u0003ka!\u0019A\"\u0011\u0007\u0001\u001b9\u000b\u0002\u0004\u0002l1\u0011\ra\u0011\t\u0004\u0001\u000e-FABAU\u0019\t\u00071\tE\u0002A\u0007_#a!a<\r\u0005\u0004\u0019\u0005c\u0001!\u00044\u00121!Q\b\u0007C\u0002\r\u00032\u0001QB\\\t\u0019\u0011\u0019\n\u0004b\u0001\u0007B\u0019\u0001ia/\u0005\r\tEHB1\u0001D!\r\u00015q\u0018\u0003\u0007\u0007/b!\u0019A\"\u0011\u0007\u0001\u001b\u0019\r\u0002\u0004\u0004F2\u0011\ra\u0011\u0002\u0002\u0019\"1\u0011\u000f\u0004a\u0002\u0007\u0013\u0004B!L\u001d\u0004\u0016\"1A\u000f\u0004a\u0002\u0007\u001b\u0004B!L\u001d\u0004\u001a\"9\u00111\u0003\u0007A\u0004\rE\u0007\u0003B\u0017:\u0007;Cq!!\u0012\r\u0001\b\u0019)\u000e\u0005\u0003.s\r\u0005\u0006bBA@\u0019\u0001\u000f1\u0011\u001c\t\u0005[e\u001a)\u000bC\u0004\u0002B2\u0001\u001da!8\u0011\t5J4\u0011\u0016\u0005\b\u0005\u0017a\u00019ABq!\u0011i\u0013h!,\t\u000f\tuC\u0002q\u0001\u0004fB!Q&OBY\u0011\u001d\u00119\f\u0004a\u0002\u0007S\u0004B!L\u001d\u00046\"91\u0011\u0004\u0007A\u0004\r5\b\u0003B\u0017:\u0007sCqaa!\r\u0001\b\u0019\t\u0010\u0005\u0003.s\ru\u0006bBB{\u0019\u0001\u000f1q_\u0001\r?N$(/^2ukJ,\u0017G\r\t\u0005[e\u001a\t-A\u0007SS:<\u0007K]8ek\u000e$\u0018gM\u000b\u001d\u0007{$I\u0001\"\u0004\u0005\u0012\u0011UA\u0011\u0004C\u000f\tC!)\u0003\"\u000b\u0005.\u0011EBQ\u0007C\u001d)q\u0019y\u0010\"\u0010\u0005B\u0011\u0015C\u0011\nC'\t#\")\u0006\"\u0017\u0005^\u0011\u0005DQ\rC5\t[\u0002B!L\u001d\u0005\u0002Air\u0004b\u0001\u0005\b\u0011-Aq\u0002C\n\t/!Y\u0002b\b\u0005$\u0011\u001dB1\u0006C\u0018\tg!9$C\u0002\u0005\u0006\u0001\u0012q\u0001V;qY\u0016\f4\u0007E\u0002A\t\u0013!QAQ\u0007C\u0002\r\u00032\u0001\u0011C\u0007\t\u00151WB1\u0001D!\r\u0001E\u0011\u0003\u0003\u0007\u0003\u000fi!\u0019A\"\u0011\u0007\u0001#)\u0002\u0002\u0004\u000265\u0011\ra\u0011\t\u0004\u0001\u0012eAABA6\u001b\t\u00071\tE\u0002A\t;!a!!+\u000e\u0005\u0004\u0019\u0005c\u0001!\u0005\"\u00111\u0011q^\u0007C\u0002\r\u00032\u0001\u0011C\u0013\t\u0019\u0011i$\u0004b\u0001\u0007B\u0019\u0001\t\"\u000b\u0005\r\tMUB1\u0001D!\r\u0001EQ\u0006\u0003\u0007\u0005cl!\u0019A\"\u0011\u0007\u0001#\t\u0004\u0002\u0004\u0004X5\u0011\ra\u0011\t\u0004\u0001\u0012UBABBc\u001b\t\u00071\tE\u0002A\ts!a\u0001b\u000f\u000e\u0005\u0004\u0019%!A'\t\rEl\u00019\u0001C !\u0011i\u0013\bb\u0002\t\rQl\u00019\u0001C\"!\u0011i\u0013\bb\u0003\t\u000f\u0005MQ\u0002q\u0001\u0005HA!Q&\u000fC\b\u0011\u001d\t)%\u0004a\u0002\t\u0017\u0002B!L\u001d\u0005\u0014!9\u0011qP\u0007A\u0004\u0011=\u0003\u0003B\u0017:\t/Aq!!1\u000e\u0001\b!\u0019\u0006\u0005\u0003.s\u0011m\u0001b\u0002B\u0006\u001b\u0001\u000fAq\u000b\t\u0005[e\"y\u0002C\u0004\u0003^5\u0001\u001d\u0001b\u0017\u0011\t5JD1\u0005\u0005\b\u0005ok\u00019\u0001C0!\u0011i\u0013\bb\n\t\u000f\reQ\u0002q\u0001\u0005dA!Q&\u000fC\u0016\u0011\u001d\u0019\u0019)\u0004a\u0002\tO\u0002B!L\u001d\u00050!91Q_\u0007A\u0004\u0011-\u0004\u0003B\u0017:\tgAq\u0001b\u001c\u000e\u0001\b!\t(\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\f4\u0007\u0005\u0003.s\u0011]\u0012!\u0004*j]\u001e\u0004&o\u001c3vGR\fD'\u0006\u0010\u0005x\u0011\rEq\u0011CF\t\u001f#\u0019\nb&\u0005\u001c\u0012}E1\u0015CT\tW#y\u000bb-\u00058RqB\u0011\u0010C^\t\u007f#\u0019\rb2\u0005L\u0012=G1\u001bCl\t7$y\u000eb9\u0005h\u0012-Hq\u001e\t\u0005[e\"Y\bE\u0010 \t{\"\t\t\"\"\u0005\n\u00125E\u0011\u0013CK\t3#i\n\")\u0005&\u0012%FQ\u0016CY\tkK1\u0001b !\u0005\u001d!V\u000f\u001d7fcQ\u00022\u0001\u0011CB\t\u0015\u0011eB1\u0001D!\r\u0001Eq\u0011\u0003\u0006M:\u0011\ra\u0011\t\u0004\u0001\u0012-EABA\u0004\u001d\t\u00071\tE\u0002A\t\u001f#a!!\u000e\u000f\u0005\u0004\u0019\u0005c\u0001!\u0005\u0014\u00121\u00111\u000e\bC\u0002\r\u00032\u0001\u0011CL\t\u0019\tIK\u0004b\u0001\u0007B\u0019\u0001\tb'\u0005\r\u0005=hB1\u0001D!\r\u0001Eq\u0014\u0003\u0007\u0005{q!\u0019A\"\u0011\u0007\u0001#\u0019\u000b\u0002\u0004\u0003\u0014:\u0011\ra\u0011\t\u0004\u0001\u0012\u001dFA\u0002By\u001d\t\u00071\tE\u0002A\tW#aaa\u0016\u000f\u0005\u0004\u0019\u0005c\u0001!\u00050\u001211Q\u0019\bC\u0002\r\u00032\u0001\u0011CZ\t\u0019!YD\u0004b\u0001\u0007B\u0019\u0001\tb.\u0005\r\u0011efB1\u0001D\u0005\u0005q\u0005BB9\u000f\u0001\b!i\f\u0005\u0003.s\u0011\u0005\u0005B\u0002;\u000f\u0001\b!\t\r\u0005\u0003.s\u0011\u0015\u0005bBA\n\u001d\u0001\u000fAQ\u0019\t\u0005[e\"I\tC\u0004\u0002F9\u0001\u001d\u0001\"3\u0011\t5JDQ\u0012\u0005\b\u0003\u007fr\u00019\u0001Cg!\u0011i\u0013\b\"%\t\u000f\u0005\u0005g\u0002q\u0001\u0005RB!Q&\u000fCK\u0011\u001d\u0011YA\u0004a\u0002\t+\u0004B!L\u001d\u0005\u001a\"9!Q\f\bA\u0004\u0011e\u0007\u0003B\u0017:\t;CqAa.\u000f\u0001\b!i\u000e\u0005\u0003.s\u0011\u0005\u0006bBB\r\u001d\u0001\u000fA\u0011\u001d\t\u0005[e\")\u000bC\u0004\u0004\u0004:\u0001\u001d\u0001\":\u0011\t5JD\u0011\u0016\u0005\b\u0007kt\u00019\u0001Cu!\u0011i\u0013\b\",\t\u000f\u0011=d\u0002q\u0001\u0005nB!Q&\u000fCY\u0011\u001d!\tP\u0004a\u0002\tg\fAbX:ueV\u001cG/\u001e:fcQ\u0002B!L\u001d\u00056\u0006i!+\u001b8h!J|G-^2ucU*\u0002\u0005\"?\u0006\u0006\u0015%QQBC\t\u000b+)I\"\"\b\u0006\"\u0015\u0015R\u0011FC\u0017\u000bc))$\"\u000f\u0006>Q\u0001C1`C!\u000b\u000b*I%\"\u0014\u0006R\u0015US\u0011LC/\u000bC*)'\"\u001b\u0006n\u0015ETQOC=!\u0011i\u0013\b\"@\u0011C}!y0b\u0001\u0006\b\u0015-QqBC\n\u000b/)Y\"b\b\u0006$\u0015\u001dR1FC\u0018\u000bg)9$b\u000f\n\u0007\u0015\u0005\u0001EA\u0004UkBdW-M\u001b\u0011\u0007\u0001+)\u0001B\u0003C\u001f\t\u00071\tE\u0002A\u000b\u0013!QAZ\bC\u0002\r\u00032\u0001QC\u0007\t\u0019\t9a\u0004b\u0001\u0007B\u0019\u0001)\"\u0005\u0005\r\u0005UrB1\u0001D!\r\u0001UQ\u0003\u0003\u0007\u0003Wz!\u0019A\"\u0011\u0007\u0001+I\u0002\u0002\u0004\u0002*>\u0011\ra\u0011\t\u0004\u0001\u0016uAABAx\u001f\t\u00071\tE\u0002A\u000bC!aA!\u0010\u0010\u0005\u0004\u0019\u0005c\u0001!\u0006&\u00111!1S\bC\u0002\r\u00032\u0001QC\u0015\t\u0019\u0011\tp\u0004b\u0001\u0007B\u0019\u0001)\"\f\u0005\r\r]sB1\u0001D!\r\u0001U\u0011\u0007\u0003\u0007\u0007\u000b|!\u0019A\"\u0011\u0007\u0001+)\u0004\u0002\u0004\u0005<=\u0011\ra\u0011\t\u0004\u0001\u0016eBA\u0002C]\u001f\t\u00071\tE\u0002A\u000b{!a!b\u0010\u0010\u0005\u0004\u0019%!A(\t\rE|\u00019AC\"!\u0011i\u0013(b\u0001\t\rQ|\u00019AC$!\u0011i\u0013(b\u0002\t\u000f\u0005Mq\u0002q\u0001\u0006LA!Q&OC\u0006\u0011\u001d\t)e\u0004a\u0002\u000b\u001f\u0002B!L\u001d\u0006\u0010!9\u0011qP\bA\u0004\u0015M\u0003\u0003B\u0017:\u000b'Aq!!1\u0010\u0001\b)9\u0006\u0005\u0003.s\u0015]\u0001b\u0002B\u0006\u001f\u0001\u000fQ1\f\t\u0005[e*Y\u0002C\u0004\u0003^=\u0001\u001d!b\u0018\u0011\t5JTq\u0004\u0005\b\u0005o{\u00019AC2!\u0011i\u0013(b\t\t\u000f\req\u0002q\u0001\u0006hA!Q&OC\u0014\u0011\u001d\u0019\u0019i\u0004a\u0002\u000bW\u0002B!L\u001d\u0006,!91Q_\bA\u0004\u0015=\u0004\u0003B\u0017:\u000b_Aq\u0001b\u001c\u0010\u0001\b)\u0019\b\u0005\u0003.s\u0015M\u0002b\u0002Cy\u001f\u0001\u000fQq\u000f\t\u0005[e*9\u0004C\u0004\u0006|=\u0001\u001d!\" \u0002\u0019}\u001bHO];diV\u0014X-M\u001b\u0011\t5JT1H\u0001\u000e%&tw\r\u0015:pIV\u001cG/\r\u001c\u0016E\u0015\rUqRCJ\u000b/+Y*b(\u0006$\u0016\u001dV1VCX\u000bg+9,b/\u0006@\u0016\rWqYCf)\t*))b4\u0006T\u0016]W1\\Cp\u000bG,9/b;\u0006p\u0016MXq_C~\u000b\u007f4\u0019Ab\u0002\u0007\fA!Q&OCD!\rzR\u0011RCG\u000b#+)*\"'\u0006\u001e\u0016\u0005VQUCU\u000b[+\t,\".\u0006:\u0016uV\u0011YCc\u000b\u0013L1!b#!\u0005\u001d!V\u000f\u001d7fcY\u00022\u0001QCH\t\u0015\u0011\u0005C1\u0001D!\r\u0001U1\u0013\u0003\u0006MB\u0011\ra\u0011\t\u0004\u0001\u0016]EABA\u0004!\t\u00071\tE\u0002A\u000b7#a!!\u000e\u0011\u0005\u0004\u0019\u0005c\u0001!\u0006 \u00121\u00111\u000e\tC\u0002\r\u00032\u0001QCR\t\u0019\tI\u000b\u0005b\u0001\u0007B\u0019\u0001)b*\u0005\r\u0005=\bC1\u0001D!\r\u0001U1\u0016\u0003\u0007\u0005{\u0001\"\u0019A\"\u0011\u0007\u0001+y\u000b\u0002\u0004\u0003\u0014B\u0011\ra\u0011\t\u0004\u0001\u0016MFA\u0002By!\t\u00071\tE\u0002A\u000bo#aaa\u0016\u0011\u0005\u0004\u0019\u0005c\u0001!\u0006<\u001211Q\u0019\tC\u0002\r\u00032\u0001QC`\t\u0019!Y\u0004\u0005b\u0001\u0007B\u0019\u0001)b1\u0005\r\u0011e\u0006C1\u0001D!\r\u0001Uq\u0019\u0003\u0007\u000b\u007f\u0001\"\u0019A\"\u0011\u0007\u0001+Y\r\u0002\u0004\u0006NB\u0011\ra\u0011\u0002\u0002!\"1\u0011\u000f\u0005a\u0002\u000b#\u0004B!L\u001d\u0006\u000e\"1A\u000f\u0005a\u0002\u000b+\u0004B!L\u001d\u0006\u0012\"9\u00111\u0003\tA\u0004\u0015e\u0007\u0003B\u0017:\u000b+Cq!!\u0012\u0011\u0001\b)i\u000e\u0005\u0003.s\u0015e\u0005bBA@!\u0001\u000fQ\u0011\u001d\t\u0005[e*i\nC\u0004\u0002BB\u0001\u001d!\":\u0011\t5JT\u0011\u0015\u0005\b\u0005\u0017\u0001\u00029ACu!\u0011i\u0013(\"*\t\u000f\tu\u0003\u0003q\u0001\u0006nB!Q&OCU\u0011\u001d\u00119\f\u0005a\u0002\u000bc\u0004B!L\u001d\u0006.\"91\u0011\u0004\tA\u0004\u0015U\b\u0003B\u0017:\u000bcCqaa!\u0011\u0001\b)I\u0010\u0005\u0003.s\u0015U\u0006bBB{!\u0001\u000fQQ \t\u0005[e*I\fC\u0004\u0005pA\u0001\u001dA\"\u0001\u0011\t5JTQ\u0018\u0005\b\tc\u0004\u00029\u0001D\u0003!\u0011i\u0013(\"1\t\u000f\u0015m\u0004\u0003q\u0001\u0007\nA!Q&OCc\u0011\u001d1i\u0001\u0005a\u0002\r\u001f\tAbX:ueV\u001cG/\u001e:fcY\u0002B!L\u001d\u0006J\u0006i!+\u001b8h!J|G-^2uc]*BE\"\u0006\u0007\"\u0019\u0015b\u0011\u0006D\u0017\rc1)D\"\u000f\u0007>\u0019\u0005cQ\tD%\r\u001b2\tF\"\u0016\u0007Z\u0019uc\u0011\r\u000b%\r/1)G\"\u001b\u0007n\u0019EdQ\u000fD=\r{2\tI\"\"\u0007\n\u001a5e\u0011\u0013DK\r33iJ\")\u0007&B!Q&\u000fD\r!\u0015zb1\u0004D\u0010\rG19Cb\u000b\u00070\u0019Mbq\u0007D\u001e\r\u007f1\u0019Eb\u0012\u0007L\u0019=c1\u000bD,\r72y&C\u0002\u0007\u001e\u0001\u0012q\u0001V;qY\u0016\ft\u0007E\u0002A\rC!QAQ\tC\u0002\r\u00032\u0001\u0011D\u0013\t\u00151\u0017C1\u0001D!\r\u0001e\u0011\u0006\u0003\u0007\u0003\u000f\t\"\u0019A\"\u0011\u0007\u00013i\u0003\u0002\u0004\u00026E\u0011\ra\u0011\t\u0004\u0001\u001aEBABA6#\t\u00071\tE\u0002A\rk!a!!+\u0012\u0005\u0004\u0019\u0005c\u0001!\u0007:\u00111\u0011q^\tC\u0002\r\u00032\u0001\u0011D\u001f\t\u0019\u0011i$\u0005b\u0001\u0007B\u0019\u0001I\"\u0011\u0005\r\tM\u0015C1\u0001D!\r\u0001eQ\t\u0003\u0007\u0005c\f\"\u0019A\"\u0011\u0007\u00013I\u0005\u0002\u0004\u0004XE\u0011\ra\u0011\t\u0004\u0001\u001a5CABBc#\t\u00071\tE\u0002A\r#\"a\u0001b\u000f\u0012\u0005\u0004\u0019\u0005c\u0001!\u0007V\u00111A\u0011X\tC\u0002\r\u00032\u0001\u0011D-\t\u0019)y$\u0005b\u0001\u0007B\u0019\u0001I\"\u0018\u0005\r\u00155\u0017C1\u0001D!\r\u0001e\u0011\r\u0003\u0007\rG\n\"\u0019A\"\u0003\u0003ECa!]\tA\u0004\u0019\u001d\u0004\u0003B\u0017:\r?Aa\u0001^\tA\u0004\u0019-\u0004\u0003B\u0017:\rGAq!a\u0005\u0012\u0001\b1y\u0007\u0005\u0003.s\u0019\u001d\u0002bBA##\u0001\u000fa1\u000f\t\u0005[e2Y\u0003C\u0004\u0002\u0000E\u0001\u001dAb\u001e\u0011\t5Jdq\u0006\u0005\b\u0003\u0003\f\u00029\u0001D>!\u0011i\u0013Hb\r\t\u000f\t-\u0011\u0003q\u0001\u0007\u0000A!Q&\u000fD\u001c\u0011\u001d\u0011i&\u0005a\u0002\r\u0007\u0003B!L\u001d\u0007<!9!qW\tA\u0004\u0019\u001d\u0005\u0003B\u0017:\r\u007fAqa!\u0007\u0012\u0001\b1Y\t\u0005\u0003.s\u0019\r\u0003bBBB#\u0001\u000faq\u0012\t\u0005[e29\u0005C\u0004\u0004vF\u0001\u001dAb%\u0011\t5Jd1\n\u0005\b\t_\n\u00029\u0001DL!\u0011i\u0013Hb\u0014\t\u000f\u0011E\u0018\u0003q\u0001\u0007\u001cB!Q&\u000fD*\u0011\u001d)Y(\u0005a\u0002\r?\u0003B!L\u001d\u0007X!9aQB\tA\u0004\u0019\r\u0006\u0003B\u0017:\r7BqAb*\u0012\u0001\b1I+\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\ft\u0007\u0005\u0003.s\u0019}\u0013!\u0004*j]\u001e\u0004&o\u001c3vGR\f\u0004(\u0006\u0014\u00070\u001amfq\u0018Db\r\u000f4YMb4\u0007T\u001a]g1\u001cDp\rG49Ob;\u0007p\u001aMhq\u001fD~\r\u007f$bE\"-\b\u0004\u001d\u001dq1BD\b\u000f'99bb\u0007\b \u001d\rrqED\u0016\u000f_9\u0019db\u000e\b<\u001d}r1ID$!\u0011i\u0013Hb-\u0011O}1)L\"/\u0007>\u001a\u0005gQ\u0019De\r\u001b4\tN\"6\u0007Z\u001aug\u0011\u001dDs\rS4iO\"=\u0007v\u001aehQ`\u0005\u0004\ro\u0003#a\u0002+va2,\u0017\u0007\u000f\t\u0004\u0001\u001amF!\u0002\"\u0013\u0005\u0004\u0019\u0005c\u0001!\u0007@\u0012)aM\u0005b\u0001\u0007B\u0019\u0001Ib1\u0005\r\u0005\u001d!C1\u0001D!\r\u0001eq\u0019\u0003\u0007\u0003k\u0011\"\u0019A\"\u0011\u0007\u00013Y\r\u0002\u0004\u0002lI\u0011\ra\u0011\t\u0004\u0001\u001a=GABAU%\t\u00071\tE\u0002A\r'$a!a<\u0013\u0005\u0004\u0019\u0005c\u0001!\u0007X\u00121!Q\b\nC\u0002\r\u00032\u0001\u0011Dn\t\u0019\u0011\u0019J\u0005b\u0001\u0007B\u0019\u0001Ib8\u0005\r\tE(C1\u0001D!\r\u0001e1\u001d\u0003\u0007\u0007/\u0012\"\u0019A\"\u0011\u0007\u000139\u000f\u0002\u0004\u0004FJ\u0011\ra\u0011\t\u0004\u0001\u001a-HA\u0002C\u001e%\t\u00071\tE\u0002A\r_$a\u0001\"/\u0013\u0005\u0004\u0019\u0005c\u0001!\u0007t\u00121Qq\b\nC\u0002\r\u00032\u0001\u0011D|\t\u0019)iM\u0005b\u0001\u0007B\u0019\u0001Ib?\u0005\r\u0019\r$C1\u0001D!\r\u0001eq \u0003\u0007\u000f\u0003\u0011\"\u0019A\"\u0003\u0003ICa!\u001d\nA\u0004\u001d\u0015\u0001\u0003B\u0017:\rsCa\u0001\u001e\nA\u0004\u001d%\u0001\u0003B\u0017:\r{Cq!a\u0005\u0013\u0001\b9i\u0001\u0005\u0003.s\u0019\u0005\u0007bBA#%\u0001\u000fq\u0011\u0003\t\u0005[e2)\rC\u0004\u0002\u0000I\u0001\u001da\"\u0006\u0011\t5Jd\u0011\u001a\u0005\b\u0003\u0003\u0014\u00029AD\r!\u0011i\u0013H\"4\t\u000f\t-!\u0003q\u0001\b\u001eA!Q&\u000fDi\u0011\u001d\u0011iF\u0005a\u0002\u000fC\u0001B!L\u001d\u0007V\"9!q\u0017\nA\u0004\u001d\u0015\u0002\u0003B\u0017:\r3Dqa!\u0007\u0013\u0001\b9I\u0003\u0005\u0003.s\u0019u\u0007bBBB%\u0001\u000fqQ\u0006\t\u0005[e2\t\u000fC\u0004\u0004vJ\u0001\u001da\"\r\u0011\t5JdQ\u001d\u0005\b\t_\u0012\u00029AD\u001b!\u0011i\u0013H\";\t\u000f\u0011E(\u0003q\u0001\b:A!Q&\u000fDw\u0011\u001d)YH\u0005a\u0002\u000f{\u0001B!L\u001d\u0007r\"9aQ\u0002\nA\u0004\u001d\u0005\u0003\u0003B\u0017:\rkDqAb*\u0013\u0001\b9)\u0005\u0005\u0003.s\u0019e\bbBD%%\u0001\u000fq1J\u0001\r?N$(/^2ukJ,\u0017\u0007\u000f\t\u0005[e2i0A\u0007SS:<\u0007K]8ek\u000e$\u0018'O\u000b)\u000f#:if\"\u0019\bf\u001d%tQND9\u000fk:Ih\" \b\u0002\u001e\u0015u\u0011RDG\u000f#;)j\"'\b\u001e\u001e\u0005vQ\u0015\u000b)\u000f':Ik\",\b2\u001eUv\u0011XD_\u000f\u0003<)m\"3\bN\u001eEwQ[Dm\u000f;<\to\":\bj\u001e5x\u0011\u001f\t\u0005[e:)\u0006E\u0015 \u000f/:Yfb\u0018\bd\u001d\u001dt1ND8\u000fg:9hb\u001f\b\u0000\u001d\ruqQDF\u000f\u001f;\u0019jb&\b\u001c\u001e}u1U\u0005\u0004\u000f3\u0002#a\u0002+va2,\u0017'\u000f\t\u0004\u0001\u001euC!\u0002\"\u0014\u0005\u0004\u0019\u0005c\u0001!\bb\u0011)am\u0005b\u0001\u0007B\u0019\u0001i\"\u001a\u0005\r\u0005\u001d1C1\u0001D!\r\u0001u\u0011\u000e\u0003\u0007\u0003k\u0019\"\u0019A\"\u0011\u0007\u0001;i\u0007\u0002\u0004\u0002lM\u0011\ra\u0011\t\u0004\u0001\u001eEDABAU'\t\u00071\tE\u0002A\u000fk\"a!a<\u0014\u0005\u0004\u0019\u0005c\u0001!\bz\u00111!QH\nC\u0002\r\u00032\u0001QD?\t\u0019\u0011\u0019j\u0005b\u0001\u0007B\u0019\u0001i\"!\u0005\r\tE8C1\u0001D!\r\u0001uQ\u0011\u0003\u0007\u0007/\u001a\"\u0019A\"\u0011\u0007\u0001;I\t\u0002\u0004\u0004FN\u0011\ra\u0011\t\u0004\u0001\u001e5EA\u0002C\u001e'\t\u00071\tE\u0002A\u000f##a\u0001\"/\u0014\u0005\u0004\u0019\u0005c\u0001!\b\u0016\u00121QqH\nC\u0002\r\u00032\u0001QDM\t\u0019)im\u0005b\u0001\u0007B\u0019\u0001i\"(\u0005\r\u0019\r4C1\u0001D!\r\u0001u\u0011\u0015\u0003\u0007\u000f\u0003\u0019\"\u0019A\"\u0011\u0007\u0001;)\u000b\u0002\u0004\b(N\u0011\ra\u0011\u0002\u0002'\"1\u0011o\u0005a\u0002\u000fW\u0003B!L\u001d\b\\!1Ao\u0005a\u0002\u000f_\u0003B!L\u001d\b`!9\u00111C\nA\u0004\u001dM\u0006\u0003B\u0017:\u000fGBq!!\u0012\u0014\u0001\b99\f\u0005\u0003.s\u001d\u001d\u0004bBA@'\u0001\u000fq1\u0018\t\u0005[e:Y\u0007C\u0004\u0002BN\u0001\u001dab0\u0011\t5Jtq\u000e\u0005\b\u0005\u0017\u0019\u00029ADb!\u0011i\u0013hb\u001d\t\u000f\tu3\u0003q\u0001\bHB!Q&OD<\u0011\u001d\u00119l\u0005a\u0002\u000f\u0017\u0004B!L\u001d\b|!91\u0011D\nA\u0004\u001d=\u0007\u0003B\u0017:\u000f\u007fBqaa!\u0014\u0001\b9\u0019\u000e\u0005\u0003.s\u001d\r\u0005bBB{'\u0001\u000fqq\u001b\t\u0005[e:9\tC\u0004\u0005pM\u0001\u001dab7\u0011\t5Jt1\u0012\u0005\b\tc\u001c\u00029ADp!\u0011i\u0013hb$\t\u000f\u0015m4\u0003q\u0001\bdB!Q&ODJ\u0011\u001d1ia\u0005a\u0002\u000fO\u0004B!L\u001d\b\u0018\"9aqU\nA\u0004\u001d-\b\u0003B\u0017:\u000f7Cqa\"\u0013\u0014\u0001\b9y\u000f\u0005\u0003.s\u001d}\u0005bBDz'\u0001\u000fqQ_\u0001\r?N$(/^2ukJ,\u0017'\u000f\t\u0005[e:\u0019+A\u0007SS:<\u0007K]8ek\u000e$(\u0007M\u000b+\u000fwD9\u0001c\u0003\t\u0010!M\u0001r\u0003E\u000e\u0011?A\u0019\u0003c\n\t,!=\u00022\u0007E\u001c\u0011wAy\u0004c\u0011\tH!-\u0003r\nE*)):i\u0010c\u0016\t\\!}\u00032\rE4\u0011WBy\u0007c\u001d\tx!m\u0004r\u0010EB\u0011\u000fCY\tc$\t\u0014\"]\u00052\u0014EP\u0011G\u0003B!L\u001d\b\u0000BYs\u0004#\u0001\t\u0006!%\u0001R\u0002E\t\u0011+AI\u0002#\b\t\"!\u0015\u0002\u0012\u0006E\u0017\u0011cA)\u0004#\u000f\t>!\u0005\u0003R\tE%\u0011\u001bB\t&C\u0002\t\u0004\u0001\u0012q\u0001V;qY\u0016\u0014\u0004\u0007E\u0002A\u0011\u000f!QA\u0011\u000bC\u0002\r\u00032\u0001\u0011E\u0006\t\u00151GC1\u0001D!\r\u0001\u0005r\u0002\u0003\u0007\u0003\u000f!\"\u0019A\"\u0011\u0007\u0001C\u0019\u0002\u0002\u0004\u00026Q\u0011\ra\u0011\t\u0004\u0001\"]AABA6)\t\u00071\tE\u0002A\u00117!a!!+\u0015\u0005\u0004\u0019\u0005c\u0001!\t \u00111\u0011q\u001e\u000bC\u0002\r\u00032\u0001\u0011E\u0012\t\u0019\u0011i\u0004\u0006b\u0001\u0007B\u0019\u0001\tc\n\u0005\r\tMEC1\u0001D!\r\u0001\u00052\u0006\u0003\u0007\u0005c$\"\u0019A\"\u0011\u0007\u0001Cy\u0003\u0002\u0004\u0004XQ\u0011\ra\u0011\t\u0004\u0001\"MBABBc)\t\u00071\tE\u0002A\u0011o!a\u0001b\u000f\u0015\u0005\u0004\u0019\u0005c\u0001!\t<\u00111A\u0011\u0018\u000bC\u0002\r\u00032\u0001\u0011E \t\u0019)y\u0004\u0006b\u0001\u0007B\u0019\u0001\tc\u0011\u0005\r\u00155GC1\u0001D!\r\u0001\u0005r\t\u0003\u0007\rG\"\"\u0019A\"\u0011\u0007\u0001CY\u0005\u0002\u0004\b\u0002Q\u0011\ra\u0011\t\u0004\u0001\"=CABDT)\t\u00071\tE\u0002A\u0011'\"a\u0001#\u0016\u0015\u0005\u0004\u0019%!\u0001+\t\rE$\u00029\u0001E-!\u0011i\u0013\b#\u0002\t\rQ$\u00029\u0001E/!\u0011i\u0013\b#\u0003\t\u000f\u0005MA\u0003q\u0001\tbA!Q&\u000fE\u0007\u0011\u001d\t)\u0005\u0006a\u0002\u0011K\u0002B!L\u001d\t\u0012!9\u0011q\u0010\u000bA\u0004!%\u0004\u0003B\u0017:\u0011+Aq!!1\u0015\u0001\bAi\u0007\u0005\u0003.s!e\u0001b\u0002B\u0006)\u0001\u000f\u0001\u0012\u000f\t\u0005[eBi\u0002C\u0004\u0003^Q\u0001\u001d\u0001#\u001e\u0011\t5J\u0004\u0012\u0005\u0005\b\u0005o#\u00029\u0001E=!\u0011i\u0013\b#\n\t\u000f\reA\u0003q\u0001\t~A!Q&\u000fE\u0015\u0011\u001d\u0019\u0019\t\u0006a\u0002\u0011\u0003\u0003B!L\u001d\t.!91Q\u001f\u000bA\u0004!\u0015\u0005\u0003B\u0017:\u0011cAq\u0001b\u001c\u0015\u0001\bAI\t\u0005\u0003.s!U\u0002b\u0002Cy)\u0001\u000f\u0001R\u0012\t\u0005[eBI\u0004C\u0004\u0006|Q\u0001\u001d\u0001#%\u0011\t5J\u0004R\b\u0005\b\r\u001b!\u00029\u0001EK!\u0011i\u0013\b#\u0011\t\u000f\u0019\u001dF\u0003q\u0001\t\u001aB!Q&\u000fE#\u0011\u001d9I\u0005\u0006a\u0002\u0011;\u0003B!L\u001d\tJ!9q1\u001f\u000bA\u0004!\u0005\u0006\u0003B\u0017:\u0011\u001bBq\u0001#*\u0015\u0001\bA9+\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\u0014\u0004\u0007\u0005\u0003.s!E\u0013!\u0004*j]\u001e\u0004&o\u001c3vGR\u0014\u0014'\u0006\u0017\t.\"e\u0006R\u0018Ea\u0011\u000bDI\r#4\tR\"U\u0007\u0012\u001cEo\u0011CD)\u000f#;\tn\"E\bR\u001fE}\u0011{L\t!#\u0002\n\nQa\u0003rVE\u0007\u0013#I)\"#\u0007\n\u001e%\u0005\u0012REE\u0015\u0013[I\t$#\u000e\n:%u\u0012\u0012IE#\u0013\u0013Ji%#\u0015\nV%e\u0013R\f\t\u0005[eB\t\fE\u0017 \u0011gC9\fc/\t@\"\r\u0007r\u0019Ef\u0011\u001fD\u0019\u000ec6\t\\\"}\u00072\u001dEt\u0011WDy\u000fc=\tx\"m\br`E\u0002\u0013\u000fI1\u0001#.!\u0005\u001d!V\u000f\u001d7feE\u00022\u0001\u0011E]\t\u0015\u0011UC1\u0001D!\r\u0001\u0005R\u0018\u0003\u0006MV\u0011\ra\u0011\t\u0004\u0001\"\u0005GABA\u0004+\t\u00071\tE\u0002A\u0011\u000b$a!!\u000e\u0016\u0005\u0004\u0019\u0005c\u0001!\tJ\u00121\u00111N\u000bC\u0002\r\u00032\u0001\u0011Eg\t\u0019\tI+\u0006b\u0001\u0007B\u0019\u0001\t#5\u0005\r\u0005=XC1\u0001D!\r\u0001\u0005R\u001b\u0003\u0007\u0005{)\"\u0019A\"\u0011\u0007\u0001CI\u000e\u0002\u0004\u0003\u0014V\u0011\ra\u0011\t\u0004\u0001\"uGA\u0002By+\t\u00071\tE\u0002A\u0011C$aaa\u0016\u0016\u0005\u0004\u0019\u0005c\u0001!\tf\u001211QY\u000bC\u0002\r\u00032\u0001\u0011Eu\t\u0019!Y$\u0006b\u0001\u0007B\u0019\u0001\t#<\u0005\r\u0011eVC1\u0001D!\r\u0001\u0005\u0012\u001f\u0003\u0007\u000b\u007f)\"\u0019A\"\u0011\u0007\u0001C)\u0010\u0002\u0004\u0006NV\u0011\ra\u0011\t\u0004\u0001\"eHA\u0002D2+\t\u00071\tE\u0002A\u0011{$aa\"\u0001\u0016\u0005\u0004\u0019\u0005c\u0001!\n\u0002\u00111qqU\u000bC\u0002\r\u00032\u0001QE\u0003\t\u0019A)&\u0006b\u0001\u0007B\u0019\u0001)#\u0003\u0005\r%-QC1\u0001D\u0005\u0005)\u0006BB9\u0016\u0001\bIy\u0001\u0005\u0003.s!]\u0006B\u0002;\u0016\u0001\bI\u0019\u0002\u0005\u0003.s!m\u0006bBA\n+\u0001\u000f\u0011r\u0003\t\u0005[eBy\fC\u0004\u0002FU\u0001\u001d!c\u0007\u0011\t5J\u00042\u0019\u0005\b\u0003\u007f*\u00029AE\u0010!\u0011i\u0013\bc2\t\u000f\u0005\u0005W\u0003q\u0001\n$A!Q&\u000fEf\u0011\u001d\u0011Y!\u0006a\u0002\u0013O\u0001B!L\u001d\tP\"9!QL\u000bA\u0004%-\u0002\u0003B\u0017:\u0011'DqAa.\u0016\u0001\bIy\u0003\u0005\u0003.s!]\u0007bBB\r+\u0001\u000f\u00112\u0007\t\u0005[eBY\u000eC\u0004\u0004\u0004V\u0001\u001d!c\u000e\u0011\t5J\u0004r\u001c\u0005\b\u0007k,\u00029AE\u001e!\u0011i\u0013\bc9\t\u000f\u0011=T\u0003q\u0001\n@A!Q&\u000fEt\u0011\u001d!\t0\u0006a\u0002\u0013\u0007\u0002B!L\u001d\tl\"9Q1P\u000bA\u0004%\u001d\u0003\u0003B\u0017:\u0011_DqA\"\u0004\u0016\u0001\bIY\u0005\u0005\u0003.s!M\bb\u0002DT+\u0001\u000f\u0011r\n\t\u0005[eB9\u0010C\u0004\bJU\u0001\u001d!c\u0015\u0011\t5J\u00042 \u0005\b\u000fg,\u00029AE,!\u0011i\u0013\bc@\t\u000f!\u0015V\u0003q\u0001\n\\A!Q&OE\u0002\u0011\u001dIy&\u0006a\u0002\u0013C\nAbX:ueV\u001cG/\u001e:feE\u0002B!L\u001d\n\b\u0005i!+\u001b8h!J|G-^2ueI*b&c\u001a\nt%]\u00142PE@\u0013\u0007K9)c#\n\u0010&M\u0015rSEN\u0013?K\u0019+c*\n,&=\u00162WE\\\u0013wKy,c1\nHRq\u0013\u0012NEf\u0013\u001fL\u0019.c6\n\\&}\u00172]Et\u0013WLy/c=\nx&m\u0018r F\u0002\u0015\u000fQYAc\u0004\u000b\u0014)]!2\u0004F\u0010!\u0011i\u0013(c\u001b\u0011_}Ii'#\u001d\nv%e\u0014RPEA\u0013\u000bKI)#$\n\u0012&U\u0015\u0012TEO\u0013CK)+#+\n.&E\u0016RWE]\u0013{K\t-#2\n\u0007%=\u0004EA\u0004UkBdWM\r\u001a\u0011\u0007\u0001K\u0019\bB\u0003C-\t\u00071\tE\u0002A\u0013o\"QA\u001a\fC\u0002\r\u00032\u0001QE>\t\u0019\t9A\u0006b\u0001\u0007B\u0019\u0001)c \u0005\r\u0005UbC1\u0001D!\r\u0001\u00152\u0011\u0003\u0007\u0003W2\"\u0019A\"\u0011\u0007\u0001K9\t\u0002\u0004\u0002*Z\u0011\ra\u0011\t\u0004\u0001&-EABAx-\t\u00071\tE\u0002A\u0013\u001f#aA!\u0010\u0017\u0005\u0004\u0019\u0005c\u0001!\n\u0014\u00121!1\u0013\fC\u0002\r\u00032\u0001QEL\t\u0019\u0011\tP\u0006b\u0001\u0007B\u0019\u0001)c'\u0005\r\r]cC1\u0001D!\r\u0001\u0015r\u0014\u0003\u0007\u0007\u000b4\"\u0019A\"\u0011\u0007\u0001K\u0019\u000b\u0002\u0004\u0005<Y\u0011\ra\u0011\t\u0004\u0001&\u001dFA\u0002C]-\t\u00071\tE\u0002A\u0013W#a!b\u0010\u0017\u0005\u0004\u0019\u0005c\u0001!\n0\u00121QQ\u001a\fC\u0002\r\u00032\u0001QEZ\t\u00191\u0019G\u0006b\u0001\u0007B\u0019\u0001)c.\u0005\r\u001d\u0005aC1\u0001D!\r\u0001\u00152\u0018\u0003\u0007\u000fO3\"\u0019A\"\u0011\u0007\u0001Ky\f\u0002\u0004\tVY\u0011\ra\u0011\t\u0004\u0001&\rGABE\u0006-\t\u00071\tE\u0002A\u0013\u000f$a!#3\u0017\u0005\u0004\u0019%!\u0001,\t\rE4\u00029AEg!\u0011i\u0013(#\u001d\t\rQ4\u00029AEi!\u0011i\u0013(#\u001e\t\u000f\u0005Ma\u0003q\u0001\nVB!Q&OE=\u0011\u001d\t)E\u0006a\u0002\u00133\u0004B!L\u001d\n~!9\u0011q\u0010\fA\u0004%u\u0007\u0003B\u0017:\u0013\u0003Cq!!1\u0017\u0001\bI\t\u000f\u0005\u0003.s%\u0015\u0005b\u0002B\u0006-\u0001\u000f\u0011R\u001d\t\u0005[eJI\tC\u0004\u0003^Y\u0001\u001d!#;\u0011\t5J\u0014R\u0012\u0005\b\u0005o3\u00029AEw!\u0011i\u0013(#%\t\u000f\rea\u0003q\u0001\nrB!Q&OEK\u0011\u001d\u0019\u0019I\u0006a\u0002\u0013k\u0004B!L\u001d\n\u001a\"91Q\u001f\fA\u0004%e\b\u0003B\u0017:\u0013;Cq\u0001b\u001c\u0017\u0001\bIi\u0010\u0005\u0003.s%\u0005\u0006b\u0002Cy-\u0001\u000f!\u0012\u0001\t\u0005[eJ)\u000bC\u0004\u0006|Y\u0001\u001dA#\u0002\u0011\t5J\u0014\u0012\u0016\u0005\b\r\u001b1\u00029\u0001F\u0005!\u0011i\u0013(#,\t\u000f\u0019\u001df\u0003q\u0001\u000b\u000eA!Q&OEY\u0011\u001d9IE\u0006a\u0002\u0015#\u0001B!L\u001d\n6\"9q1\u001f\fA\u0004)U\u0001\u0003B\u0017:\u0013sCq\u0001#*\u0017\u0001\bQI\u0002\u0005\u0003.s%u\u0006bBE0-\u0001\u000f!R\u0004\t\u0005[eJ\t\rC\u0004\u000b\"Y\u0001\u001dAc\t\u0002\u0019}\u001bHO];diV\u0014XM\r\u001a\u0011\t5J\u0014R\u0019"
)
public interface RingProductInstances {
   // $FF: synthetic method
   static Ring RingProduct2$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2(_structure1, _structure2);
   }

   default Ring RingProduct2(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt(final int x0) {
            return RingProduct2.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2.one$(this);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2.negate$(this, x0);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2.zero$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$260;
            this.structure2 = _structure2$260;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct3$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3) {
      return $this.RingProduct3(_structure1, _structure2, _structure3);
   }

   default Ring RingProduct3(final Ring _structure1, final Ring _structure2, final Ring _structure3) {
      return new RingProduct3(_structure1, _structure2, _structure3) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;

         public Tuple3 fromInt(final int x0) {
            return RingProduct3.fromInt$(this, x0);
         }

         public Tuple3 one() {
            return RingProduct3.one$(this);
         }

         public Tuple3 negate(final Tuple3 x0) {
            return RngProduct3.negate$(this, x0);
         }

         public Tuple3 zero() {
            return SemiringProduct3.zero$(this);
         }

         public Tuple3 plus(final Tuple3 x0, final Tuple3 x1) {
            return SemiringProduct3.plus$(this, x0, x1);
         }

         public Tuple3 times(final Tuple3 x0, final Tuple3 x1) {
            return SemiringProduct3.times$(this, x0, x1);
         }

         public Tuple3 pow(final Tuple3 x0, final int x1) {
            return SemiringProduct3.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct3.$init$(this);
            RngProduct3.$init$(this);
            RingProduct3.$init$(this);
            this.structure1 = _structure1$261;
            this.structure2 = _structure2$261;
            this.structure3 = _structure3$141;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct4$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4) {
      return $this.RingProduct4(_structure1, _structure2, _structure3, _structure4);
   }

   default Ring RingProduct4(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4) {
      return new RingProduct4(_structure1, _structure2, _structure3, _structure4) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;

         public Tuple4 fromInt(final int x0) {
            return RingProduct4.fromInt$(this, x0);
         }

         public Tuple4 one() {
            return RingProduct4.one$(this);
         }

         public Tuple4 negate(final Tuple4 x0) {
            return RngProduct4.negate$(this, x0);
         }

         public Tuple4 zero() {
            return SemiringProduct4.zero$(this);
         }

         public Tuple4 plus(final Tuple4 x0, final Tuple4 x1) {
            return SemiringProduct4.plus$(this, x0, x1);
         }

         public Tuple4 times(final Tuple4 x0, final Tuple4 x1) {
            return SemiringProduct4.times$(this, x0, x1);
         }

         public Tuple4 pow(final Tuple4 x0, final int x1) {
            return SemiringProduct4.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct4.$init$(this);
            RngProduct4.$init$(this);
            RingProduct4.$init$(this);
            this.structure1 = _structure1$262;
            this.structure2 = _structure2$262;
            this.structure3 = _structure3$142;
            this.structure4 = _structure4$134;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct5$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5) {
      return $this.RingProduct5(_structure1, _structure2, _structure3, _structure4, _structure5);
   }

   default Ring RingProduct5(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5) {
      return new RingProduct5(_structure1, _structure2, _structure3, _structure4, _structure5) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;

         public Tuple5 fromInt(final int x0) {
            return RingProduct5.fromInt$(this, x0);
         }

         public Tuple5 one() {
            return RingProduct5.one$(this);
         }

         public Tuple5 negate(final Tuple5 x0) {
            return RngProduct5.negate$(this, x0);
         }

         public Tuple5 zero() {
            return SemiringProduct5.zero$(this);
         }

         public Tuple5 plus(final Tuple5 x0, final Tuple5 x1) {
            return SemiringProduct5.plus$(this, x0, x1);
         }

         public Tuple5 times(final Tuple5 x0, final Tuple5 x1) {
            return SemiringProduct5.times$(this, x0, x1);
         }

         public Tuple5 pow(final Tuple5 x0, final int x1) {
            return SemiringProduct5.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct5.$init$(this);
            RngProduct5.$init$(this);
            RingProduct5.$init$(this);
            this.structure1 = _structure1$263;
            this.structure2 = _structure2$263;
            this.structure3 = _structure3$143;
            this.structure4 = _structure4$135;
            this.structure5 = _structure5$127;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct6$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6) {
      return $this.RingProduct6(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6);
   }

   default Ring RingProduct6(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6) {
      return new RingProduct6(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;

         public Tuple6 fromInt(final int x0) {
            return RingProduct6.fromInt$(this, x0);
         }

         public Tuple6 one() {
            return RingProduct6.one$(this);
         }

         public Tuple6 negate(final Tuple6 x0) {
            return RngProduct6.negate$(this, x0);
         }

         public Tuple6 zero() {
            return SemiringProduct6.zero$(this);
         }

         public Tuple6 plus(final Tuple6 x0, final Tuple6 x1) {
            return SemiringProduct6.plus$(this, x0, x1);
         }

         public Tuple6 times(final Tuple6 x0, final Tuple6 x1) {
            return SemiringProduct6.times$(this, x0, x1);
         }

         public Tuple6 pow(final Tuple6 x0, final int x1) {
            return SemiringProduct6.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct6.$init$(this);
            RngProduct6.$init$(this);
            RingProduct6.$init$(this);
            this.structure1 = _structure1$264;
            this.structure2 = _structure2$264;
            this.structure3 = _structure3$144;
            this.structure4 = _structure4$136;
            this.structure5 = _structure5$128;
            this.structure6 = _structure6$120;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct7$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7) {
      return $this.RingProduct7(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7);
   }

   default Ring RingProduct7(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7) {
      return new RingProduct7(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;

         public Tuple7 fromInt(final int x0) {
            return RingProduct7.fromInt$(this, x0);
         }

         public Tuple7 one() {
            return RingProduct7.one$(this);
         }

         public Tuple7 negate(final Tuple7 x0) {
            return RngProduct7.negate$(this, x0);
         }

         public Tuple7 zero() {
            return SemiringProduct7.zero$(this);
         }

         public Tuple7 plus(final Tuple7 x0, final Tuple7 x1) {
            return SemiringProduct7.plus$(this, x0, x1);
         }

         public Tuple7 times(final Tuple7 x0, final Tuple7 x1) {
            return SemiringProduct7.times$(this, x0, x1);
         }

         public Tuple7 pow(final Tuple7 x0, final int x1) {
            return SemiringProduct7.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct7.$init$(this);
            RngProduct7.$init$(this);
            RingProduct7.$init$(this);
            this.structure1 = _structure1$265;
            this.structure2 = _structure2$265;
            this.structure3 = _structure3$145;
            this.structure4 = _structure4$137;
            this.structure5 = _structure5$129;
            this.structure6 = _structure6$121;
            this.structure7 = _structure7$113;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct8$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8) {
      return $this.RingProduct8(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8);
   }

   default Ring RingProduct8(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8) {
      return new RingProduct8(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;

         public Tuple8 fromInt(final int x0) {
            return RingProduct8.fromInt$(this, x0);
         }

         public Tuple8 one() {
            return RingProduct8.one$(this);
         }

         public Tuple8 negate(final Tuple8 x0) {
            return RngProduct8.negate$(this, x0);
         }

         public Tuple8 zero() {
            return SemiringProduct8.zero$(this);
         }

         public Tuple8 plus(final Tuple8 x0, final Tuple8 x1) {
            return SemiringProduct8.plus$(this, x0, x1);
         }

         public Tuple8 times(final Tuple8 x0, final Tuple8 x1) {
            return SemiringProduct8.times$(this, x0, x1);
         }

         public Tuple8 pow(final Tuple8 x0, final int x1) {
            return SemiringProduct8.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct8.$init$(this);
            RngProduct8.$init$(this);
            RingProduct8.$init$(this);
            this.structure1 = _structure1$266;
            this.structure2 = _structure2$266;
            this.structure3 = _structure3$146;
            this.structure4 = _structure4$138;
            this.structure5 = _structure5$130;
            this.structure6 = _structure6$122;
            this.structure7 = _structure7$114;
            this.structure8 = _structure8$106;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct9$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9) {
      return $this.RingProduct9(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9);
   }

   default Ring RingProduct9(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9) {
      return new RingProduct9(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;

         public Tuple9 fromInt(final int x0) {
            return RingProduct9.fromInt$(this, x0);
         }

         public Tuple9 one() {
            return RingProduct9.one$(this);
         }

         public Tuple9 negate(final Tuple9 x0) {
            return RngProduct9.negate$(this, x0);
         }

         public Tuple9 zero() {
            return SemiringProduct9.zero$(this);
         }

         public Tuple9 plus(final Tuple9 x0, final Tuple9 x1) {
            return SemiringProduct9.plus$(this, x0, x1);
         }

         public Tuple9 times(final Tuple9 x0, final Tuple9 x1) {
            return SemiringProduct9.times$(this, x0, x1);
         }

         public Tuple9 pow(final Tuple9 x0, final int x1) {
            return SemiringProduct9.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct9.$init$(this);
            RngProduct9.$init$(this);
            RingProduct9.$init$(this);
            this.structure1 = _structure1$267;
            this.structure2 = _structure2$267;
            this.structure3 = _structure3$147;
            this.structure4 = _structure4$139;
            this.structure5 = _structure5$131;
            this.structure6 = _structure6$123;
            this.structure7 = _structure7$115;
            this.structure8 = _structure8$107;
            this.structure9 = _structure9$99;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct10$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10) {
      return $this.RingProduct10(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10);
   }

   default Ring RingProduct10(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10) {
      return new RingProduct10(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;

         public Tuple10 fromInt(final int x0) {
            return RingProduct10.fromInt$(this, x0);
         }

         public Tuple10 one() {
            return RingProduct10.one$(this);
         }

         public Tuple10 negate(final Tuple10 x0) {
            return RngProduct10.negate$(this, x0);
         }

         public Tuple10 zero() {
            return SemiringProduct10.zero$(this);
         }

         public Tuple10 plus(final Tuple10 x0, final Tuple10 x1) {
            return SemiringProduct10.plus$(this, x0, x1);
         }

         public Tuple10 times(final Tuple10 x0, final Tuple10 x1) {
            return SemiringProduct10.times$(this, x0, x1);
         }

         public Tuple10 pow(final Tuple10 x0, final int x1) {
            return SemiringProduct10.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct10.$init$(this);
            RngProduct10.$init$(this);
            RingProduct10.$init$(this);
            this.structure1 = _structure1$268;
            this.structure2 = _structure2$268;
            this.structure3 = _structure3$148;
            this.structure4 = _structure4$140;
            this.structure5 = _structure5$132;
            this.structure6 = _structure6$124;
            this.structure7 = _structure7$116;
            this.structure8 = _structure8$108;
            this.structure9 = _structure9$100;
            this.structure10 = _structure10$92;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct11$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11) {
      return $this.RingProduct11(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11);
   }

   default Ring RingProduct11(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11) {
      return new RingProduct11(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;
         private final Ring structure11;

         public Tuple11 fromInt(final int x0) {
            return RingProduct11.fromInt$(this, x0);
         }

         public Tuple11 one() {
            return RingProduct11.one$(this);
         }

         public Tuple11 negate(final Tuple11 x0) {
            return RngProduct11.negate$(this, x0);
         }

         public Tuple11 zero() {
            return SemiringProduct11.zero$(this);
         }

         public Tuple11 plus(final Tuple11 x0, final Tuple11 x1) {
            return SemiringProduct11.plus$(this, x0, x1);
         }

         public Tuple11 times(final Tuple11 x0, final Tuple11 x1) {
            return SemiringProduct11.times$(this, x0, x1);
         }

         public Tuple11 pow(final Tuple11 x0, final int x1) {
            return SemiringProduct11.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public Ring structure11() {
            return this.structure11;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct11.$init$(this);
            RngProduct11.$init$(this);
            RingProduct11.$init$(this);
            this.structure1 = _structure1$269;
            this.structure2 = _structure2$269;
            this.structure3 = _structure3$149;
            this.structure4 = _structure4$141;
            this.structure5 = _structure5$133;
            this.structure6 = _structure6$125;
            this.structure7 = _structure7$117;
            this.structure8 = _structure8$109;
            this.structure9 = _structure9$101;
            this.structure10 = _structure10$93;
            this.structure11 = _structure11$85;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct12$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12) {
      return $this.RingProduct12(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12);
   }

   default Ring RingProduct12(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12) {
      return new RingProduct12(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;
         private final Ring structure11;
         private final Ring structure12;

         public Tuple12 fromInt(final int x0) {
            return RingProduct12.fromInt$(this, x0);
         }

         public Tuple12 one() {
            return RingProduct12.one$(this);
         }

         public Tuple12 negate(final Tuple12 x0) {
            return RngProduct12.negate$(this, x0);
         }

         public Tuple12 zero() {
            return SemiringProduct12.zero$(this);
         }

         public Tuple12 plus(final Tuple12 x0, final Tuple12 x1) {
            return SemiringProduct12.plus$(this, x0, x1);
         }

         public Tuple12 times(final Tuple12 x0, final Tuple12 x1) {
            return SemiringProduct12.times$(this, x0, x1);
         }

         public Tuple12 pow(final Tuple12 x0, final int x1) {
            return SemiringProduct12.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public Ring structure11() {
            return this.structure11;
         }

         public Ring structure12() {
            return this.structure12;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct12.$init$(this);
            RngProduct12.$init$(this);
            RingProduct12.$init$(this);
            this.structure1 = _structure1$270;
            this.structure2 = _structure2$270;
            this.structure3 = _structure3$150;
            this.structure4 = _structure4$142;
            this.structure5 = _structure5$134;
            this.structure6 = _structure6$126;
            this.structure7 = _structure7$118;
            this.structure8 = _structure8$110;
            this.structure9 = _structure9$102;
            this.structure10 = _structure10$94;
            this.structure11 = _structure11$86;
            this.structure12 = _structure12$78;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct13$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13) {
      return $this.RingProduct13(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13);
   }

   default Ring RingProduct13(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13) {
      return new RingProduct13(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;
         private final Ring structure11;
         private final Ring structure12;
         private final Ring structure13;

         public Tuple13 fromInt(final int x0) {
            return RingProduct13.fromInt$(this, x0);
         }

         public Tuple13 one() {
            return RingProduct13.one$(this);
         }

         public Tuple13 negate(final Tuple13 x0) {
            return RngProduct13.negate$(this, x0);
         }

         public Tuple13 zero() {
            return SemiringProduct13.zero$(this);
         }

         public Tuple13 plus(final Tuple13 x0, final Tuple13 x1) {
            return SemiringProduct13.plus$(this, x0, x1);
         }

         public Tuple13 times(final Tuple13 x0, final Tuple13 x1) {
            return SemiringProduct13.times$(this, x0, x1);
         }

         public Tuple13 pow(final Tuple13 x0, final int x1) {
            return SemiringProduct13.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public Ring structure11() {
            return this.structure11;
         }

         public Ring structure12() {
            return this.structure12;
         }

         public Ring structure13() {
            return this.structure13;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct13.$init$(this);
            RngProduct13.$init$(this);
            RingProduct13.$init$(this);
            this.structure1 = _structure1$271;
            this.structure2 = _structure2$271;
            this.structure3 = _structure3$151;
            this.structure4 = _structure4$143;
            this.structure5 = _structure5$135;
            this.structure6 = _structure6$127;
            this.structure7 = _structure7$119;
            this.structure8 = _structure8$111;
            this.structure9 = _structure9$103;
            this.structure10 = _structure10$95;
            this.structure11 = _structure11$87;
            this.structure12 = _structure12$79;
            this.structure13 = _structure13$71;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct14$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14) {
      return $this.RingProduct14(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14);
   }

   default Ring RingProduct14(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14) {
      return new RingProduct14(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;
         private final Ring structure11;
         private final Ring structure12;
         private final Ring structure13;
         private final Ring structure14;

         public Tuple14 fromInt(final int x0) {
            return RingProduct14.fromInt$(this, x0);
         }

         public Tuple14 one() {
            return RingProduct14.one$(this);
         }

         public Tuple14 negate(final Tuple14 x0) {
            return RngProduct14.negate$(this, x0);
         }

         public Tuple14 zero() {
            return SemiringProduct14.zero$(this);
         }

         public Tuple14 plus(final Tuple14 x0, final Tuple14 x1) {
            return SemiringProduct14.plus$(this, x0, x1);
         }

         public Tuple14 times(final Tuple14 x0, final Tuple14 x1) {
            return SemiringProduct14.times$(this, x0, x1);
         }

         public Tuple14 pow(final Tuple14 x0, final int x1) {
            return SemiringProduct14.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public Ring structure11() {
            return this.structure11;
         }

         public Ring structure12() {
            return this.structure12;
         }

         public Ring structure13() {
            return this.structure13;
         }

         public Ring structure14() {
            return this.structure14;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct14.$init$(this);
            RngProduct14.$init$(this);
            RingProduct14.$init$(this);
            this.structure1 = _structure1$272;
            this.structure2 = _structure2$272;
            this.structure3 = _structure3$152;
            this.structure4 = _structure4$144;
            this.structure5 = _structure5$136;
            this.structure6 = _structure6$128;
            this.structure7 = _structure7$120;
            this.structure8 = _structure8$112;
            this.structure9 = _structure9$104;
            this.structure10 = _structure10$96;
            this.structure11 = _structure11$88;
            this.structure12 = _structure12$80;
            this.structure13 = _structure13$72;
            this.structure14 = _structure14$64;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct15$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15) {
      return $this.RingProduct15(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15);
   }

   default Ring RingProduct15(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15) {
      return new RingProduct15(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;
         private final Ring structure11;
         private final Ring structure12;
         private final Ring structure13;
         private final Ring structure14;
         private final Ring structure15;

         public Tuple15 fromInt(final int x0) {
            return RingProduct15.fromInt$(this, x0);
         }

         public Tuple15 one() {
            return RingProduct15.one$(this);
         }

         public Tuple15 negate(final Tuple15 x0) {
            return RngProduct15.negate$(this, x0);
         }

         public Tuple15 zero() {
            return SemiringProduct15.zero$(this);
         }

         public Tuple15 plus(final Tuple15 x0, final Tuple15 x1) {
            return SemiringProduct15.plus$(this, x0, x1);
         }

         public Tuple15 times(final Tuple15 x0, final Tuple15 x1) {
            return SemiringProduct15.times$(this, x0, x1);
         }

         public Tuple15 pow(final Tuple15 x0, final int x1) {
            return SemiringProduct15.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public Ring structure11() {
            return this.structure11;
         }

         public Ring structure12() {
            return this.structure12;
         }

         public Ring structure13() {
            return this.structure13;
         }

         public Ring structure14() {
            return this.structure14;
         }

         public Ring structure15() {
            return this.structure15;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct15.$init$(this);
            RngProduct15.$init$(this);
            RingProduct15.$init$(this);
            this.structure1 = _structure1$273;
            this.structure2 = _structure2$273;
            this.structure3 = _structure3$153;
            this.structure4 = _structure4$145;
            this.structure5 = _structure5$137;
            this.structure6 = _structure6$129;
            this.structure7 = _structure7$121;
            this.structure8 = _structure8$113;
            this.structure9 = _structure9$105;
            this.structure10 = _structure10$97;
            this.structure11 = _structure11$89;
            this.structure12 = _structure12$81;
            this.structure13 = _structure13$73;
            this.structure14 = _structure14$65;
            this.structure15 = _structure15$57;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct16$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16) {
      return $this.RingProduct16(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16);
   }

   default Ring RingProduct16(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16) {
      return new RingProduct16(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;
         private final Ring structure11;
         private final Ring structure12;
         private final Ring structure13;
         private final Ring structure14;
         private final Ring structure15;
         private final Ring structure16;

         public Tuple16 fromInt(final int x0) {
            return RingProduct16.fromInt$(this, x0);
         }

         public Tuple16 one() {
            return RingProduct16.one$(this);
         }

         public Tuple16 negate(final Tuple16 x0) {
            return RngProduct16.negate$(this, x0);
         }

         public Tuple16 zero() {
            return SemiringProduct16.zero$(this);
         }

         public Tuple16 plus(final Tuple16 x0, final Tuple16 x1) {
            return SemiringProduct16.plus$(this, x0, x1);
         }

         public Tuple16 times(final Tuple16 x0, final Tuple16 x1) {
            return SemiringProduct16.times$(this, x0, x1);
         }

         public Tuple16 pow(final Tuple16 x0, final int x1) {
            return SemiringProduct16.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public Ring structure11() {
            return this.structure11;
         }

         public Ring structure12() {
            return this.structure12;
         }

         public Ring structure13() {
            return this.structure13;
         }

         public Ring structure14() {
            return this.structure14;
         }

         public Ring structure15() {
            return this.structure15;
         }

         public Ring structure16() {
            return this.structure16;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct16.$init$(this);
            RngProduct16.$init$(this);
            RingProduct16.$init$(this);
            this.structure1 = _structure1$274;
            this.structure2 = _structure2$274;
            this.structure3 = _structure3$154;
            this.structure4 = _structure4$146;
            this.structure5 = _structure5$138;
            this.structure6 = _structure6$130;
            this.structure7 = _structure7$122;
            this.structure8 = _structure8$114;
            this.structure9 = _structure9$106;
            this.structure10 = _structure10$98;
            this.structure11 = _structure11$90;
            this.structure12 = _structure12$82;
            this.structure13 = _structure13$74;
            this.structure14 = _structure14$66;
            this.structure15 = _structure15$58;
            this.structure16 = _structure16$50;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct17$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16, final Ring _structure17) {
      return $this.RingProduct17(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17);
   }

   default Ring RingProduct17(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16, final Ring _structure17) {
      return new RingProduct17(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;
         private final Ring structure11;
         private final Ring structure12;
         private final Ring structure13;
         private final Ring structure14;
         private final Ring structure15;
         private final Ring structure16;
         private final Ring structure17;

         public Tuple17 fromInt(final int x0) {
            return RingProduct17.fromInt$(this, x0);
         }

         public Tuple17 one() {
            return RingProduct17.one$(this);
         }

         public Tuple17 negate(final Tuple17 x0) {
            return RngProduct17.negate$(this, x0);
         }

         public Tuple17 zero() {
            return SemiringProduct17.zero$(this);
         }

         public Tuple17 plus(final Tuple17 x0, final Tuple17 x1) {
            return SemiringProduct17.plus$(this, x0, x1);
         }

         public Tuple17 times(final Tuple17 x0, final Tuple17 x1) {
            return SemiringProduct17.times$(this, x0, x1);
         }

         public Tuple17 pow(final Tuple17 x0, final int x1) {
            return SemiringProduct17.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public Ring structure11() {
            return this.structure11;
         }

         public Ring structure12() {
            return this.structure12;
         }

         public Ring structure13() {
            return this.structure13;
         }

         public Ring structure14() {
            return this.structure14;
         }

         public Ring structure15() {
            return this.structure15;
         }

         public Ring structure16() {
            return this.structure16;
         }

         public Ring structure17() {
            return this.structure17;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct17.$init$(this);
            RngProduct17.$init$(this);
            RingProduct17.$init$(this);
            this.structure1 = _structure1$275;
            this.structure2 = _structure2$275;
            this.structure3 = _structure3$155;
            this.structure4 = _structure4$147;
            this.structure5 = _structure5$139;
            this.structure6 = _structure6$131;
            this.structure7 = _structure7$123;
            this.structure8 = _structure8$115;
            this.structure9 = _structure9$107;
            this.structure10 = _structure10$99;
            this.structure11 = _structure11$91;
            this.structure12 = _structure12$83;
            this.structure13 = _structure13$75;
            this.structure14 = _structure14$67;
            this.structure15 = _structure15$59;
            this.structure16 = _structure16$51;
            this.structure17 = _structure17$43;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct18$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16, final Ring _structure17, final Ring _structure18) {
      return $this.RingProduct18(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18);
   }

   default Ring RingProduct18(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16, final Ring _structure17, final Ring _structure18) {
      return new RingProduct18(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;
         private final Ring structure11;
         private final Ring structure12;
         private final Ring structure13;
         private final Ring structure14;
         private final Ring structure15;
         private final Ring structure16;
         private final Ring structure17;
         private final Ring structure18;

         public Tuple18 fromInt(final int x0) {
            return RingProduct18.fromInt$(this, x0);
         }

         public Tuple18 one() {
            return RingProduct18.one$(this);
         }

         public Tuple18 negate(final Tuple18 x0) {
            return RngProduct18.negate$(this, x0);
         }

         public Tuple18 zero() {
            return SemiringProduct18.zero$(this);
         }

         public Tuple18 plus(final Tuple18 x0, final Tuple18 x1) {
            return SemiringProduct18.plus$(this, x0, x1);
         }

         public Tuple18 times(final Tuple18 x0, final Tuple18 x1) {
            return SemiringProduct18.times$(this, x0, x1);
         }

         public Tuple18 pow(final Tuple18 x0, final int x1) {
            return SemiringProduct18.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public Ring structure11() {
            return this.structure11;
         }

         public Ring structure12() {
            return this.structure12;
         }

         public Ring structure13() {
            return this.structure13;
         }

         public Ring structure14() {
            return this.structure14;
         }

         public Ring structure15() {
            return this.structure15;
         }

         public Ring structure16() {
            return this.structure16;
         }

         public Ring structure17() {
            return this.structure17;
         }

         public Ring structure18() {
            return this.structure18;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct18.$init$(this);
            RngProduct18.$init$(this);
            RingProduct18.$init$(this);
            this.structure1 = _structure1$276;
            this.structure2 = _structure2$276;
            this.structure3 = _structure3$156;
            this.structure4 = _structure4$148;
            this.structure5 = _structure5$140;
            this.structure6 = _structure6$132;
            this.structure7 = _structure7$124;
            this.structure8 = _structure8$116;
            this.structure9 = _structure9$108;
            this.structure10 = _structure10$100;
            this.structure11 = _structure11$92;
            this.structure12 = _structure12$84;
            this.structure13 = _structure13$76;
            this.structure14 = _structure14$68;
            this.structure15 = _structure15$60;
            this.structure16 = _structure16$52;
            this.structure17 = _structure17$44;
            this.structure18 = _structure18$36;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct19$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16, final Ring _structure17, final Ring _structure18, final Ring _structure19) {
      return $this.RingProduct19(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19);
   }

   default Ring RingProduct19(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16, final Ring _structure17, final Ring _structure18, final Ring _structure19) {
      return new RingProduct19(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;
         private final Ring structure11;
         private final Ring structure12;
         private final Ring structure13;
         private final Ring structure14;
         private final Ring structure15;
         private final Ring structure16;
         private final Ring structure17;
         private final Ring structure18;
         private final Ring structure19;

         public Tuple19 fromInt(final int x0) {
            return RingProduct19.fromInt$(this, x0);
         }

         public Tuple19 one() {
            return RingProduct19.one$(this);
         }

         public Tuple19 negate(final Tuple19 x0) {
            return RngProduct19.negate$(this, x0);
         }

         public Tuple19 zero() {
            return SemiringProduct19.zero$(this);
         }

         public Tuple19 plus(final Tuple19 x0, final Tuple19 x1) {
            return SemiringProduct19.plus$(this, x0, x1);
         }

         public Tuple19 times(final Tuple19 x0, final Tuple19 x1) {
            return SemiringProduct19.times$(this, x0, x1);
         }

         public Tuple19 pow(final Tuple19 x0, final int x1) {
            return SemiringProduct19.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public Ring structure11() {
            return this.structure11;
         }

         public Ring structure12() {
            return this.structure12;
         }

         public Ring structure13() {
            return this.structure13;
         }

         public Ring structure14() {
            return this.structure14;
         }

         public Ring structure15() {
            return this.structure15;
         }

         public Ring structure16() {
            return this.structure16;
         }

         public Ring structure17() {
            return this.structure17;
         }

         public Ring structure18() {
            return this.structure18;
         }

         public Ring structure19() {
            return this.structure19;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct19.$init$(this);
            RngProduct19.$init$(this);
            RingProduct19.$init$(this);
            this.structure1 = _structure1$277;
            this.structure2 = _structure2$277;
            this.structure3 = _structure3$157;
            this.structure4 = _structure4$149;
            this.structure5 = _structure5$141;
            this.structure6 = _structure6$133;
            this.structure7 = _structure7$125;
            this.structure8 = _structure8$117;
            this.structure9 = _structure9$109;
            this.structure10 = _structure10$101;
            this.structure11 = _structure11$93;
            this.structure12 = _structure12$85;
            this.structure13 = _structure13$77;
            this.structure14 = _structure14$69;
            this.structure15 = _structure15$61;
            this.structure16 = _structure16$53;
            this.structure17 = _structure17$45;
            this.structure18 = _structure18$37;
            this.structure19 = _structure19$29;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct20$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16, final Ring _structure17, final Ring _structure18, final Ring _structure19, final Ring _structure20) {
      return $this.RingProduct20(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20);
   }

   default Ring RingProduct20(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16, final Ring _structure17, final Ring _structure18, final Ring _structure19, final Ring _structure20) {
      return new RingProduct20(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;
         private final Ring structure11;
         private final Ring structure12;
         private final Ring structure13;
         private final Ring structure14;
         private final Ring structure15;
         private final Ring structure16;
         private final Ring structure17;
         private final Ring structure18;
         private final Ring structure19;
         private final Ring structure20;

         public Tuple20 fromInt(final int x0) {
            return RingProduct20.fromInt$(this, x0);
         }

         public Tuple20 one() {
            return RingProduct20.one$(this);
         }

         public Tuple20 negate(final Tuple20 x0) {
            return RngProduct20.negate$(this, x0);
         }

         public Tuple20 zero() {
            return SemiringProduct20.zero$(this);
         }

         public Tuple20 plus(final Tuple20 x0, final Tuple20 x1) {
            return SemiringProduct20.plus$(this, x0, x1);
         }

         public Tuple20 times(final Tuple20 x0, final Tuple20 x1) {
            return SemiringProduct20.times$(this, x0, x1);
         }

         public Tuple20 pow(final Tuple20 x0, final int x1) {
            return SemiringProduct20.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public Ring structure11() {
            return this.structure11;
         }

         public Ring structure12() {
            return this.structure12;
         }

         public Ring structure13() {
            return this.structure13;
         }

         public Ring structure14() {
            return this.structure14;
         }

         public Ring structure15() {
            return this.structure15;
         }

         public Ring structure16() {
            return this.structure16;
         }

         public Ring structure17() {
            return this.structure17;
         }

         public Ring structure18() {
            return this.structure18;
         }

         public Ring structure19() {
            return this.structure19;
         }

         public Ring structure20() {
            return this.structure20;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct20.$init$(this);
            RngProduct20.$init$(this);
            RingProduct20.$init$(this);
            this.structure1 = _structure1$278;
            this.structure2 = _structure2$278;
            this.structure3 = _structure3$158;
            this.structure4 = _structure4$150;
            this.structure5 = _structure5$142;
            this.structure6 = _structure6$134;
            this.structure7 = _structure7$126;
            this.structure8 = _structure8$118;
            this.structure9 = _structure9$110;
            this.structure10 = _structure10$102;
            this.structure11 = _structure11$94;
            this.structure12 = _structure12$86;
            this.structure13 = _structure13$78;
            this.structure14 = _structure14$70;
            this.structure15 = _structure15$62;
            this.structure16 = _structure16$54;
            this.structure17 = _structure17$46;
            this.structure18 = _structure18$38;
            this.structure19 = _structure19$30;
            this.structure20 = _structure20$22;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct21$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16, final Ring _structure17, final Ring _structure18, final Ring _structure19, final Ring _structure20, final Ring _structure21) {
      return $this.RingProduct21(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21);
   }

   default Ring RingProduct21(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16, final Ring _structure17, final Ring _structure18, final Ring _structure19, final Ring _structure20, final Ring _structure21) {
      return new RingProduct21(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;
         private final Ring structure11;
         private final Ring structure12;
         private final Ring structure13;
         private final Ring structure14;
         private final Ring structure15;
         private final Ring structure16;
         private final Ring structure17;
         private final Ring structure18;
         private final Ring structure19;
         private final Ring structure20;
         private final Ring structure21;

         public Tuple21 fromInt(final int x0) {
            return RingProduct21.fromInt$(this, x0);
         }

         public Tuple21 one() {
            return RingProduct21.one$(this);
         }

         public Tuple21 negate(final Tuple21 x0) {
            return RngProduct21.negate$(this, x0);
         }

         public Tuple21 zero() {
            return SemiringProduct21.zero$(this);
         }

         public Tuple21 plus(final Tuple21 x0, final Tuple21 x1) {
            return SemiringProduct21.plus$(this, x0, x1);
         }

         public Tuple21 times(final Tuple21 x0, final Tuple21 x1) {
            return SemiringProduct21.times$(this, x0, x1);
         }

         public Tuple21 pow(final Tuple21 x0, final int x1) {
            return SemiringProduct21.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public Ring structure11() {
            return this.structure11;
         }

         public Ring structure12() {
            return this.structure12;
         }

         public Ring structure13() {
            return this.structure13;
         }

         public Ring structure14() {
            return this.structure14;
         }

         public Ring structure15() {
            return this.structure15;
         }

         public Ring structure16() {
            return this.structure16;
         }

         public Ring structure17() {
            return this.structure17;
         }

         public Ring structure18() {
            return this.structure18;
         }

         public Ring structure19() {
            return this.structure19;
         }

         public Ring structure20() {
            return this.structure20;
         }

         public Ring structure21() {
            return this.structure21;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct21.$init$(this);
            RngProduct21.$init$(this);
            RingProduct21.$init$(this);
            this.structure1 = _structure1$279;
            this.structure2 = _structure2$279;
            this.structure3 = _structure3$159;
            this.structure4 = _structure4$151;
            this.structure5 = _structure5$143;
            this.structure6 = _structure6$135;
            this.structure7 = _structure7$127;
            this.structure8 = _structure8$119;
            this.structure9 = _structure9$111;
            this.structure10 = _structure10$103;
            this.structure11 = _structure11$95;
            this.structure12 = _structure12$87;
            this.structure13 = _structure13$79;
            this.structure14 = _structure14$71;
            this.structure15 = _structure15$63;
            this.structure16 = _structure16$55;
            this.structure17 = _structure17$47;
            this.structure18 = _structure18$39;
            this.structure19 = _structure19$31;
            this.structure20 = _structure20$23;
            this.structure21 = _structure21$15;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct22$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16, final Ring _structure17, final Ring _structure18, final Ring _structure19, final Ring _structure20, final Ring _structure21, final Ring _structure22) {
      return $this.RingProduct22(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21, _structure22);
   }

   default Ring RingProduct22(final Ring _structure1, final Ring _structure2, final Ring _structure3, final Ring _structure4, final Ring _structure5, final Ring _structure6, final Ring _structure7, final Ring _structure8, final Ring _structure9, final Ring _structure10, final Ring _structure11, final Ring _structure12, final Ring _structure13, final Ring _structure14, final Ring _structure15, final Ring _structure16, final Ring _structure17, final Ring _structure18, final Ring _structure19, final Ring _structure20, final Ring _structure21, final Ring _structure22) {
      return new RingProduct22(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21, _structure22) {
         private final Ring structure1;
         private final Ring structure2;
         private final Ring structure3;
         private final Ring structure4;
         private final Ring structure5;
         private final Ring structure6;
         private final Ring structure7;
         private final Ring structure8;
         private final Ring structure9;
         private final Ring structure10;
         private final Ring structure11;
         private final Ring structure12;
         private final Ring structure13;
         private final Ring structure14;
         private final Ring structure15;
         private final Ring structure16;
         private final Ring structure17;
         private final Ring structure18;
         private final Ring structure19;
         private final Ring structure20;
         private final Ring structure21;
         private final Ring structure22;

         public Tuple22 fromInt(final int x0) {
            return RingProduct22.fromInt$(this, x0);
         }

         public Tuple22 one() {
            return RingProduct22.one$(this);
         }

         public Tuple22 negate(final Tuple22 x0) {
            return RngProduct22.negate$(this, x0);
         }

         public Tuple22 zero() {
            return SemiringProduct22.zero$(this);
         }

         public Tuple22 plus(final Tuple22 x0, final Tuple22 x1) {
            return SemiringProduct22.plus$(this, x0, x1);
         }

         public Tuple22 times(final Tuple22 x0, final Tuple22 x1) {
            return SemiringProduct22.times$(this, x0, x1);
         }

         public Tuple22 pow(final Tuple22 x0, final int x1) {
            return SemiringProduct22.pow$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1;
         }

         public Ring structure2() {
            return this.structure2;
         }

         public Ring structure3() {
            return this.structure3;
         }

         public Ring structure4() {
            return this.structure4;
         }

         public Ring structure5() {
            return this.structure5;
         }

         public Ring structure6() {
            return this.structure6;
         }

         public Ring structure7() {
            return this.structure7;
         }

         public Ring structure8() {
            return this.structure8;
         }

         public Ring structure9() {
            return this.structure9;
         }

         public Ring structure10() {
            return this.structure10;
         }

         public Ring structure11() {
            return this.structure11;
         }

         public Ring structure12() {
            return this.structure12;
         }

         public Ring structure13() {
            return this.structure13;
         }

         public Ring structure14() {
            return this.structure14;
         }

         public Ring structure15() {
            return this.structure15;
         }

         public Ring structure16() {
            return this.structure16;
         }

         public Ring structure17() {
            return this.structure17;
         }

         public Ring structure18() {
            return this.structure18;
         }

         public Ring structure19() {
            return this.structure19;
         }

         public Ring structure20() {
            return this.structure20;
         }

         public Ring structure21() {
            return this.structure21;
         }

         public Ring structure22() {
            return this.structure22;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct22.$init$(this);
            RngProduct22.$init$(this);
            RingProduct22.$init$(this);
            this.structure1 = _structure1$280;
            this.structure2 = _structure2$280;
            this.structure3 = _structure3$160;
            this.structure4 = _structure4$152;
            this.structure5 = _structure5$144;
            this.structure6 = _structure6$136;
            this.structure7 = _structure7$128;
            this.structure8 = _structure8$120;
            this.structure9 = _structure9$112;
            this.structure10 = _structure10$104;
            this.structure11 = _structure11$96;
            this.structure12 = _structure12$88;
            this.structure13 = _structure13$80;
            this.structure14 = _structure14$72;
            this.structure15 = _structure15$64;
            this.structure16 = _structure16$56;
            this.structure17 = _structure17$48;
            this.structure18 = _structure18$40;
            this.structure19 = _structure19$32;
            this.structure20 = _structure20$24;
            this.structure21 = _structure21$16;
            this.structure22 = _structure22$8;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mDDc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mDDc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mDDc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcDD$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcDD$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2$mcDD$sp.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcDD$sp.one$(this);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2$mcDD$sp.one$mcDD$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcDD$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2$mcDD$sp.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcDD$sp.zero$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2$mcDD$sp.zero$mcDD$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDD$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDD$sp.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDD$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDD$sp.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDD$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDD$sp.pow$mcDD$sp$(this, x0, x1);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcD$sp();
         }

         public Ring structure2() {
            return this.structure2$mcD$sp();
         }

         public Ring structure1$mcD$sp() {
            return this.structure1;
         }

         public Ring structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$281;
            this.structure2 = _structure2$281;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mDFc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mDFc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mDFc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcDF$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcDF$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2$mcDF$sp.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcDF$sp.one$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2$mcDF$sp.one$mcDF$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcDF$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2$mcDF$sp.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcDF$sp.zero$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2$mcDF$sp.zero$mcDF$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDF$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDF$sp.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDF$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDF$sp.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDF$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDF$sp.pow$mcDF$sp$(this, x0, x1);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcD$sp();
         }

         public Ring structure2() {
            return this.structure2$mcF$sp();
         }

         public Ring structure1$mcD$sp() {
            return this.structure1;
         }

         public Ring structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$282;
            this.structure2 = _structure2$282;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mDIc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mDIc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mDIc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcDI$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcDI$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2$mcDI$sp.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcDI$sp.one$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2$mcDI$sp.one$mcDI$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcDI$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2$mcDI$sp.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcDI$sp.zero$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2$mcDI$sp.zero$mcDI$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDI$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDI$sp.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDI$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDI$sp.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDI$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDI$sp.pow$mcDI$sp$(this, x0, x1);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcD$sp();
         }

         public Ring structure2() {
            return this.structure2$mcI$sp();
         }

         public Ring structure1$mcD$sp() {
            return this.structure1;
         }

         public Ring structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$283;
            this.structure2 = _structure2$283;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mDJc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mDJc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mDJc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcDJ$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcDJ$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2$mcDJ$sp.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcDJ$sp.one$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2$mcDJ$sp.one$mcDJ$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcDJ$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2$mcDJ$sp.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcDJ$sp.zero$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2$mcDJ$sp.zero$mcDJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDJ$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDJ$sp.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDJ$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDJ$sp.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDJ$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDJ$sp.pow$mcDJ$sp$(this, x0, x1);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcD$sp();
         }

         public Ring structure2() {
            return this.structure2$mcJ$sp();
         }

         public Ring structure1$mcD$sp() {
            return this.structure1;
         }

         public Ring structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$284;
            this.structure2 = _structure2$284;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mFDc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mFDc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mFDc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcFD$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcFD$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2$mcFD$sp.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcFD$sp.one$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2$mcFD$sp.one$mcFD$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcFD$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2$mcFD$sp.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcFD$sp.zero$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2$mcFD$sp.zero$mcFD$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFD$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFD$sp.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFD$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFD$sp.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFD$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFD$sp.pow$mcFD$sp$(this, x0, x1);
         }

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcF$sp();
         }

         public Ring structure2() {
            return this.structure2$mcD$sp();
         }

         public Ring structure1$mcF$sp() {
            return this.structure1;
         }

         public Ring structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$285;
            this.structure2 = _structure2$285;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mFFc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mFFc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mFFc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcFF$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcFF$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2$mcFF$sp.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcFF$sp.one$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2$mcFF$sp.one$mcFF$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcFF$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2$mcFF$sp.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcFF$sp.zero$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2$mcFF$sp.zero$mcFF$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFF$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFF$sp.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFF$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFF$sp.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFF$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFF$sp.pow$mcFF$sp$(this, x0, x1);
         }

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcF$sp();
         }

         public Ring structure2() {
            return this.structure2$mcF$sp();
         }

         public Ring structure1$mcF$sp() {
            return this.structure1;
         }

         public Ring structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$286;
            this.structure2 = _structure2$286;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mFIc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mFIc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mFIc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcFI$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcFI$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2$mcFI$sp.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcFI$sp.one$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2$mcFI$sp.one$mcFI$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcFI$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2$mcFI$sp.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcFI$sp.zero$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2$mcFI$sp.zero$mcFI$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFI$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFI$sp.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFI$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFI$sp.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFI$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFI$sp.pow$mcFI$sp$(this, x0, x1);
         }

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcF$sp();
         }

         public Ring structure2() {
            return this.structure2$mcI$sp();
         }

         public Ring structure1$mcF$sp() {
            return this.structure1;
         }

         public Ring structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$287;
            this.structure2 = _structure2$287;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mFJc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mFJc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mFJc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcFJ$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcFJ$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2$mcFJ$sp.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcFJ$sp.one$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2$mcFJ$sp.one$mcFJ$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcFJ$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2$mcFJ$sp.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcFJ$sp.zero$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2$mcFJ$sp.zero$mcFJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFJ$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFJ$sp.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFJ$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFJ$sp.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFJ$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFJ$sp.pow$mcFJ$sp$(this, x0, x1);
         }

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcF$sp();
         }

         public Ring structure2() {
            return this.structure2$mcJ$sp();
         }

         public Ring structure1$mcF$sp() {
            return this.structure1;
         }

         public Ring structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$288;
            this.structure2 = _structure2$288;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mIDc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mIDc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mIDc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcID$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcID$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2$mcID$sp.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcID$sp.one$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2$mcID$sp.one$mcID$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcID$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2$mcID$sp.negate$mcID$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcID$sp.zero$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2$mcID$sp.zero$mcID$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcID$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcID$sp.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcID$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcID$sp.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcID$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcID$sp.pow$mcID$sp$(this, x0, x1);
         }

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcI$sp();
         }

         public Ring structure2() {
            return this.structure2$mcD$sp();
         }

         public Ring structure1$mcI$sp() {
            return this.structure1;
         }

         public Ring structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$289;
            this.structure2 = _structure2$289;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mIFc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mIFc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mIFc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcIF$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcIF$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2$mcIF$sp.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcIF$sp.one$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2$mcIF$sp.one$mcIF$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcIF$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2$mcIF$sp.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcIF$sp.zero$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2$mcIF$sp.zero$mcIF$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIF$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIF$sp.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIF$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIF$sp.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcIF$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcIF$sp.pow$mcIF$sp$(this, x0, x1);
         }

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcI$sp();
         }

         public Ring structure2() {
            return this.structure2$mcF$sp();
         }

         public Ring structure1$mcI$sp() {
            return this.structure1;
         }

         public Ring structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$290;
            this.structure2 = _structure2$290;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mIIc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mIIc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mIIc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcII$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcII$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2$mcII$sp.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcII$sp.one$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2$mcII$sp.one$mcII$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcII$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2$mcII$sp.negate$mcII$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcII$sp.zero$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2$mcII$sp.zero$mcII$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcII$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcII$sp.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcII$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcII$sp.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcII$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcII$sp.pow$mcII$sp$(this, x0, x1);
         }

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcI$sp();
         }

         public Ring structure2() {
            return this.structure2$mcI$sp();
         }

         public Ring structure1$mcI$sp() {
            return this.structure1;
         }

         public Ring structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$291;
            this.structure2 = _structure2$291;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mIJc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mIJc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mIJc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcIJ$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcIJ$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2$mcIJ$sp.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcIJ$sp.one$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2$mcIJ$sp.one$mcIJ$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcIJ$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2$mcIJ$sp.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcIJ$sp.zero$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2$mcIJ$sp.zero$mcIJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIJ$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIJ$sp.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIJ$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIJ$sp.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcIJ$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcIJ$sp.pow$mcIJ$sp$(this, x0, x1);
         }

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcJ$sp() {
            return RingProduct2.structure1$mcJ$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcI$sp();
         }

         public Ring structure2() {
            return this.structure2$mcJ$sp();
         }

         public Ring structure1$mcI$sp() {
            return this.structure1;
         }

         public Ring structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$292;
            this.structure2 = _structure2$292;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mJDc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mJDc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mJDc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcJD$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcJD$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2$mcJD$sp.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcJD$sp.one$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2$mcJD$sp.one$mcJD$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcJD$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2$mcJD$sp.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcJD$sp.zero$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2$mcJD$sp.zero$mcJD$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJD$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJD$sp.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJD$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJD$sp.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJD$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJD$sp.pow$mcJD$sp$(this, x0, x1);
         }

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcJ$sp();
         }

         public Ring structure2() {
            return this.structure2$mcD$sp();
         }

         public Ring structure1$mcJ$sp() {
            return this.structure1;
         }

         public Ring structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$293;
            this.structure2 = _structure2$293;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mJFc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mJFc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mJFc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcJF$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcJF$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2$mcJF$sp.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcJF$sp.one$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2$mcJF$sp.one$mcJF$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcJF$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2$mcJF$sp.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcJF$sp.zero$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2$mcJF$sp.zero$mcJF$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJF$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJF$sp.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJF$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJF$sp.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJF$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJF$sp.pow$mcJF$sp$(this, x0, x1);
         }

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcJ$sp();
         }

         public Ring structure2() {
            return this.structure2$mcF$sp();
         }

         public Ring structure1$mcJ$sp() {
            return this.structure1;
         }

         public Ring structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$294;
            this.structure2 = _structure2$294;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mJIc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mJIc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mJIc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcJI$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcJI$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2$mcJI$sp.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcJI$sp.one$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2$mcJI$sp.one$mcJI$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcJI$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2$mcJI$sp.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcJI$sp.zero$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2$mcJI$sp.zero$mcJI$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJI$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJI$sp.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJI$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJI$sp.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJI$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJI$sp.pow$mcJI$sp$(this, x0, x1);
         }

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcJ$sp() {
            return RingProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2.one$mcJJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcJ$sp();
         }

         public Ring structure2() {
            return this.structure2$mcI$sp();
         }

         public Ring structure1$mcJ$sp() {
            return this.structure1;
         }

         public Ring structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$295;
            this.structure2 = _structure2$295;
         }
      };
   }

   // $FF: synthetic method
   static Ring RingProduct2$mJJc$sp$(final RingProductInstances $this, final Ring _structure1, final Ring _structure2) {
      return $this.RingProduct2$mJJc$sp(_structure1, _structure2);
   }

   default Ring RingProduct2$mJJc$sp(final Ring _structure1, final Ring _structure2) {
      return new RingProduct2$mcJJ$sp(_structure1, _structure2) {
         private final Ring structure1;
         private final Ring structure2;

         public Tuple2 fromInt(final int x0) {
            return RingProduct2$mcJJ$sp.fromInt$(this, x0);
         }

         public Tuple2 fromInt$mcJJ$sp(final int x0) {
            return RingProduct2$mcJJ$sp.fromInt$mcJJ$sp$(this, x0);
         }

         public Tuple2 one() {
            return RingProduct2$mcJJ$sp.one$(this);
         }

         public Tuple2 one$mcJJ$sp() {
            return RingProduct2$mcJJ$sp.one$mcJJ$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcJJ$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2$mcJJ$sp.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcJJ$sp.zero$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2$mcJJ$sp.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJJ$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJJ$sp.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJJ$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJJ$sp.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJJ$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJJ$sp.pow$mcJJ$sp$(this, x0, x1);
         }

         public Ring structure1$mcD$sp() {
            return RingProduct2.structure1$mcD$sp$(this);
         }

         public Ring structure1$mcF$sp() {
            return RingProduct2.structure1$mcF$sp$(this);
         }

         public Ring structure1$mcI$sp() {
            return RingProduct2.structure1$mcI$sp$(this);
         }

         public Ring structure2$mcD$sp() {
            return RingProduct2.structure2$mcD$sp$(this);
         }

         public Ring structure2$mcF$sp() {
            return RingProduct2.structure2$mcF$sp$(this);
         }

         public Ring structure2$mcI$sp() {
            return RingProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 fromInt$mcDD$sp(final int x0) {
            return RingProduct2.fromInt$mcDD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDF$sp(final int x0) {
            return RingProduct2.fromInt$mcDF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDI$sp(final int x0) {
            return RingProduct2.fromInt$mcDI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcDJ$sp(final int x0) {
            return RingProduct2.fromInt$mcDJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFD$sp(final int x0) {
            return RingProduct2.fromInt$mcFD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFF$sp(final int x0) {
            return RingProduct2.fromInt$mcFF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFI$sp(final int x0) {
            return RingProduct2.fromInt$mcFI$sp$(this, x0);
         }

         public Tuple2 fromInt$mcFJ$sp(final int x0) {
            return RingProduct2.fromInt$mcFJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcID$sp(final int x0) {
            return RingProduct2.fromInt$mcID$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIF$sp(final int x0) {
            return RingProduct2.fromInt$mcIF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcII$sp(final int x0) {
            return RingProduct2.fromInt$mcII$sp$(this, x0);
         }

         public Tuple2 fromInt$mcIJ$sp(final int x0) {
            return RingProduct2.fromInt$mcIJ$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJD$sp(final int x0) {
            return RingProduct2.fromInt$mcJD$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJF$sp(final int x0) {
            return RingProduct2.fromInt$mcJF$sp$(this, x0);
         }

         public Tuple2 fromInt$mcJI$sp(final int x0) {
            return RingProduct2.fromInt$mcJI$sp$(this, x0);
         }

         public Tuple2 one$mcDD$sp() {
            return RingProduct2.one$mcDD$sp$(this);
         }

         public Tuple2 one$mcDF$sp() {
            return RingProduct2.one$mcDF$sp$(this);
         }

         public Tuple2 one$mcDI$sp() {
            return RingProduct2.one$mcDI$sp$(this);
         }

         public Tuple2 one$mcDJ$sp() {
            return RingProduct2.one$mcDJ$sp$(this);
         }

         public Tuple2 one$mcFD$sp() {
            return RingProduct2.one$mcFD$sp$(this);
         }

         public Tuple2 one$mcFF$sp() {
            return RingProduct2.one$mcFF$sp$(this);
         }

         public Tuple2 one$mcFI$sp() {
            return RingProduct2.one$mcFI$sp$(this);
         }

         public Tuple2 one$mcFJ$sp() {
            return RingProduct2.one$mcFJ$sp$(this);
         }

         public Tuple2 one$mcID$sp() {
            return RingProduct2.one$mcID$sp$(this);
         }

         public Tuple2 one$mcIF$sp() {
            return RingProduct2.one$mcIF$sp$(this);
         }

         public Tuple2 one$mcII$sp() {
            return RingProduct2.one$mcII$sp$(this);
         }

         public Tuple2 one$mcIJ$sp() {
            return RingProduct2.one$mcIJ$sp$(this);
         }

         public Tuple2 one$mcJD$sp() {
            return RingProduct2.one$mcJD$sp$(this);
         }

         public Tuple2 one$mcJF$sp() {
            return RingProduct2.one$mcJF$sp$(this);
         }

         public Tuple2 one$mcJI$sp() {
            return RingProduct2.one$mcJI$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public double fromInt$mcD$sp(final int n) {
            return Ring.fromInt$mcD$sp$(this, n);
         }

         public float fromInt$mcF$sp(final int n) {
            return Ring.fromInt$mcF$sp$(this, n);
         }

         public int fromInt$mcI$sp(final int n) {
            return Ring.fromInt$mcI$sp$(this, n);
         }

         public long fromInt$mcJ$sp(final int n) {
            return Ring.fromInt$mcJ$sp$(this, n);
         }

         public Object fromBigInt(final BigInt n) {
            return Ring.fromBigInt$(this, n);
         }

         public double fromBigInt$mcD$sp(final BigInt n) {
            return Ring.fromBigInt$mcD$sp$(this, n);
         }

         public float fromBigInt$mcF$sp(final BigInt n) {
            return Ring.fromBigInt$mcF$sp$(this, n);
         }

         public int fromBigInt$mcI$sp(final BigInt n) {
            return Ring.fromBigInt$mcI$sp$(this, n);
         }

         public long fromBigInt$mcJ$sp(final BigInt n) {
            return Ring.fromBigInt$mcJ$sp$(this, n);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Monoid multiplicative() {
            return MultiplicativeMonoid.multiplicative$(this);
         }

         public Monoid multiplicative$mcD$sp() {
            return MultiplicativeMonoid.multiplicative$mcD$sp$(this);
         }

         public Monoid multiplicative$mcF$sp() {
            return MultiplicativeMonoid.multiplicative$mcF$sp$(this);
         }

         public Monoid multiplicative$mcI$sp() {
            return MultiplicativeMonoid.multiplicative$mcI$sp$(this);
         }

         public Monoid multiplicative$mcJ$sp() {
            return MultiplicativeMonoid.multiplicative$mcJ$sp$(this);
         }

         public double one$mcD$sp() {
            return MultiplicativeMonoid.one$mcD$sp$(this);
         }

         public float one$mcF$sp() {
            return MultiplicativeMonoid.one$mcF$sp$(this);
         }

         public int one$mcI$sp() {
            return MultiplicativeMonoid.one$mcI$sp$(this);
         }

         public long one$mcJ$sp() {
            return MultiplicativeMonoid.one$mcJ$sp$(this);
         }

         public boolean isOne(final Object a, final Eq ev) {
            return MultiplicativeMonoid.isOne$(this, a, ev);
         }

         public boolean isOne$mcD$sp(final double a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcD$sp$(this, a, ev);
         }

         public boolean isOne$mcF$sp(final float a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcF$sp$(this, a, ev);
         }

         public boolean isOne$mcI$sp(final int a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcI$sp$(this, a, ev);
         }

         public boolean isOne$mcJ$sp(final long a, final Eq ev) {
            return MultiplicativeMonoid.isOne$mcJ$sp$(this, a, ev);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeMonoid.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeMonoid.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeMonoid.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeMonoid.pow$mcJ$sp$(this, a, n);
         }

         public Object product(final IterableOnce as) {
            return MultiplicativeMonoid.product$(this, as);
         }

         public double product$mcD$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcD$sp$(this, as);
         }

         public float product$mcF$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcF$sp$(this, as);
         }

         public int product$mcI$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcI$sp$(this, as);
         }

         public long product$mcJ$sp(final IterableOnce as) {
            return MultiplicativeMonoid.product$mcJ$sp$(this, as);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeMonoid.tryProduct$(this, as);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Ring structure1() {
            return this.structure1$mcJ$sp();
         }

         public Ring structure2() {
            return this.structure2$mcJ$sp();
         }

         public Ring structure1$mcJ$sp() {
            return this.structure1;
         }

         public Ring structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            MultiplicativeMonoid.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            Ring.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            RingProduct2.$init$(this);
            this.structure1 = _structure1$296;
            this.structure2 = _structure2$296;
         }
      };
   }

   static void $init$(final RingProductInstances $this) {
   }
}
