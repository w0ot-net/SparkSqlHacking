package spire.std;

import cats.kernel.CommutativeGroup;
import cats.kernel.CommutativeMonoid;
import cats.kernel.CommutativeSemigroup;
import cats.kernel.Eq;
import cats.kernel.Group;
import cats.kernel.Monoid;
import cats.kernel.Semigroup;
import scala.Option;
import scala.Tuple10;
import scala.Tuple11;
import scala.Tuple12;
import scala.Tuple13;
import scala.Tuple14;
import scala.Tuple15;
import scala.Tuple16;
import scala.Tuple17;
import scala.Tuple18;
import scala.Tuple19;
import scala.Tuple2;
import scala.Tuple20;
import scala.Tuple21;
import scala.Tuple22;
import scala.Tuple3;
import scala.Tuple4;
import scala.Tuple5;
import scala.Tuple6;
import scala.Tuple7;
import scala.Tuple8;
import scala.Tuple9;
import scala.collection.IterableOnce;
import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u0005)\u0015baB\f\u0019!\u0003\r\t!\b\u0005\u0006I\u0001!\t!\n\u0005\u0006S\u0001!\u0019A\u000b\u0005\u0006m\u0002!\u0019a\u001e\u0005\b\u0003/\u0001A1AA\r\u0011\u001d\tI\u0005\u0001C\u0002\u0003\u0017Bq!a!\u0001\t\u0007\t)\tC\u0004\u0002F\u0002!\u0019!a2\t\u000f\t=\u0001\u0001b\u0001\u0003\u0012!9!\u0011\r\u0001\u0005\u0004\t\r\u0004b\u0002B^\u0001\u0011\r!Q\u0018\u0005\b\u0007;\u0001A1AB\u0010\u0011\u001d\u00199\t\u0001C\u0002\u0007\u0013Cqa!?\u0001\t\u0007\u0019Y\u0010C\u0004\u0005t\u0001!\u0019\u0001\"\u001e\t\u000f\u0011U\b\u0001b\u0001\u0005x\"9Qq\u0010\u0001\u0005\u0004\u0015\u0005\u0005b\u0002D\t\u0001\u0011\ra1\u0003\u0005\b\rW\u0003A1\u0001DW\u0011\u001d9i\u0005\u0001C\u0002\u000f\u001fBqab>\u0001\t\u00079I\u0010C\u0004\t*\u0002!\u0019\u0001c+\t\u000f%\r\u0004\u0001b\u0001\nf\t9\u0012IY$s_V\u0004\bK]8ek\u000e$\u0018J\\:uC:\u001cWm\u001d\u0006\u00033i\t1a\u001d;e\u0015\u0005Y\u0012!B:qSJ,7\u0001A\n\u0003\u0001y\u0001\"a\b\u0012\u000e\u0003\u0001R\u0011!I\u0001\u0006g\u000e\fG.Y\u0005\u0003G\u0001\u0012a!\u00118z%\u00164\u0017A\u0002\u0013j]&$H\u0005F\u0001'!\tyr%\u0003\u0002)A\t!QK\\5u\u0003=\t%m\u0012:pkB\u0004&o\u001c3vGR\u0014TcA\u0016BKR\u0019A\u0006]:\u0011\u00075JDH\u0004\u0002/m9\u0011q\u0006\u000e\b\u0003aMj\u0011!\r\u0006\u0003eq\ta\u0001\u0010:p_Rt\u0014\"A\u000e\n\u0005UR\u0012aB1mO\u0016\u0014'/Y\u0005\u0003oa\nq\u0001]1dW\u0006<WM\u0003\u000265%\u0011!h\u000f\u0002\b\u0003\n<%o\\;q\u0015\t9\u0004\b\u0005\u0003 {}\"\u0017B\u0001 !\u0005\u0019!V\u000f\u001d7feA\u0011\u0001)\u0011\u0007\u0001\t%\u0011%\u0001)A\u0001\u0002\u000b\u00071IA\u0001B#\t!u\t\u0005\u0002 \u000b&\u0011a\t\t\u0002\b\u001d>$\b.\u001b8h!\ty\u0002*\u0003\u0002JA\t\u0019\u0011I\\=)\r\u0005[e*\u0016.`!\tyB*\u0003\u0002NA\tY1\u000f]3dS\u0006d\u0017N_3ec\u0015\u0019s\n\u0015*R\u001d\ty\u0002+\u0003\u0002RA\u0005\u0019\u0011J\u001c;2\t\u0011\u001aF+\t\b\u0003aQK\u0011!I\u0019\u0006GY;\u0016\f\u0017\b\u0003?]K!\u0001\u0017\u0011\u0002\t1{gnZ\u0019\u0005IM#\u0016%M\u0003$7rsVL\u0004\u0002 9&\u0011Q\fI\u0001\u0006\r2|\u0017\r^\u0019\u0005IM#\u0016%M\u0003$A\u0006\u001c'M\u0004\u0002 C&\u0011!\rI\u0001\u0007\t>,(\r\\32\t\u0011\u001aF+\t\t\u0003\u0001\u0016$\u0011B\u001a\u0002!\u0002\u0003\u0005)\u0019A\"\u0003\u0003\tCc!Z&iU2t\u0017'B\u0012P!&\f\u0016\u0007\u0002\u0013T)\u0006\nTa\t,XWb\u000bD\u0001J*UCE*1e\u0017/n;F\"Ae\u0015+\"c\u0015\u0019\u0003-Y8cc\u0011!3\u000bV\u0011\t\u000bE\u0014\u00019\u0001:\u0002\u0017}\u001bHO];diV\u0014X-\r\t\u0004[ez\u0004\"\u0002;\u0003\u0001\b)\u0018aC0tiJ,8\r^;sKJ\u00022!L\u001de\u0003=\t%m\u0012:pkB\u0004&o\u001c3vGR\u001cTC\u0002=\u007f\u0003\u0003\t)\u0001F\u0004z\u0003\u0013\ti!!\u0005\u0011\u00075J$\u0010\u0005\u0004 wv|\u00181A\u0005\u0003y\u0002\u0012a\u0001V;qY\u0016\u001c\u0004C\u0001!\u007f\t\u0015\u00115A1\u0001D!\r\u0001\u0015\u0011\u0001\u0003\u0006M\u000e\u0011\ra\u0011\t\u0004\u0001\u0006\u0015AABA\u0004\u0007\t\u00071IA\u0001D\u0011\u0019\t8\u0001q\u0001\u0002\fA\u0019Q&O?\t\rQ\u001c\u00019AA\b!\ri\u0013h \u0005\b\u0003'\u0019\u00019AA\u000b\u0003-y6\u000f\u001e:vGR,(/Z\u001a\u0011\t5J\u00141A\u0001\u0010\u0003\n<%o\\;q!J|G-^2uiUQ\u00111DA\u0014\u0003W\ty#a\r\u0015\u0015\u0005u\u0011qGA\u001e\u0003\u007f\t\u0019\u0005\u0005\u0003.s\u0005}\u0001cC\u0010\u0002\"\u0005\u0015\u0012\u0011FA\u0017\u0003cI1!a\t!\u0005\u0019!V\u000f\u001d7fiA\u0019\u0001)a\n\u0005\u000b\t#!\u0019A\"\u0011\u0007\u0001\u000bY\u0003B\u0003g\t\t\u00071\tE\u0002A\u0003_!a!a\u0002\u0005\u0005\u0004\u0019\u0005c\u0001!\u00024\u00111\u0011Q\u0007\u0003C\u0002\r\u0013\u0011\u0001\u0012\u0005\u0007c\u0012\u0001\u001d!!\u000f\u0011\t5J\u0014Q\u0005\u0005\u0007i\u0012\u0001\u001d!!\u0010\u0011\t5J\u0014\u0011\u0006\u0005\b\u0003'!\u00019AA!!\u0011i\u0013(!\f\t\u000f\u0005\u0015C\u0001q\u0001\u0002H\u0005Yql\u001d;sk\u000e$XO]35!\u0011i\u0013(!\r\u0002\u001f\u0005\u0013wI]8vaB\u0013x\u000eZ;diV*B\"!\u0014\u0002Z\u0005u\u0013\u0011MA3\u0003S\"B\"a\u0014\u0002n\u0005E\u0014QOA=\u0003{\u0002B!L\u001d\u0002RAiq$a\u0015\u0002X\u0005m\u0013qLA2\u0003OJ1!!\u0016!\u0005\u0019!V\u000f\u001d7fkA\u0019\u0001)!\u0017\u0005\u000b\t+!\u0019A\"\u0011\u0007\u0001\u000bi\u0006B\u0003g\u000b\t\u00071\tE\u0002A\u0003C\"a!a\u0002\u0006\u0005\u0004\u0019\u0005c\u0001!\u0002f\u00111\u0011QG\u0003C\u0002\r\u00032\u0001QA5\t\u0019\tY'\u0002b\u0001\u0007\n\tQ\t\u0003\u0004r\u000b\u0001\u000f\u0011q\u000e\t\u0005[e\n9\u0006\u0003\u0004u\u000b\u0001\u000f\u00111\u000f\t\u0005[e\nY\u0006C\u0004\u0002\u0014\u0015\u0001\u001d!a\u001e\u0011\t5J\u0014q\f\u0005\b\u0003\u000b*\u00019AA>!\u0011i\u0013(a\u0019\t\u000f\u0005}T\u0001q\u0001\u0002\u0002\u0006Yql\u001d;sk\u000e$XO]36!\u0011i\u0013(a\u001a\u0002\u001f\u0005\u0013wI]8vaB\u0013x\u000eZ;diZ*b\"a\"\u0002\u0014\u0006]\u00151TAP\u0003G\u000b9\u000b\u0006\b\u0002\n\u0006-\u0016qVAZ\u0003o\u000bY,a0\u0011\t5J\u00141\u0012\t\u0010?\u00055\u0015\u0011SAK\u00033\u000bi*!)\u0002&&\u0019\u0011q\u0012\u0011\u0003\rQ+\b\u000f\\37!\r\u0001\u00151\u0013\u0003\u0006\u0005\u001a\u0011\ra\u0011\t\u0004\u0001\u0006]E!\u00024\u0007\u0005\u0004\u0019\u0005c\u0001!\u0002\u001c\u00121\u0011q\u0001\u0004C\u0002\r\u00032\u0001QAP\t\u0019\t)D\u0002b\u0001\u0007B\u0019\u0001)a)\u0005\r\u0005-dA1\u0001D!\r\u0001\u0015q\u0015\u0003\u0007\u0003S3!\u0019A\"\u0003\u0003\u0019Ca!\u001d\u0004A\u0004\u00055\u0006\u0003B\u0017:\u0003#Ca\u0001\u001e\u0004A\u0004\u0005E\u0006\u0003B\u0017:\u0003+Cq!a\u0005\u0007\u0001\b\t)\f\u0005\u0003.s\u0005e\u0005bBA#\r\u0001\u000f\u0011\u0011\u0018\t\u0005[e\ni\nC\u0004\u0002\u0000\u0019\u0001\u001d!!0\u0011\t5J\u0014\u0011\u0015\u0005\b\u0003\u00034\u00019AAb\u0003-y6\u000f\u001e:vGR,(/\u001a\u001c\u0011\t5J\u0014QU\u0001\u0010\u0003\n<%o\\;q!J|G-^2uoU\u0001\u0012\u0011ZAk\u00033\fi.!9\u0002f\u0006%\u0018Q\u001e\u000b\u0011\u0003\u0017\f\t0!>\u0002z\u0006u(\u0011\u0001B\u0003\u0005\u0013\u0001B!L\u001d\u0002NB\tr$a4\u0002T\u0006]\u00171\\Ap\u0003G\f9/a;\n\u0007\u0005E\u0007E\u0001\u0004UkBdWm\u000e\t\u0004\u0001\u0006UG!\u0002\"\b\u0005\u0004\u0019\u0005c\u0001!\u0002Z\u0012)am\u0002b\u0001\u0007B\u0019\u0001)!8\u0005\r\u0005\u001dqA1\u0001D!\r\u0001\u0015\u0011\u001d\u0003\u0007\u0003k9!\u0019A\"\u0011\u0007\u0001\u000b)\u000f\u0002\u0004\u0002l\u001d\u0011\ra\u0011\t\u0004\u0001\u0006%HABAU\u000f\t\u00071\tE\u0002A\u0003[$a!a<\b\u0005\u0004\u0019%!A$\t\rE<\u00019AAz!\u0011i\u0013(a5\t\rQ<\u00019AA|!\u0011i\u0013(a6\t\u000f\u0005Mq\u0001q\u0001\u0002|B!Q&OAn\u0011\u001d\t)e\u0002a\u0002\u0003\u007f\u0004B!L\u001d\u0002`\"9\u0011qP\u0004A\u0004\t\r\u0001\u0003B\u0017:\u0003GDq!!1\b\u0001\b\u00119\u0001\u0005\u0003.s\u0005\u001d\bb\u0002B\u0006\u000f\u0001\u000f!QB\u0001\f?N$(/^2ukJ,w\u0007\u0005\u0003.s\u0005-\u0018aD!c\u000fJ|W\u000f\u001d)s_\u0012,8\r\u001e\u001d\u0016%\tM!q\u0004B\u0012\u0005O\u0011YCa\f\u00034\t]\"1\b\u000b\u0013\u0005+\u0011yDa\u0011\u0003H\t-#q\nB*\u0005/\u0012Y\u0006\u0005\u0003.s\t]\u0001cE\u0010\u0003\u001a\tu!\u0011\u0005B\u0013\u0005S\u0011iC!\r\u00036\te\u0012b\u0001B\u000eA\t1A+\u001e9mKb\u00022\u0001\u0011B\u0010\t\u0015\u0011\u0005B1\u0001D!\r\u0001%1\u0005\u0003\u0006M\"\u0011\ra\u0011\t\u0004\u0001\n\u001dBABA\u0004\u0011\t\u00071\tE\u0002A\u0005W!a!!\u000e\t\u0005\u0004\u0019\u0005c\u0001!\u00030\u00111\u00111\u000e\u0005C\u0002\r\u00032\u0001\u0011B\u001a\t\u0019\tI\u000b\u0003b\u0001\u0007B\u0019\u0001Ia\u000e\u0005\r\u0005=\bB1\u0001D!\r\u0001%1\b\u0003\u0007\u0005{A!\u0019A\"\u0003\u0003!Ca!\u001d\u0005A\u0004\t\u0005\u0003\u0003B\u0017:\u0005;Aa\u0001\u001e\u0005A\u0004\t\u0015\u0003\u0003B\u0017:\u0005CAq!a\u0005\t\u0001\b\u0011I\u0005\u0005\u0003.s\t\u0015\u0002bBA#\u0011\u0001\u000f!Q\n\t\u0005[e\u0012I\u0003C\u0004\u0002\u0000!\u0001\u001dA!\u0015\u0011\t5J$Q\u0006\u0005\b\u0003\u0003D\u00019\u0001B+!\u0011i\u0013H!\r\t\u000f\t-\u0001\u0002q\u0001\u0003ZA!Q&\u000fB\u001b\u0011\u001d\u0011i\u0006\u0003a\u0002\u0005?\n1bX:ueV\u001cG/\u001e:fqA!Q&\u000fB\u001d\u0003=\t%m\u0012:pkB\u0004&o\u001c3vGRLT\u0003\u0006B3\u0005c\u0012)H!\u001f\u0003~\t\u0005%Q\u0011BE\u0005\u001b\u0013\t\n\u0006\u000b\u0003h\tU%\u0011\u0014BO\u0005C\u0013)K!+\u0003.\nE&Q\u0017\t\u0005[e\u0012I\u0007E\u000b \u0005W\u0012yGa\u001d\u0003x\tm$q\u0010BB\u0005\u000f\u0013YIa$\n\u0007\t5\u0004E\u0001\u0004UkBdW-\u000f\t\u0004\u0001\nED!\u0002\"\n\u0005\u0004\u0019\u0005c\u0001!\u0003v\u0011)a-\u0003b\u0001\u0007B\u0019\u0001I!\u001f\u0005\r\u0005\u001d\u0011B1\u0001D!\r\u0001%Q\u0010\u0003\u0007\u0003kI!\u0019A\"\u0011\u0007\u0001\u0013\t\t\u0002\u0004\u0002l%\u0011\ra\u0011\t\u0004\u0001\n\u0015EABAU\u0013\t\u00071\tE\u0002A\u0005\u0013#a!a<\n\u0005\u0004\u0019\u0005c\u0001!\u0003\u000e\u00121!QH\u0005C\u0002\r\u00032\u0001\u0011BI\t\u0019\u0011\u0019*\u0003b\u0001\u0007\n\t\u0011\n\u0003\u0004r\u0013\u0001\u000f!q\u0013\t\u0005[e\u0012y\u0007\u0003\u0004u\u0013\u0001\u000f!1\u0014\t\u0005[e\u0012\u0019\bC\u0004\u0002\u0014%\u0001\u001dAa(\u0011\t5J$q\u000f\u0005\b\u0003\u000bJ\u00019\u0001BR!\u0011i\u0013Ha\u001f\t\u000f\u0005}\u0014\u0002q\u0001\u0003(B!Q&\u000fB@\u0011\u001d\t\t-\u0003a\u0002\u0005W\u0003B!L\u001d\u0003\u0004\"9!1B\u0005A\u0004\t=\u0006\u0003B\u0017:\u0005\u000fCqA!\u0018\n\u0001\b\u0011\u0019\f\u0005\u0003.s\t-\u0005b\u0002B\\\u0013\u0001\u000f!\u0011X\u0001\f?N$(/^2ukJ,\u0017\b\u0005\u0003.s\t=\u0015\u0001E!c\u000fJ|W\u000f\u001d)s_\u0012,8\r^\u00191+Y\u0011yLa3\u0003P\nM'q\u001bBn\u0005?\u0014\u0019Oa:\u0003l\n=HC\u0006Ba\u0005g\u00149Pa?\u0003\u0000\u000e\r1qAB\u0006\u0007\u001f\u0019\u0019ba\u0006\u0011\t5J$1\u0019\t\u0018?\t\u0015'\u0011\u001aBg\u0005#\u0014)N!7\u0003^\n\u0005(Q\u001dBu\u0005[L1Aa2!\u0005\u001d!V\u000f\u001d7fcA\u00022\u0001\u0011Bf\t\u0015\u0011%B1\u0001D!\r\u0001%q\u001a\u0003\u0006M*\u0011\ra\u0011\t\u0004\u0001\nMGABA\u0004\u0015\t\u00071\tE\u0002A\u0005/$a!!\u000e\u000b\u0005\u0004\u0019\u0005c\u0001!\u0003\\\u00121\u00111\u000e\u0006C\u0002\r\u00032\u0001\u0011Bp\t\u0019\tIK\u0003b\u0001\u0007B\u0019\u0001Ia9\u0005\r\u0005=(B1\u0001D!\r\u0001%q\u001d\u0003\u0007\u0005{Q!\u0019A\"\u0011\u0007\u0001\u0013Y\u000f\u0002\u0004\u0003\u0014*\u0011\ra\u0011\t\u0004\u0001\n=HA\u0002By\u0015\t\u00071IA\u0001K\u0011\u0019\t(\u0002q\u0001\u0003vB!Q&\u000fBe\u0011\u0019!(\u0002q\u0001\u0003zB!Q&\u000fBg\u0011\u001d\t\u0019B\u0003a\u0002\u0005{\u0004B!L\u001d\u0003R\"9\u0011Q\t\u0006A\u0004\r\u0005\u0001\u0003B\u0017:\u0005+Dq!a \u000b\u0001\b\u0019)\u0001\u0005\u0003.s\te\u0007bBAa\u0015\u0001\u000f1\u0011\u0002\t\u0005[e\u0012i\u000eC\u0004\u0003\f)\u0001\u001da!\u0004\u0011\t5J$\u0011\u001d\u0005\b\u0005;R\u00019AB\t!\u0011i\u0013H!:\t\u000f\t]&\u0002q\u0001\u0004\u0016A!Q&\u000fBu\u0011\u001d\u0019IB\u0003a\u0002\u00077\tAbX:ueV\u001cG/\u001e:fcA\u0002B!L\u001d\u0003n\u0006\u0001\u0012IY$s_V\u0004\bK]8ek\u000e$\u0018'M\u000b\u0019\u0007C\u0019ic!\r\u00046\re2QHB!\u0007\u000b\u001aIe!\u0014\u0004R\rUC\u0003GB\u0012\u00073\u001aif!\u0019\u0004f\r%4QNB9\u0007k\u001aIh! \u0004\u0002B!Q&OB\u0013!ey2qEB\u0016\u0007_\u0019\u0019da\u000e\u0004<\r}21IB$\u0007\u0017\u001ayea\u0015\n\u0007\r%\u0002EA\u0004UkBdW-M\u0019\u0011\u0007\u0001\u001bi\u0003B\u0003C\u0017\t\u00071\tE\u0002A\u0007c!QAZ\u0006C\u0002\r\u00032\u0001QB\u001b\t\u0019\t9a\u0003b\u0001\u0007B\u0019\u0001i!\u000f\u0005\r\u0005U2B1\u0001D!\r\u00015Q\b\u0003\u0007\u0003WZ!\u0019A\"\u0011\u0007\u0001\u001b\t\u0005\u0002\u0004\u0002*.\u0011\ra\u0011\t\u0004\u0001\u000e\u0015CABAx\u0017\t\u00071\tE\u0002A\u0007\u0013\"aA!\u0010\f\u0005\u0004\u0019\u0005c\u0001!\u0004N\u00111!1S\u0006C\u0002\r\u00032\u0001QB)\t\u0019\u0011\tp\u0003b\u0001\u0007B\u0019\u0001i!\u0016\u0005\r\r]3B1\u0001D\u0005\u0005Y\u0005BB9\f\u0001\b\u0019Y\u0006\u0005\u0003.s\r-\u0002B\u0002;\f\u0001\b\u0019y\u0006\u0005\u0003.s\r=\u0002bBA\n\u0017\u0001\u000f11\r\t\u0005[e\u001a\u0019\u0004C\u0004\u0002F-\u0001\u001daa\u001a\u0011\t5J4q\u0007\u0005\b\u0003\u007fZ\u00019AB6!\u0011i\u0013ha\u000f\t\u000f\u0005\u00057\u0002q\u0001\u0004pA!Q&OB \u0011\u001d\u0011Ya\u0003a\u0002\u0007g\u0002B!L\u001d\u0004D!9!QL\u0006A\u0004\r]\u0004\u0003B\u0017:\u0007\u000fBqAa.\f\u0001\b\u0019Y\b\u0005\u0003.s\r-\u0003bBB\r\u0017\u0001\u000f1q\u0010\t\u0005[e\u001ay\u0005C\u0004\u0004\u0004.\u0001\u001da!\"\u0002\u0019}\u001bHO];diV\u0014X-M\u0019\u0011\t5J41K\u0001\u0011\u0003\n<%o\\;q!J|G-^2ucI*\"da#\u0004\u0018\u000em5qTBR\u0007O\u001bYka,\u00044\u000e]61XB`\u0007\u0007$\"d!$\u0004H\u000e-7qZBj\u0007/\u001cYna8\u0004d\u000e\u001d81^Bx\u0007g\u0004B!L\u001d\u0004\u0010BYrd!%\u0004\u0016\u000ee5QTBQ\u0007K\u001bIk!,\u00042\u000eU6\u0011XB_\u0007\u0003L1aa%!\u0005\u001d!V\u000f\u001d7fcI\u00022\u0001QBL\t\u0015\u0011EB1\u0001D!\r\u000151\u0014\u0003\u0006M2\u0011\ra\u0011\t\u0004\u0001\u000e}EABA\u0004\u0019\t\u00071\tE\u0002A\u0007G#a!!\u000e\r\u0005\u0004\u0019\u0005c\u0001!\u0004(\u00121\u00111\u000e\u0007C\u0002\r\u00032\u0001QBV\t\u0019\tI\u000b\u0004b\u0001\u0007B\u0019\u0001ia,\u0005\r\u0005=HB1\u0001D!\r\u000151\u0017\u0003\u0007\u0005{a!\u0019A\"\u0011\u0007\u0001\u001b9\f\u0002\u0004\u0003\u00142\u0011\ra\u0011\t\u0004\u0001\u000emFA\u0002By\u0019\t\u00071\tE\u0002A\u0007\u007f#aaa\u0016\r\u0005\u0004\u0019\u0005c\u0001!\u0004D\u001211Q\u0019\u0007C\u0002\r\u0013\u0011\u0001\u0014\u0005\u0007c2\u0001\u001da!3\u0011\t5J4Q\u0013\u0005\u0007i2\u0001\u001da!4\u0011\t5J4\u0011\u0014\u0005\b\u0003'a\u00019ABi!\u0011i\u0013h!(\t\u000f\u0005\u0015C\u0002q\u0001\u0004VB!Q&OBQ\u0011\u001d\ty\b\u0004a\u0002\u00073\u0004B!L\u001d\u0004&\"9\u0011\u0011\u0019\u0007A\u0004\ru\u0007\u0003B\u0017:\u0007SCqAa\u0003\r\u0001\b\u0019\t\u000f\u0005\u0003.s\r5\u0006b\u0002B/\u0019\u0001\u000f1Q\u001d\t\u0005[e\u001a\t\fC\u0004\u000382\u0001\u001da!;\u0011\t5J4Q\u0017\u0005\b\u00073a\u00019ABw!\u0011i\u0013h!/\t\u000f\r\rE\u0002q\u0001\u0004rB!Q&OB_\u0011\u001d\u0019)\u0010\u0004a\u0002\u0007o\fAbX:ueV\u001cG/\u001e:fcI\u0002B!L\u001d\u0004B\u0006\u0001\u0012IY$s_V\u0004\bK]8ek\u000e$\u0018gM\u000b\u001d\u0007{$I\u0001\"\u0004\u0005\u0012\u0011UA\u0011\u0004C\u000f\tC!)\u0003\"\u000b\u0005.\u0011EBQ\u0007C\u001d)q\u0019y\u0010\"\u0010\u0005B\u0011\u0015C\u0011\nC'\t#\")\u0006\"\u0017\u0005^\u0011\u0005DQ\rC5\t[\u0002B!L\u001d\u0005\u0002Air\u0004b\u0001\u0005\b\u0011-Aq\u0002C\n\t/!Y\u0002b\b\u0005$\u0011\u001dB1\u0006C\u0018\tg!9$C\u0002\u0005\u0006\u0001\u0012q\u0001V;qY\u0016\f4\u0007E\u0002A\t\u0013!QAQ\u0007C\u0002\r\u00032\u0001\u0011C\u0007\t\u00151WB1\u0001D!\r\u0001E\u0011\u0003\u0003\u0007\u0003\u000fi!\u0019A\"\u0011\u0007\u0001#)\u0002\u0002\u0004\u000265\u0011\ra\u0011\t\u0004\u0001\u0012eAABA6\u001b\t\u00071\tE\u0002A\t;!a!!+\u000e\u0005\u0004\u0019\u0005c\u0001!\u0005\"\u00111\u0011q^\u0007C\u0002\r\u00032\u0001\u0011C\u0013\t\u0019\u0011i$\u0004b\u0001\u0007B\u0019\u0001\t\"\u000b\u0005\r\tMUB1\u0001D!\r\u0001EQ\u0006\u0003\u0007\u0005cl!\u0019A\"\u0011\u0007\u0001#\t\u0004\u0002\u0004\u0004X5\u0011\ra\u0011\t\u0004\u0001\u0012UBABBc\u001b\t\u00071\tE\u0002A\ts!a\u0001b\u000f\u000e\u0005\u0004\u0019%!A'\t\rEl\u00019\u0001C !\u0011i\u0013\bb\u0002\t\rQl\u00019\u0001C\"!\u0011i\u0013\bb\u0003\t\u000f\u0005MQ\u0002q\u0001\u0005HA!Q&\u000fC\b\u0011\u001d\t)%\u0004a\u0002\t\u0017\u0002B!L\u001d\u0005\u0014!9\u0011qP\u0007A\u0004\u0011=\u0003\u0003B\u0017:\t/Aq!!1\u000e\u0001\b!\u0019\u0006\u0005\u0003.s\u0011m\u0001b\u0002B\u0006\u001b\u0001\u000fAq\u000b\t\u0005[e\"y\u0002C\u0004\u0003^5\u0001\u001d\u0001b\u0017\u0011\t5JD1\u0005\u0005\b\u0005ok\u00019\u0001C0!\u0011i\u0013\bb\n\t\u000f\reQ\u0002q\u0001\u0005dA!Q&\u000fC\u0016\u0011\u001d\u0019\u0019)\u0004a\u0002\tO\u0002B!L\u001d\u00050!91Q_\u0007A\u0004\u0011-\u0004\u0003B\u0017:\tgAq\u0001b\u001c\u000e\u0001\b!\t(\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\f4\u0007\u0005\u0003.s\u0011]\u0012\u0001E!c\u000fJ|W\u000f\u001d)s_\u0012,8\r^\u00195+y!9\bb!\u0005\b\u0012-Eq\u0012CJ\t/#Y\nb(\u0005$\u0012\u001dF1\u0016CX\tg#9\f\u0006\u0010\u0005z\u0011mFq\u0018Cb\t\u000f$Y\rb4\u0005T\u0012]G1\u001cCp\tG$9\u000fb;\u0005pB!Q&\u000fC>!}yBQ\u0010CA\t\u000b#I\t\"$\u0005\u0012\u0012UE\u0011\u0014CO\tC#)\u000b\"+\u0005.\u0012EFQW\u0005\u0004\t\u007f\u0002#a\u0002+va2,\u0017\u0007\u000e\t\u0004\u0001\u0012\rE!\u0002\"\u000f\u0005\u0004\u0019\u0005c\u0001!\u0005\b\u0012)aM\u0004b\u0001\u0007B\u0019\u0001\tb#\u0005\r\u0005\u001daB1\u0001D!\r\u0001Eq\u0012\u0003\u0007\u0003kq!\u0019A\"\u0011\u0007\u0001#\u0019\n\u0002\u0004\u0002l9\u0011\ra\u0011\t\u0004\u0001\u0012]EABAU\u001d\t\u00071\tE\u0002A\t7#a!a<\u000f\u0005\u0004\u0019\u0005c\u0001!\u0005 \u00121!Q\b\bC\u0002\r\u00032\u0001\u0011CR\t\u0019\u0011\u0019J\u0004b\u0001\u0007B\u0019\u0001\tb*\u0005\r\tEhB1\u0001D!\r\u0001E1\u0016\u0003\u0007\u0007/r!\u0019A\"\u0011\u0007\u0001#y\u000b\u0002\u0004\u0004F:\u0011\ra\u0011\t\u0004\u0001\u0012MFA\u0002C\u001e\u001d\t\u00071\tE\u0002A\to#a\u0001\"/\u000f\u0005\u0004\u0019%!\u0001(\t\rEt\u00019\u0001C_!\u0011i\u0013\b\"!\t\rQt\u00019\u0001Ca!\u0011i\u0013\b\"\"\t\u000f\u0005Ma\u0002q\u0001\u0005FB!Q&\u000fCE\u0011\u001d\t)E\u0004a\u0002\t\u0013\u0004B!L\u001d\u0005\u000e\"9\u0011q\u0010\bA\u0004\u00115\u0007\u0003B\u0017:\t#Cq!!1\u000f\u0001\b!\t\u000e\u0005\u0003.s\u0011U\u0005b\u0002B\u0006\u001d\u0001\u000fAQ\u001b\t\u0005[e\"I\nC\u0004\u0003^9\u0001\u001d\u0001\"7\u0011\t5JDQ\u0014\u0005\b\u0005os\u00019\u0001Co!\u0011i\u0013\b\")\t\u000f\rea\u0002q\u0001\u0005bB!Q&\u000fCS\u0011\u001d\u0019\u0019I\u0004a\u0002\tK\u0004B!L\u001d\u0005*\"91Q\u001f\bA\u0004\u0011%\b\u0003B\u0017:\t[Cq\u0001b\u001c\u000f\u0001\b!i\u000f\u0005\u0003.s\u0011E\u0006b\u0002Cy\u001d\u0001\u000fA1_\u0001\r?N$(/^2ukJ,\u0017\u0007\u000e\t\u0005[e\"),\u0001\tBE\u001e\u0013x.\u001e9Qe>$Wo\u0019;2kU\u0001C\u0011`C\u0003\u000b\u0013)i!\"\u0005\u0006\u0016\u0015eQQDC\u0011\u000bK)I#\"\f\u00062\u0015UR\u0011HC\u001f)\u0001\"Y0\"\u0011\u0006F\u0015%SQJC)\u000b+*I&\"\u0018\u0006b\u0015\u0015T\u0011NC7\u000bc*)(\"\u001f\u0011\t5JDQ \t\"?\u0011}X1AC\u0004\u000b\u0017)y!b\u0005\u0006\u0018\u0015mQqDC\u0012\u000bO)Y#b\f\u00064\u0015]R1H\u0005\u0004\u000b\u0003\u0001#a\u0002+va2,\u0017'\u000e\t\u0004\u0001\u0016\u0015A!\u0002\"\u0010\u0005\u0004\u0019\u0005c\u0001!\u0006\n\u0011)am\u0004b\u0001\u0007B\u0019\u0001)\"\u0004\u0005\r\u0005\u001dqB1\u0001D!\r\u0001U\u0011\u0003\u0003\u0007\u0003ky!\u0019A\"\u0011\u0007\u0001+)\u0002\u0002\u0004\u0002l=\u0011\ra\u0011\t\u0004\u0001\u0016eAABAU\u001f\t\u00071\tE\u0002A\u000b;!a!a<\u0010\u0005\u0004\u0019\u0005c\u0001!\u0006\"\u00111!QH\bC\u0002\r\u00032\u0001QC\u0013\t\u0019\u0011\u0019j\u0004b\u0001\u0007B\u0019\u0001)\"\u000b\u0005\r\tExB1\u0001D!\r\u0001UQ\u0006\u0003\u0007\u0007/z!\u0019A\"\u0011\u0007\u0001+\t\u0004\u0002\u0004\u0004F>\u0011\ra\u0011\t\u0004\u0001\u0016UBA\u0002C\u001e\u001f\t\u00071\tE\u0002A\u000bs!a\u0001\"/\u0010\u0005\u0004\u0019\u0005c\u0001!\u0006>\u00111QqH\bC\u0002\r\u0013\u0011a\u0014\u0005\u0007c>\u0001\u001d!b\u0011\u0011\t5JT1\u0001\u0005\u0007i>\u0001\u001d!b\u0012\u0011\t5JTq\u0001\u0005\b\u0003'y\u00019AC&!\u0011i\u0013(b\u0003\t\u000f\u0005\u0015s\u0002q\u0001\u0006PA!Q&OC\b\u0011\u001d\tyh\u0004a\u0002\u000b'\u0002B!L\u001d\u0006\u0014!9\u0011\u0011Y\bA\u0004\u0015]\u0003\u0003B\u0017:\u000b/AqAa\u0003\u0010\u0001\b)Y\u0006\u0005\u0003.s\u0015m\u0001b\u0002B/\u001f\u0001\u000fQq\f\t\u0005[e*y\u0002C\u0004\u00038>\u0001\u001d!b\u0019\u0011\t5JT1\u0005\u0005\b\u00073y\u00019AC4!\u0011i\u0013(b\n\t\u000f\r\ru\u0002q\u0001\u0006lA!Q&OC\u0016\u0011\u001d\u0019)p\u0004a\u0002\u000b_\u0002B!L\u001d\u00060!9AqN\bA\u0004\u0015M\u0004\u0003B\u0017:\u000bgAq\u0001\"=\u0010\u0001\b)9\b\u0005\u0003.s\u0015]\u0002bBC>\u001f\u0001\u000fQQP\u0001\r?N$(/^2ukJ,\u0017'\u000e\t\u0005[e*Y$\u0001\tBE\u001e\u0013x.\u001e9Qe>$Wo\u0019;2mU\u0011S1QCH\u000b'+9*b'\u0006 \u0016\rVqUCV\u000b_+\u0019,b.\u0006<\u0016}V1YCd\u000b\u0017$\"%\"\"\u0006P\u0016MWq[Cn\u000b?,\u0019/b:\u0006l\u0016=X1_C|\u000bw,yPb\u0001\u0007\b\u0019-\u0001\u0003B\u0017:\u000b\u000f\u00032eHCE\u000b\u001b+\t*\"&\u0006\u001a\u0016uU\u0011UCS\u000bS+i+\"-\u00066\u0016eVQXCa\u000b\u000b,I-C\u0002\u0006\f\u0002\u0012q\u0001V;qY\u0016\fd\u0007E\u0002A\u000b\u001f#QA\u0011\tC\u0002\r\u00032\u0001QCJ\t\u00151\u0007C1\u0001D!\r\u0001Uq\u0013\u0003\u0007\u0003\u000f\u0001\"\u0019A\"\u0011\u0007\u0001+Y\n\u0002\u0004\u00026A\u0011\ra\u0011\t\u0004\u0001\u0016}EABA6!\t\u00071\tE\u0002A\u000bG#a!!+\u0011\u0005\u0004\u0019\u0005c\u0001!\u0006(\u00121\u0011q\u001e\tC\u0002\r\u00032\u0001QCV\t\u0019\u0011i\u0004\u0005b\u0001\u0007B\u0019\u0001)b,\u0005\r\tM\u0005C1\u0001D!\r\u0001U1\u0017\u0003\u0007\u0005c\u0004\"\u0019A\"\u0011\u0007\u0001+9\f\u0002\u0004\u0004XA\u0011\ra\u0011\t\u0004\u0001\u0016mFABBc!\t\u00071\tE\u0002A\u000b\u007f#a\u0001b\u000f\u0011\u0005\u0004\u0019\u0005c\u0001!\u0006D\u00121A\u0011\u0018\tC\u0002\r\u00032\u0001QCd\t\u0019)y\u0004\u0005b\u0001\u0007B\u0019\u0001)b3\u0005\r\u00155\u0007C1\u0001D\u0005\u0005\u0001\u0006BB9\u0011\u0001\b)\t\u000e\u0005\u0003.s\u00155\u0005B\u0002;\u0011\u0001\b))\u000e\u0005\u0003.s\u0015E\u0005bBA\n!\u0001\u000fQ\u0011\u001c\t\u0005[e*)\nC\u0004\u0002FA\u0001\u001d!\"8\u0011\t5JT\u0011\u0014\u0005\b\u0003\u007f\u0002\u00029ACq!\u0011i\u0013(\"(\t\u000f\u0005\u0005\u0007\u0003q\u0001\u0006fB!Q&OCQ\u0011\u001d\u0011Y\u0001\u0005a\u0002\u000bS\u0004B!L\u001d\u0006&\"9!Q\f\tA\u0004\u00155\b\u0003B\u0017:\u000bSCqAa.\u0011\u0001\b)\t\u0010\u0005\u0003.s\u00155\u0006bBB\r!\u0001\u000fQQ\u001f\t\u0005[e*\t\fC\u0004\u0004\u0004B\u0001\u001d!\"?\u0011\t5JTQ\u0017\u0005\b\u0007k\u0004\u00029AC\u007f!\u0011i\u0013(\"/\t\u000f\u0011=\u0004\u0003q\u0001\u0007\u0002A!Q&OC_\u0011\u001d!\t\u0010\u0005a\u0002\r\u000b\u0001B!L\u001d\u0006B\"9Q1\u0010\tA\u0004\u0019%\u0001\u0003B\u0017:\u000b\u000bDqA\"\u0004\u0011\u0001\b1y!\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\fd\u0007\u0005\u0003.s\u0015%\u0017\u0001E!c\u000fJ|W\u000f\u001d)s_\u0012,8\r^\u00198+\u00112)B\"\t\u0007&\u0019%bQ\u0006D\u0019\rk1ID\"\u0010\u0007B\u0019\u0015c\u0011\nD'\r#2)F\"\u0017\u0007^\u0019\u0005D\u0003\nD\f\rK2IG\"\u001c\u0007r\u0019Ud\u0011\u0010D?\r\u00033)I\"#\u0007\u000e\u001aEeQ\u0013DM\r;3\tK\"*\u0011\t5Jd\u0011\u0004\t&?\u0019maq\u0004D\u0012\rO1YCb\f\u00074\u0019]b1\bD \r\u000729Eb\u0013\u0007P\u0019Mcq\u000bD.\r?J1A\"\b!\u0005\u001d!V\u000f\u001d7fc]\u00022\u0001\u0011D\u0011\t\u0015\u0011\u0015C1\u0001D!\r\u0001eQ\u0005\u0003\u0006MF\u0011\ra\u0011\t\u0004\u0001\u001a%BABA\u0004#\t\u00071\tE\u0002A\r[!a!!\u000e\u0012\u0005\u0004\u0019\u0005c\u0001!\u00072\u00111\u00111N\tC\u0002\r\u00032\u0001\u0011D\u001b\t\u0019\tI+\u0005b\u0001\u0007B\u0019\u0001I\"\u000f\u0005\r\u0005=\u0018C1\u0001D!\r\u0001eQ\b\u0003\u0007\u0005{\t\"\u0019A\"\u0011\u0007\u00013\t\u0005\u0002\u0004\u0003\u0014F\u0011\ra\u0011\t\u0004\u0001\u001a\u0015CA\u0002By#\t\u00071\tE\u0002A\r\u0013\"aaa\u0016\u0012\u0005\u0004\u0019\u0005c\u0001!\u0007N\u001111QY\tC\u0002\r\u00032\u0001\u0011D)\t\u0019!Y$\u0005b\u0001\u0007B\u0019\u0001I\"\u0016\u0005\r\u0011e\u0016C1\u0001D!\r\u0001e\u0011\f\u0003\u0007\u000b\u007f\t\"\u0019A\"\u0011\u0007\u00013i\u0006\u0002\u0004\u0006NF\u0011\ra\u0011\t\u0004\u0001\u001a\u0005DA\u0002D2#\t\u00071IA\u0001R\u0011\u0019\t\u0018\u0003q\u0001\u0007hA!Q&\u000fD\u0010\u0011\u0019!\u0018\u0003q\u0001\u0007lA!Q&\u000fD\u0012\u0011\u001d\t\u0019\"\u0005a\u0002\r_\u0002B!L\u001d\u0007(!9\u0011QI\tA\u0004\u0019M\u0004\u0003B\u0017:\rWAq!a \u0012\u0001\b19\b\u0005\u0003.s\u0019=\u0002bBAa#\u0001\u000fa1\u0010\t\u0005[e2\u0019\u0004C\u0004\u0003\fE\u0001\u001dAb \u0011\t5Jdq\u0007\u0005\b\u0005;\n\u00029\u0001DB!\u0011i\u0013Hb\u000f\t\u000f\t]\u0016\u0003q\u0001\u0007\bB!Q&\u000fD \u0011\u001d\u0019I\"\u0005a\u0002\r\u0017\u0003B!L\u001d\u0007D!911Q\tA\u0004\u0019=\u0005\u0003B\u0017:\r\u000fBqa!>\u0012\u0001\b1\u0019\n\u0005\u0003.s\u0019-\u0003b\u0002C8#\u0001\u000faq\u0013\t\u0005[e2y\u0005C\u0004\u0005rF\u0001\u001dAb'\u0011\t5Jd1\u000b\u0005\b\u000bw\n\u00029\u0001DP!\u0011i\u0013Hb\u0016\t\u000f\u00195\u0011\u0003q\u0001\u0007$B!Q&\u000fD.\u0011\u001d19+\u0005a\u0002\rS\u000bAbX:ueV\u001cG/\u001e:fc]\u0002B!L\u001d\u0007`\u0005\u0001\u0012IY$s_V\u0004\bK]8ek\u000e$\u0018\u0007O\u000b'\r_3YLb0\u0007D\u001a\u001dg1\u001aDh\r'49Nb7\u0007`\u001a\rhq\u001dDv\r_4\u0019Pb>\u0007|\u001a}HC\nDY\u000f\u000799ab\u0003\b\u0010\u001dMqqCD\u000e\u000f?9\u0019cb\n\b,\u001d=r1GD\u001c\u000fw9ydb\u0011\bHA!Q&\u000fDZ!\u001dzbQ\u0017D]\r{3\tM\"2\u0007J\u001a5g\u0011\u001bDk\r34iN\"9\u0007f\u001a%hQ\u001eDy\rk4IP\"@\n\u0007\u0019]\u0006EA\u0004UkBdW-\r\u001d\u0011\u0007\u00013Y\fB\u0003C%\t\u00071\tE\u0002A\r\u007f#QA\u001a\nC\u0002\r\u00032\u0001\u0011Db\t\u0019\t9A\u0005b\u0001\u0007B\u0019\u0001Ib2\u0005\r\u0005U\"C1\u0001D!\r\u0001e1\u001a\u0003\u0007\u0003W\u0012\"\u0019A\"\u0011\u0007\u00013y\r\u0002\u0004\u0002*J\u0011\ra\u0011\t\u0004\u0001\u001aMGABAx%\t\u00071\tE\u0002A\r/$aA!\u0010\u0013\u0005\u0004\u0019\u0005c\u0001!\u0007\\\u00121!1\u0013\nC\u0002\r\u00032\u0001\u0011Dp\t\u0019\u0011\tP\u0005b\u0001\u0007B\u0019\u0001Ib9\u0005\r\r]#C1\u0001D!\r\u0001eq\u001d\u0003\u0007\u0007\u000b\u0014\"\u0019A\"\u0011\u0007\u00013Y\u000f\u0002\u0004\u0005<I\u0011\ra\u0011\t\u0004\u0001\u001a=HA\u0002C]%\t\u00071\tE\u0002A\rg$a!b\u0010\u0013\u0005\u0004\u0019\u0005c\u0001!\u0007x\u00121QQ\u001a\nC\u0002\r\u00032\u0001\u0011D~\t\u00191\u0019G\u0005b\u0001\u0007B\u0019\u0001Ib@\u0005\r\u001d\u0005!C1\u0001D\u0005\u0005\u0011\u0006BB9\u0013\u0001\b9)\u0001\u0005\u0003.s\u0019e\u0006B\u0002;\u0013\u0001\b9I\u0001\u0005\u0003.s\u0019u\u0006bBA\n%\u0001\u000fqQ\u0002\t\u0005[e2\t\rC\u0004\u0002FI\u0001\u001da\"\u0005\u0011\t5JdQ\u0019\u0005\b\u0003\u007f\u0012\u00029AD\u000b!\u0011i\u0013H\"3\t\u000f\u0005\u0005'\u0003q\u0001\b\u001aA!Q&\u000fDg\u0011\u001d\u0011YA\u0005a\u0002\u000f;\u0001B!L\u001d\u0007R\"9!Q\f\nA\u0004\u001d\u0005\u0002\u0003B\u0017:\r+DqAa.\u0013\u0001\b9)\u0003\u0005\u0003.s\u0019e\u0007bBB\r%\u0001\u000fq\u0011\u0006\t\u0005[e2i\u000eC\u0004\u0004\u0004J\u0001\u001da\"\f\u0011\t5Jd\u0011\u001d\u0005\b\u0007k\u0014\u00029AD\u0019!\u0011i\u0013H\":\t\u000f\u0011=$\u0003q\u0001\b6A!Q&\u000fDu\u0011\u001d!\tP\u0005a\u0002\u000fs\u0001B!L\u001d\u0007n\"9Q1\u0010\nA\u0004\u001du\u0002\u0003B\u0017:\rcDqA\"\u0004\u0013\u0001\b9\t\u0005\u0005\u0003.s\u0019U\bb\u0002DT%\u0001\u000fqQ\t\t\u0005[e2I\u0010C\u0004\bJI\u0001\u001dab\u0013\u0002\u0019}\u001bHO];diV\u0014X-\r\u001d\u0011\t5JdQ`\u0001\u0011\u0003\n<%o\\;q!J|G-^2uce*\u0002f\"\u0015\b^\u001d\u0005tQMD5\u000f[:\th\"\u001e\bz\u001dut\u0011QDC\u000f\u0013;ii\"%\b\u0016\u001eeuQTDQ\u000fK#\u0002fb\u0015\b*\u001e5v\u0011WD[\u000fs;il\"1\bF\u001e%wQZDi\u000f+<In\"8\bb\u001e\u0015x\u0011^Dw\u000fc\u0004B!L\u001d\bVAIsdb\u0016\b\\\u001d}s1MD4\u000fW:ygb\u001d\bx\u001dmtqPDB\u000f\u000f;Yib$\b\u0014\u001e]u1TDP\u000fGK1a\"\u0017!\u0005\u001d!V\u000f\u001d7fce\u00022\u0001QD/\t\u0015\u00115C1\u0001D!\r\u0001u\u0011\r\u0003\u0006MN\u0011\ra\u0011\t\u0004\u0001\u001e\u0015DABA\u0004'\t\u00071\tE\u0002A\u000fS\"a!!\u000e\u0014\u0005\u0004\u0019\u0005c\u0001!\bn\u00111\u00111N\nC\u0002\r\u00032\u0001QD9\t\u0019\tIk\u0005b\u0001\u0007B\u0019\u0001i\"\u001e\u0005\r\u0005=8C1\u0001D!\r\u0001u\u0011\u0010\u0003\u0007\u0005{\u0019\"\u0019A\"\u0011\u0007\u0001;i\b\u0002\u0004\u0003\u0014N\u0011\ra\u0011\t\u0004\u0001\u001e\u0005EA\u0002By'\t\u00071\tE\u0002A\u000f\u000b#aaa\u0016\u0014\u0005\u0004\u0019\u0005c\u0001!\b\n\u001211QY\nC\u0002\r\u00032\u0001QDG\t\u0019!Yd\u0005b\u0001\u0007B\u0019\u0001i\"%\u0005\r\u0011e6C1\u0001D!\r\u0001uQ\u0013\u0003\u0007\u000b\u007f\u0019\"\u0019A\"\u0011\u0007\u0001;I\n\u0002\u0004\u0006NN\u0011\ra\u0011\t\u0004\u0001\u001euEA\u0002D2'\t\u00071\tE\u0002A\u000fC#aa\"\u0001\u0014\u0005\u0004\u0019\u0005c\u0001!\b&\u00121qqU\nC\u0002\r\u0013\u0011a\u0015\u0005\u0007cN\u0001\u001dab+\u0011\t5Jt1\f\u0005\u0007iN\u0001\u001dab,\u0011\t5Jtq\f\u0005\b\u0003'\u0019\u00029ADZ!\u0011i\u0013hb\u0019\t\u000f\u0005\u00153\u0003q\u0001\b8B!Q&OD4\u0011\u001d\tyh\u0005a\u0002\u000fw\u0003B!L\u001d\bl!9\u0011\u0011Y\nA\u0004\u001d}\u0006\u0003B\u0017:\u000f_BqAa\u0003\u0014\u0001\b9\u0019\r\u0005\u0003.s\u001dM\u0004b\u0002B/'\u0001\u000fqq\u0019\t\u0005[e:9\bC\u0004\u00038N\u0001\u001dab3\u0011\t5Jt1\u0010\u0005\b\u00073\u0019\u00029ADh!\u0011i\u0013hb \t\u000f\r\r5\u0003q\u0001\bTB!Q&ODB\u0011\u001d\u0019)p\u0005a\u0002\u000f/\u0004B!L\u001d\b\b\"9AqN\nA\u0004\u001dm\u0007\u0003B\u0017:\u000f\u0017Cq\u0001\"=\u0014\u0001\b9y\u000e\u0005\u0003.s\u001d=\u0005bBC>'\u0001\u000fq1\u001d\t\u0005[e:\u0019\nC\u0004\u0007\u000eM\u0001\u001dab:\u0011\t5Jtq\u0013\u0005\b\rO\u001b\u00029ADv!\u0011i\u0013hb'\t\u000f\u001d%3\u0003q\u0001\bpB!Q&ODP\u0011\u001d9\u0019p\u0005a\u0002\u000fk\fAbX:ueV\u001cG/\u001e:fce\u0002B!L\u001d\b$\u0006\u0001\u0012IY$s_V\u0004\bK]8ek\u000e$(\u0007M\u000b+\u000fwD9\u0001c\u0003\t\u0010!M\u0001r\u0003E\u000e\u0011?A\u0019\u0003c\n\t,!=\u00022\u0007E\u001c\u0011wAy\u0004c\u0011\tH!-\u0003r\nE*)):i\u0010c\u0016\t\\!}\u00032\rE4\u0011WBy\u0007c\u001d\tx!m\u0004r\u0010EB\u0011\u000fCY\tc$\t\u0014\"]\u00052\u0014EP\u0011G\u0003B!L\u001d\b\u0000BYs\u0004#\u0001\t\u0006!%\u0001R\u0002E\t\u0011+AI\u0002#\b\t\"!\u0015\u0002\u0012\u0006E\u0017\u0011cA)\u0004#\u000f\t>!\u0005\u0003R\tE%\u0011\u001bB\t&C\u0002\t\u0004\u0001\u0012q\u0001V;qY\u0016\u0014\u0004\u0007E\u0002A\u0011\u000f!QA\u0011\u000bC\u0002\r\u00032\u0001\u0011E\u0006\t\u00151GC1\u0001D!\r\u0001\u0005r\u0002\u0003\u0007\u0003\u000f!\"\u0019A\"\u0011\u0007\u0001C\u0019\u0002\u0002\u0004\u00026Q\u0011\ra\u0011\t\u0004\u0001\"]AABA6)\t\u00071\tE\u0002A\u00117!a!!+\u0015\u0005\u0004\u0019\u0005c\u0001!\t \u00111\u0011q\u001e\u000bC\u0002\r\u00032\u0001\u0011E\u0012\t\u0019\u0011i\u0004\u0006b\u0001\u0007B\u0019\u0001\tc\n\u0005\r\tMEC1\u0001D!\r\u0001\u00052\u0006\u0003\u0007\u0005c$\"\u0019A\"\u0011\u0007\u0001Cy\u0003\u0002\u0004\u0004XQ\u0011\ra\u0011\t\u0004\u0001\"MBABBc)\t\u00071\tE\u0002A\u0011o!a\u0001b\u000f\u0015\u0005\u0004\u0019\u0005c\u0001!\t<\u00111A\u0011\u0018\u000bC\u0002\r\u00032\u0001\u0011E \t\u0019)y\u0004\u0006b\u0001\u0007B\u0019\u0001\tc\u0011\u0005\r\u00155GC1\u0001D!\r\u0001\u0005r\t\u0003\u0007\rG\"\"\u0019A\"\u0011\u0007\u0001CY\u0005\u0002\u0004\b\u0002Q\u0011\ra\u0011\t\u0004\u0001\"=CABDT)\t\u00071\tE\u0002A\u0011'\"a\u0001#\u0016\u0015\u0005\u0004\u0019%!\u0001+\t\rE$\u00029\u0001E-!\u0011i\u0013\b#\u0002\t\rQ$\u00029\u0001E/!\u0011i\u0013\b#\u0003\t\u000f\u0005MA\u0003q\u0001\tbA!Q&\u000fE\u0007\u0011\u001d\t)\u0005\u0006a\u0002\u0011K\u0002B!L\u001d\t\u0012!9\u0011q\u0010\u000bA\u0004!%\u0004\u0003B\u0017:\u0011+Aq!!1\u0015\u0001\bAi\u0007\u0005\u0003.s!e\u0001b\u0002B\u0006)\u0001\u000f\u0001\u0012\u000f\t\u0005[eBi\u0002C\u0004\u0003^Q\u0001\u001d\u0001#\u001e\u0011\t5J\u0004\u0012\u0005\u0005\b\u0005o#\u00029\u0001E=!\u0011i\u0013\b#\n\t\u000f\reA\u0003q\u0001\t~A!Q&\u000fE\u0015\u0011\u001d\u0019\u0019\t\u0006a\u0002\u0011\u0003\u0003B!L\u001d\t.!91Q\u001f\u000bA\u0004!\u0015\u0005\u0003B\u0017:\u0011cAq\u0001b\u001c\u0015\u0001\bAI\t\u0005\u0003.s!U\u0002b\u0002Cy)\u0001\u000f\u0001R\u0012\t\u0005[eBI\u0004C\u0004\u0006|Q\u0001\u001d\u0001#%\u0011\t5J\u0004R\b\u0005\b\r\u001b!\u00029\u0001EK!\u0011i\u0013\b#\u0011\t\u000f\u0019\u001dF\u0003q\u0001\t\u001aB!Q&\u000fE#\u0011\u001d9I\u0005\u0006a\u0002\u0011;\u0003B!L\u001d\tJ!9q1\u001f\u000bA\u0004!\u0005\u0006\u0003B\u0017:\u0011\u001bBq\u0001#*\u0015\u0001\bA9+\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\u0014\u0004\u0007\u0005\u0003.s!E\u0013\u0001E!c\u000fJ|W\u000f\u001d)s_\u0012,8\r\u001e\u001a2+1Bi\u000b#/\t>\"\u0005\u0007R\u0019Ee\u0011\u001bD\t\u000e#6\tZ\"u\u0007\u0012\u001dEs\u0011SDi\u000f#=\tv\"e\bR`E\u0001\u0013\u000bII\u0001\u0006\u0017\t0&5\u0011\u0012CE\u000b\u00133Ii\"#\t\n&%%\u0012RFE\u0019\u0013kII$#\u0010\nB%\u0015\u0013\u0012JE'\u0013#J)&#\u0017\n^A!Q&\u000fEY!5z\u00022\u0017E\\\u0011wCy\fc1\tH\"-\u0007r\u001aEj\u0011/DY\u000ec8\td\"\u001d\b2\u001eEx\u0011gD9\u0010c?\t\u0000&\r\u0011rA\u0005\u0004\u0011k\u0003#a\u0002+va2,''\r\t\u0004\u0001\"eF!\u0002\"\u0016\u0005\u0004\u0019\u0005c\u0001!\t>\u0012)a-\u0006b\u0001\u0007B\u0019\u0001\t#1\u0005\r\u0005\u001dQC1\u0001D!\r\u0001\u0005R\u0019\u0003\u0007\u0003k)\"\u0019A\"\u0011\u0007\u0001CI\r\u0002\u0004\u0002lU\u0011\ra\u0011\t\u0004\u0001\"5GABAU+\t\u00071\tE\u0002A\u0011#$a!a<\u0016\u0005\u0004\u0019\u0005c\u0001!\tV\u00121!QH\u000bC\u0002\r\u00032\u0001\u0011Em\t\u0019\u0011\u0019*\u0006b\u0001\u0007B\u0019\u0001\t#8\u0005\r\tEXC1\u0001D!\r\u0001\u0005\u0012\u001d\u0003\u0007\u0007/*\"\u0019A\"\u0011\u0007\u0001C)\u000f\u0002\u0004\u0004FV\u0011\ra\u0011\t\u0004\u0001\"%HA\u0002C\u001e+\t\u00071\tE\u0002A\u0011[$a\u0001\"/\u0016\u0005\u0004\u0019\u0005c\u0001!\tr\u00121QqH\u000bC\u0002\r\u00032\u0001\u0011E{\t\u0019)i-\u0006b\u0001\u0007B\u0019\u0001\t#?\u0005\r\u0019\rTC1\u0001D!\r\u0001\u0005R \u0003\u0007\u000f\u0003)\"\u0019A\"\u0011\u0007\u0001K\t\u0001\u0002\u0004\b(V\u0011\ra\u0011\t\u0004\u0001&\u0015AA\u0002E++\t\u00071\tE\u0002A\u0013\u0013!a!c\u0003\u0016\u0005\u0004\u0019%!A+\t\rE,\u00029AE\b!\u0011i\u0013\bc.\t\rQ,\u00029AE\n!\u0011i\u0013\bc/\t\u000f\u0005MQ\u0003q\u0001\n\u0018A!Q&\u000fE`\u0011\u001d\t)%\u0006a\u0002\u00137\u0001B!L\u001d\tD\"9\u0011qP\u000bA\u0004%}\u0001\u0003B\u0017:\u0011\u000fDq!!1\u0016\u0001\bI\u0019\u0003\u0005\u0003.s!-\u0007b\u0002B\u0006+\u0001\u000f\u0011r\u0005\t\u0005[eBy\rC\u0004\u0003^U\u0001\u001d!c\u000b\u0011\t5J\u00042\u001b\u0005\b\u0005o+\u00029AE\u0018!\u0011i\u0013\bc6\t\u000f\reQ\u0003q\u0001\n4A!Q&\u000fEn\u0011\u001d\u0019\u0019)\u0006a\u0002\u0013o\u0001B!L\u001d\t`\"91Q_\u000bA\u0004%m\u0002\u0003B\u0017:\u0011GDq\u0001b\u001c\u0016\u0001\bIy\u0004\u0005\u0003.s!\u001d\bb\u0002Cy+\u0001\u000f\u00112\t\t\u0005[eBY\u000fC\u0004\u0006|U\u0001\u001d!c\u0012\u0011\t5J\u0004r\u001e\u0005\b\r\u001b)\u00029AE&!\u0011i\u0013\bc=\t\u000f\u0019\u001dV\u0003q\u0001\nPA!Q&\u000fE|\u0011\u001d9I%\u0006a\u0002\u0013'\u0002B!L\u001d\t|\"9q1_\u000bA\u0004%]\u0003\u0003B\u0017:\u0011\u007fDq\u0001#*\u0016\u0001\bIY\u0006\u0005\u0003.s%\r\u0001bBE0+\u0001\u000f\u0011\u0012M\u0001\r?N$(/^2ukJ,''\r\t\u0005[eJ9!\u0001\tBE\u001e\u0013x.\u001e9Qe>$Wo\u0019;3eUq\u0013rME:\u0013oJY(c \n\u0004&\u001d\u00152REH\u0013'K9*c'\n &\r\u0016rUEV\u0013_K\u0019,c.\n<&}\u00162YEd)9JI'c3\nP&M\u0017r[En\u0013?L\u0019/c:\nl&=\u00182_E|\u0013wLyPc\u0001\u000b\b)-!r\u0002F\n\u0015/QYBc\b\u0011\t5J\u00142\u000e\t0?%5\u0014\u0012OE;\u0013sJi(#!\n\u0006&%\u0015RREI\u0013+KI*#(\n\"&\u0015\u0016\u0012VEW\u0013cK),#/\n>&\u0005\u0017RY\u0005\u0004\u0013_\u0002#a\u0002+va2,'G\r\t\u0004\u0001&MD!\u0002\"\u0017\u0005\u0004\u0019\u0005c\u0001!\nx\u0011)aM\u0006b\u0001\u0007B\u0019\u0001)c\u001f\u0005\r\u0005\u001daC1\u0001D!\r\u0001\u0015r\u0010\u0003\u0007\u0003k1\"\u0019A\"\u0011\u0007\u0001K\u0019\t\u0002\u0004\u0002lY\u0011\ra\u0011\t\u0004\u0001&\u001dEABAU-\t\u00071\tE\u0002A\u0013\u0017#a!a<\u0017\u0005\u0004\u0019\u0005c\u0001!\n\u0010\u00121!Q\b\fC\u0002\r\u00032\u0001QEJ\t\u0019\u0011\u0019J\u0006b\u0001\u0007B\u0019\u0001)c&\u0005\r\tEhC1\u0001D!\r\u0001\u00152\u0014\u0003\u0007\u0007/2\"\u0019A\"\u0011\u0007\u0001Ky\n\u0002\u0004\u0004FZ\u0011\ra\u0011\t\u0004\u0001&\rFA\u0002C\u001e-\t\u00071\tE\u0002A\u0013O#a\u0001\"/\u0017\u0005\u0004\u0019\u0005c\u0001!\n,\u00121Qq\b\fC\u0002\r\u00032\u0001QEX\t\u0019)iM\u0006b\u0001\u0007B\u0019\u0001)c-\u0005\r\u0019\rdC1\u0001D!\r\u0001\u0015r\u0017\u0003\u0007\u000f\u00031\"\u0019A\"\u0011\u0007\u0001KY\f\u0002\u0004\b(Z\u0011\ra\u0011\t\u0004\u0001&}FA\u0002E+-\t\u00071\tE\u0002A\u0013\u0007$a!c\u0003\u0017\u0005\u0004\u0019\u0005c\u0001!\nH\u00121\u0011\u0012\u001a\fC\u0002\r\u0013\u0011A\u0016\u0005\u0007cZ\u0001\u001d!#4\u0011\t5J\u0014\u0012\u000f\u0005\u0007iZ\u0001\u001d!#5\u0011\t5J\u0014R\u000f\u0005\b\u0003'1\u00029AEk!\u0011i\u0013(#\u001f\t\u000f\u0005\u0015c\u0003q\u0001\nZB!Q&OE?\u0011\u001d\tyH\u0006a\u0002\u0013;\u0004B!L\u001d\n\u0002\"9\u0011\u0011\u0019\fA\u0004%\u0005\b\u0003B\u0017:\u0013\u000bCqAa\u0003\u0017\u0001\bI)\u000f\u0005\u0003.s%%\u0005b\u0002B/-\u0001\u000f\u0011\u0012\u001e\t\u0005[eJi\tC\u0004\u00038Z\u0001\u001d!#<\u0011\t5J\u0014\u0012\u0013\u0005\b\u000731\u00029AEy!\u0011i\u0013(#&\t\u000f\r\re\u0003q\u0001\nvB!Q&OEM\u0011\u001d\u0019)P\u0006a\u0002\u0013s\u0004B!L\u001d\n\u001e\"9Aq\u000e\fA\u0004%u\b\u0003B\u0017:\u0013CCq\u0001\"=\u0017\u0001\bQ\t\u0001\u0005\u0003.s%\u0015\u0006bBC>-\u0001\u000f!R\u0001\t\u0005[eJI\u000bC\u0004\u0007\u000eY\u0001\u001dA#\u0003\u0011\t5J\u0014R\u0016\u0005\b\rO3\u00029\u0001F\u0007!\u0011i\u0013(#-\t\u000f\u001d%c\u0003q\u0001\u000b\u0012A!Q&OE[\u0011\u001d9\u0019P\u0006a\u0002\u0015+\u0001B!L\u001d\n:\"9\u0001R\u0015\fA\u0004)e\u0001\u0003B\u0017:\u0013{Cq!c\u0018\u0017\u0001\bQi\u0002\u0005\u0003.s%\u0005\u0007b\u0002F\u0011-\u0001\u000f!2E\u0001\r?N$(/^2ukJ,'G\r\t\u0005[eJ)\r"
)
public interface AbGroupProductInstances {
   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2.inverse$(this, x0);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2.empty$(this);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$112;
            this.structure2 = _structure2$112;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct3$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3) {
      return $this.AbGroupProduct3(_structure1, _structure2, _structure3);
   }

   default CommutativeGroup AbGroupProduct3(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3) {
      return new AbGroupProduct3(_structure1, _structure2, _structure3) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;

         public Tuple3 inverse(final Tuple3 x0) {
            return GroupProduct3.inverse$(this, x0);
         }

         public Tuple3 empty() {
            return MonoidProduct3.empty$(this);
         }

         public Tuple3 combine(final Tuple3 x0, final Tuple3 x1) {
            return SemigroupProduct3.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct3.$init$(this);
            MonoidProduct3.$init$(this);
            GroupProduct3.$init$(this);
            this.structure1 = _structure1$113;
            this.structure2 = _structure2$113;
            this.structure3 = _structure3$61;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct4$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4) {
      return $this.AbGroupProduct4(_structure1, _structure2, _structure3, _structure4);
   }

   default CommutativeGroup AbGroupProduct4(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4) {
      return new AbGroupProduct4(_structure1, _structure2, _structure3, _structure4) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;

         public Tuple4 inverse(final Tuple4 x0) {
            return GroupProduct4.inverse$(this, x0);
         }

         public Tuple4 empty() {
            return MonoidProduct4.empty$(this);
         }

         public Tuple4 combine(final Tuple4 x0, final Tuple4 x1) {
            return SemigroupProduct4.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct4.$init$(this);
            MonoidProduct4.$init$(this);
            GroupProduct4.$init$(this);
            this.structure1 = _structure1$114;
            this.structure2 = _structure2$114;
            this.structure3 = _structure3$62;
            this.structure4 = _structure4$58;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct5$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5) {
      return $this.AbGroupProduct5(_structure1, _structure2, _structure3, _structure4, _structure5);
   }

   default CommutativeGroup AbGroupProduct5(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5) {
      return new AbGroupProduct5(_structure1, _structure2, _structure3, _structure4, _structure5) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;

         public Tuple5 inverse(final Tuple5 x0) {
            return GroupProduct5.inverse$(this, x0);
         }

         public Tuple5 empty() {
            return MonoidProduct5.empty$(this);
         }

         public Tuple5 combine(final Tuple5 x0, final Tuple5 x1) {
            return SemigroupProduct5.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct5.$init$(this);
            MonoidProduct5.$init$(this);
            GroupProduct5.$init$(this);
            this.structure1 = _structure1$115;
            this.structure2 = _structure2$115;
            this.structure3 = _structure3$63;
            this.structure4 = _structure4$59;
            this.structure5 = _structure5$55;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct6$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6) {
      return $this.AbGroupProduct6(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6);
   }

   default CommutativeGroup AbGroupProduct6(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6) {
      return new AbGroupProduct6(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;

         public Tuple6 inverse(final Tuple6 x0) {
            return GroupProduct6.inverse$(this, x0);
         }

         public Tuple6 empty() {
            return MonoidProduct6.empty$(this);
         }

         public Tuple6 combine(final Tuple6 x0, final Tuple6 x1) {
            return SemigroupProduct6.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct6.$init$(this);
            MonoidProduct6.$init$(this);
            GroupProduct6.$init$(this);
            this.structure1 = _structure1$116;
            this.structure2 = _structure2$116;
            this.structure3 = _structure3$64;
            this.structure4 = _structure4$60;
            this.structure5 = _structure5$56;
            this.structure6 = _structure6$52;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct7$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7) {
      return $this.AbGroupProduct7(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7);
   }

   default CommutativeGroup AbGroupProduct7(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7) {
      return new AbGroupProduct7(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;

         public Tuple7 inverse(final Tuple7 x0) {
            return GroupProduct7.inverse$(this, x0);
         }

         public Tuple7 empty() {
            return MonoidProduct7.empty$(this);
         }

         public Tuple7 combine(final Tuple7 x0, final Tuple7 x1) {
            return SemigroupProduct7.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct7.$init$(this);
            MonoidProduct7.$init$(this);
            GroupProduct7.$init$(this);
            this.structure1 = _structure1$117;
            this.structure2 = _structure2$117;
            this.structure3 = _structure3$65;
            this.structure4 = _structure4$61;
            this.structure5 = _structure5$57;
            this.structure6 = _structure6$53;
            this.structure7 = _structure7$49;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct8$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8) {
      return $this.AbGroupProduct8(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8);
   }

   default CommutativeGroup AbGroupProduct8(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8) {
      return new AbGroupProduct8(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;

         public Tuple8 inverse(final Tuple8 x0) {
            return GroupProduct8.inverse$(this, x0);
         }

         public Tuple8 empty() {
            return MonoidProduct8.empty$(this);
         }

         public Tuple8 combine(final Tuple8 x0, final Tuple8 x1) {
            return SemigroupProduct8.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct8.$init$(this);
            MonoidProduct8.$init$(this);
            GroupProduct8.$init$(this);
            this.structure1 = _structure1$118;
            this.structure2 = _structure2$118;
            this.structure3 = _structure3$66;
            this.structure4 = _structure4$62;
            this.structure5 = _structure5$58;
            this.structure6 = _structure6$54;
            this.structure7 = _structure7$50;
            this.structure8 = _structure8$46;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct9$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9) {
      return $this.AbGroupProduct9(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9);
   }

   default CommutativeGroup AbGroupProduct9(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9) {
      return new AbGroupProduct9(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;

         public Tuple9 inverse(final Tuple9 x0) {
            return GroupProduct9.inverse$(this, x0);
         }

         public Tuple9 empty() {
            return MonoidProduct9.empty$(this);
         }

         public Tuple9 combine(final Tuple9 x0, final Tuple9 x1) {
            return SemigroupProduct9.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct9.$init$(this);
            MonoidProduct9.$init$(this);
            GroupProduct9.$init$(this);
            this.structure1 = _structure1$119;
            this.structure2 = _structure2$119;
            this.structure3 = _structure3$67;
            this.structure4 = _structure4$63;
            this.structure5 = _structure5$59;
            this.structure6 = _structure6$55;
            this.structure7 = _structure7$51;
            this.structure8 = _structure8$47;
            this.structure9 = _structure9$43;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct10$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10) {
      return $this.AbGroupProduct10(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10);
   }

   default CommutativeGroup AbGroupProduct10(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10) {
      return new AbGroupProduct10(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;

         public Tuple10 inverse(final Tuple10 x0) {
            return GroupProduct10.inverse$(this, x0);
         }

         public Tuple10 empty() {
            return MonoidProduct10.empty$(this);
         }

         public Tuple10 combine(final Tuple10 x0, final Tuple10 x1) {
            return SemigroupProduct10.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct10.$init$(this);
            MonoidProduct10.$init$(this);
            GroupProduct10.$init$(this);
            this.structure1 = _structure1$120;
            this.structure2 = _structure2$120;
            this.structure3 = _structure3$68;
            this.structure4 = _structure4$64;
            this.structure5 = _structure5$60;
            this.structure6 = _structure6$56;
            this.structure7 = _structure7$52;
            this.structure8 = _structure8$48;
            this.structure9 = _structure9$44;
            this.structure10 = _structure10$40;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct11$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11) {
      return $this.AbGroupProduct11(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11);
   }

   default CommutativeGroup AbGroupProduct11(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11) {
      return new AbGroupProduct11(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;
         private final CommutativeGroup structure11;

         public Tuple11 inverse(final Tuple11 x0) {
            return GroupProduct11.inverse$(this, x0);
         }

         public Tuple11 empty() {
            return MonoidProduct11.empty$(this);
         }

         public Tuple11 combine(final Tuple11 x0, final Tuple11 x1) {
            return SemigroupProduct11.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public CommutativeGroup structure11() {
            return this.structure11;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct11.$init$(this);
            MonoidProduct11.$init$(this);
            GroupProduct11.$init$(this);
            this.structure1 = _structure1$121;
            this.structure2 = _structure2$121;
            this.structure3 = _structure3$69;
            this.structure4 = _structure4$65;
            this.structure5 = _structure5$61;
            this.structure6 = _structure6$57;
            this.structure7 = _structure7$53;
            this.structure8 = _structure8$49;
            this.structure9 = _structure9$45;
            this.structure10 = _structure10$41;
            this.structure11 = _structure11$37;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct12$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12) {
      return $this.AbGroupProduct12(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12);
   }

   default CommutativeGroup AbGroupProduct12(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12) {
      return new AbGroupProduct12(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;
         private final CommutativeGroup structure11;
         private final CommutativeGroup structure12;

         public Tuple12 inverse(final Tuple12 x0) {
            return GroupProduct12.inverse$(this, x0);
         }

         public Tuple12 empty() {
            return MonoidProduct12.empty$(this);
         }

         public Tuple12 combine(final Tuple12 x0, final Tuple12 x1) {
            return SemigroupProduct12.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public CommutativeGroup structure11() {
            return this.structure11;
         }

         public CommutativeGroup structure12() {
            return this.structure12;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct12.$init$(this);
            MonoidProduct12.$init$(this);
            GroupProduct12.$init$(this);
            this.structure1 = _structure1$122;
            this.structure2 = _structure2$122;
            this.structure3 = _structure3$70;
            this.structure4 = _structure4$66;
            this.structure5 = _structure5$62;
            this.structure6 = _structure6$58;
            this.structure7 = _structure7$54;
            this.structure8 = _structure8$50;
            this.structure9 = _structure9$46;
            this.structure10 = _structure10$42;
            this.structure11 = _structure11$38;
            this.structure12 = _structure12$34;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct13$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13) {
      return $this.AbGroupProduct13(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13);
   }

   default CommutativeGroup AbGroupProduct13(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13) {
      return new AbGroupProduct13(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;
         private final CommutativeGroup structure11;
         private final CommutativeGroup structure12;
         private final CommutativeGroup structure13;

         public Tuple13 inverse(final Tuple13 x0) {
            return GroupProduct13.inverse$(this, x0);
         }

         public Tuple13 empty() {
            return MonoidProduct13.empty$(this);
         }

         public Tuple13 combine(final Tuple13 x0, final Tuple13 x1) {
            return SemigroupProduct13.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public CommutativeGroup structure11() {
            return this.structure11;
         }

         public CommutativeGroup structure12() {
            return this.structure12;
         }

         public CommutativeGroup structure13() {
            return this.structure13;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct13.$init$(this);
            MonoidProduct13.$init$(this);
            GroupProduct13.$init$(this);
            this.structure1 = _structure1$123;
            this.structure2 = _structure2$123;
            this.structure3 = _structure3$71;
            this.structure4 = _structure4$67;
            this.structure5 = _structure5$63;
            this.structure6 = _structure6$59;
            this.structure7 = _structure7$55;
            this.structure8 = _structure8$51;
            this.structure9 = _structure9$47;
            this.structure10 = _structure10$43;
            this.structure11 = _structure11$39;
            this.structure12 = _structure12$35;
            this.structure13 = _structure13$31;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct14$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14) {
      return $this.AbGroupProduct14(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14);
   }

   default CommutativeGroup AbGroupProduct14(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14) {
      return new AbGroupProduct14(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;
         private final CommutativeGroup structure11;
         private final CommutativeGroup structure12;
         private final CommutativeGroup structure13;
         private final CommutativeGroup structure14;

         public Tuple14 inverse(final Tuple14 x0) {
            return GroupProduct14.inverse$(this, x0);
         }

         public Tuple14 empty() {
            return MonoidProduct14.empty$(this);
         }

         public Tuple14 combine(final Tuple14 x0, final Tuple14 x1) {
            return SemigroupProduct14.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public CommutativeGroup structure11() {
            return this.structure11;
         }

         public CommutativeGroup structure12() {
            return this.structure12;
         }

         public CommutativeGroup structure13() {
            return this.structure13;
         }

         public CommutativeGroup structure14() {
            return this.structure14;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct14.$init$(this);
            MonoidProduct14.$init$(this);
            GroupProduct14.$init$(this);
            this.structure1 = _structure1$124;
            this.structure2 = _structure2$124;
            this.structure3 = _structure3$72;
            this.structure4 = _structure4$68;
            this.structure5 = _structure5$64;
            this.structure6 = _structure6$60;
            this.structure7 = _structure7$56;
            this.structure8 = _structure8$52;
            this.structure9 = _structure9$48;
            this.structure10 = _structure10$44;
            this.structure11 = _structure11$40;
            this.structure12 = _structure12$36;
            this.structure13 = _structure13$32;
            this.structure14 = _structure14$28;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct15$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15) {
      return $this.AbGroupProduct15(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15);
   }

   default CommutativeGroup AbGroupProduct15(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15) {
      return new AbGroupProduct15(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;
         private final CommutativeGroup structure11;
         private final CommutativeGroup structure12;
         private final CommutativeGroup structure13;
         private final CommutativeGroup structure14;
         private final CommutativeGroup structure15;

         public Tuple15 inverse(final Tuple15 x0) {
            return GroupProduct15.inverse$(this, x0);
         }

         public Tuple15 empty() {
            return MonoidProduct15.empty$(this);
         }

         public Tuple15 combine(final Tuple15 x0, final Tuple15 x1) {
            return SemigroupProduct15.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public CommutativeGroup structure11() {
            return this.structure11;
         }

         public CommutativeGroup structure12() {
            return this.structure12;
         }

         public CommutativeGroup structure13() {
            return this.structure13;
         }

         public CommutativeGroup structure14() {
            return this.structure14;
         }

         public CommutativeGroup structure15() {
            return this.structure15;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct15.$init$(this);
            MonoidProduct15.$init$(this);
            GroupProduct15.$init$(this);
            this.structure1 = _structure1$125;
            this.structure2 = _structure2$125;
            this.structure3 = _structure3$73;
            this.structure4 = _structure4$69;
            this.structure5 = _structure5$65;
            this.structure6 = _structure6$61;
            this.structure7 = _structure7$57;
            this.structure8 = _structure8$53;
            this.structure9 = _structure9$49;
            this.structure10 = _structure10$45;
            this.structure11 = _structure11$41;
            this.structure12 = _structure12$37;
            this.structure13 = _structure13$33;
            this.structure14 = _structure14$29;
            this.structure15 = _structure15$25;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct16$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16) {
      return $this.AbGroupProduct16(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16);
   }

   default CommutativeGroup AbGroupProduct16(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16) {
      return new AbGroupProduct16(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;
         private final CommutativeGroup structure11;
         private final CommutativeGroup structure12;
         private final CommutativeGroup structure13;
         private final CommutativeGroup structure14;
         private final CommutativeGroup structure15;
         private final CommutativeGroup structure16;

         public Tuple16 inverse(final Tuple16 x0) {
            return GroupProduct16.inverse$(this, x0);
         }

         public Tuple16 empty() {
            return MonoidProduct16.empty$(this);
         }

         public Tuple16 combine(final Tuple16 x0, final Tuple16 x1) {
            return SemigroupProduct16.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public CommutativeGroup structure11() {
            return this.structure11;
         }

         public CommutativeGroup structure12() {
            return this.structure12;
         }

         public CommutativeGroup structure13() {
            return this.structure13;
         }

         public CommutativeGroup structure14() {
            return this.structure14;
         }

         public CommutativeGroup structure15() {
            return this.structure15;
         }

         public CommutativeGroup structure16() {
            return this.structure16;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct16.$init$(this);
            MonoidProduct16.$init$(this);
            GroupProduct16.$init$(this);
            this.structure1 = _structure1$126;
            this.structure2 = _structure2$126;
            this.structure3 = _structure3$74;
            this.structure4 = _structure4$70;
            this.structure5 = _structure5$66;
            this.structure6 = _structure6$62;
            this.structure7 = _structure7$58;
            this.structure8 = _structure8$54;
            this.structure9 = _structure9$50;
            this.structure10 = _structure10$46;
            this.structure11 = _structure11$42;
            this.structure12 = _structure12$38;
            this.structure13 = _structure13$34;
            this.structure14 = _structure14$30;
            this.structure15 = _structure15$26;
            this.structure16 = _structure16$22;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct17$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16, final CommutativeGroup _structure17) {
      return $this.AbGroupProduct17(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17);
   }

   default CommutativeGroup AbGroupProduct17(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16, final CommutativeGroup _structure17) {
      return new AbGroupProduct17(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;
         private final CommutativeGroup structure11;
         private final CommutativeGroup structure12;
         private final CommutativeGroup structure13;
         private final CommutativeGroup structure14;
         private final CommutativeGroup structure15;
         private final CommutativeGroup structure16;
         private final CommutativeGroup structure17;

         public Tuple17 inverse(final Tuple17 x0) {
            return GroupProduct17.inverse$(this, x0);
         }

         public Tuple17 empty() {
            return MonoidProduct17.empty$(this);
         }

         public Tuple17 combine(final Tuple17 x0, final Tuple17 x1) {
            return SemigroupProduct17.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public CommutativeGroup structure11() {
            return this.structure11;
         }

         public CommutativeGroup structure12() {
            return this.structure12;
         }

         public CommutativeGroup structure13() {
            return this.structure13;
         }

         public CommutativeGroup structure14() {
            return this.structure14;
         }

         public CommutativeGroup structure15() {
            return this.structure15;
         }

         public CommutativeGroup structure16() {
            return this.structure16;
         }

         public CommutativeGroup structure17() {
            return this.structure17;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct17.$init$(this);
            MonoidProduct17.$init$(this);
            GroupProduct17.$init$(this);
            this.structure1 = _structure1$127;
            this.structure2 = _structure2$127;
            this.structure3 = _structure3$75;
            this.structure4 = _structure4$71;
            this.structure5 = _structure5$67;
            this.structure6 = _structure6$63;
            this.structure7 = _structure7$59;
            this.structure8 = _structure8$55;
            this.structure9 = _structure9$51;
            this.structure10 = _structure10$47;
            this.structure11 = _structure11$43;
            this.structure12 = _structure12$39;
            this.structure13 = _structure13$35;
            this.structure14 = _structure14$31;
            this.structure15 = _structure15$27;
            this.structure16 = _structure16$23;
            this.structure17 = _structure17$19;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct18$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16, final CommutativeGroup _structure17, final CommutativeGroup _structure18) {
      return $this.AbGroupProduct18(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18);
   }

   default CommutativeGroup AbGroupProduct18(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16, final CommutativeGroup _structure17, final CommutativeGroup _structure18) {
      return new AbGroupProduct18(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;
         private final CommutativeGroup structure11;
         private final CommutativeGroup structure12;
         private final CommutativeGroup structure13;
         private final CommutativeGroup structure14;
         private final CommutativeGroup structure15;
         private final CommutativeGroup structure16;
         private final CommutativeGroup structure17;
         private final CommutativeGroup structure18;

         public Tuple18 inverse(final Tuple18 x0) {
            return GroupProduct18.inverse$(this, x0);
         }

         public Tuple18 empty() {
            return MonoidProduct18.empty$(this);
         }

         public Tuple18 combine(final Tuple18 x0, final Tuple18 x1) {
            return SemigroupProduct18.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public CommutativeGroup structure11() {
            return this.structure11;
         }

         public CommutativeGroup structure12() {
            return this.structure12;
         }

         public CommutativeGroup structure13() {
            return this.structure13;
         }

         public CommutativeGroup structure14() {
            return this.structure14;
         }

         public CommutativeGroup structure15() {
            return this.structure15;
         }

         public CommutativeGroup structure16() {
            return this.structure16;
         }

         public CommutativeGroup structure17() {
            return this.structure17;
         }

         public CommutativeGroup structure18() {
            return this.structure18;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct18.$init$(this);
            MonoidProduct18.$init$(this);
            GroupProduct18.$init$(this);
            this.structure1 = _structure1$128;
            this.structure2 = _structure2$128;
            this.structure3 = _structure3$76;
            this.structure4 = _structure4$72;
            this.structure5 = _structure5$68;
            this.structure6 = _structure6$64;
            this.structure7 = _structure7$60;
            this.structure8 = _structure8$56;
            this.structure9 = _structure9$52;
            this.structure10 = _structure10$48;
            this.structure11 = _structure11$44;
            this.structure12 = _structure12$40;
            this.structure13 = _structure13$36;
            this.structure14 = _structure14$32;
            this.structure15 = _structure15$28;
            this.structure16 = _structure16$24;
            this.structure17 = _structure17$20;
            this.structure18 = _structure18$16;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct19$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16, final CommutativeGroup _structure17, final CommutativeGroup _structure18, final CommutativeGroup _structure19) {
      return $this.AbGroupProduct19(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19);
   }

   default CommutativeGroup AbGroupProduct19(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16, final CommutativeGroup _structure17, final CommutativeGroup _structure18, final CommutativeGroup _structure19) {
      return new AbGroupProduct19(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;
         private final CommutativeGroup structure11;
         private final CommutativeGroup structure12;
         private final CommutativeGroup structure13;
         private final CommutativeGroup structure14;
         private final CommutativeGroup structure15;
         private final CommutativeGroup structure16;
         private final CommutativeGroup structure17;
         private final CommutativeGroup structure18;
         private final CommutativeGroup structure19;

         public Tuple19 inverse(final Tuple19 x0) {
            return GroupProduct19.inverse$(this, x0);
         }

         public Tuple19 empty() {
            return MonoidProduct19.empty$(this);
         }

         public Tuple19 combine(final Tuple19 x0, final Tuple19 x1) {
            return SemigroupProduct19.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public CommutativeGroup structure11() {
            return this.structure11;
         }

         public CommutativeGroup structure12() {
            return this.structure12;
         }

         public CommutativeGroup structure13() {
            return this.structure13;
         }

         public CommutativeGroup structure14() {
            return this.structure14;
         }

         public CommutativeGroup structure15() {
            return this.structure15;
         }

         public CommutativeGroup structure16() {
            return this.structure16;
         }

         public CommutativeGroup structure17() {
            return this.structure17;
         }

         public CommutativeGroup structure18() {
            return this.structure18;
         }

         public CommutativeGroup structure19() {
            return this.structure19;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct19.$init$(this);
            MonoidProduct19.$init$(this);
            GroupProduct19.$init$(this);
            this.structure1 = _structure1$129;
            this.structure2 = _structure2$129;
            this.structure3 = _structure3$77;
            this.structure4 = _structure4$73;
            this.structure5 = _structure5$69;
            this.structure6 = _structure6$65;
            this.structure7 = _structure7$61;
            this.structure8 = _structure8$57;
            this.structure9 = _structure9$53;
            this.structure10 = _structure10$49;
            this.structure11 = _structure11$45;
            this.structure12 = _structure12$41;
            this.structure13 = _structure13$37;
            this.structure14 = _structure14$33;
            this.structure15 = _structure15$29;
            this.structure16 = _structure16$25;
            this.structure17 = _structure17$21;
            this.structure18 = _structure18$17;
            this.structure19 = _structure19$13;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct20$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16, final CommutativeGroup _structure17, final CommutativeGroup _structure18, final CommutativeGroup _structure19, final CommutativeGroup _structure20) {
      return $this.AbGroupProduct20(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20);
   }

   default CommutativeGroup AbGroupProduct20(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16, final CommutativeGroup _structure17, final CommutativeGroup _structure18, final CommutativeGroup _structure19, final CommutativeGroup _structure20) {
      return new AbGroupProduct20(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;
         private final CommutativeGroup structure11;
         private final CommutativeGroup structure12;
         private final CommutativeGroup structure13;
         private final CommutativeGroup structure14;
         private final CommutativeGroup structure15;
         private final CommutativeGroup structure16;
         private final CommutativeGroup structure17;
         private final CommutativeGroup structure18;
         private final CommutativeGroup structure19;
         private final CommutativeGroup structure20;

         public Tuple20 inverse(final Tuple20 x0) {
            return GroupProduct20.inverse$(this, x0);
         }

         public Tuple20 empty() {
            return MonoidProduct20.empty$(this);
         }

         public Tuple20 combine(final Tuple20 x0, final Tuple20 x1) {
            return SemigroupProduct20.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public CommutativeGroup structure11() {
            return this.structure11;
         }

         public CommutativeGroup structure12() {
            return this.structure12;
         }

         public CommutativeGroup structure13() {
            return this.structure13;
         }

         public CommutativeGroup structure14() {
            return this.structure14;
         }

         public CommutativeGroup structure15() {
            return this.structure15;
         }

         public CommutativeGroup structure16() {
            return this.structure16;
         }

         public CommutativeGroup structure17() {
            return this.structure17;
         }

         public CommutativeGroup structure18() {
            return this.structure18;
         }

         public CommutativeGroup structure19() {
            return this.structure19;
         }

         public CommutativeGroup structure20() {
            return this.structure20;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct20.$init$(this);
            MonoidProduct20.$init$(this);
            GroupProduct20.$init$(this);
            this.structure1 = _structure1$130;
            this.structure2 = _structure2$130;
            this.structure3 = _structure3$78;
            this.structure4 = _structure4$74;
            this.structure5 = _structure5$70;
            this.structure6 = _structure6$66;
            this.structure7 = _structure7$62;
            this.structure8 = _structure8$58;
            this.structure9 = _structure9$54;
            this.structure10 = _structure10$50;
            this.structure11 = _structure11$46;
            this.structure12 = _structure12$42;
            this.structure13 = _structure13$38;
            this.structure14 = _structure14$34;
            this.structure15 = _structure15$30;
            this.structure16 = _structure16$26;
            this.structure17 = _structure17$22;
            this.structure18 = _structure18$18;
            this.structure19 = _structure19$14;
            this.structure20 = _structure20$10;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct21$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16, final CommutativeGroup _structure17, final CommutativeGroup _structure18, final CommutativeGroup _structure19, final CommutativeGroup _structure20, final CommutativeGroup _structure21) {
      return $this.AbGroupProduct21(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21);
   }

   default CommutativeGroup AbGroupProduct21(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16, final CommutativeGroup _structure17, final CommutativeGroup _structure18, final CommutativeGroup _structure19, final CommutativeGroup _structure20, final CommutativeGroup _structure21) {
      return new AbGroupProduct21(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;
         private final CommutativeGroup structure11;
         private final CommutativeGroup structure12;
         private final CommutativeGroup structure13;
         private final CommutativeGroup structure14;
         private final CommutativeGroup structure15;
         private final CommutativeGroup structure16;
         private final CommutativeGroup structure17;
         private final CommutativeGroup structure18;
         private final CommutativeGroup structure19;
         private final CommutativeGroup structure20;
         private final CommutativeGroup structure21;

         public Tuple21 inverse(final Tuple21 x0) {
            return GroupProduct21.inverse$(this, x0);
         }

         public Tuple21 empty() {
            return MonoidProduct21.empty$(this);
         }

         public Tuple21 combine(final Tuple21 x0, final Tuple21 x1) {
            return SemigroupProduct21.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public CommutativeGroup structure11() {
            return this.structure11;
         }

         public CommutativeGroup structure12() {
            return this.structure12;
         }

         public CommutativeGroup structure13() {
            return this.structure13;
         }

         public CommutativeGroup structure14() {
            return this.structure14;
         }

         public CommutativeGroup structure15() {
            return this.structure15;
         }

         public CommutativeGroup structure16() {
            return this.structure16;
         }

         public CommutativeGroup structure17() {
            return this.structure17;
         }

         public CommutativeGroup structure18() {
            return this.structure18;
         }

         public CommutativeGroup structure19() {
            return this.structure19;
         }

         public CommutativeGroup structure20() {
            return this.structure20;
         }

         public CommutativeGroup structure21() {
            return this.structure21;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct21.$init$(this);
            MonoidProduct21.$init$(this);
            GroupProduct21.$init$(this);
            this.structure1 = _structure1$131;
            this.structure2 = _structure2$131;
            this.structure3 = _structure3$79;
            this.structure4 = _structure4$75;
            this.structure5 = _structure5$71;
            this.structure6 = _structure6$67;
            this.structure7 = _structure7$63;
            this.structure8 = _structure8$59;
            this.structure9 = _structure9$55;
            this.structure10 = _structure10$51;
            this.structure11 = _structure11$47;
            this.structure12 = _structure12$43;
            this.structure13 = _structure13$39;
            this.structure14 = _structure14$35;
            this.structure15 = _structure15$31;
            this.structure16 = _structure16$27;
            this.structure17 = _structure17$23;
            this.structure18 = _structure18$19;
            this.structure19 = _structure19$15;
            this.structure20 = _structure20$11;
            this.structure21 = _structure21$7;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct22$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16, final CommutativeGroup _structure17, final CommutativeGroup _structure18, final CommutativeGroup _structure19, final CommutativeGroup _structure20, final CommutativeGroup _structure21, final CommutativeGroup _structure22) {
      return $this.AbGroupProduct22(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21, _structure22);
   }

   default CommutativeGroup AbGroupProduct22(final CommutativeGroup _structure1, final CommutativeGroup _structure2, final CommutativeGroup _structure3, final CommutativeGroup _structure4, final CommutativeGroup _structure5, final CommutativeGroup _structure6, final CommutativeGroup _structure7, final CommutativeGroup _structure8, final CommutativeGroup _structure9, final CommutativeGroup _structure10, final CommutativeGroup _structure11, final CommutativeGroup _structure12, final CommutativeGroup _structure13, final CommutativeGroup _structure14, final CommutativeGroup _structure15, final CommutativeGroup _structure16, final CommutativeGroup _structure17, final CommutativeGroup _structure18, final CommutativeGroup _structure19, final CommutativeGroup _structure20, final CommutativeGroup _structure21, final CommutativeGroup _structure22) {
      return new AbGroupProduct22(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21, _structure22) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;
         private final CommutativeGroup structure3;
         private final CommutativeGroup structure4;
         private final CommutativeGroup structure5;
         private final CommutativeGroup structure6;
         private final CommutativeGroup structure7;
         private final CommutativeGroup structure8;
         private final CommutativeGroup structure9;
         private final CommutativeGroup structure10;
         private final CommutativeGroup structure11;
         private final CommutativeGroup structure12;
         private final CommutativeGroup structure13;
         private final CommutativeGroup structure14;
         private final CommutativeGroup structure15;
         private final CommutativeGroup structure16;
         private final CommutativeGroup structure17;
         private final CommutativeGroup structure18;
         private final CommutativeGroup structure19;
         private final CommutativeGroup structure20;
         private final CommutativeGroup structure21;
         private final CommutativeGroup structure22;

         public Tuple22 inverse(final Tuple22 x0) {
            return GroupProduct22.inverse$(this, x0);
         }

         public Tuple22 empty() {
            return MonoidProduct22.empty$(this);
         }

         public Tuple22 combine(final Tuple22 x0, final Tuple22 x1) {
            return SemigroupProduct22.combine$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1;
         }

         public CommutativeGroup structure2() {
            return this.structure2;
         }

         public CommutativeGroup structure3() {
            return this.structure3;
         }

         public CommutativeGroup structure4() {
            return this.structure4;
         }

         public CommutativeGroup structure5() {
            return this.structure5;
         }

         public CommutativeGroup structure6() {
            return this.structure6;
         }

         public CommutativeGroup structure7() {
            return this.structure7;
         }

         public CommutativeGroup structure8() {
            return this.structure8;
         }

         public CommutativeGroup structure9() {
            return this.structure9;
         }

         public CommutativeGroup structure10() {
            return this.structure10;
         }

         public CommutativeGroup structure11() {
            return this.structure11;
         }

         public CommutativeGroup structure12() {
            return this.structure12;
         }

         public CommutativeGroup structure13() {
            return this.structure13;
         }

         public CommutativeGroup structure14() {
            return this.structure14;
         }

         public CommutativeGroup structure15() {
            return this.structure15;
         }

         public CommutativeGroup structure16() {
            return this.structure16;
         }

         public CommutativeGroup structure17() {
            return this.structure17;
         }

         public CommutativeGroup structure18() {
            return this.structure18;
         }

         public CommutativeGroup structure19() {
            return this.structure19;
         }

         public CommutativeGroup structure20() {
            return this.structure20;
         }

         public CommutativeGroup structure21() {
            return this.structure21;
         }

         public CommutativeGroup structure22() {
            return this.structure22;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct22.$init$(this);
            MonoidProduct22.$init$(this);
            GroupProduct22.$init$(this);
            this.structure1 = _structure1$132;
            this.structure2 = _structure2$132;
            this.structure3 = _structure3$80;
            this.structure4 = _structure4$76;
            this.structure5 = _structure5$72;
            this.structure6 = _structure6$68;
            this.structure7 = _structure7$64;
            this.structure8 = _structure8$60;
            this.structure9 = _structure9$56;
            this.structure10 = _structure10$52;
            this.structure11 = _structure11$48;
            this.structure12 = _structure12$44;
            this.structure13 = _structure13$40;
            this.structure14 = _structure14$36;
            this.structure15 = _structure15$32;
            this.structure16 = _structure16$28;
            this.structure17 = _structure17$24;
            this.structure18 = _structure18$20;
            this.structure19 = _structure19$16;
            this.structure20 = _structure20$12;
            this.structure21 = _structure21$8;
            this.structure22 = _structure22$4;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mDDc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mDDc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mDDc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcDD$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcDD$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2$mcDD$sp.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcDD$sp.empty$(this);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2$mcDD$sp.empty$mcDD$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDD$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDD$sp.combine$mcDD$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcD$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcD$sp();
         }

         public CommutativeGroup structure1$mcD$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$133;
            this.structure2 = _structure2$133;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mDFc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mDFc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mDFc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcDF$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcDF$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2$mcDF$sp.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcDF$sp.empty$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2$mcDF$sp.empty$mcDF$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDF$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDF$sp.combine$mcDF$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcD$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcF$sp();
         }

         public CommutativeGroup structure1$mcD$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$134;
            this.structure2 = _structure2$134;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mDIc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mDIc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mDIc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcDI$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcDI$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2$mcDI$sp.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcDI$sp.empty$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2$mcDI$sp.empty$mcDI$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDI$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDI$sp.combine$mcDI$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcD$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcI$sp();
         }

         public CommutativeGroup structure1$mcD$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$135;
            this.structure2 = _structure2$135;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mDJc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mDJc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mDJc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcDJ$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcDJ$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2$mcDJ$sp.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcDJ$sp.empty$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2$mcDJ$sp.empty$mcDJ$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDJ$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcDJ$sp.combine$mcDJ$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcD$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcJ$sp();
         }

         public CommutativeGroup structure1$mcD$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$136;
            this.structure2 = _structure2$136;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mFDc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mFDc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mFDc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcFD$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcFD$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2$mcFD$sp.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcFD$sp.empty$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2$mcFD$sp.empty$mcFD$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFD$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFD$sp.combine$mcFD$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcF$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcD$sp();
         }

         public CommutativeGroup structure1$mcF$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$137;
            this.structure2 = _structure2$137;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mFFc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mFFc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mFFc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcFF$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcFF$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2$mcFF$sp.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcFF$sp.empty$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2$mcFF$sp.empty$mcFF$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFF$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFF$sp.combine$mcFF$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcF$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcF$sp();
         }

         public CommutativeGroup structure1$mcF$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$138;
            this.structure2 = _structure2$138;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mFIc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mFIc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mFIc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcFI$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcFI$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2$mcFI$sp.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcFI$sp.empty$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2$mcFI$sp.empty$mcFI$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFI$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFI$sp.combine$mcFI$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcF$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcI$sp();
         }

         public CommutativeGroup structure1$mcF$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$139;
            this.structure2 = _structure2$139;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mFJc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mFJc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mFJc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcFJ$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcFJ$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2$mcFJ$sp.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcFJ$sp.empty$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2$mcFJ$sp.empty$mcFJ$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFJ$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcFJ$sp.combine$mcFJ$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcF$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcJ$sp();
         }

         public CommutativeGroup structure1$mcF$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$140;
            this.structure2 = _structure2$140;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mIDc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mIDc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mIDc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcID$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcID$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2$mcID$sp.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcID$sp.empty$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2$mcID$sp.empty$mcID$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcID$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcID$sp.combine$mcID$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcI$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcD$sp();
         }

         public CommutativeGroup structure1$mcI$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$141;
            this.structure2 = _structure2$141;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mIFc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mIFc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mIFc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcIF$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcIF$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2$mcIF$sp.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcIF$sp.empty$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2$mcIF$sp.empty$mcIF$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcIF$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcIF$sp.combine$mcIF$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcI$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcF$sp();
         }

         public CommutativeGroup structure1$mcI$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$142;
            this.structure2 = _structure2$142;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mIIc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mIIc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mIIc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcII$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcII$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2$mcII$sp.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcII$sp.empty$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2$mcII$sp.empty$mcII$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcII$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcII$sp.combine$mcII$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcI$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcI$sp();
         }

         public CommutativeGroup structure1$mcI$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$143;
            this.structure2 = _structure2$143;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mIJc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mIJc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mIJc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcIJ$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcIJ$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2$mcIJ$sp.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcIJ$sp.empty$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2$mcIJ$sp.empty$mcIJ$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcIJ$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcIJ$sp.combine$mcIJ$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return AbGroupProduct2.structure1$mcJ$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcI$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcJ$sp();
         }

         public CommutativeGroup structure1$mcI$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$144;
            this.structure2 = _structure2$144;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mJDc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mJDc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mJDc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcJD$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcJD$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2$mcJD$sp.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcJD$sp.empty$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2$mcJD$sp.empty$mcJD$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJD$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJD$sp.combine$mcJD$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcJ$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcD$sp();
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$145;
            this.structure2 = _structure2$145;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mJFc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mJFc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mJFc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcJF$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcJF$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2$mcJF$sp.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcJF$sp.empty$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2$mcJF$sp.empty$mcJF$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJF$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJF$sp.combine$mcJF$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcJ$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcF$sp();
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$146;
            this.structure2 = _structure2$146;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mJIc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mJIc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mJIc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcJI$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcJI$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2$mcJI$sp.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcJI$sp.empty$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2$mcJI$sp.empty$mcJI$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJI$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJI$sp.combine$mcJI$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return AbGroupProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcJ$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcI$sp();
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$147;
            this.structure2 = _structure2$147;
         }
      };
   }

   // $FF: synthetic method
   static CommutativeGroup AbGroupProduct2$mJJc$sp$(final AbGroupProductInstances $this, final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return $this.AbGroupProduct2$mJJc$sp(_structure1, _structure2);
   }

   default CommutativeGroup AbGroupProduct2$mJJc$sp(final CommutativeGroup _structure1, final CommutativeGroup _structure2) {
      return new AbGroupProduct2$mcJJ$sp(_structure1, _structure2) {
         private final CommutativeGroup structure1;
         private final CommutativeGroup structure2;

         public Tuple2 inverse(final Tuple2 x0) {
            return GroupProduct2$mcJJ$sp.inverse$(this, x0);
         }

         public Tuple2 inverse$mcJJ$sp(final Tuple2 x0) {
            return GroupProduct2$mcJJ$sp.inverse$mcJJ$sp$(this, x0);
         }

         public Tuple2 empty() {
            return MonoidProduct2$mcJJ$sp.empty$(this);
         }

         public Tuple2 empty$mcJJ$sp() {
            return MonoidProduct2$mcJJ$sp.empty$mcJJ$sp$(this);
         }

         public Tuple2 combine(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJJ$sp.combine$(this, x0, x1);
         }

         public Tuple2 combine$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2$mcJJ$sp.combine$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup structure1$mcD$sp() {
            return AbGroupProduct2.structure1$mcD$sp$(this);
         }

         public CommutativeGroup structure1$mcF$sp() {
            return AbGroupProduct2.structure1$mcF$sp$(this);
         }

         public CommutativeGroup structure1$mcI$sp() {
            return AbGroupProduct2.structure1$mcI$sp$(this);
         }

         public CommutativeGroup structure2$mcD$sp() {
            return AbGroupProduct2.structure2$mcD$sp$(this);
         }

         public CommutativeGroup structure2$mcF$sp() {
            return AbGroupProduct2.structure2$mcF$sp$(this);
         }

         public CommutativeGroup structure2$mcI$sp() {
            return AbGroupProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 inverse$mcDD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDD$sp$(this, x0);
         }

         public Tuple2 inverse$mcDF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDF$sp$(this, x0);
         }

         public Tuple2 inverse$mcDI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDI$sp$(this, x0);
         }

         public Tuple2 inverse$mcDJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcDJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcFD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFD$sp$(this, x0);
         }

         public Tuple2 inverse$mcFF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFF$sp$(this, x0);
         }

         public Tuple2 inverse$mcFI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFI$sp$(this, x0);
         }

         public Tuple2 inverse$mcFJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcFJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcID$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcID$sp$(this, x0);
         }

         public Tuple2 inverse$mcIF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIF$sp$(this, x0);
         }

         public Tuple2 inverse$mcII$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcII$sp$(this, x0);
         }

         public Tuple2 inverse$mcIJ$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcIJ$sp$(this, x0);
         }

         public Tuple2 inverse$mcJD$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJD$sp$(this, x0);
         }

         public Tuple2 inverse$mcJF$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJF$sp$(this, x0);
         }

         public Tuple2 inverse$mcJI$sp(final Tuple2 x0) {
            return GroupProduct2.inverse$mcJI$sp$(this, x0);
         }

         public Tuple2 empty$mcDD$sp() {
            return MonoidProduct2.empty$mcDD$sp$(this);
         }

         public Tuple2 empty$mcDF$sp() {
            return MonoidProduct2.empty$mcDF$sp$(this);
         }

         public Tuple2 empty$mcDI$sp() {
            return MonoidProduct2.empty$mcDI$sp$(this);
         }

         public Tuple2 empty$mcDJ$sp() {
            return MonoidProduct2.empty$mcDJ$sp$(this);
         }

         public Tuple2 empty$mcFD$sp() {
            return MonoidProduct2.empty$mcFD$sp$(this);
         }

         public Tuple2 empty$mcFF$sp() {
            return MonoidProduct2.empty$mcFF$sp$(this);
         }

         public Tuple2 empty$mcFI$sp() {
            return MonoidProduct2.empty$mcFI$sp$(this);
         }

         public Tuple2 empty$mcFJ$sp() {
            return MonoidProduct2.empty$mcFJ$sp$(this);
         }

         public Tuple2 empty$mcID$sp() {
            return MonoidProduct2.empty$mcID$sp$(this);
         }

         public Tuple2 empty$mcIF$sp() {
            return MonoidProduct2.empty$mcIF$sp$(this);
         }

         public Tuple2 empty$mcII$sp() {
            return MonoidProduct2.empty$mcII$sp$(this);
         }

         public Tuple2 empty$mcIJ$sp() {
            return MonoidProduct2.empty$mcIJ$sp$(this);
         }

         public Tuple2 empty$mcJD$sp() {
            return MonoidProduct2.empty$mcJD$sp$(this);
         }

         public Tuple2 empty$mcJF$sp() {
            return MonoidProduct2.empty$mcJF$sp$(this);
         }

         public Tuple2 empty$mcJI$sp() {
            return MonoidProduct2.empty$mcJI$sp$(this);
         }

         public Tuple2 combine$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcID$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcII$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 combine$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemigroupProduct2.combine$mcJI$sp$(this, x0, x1);
         }

         public CommutativeMonoid reverse() {
            return CommutativeMonoid.reverse$(this);
         }

         public CommutativeMonoid reverse$mcD$sp() {
            return CommutativeMonoid.reverse$mcD$sp$(this);
         }

         public CommutativeMonoid reverse$mcF$sp() {
            return CommutativeMonoid.reverse$mcF$sp$(this);
         }

         public CommutativeMonoid reverse$mcI$sp() {
            return CommutativeMonoid.reverse$mcI$sp$(this);
         }

         public CommutativeMonoid reverse$mcJ$sp() {
            return CommutativeMonoid.reverse$mcJ$sp$(this);
         }

         public CommutativeSemigroup intercalate(final Object middle) {
            return CommutativeSemigroup.intercalate$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcD$sp(final double middle) {
            return CommutativeSemigroup.intercalate$mcD$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcF$sp(final float middle) {
            return CommutativeSemigroup.intercalate$mcF$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcI$sp(final int middle) {
            return CommutativeSemigroup.intercalate$mcI$sp$(this, middle);
         }

         public CommutativeSemigroup intercalate$mcJ$sp(final long middle) {
            return CommutativeSemigroup.intercalate$mcJ$sp$(this, middle);
         }

         public double inverse$mcD$sp(final double a) {
            return Group.inverse$mcD$sp$(this, a);
         }

         public float inverse$mcF$sp(final float a) {
            return Group.inverse$mcF$sp$(this, a);
         }

         public int inverse$mcI$sp(final int a) {
            return Group.inverse$mcI$sp$(this, a);
         }

         public long inverse$mcJ$sp(final long a) {
            return Group.inverse$mcJ$sp$(this, a);
         }

         public Object remove(final Object a, final Object b) {
            return Group.remove$(this, a, b);
         }

         public double remove$mcD$sp(final double a, final double b) {
            return Group.remove$mcD$sp$(this, a, b);
         }

         public float remove$mcF$sp(final float a, final float b) {
            return Group.remove$mcF$sp$(this, a, b);
         }

         public int remove$mcI$sp(final int a, final int b) {
            return Group.remove$mcI$sp$(this, a, b);
         }

         public long remove$mcJ$sp(final long a, final long b) {
            return Group.remove$mcJ$sp$(this, a, b);
         }

         public Object combineN(final Object a, final int n) {
            return Group.combineN$(this, a, n);
         }

         public double combineN$mcD$sp(final double a, final int n) {
            return Group.combineN$mcD$sp$(this, a, n);
         }

         public float combineN$mcF$sp(final float a, final int n) {
            return Group.combineN$mcF$sp$(this, a, n);
         }

         public int combineN$mcI$sp(final int a, final int n) {
            return Group.combineN$mcI$sp$(this, a, n);
         }

         public long combineN$mcJ$sp(final long a, final int n) {
            return Group.combineN$mcJ$sp$(this, a, n);
         }

         public double empty$mcD$sp() {
            return Monoid.empty$mcD$sp$(this);
         }

         public float empty$mcF$sp() {
            return Monoid.empty$mcF$sp$(this);
         }

         public int empty$mcI$sp() {
            return Monoid.empty$mcI$sp$(this);
         }

         public long empty$mcJ$sp() {
            return Monoid.empty$mcJ$sp$(this);
         }

         public boolean isEmpty(final Object a, final Eq ev) {
            return Monoid.isEmpty$(this, a, ev);
         }

         public boolean isEmpty$mcD$sp(final double a, final Eq ev) {
            return Monoid.isEmpty$mcD$sp$(this, a, ev);
         }

         public boolean isEmpty$mcF$sp(final float a, final Eq ev) {
            return Monoid.isEmpty$mcF$sp$(this, a, ev);
         }

         public boolean isEmpty$mcI$sp(final int a, final Eq ev) {
            return Monoid.isEmpty$mcI$sp$(this, a, ev);
         }

         public boolean isEmpty$mcJ$sp(final long a, final Eq ev) {
            return Monoid.isEmpty$mcJ$sp$(this, a, ev);
         }

         public Object combineAll(final IterableOnce as) {
            return Monoid.combineAll$(this, as);
         }

         public double combineAll$mcD$sp(final IterableOnce as) {
            return Monoid.combineAll$mcD$sp$(this, as);
         }

         public float combineAll$mcF$sp(final IterableOnce as) {
            return Monoid.combineAll$mcF$sp$(this, as);
         }

         public int combineAll$mcI$sp(final IterableOnce as) {
            return Monoid.combineAll$mcI$sp$(this, as);
         }

         public long combineAll$mcJ$sp(final IterableOnce as) {
            return Monoid.combineAll$mcJ$sp$(this, as);
         }

         public Option combineAllOption(final IterableOnce as) {
            return Monoid.combineAllOption$(this, as);
         }

         public double combine$mcD$sp(final double x, final double y) {
            return Semigroup.combine$mcD$sp$(this, x, y);
         }

         public float combine$mcF$sp(final float x, final float y) {
            return Semigroup.combine$mcF$sp$(this, x, y);
         }

         public int combine$mcI$sp(final int x, final int y) {
            return Semigroup.combine$mcI$sp$(this, x, y);
         }

         public long combine$mcJ$sp(final long x, final long y) {
            return Semigroup.combine$mcJ$sp$(this, x, y);
         }

         public Object repeatedCombineN(final Object a, final int n) {
            return Semigroup.repeatedCombineN$(this, a, n);
         }

         public double repeatedCombineN$mcD$sp(final double a, final int n) {
            return Semigroup.repeatedCombineN$mcD$sp$(this, a, n);
         }

         public float repeatedCombineN$mcF$sp(final float a, final int n) {
            return Semigroup.repeatedCombineN$mcF$sp$(this, a, n);
         }

         public int repeatedCombineN$mcI$sp(final int a, final int n) {
            return Semigroup.repeatedCombineN$mcI$sp$(this, a, n);
         }

         public long repeatedCombineN$mcJ$sp(final long a, final int n) {
            return Semigroup.repeatedCombineN$mcJ$sp$(this, a, n);
         }

         public CommutativeGroup structure1() {
            return this.structure1$mcJ$sp();
         }

         public CommutativeGroup structure2() {
            return this.structure2$mcJ$sp();
         }

         public CommutativeGroup structure1$mcJ$sp() {
            return this.structure1;
         }

         public CommutativeGroup structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            Semigroup.$init$(this);
            Monoid.$init$(this);
            Group.$init$(this);
            CommutativeSemigroup.$init$(this);
            CommutativeMonoid.$init$(this);
            SemigroupProduct2.$init$(this);
            MonoidProduct2.$init$(this);
            GroupProduct2.$init$(this);
            this.structure1 = _structure1$148;
            this.structure2 = _structure2$148;
         }
      };
   }

   static void $init$(final AbGroupProductInstances $this) {
   }
}
