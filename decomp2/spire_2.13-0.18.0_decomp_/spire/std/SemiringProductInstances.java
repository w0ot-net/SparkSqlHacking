package spire.std;

import algebra.ring.AdditiveCommutativeMonoid;
import algebra.ring.AdditiveCommutativeSemigroup;
import algebra.ring.AdditiveMonoid;
import algebra.ring.AdditiveSemigroup;
import algebra.ring.MultiplicativeSemigroup;
import algebra.ring.Semiring;
import cats.kernel.CommutativeMonoid;
import cats.kernel.Eq;
import cats.kernel.Semigroup;
import scala.Option;
import scala.Tuple10;
import scala.Tuple11;
import scala.Tuple12;
import scala.Tuple13;
import scala.Tuple14;
import scala.Tuple15;
import scala.Tuple16;
import scala.Tuple17;
import scala.Tuple18;
import scala.Tuple19;
import scala.Tuple2;
import scala.Tuple20;
import scala.Tuple21;
import scala.Tuple22;
import scala.Tuple3;
import scala.Tuple4;
import scala.Tuple5;
import scala.Tuple6;
import scala.Tuple7;
import scala.Tuple8;
import scala.Tuple9;
import scala.collection.IterableOnce;
import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u0005)\u0015baB\f\u0019!\u0003\r\t!\b\u0005\u0006I\u0001!\t!\n\u0005\u0006S\u0001!\u0019A\u000b\u0005\u0006m\u0002!\u0019a\u001e\u0005\b\u0003/\u0001A1AA\r\u0011\u001d\tI\u0005\u0001C\u0002\u0003\u0017Bq!a!\u0001\t\u0007\t)\tC\u0004\u0002F\u0002!\u0019!a2\t\u000f\t=\u0001\u0001b\u0001\u0003\u0012!9!\u0011\r\u0001\u0005\u0004\t\r\u0004b\u0002B^\u0001\u0011\r!Q\u0018\u0005\b\u0007;\u0001A1AB\u0010\u0011\u001d\u00199\t\u0001C\u0002\u0007\u0013Cqa!?\u0001\t\u0007\u0019Y\u0010C\u0004\u0005t\u0001!\u0019\u0001\"\u001e\t\u000f\u0011U\b\u0001b\u0001\u0005x\"9Qq\u0010\u0001\u0005\u0004\u0015\u0005\u0005b\u0002D\t\u0001\u0011\ra1\u0003\u0005\b\rW\u0003A1\u0001DW\u0011\u001d9i\u0005\u0001C\u0002\u000f\u001fBqab>\u0001\t\u00079I\u0010C\u0004\t*\u0002!\u0019\u0001c+\t\u000f%\r\u0004\u0001b\u0001\nf\tA2+Z7je&tw\r\u0015:pIV\u001cG/\u00138ti\u0006t7-Z:\u000b\u0005eQ\u0012aA:uI*\t1$A\u0003ta&\u0014Xm\u0001\u0001\u0014\u0005\u0001q\u0002CA\u0010#\u001b\u0005\u0001#\"A\u0011\u0002\u000bM\u001c\u0017\r\\1\n\u0005\r\u0002#AB!osJ+g-\u0001\u0004%S:LG\u000f\n\u000b\u0002MA\u0011qdJ\u0005\u0003Q\u0001\u0012A!\u00168ji\u0006\u00012+Z7je&tw\r\u0015:pIV\u001cGOM\u000b\u0004W\u0005+Gc\u0001\u0017qgB\u0019Q&\u000f\u001f\u000f\u000592dBA\u00185\u001d\t\u00014'D\u00012\u0015\t\u0011D$\u0001\u0004=e>|GOP\u0005\u00027%\u0011QGG\u0001\bC2<WM\u0019:b\u0013\t9\u0004(A\u0004qC\u000e\\\u0017mZ3\u000b\u0005UR\u0012B\u0001\u001e<\u0005!\u0019V-\\5sS:<'BA\u001c9!\u0011yRh\u00103\n\u0005y\u0002#A\u0002+va2,'\u0007\u0005\u0002A\u00032\u0001A!\u0003\"\u0003A\u0003\u0005\tQ1\u0001D\u0005\u0005\t\u0015C\u0001#H!\tyR)\u0003\u0002GA\t9aj\u001c;iS:<\u0007CA\u0010I\u0013\tI\u0005EA\u0002B]fDc!Q&O+j{\u0006CA\u0010M\u0013\ti\u0005EA\u0006ta\u0016\u001c\u0017.\u00197ju\u0016$\u0017'B\u0012P!J\u000bfBA\u0010Q\u0013\t\t\u0006%A\u0002J]R\fD\u0001J*UC9\u0011\u0001\u0007V\u0005\u0002CE*1EV,Z1:\u0011qdV\u0005\u00031\u0002\nA\u0001T8oOF\"Ae\u0015+\"c\u0015\u00193\f\u00180^\u001d\tyB,\u0003\u0002^A\u0005)a\t\\8biF\"Ae\u0015+\"c\u0015\u0019\u0003-Y2c\u001d\ty\u0012-\u0003\u0002cA\u00051Ai\\;cY\u0016\fD\u0001J*UCA\u0011\u0001)\u001a\u0003\nM\n\u0001\u000b\u0011!AC\u0002\r\u0013\u0011A\u0011\u0015\u0007K.C'\u000e\u001c82\u000b\rz\u0005+[)2\t\u0011\u001aF+I\u0019\u0006GY;6\u000eW\u0019\u0005IM#\u0016%M\u0003$7rkW,\r\u0003%'R\u000b\u0013'B\u0012aC>\u0014\u0017\u0007\u0002\u0013T)\u0006BQ!\u001d\u0002A\u0004I\f1bX:ueV\u001cG/\u001e:fcA\u0019Q&O \t\u000bQ\u0014\u00019A;\u0002\u0017}\u001bHO];diV\u0014XM\r\t\u0004[e\"\u0017\u0001E*f[&\u0014\u0018N\\4Qe>$Wo\u0019;4+\u0019Ah0!\u0001\u0002\u0006Q9\u00110!\u0003\u0002\u000e\u0005E\u0001cA\u0017:uB1qd_?\u0000\u0003\u0007I!\u0001 \u0011\u0003\rQ+\b\u000f\\34!\t\u0001e\u0010B\u0003C\u0007\t\u00071\tE\u0002A\u0003\u0003!QAZ\u0002C\u0002\r\u00032\u0001QA\u0003\t\u0019\t9a\u0001b\u0001\u0007\n\t1\t\u0003\u0004r\u0007\u0001\u000f\u00111\u0002\t\u0004[ej\bB\u0002;\u0004\u0001\b\ty\u0001E\u0002.s}Dq!a\u0005\u0004\u0001\b\t)\"A\u0006`gR\u0014Xo\u0019;ve\u0016\u001c\u0004\u0003B\u0017:\u0003\u0007\t\u0001cU3nSJLgn\u001a)s_\u0012,8\r\u001e\u001b\u0016\u0015\u0005m\u0011qEA\u0016\u0003_\t\u0019\u0004\u0006\u0006\u0002\u001e\u0005]\u00121HA \u0003\u0007\u0002B!L\u001d\u0002 AYq$!\t\u0002&\u0005%\u0012QFA\u0019\u0013\r\t\u0019\u0003\t\u0002\u0007)V\u0004H.\u001a\u001b\u0011\u0007\u0001\u000b9\u0003B\u0003C\t\t\u00071\tE\u0002A\u0003W!QA\u001a\u0003C\u0002\r\u00032\u0001QA\u0018\t\u0019\t9\u0001\u0002b\u0001\u0007B\u0019\u0001)a\r\u0005\r\u0005UBA1\u0001D\u0005\u0005!\u0005BB9\u0005\u0001\b\tI\u0004\u0005\u0003.s\u0005\u0015\u0002B\u0002;\u0005\u0001\b\ti\u0004\u0005\u0003.s\u0005%\u0002bBA\n\t\u0001\u000f\u0011\u0011\t\t\u0005[e\ni\u0003C\u0004\u0002F\u0011\u0001\u001d!a\u0012\u0002\u0017}\u001bHO];diV\u0014X\r\u000e\t\u0005[e\n\t$\u0001\tTK6L'/\u001b8h!J|G-^2ukUa\u0011QJA-\u0003;\n\t'!\u001a\u0002jQa\u0011qJA7\u0003c\n)(!\u001f\u0002~A!Q&OA)!5y\u00121KA,\u00037\ny&a\u0019\u0002h%\u0019\u0011Q\u000b\u0011\u0003\rQ+\b\u000f\\36!\r\u0001\u0015\u0011\f\u0003\u0006\u0005\u0016\u0011\ra\u0011\t\u0004\u0001\u0006uC!\u00024\u0006\u0005\u0004\u0019\u0005c\u0001!\u0002b\u00111\u0011qA\u0003C\u0002\r\u00032\u0001QA3\t\u0019\t)$\u0002b\u0001\u0007B\u0019\u0001)!\u001b\u0005\r\u0005-TA1\u0001D\u0005\u0005)\u0005BB9\u0006\u0001\b\ty\u0007\u0005\u0003.s\u0005]\u0003B\u0002;\u0006\u0001\b\t\u0019\b\u0005\u0003.s\u0005m\u0003bBA\n\u000b\u0001\u000f\u0011q\u000f\t\u0005[e\ny\u0006C\u0004\u0002F\u0015\u0001\u001d!a\u001f\u0011\t5J\u00141\r\u0005\b\u0003\u007f*\u00019AAA\u0003-y6\u000f\u001e:vGR,(/Z\u001b\u0011\t5J\u0014qM\u0001\u0011'\u0016l\u0017N]5oOB\u0013x\u000eZ;diZ*b\"a\"\u0002\u0014\u0006]\u00151TAP\u0003G\u000b9\u000b\u0006\b\u0002\n\u0006-\u0016qVAZ\u0003o\u000bY,a0\u0011\t5J\u00141\u0012\t\u0010?\u00055\u0015\u0011SAK\u00033\u000bi*!)\u0002&&\u0019\u0011q\u0012\u0011\u0003\rQ+\b\u000f\\37!\r\u0001\u00151\u0013\u0003\u0006\u0005\u001a\u0011\ra\u0011\t\u0004\u0001\u0006]E!\u00024\u0007\u0005\u0004\u0019\u0005c\u0001!\u0002\u001c\u00121\u0011q\u0001\u0004C\u0002\r\u00032\u0001QAP\t\u0019\t)D\u0002b\u0001\u0007B\u0019\u0001)a)\u0005\r\u0005-dA1\u0001D!\r\u0001\u0015q\u0015\u0003\u0007\u0003S3!\u0019A\"\u0003\u0003\u0019Ca!\u001d\u0004A\u0004\u00055\u0006\u0003B\u0017:\u0003#Ca\u0001\u001e\u0004A\u0004\u0005E\u0006\u0003B\u0017:\u0003+Cq!a\u0005\u0007\u0001\b\t)\f\u0005\u0003.s\u0005e\u0005bBA#\r\u0001\u000f\u0011\u0011\u0018\t\u0005[e\ni\nC\u0004\u0002\u0000\u0019\u0001\u001d!!0\u0011\t5J\u0014\u0011\u0015\u0005\b\u0003\u00034\u00019AAb\u0003-y6\u000f\u001e:vGR,(/\u001a\u001c\u0011\t5J\u0014QU\u0001\u0011'\u0016l\u0017N]5oOB\u0013x\u000eZ;di^*\u0002#!3\u0002V\u0006e\u0017Q\\Aq\u0003K\fI/!<\u0015!\u0005-\u0017\u0011_A{\u0003s\fiP!\u0001\u0003\u0006\t%\u0001\u0003B\u0017:\u0003\u001b\u0004\u0012cHAh\u0003'\f9.a7\u0002`\u0006\r\u0018q]Av\u0013\r\t\t\u000e\t\u0002\u0007)V\u0004H.Z\u001c\u0011\u0007\u0001\u000b)\u000eB\u0003C\u000f\t\u00071\tE\u0002A\u00033$QAZ\u0004C\u0002\r\u00032\u0001QAo\t\u0019\t9a\u0002b\u0001\u0007B\u0019\u0001)!9\u0005\r\u0005UrA1\u0001D!\r\u0001\u0015Q\u001d\u0003\u0007\u0003W:!\u0019A\"\u0011\u0007\u0001\u000bI\u000f\u0002\u0004\u0002*\u001e\u0011\ra\u0011\t\u0004\u0001\u00065HABAx\u000f\t\u00071IA\u0001H\u0011\u0019\tx\u0001q\u0001\u0002tB!Q&OAj\u0011\u0019!x\u0001q\u0001\u0002xB!Q&OAl\u0011\u001d\t\u0019b\u0002a\u0002\u0003w\u0004B!L\u001d\u0002\\\"9\u0011QI\u0004A\u0004\u0005}\b\u0003B\u0017:\u0003?Dq!a \b\u0001\b\u0011\u0019\u0001\u0005\u0003.s\u0005\r\bbBAa\u000f\u0001\u000f!q\u0001\t\u0005[e\n9\u000fC\u0004\u0003\f\u001d\u0001\u001dA!\u0004\u0002\u0017}\u001bHO];diV\u0014Xm\u000e\t\u0005[e\nY/\u0001\tTK6L'/\u001b8h!J|G-^2uqU\u0011\"1\u0003B\u0010\u0005G\u00119Ca\u000b\u00030\tM\"q\u0007B\u001e)I\u0011)Ba\u0010\u0003D\t\u001d#1\nB(\u0005'\u00129Fa\u0017\u0011\t5J$q\u0003\t\u0014?\te!Q\u0004B\u0011\u0005K\u0011IC!\f\u00032\tU\"\u0011H\u0005\u0004\u00057\u0001#A\u0002+va2,\u0007\bE\u0002A\u0005?!QA\u0011\u0005C\u0002\r\u00032\u0001\u0011B\u0012\t\u00151\u0007B1\u0001D!\r\u0001%q\u0005\u0003\u0007\u0003\u000fA!\u0019A\"\u0011\u0007\u0001\u0013Y\u0003\u0002\u0004\u00026!\u0011\ra\u0011\t\u0004\u0001\n=BABA6\u0011\t\u00071\tE\u0002A\u0005g!a!!+\t\u0005\u0004\u0019\u0005c\u0001!\u00038\u00111\u0011q\u001e\u0005C\u0002\r\u00032\u0001\u0011B\u001e\t\u0019\u0011i\u0004\u0003b\u0001\u0007\n\t\u0001\n\u0003\u0004r\u0011\u0001\u000f!\u0011\t\t\u0005[e\u0012i\u0002\u0003\u0004u\u0011\u0001\u000f!Q\t\t\u0005[e\u0012\t\u0003C\u0004\u0002\u0014!\u0001\u001dA!\u0013\u0011\t5J$Q\u0005\u0005\b\u0003\u000bB\u00019\u0001B'!\u0011i\u0013H!\u000b\t\u000f\u0005}\u0004\u0002q\u0001\u0003RA!Q&\u000fB\u0017\u0011\u001d\t\t\r\u0003a\u0002\u0005+\u0002B!L\u001d\u00032!9!1\u0002\u0005A\u0004\te\u0003\u0003B\u0017:\u0005kAqA!\u0018\t\u0001\b\u0011y&A\u0006`gR\u0014Xo\u0019;ve\u0016D\u0004\u0003B\u0017:\u0005s\t\u0001cU3nSJLgn\u001a)s_\u0012,8\r^\u001d\u0016)\t\u0015$\u0011\u000fB;\u0005s\u0012iH!!\u0003\u0006\n%%Q\u0012BI)Q\u00119G!&\u0003\u001a\nu%\u0011\u0015BS\u0005S\u0013iK!-\u00036B!Q&\u000fB5!Uy\"1\u000eB8\u0005g\u00129Ha\u001f\u0003\u0000\t\r%q\u0011BF\u0005\u001fK1A!\u001c!\u0005\u0019!V\u000f\u001d7fsA\u0019\u0001I!\u001d\u0005\u000b\tK!\u0019A\"\u0011\u0007\u0001\u0013)\bB\u0003g\u0013\t\u00071\tE\u0002A\u0005s\"a!a\u0002\n\u0005\u0004\u0019\u0005c\u0001!\u0003~\u00111\u0011QG\u0005C\u0002\r\u00032\u0001\u0011BA\t\u0019\tY'\u0003b\u0001\u0007B\u0019\u0001I!\"\u0005\r\u0005%\u0016B1\u0001D!\r\u0001%\u0011\u0012\u0003\u0007\u0003_L!\u0019A\"\u0011\u0007\u0001\u0013i\t\u0002\u0004\u0003>%\u0011\ra\u0011\t\u0004\u0001\nEEA\u0002BJ\u0013\t\u00071IA\u0001J\u0011\u0019\t\u0018\u0002q\u0001\u0003\u0018B!Q&\u000fB8\u0011\u0019!\u0018\u0002q\u0001\u0003\u001cB!Q&\u000fB:\u0011\u001d\t\u0019\"\u0003a\u0002\u0005?\u0003B!L\u001d\u0003x!9\u0011QI\u0005A\u0004\t\r\u0006\u0003B\u0017:\u0005wBq!a \n\u0001\b\u00119\u000b\u0005\u0003.s\t}\u0004bBAa\u0013\u0001\u000f!1\u0016\t\u0005[e\u0012\u0019\tC\u0004\u0003\f%\u0001\u001dAa,\u0011\t5J$q\u0011\u0005\b\u0005;J\u00019\u0001BZ!\u0011i\u0013Ha#\t\u000f\t]\u0016\u0002q\u0001\u0003:\u0006Yql\u001d;sk\u000e$XO]3:!\u0011i\u0013Ha$\u0002#M+W.\u001b:j]\u001e\u0004&o\u001c3vGR\f\u0004'\u0006\f\u0003@\n-'q\u001aBj\u0005/\u0014YNa8\u0003d\n\u001d(1\u001eBx)Y\u0011\tMa=\u0003x\nm(q`B\u0002\u0007\u000f\u0019Yaa\u0004\u0004\u0014\r]\u0001\u0003B\u0017:\u0005\u0007\u0004rc\bBc\u0005\u0013\u0014iM!5\u0003V\ne'Q\u001cBq\u0005K\u0014IO!<\n\u0007\t\u001d\u0007EA\u0004UkBdW-\r\u0019\u0011\u0007\u0001\u0013Y\rB\u0003C\u0015\t\u00071\tE\u0002A\u0005\u001f$QA\u001a\u0006C\u0002\r\u00032\u0001\u0011Bj\t\u0019\t9A\u0003b\u0001\u0007B\u0019\u0001Ia6\u0005\r\u0005U\"B1\u0001D!\r\u0001%1\u001c\u0003\u0007\u0003WR!\u0019A\"\u0011\u0007\u0001\u0013y\u000e\u0002\u0004\u0002**\u0011\ra\u0011\t\u0004\u0001\n\rHABAx\u0015\t\u00071\tE\u0002A\u0005O$aA!\u0010\u000b\u0005\u0004\u0019\u0005c\u0001!\u0003l\u00121!1\u0013\u0006C\u0002\r\u00032\u0001\u0011Bx\t\u0019\u0011\tP\u0003b\u0001\u0007\n\t!\n\u0003\u0004r\u0015\u0001\u000f!Q\u001f\t\u0005[e\u0012I\r\u0003\u0004u\u0015\u0001\u000f!\u0011 \t\u0005[e\u0012i\rC\u0004\u0002\u0014)\u0001\u001dA!@\u0011\t5J$\u0011\u001b\u0005\b\u0003\u000bR\u00019AB\u0001!\u0011i\u0013H!6\t\u000f\u0005}$\u0002q\u0001\u0004\u0006A!Q&\u000fBm\u0011\u001d\t\tM\u0003a\u0002\u0007\u0013\u0001B!L\u001d\u0003^\"9!1\u0002\u0006A\u0004\r5\u0001\u0003B\u0017:\u0005CDqA!\u0018\u000b\u0001\b\u0019\t\u0002\u0005\u0003.s\t\u0015\bb\u0002B\\\u0015\u0001\u000f1Q\u0003\t\u0005[e\u0012I\u000fC\u0004\u0004\u001a)\u0001\u001daa\u0007\u0002\u0019}\u001bHO];diV\u0014X-\r\u0019\u0011\t5J$Q^\u0001\u0012'\u0016l\u0017N]5oOB\u0013x\u000eZ;diF\nT\u0003GB\u0011\u0007[\u0019\td!\u000e\u0004:\ru2\u0011IB#\u0007\u0013\u001aie!\u0015\u0004VQA21EB-\u0007;\u001a\tg!\u001a\u0004j\r54\u0011OB;\u0007s\u001aih!!\u0011\t5J4Q\u0005\t\u001a?\r\u001d21FB\u0018\u0007g\u00199da\u000f\u0004@\r\r3qIB&\u0007\u001f\u001a\u0019&C\u0002\u0004*\u0001\u0012q\u0001V;qY\u0016\f\u0014\u0007E\u0002A\u0007[!QAQ\u0006C\u0002\r\u00032\u0001QB\u0019\t\u001517B1\u0001D!\r\u00015Q\u0007\u0003\u0007\u0003\u000fY!\u0019A\"\u0011\u0007\u0001\u001bI\u0004\u0002\u0004\u00026-\u0011\ra\u0011\t\u0004\u0001\u000euBABA6\u0017\t\u00071\tE\u0002A\u0007\u0003\"a!!+\f\u0005\u0004\u0019\u0005c\u0001!\u0004F\u00111\u0011q^\u0006C\u0002\r\u00032\u0001QB%\t\u0019\u0011id\u0003b\u0001\u0007B\u0019\u0001i!\u0014\u0005\r\tM5B1\u0001D!\r\u00015\u0011\u000b\u0003\u0007\u0005c\\!\u0019A\"\u0011\u0007\u0001\u001b)\u0006\u0002\u0004\u0004X-\u0011\ra\u0011\u0002\u0002\u0017\"1\u0011o\u0003a\u0002\u00077\u0002B!L\u001d\u0004,!1Ao\u0003a\u0002\u0007?\u0002B!L\u001d\u00040!9\u00111C\u0006A\u0004\r\r\u0004\u0003B\u0017:\u0007gAq!!\u0012\f\u0001\b\u00199\u0007\u0005\u0003.s\r]\u0002bBA@\u0017\u0001\u000f11\u000e\t\u0005[e\u001aY\u0004C\u0004\u0002B.\u0001\u001daa\u001c\u0011\t5J4q\b\u0005\b\u0005\u0017Y\u00019AB:!\u0011i\u0013ha\u0011\t\u000f\tu3\u0002q\u0001\u0004xA!Q&OB$\u0011\u001d\u00119l\u0003a\u0002\u0007w\u0002B!L\u001d\u0004L!91\u0011D\u0006A\u0004\r}\u0004\u0003B\u0017:\u0007\u001fBqaa!\f\u0001\b\u0019))\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\f\u0014\u0007\u0005\u0003.s\rM\u0013!E*f[&\u0014\u0018N\\4Qe>$Wo\u0019;2eUQ21RBL\u00077\u001byja)\u0004(\u000e-6qVBZ\u0007o\u001bYla0\u0004DRQ2QRBd\u0007\u0017\u001cyma5\u0004X\u000em7q\\Br\u0007O\u001cYoa<\u0004tB!Q&OBH!my2\u0011SBK\u00073\u001bij!)\u0004&\u000e%6QVBY\u0007k\u001bIl!0\u0004B&\u001911\u0013\u0011\u0003\u000fQ+\b\u000f\\32eA\u0019\u0001ia&\u0005\u000b\tc!\u0019A\"\u0011\u0007\u0001\u001bY\nB\u0003g\u0019\t\u00071\tE\u0002A\u0007?#a!a\u0002\r\u0005\u0004\u0019\u0005c\u0001!\u0004$\u00121\u0011Q\u0007\u0007C\u0002\r\u00032\u0001QBT\t\u0019\tY\u0007\u0004b\u0001\u0007B\u0019\u0001ia+\u0005\r\u0005%FB1\u0001D!\r\u00015q\u0016\u0003\u0007\u0003_d!\u0019A\"\u0011\u0007\u0001\u001b\u0019\f\u0002\u0004\u0003>1\u0011\ra\u0011\t\u0004\u0001\u000e]FA\u0002BJ\u0019\t\u00071\tE\u0002A\u0007w#aA!=\r\u0005\u0004\u0019\u0005c\u0001!\u0004@\u001211q\u000b\u0007C\u0002\r\u00032\u0001QBb\t\u0019\u0019)\r\u0004b\u0001\u0007\n\tA\n\u0003\u0004r\u0019\u0001\u000f1\u0011\u001a\t\u0005[e\u001a)\n\u0003\u0004u\u0019\u0001\u000f1Q\u001a\t\u0005[e\u001aI\nC\u0004\u0002\u00141\u0001\u001da!5\u0011\t5J4Q\u0014\u0005\b\u0003\u000bb\u00019ABk!\u0011i\u0013h!)\t\u000f\u0005}D\u0002q\u0001\u0004ZB!Q&OBS\u0011\u001d\t\t\r\u0004a\u0002\u0007;\u0004B!L\u001d\u0004*\"9!1\u0002\u0007A\u0004\r\u0005\b\u0003B\u0017:\u0007[CqA!\u0018\r\u0001\b\u0019)\u000f\u0005\u0003.s\rE\u0006b\u0002B\\\u0019\u0001\u000f1\u0011\u001e\t\u0005[e\u001a)\fC\u0004\u0004\u001a1\u0001\u001da!<\u0011\t5J4\u0011\u0018\u0005\b\u0007\u0007c\u00019ABy!\u0011i\u0013h!0\t\u000f\rUH\u0002q\u0001\u0004x\u0006aql\u001d;sk\u000e$XO]32eA!Q&OBa\u0003E\u0019V-\\5sS:<\u0007K]8ek\u000e$\u0018gM\u000b\u001d\u0007{$I\u0001\"\u0004\u0005\u0012\u0011UA\u0011\u0004C\u000f\tC!)\u0003\"\u000b\u0005.\u0011EBQ\u0007C\u001d)q\u0019y\u0010\"\u0010\u0005B\u0011\u0015C\u0011\nC'\t#\")\u0006\"\u0017\u0005^\u0011\u0005DQ\rC5\t[\u0002B!L\u001d\u0005\u0002Air\u0004b\u0001\u0005\b\u0011-Aq\u0002C\n\t/!Y\u0002b\b\u0005$\u0011\u001dB1\u0006C\u0018\tg!9$C\u0002\u0005\u0006\u0001\u0012q\u0001V;qY\u0016\f4\u0007E\u0002A\t\u0013!QAQ\u0007C\u0002\r\u00032\u0001\u0011C\u0007\t\u00151WB1\u0001D!\r\u0001E\u0011\u0003\u0003\u0007\u0003\u000fi!\u0019A\"\u0011\u0007\u0001#)\u0002\u0002\u0004\u000265\u0011\ra\u0011\t\u0004\u0001\u0012eAABA6\u001b\t\u00071\tE\u0002A\t;!a!!+\u000e\u0005\u0004\u0019\u0005c\u0001!\u0005\"\u00111\u0011q^\u0007C\u0002\r\u00032\u0001\u0011C\u0013\t\u0019\u0011i$\u0004b\u0001\u0007B\u0019\u0001\t\"\u000b\u0005\r\tMUB1\u0001D!\r\u0001EQ\u0006\u0003\u0007\u0005cl!\u0019A\"\u0011\u0007\u0001#\t\u0004\u0002\u0004\u0004X5\u0011\ra\u0011\t\u0004\u0001\u0012UBABBc\u001b\t\u00071\tE\u0002A\ts!a\u0001b\u000f\u000e\u0005\u0004\u0019%!A'\t\rEl\u00019\u0001C !\u0011i\u0013\bb\u0002\t\rQl\u00019\u0001C\"!\u0011i\u0013\bb\u0003\t\u000f\u0005MQ\u0002q\u0001\u0005HA!Q&\u000fC\b\u0011\u001d\t)%\u0004a\u0002\t\u0017\u0002B!L\u001d\u0005\u0014!9\u0011qP\u0007A\u0004\u0011=\u0003\u0003B\u0017:\t/Aq!!1\u000e\u0001\b!\u0019\u0006\u0005\u0003.s\u0011m\u0001b\u0002B\u0006\u001b\u0001\u000fAq\u000b\t\u0005[e\"y\u0002C\u0004\u0003^5\u0001\u001d\u0001b\u0017\u0011\t5JD1\u0005\u0005\b\u0005ok\u00019\u0001C0!\u0011i\u0013\bb\n\t\u000f\reQ\u0002q\u0001\u0005dA!Q&\u000fC\u0016\u0011\u001d\u0019\u0019)\u0004a\u0002\tO\u0002B!L\u001d\u00050!91Q_\u0007A\u0004\u0011-\u0004\u0003B\u0017:\tgAq\u0001b\u001c\u000e\u0001\b!\t(\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\f4\u0007\u0005\u0003.s\u0011]\u0012!E*f[&\u0014\u0018N\\4Qe>$Wo\u0019;2iUqBq\u000fCB\t\u000f#Y\tb$\u0005\u0014\u0012]E1\u0014CP\tG#9\u000bb+\u00050\u0012MFq\u0017\u000b\u001f\ts\"Y\fb0\u0005D\u0012\u001dG1\u001aCh\t'$9\u000eb7\u0005`\u0012\rHq\u001dCv\t_\u0004B!L\u001d\u0005|Ayr\u0004\" \u0005\u0002\u0012\u0015E\u0011\u0012CG\t##)\n\"'\u0005\u001e\u0012\u0005FQ\u0015CU\t[#\t\f\".\n\u0007\u0011}\u0004EA\u0004UkBdW-\r\u001b\u0011\u0007\u0001#\u0019\tB\u0003C\u001d\t\u00071\tE\u0002A\t\u000f#QA\u001a\bC\u0002\r\u00032\u0001\u0011CF\t\u0019\t9A\u0004b\u0001\u0007B\u0019\u0001\tb$\u0005\r\u0005UbB1\u0001D!\r\u0001E1\u0013\u0003\u0007\u0003Wr!\u0019A\"\u0011\u0007\u0001#9\n\u0002\u0004\u0002*:\u0011\ra\u0011\t\u0004\u0001\u0012mEABAx\u001d\t\u00071\tE\u0002A\t?#aA!\u0010\u000f\u0005\u0004\u0019\u0005c\u0001!\u0005$\u00121!1\u0013\bC\u0002\r\u00032\u0001\u0011CT\t\u0019\u0011\tP\u0004b\u0001\u0007B\u0019\u0001\tb+\u0005\r\r]cB1\u0001D!\r\u0001Eq\u0016\u0003\u0007\u0007\u000bt!\u0019A\"\u0011\u0007\u0001#\u0019\f\u0002\u0004\u0005<9\u0011\ra\u0011\t\u0004\u0001\u0012]FA\u0002C]\u001d\t\u00071IA\u0001O\u0011\u0019\th\u0002q\u0001\u0005>B!Q&\u000fCA\u0011\u0019!h\u0002q\u0001\u0005BB!Q&\u000fCC\u0011\u001d\t\u0019B\u0004a\u0002\t\u000b\u0004B!L\u001d\u0005\n\"9\u0011Q\t\bA\u0004\u0011%\u0007\u0003B\u0017:\t\u001bCq!a \u000f\u0001\b!i\r\u0005\u0003.s\u0011E\u0005bBAa\u001d\u0001\u000fA\u0011\u001b\t\u0005[e\")\nC\u0004\u0003\f9\u0001\u001d\u0001\"6\u0011\t5JD\u0011\u0014\u0005\b\u0005;r\u00019\u0001Cm!\u0011i\u0013\b\"(\t\u000f\t]f\u0002q\u0001\u0005^B!Q&\u000fCQ\u0011\u001d\u0019IB\u0004a\u0002\tC\u0004B!L\u001d\u0005&\"911\u0011\bA\u0004\u0011\u0015\b\u0003B\u0017:\tSCqa!>\u000f\u0001\b!I\u000f\u0005\u0003.s\u00115\u0006b\u0002C8\u001d\u0001\u000fAQ\u001e\t\u0005[e\"\t\fC\u0004\u0005r:\u0001\u001d\u0001b=\u0002\u0019}\u001bHO];diV\u0014X-\r\u001b\u0011\t5JDQW\u0001\u0012'\u0016l\u0017N]5oOB\u0013x\u000eZ;diF*T\u0003\tC}\u000b\u000b)I!\"\u0004\u0006\u0012\u0015UQ\u0011DC\u000f\u000bC))#\"\u000b\u0006.\u0015ERQGC\u001d\u000b{!\u0002\u0005b?\u0006B\u0015\u0015S\u0011JC'\u000b#*)&\"\u0017\u0006^\u0015\u0005TQMC5\u000b[*\t(\"\u001e\u0006zA!Q&\u000fC\u007f!\u0005zBq`C\u0002\u000b\u000f)Y!b\u0004\u0006\u0014\u0015]Q1DC\u0010\u000bG)9#b\u000b\u00060\u0015MRqGC\u001e\u0013\r)\t\u0001\t\u0002\b)V\u0004H.Z\u00196!\r\u0001UQ\u0001\u0003\u0006\u0005>\u0011\ra\u0011\t\u0004\u0001\u0016%A!\u00024\u0010\u0005\u0004\u0019\u0005c\u0001!\u0006\u000e\u00111\u0011qA\bC\u0002\r\u00032\u0001QC\t\t\u0019\t)d\u0004b\u0001\u0007B\u0019\u0001)\"\u0006\u0005\r\u0005-tB1\u0001D!\r\u0001U\u0011\u0004\u0003\u0007\u0003S{!\u0019A\"\u0011\u0007\u0001+i\u0002\u0002\u0004\u0002p>\u0011\ra\u0011\t\u0004\u0001\u0016\u0005BA\u0002B\u001f\u001f\t\u00071\tE\u0002A\u000bK!aAa%\u0010\u0005\u0004\u0019\u0005c\u0001!\u0006*\u00111!\u0011_\bC\u0002\r\u00032\u0001QC\u0017\t\u0019\u00199f\u0004b\u0001\u0007B\u0019\u0001)\"\r\u0005\r\r\u0015wB1\u0001D!\r\u0001UQ\u0007\u0003\u0007\twy!\u0019A\"\u0011\u0007\u0001+I\u0004\u0002\u0004\u0005:>\u0011\ra\u0011\t\u0004\u0001\u0016uBABC \u001f\t\u00071IA\u0001P\u0011\u0019\tx\u0002q\u0001\u0006DA!Q&OC\u0002\u0011\u0019!x\u0002q\u0001\u0006HA!Q&OC\u0004\u0011\u001d\t\u0019b\u0004a\u0002\u000b\u0017\u0002B!L\u001d\u0006\f!9\u0011QI\bA\u0004\u0015=\u0003\u0003B\u0017:\u000b\u001fAq!a \u0010\u0001\b)\u0019\u0006\u0005\u0003.s\u0015M\u0001bBAa\u001f\u0001\u000fQq\u000b\t\u0005[e*9\u0002C\u0004\u0003\f=\u0001\u001d!b\u0017\u0011\t5JT1\u0004\u0005\b\u0005;z\u00019AC0!\u0011i\u0013(b\b\t\u000f\t]v\u0002q\u0001\u0006dA!Q&OC\u0012\u0011\u001d\u0019Ib\u0004a\u0002\u000bO\u0002B!L\u001d\u0006(!911Q\bA\u0004\u0015-\u0004\u0003B\u0017:\u000bWAqa!>\u0010\u0001\b)y\u0007\u0005\u0003.s\u0015=\u0002b\u0002C8\u001f\u0001\u000fQ1\u000f\t\u0005[e*\u0019\u0004C\u0004\u0005r>\u0001\u001d!b\u001e\u0011\t5JTq\u0007\u0005\b\u000bwz\u00019AC?\u00031y6\u000f\u001e:vGR,(/Z\u00196!\u0011i\u0013(b\u000f\u0002#M+W.\u001b:j]\u001e\u0004&o\u001c3vGR\fd'\u0006\u0012\u0006\u0004\u0016=U1SCL\u000b7+y*b)\u0006(\u0016-VqVCZ\u000bo+Y,b0\u0006D\u0016\u001dW1\u001a\u000b#\u000b\u000b+y-b5\u0006X\u0016mWq\\Cr\u000bO,Y/b<\u0006t\u0016]X1`C\u0000\r\u000719Ab\u0003\u0011\t5JTq\u0011\t$?\u0015%UQRCI\u000b++I*\"(\u0006\"\u0016\u0015V\u0011VCW\u000bc+),\"/\u0006>\u0016\u0005WQYCe\u0013\r)Y\t\t\u0002\b)V\u0004H.Z\u00197!\r\u0001Uq\u0012\u0003\u0006\u0005B\u0011\ra\u0011\t\u0004\u0001\u0016ME!\u00024\u0011\u0005\u0004\u0019\u0005c\u0001!\u0006\u0018\u00121\u0011q\u0001\tC\u0002\r\u00032\u0001QCN\t\u0019\t)\u0004\u0005b\u0001\u0007B\u0019\u0001)b(\u0005\r\u0005-\u0004C1\u0001D!\r\u0001U1\u0015\u0003\u0007\u0003S\u0003\"\u0019A\"\u0011\u0007\u0001+9\u000b\u0002\u0004\u0002pB\u0011\ra\u0011\t\u0004\u0001\u0016-FA\u0002B\u001f!\t\u00071\tE\u0002A\u000b_#aAa%\u0011\u0005\u0004\u0019\u0005c\u0001!\u00064\u00121!\u0011\u001f\tC\u0002\r\u00032\u0001QC\\\t\u0019\u00199\u0006\u0005b\u0001\u0007B\u0019\u0001)b/\u0005\r\r\u0015\u0007C1\u0001D!\r\u0001Uq\u0018\u0003\u0007\tw\u0001\"\u0019A\"\u0011\u0007\u0001+\u0019\r\u0002\u0004\u0005:B\u0011\ra\u0011\t\u0004\u0001\u0016\u001dGABC !\t\u00071\tE\u0002A\u000b\u0017$a!\"4\u0011\u0005\u0004\u0019%!\u0001)\t\rE\u0004\u00029ACi!\u0011i\u0013(\"$\t\rQ\u0004\u00029ACk!\u0011i\u0013(\"%\t\u000f\u0005M\u0001\u0003q\u0001\u0006ZB!Q&OCK\u0011\u001d\t)\u0005\u0005a\u0002\u000b;\u0004B!L\u001d\u0006\u001a\"9\u0011q\u0010\tA\u0004\u0015\u0005\b\u0003B\u0017:\u000b;Cq!!1\u0011\u0001\b))\u000f\u0005\u0003.s\u0015\u0005\u0006b\u0002B\u0006!\u0001\u000fQ\u0011\u001e\t\u0005[e*)\u000bC\u0004\u0003^A\u0001\u001d!\"<\u0011\t5JT\u0011\u0016\u0005\b\u0005o\u0003\u00029ACy!\u0011i\u0013(\",\t\u000f\re\u0001\u0003q\u0001\u0006vB!Q&OCY\u0011\u001d\u0019\u0019\t\u0005a\u0002\u000bs\u0004B!L\u001d\u00066\"91Q\u001f\tA\u0004\u0015u\b\u0003B\u0017:\u000bsCq\u0001b\u001c\u0011\u0001\b1\t\u0001\u0005\u0003.s\u0015u\u0006b\u0002Cy!\u0001\u000faQ\u0001\t\u0005[e*\t\rC\u0004\u0006|A\u0001\u001dA\"\u0003\u0011\t5JTQ\u0019\u0005\b\r\u001b\u0001\u00029\u0001D\b\u00031y6\u000f\u001e:vGR,(/Z\u00197!\u0011i\u0013(\"3\u0002#M+W.\u001b:j]\u001e\u0004&o\u001c3vGR\ft'\u0006\u0013\u0007\u0016\u0019\u0005bQ\u0005D\u0015\r[1\tD\"\u000e\u0007:\u0019ub\u0011\tD#\r\u00132iE\"\u0015\u0007V\u0019ecQ\fD1)\u001129B\"\u001a\u0007j\u00195d\u0011\u000fD;\rs2iH\"!\u0007\u0006\u001a%eQ\u0012DI\r+3IJ\"(\u0007\"\u001a\u0015\u0006\u0003B\u0017:\r3\u0001Re\bD\u000e\r?1\u0019Cb\n\u0007,\u0019=b1\u0007D\u001c\rw1yDb\u0011\u0007H\u0019-cq\nD*\r/2YFb\u0018\n\u0007\u0019u\u0001EA\u0004UkBdW-M\u001c\u0011\u0007\u00013\t\u0003B\u0003C#\t\u00071\tE\u0002A\rK!QAZ\tC\u0002\r\u00032\u0001\u0011D\u0015\t\u0019\t9!\u0005b\u0001\u0007B\u0019\u0001I\"\f\u0005\r\u0005U\u0012C1\u0001D!\r\u0001e\u0011\u0007\u0003\u0007\u0003W\n\"\u0019A\"\u0011\u0007\u00013)\u0004\u0002\u0004\u0002*F\u0011\ra\u0011\t\u0004\u0001\u001aeBABAx#\t\u00071\tE\u0002A\r{!aA!\u0010\u0012\u0005\u0004\u0019\u0005c\u0001!\u0007B\u00111!1S\tC\u0002\r\u00032\u0001\u0011D#\t\u0019\u0011\t0\u0005b\u0001\u0007B\u0019\u0001I\"\u0013\u0005\r\r]\u0013C1\u0001D!\r\u0001eQ\n\u0003\u0007\u0007\u000b\f\"\u0019A\"\u0011\u0007\u00013\t\u0006\u0002\u0004\u0005<E\u0011\ra\u0011\t\u0004\u0001\u001aUCA\u0002C]#\t\u00071\tE\u0002A\r3\"a!b\u0010\u0012\u0005\u0004\u0019\u0005c\u0001!\u0007^\u00111QQZ\tC\u0002\r\u00032\u0001\u0011D1\t\u00191\u0019'\u0005b\u0001\u0007\n\t\u0011\u000b\u0003\u0004r#\u0001\u000faq\r\t\u0005[e2y\u0002\u0003\u0004u#\u0001\u000fa1\u000e\t\u0005[e2\u0019\u0003C\u0004\u0002\u0014E\u0001\u001dAb\u001c\u0011\t5Jdq\u0005\u0005\b\u0003\u000b\n\u00029\u0001D:!\u0011i\u0013Hb\u000b\t\u000f\u0005}\u0014\u0003q\u0001\u0007xA!Q&\u000fD\u0018\u0011\u001d\t\t-\u0005a\u0002\rw\u0002B!L\u001d\u00074!9!1B\tA\u0004\u0019}\u0004\u0003B\u0017:\roAqA!\u0018\u0012\u0001\b1\u0019\t\u0005\u0003.s\u0019m\u0002b\u0002B\\#\u0001\u000faq\u0011\t\u0005[e2y\u0004C\u0004\u0004\u001aE\u0001\u001dAb#\u0011\t5Jd1\t\u0005\b\u0007\u0007\u000b\u00029\u0001DH!\u0011i\u0013Hb\u0012\t\u000f\rU\u0018\u0003q\u0001\u0007\u0014B!Q&\u000fD&\u0011\u001d!y'\u0005a\u0002\r/\u0003B!L\u001d\u0007P!9A\u0011_\tA\u0004\u0019m\u0005\u0003B\u0017:\r'Bq!b\u001f\u0012\u0001\b1y\n\u0005\u0003.s\u0019]\u0003b\u0002D\u0007#\u0001\u000fa1\u0015\t\u0005[e2Y\u0006C\u0004\u0007(F\u0001\u001dA\"+\u0002\u0019}\u001bHO];diV\u0014X-M\u001c\u0011\t5JdqL\u0001\u0012'\u0016l\u0017N]5oOB\u0013x\u000eZ;diFBTC\nDX\rw3yLb1\u0007H\u001a-gq\u001aDj\r/4YNb8\u0007d\u001a\u001dh1\u001eDx\rg49Pb?\u0007\u0000R1c\u0011WD\u0002\u000f\u000f9Yab\u0004\b\u0014\u001d]q1DD\u0010\u000fG99cb\u000b\b0\u001dMrqGD\u001e\u000f\u007f9\u0019eb\u0012\u0011\t5Jd1\u0017\t(?\u0019Uf\u0011\u0018D_\r\u00034)M\"3\u0007N\u001aEgQ\u001bDm\r;4\tO\":\u0007j\u001a5h\u0011\u001fD{\rs4i0C\u0002\u00078\u0002\u0012q\u0001V;qY\u0016\f\u0004\bE\u0002A\rw#QA\u0011\nC\u0002\r\u00032\u0001\u0011D`\t\u00151'C1\u0001D!\r\u0001e1\u0019\u0003\u0007\u0003\u000f\u0011\"\u0019A\"\u0011\u0007\u000139\r\u0002\u0004\u00026I\u0011\ra\u0011\t\u0004\u0001\u001a-GABA6%\t\u00071\tE\u0002A\r\u001f$a!!+\u0013\u0005\u0004\u0019\u0005c\u0001!\u0007T\u00121\u0011q\u001e\nC\u0002\r\u00032\u0001\u0011Dl\t\u0019\u0011iD\u0005b\u0001\u0007B\u0019\u0001Ib7\u0005\r\tM%C1\u0001D!\r\u0001eq\u001c\u0003\u0007\u0005c\u0014\"\u0019A\"\u0011\u0007\u00013\u0019\u000f\u0002\u0004\u0004XI\u0011\ra\u0011\t\u0004\u0001\u001a\u001dHABBc%\t\u00071\tE\u0002A\rW$a\u0001b\u000f\u0013\u0005\u0004\u0019\u0005c\u0001!\u0007p\u00121A\u0011\u0018\nC\u0002\r\u00032\u0001\u0011Dz\t\u0019)yD\u0005b\u0001\u0007B\u0019\u0001Ib>\u0005\r\u00155'C1\u0001D!\r\u0001e1 \u0003\u0007\rG\u0012\"\u0019A\"\u0011\u0007\u00013y\u0010\u0002\u0004\b\u0002I\u0011\ra\u0011\u0002\u0002%\"1\u0011O\u0005a\u0002\u000f\u000b\u0001B!L\u001d\u0007:\"1AO\u0005a\u0002\u000f\u0013\u0001B!L\u001d\u0007>\"9\u00111\u0003\nA\u0004\u001d5\u0001\u0003B\u0017:\r\u0003Dq!!\u0012\u0013\u0001\b9\t\u0002\u0005\u0003.s\u0019\u0015\u0007bBA@%\u0001\u000fqQ\u0003\t\u0005[e2I\rC\u0004\u0002BJ\u0001\u001da\"\u0007\u0011\t5JdQ\u001a\u0005\b\u0005\u0017\u0011\u00029AD\u000f!\u0011i\u0013H\"5\t\u000f\tu#\u0003q\u0001\b\"A!Q&\u000fDk\u0011\u001d\u00119L\u0005a\u0002\u000fK\u0001B!L\u001d\u0007Z\"91\u0011\u0004\nA\u0004\u001d%\u0002\u0003B\u0017:\r;Dqaa!\u0013\u0001\b9i\u0003\u0005\u0003.s\u0019\u0005\bbBB{%\u0001\u000fq\u0011\u0007\t\u0005[e2)\u000fC\u0004\u0005pI\u0001\u001da\"\u000e\u0011\t5Jd\u0011\u001e\u0005\b\tc\u0014\u00029AD\u001d!\u0011i\u0013H\"<\t\u000f\u0015m$\u0003q\u0001\b>A!Q&\u000fDy\u0011\u001d1iA\u0005a\u0002\u000f\u0003\u0002B!L\u001d\u0007v\"9aq\u0015\nA\u0004\u001d\u0015\u0003\u0003B\u0017:\rsDqa\"\u0013\u0013\u0001\b9Y%\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\f\u0004\b\u0005\u0003.s\u0019u\u0018!E*f[&\u0014\u0018N\\4Qe>$Wo\u0019;2sUAs\u0011KD/\u000fC:)g\"\u001b\bn\u001dEtQOD=\u000f{:\ti\"\"\b\n\u001e5u\u0011SDK\u000f3;ij\")\b&RAs1KDU\u000f[;\tl\".\b:\u001euv\u0011YDc\u000f\u0013<im\"5\bV\u001eewQ\\Dq\u000fK<Io\"<\brB!Q&OD+!%zrqKD.\u000f?:\u0019gb\u001a\bl\u001d=t1OD<\u000fw:yhb!\b\b\u001e-uqRDJ\u000f/;Yjb(\b$&\u0019q\u0011\f\u0011\u0003\u000fQ+\b\u000f\\32sA\u0019\u0001i\"\u0018\u0005\u000b\t\u001b\"\u0019A\"\u0011\u0007\u0001;\t\u0007B\u0003g'\t\u00071\tE\u0002A\u000fK\"a!a\u0002\u0014\u0005\u0004\u0019\u0005c\u0001!\bj\u00111\u0011QG\nC\u0002\r\u00032\u0001QD7\t\u0019\tYg\u0005b\u0001\u0007B\u0019\u0001i\"\u001d\u0005\r\u0005%6C1\u0001D!\r\u0001uQ\u000f\u0003\u0007\u0003_\u001c\"\u0019A\"\u0011\u0007\u0001;I\b\u0002\u0004\u0003>M\u0011\ra\u0011\t\u0004\u0001\u001euDA\u0002BJ'\t\u00071\tE\u0002A\u000f\u0003#aA!=\u0014\u0005\u0004\u0019\u0005c\u0001!\b\u0006\u001211qK\nC\u0002\r\u00032\u0001QDE\t\u0019\u0019)m\u0005b\u0001\u0007B\u0019\u0001i\"$\u0005\r\u0011m2C1\u0001D!\r\u0001u\u0011\u0013\u0003\u0007\ts\u001b\"\u0019A\"\u0011\u0007\u0001;)\n\u0002\u0004\u0006@M\u0011\ra\u0011\t\u0004\u0001\u001eeEABCg'\t\u00071\tE\u0002A\u000f;#aAb\u0019\u0014\u0005\u0004\u0019\u0005c\u0001!\b\"\u00121q\u0011A\nC\u0002\r\u00032\u0001QDS\t\u001999k\u0005b\u0001\u0007\n\t1\u000b\u0003\u0004r'\u0001\u000fq1\u0016\t\u0005[e:Y\u0006\u0003\u0004u'\u0001\u000fqq\u0016\t\u0005[e:y\u0006C\u0004\u0002\u0014M\u0001\u001dab-\u0011\t5Jt1\r\u0005\b\u0003\u000b\u001a\u00029AD\\!\u0011i\u0013hb\u001a\t\u000f\u0005}4\u0003q\u0001\b<B!Q&OD6\u0011\u001d\t\tm\u0005a\u0002\u000f\u007f\u0003B!L\u001d\bp!9!1B\nA\u0004\u001d\r\u0007\u0003B\u0017:\u000fgBqA!\u0018\u0014\u0001\b99\r\u0005\u0003.s\u001d]\u0004b\u0002B\\'\u0001\u000fq1\u001a\t\u0005[e:Y\bC\u0004\u0004\u001aM\u0001\u001dab4\u0011\t5Jtq\u0010\u0005\b\u0007\u0007\u001b\u00029ADj!\u0011i\u0013hb!\t\u000f\rU8\u0003q\u0001\bXB!Q&ODD\u0011\u001d!yg\u0005a\u0002\u000f7\u0004B!L\u001d\b\f\"9A\u0011_\nA\u0004\u001d}\u0007\u0003B\u0017:\u000f\u001fCq!b\u001f\u0014\u0001\b9\u0019\u000f\u0005\u0003.s\u001dM\u0005b\u0002D\u0007'\u0001\u000fqq\u001d\t\u0005[e:9\nC\u0004\u0007(N\u0001\u001dab;\u0011\t5Jt1\u0014\u0005\b\u000f\u0013\u001a\u00029ADx!\u0011i\u0013hb(\t\u000f\u001dM8\u0003q\u0001\bv\u0006aql\u001d;sk\u000e$XO]32sA!Q&ODR\u0003E\u0019V-\\5sS:<\u0007K]8ek\u000e$(\u0007M\u000b+\u000fwD9\u0001c\u0003\t\u0010!M\u0001r\u0003E\u000e\u0011?A\u0019\u0003c\n\t,!=\u00022\u0007E\u001c\u0011wAy\u0004c\u0011\tH!-\u0003r\nE*)):i\u0010c\u0016\t\\!}\u00032\rE4\u0011WBy\u0007c\u001d\tx!m\u0004r\u0010EB\u0011\u000fCY\tc$\t\u0014\"]\u00052\u0014EP\u0011G\u0003B!L\u001d\b\u0000BYs\u0004#\u0001\t\u0006!%\u0001R\u0002E\t\u0011+AI\u0002#\b\t\"!\u0015\u0002\u0012\u0006E\u0017\u0011cA)\u0004#\u000f\t>!\u0005\u0003R\tE%\u0011\u001bB\t&C\u0002\t\u0004\u0001\u0012q\u0001V;qY\u0016\u0014\u0004\u0007E\u0002A\u0011\u000f!QA\u0011\u000bC\u0002\r\u00032\u0001\u0011E\u0006\t\u00151GC1\u0001D!\r\u0001\u0005r\u0002\u0003\u0007\u0003\u000f!\"\u0019A\"\u0011\u0007\u0001C\u0019\u0002\u0002\u0004\u00026Q\u0011\ra\u0011\t\u0004\u0001\"]AABA6)\t\u00071\tE\u0002A\u00117!a!!+\u0015\u0005\u0004\u0019\u0005c\u0001!\t \u00111\u0011q\u001e\u000bC\u0002\r\u00032\u0001\u0011E\u0012\t\u0019\u0011i\u0004\u0006b\u0001\u0007B\u0019\u0001\tc\n\u0005\r\tMEC1\u0001D!\r\u0001\u00052\u0006\u0003\u0007\u0005c$\"\u0019A\"\u0011\u0007\u0001Cy\u0003\u0002\u0004\u0004XQ\u0011\ra\u0011\t\u0004\u0001\"MBABBc)\t\u00071\tE\u0002A\u0011o!a\u0001b\u000f\u0015\u0005\u0004\u0019\u0005c\u0001!\t<\u00111A\u0011\u0018\u000bC\u0002\r\u00032\u0001\u0011E \t\u0019)y\u0004\u0006b\u0001\u0007B\u0019\u0001\tc\u0011\u0005\r\u00155GC1\u0001D!\r\u0001\u0005r\t\u0003\u0007\rG\"\"\u0019A\"\u0011\u0007\u0001CY\u0005\u0002\u0004\b\u0002Q\u0011\ra\u0011\t\u0004\u0001\"=CABDT)\t\u00071\tE\u0002A\u0011'\"a\u0001#\u0016\u0015\u0005\u0004\u0019%!\u0001+\t\rE$\u00029\u0001E-!\u0011i\u0013\b#\u0002\t\rQ$\u00029\u0001E/!\u0011i\u0013\b#\u0003\t\u000f\u0005MA\u0003q\u0001\tbA!Q&\u000fE\u0007\u0011\u001d\t)\u0005\u0006a\u0002\u0011K\u0002B!L\u001d\t\u0012!9\u0011q\u0010\u000bA\u0004!%\u0004\u0003B\u0017:\u0011+Aq!!1\u0015\u0001\bAi\u0007\u0005\u0003.s!e\u0001b\u0002B\u0006)\u0001\u000f\u0001\u0012\u000f\t\u0005[eBi\u0002C\u0004\u0003^Q\u0001\u001d\u0001#\u001e\u0011\t5J\u0004\u0012\u0005\u0005\b\u0005o#\u00029\u0001E=!\u0011i\u0013\b#\n\t\u000f\reA\u0003q\u0001\t~A!Q&\u000fE\u0015\u0011\u001d\u0019\u0019\t\u0006a\u0002\u0011\u0003\u0003B!L\u001d\t.!91Q\u001f\u000bA\u0004!\u0015\u0005\u0003B\u0017:\u0011cAq\u0001b\u001c\u0015\u0001\bAI\t\u0005\u0003.s!U\u0002b\u0002Cy)\u0001\u000f\u0001R\u0012\t\u0005[eBI\u0004C\u0004\u0006|Q\u0001\u001d\u0001#%\u0011\t5J\u0004R\b\u0005\b\r\u001b!\u00029\u0001EK!\u0011i\u0013\b#\u0011\t\u000f\u0019\u001dF\u0003q\u0001\t\u001aB!Q&\u000fE#\u0011\u001d9I\u0005\u0006a\u0002\u0011;\u0003B!L\u001d\tJ!9q1\u001f\u000bA\u0004!\u0005\u0006\u0003B\u0017:\u0011\u001bBq\u0001#*\u0015\u0001\bA9+\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\u0014\u0004\u0007\u0005\u0003.s!E\u0013!E*f[&\u0014\u0018N\\4Qe>$Wo\u0019;3cUa\u0003R\u0016E]\u0011{C\t\r#2\tJ\"5\u0007\u0012\u001bEk\u00113Di\u000e#9\tf\"%\bR\u001eEy\u0011kDI\u0010#@\n\u0002%\u0015\u0011\u0012\u0002\u000b-\u0011_Ki!#\u0005\n\u0016%e\u0011RDE\u0011\u0013KII##\f\n2%U\u0012\u0012HE\u001f\u0013\u0003J)%#\u0013\nN%E\u0013RKE-\u0013;\u0002B!L\u001d\t2Bis\u0004c-\t8\"m\u0006r\u0018Eb\u0011\u000fDY\rc4\tT\"]\u00072\u001cEp\u0011GD9\u000fc;\tp\"M\br\u001fE~\u0011\u007fL\u0019!c\u0002\n\u0007!U\u0006EA\u0004UkBdWMM\u0019\u0011\u0007\u0001CI\fB\u0003C+\t\u00071\tE\u0002A\u0011{#QAZ\u000bC\u0002\r\u00032\u0001\u0011Ea\t\u0019\t9!\u0006b\u0001\u0007B\u0019\u0001\t#2\u0005\r\u0005URC1\u0001D!\r\u0001\u0005\u0012\u001a\u0003\u0007\u0003W*\"\u0019A\"\u0011\u0007\u0001Ci\r\u0002\u0004\u0002*V\u0011\ra\u0011\t\u0004\u0001\"EGABAx+\t\u00071\tE\u0002A\u0011+$aA!\u0010\u0016\u0005\u0004\u0019\u0005c\u0001!\tZ\u00121!1S\u000bC\u0002\r\u00032\u0001\u0011Eo\t\u0019\u0011\t0\u0006b\u0001\u0007B\u0019\u0001\t#9\u0005\r\r]SC1\u0001D!\r\u0001\u0005R\u001d\u0003\u0007\u0007\u000b,\"\u0019A\"\u0011\u0007\u0001CI\u000f\u0002\u0004\u0005<U\u0011\ra\u0011\t\u0004\u0001\"5HA\u0002C]+\t\u00071\tE\u0002A\u0011c$a!b\u0010\u0016\u0005\u0004\u0019\u0005c\u0001!\tv\u00121QQZ\u000bC\u0002\r\u00032\u0001\u0011E}\t\u00191\u0019'\u0006b\u0001\u0007B\u0019\u0001\t#@\u0005\r\u001d\u0005QC1\u0001D!\r\u0001\u0015\u0012\u0001\u0003\u0007\u000fO+\"\u0019A\"\u0011\u0007\u0001K)\u0001\u0002\u0004\tVU\u0011\ra\u0011\t\u0004\u0001&%AABE\u0006+\t\u00071IA\u0001V\u0011\u0019\tX\u0003q\u0001\n\u0010A!Q&\u000fE\\\u0011\u0019!X\u0003q\u0001\n\u0014A!Q&\u000fE^\u0011\u001d\t\u0019\"\u0006a\u0002\u0013/\u0001B!L\u001d\t@\"9\u0011QI\u000bA\u0004%m\u0001\u0003B\u0017:\u0011\u0007Dq!a \u0016\u0001\bIy\u0002\u0005\u0003.s!\u001d\u0007bBAa+\u0001\u000f\u00112\u0005\t\u0005[eBY\rC\u0004\u0003\fU\u0001\u001d!c\n\u0011\t5J\u0004r\u001a\u0005\b\u0005;*\u00029AE\u0016!\u0011i\u0013\bc5\t\u000f\t]V\u0003q\u0001\n0A!Q&\u000fEl\u0011\u001d\u0019I\"\u0006a\u0002\u0013g\u0001B!L\u001d\t\\\"911Q\u000bA\u0004%]\u0002\u0003B\u0017:\u0011?Dqa!>\u0016\u0001\bIY\u0004\u0005\u0003.s!\r\bb\u0002C8+\u0001\u000f\u0011r\b\t\u0005[eB9\u000fC\u0004\u0005rV\u0001\u001d!c\u0011\u0011\t5J\u00042\u001e\u0005\b\u000bw*\u00029AE$!\u0011i\u0013\bc<\t\u000f\u00195Q\u0003q\u0001\nLA!Q&\u000fEz\u0011\u001d19+\u0006a\u0002\u0013\u001f\u0002B!L\u001d\tx\"9q\u0011J\u000bA\u0004%M\u0003\u0003B\u0017:\u0011wDqab=\u0016\u0001\bI9\u0006\u0005\u0003.s!}\bb\u0002ES+\u0001\u000f\u00112\f\t\u0005[eJ\u0019\u0001C\u0004\n`U\u0001\u001d!#\u0019\u0002\u0019}\u001bHO];diV\u0014XMM\u0019\u0011\t5J\u0014rA\u0001\u0012'\u0016l\u0017N]5oOB\u0013x\u000eZ;diJ\u0012TCLE4\u0013gJ9(c\u001f\n\u0000%\r\u0015rQEF\u0013\u001fK\u0019*c&\n\u001c&}\u00152UET\u0013WKy+c-\n8&m\u0016rXEb\u0013\u000f$b&#\u001b\nL&=\u00172[El\u00137Ly.c9\nh&-\u0018r^Ez\u0013oLY0c@\u000b\u0004)\u001d!2\u0002F\b\u0015'Q9Bc\u0007\u000b A!Q&OE6!=z\u0012RNE9\u0013kJI(# \n\u0002&\u0015\u0015\u0012REG\u0013#K)*#'\n\u001e&\u0005\u0016RUEU\u0013[K\t,#.\n:&u\u0016\u0012YEc\u0013\rIy\u0007\t\u0002\b)V\u0004H.\u001a\u001a3!\r\u0001\u00152\u000f\u0003\u0006\u0005Z\u0011\ra\u0011\t\u0004\u0001&]D!\u00024\u0017\u0005\u0004\u0019\u0005c\u0001!\n|\u00111\u0011q\u0001\fC\u0002\r\u00032\u0001QE@\t\u0019\t)D\u0006b\u0001\u0007B\u0019\u0001)c!\u0005\r\u0005-dC1\u0001D!\r\u0001\u0015r\u0011\u0003\u0007\u0003S3\"\u0019A\"\u0011\u0007\u0001KY\t\u0002\u0004\u0002pZ\u0011\ra\u0011\t\u0004\u0001&=EA\u0002B\u001f-\t\u00071\tE\u0002A\u0013'#aAa%\u0017\u0005\u0004\u0019\u0005c\u0001!\n\u0018\u00121!\u0011\u001f\fC\u0002\r\u00032\u0001QEN\t\u0019\u00199F\u0006b\u0001\u0007B\u0019\u0001)c(\u0005\r\r\u0015gC1\u0001D!\r\u0001\u00152\u0015\u0003\u0007\tw1\"\u0019A\"\u0011\u0007\u0001K9\u000b\u0002\u0004\u0005:Z\u0011\ra\u0011\t\u0004\u0001&-FABC -\t\u00071\tE\u0002A\u0013_#a!\"4\u0017\u0005\u0004\u0019\u0005c\u0001!\n4\u00121a1\r\fC\u0002\r\u00032\u0001QE\\\t\u00199\tA\u0006b\u0001\u0007B\u0019\u0001)c/\u0005\r\u001d\u001dfC1\u0001D!\r\u0001\u0015r\u0018\u0003\u0007\u0011+2\"\u0019A\"\u0011\u0007\u0001K\u0019\r\u0002\u0004\n\fY\u0011\ra\u0011\t\u0004\u0001&\u001dGABEe-\t\u00071IA\u0001W\u0011\u0019\th\u0003q\u0001\nNB!Q&OE9\u0011\u0019!h\u0003q\u0001\nRB!Q&OE;\u0011\u001d\t\u0019B\u0006a\u0002\u0013+\u0004B!L\u001d\nz!9\u0011Q\t\fA\u0004%e\u0007\u0003B\u0017:\u0013{Bq!a \u0017\u0001\bIi\u000e\u0005\u0003.s%\u0005\u0005bBAa-\u0001\u000f\u0011\u0012\u001d\t\u0005[eJ)\tC\u0004\u0003\fY\u0001\u001d!#:\u0011\t5J\u0014\u0012\u0012\u0005\b\u0005;2\u00029AEu!\u0011i\u0013(#$\t\u000f\t]f\u0003q\u0001\nnB!Q&OEI\u0011\u001d\u0019IB\u0006a\u0002\u0013c\u0004B!L\u001d\n\u0016\"911\u0011\fA\u0004%U\b\u0003B\u0017:\u00133Cqa!>\u0017\u0001\bII\u0010\u0005\u0003.s%u\u0005b\u0002C8-\u0001\u000f\u0011R \t\u0005[eJ\t\u000bC\u0004\u0005rZ\u0001\u001dA#\u0001\u0011\t5J\u0014R\u0015\u0005\b\u000bw2\u00029\u0001F\u0003!\u0011i\u0013(#+\t\u000f\u00195a\u0003q\u0001\u000b\nA!Q&OEW\u0011\u001d19K\u0006a\u0002\u0015\u001b\u0001B!L\u001d\n2\"9q\u0011\n\fA\u0004)E\u0001\u0003B\u0017:\u0013kCqab=\u0017\u0001\bQ)\u0002\u0005\u0003.s%e\u0006b\u0002ES-\u0001\u000f!\u0012\u0004\t\u0005[eJi\fC\u0004\n`Y\u0001\u001dA#\b\u0011\t5J\u0014\u0012\u0019\u0005\b\u0015C1\u00029\u0001F\u0012\u00031y6\u000f\u001e:vGR,(/\u001a\u001a3!\u0011i\u0013(#2"
)
public interface SemiringProductInstances {
   // $FF: synthetic method
   static Semiring SemiringProduct2$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2(_structure1, _structure2);
   }

   default Semiring SemiringProduct2(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero() {
            return SemiringProduct2.zero$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$149;
            this.structure2 = _structure2$149;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct3$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3) {
      return $this.SemiringProduct3(_structure1, _structure2, _structure3);
   }

   default Semiring SemiringProduct3(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3) {
      return new SemiringProduct3(_structure1, _structure2, _structure3) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;

         public Tuple3 zero() {
            return SemiringProduct3.zero$(this);
         }

         public Tuple3 plus(final Tuple3 x0, final Tuple3 x1) {
            return SemiringProduct3.plus$(this, x0, x1);
         }

         public Tuple3 times(final Tuple3 x0, final Tuple3 x1) {
            return SemiringProduct3.times$(this, x0, x1);
         }

         public Tuple3 pow(final Tuple3 x0, final int x1) {
            return SemiringProduct3.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct3.$init$(this);
            this.structure1 = _structure1$150;
            this.structure2 = _structure2$150;
            this.structure3 = _structure3$81;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct4$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4) {
      return $this.SemiringProduct4(_structure1, _structure2, _structure3, _structure4);
   }

   default Semiring SemiringProduct4(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4) {
      return new SemiringProduct4(_structure1, _structure2, _structure3, _structure4) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;

         public Tuple4 zero() {
            return SemiringProduct4.zero$(this);
         }

         public Tuple4 plus(final Tuple4 x0, final Tuple4 x1) {
            return SemiringProduct4.plus$(this, x0, x1);
         }

         public Tuple4 times(final Tuple4 x0, final Tuple4 x1) {
            return SemiringProduct4.times$(this, x0, x1);
         }

         public Tuple4 pow(final Tuple4 x0, final int x1) {
            return SemiringProduct4.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct4.$init$(this);
            this.structure1 = _structure1$151;
            this.structure2 = _structure2$151;
            this.structure3 = _structure3$82;
            this.structure4 = _structure4$77;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct5$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5) {
      return $this.SemiringProduct5(_structure1, _structure2, _structure3, _structure4, _structure5);
   }

   default Semiring SemiringProduct5(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5) {
      return new SemiringProduct5(_structure1, _structure2, _structure3, _structure4, _structure5) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;

         public Tuple5 zero() {
            return SemiringProduct5.zero$(this);
         }

         public Tuple5 plus(final Tuple5 x0, final Tuple5 x1) {
            return SemiringProduct5.plus$(this, x0, x1);
         }

         public Tuple5 times(final Tuple5 x0, final Tuple5 x1) {
            return SemiringProduct5.times$(this, x0, x1);
         }

         public Tuple5 pow(final Tuple5 x0, final int x1) {
            return SemiringProduct5.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct5.$init$(this);
            this.structure1 = _structure1$152;
            this.structure2 = _structure2$152;
            this.structure3 = _structure3$83;
            this.structure4 = _structure4$78;
            this.structure5 = _structure5$73;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct6$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6) {
      return $this.SemiringProduct6(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6);
   }

   default Semiring SemiringProduct6(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6) {
      return new SemiringProduct6(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;

         public Tuple6 zero() {
            return SemiringProduct6.zero$(this);
         }

         public Tuple6 plus(final Tuple6 x0, final Tuple6 x1) {
            return SemiringProduct6.plus$(this, x0, x1);
         }

         public Tuple6 times(final Tuple6 x0, final Tuple6 x1) {
            return SemiringProduct6.times$(this, x0, x1);
         }

         public Tuple6 pow(final Tuple6 x0, final int x1) {
            return SemiringProduct6.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct6.$init$(this);
            this.structure1 = _structure1$153;
            this.structure2 = _structure2$153;
            this.structure3 = _structure3$84;
            this.structure4 = _structure4$79;
            this.structure5 = _structure5$74;
            this.structure6 = _structure6$69;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct7$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7) {
      return $this.SemiringProduct7(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7);
   }

   default Semiring SemiringProduct7(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7) {
      return new SemiringProduct7(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;

         public Tuple7 zero() {
            return SemiringProduct7.zero$(this);
         }

         public Tuple7 plus(final Tuple7 x0, final Tuple7 x1) {
            return SemiringProduct7.plus$(this, x0, x1);
         }

         public Tuple7 times(final Tuple7 x0, final Tuple7 x1) {
            return SemiringProduct7.times$(this, x0, x1);
         }

         public Tuple7 pow(final Tuple7 x0, final int x1) {
            return SemiringProduct7.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct7.$init$(this);
            this.structure1 = _structure1$154;
            this.structure2 = _structure2$154;
            this.structure3 = _structure3$85;
            this.structure4 = _structure4$80;
            this.structure5 = _structure5$75;
            this.structure6 = _structure6$70;
            this.structure7 = _structure7$65;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct8$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8) {
      return $this.SemiringProduct8(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8);
   }

   default Semiring SemiringProduct8(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8) {
      return new SemiringProduct8(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;

         public Tuple8 zero() {
            return SemiringProduct8.zero$(this);
         }

         public Tuple8 plus(final Tuple8 x0, final Tuple8 x1) {
            return SemiringProduct8.plus$(this, x0, x1);
         }

         public Tuple8 times(final Tuple8 x0, final Tuple8 x1) {
            return SemiringProduct8.times$(this, x0, x1);
         }

         public Tuple8 pow(final Tuple8 x0, final int x1) {
            return SemiringProduct8.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct8.$init$(this);
            this.structure1 = _structure1$155;
            this.structure2 = _structure2$155;
            this.structure3 = _structure3$86;
            this.structure4 = _structure4$81;
            this.structure5 = _structure5$76;
            this.structure6 = _structure6$71;
            this.structure7 = _structure7$66;
            this.structure8 = _structure8$61;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct9$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9) {
      return $this.SemiringProduct9(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9);
   }

   default Semiring SemiringProduct9(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9) {
      return new SemiringProduct9(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;

         public Tuple9 zero() {
            return SemiringProduct9.zero$(this);
         }

         public Tuple9 plus(final Tuple9 x0, final Tuple9 x1) {
            return SemiringProduct9.plus$(this, x0, x1);
         }

         public Tuple9 times(final Tuple9 x0, final Tuple9 x1) {
            return SemiringProduct9.times$(this, x0, x1);
         }

         public Tuple9 pow(final Tuple9 x0, final int x1) {
            return SemiringProduct9.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct9.$init$(this);
            this.structure1 = _structure1$156;
            this.structure2 = _structure2$156;
            this.structure3 = _structure3$87;
            this.structure4 = _structure4$82;
            this.structure5 = _structure5$77;
            this.structure6 = _structure6$72;
            this.structure7 = _structure7$67;
            this.structure8 = _structure8$62;
            this.structure9 = _structure9$57;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct10$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10) {
      return $this.SemiringProduct10(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10);
   }

   default Semiring SemiringProduct10(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10) {
      return new SemiringProduct10(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;

         public Tuple10 zero() {
            return SemiringProduct10.zero$(this);
         }

         public Tuple10 plus(final Tuple10 x0, final Tuple10 x1) {
            return SemiringProduct10.plus$(this, x0, x1);
         }

         public Tuple10 times(final Tuple10 x0, final Tuple10 x1) {
            return SemiringProduct10.times$(this, x0, x1);
         }

         public Tuple10 pow(final Tuple10 x0, final int x1) {
            return SemiringProduct10.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct10.$init$(this);
            this.structure1 = _structure1$157;
            this.structure2 = _structure2$157;
            this.structure3 = _structure3$88;
            this.structure4 = _structure4$83;
            this.structure5 = _structure5$78;
            this.structure6 = _structure6$73;
            this.structure7 = _structure7$68;
            this.structure8 = _structure8$63;
            this.structure9 = _structure9$58;
            this.structure10 = _structure10$53;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct11$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11) {
      return $this.SemiringProduct11(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11);
   }

   default Semiring SemiringProduct11(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11) {
      return new SemiringProduct11(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;
         private final Semiring structure11;

         public Tuple11 zero() {
            return SemiringProduct11.zero$(this);
         }

         public Tuple11 plus(final Tuple11 x0, final Tuple11 x1) {
            return SemiringProduct11.plus$(this, x0, x1);
         }

         public Tuple11 times(final Tuple11 x0, final Tuple11 x1) {
            return SemiringProduct11.times$(this, x0, x1);
         }

         public Tuple11 pow(final Tuple11 x0, final int x1) {
            return SemiringProduct11.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public Semiring structure11() {
            return this.structure11;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct11.$init$(this);
            this.structure1 = _structure1$158;
            this.structure2 = _structure2$158;
            this.structure3 = _structure3$89;
            this.structure4 = _structure4$84;
            this.structure5 = _structure5$79;
            this.structure6 = _structure6$74;
            this.structure7 = _structure7$69;
            this.structure8 = _structure8$64;
            this.structure9 = _structure9$59;
            this.structure10 = _structure10$54;
            this.structure11 = _structure11$49;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct12$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12) {
      return $this.SemiringProduct12(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12);
   }

   default Semiring SemiringProduct12(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12) {
      return new SemiringProduct12(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;
         private final Semiring structure11;
         private final Semiring structure12;

         public Tuple12 zero() {
            return SemiringProduct12.zero$(this);
         }

         public Tuple12 plus(final Tuple12 x0, final Tuple12 x1) {
            return SemiringProduct12.plus$(this, x0, x1);
         }

         public Tuple12 times(final Tuple12 x0, final Tuple12 x1) {
            return SemiringProduct12.times$(this, x0, x1);
         }

         public Tuple12 pow(final Tuple12 x0, final int x1) {
            return SemiringProduct12.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public Semiring structure11() {
            return this.structure11;
         }

         public Semiring structure12() {
            return this.structure12;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct12.$init$(this);
            this.structure1 = _structure1$159;
            this.structure2 = _structure2$159;
            this.structure3 = _structure3$90;
            this.structure4 = _structure4$85;
            this.structure5 = _structure5$80;
            this.structure6 = _structure6$75;
            this.structure7 = _structure7$70;
            this.structure8 = _structure8$65;
            this.structure9 = _structure9$60;
            this.structure10 = _structure10$55;
            this.structure11 = _structure11$50;
            this.structure12 = _structure12$45;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct13$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13) {
      return $this.SemiringProduct13(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13);
   }

   default Semiring SemiringProduct13(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13) {
      return new SemiringProduct13(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;
         private final Semiring structure11;
         private final Semiring structure12;
         private final Semiring structure13;

         public Tuple13 zero() {
            return SemiringProduct13.zero$(this);
         }

         public Tuple13 plus(final Tuple13 x0, final Tuple13 x1) {
            return SemiringProduct13.plus$(this, x0, x1);
         }

         public Tuple13 times(final Tuple13 x0, final Tuple13 x1) {
            return SemiringProduct13.times$(this, x0, x1);
         }

         public Tuple13 pow(final Tuple13 x0, final int x1) {
            return SemiringProduct13.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public Semiring structure11() {
            return this.structure11;
         }

         public Semiring structure12() {
            return this.structure12;
         }

         public Semiring structure13() {
            return this.structure13;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct13.$init$(this);
            this.structure1 = _structure1$160;
            this.structure2 = _structure2$160;
            this.structure3 = _structure3$91;
            this.structure4 = _structure4$86;
            this.structure5 = _structure5$81;
            this.structure6 = _structure6$76;
            this.structure7 = _structure7$71;
            this.structure8 = _structure8$66;
            this.structure9 = _structure9$61;
            this.structure10 = _structure10$56;
            this.structure11 = _structure11$51;
            this.structure12 = _structure12$46;
            this.structure13 = _structure13$41;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct14$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14) {
      return $this.SemiringProduct14(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14);
   }

   default Semiring SemiringProduct14(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14) {
      return new SemiringProduct14(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;
         private final Semiring structure11;
         private final Semiring structure12;
         private final Semiring structure13;
         private final Semiring structure14;

         public Tuple14 zero() {
            return SemiringProduct14.zero$(this);
         }

         public Tuple14 plus(final Tuple14 x0, final Tuple14 x1) {
            return SemiringProduct14.plus$(this, x0, x1);
         }

         public Tuple14 times(final Tuple14 x0, final Tuple14 x1) {
            return SemiringProduct14.times$(this, x0, x1);
         }

         public Tuple14 pow(final Tuple14 x0, final int x1) {
            return SemiringProduct14.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public Semiring structure11() {
            return this.structure11;
         }

         public Semiring structure12() {
            return this.structure12;
         }

         public Semiring structure13() {
            return this.structure13;
         }

         public Semiring structure14() {
            return this.structure14;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct14.$init$(this);
            this.structure1 = _structure1$161;
            this.structure2 = _structure2$161;
            this.structure3 = _structure3$92;
            this.structure4 = _structure4$87;
            this.structure5 = _structure5$82;
            this.structure6 = _structure6$77;
            this.structure7 = _structure7$72;
            this.structure8 = _structure8$67;
            this.structure9 = _structure9$62;
            this.structure10 = _structure10$57;
            this.structure11 = _structure11$52;
            this.structure12 = _structure12$47;
            this.structure13 = _structure13$42;
            this.structure14 = _structure14$37;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct15$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15) {
      return $this.SemiringProduct15(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15);
   }

   default Semiring SemiringProduct15(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15) {
      return new SemiringProduct15(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;
         private final Semiring structure11;
         private final Semiring structure12;
         private final Semiring structure13;
         private final Semiring structure14;
         private final Semiring structure15;

         public Tuple15 zero() {
            return SemiringProduct15.zero$(this);
         }

         public Tuple15 plus(final Tuple15 x0, final Tuple15 x1) {
            return SemiringProduct15.plus$(this, x0, x1);
         }

         public Tuple15 times(final Tuple15 x0, final Tuple15 x1) {
            return SemiringProduct15.times$(this, x0, x1);
         }

         public Tuple15 pow(final Tuple15 x0, final int x1) {
            return SemiringProduct15.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public Semiring structure11() {
            return this.structure11;
         }

         public Semiring structure12() {
            return this.structure12;
         }

         public Semiring structure13() {
            return this.structure13;
         }

         public Semiring structure14() {
            return this.structure14;
         }

         public Semiring structure15() {
            return this.structure15;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct15.$init$(this);
            this.structure1 = _structure1$162;
            this.structure2 = _structure2$162;
            this.structure3 = _structure3$93;
            this.structure4 = _structure4$88;
            this.structure5 = _structure5$83;
            this.structure6 = _structure6$78;
            this.structure7 = _structure7$73;
            this.structure8 = _structure8$68;
            this.structure9 = _structure9$63;
            this.structure10 = _structure10$58;
            this.structure11 = _structure11$53;
            this.structure12 = _structure12$48;
            this.structure13 = _structure13$43;
            this.structure14 = _structure14$38;
            this.structure15 = _structure15$33;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct16$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16) {
      return $this.SemiringProduct16(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16);
   }

   default Semiring SemiringProduct16(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16) {
      return new SemiringProduct16(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;
         private final Semiring structure11;
         private final Semiring structure12;
         private final Semiring structure13;
         private final Semiring structure14;
         private final Semiring structure15;
         private final Semiring structure16;

         public Tuple16 zero() {
            return SemiringProduct16.zero$(this);
         }

         public Tuple16 plus(final Tuple16 x0, final Tuple16 x1) {
            return SemiringProduct16.plus$(this, x0, x1);
         }

         public Tuple16 times(final Tuple16 x0, final Tuple16 x1) {
            return SemiringProduct16.times$(this, x0, x1);
         }

         public Tuple16 pow(final Tuple16 x0, final int x1) {
            return SemiringProduct16.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public Semiring structure11() {
            return this.structure11;
         }

         public Semiring structure12() {
            return this.structure12;
         }

         public Semiring structure13() {
            return this.structure13;
         }

         public Semiring structure14() {
            return this.structure14;
         }

         public Semiring structure15() {
            return this.structure15;
         }

         public Semiring structure16() {
            return this.structure16;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct16.$init$(this);
            this.structure1 = _structure1$163;
            this.structure2 = _structure2$163;
            this.structure3 = _structure3$94;
            this.structure4 = _structure4$89;
            this.structure5 = _structure5$84;
            this.structure6 = _structure6$79;
            this.structure7 = _structure7$74;
            this.structure8 = _structure8$69;
            this.structure9 = _structure9$64;
            this.structure10 = _structure10$59;
            this.structure11 = _structure11$54;
            this.structure12 = _structure12$49;
            this.structure13 = _structure13$44;
            this.structure14 = _structure14$39;
            this.structure15 = _structure15$34;
            this.structure16 = _structure16$29;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct17$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16, final Semiring _structure17) {
      return $this.SemiringProduct17(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17);
   }

   default Semiring SemiringProduct17(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16, final Semiring _structure17) {
      return new SemiringProduct17(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;
         private final Semiring structure11;
         private final Semiring structure12;
         private final Semiring structure13;
         private final Semiring structure14;
         private final Semiring structure15;
         private final Semiring structure16;
         private final Semiring structure17;

         public Tuple17 zero() {
            return SemiringProduct17.zero$(this);
         }

         public Tuple17 plus(final Tuple17 x0, final Tuple17 x1) {
            return SemiringProduct17.plus$(this, x0, x1);
         }

         public Tuple17 times(final Tuple17 x0, final Tuple17 x1) {
            return SemiringProduct17.times$(this, x0, x1);
         }

         public Tuple17 pow(final Tuple17 x0, final int x1) {
            return SemiringProduct17.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public Semiring structure11() {
            return this.structure11;
         }

         public Semiring structure12() {
            return this.structure12;
         }

         public Semiring structure13() {
            return this.structure13;
         }

         public Semiring structure14() {
            return this.structure14;
         }

         public Semiring structure15() {
            return this.structure15;
         }

         public Semiring structure16() {
            return this.structure16;
         }

         public Semiring structure17() {
            return this.structure17;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct17.$init$(this);
            this.structure1 = _structure1$164;
            this.structure2 = _structure2$164;
            this.structure3 = _structure3$95;
            this.structure4 = _structure4$90;
            this.structure5 = _structure5$85;
            this.structure6 = _structure6$80;
            this.structure7 = _structure7$75;
            this.structure8 = _structure8$70;
            this.structure9 = _structure9$65;
            this.structure10 = _structure10$60;
            this.structure11 = _structure11$55;
            this.structure12 = _structure12$50;
            this.structure13 = _structure13$45;
            this.structure14 = _structure14$40;
            this.structure15 = _structure15$35;
            this.structure16 = _structure16$30;
            this.structure17 = _structure17$25;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct18$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16, final Semiring _structure17, final Semiring _structure18) {
      return $this.SemiringProduct18(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18);
   }

   default Semiring SemiringProduct18(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16, final Semiring _structure17, final Semiring _structure18) {
      return new SemiringProduct18(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;
         private final Semiring structure11;
         private final Semiring structure12;
         private final Semiring structure13;
         private final Semiring structure14;
         private final Semiring structure15;
         private final Semiring structure16;
         private final Semiring structure17;
         private final Semiring structure18;

         public Tuple18 zero() {
            return SemiringProduct18.zero$(this);
         }

         public Tuple18 plus(final Tuple18 x0, final Tuple18 x1) {
            return SemiringProduct18.plus$(this, x0, x1);
         }

         public Tuple18 times(final Tuple18 x0, final Tuple18 x1) {
            return SemiringProduct18.times$(this, x0, x1);
         }

         public Tuple18 pow(final Tuple18 x0, final int x1) {
            return SemiringProduct18.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public Semiring structure11() {
            return this.structure11;
         }

         public Semiring structure12() {
            return this.structure12;
         }

         public Semiring structure13() {
            return this.structure13;
         }

         public Semiring structure14() {
            return this.structure14;
         }

         public Semiring structure15() {
            return this.structure15;
         }

         public Semiring structure16() {
            return this.structure16;
         }

         public Semiring structure17() {
            return this.structure17;
         }

         public Semiring structure18() {
            return this.structure18;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct18.$init$(this);
            this.structure1 = _structure1$165;
            this.structure2 = _structure2$165;
            this.structure3 = _structure3$96;
            this.structure4 = _structure4$91;
            this.structure5 = _structure5$86;
            this.structure6 = _structure6$81;
            this.structure7 = _structure7$76;
            this.structure8 = _structure8$71;
            this.structure9 = _structure9$66;
            this.structure10 = _structure10$61;
            this.structure11 = _structure11$56;
            this.structure12 = _structure12$51;
            this.structure13 = _structure13$46;
            this.structure14 = _structure14$41;
            this.structure15 = _structure15$36;
            this.structure16 = _structure16$31;
            this.structure17 = _structure17$26;
            this.structure18 = _structure18$21;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct19$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16, final Semiring _structure17, final Semiring _structure18, final Semiring _structure19) {
      return $this.SemiringProduct19(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19);
   }

   default Semiring SemiringProduct19(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16, final Semiring _structure17, final Semiring _structure18, final Semiring _structure19) {
      return new SemiringProduct19(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;
         private final Semiring structure11;
         private final Semiring structure12;
         private final Semiring structure13;
         private final Semiring structure14;
         private final Semiring structure15;
         private final Semiring structure16;
         private final Semiring structure17;
         private final Semiring structure18;
         private final Semiring structure19;

         public Tuple19 zero() {
            return SemiringProduct19.zero$(this);
         }

         public Tuple19 plus(final Tuple19 x0, final Tuple19 x1) {
            return SemiringProduct19.plus$(this, x0, x1);
         }

         public Tuple19 times(final Tuple19 x0, final Tuple19 x1) {
            return SemiringProduct19.times$(this, x0, x1);
         }

         public Tuple19 pow(final Tuple19 x0, final int x1) {
            return SemiringProduct19.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public Semiring structure11() {
            return this.structure11;
         }

         public Semiring structure12() {
            return this.structure12;
         }

         public Semiring structure13() {
            return this.structure13;
         }

         public Semiring structure14() {
            return this.structure14;
         }

         public Semiring structure15() {
            return this.structure15;
         }

         public Semiring structure16() {
            return this.structure16;
         }

         public Semiring structure17() {
            return this.structure17;
         }

         public Semiring structure18() {
            return this.structure18;
         }

         public Semiring structure19() {
            return this.structure19;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct19.$init$(this);
            this.structure1 = _structure1$166;
            this.structure2 = _structure2$166;
            this.structure3 = _structure3$97;
            this.structure4 = _structure4$92;
            this.structure5 = _structure5$87;
            this.structure6 = _structure6$82;
            this.structure7 = _structure7$77;
            this.structure8 = _structure8$72;
            this.structure9 = _structure9$67;
            this.structure10 = _structure10$62;
            this.structure11 = _structure11$57;
            this.structure12 = _structure12$52;
            this.structure13 = _structure13$47;
            this.structure14 = _structure14$42;
            this.structure15 = _structure15$37;
            this.structure16 = _structure16$32;
            this.structure17 = _structure17$27;
            this.structure18 = _structure18$22;
            this.structure19 = _structure19$17;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct20$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16, final Semiring _structure17, final Semiring _structure18, final Semiring _structure19, final Semiring _structure20) {
      return $this.SemiringProduct20(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20);
   }

   default Semiring SemiringProduct20(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16, final Semiring _structure17, final Semiring _structure18, final Semiring _structure19, final Semiring _structure20) {
      return new SemiringProduct20(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;
         private final Semiring structure11;
         private final Semiring structure12;
         private final Semiring structure13;
         private final Semiring structure14;
         private final Semiring structure15;
         private final Semiring structure16;
         private final Semiring structure17;
         private final Semiring structure18;
         private final Semiring structure19;
         private final Semiring structure20;

         public Tuple20 zero() {
            return SemiringProduct20.zero$(this);
         }

         public Tuple20 plus(final Tuple20 x0, final Tuple20 x1) {
            return SemiringProduct20.plus$(this, x0, x1);
         }

         public Tuple20 times(final Tuple20 x0, final Tuple20 x1) {
            return SemiringProduct20.times$(this, x0, x1);
         }

         public Tuple20 pow(final Tuple20 x0, final int x1) {
            return SemiringProduct20.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public Semiring structure11() {
            return this.structure11;
         }

         public Semiring structure12() {
            return this.structure12;
         }

         public Semiring structure13() {
            return this.structure13;
         }

         public Semiring structure14() {
            return this.structure14;
         }

         public Semiring structure15() {
            return this.structure15;
         }

         public Semiring structure16() {
            return this.structure16;
         }

         public Semiring structure17() {
            return this.structure17;
         }

         public Semiring structure18() {
            return this.structure18;
         }

         public Semiring structure19() {
            return this.structure19;
         }

         public Semiring structure20() {
            return this.structure20;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct20.$init$(this);
            this.structure1 = _structure1$167;
            this.structure2 = _structure2$167;
            this.structure3 = _structure3$98;
            this.structure4 = _structure4$93;
            this.structure5 = _structure5$88;
            this.structure6 = _structure6$83;
            this.structure7 = _structure7$78;
            this.structure8 = _structure8$73;
            this.structure9 = _structure9$68;
            this.structure10 = _structure10$63;
            this.structure11 = _structure11$58;
            this.structure12 = _structure12$53;
            this.structure13 = _structure13$48;
            this.structure14 = _structure14$43;
            this.structure15 = _structure15$38;
            this.structure16 = _structure16$33;
            this.structure17 = _structure17$28;
            this.structure18 = _structure18$23;
            this.structure19 = _structure19$18;
            this.structure20 = _structure20$13;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct21$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16, final Semiring _structure17, final Semiring _structure18, final Semiring _structure19, final Semiring _structure20, final Semiring _structure21) {
      return $this.SemiringProduct21(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21);
   }

   default Semiring SemiringProduct21(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16, final Semiring _structure17, final Semiring _structure18, final Semiring _structure19, final Semiring _structure20, final Semiring _structure21) {
      return new SemiringProduct21(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;
         private final Semiring structure11;
         private final Semiring structure12;
         private final Semiring structure13;
         private final Semiring structure14;
         private final Semiring structure15;
         private final Semiring structure16;
         private final Semiring structure17;
         private final Semiring structure18;
         private final Semiring structure19;
         private final Semiring structure20;
         private final Semiring structure21;

         public Tuple21 zero() {
            return SemiringProduct21.zero$(this);
         }

         public Tuple21 plus(final Tuple21 x0, final Tuple21 x1) {
            return SemiringProduct21.plus$(this, x0, x1);
         }

         public Tuple21 times(final Tuple21 x0, final Tuple21 x1) {
            return SemiringProduct21.times$(this, x0, x1);
         }

         public Tuple21 pow(final Tuple21 x0, final int x1) {
            return SemiringProduct21.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public Semiring structure11() {
            return this.structure11;
         }

         public Semiring structure12() {
            return this.structure12;
         }

         public Semiring structure13() {
            return this.structure13;
         }

         public Semiring structure14() {
            return this.structure14;
         }

         public Semiring structure15() {
            return this.structure15;
         }

         public Semiring structure16() {
            return this.structure16;
         }

         public Semiring structure17() {
            return this.structure17;
         }

         public Semiring structure18() {
            return this.structure18;
         }

         public Semiring structure19() {
            return this.structure19;
         }

         public Semiring structure20() {
            return this.structure20;
         }

         public Semiring structure21() {
            return this.structure21;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct21.$init$(this);
            this.structure1 = _structure1$168;
            this.structure2 = _structure2$168;
            this.structure3 = _structure3$99;
            this.structure4 = _structure4$94;
            this.structure5 = _structure5$89;
            this.structure6 = _structure6$84;
            this.structure7 = _structure7$79;
            this.structure8 = _structure8$74;
            this.structure9 = _structure9$69;
            this.structure10 = _structure10$64;
            this.structure11 = _structure11$59;
            this.structure12 = _structure12$54;
            this.structure13 = _structure13$49;
            this.structure14 = _structure14$44;
            this.structure15 = _structure15$39;
            this.structure16 = _structure16$34;
            this.structure17 = _structure17$29;
            this.structure18 = _structure18$24;
            this.structure19 = _structure19$19;
            this.structure20 = _structure20$14;
            this.structure21 = _structure21$9;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct22$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16, final Semiring _structure17, final Semiring _structure18, final Semiring _structure19, final Semiring _structure20, final Semiring _structure21, final Semiring _structure22) {
      return $this.SemiringProduct22(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21, _structure22);
   }

   default Semiring SemiringProduct22(final Semiring _structure1, final Semiring _structure2, final Semiring _structure3, final Semiring _structure4, final Semiring _structure5, final Semiring _structure6, final Semiring _structure7, final Semiring _structure8, final Semiring _structure9, final Semiring _structure10, final Semiring _structure11, final Semiring _structure12, final Semiring _structure13, final Semiring _structure14, final Semiring _structure15, final Semiring _structure16, final Semiring _structure17, final Semiring _structure18, final Semiring _structure19, final Semiring _structure20, final Semiring _structure21, final Semiring _structure22) {
      return new SemiringProduct22(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21, _structure22) {
         private final Semiring structure1;
         private final Semiring structure2;
         private final Semiring structure3;
         private final Semiring structure4;
         private final Semiring structure5;
         private final Semiring structure6;
         private final Semiring structure7;
         private final Semiring structure8;
         private final Semiring structure9;
         private final Semiring structure10;
         private final Semiring structure11;
         private final Semiring structure12;
         private final Semiring structure13;
         private final Semiring structure14;
         private final Semiring structure15;
         private final Semiring structure16;
         private final Semiring structure17;
         private final Semiring structure18;
         private final Semiring structure19;
         private final Semiring structure20;
         private final Semiring structure21;
         private final Semiring structure22;

         public Tuple22 zero() {
            return SemiringProduct22.zero$(this);
         }

         public Tuple22 plus(final Tuple22 x0, final Tuple22 x1) {
            return SemiringProduct22.plus$(this, x0, x1);
         }

         public Tuple22 times(final Tuple22 x0, final Tuple22 x1) {
            return SemiringProduct22.times$(this, x0, x1);
         }

         public Tuple22 pow(final Tuple22 x0, final int x1) {
            return SemiringProduct22.pow$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1;
         }

         public Semiring structure2() {
            return this.structure2;
         }

         public Semiring structure3() {
            return this.structure3;
         }

         public Semiring structure4() {
            return this.structure4;
         }

         public Semiring structure5() {
            return this.structure5;
         }

         public Semiring structure6() {
            return this.structure6;
         }

         public Semiring structure7() {
            return this.structure7;
         }

         public Semiring structure8() {
            return this.structure8;
         }

         public Semiring structure9() {
            return this.structure9;
         }

         public Semiring structure10() {
            return this.structure10;
         }

         public Semiring structure11() {
            return this.structure11;
         }

         public Semiring structure12() {
            return this.structure12;
         }

         public Semiring structure13() {
            return this.structure13;
         }

         public Semiring structure14() {
            return this.structure14;
         }

         public Semiring structure15() {
            return this.structure15;
         }

         public Semiring structure16() {
            return this.structure16;
         }

         public Semiring structure17() {
            return this.structure17;
         }

         public Semiring structure18() {
            return this.structure18;
         }

         public Semiring structure19() {
            return this.structure19;
         }

         public Semiring structure20() {
            return this.structure20;
         }

         public Semiring structure21() {
            return this.structure21;
         }

         public Semiring structure22() {
            return this.structure22;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct22.$init$(this);
            this.structure1 = _structure1$169;
            this.structure2 = _structure2$169;
            this.structure3 = _structure3$100;
            this.structure4 = _structure4$95;
            this.structure5 = _structure5$90;
            this.structure6 = _structure6$85;
            this.structure7 = _structure7$80;
            this.structure8 = _structure8$75;
            this.structure9 = _structure9$70;
            this.structure10 = _structure10$65;
            this.structure11 = _structure11$60;
            this.structure12 = _structure12$55;
            this.structure13 = _structure13$50;
            this.structure14 = _structure14$45;
            this.structure15 = _structure15$40;
            this.structure16 = _structure16$35;
            this.structure17 = _structure17$30;
            this.structure18 = _structure18$25;
            this.structure19 = _structure19$20;
            this.structure20 = _structure20$15;
            this.structure21 = _structure21$10;
            this.structure22 = _structure22$5;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mDDc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mDDc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mDDc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcDD$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcDD$sp.zero$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2$mcDD$sp.zero$mcDD$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDD$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDD$sp.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDD$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDD$sp.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDD$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDD$sp.pow$mcDD$sp$(this, x0, x1);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcD$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcD$sp();
         }

         public Semiring structure1$mcD$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$170;
            this.structure2 = _structure2$170;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mDFc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mDFc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mDFc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcDF$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcDF$sp.zero$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2$mcDF$sp.zero$mcDF$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDF$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDF$sp.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDF$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDF$sp.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDF$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDF$sp.pow$mcDF$sp$(this, x0, x1);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcD$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcF$sp();
         }

         public Semiring structure1$mcD$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$171;
            this.structure2 = _structure2$171;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mDIc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mDIc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mDIc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcDI$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcDI$sp.zero$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2$mcDI$sp.zero$mcDI$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDI$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDI$sp.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDI$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDI$sp.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDI$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDI$sp.pow$mcDI$sp$(this, x0, x1);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcD$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcI$sp();
         }

         public Semiring structure1$mcD$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$172;
            this.structure2 = _structure2$172;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mDJc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mDJc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mDJc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcDJ$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcDJ$sp.zero$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2$mcDJ$sp.zero$mcDJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDJ$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDJ$sp.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDJ$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDJ$sp.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDJ$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDJ$sp.pow$mcDJ$sp$(this, x0, x1);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcD$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcJ$sp();
         }

         public Semiring structure1$mcD$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$173;
            this.structure2 = _structure2$173;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mFDc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mFDc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mFDc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcFD$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcFD$sp.zero$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2$mcFD$sp.zero$mcFD$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFD$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFD$sp.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFD$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFD$sp.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFD$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFD$sp.pow$mcFD$sp$(this, x0, x1);
         }

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcF$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcD$sp();
         }

         public Semiring structure1$mcF$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$174;
            this.structure2 = _structure2$174;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mFFc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mFFc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mFFc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcFF$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcFF$sp.zero$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2$mcFF$sp.zero$mcFF$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFF$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFF$sp.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFF$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFF$sp.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFF$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFF$sp.pow$mcFF$sp$(this, x0, x1);
         }

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcF$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcF$sp();
         }

         public Semiring structure1$mcF$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$175;
            this.structure2 = _structure2$175;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mFIc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mFIc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mFIc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcFI$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcFI$sp.zero$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2$mcFI$sp.zero$mcFI$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFI$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFI$sp.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFI$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFI$sp.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFI$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFI$sp.pow$mcFI$sp$(this, x0, x1);
         }

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcF$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcI$sp();
         }

         public Semiring structure1$mcF$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$176;
            this.structure2 = _structure2$176;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mFJc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mFJc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mFJc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcFJ$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcFJ$sp.zero$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2$mcFJ$sp.zero$mcFJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFJ$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFJ$sp.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFJ$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFJ$sp.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFJ$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFJ$sp.pow$mcFJ$sp$(this, x0, x1);
         }

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcF$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcJ$sp();
         }

         public Semiring structure1$mcF$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$177;
            this.structure2 = _structure2$177;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mIDc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mIDc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mIDc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcID$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcID$sp.zero$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2$mcID$sp.zero$mcID$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcID$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcID$sp.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcID$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcID$sp.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcID$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcID$sp.pow$mcID$sp$(this, x0, x1);
         }

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcI$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcD$sp();
         }

         public Semiring structure1$mcI$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$178;
            this.structure2 = _structure2$178;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mIFc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mIFc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mIFc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcIF$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcIF$sp.zero$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2$mcIF$sp.zero$mcIF$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIF$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIF$sp.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIF$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIF$sp.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcIF$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcIF$sp.pow$mcIF$sp$(this, x0, x1);
         }

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcI$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcF$sp();
         }

         public Semiring structure1$mcI$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$179;
            this.structure2 = _structure2$179;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mIIc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mIIc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mIIc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcII$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcII$sp.zero$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2$mcII$sp.zero$mcII$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcII$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcII$sp.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcII$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcII$sp.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcII$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcII$sp.pow$mcII$sp$(this, x0, x1);
         }

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcI$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcI$sp();
         }

         public Semiring structure1$mcI$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$180;
            this.structure2 = _structure2$180;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mIJc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mIJc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mIJc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcIJ$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcIJ$sp.zero$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2$mcIJ$sp.zero$mcIJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIJ$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIJ$sp.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIJ$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIJ$sp.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcIJ$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcIJ$sp.pow$mcIJ$sp$(this, x0, x1);
         }

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcJ$sp() {
            return SemiringProduct2.structure1$mcJ$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcI$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcJ$sp();
         }

         public Semiring structure1$mcI$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$181;
            this.structure2 = _structure2$181;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mJDc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mJDc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mJDc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcJD$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcJD$sp.zero$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2$mcJD$sp.zero$mcJD$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJD$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJD$sp.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJD$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJD$sp.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJD$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJD$sp.pow$mcJD$sp$(this, x0, x1);
         }

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcJ$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcD$sp();
         }

         public Semiring structure1$mcJ$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$182;
            this.structure2 = _structure2$182;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mJFc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mJFc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mJFc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcJF$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcJF$sp.zero$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2$mcJF$sp.zero$mcJF$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJF$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJF$sp.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJF$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJF$sp.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJF$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJF$sp.pow$mcJF$sp$(this, x0, x1);
         }

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcJ$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcF$sp();
         }

         public Semiring structure1$mcJ$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$183;
            this.structure2 = _structure2$183;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mJIc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mJIc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mJIc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcJI$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcJI$sp.zero$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2$mcJI$sp.zero$mcJI$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJI$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJI$sp.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJI$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJI$sp.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJI$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJI$sp.pow$mcJI$sp$(this, x0, x1);
         }

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcJ$sp() {
            return SemiringProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcJ$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcI$sp();
         }

         public Semiring structure1$mcJ$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$184;
            this.structure2 = _structure2$184;
         }
      };
   }

   // $FF: synthetic method
   static Semiring SemiringProduct2$mJJc$sp$(final SemiringProductInstances $this, final Semiring _structure1, final Semiring _structure2) {
      return $this.SemiringProduct2$mJJc$sp(_structure1, _structure2);
   }

   default Semiring SemiringProduct2$mJJc$sp(final Semiring _structure1, final Semiring _structure2) {
      return new SemiringProduct2$mcJJ$sp(_structure1, _structure2) {
         private final Semiring structure1;
         private final Semiring structure2;

         public Tuple2 zero() {
            return SemiringProduct2$mcJJ$sp.zero$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2$mcJJ$sp.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJJ$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJJ$sp.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJJ$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJJ$sp.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJJ$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJJ$sp.pow$mcJJ$sp$(this, x0, x1);
         }

         public Semiring structure1$mcD$sp() {
            return SemiringProduct2.structure1$mcD$sp$(this);
         }

         public Semiring structure1$mcF$sp() {
            return SemiringProduct2.structure1$mcF$sp$(this);
         }

         public Semiring structure1$mcI$sp() {
            return SemiringProduct2.structure1$mcI$sp$(this);
         }

         public Semiring structure2$mcD$sp() {
            return SemiringProduct2.structure2$mcD$sp$(this);
         }

         public Semiring structure2$mcF$sp() {
            return SemiringProduct2.structure2$mcF$sp$(this);
         }

         public Semiring structure2$mcI$sp() {
            return SemiringProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public CommutativeMonoid additive() {
            return AdditiveCommutativeMonoid.additive$(this);
         }

         public CommutativeMonoid additive$mcD$sp() {
            return AdditiveCommutativeMonoid.additive$mcD$sp$(this);
         }

         public CommutativeMonoid additive$mcF$sp() {
            return AdditiveCommutativeMonoid.additive$mcF$sp$(this);
         }

         public CommutativeMonoid additive$mcI$sp() {
            return AdditiveCommutativeMonoid.additive$mcI$sp$(this);
         }

         public CommutativeMonoid additive$mcJ$sp() {
            return AdditiveCommutativeMonoid.additive$mcJ$sp$(this);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveMonoid.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveMonoid.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveMonoid.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveMonoid.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveMonoid.sumN$mcJ$sp$(this, a, n);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Semiring structure1() {
            return this.structure1$mcJ$sp();
         }

         public Semiring structure2() {
            return this.structure2$mcJ$sp();
         }

         public Semiring structure1$mcJ$sp() {
            return this.structure1;
         }

         public Semiring structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            SemiringProduct2.$init$(this);
            this.structure1 = _structure1$185;
            this.structure2 = _structure2$185;
         }
      };
   }

   static void $init$(final SemiringProductInstances $this) {
   }
}
