package spire.std;

import algebra.ring.AdditiveCommutativeGroup;
import algebra.ring.AdditiveCommutativeMonoid;
import algebra.ring.AdditiveCommutativeSemigroup;
import algebra.ring.AdditiveGroup;
import algebra.ring.AdditiveMonoid;
import algebra.ring.AdditiveSemigroup;
import algebra.ring.MultiplicativeSemigroup;
import algebra.ring.Rng;
import cats.kernel.CommutativeGroup;
import cats.kernel.Eq;
import cats.kernel.Semigroup;
import scala.Option;
import scala.Tuple10;
import scala.Tuple11;
import scala.Tuple12;
import scala.Tuple13;
import scala.Tuple14;
import scala.Tuple15;
import scala.Tuple16;
import scala.Tuple17;
import scala.Tuple18;
import scala.Tuple19;
import scala.Tuple2;
import scala.Tuple20;
import scala.Tuple21;
import scala.Tuple22;
import scala.Tuple3;
import scala.Tuple4;
import scala.Tuple5;
import scala.Tuple6;
import scala.Tuple7;
import scala.Tuple8;
import scala.Tuple9;
import scala.collection.IterableOnce;
import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u0005)\u0015baB\f\u0019!\u0003\r\t!\b\u0005\u0006I\u0001!\t!\n\u0005\u0006S\u0001!\u0019A\u000b\u0005\u0006m\u0002!\u0019a\u001e\u0005\b\u0003/\u0001A1AA\r\u0011\u001d\tI\u0005\u0001C\u0002\u0003\u0017Bq!a!\u0001\t\u0007\t)\tC\u0004\u0002F\u0002!\u0019!a2\t\u000f\t=\u0001\u0001b\u0001\u0003\u0012!9!\u0011\r\u0001\u0005\u0004\t\r\u0004b\u0002B^\u0001\u0011\r!Q\u0018\u0005\b\u0007;\u0001A1AB\u0010\u0011\u001d\u00199\t\u0001C\u0002\u0007\u0013Cqa!?\u0001\t\u0007\u0019Y\u0010C\u0004\u0005t\u0001!\u0019\u0001\"\u001e\t\u000f\u0011U\b\u0001b\u0001\u0005x\"9Qq\u0010\u0001\u0005\u0004\u0015\u0005\u0005b\u0002D\t\u0001\u0011\ra1\u0003\u0005\b\rW\u0003A1\u0001DW\u0011\u001d9i\u0005\u0001C\u0002\u000f\u001fBqab>\u0001\t\u00079I\u0010C\u0004\t*\u0002!\u0019\u0001c+\t\u000f%\r\u0004\u0001b\u0001\nf\t\u0019\"K\\4Qe>$Wo\u0019;J]N$\u0018M\\2fg*\u0011\u0011DG\u0001\u0004gR$'\"A\u000e\u0002\u000bM\u0004\u0018N]3\u0004\u0001M\u0011\u0001A\b\t\u0003?\tj\u0011\u0001\t\u0006\u0002C\u0005)1oY1mC&\u00111\u0005\t\u0002\u0007\u0003:L(+\u001a4\u0002\r\u0011Jg.\u001b;%)\u00051\u0003CA\u0010(\u0013\tA\u0003E\u0001\u0003V]&$\u0018a\u0003*oOB\u0013x\u000eZ;diJ*2aK!f)\ra\u0003o\u001d\t\u0004[ebdB\u0001\u00187\u001d\tyCG\u0004\u00021g5\t\u0011G\u0003\u000239\u00051AH]8pizJ\u0011aG\u0005\u0003ki\tq!\u00197hK\n\u0014\u0018-\u0003\u00028q\u00059\u0001/Y2lC\u001e,'BA\u001b\u001b\u0013\tQ4HA\u0002S]\u001eT!a\u000e\u001d\u0011\t}it\bZ\u0005\u0003}\u0001\u0012a\u0001V;qY\u0016\u0014\u0004C\u0001!B\u0019\u0001!\u0011B\u0011\u0002!\u0002\u0003\u0005)\u0019A\"\u0003\u0003\u0005\u000b\"\u0001R$\u0011\u0005})\u0015B\u0001$!\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"a\b%\n\u0005%\u0003#aA!os\"2\u0011i\u0013(V5~\u0003\"a\b'\n\u00055\u0003#aC:qK\u000eL\u0017\r\\5{K\u0012\fTaI(Q%Fs!a\b)\n\u0005E\u0003\u0013aA%oiF\"Ae\u0015+\"\u001d\t\u0001D+C\u0001\"c\u0015\u0019ckV-Y\u001d\tyr+\u0003\u0002YA\u0005!Aj\u001c8hc\u0011!3\u000bV\u00112\u000b\rZFLX/\u000f\u0005}a\u0016BA/!\u0003\u00151En\\1uc\u0011!3\u000bV\u00112\u000b\r\u0002\u0017m\u00192\u000f\u0005}\t\u0017B\u00012!\u0003\u0019!u.\u001e2mKF\"Ae\u0015+\"!\t\u0001U\rB\u0005g\u0005\u0001\u0006\t\u0011!b\u0001\u0007\n\t!\t\u000b\u0004f\u0017\"TGN\\\u0019\u0006G=\u0003\u0016.U\u0019\u0005IM#\u0016%M\u0003$-^[\u0007,\r\u0003%'R\u000b\u0013'B\u0012\\96l\u0016\u0007\u0002\u0013T)\u0006\nTa\t1b_\n\fD\u0001J*UC!)\u0011O\u0001a\u0002e\u0006Yql\u001d;sk\u000e$XO]32!\ri\u0013h\u0010\u0005\u0006i\n\u0001\u001d!^\u0001\f?N$(/^2ukJ,'\u0007E\u0002.s\u0011\f1B\u00158h!J|G-^2ugU1\u0001P`A\u0001\u0003\u000b!r!_A\u0005\u0003\u001b\t\t\u0002E\u0002.si\u0004baH>~\u007f\u0006\r\u0011B\u0001?!\u0005\u0019!V\u000f\u001d7fgA\u0011\u0001I \u0003\u0006\u0005\u000e\u0011\ra\u0011\t\u0004\u0001\u0006\u0005A!\u00024\u0004\u0005\u0004\u0019\u0005c\u0001!\u0002\u0006\u00111\u0011qA\u0002C\u0002\r\u0013\u0011a\u0011\u0005\u0007c\u000e\u0001\u001d!a\u0003\u0011\u00075JT\u0010\u0003\u0004u\u0007\u0001\u000f\u0011q\u0002\t\u0004[ez\bbBA\n\u0007\u0001\u000f\u0011QC\u0001\f?N$(/^2ukJ,7\u0007\u0005\u0003.s\u0005\r\u0011a\u0003*oOB\u0013x\u000eZ;diR*\"\"a\u0007\u0002(\u0005-\u0012qFA\u001a))\ti\"a\u000e\u0002<\u0005}\u00121\t\t\u0005[e\ny\u0002E\u0006 \u0003C\t)#!\u000b\u0002.\u0005E\u0012bAA\u0012A\t1A+\u001e9mKR\u00022\u0001QA\u0014\t\u0015\u0011EA1\u0001D!\r\u0001\u00151\u0006\u0003\u0006M\u0012\u0011\ra\u0011\t\u0004\u0001\u0006=BABA\u0004\t\t\u00071\tE\u0002A\u0003g!a!!\u000e\u0005\u0005\u0004\u0019%!\u0001#\t\rE$\u00019AA\u001d!\u0011i\u0013(!\n\t\rQ$\u00019AA\u001f!\u0011i\u0013(!\u000b\t\u000f\u0005MA\u0001q\u0001\u0002BA!Q&OA\u0017\u0011\u001d\t)\u0005\u0002a\u0002\u0003\u000f\n1bX:ueV\u001cG/\u001e:fiA!Q&OA\u0019\u0003-\u0011fn\u001a)s_\u0012,8\r^\u001b\u0016\u0019\u00055\u0013\u0011LA/\u0003C\n)'!\u001b\u0015\u0019\u0005=\u0013QNA9\u0003k\nI(! \u0011\t5J\u0014\u0011\u000b\t\u000e?\u0005M\u0013qKA.\u0003?\n\u0019'a\u001a\n\u0007\u0005U\u0003E\u0001\u0004UkBdW-\u000e\t\u0004\u0001\u0006eC!\u0002\"\u0006\u0005\u0004\u0019\u0005c\u0001!\u0002^\u0011)a-\u0002b\u0001\u0007B\u0019\u0001)!\u0019\u0005\r\u0005\u001dQA1\u0001D!\r\u0001\u0015Q\r\u0003\u0007\u0003k)!\u0019A\"\u0011\u0007\u0001\u000bI\u0007\u0002\u0004\u0002l\u0015\u0011\ra\u0011\u0002\u0002\u000b\"1\u0011/\u0002a\u0002\u0003_\u0002B!L\u001d\u0002X!1A/\u0002a\u0002\u0003g\u0002B!L\u001d\u0002\\!9\u00111C\u0003A\u0004\u0005]\u0004\u0003B\u0017:\u0003?Bq!!\u0012\u0006\u0001\b\tY\b\u0005\u0003.s\u0005\r\u0004bBA@\u000b\u0001\u000f\u0011\u0011Q\u0001\f?N$(/^2ukJ,W\u0007\u0005\u0003.s\u0005\u001d\u0014a\u0003*oOB\u0013x\u000eZ;diZ*b\"a\"\u0002\u0014\u0006]\u00151TAP\u0003G\u000b9\u000b\u0006\b\u0002\n\u0006-\u0016qVAZ\u0003o\u000bY,a0\u0011\t5J\u00141\u0012\t\u0010?\u00055\u0015\u0011SAK\u00033\u000bi*!)\u0002&&\u0019\u0011q\u0012\u0011\u0003\rQ+\b\u000f\\37!\r\u0001\u00151\u0013\u0003\u0006\u0005\u001a\u0011\ra\u0011\t\u0004\u0001\u0006]E!\u00024\u0007\u0005\u0004\u0019\u0005c\u0001!\u0002\u001c\u00121\u0011q\u0001\u0004C\u0002\r\u00032\u0001QAP\t\u0019\t)D\u0002b\u0001\u0007B\u0019\u0001)a)\u0005\r\u0005-dA1\u0001D!\r\u0001\u0015q\u0015\u0003\u0007\u0003S3!\u0019A\"\u0003\u0003\u0019Ca!\u001d\u0004A\u0004\u00055\u0006\u0003B\u0017:\u0003#Ca\u0001\u001e\u0004A\u0004\u0005E\u0006\u0003B\u0017:\u0003+Cq!a\u0005\u0007\u0001\b\t)\f\u0005\u0003.s\u0005e\u0005bBA#\r\u0001\u000f\u0011\u0011\u0018\t\u0005[e\ni\nC\u0004\u0002\u0000\u0019\u0001\u001d!!0\u0011\t5J\u0014\u0011\u0015\u0005\b\u0003\u00034\u00019AAb\u0003-y6\u000f\u001e:vGR,(/\u001a\u001c\u0011\t5J\u0014QU\u0001\f%:<\u0007K]8ek\u000e$x'\u0006\t\u0002J\u0006U\u0017\u0011\\Ao\u0003C\f)/!;\u0002nR\u0001\u00121ZAy\u0003k\fI0!@\u0003\u0002\t\u0015!\u0011\u0002\t\u0005[e\ni\rE\t \u0003\u001f\f\u0019.a6\u0002\\\u0006}\u00171]At\u0003WL1!!5!\u0005\u0019!V\u000f\u001d7foA\u0019\u0001)!6\u0005\u000b\t;!\u0019A\"\u0011\u0007\u0001\u000bI\u000eB\u0003g\u000f\t\u00071\tE\u0002A\u0003;$a!a\u0002\b\u0005\u0004\u0019\u0005c\u0001!\u0002b\u00121\u0011QG\u0004C\u0002\r\u00032\u0001QAs\t\u0019\tYg\u0002b\u0001\u0007B\u0019\u0001)!;\u0005\r\u0005%vA1\u0001D!\r\u0001\u0015Q\u001e\u0003\u0007\u0003_<!\u0019A\"\u0003\u0003\u001dCa!]\u0004A\u0004\u0005M\b\u0003B\u0017:\u0003'Da\u0001^\u0004A\u0004\u0005]\b\u0003B\u0017:\u0003/Dq!a\u0005\b\u0001\b\tY\u0010\u0005\u0003.s\u0005m\u0007bBA#\u000f\u0001\u000f\u0011q \t\u0005[e\ny\u000eC\u0004\u0002\u0000\u001d\u0001\u001dAa\u0001\u0011\t5J\u00141\u001d\u0005\b\u0003\u0003<\u00019\u0001B\u0004!\u0011i\u0013(a:\t\u000f\t-q\u0001q\u0001\u0003\u000e\u0005Yql\u001d;sk\u000e$XO]38!\u0011i\u0013(a;\u0002\u0017Isw\r\u0015:pIV\u001cG\u000fO\u000b\u0013\u0005'\u0011yBa\t\u0003(\t-\"q\u0006B\u001a\u0005o\u0011Y\u0004\u0006\n\u0003\u0016\t}\"1\tB$\u0005\u0017\u0012yEa\u0015\u0003X\tm\u0003\u0003B\u0017:\u0005/\u00012c\bB\r\u0005;\u0011\tC!\n\u0003*\t5\"\u0011\u0007B\u001b\u0005sI1Aa\u0007!\u0005\u0019!V\u000f\u001d7fqA\u0019\u0001Ia\b\u0005\u000b\tC!\u0019A\"\u0011\u0007\u0001\u0013\u0019\u0003B\u0003g\u0011\t\u00071\tE\u0002A\u0005O!a!a\u0002\t\u0005\u0004\u0019\u0005c\u0001!\u0003,\u00111\u0011Q\u0007\u0005C\u0002\r\u00032\u0001\u0011B\u0018\t\u0019\tY\u0007\u0003b\u0001\u0007B\u0019\u0001Ia\r\u0005\r\u0005%\u0006B1\u0001D!\r\u0001%q\u0007\u0003\u0007\u0003_D!\u0019A\"\u0011\u0007\u0001\u0013Y\u0004\u0002\u0004\u0003>!\u0011\ra\u0011\u0002\u0002\u0011\"1\u0011\u000f\u0003a\u0002\u0005\u0003\u0002B!L\u001d\u0003\u001e!1A\u000f\u0003a\u0002\u0005\u000b\u0002B!L\u001d\u0003\"!9\u00111\u0003\u0005A\u0004\t%\u0003\u0003B\u0017:\u0005KAq!!\u0012\t\u0001\b\u0011i\u0005\u0005\u0003.s\t%\u0002bBA@\u0011\u0001\u000f!\u0011\u000b\t\u0005[e\u0012i\u0003C\u0004\u0002B\"\u0001\u001dA!\u0016\u0011\t5J$\u0011\u0007\u0005\b\u0005\u0017A\u00019\u0001B-!\u0011i\u0013H!\u000e\t\u000f\tu\u0003\u0002q\u0001\u0003`\u0005Yql\u001d;sk\u000e$XO]39!\u0011i\u0013H!\u000f\u0002\u0017Isw\r\u0015:pIV\u001cG/O\u000b\u0015\u0005K\u0012\tH!\u001e\u0003z\tu$\u0011\u0011BC\u0005\u0013\u0013iI!%\u0015)\t\u001d$Q\u0013BM\u0005;\u0013\tK!*\u0003*\n5&\u0011\u0017B[!\u0011i\u0013H!\u001b\u0011+}\u0011YGa\u001c\u0003t\t]$1\u0010B@\u0005\u0007\u00139Ia#\u0003\u0010&\u0019!Q\u000e\u0011\u0003\rQ+\b\u000f\\3:!\r\u0001%\u0011\u000f\u0003\u0006\u0005&\u0011\ra\u0011\t\u0004\u0001\nUD!\u00024\n\u0005\u0004\u0019\u0005c\u0001!\u0003z\u00111\u0011qA\u0005C\u0002\r\u00032\u0001\u0011B?\t\u0019\t)$\u0003b\u0001\u0007B\u0019\u0001I!!\u0005\r\u0005-\u0014B1\u0001D!\r\u0001%Q\u0011\u0003\u0007\u0003SK!\u0019A\"\u0011\u0007\u0001\u0013I\t\u0002\u0004\u0002p&\u0011\ra\u0011\t\u0004\u0001\n5EA\u0002B\u001f\u0013\t\u00071\tE\u0002A\u0005##aAa%\n\u0005\u0004\u0019%!A%\t\rEL\u00019\u0001BL!\u0011i\u0013Ha\u001c\t\rQL\u00019\u0001BN!\u0011i\u0013Ha\u001d\t\u000f\u0005M\u0011\u0002q\u0001\u0003 B!Q&\u000fB<\u0011\u001d\t)%\u0003a\u0002\u0005G\u0003B!L\u001d\u0003|!9\u0011qP\u0005A\u0004\t\u001d\u0006\u0003B\u0017:\u0005\u007fBq!!1\n\u0001\b\u0011Y\u000b\u0005\u0003.s\t\r\u0005b\u0002B\u0006\u0013\u0001\u000f!q\u0016\t\u0005[e\u00129\tC\u0004\u0003^%\u0001\u001dAa-\u0011\t5J$1\u0012\u0005\b\u0005oK\u00019\u0001B]\u0003-y6\u000f\u001e:vGR,(/Z\u001d\u0011\t5J$qR\u0001\r%:<\u0007K]8ek\u000e$\u0018\u0007M\u000b\u0017\u0005\u007f\u0013YMa4\u0003T\n]'1\u001cBp\u0005G\u00149Oa;\u0003pR1\"\u0011\u0019Bz\u0005o\u0014YPa@\u0004\u0004\r\u001d11BB\b\u0007'\u00199\u0002\u0005\u0003.s\t\r\u0007cF\u0010\u0003F\n%'Q\u001aBi\u0005+\u0014IN!8\u0003b\n\u0015(\u0011\u001eBw\u0013\r\u00119\r\t\u0002\b)V\u0004H.Z\u00191!\r\u0001%1\u001a\u0003\u0006\u0005*\u0011\ra\u0011\t\u0004\u0001\n=G!\u00024\u000b\u0005\u0004\u0019\u0005c\u0001!\u0003T\u00121\u0011q\u0001\u0006C\u0002\r\u00032\u0001\u0011Bl\t\u0019\t)D\u0003b\u0001\u0007B\u0019\u0001Ia7\u0005\r\u0005-$B1\u0001D!\r\u0001%q\u001c\u0003\u0007\u0003SS!\u0019A\"\u0011\u0007\u0001\u0013\u0019\u000f\u0002\u0004\u0002p*\u0011\ra\u0011\t\u0004\u0001\n\u001dHA\u0002B\u001f\u0015\t\u00071\tE\u0002A\u0005W$aAa%\u000b\u0005\u0004\u0019\u0005c\u0001!\u0003p\u00121!\u0011\u001f\u0006C\u0002\r\u0013\u0011A\u0013\u0005\u0007c*\u0001\u001dA!>\u0011\t5J$\u0011\u001a\u0005\u0007i*\u0001\u001dA!?\u0011\t5J$Q\u001a\u0005\b\u0003'Q\u00019\u0001B\u007f!\u0011i\u0013H!5\t\u000f\u0005\u0015#\u0002q\u0001\u0004\u0002A!Q&\u000fBk\u0011\u001d\tyH\u0003a\u0002\u0007\u000b\u0001B!L\u001d\u0003Z\"9\u0011\u0011\u0019\u0006A\u0004\r%\u0001\u0003B\u0017:\u0005;DqAa\u0003\u000b\u0001\b\u0019i\u0001\u0005\u0003.s\t\u0005\bb\u0002B/\u0015\u0001\u000f1\u0011\u0003\t\u0005[e\u0012)\u000fC\u0004\u00038*\u0001\u001da!\u0006\u0011\t5J$\u0011\u001e\u0005\b\u00073Q\u00019AB\u000e\u00031y6\u000f\u001e:vGR,(/Z\u00191!\u0011i\u0013H!<\u0002\u0019Isw\r\u0015:pIV\u001cG/M\u0019\u00161\r\u00052QFB\u0019\u0007k\u0019Id!\u0010\u0004B\r\u00153\u0011JB'\u0007#\u001a)\u0006\u0006\r\u0004$\re3QLB1\u0007K\u001aIg!\u001c\u0004r\rU4\u0011PB?\u0007\u0003\u0003B!L\u001d\u0004&AIrda\n\u0004,\r=21GB\u001c\u0007w\u0019yda\u0011\u0004H\r-3qJB*\u0013\r\u0019I\u0003\t\u0002\b)V\u0004H.Z\u00192!\r\u00015Q\u0006\u0003\u0006\u0005.\u0011\ra\u0011\t\u0004\u0001\u000eEB!\u00024\f\u0005\u0004\u0019\u0005c\u0001!\u00046\u00111\u0011qA\u0006C\u0002\r\u00032\u0001QB\u001d\t\u0019\t)d\u0003b\u0001\u0007B\u0019\u0001i!\u0010\u0005\r\u0005-4B1\u0001D!\r\u00015\u0011\t\u0003\u0007\u0003S[!\u0019A\"\u0011\u0007\u0001\u001b)\u0005\u0002\u0004\u0002p.\u0011\ra\u0011\t\u0004\u0001\u000e%CA\u0002B\u001f\u0017\t\u00071\tE\u0002A\u0007\u001b\"aAa%\f\u0005\u0004\u0019\u0005c\u0001!\u0004R\u00111!\u0011_\u0006C\u0002\r\u00032\u0001QB+\t\u0019\u00199f\u0003b\u0001\u0007\n\t1\n\u0003\u0004r\u0017\u0001\u000f11\f\t\u0005[e\u001aY\u0003\u0003\u0004u\u0017\u0001\u000f1q\f\t\u0005[e\u001ay\u0003C\u0004\u0002\u0014-\u0001\u001daa\u0019\u0011\t5J41\u0007\u0005\b\u0003\u000bZ\u00019AB4!\u0011i\u0013ha\u000e\t\u000f\u0005}4\u0002q\u0001\u0004lA!Q&OB\u001e\u0011\u001d\t\tm\u0003a\u0002\u0007_\u0002B!L\u001d\u0004@!9!1B\u0006A\u0004\rM\u0004\u0003B\u0017:\u0007\u0007BqA!\u0018\f\u0001\b\u00199\b\u0005\u0003.s\r\u001d\u0003b\u0002B\\\u0017\u0001\u000f11\u0010\t\u0005[e\u001aY\u0005C\u0004\u0004\u001a-\u0001\u001daa \u0011\t5J4q\n\u0005\b\u0007\u0007[\u00019ABC\u00031y6\u000f\u001e:vGR,(/Z\u00192!\u0011i\u0013ha\u0015\u0002\u0019Isw\r\u0015:pIV\u001cG/\r\u001a\u00165\r-5qSBN\u0007?\u001b\u0019ka*\u0004,\u000e=61WB\\\u0007w\u001byla1\u00155\r55qYBf\u0007\u001f\u001c\u0019na6\u0004\\\u000e}71]Bt\u0007W\u001cyoa=\u0011\t5J4q\u0012\t\u001c?\rE5QSBM\u0007;\u001b\tk!*\u0004*\u000e56\u0011WB[\u0007s\u001bil!1\n\u0007\rM\u0005EA\u0004UkBdW-\r\u001a\u0011\u0007\u0001\u001b9\nB\u0003C\u0019\t\u00071\tE\u0002A\u00077#QA\u001a\u0007C\u0002\r\u00032\u0001QBP\t\u0019\t9\u0001\u0004b\u0001\u0007B\u0019\u0001ia)\u0005\r\u0005UBB1\u0001D!\r\u00015q\u0015\u0003\u0007\u0003Wb!\u0019A\"\u0011\u0007\u0001\u001bY\u000b\u0002\u0004\u0002*2\u0011\ra\u0011\t\u0004\u0001\u000e=FABAx\u0019\t\u00071\tE\u0002A\u0007g#aA!\u0010\r\u0005\u0004\u0019\u0005c\u0001!\u00048\u00121!1\u0013\u0007C\u0002\r\u00032\u0001QB^\t\u0019\u0011\t\u0010\u0004b\u0001\u0007B\u0019\u0001ia0\u0005\r\r]CB1\u0001D!\r\u000151\u0019\u0003\u0007\u0007\u000bd!\u0019A\"\u0003\u00031Ca!\u001d\u0007A\u0004\r%\u0007\u0003B\u0017:\u0007+Ca\u0001\u001e\u0007A\u0004\r5\u0007\u0003B\u0017:\u00073Cq!a\u0005\r\u0001\b\u0019\t\u000e\u0005\u0003.s\ru\u0005bBA#\u0019\u0001\u000f1Q\u001b\t\u0005[e\u001a\t\u000bC\u0004\u0002\u00001\u0001\u001da!7\u0011\t5J4Q\u0015\u0005\b\u0003\u0003d\u00019ABo!\u0011i\u0013h!+\t\u000f\t-A\u0002q\u0001\u0004bB!Q&OBW\u0011\u001d\u0011i\u0006\u0004a\u0002\u0007K\u0004B!L\u001d\u00042\"9!q\u0017\u0007A\u0004\r%\b\u0003B\u0017:\u0007kCqa!\u0007\r\u0001\b\u0019i\u000f\u0005\u0003.s\re\u0006bBBB\u0019\u0001\u000f1\u0011\u001f\t\u0005[e\u001ai\fC\u0004\u0004v2\u0001\u001daa>\u0002\u0019}\u001bHO];diV\u0014X-\r\u001a\u0011\t5J4\u0011Y\u0001\r%:<\u0007K]8ek\u000e$\u0018gM\u000b\u001d\u0007{$I\u0001\"\u0004\u0005\u0012\u0011UA\u0011\u0004C\u000f\tC!)\u0003\"\u000b\u0005.\u0011EBQ\u0007C\u001d)q\u0019y\u0010\"\u0010\u0005B\u0011\u0015C\u0011\nC'\t#\")\u0006\"\u0017\u0005^\u0011\u0005DQ\rC5\t[\u0002B!L\u001d\u0005\u0002Air\u0004b\u0001\u0005\b\u0011-Aq\u0002C\n\t/!Y\u0002b\b\u0005$\u0011\u001dB1\u0006C\u0018\tg!9$C\u0002\u0005\u0006\u0001\u0012q\u0001V;qY\u0016\f4\u0007E\u0002A\t\u0013!QAQ\u0007C\u0002\r\u00032\u0001\u0011C\u0007\t\u00151WB1\u0001D!\r\u0001E\u0011\u0003\u0003\u0007\u0003\u000fi!\u0019A\"\u0011\u0007\u0001#)\u0002\u0002\u0004\u000265\u0011\ra\u0011\t\u0004\u0001\u0012eAABA6\u001b\t\u00071\tE\u0002A\t;!a!!+\u000e\u0005\u0004\u0019\u0005c\u0001!\u0005\"\u00111\u0011q^\u0007C\u0002\r\u00032\u0001\u0011C\u0013\t\u0019\u0011i$\u0004b\u0001\u0007B\u0019\u0001\t\"\u000b\u0005\r\tMUB1\u0001D!\r\u0001EQ\u0006\u0003\u0007\u0005cl!\u0019A\"\u0011\u0007\u0001#\t\u0004\u0002\u0004\u0004X5\u0011\ra\u0011\t\u0004\u0001\u0012UBABBc\u001b\t\u00071\tE\u0002A\ts!a\u0001b\u000f\u000e\u0005\u0004\u0019%!A'\t\rEl\u00019\u0001C !\u0011i\u0013\bb\u0002\t\rQl\u00019\u0001C\"!\u0011i\u0013\bb\u0003\t\u000f\u0005MQ\u0002q\u0001\u0005HA!Q&\u000fC\b\u0011\u001d\t)%\u0004a\u0002\t\u0017\u0002B!L\u001d\u0005\u0014!9\u0011qP\u0007A\u0004\u0011=\u0003\u0003B\u0017:\t/Aq!!1\u000e\u0001\b!\u0019\u0006\u0005\u0003.s\u0011m\u0001b\u0002B\u0006\u001b\u0001\u000fAq\u000b\t\u0005[e\"y\u0002C\u0004\u0003^5\u0001\u001d\u0001b\u0017\u0011\t5JD1\u0005\u0005\b\u0005ok\u00019\u0001C0!\u0011i\u0013\bb\n\t\u000f\reQ\u0002q\u0001\u0005dA!Q&\u000fC\u0016\u0011\u001d\u0019\u0019)\u0004a\u0002\tO\u0002B!L\u001d\u00050!91Q_\u0007A\u0004\u0011-\u0004\u0003B\u0017:\tgAq\u0001b\u001c\u000e\u0001\b!\t(\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\f4\u0007\u0005\u0003.s\u0011]\u0012\u0001\u0004*oOB\u0013x\u000eZ;diF\"TC\bC<\t\u0007#9\tb#\u0005\u0010\u0012MEq\u0013CN\t?#\u0019\u000bb*\u0005,\u0012=F1\u0017C\\)y!I\bb/\u0005@\u0012\rGq\u0019Cf\t\u001f$\u0019\u000eb6\u0005\\\u0012}G1\u001dCt\tW$y\u000f\u0005\u0003.s\u0011m\u0004cH\u0010\u0005~\u0011\u0005EQ\u0011CE\t\u001b#\t\n\"&\u0005\u001a\u0012uE\u0011\u0015CS\tS#i\u000b\"-\u00056&\u0019Aq\u0010\u0011\u0003\u000fQ+\b\u000f\\32iA\u0019\u0001\tb!\u0005\u000b\ts!\u0019A\"\u0011\u0007\u0001#9\tB\u0003g\u001d\t\u00071\tE\u0002A\t\u0017#a!a\u0002\u000f\u0005\u0004\u0019\u0005c\u0001!\u0005\u0010\u00121\u0011Q\u0007\bC\u0002\r\u00032\u0001\u0011CJ\t\u0019\tYG\u0004b\u0001\u0007B\u0019\u0001\tb&\u0005\r\u0005%fB1\u0001D!\r\u0001E1\u0014\u0003\u0007\u0003_t!\u0019A\"\u0011\u0007\u0001#y\n\u0002\u0004\u0003>9\u0011\ra\u0011\t\u0004\u0001\u0012\rFA\u0002BJ\u001d\t\u00071\tE\u0002A\tO#aA!=\u000f\u0005\u0004\u0019\u0005c\u0001!\u0005,\u001211q\u000b\bC\u0002\r\u00032\u0001\u0011CX\t\u0019\u0019)M\u0004b\u0001\u0007B\u0019\u0001\tb-\u0005\r\u0011mbB1\u0001D!\r\u0001Eq\u0017\u0003\u0007\tss!\u0019A\"\u0003\u00039Ca!\u001d\bA\u0004\u0011u\u0006\u0003B\u0017:\t\u0003Ca\u0001\u001e\bA\u0004\u0011\u0005\u0007\u0003B\u0017:\t\u000bCq!a\u0005\u000f\u0001\b!)\r\u0005\u0003.s\u0011%\u0005bBA#\u001d\u0001\u000fA\u0011\u001a\t\u0005[e\"i\tC\u0004\u0002\u00009\u0001\u001d\u0001\"4\u0011\t5JD\u0011\u0013\u0005\b\u0003\u0003t\u00019\u0001Ci!\u0011i\u0013\b\"&\t\u000f\t-a\u0002q\u0001\u0005VB!Q&\u000fCM\u0011\u001d\u0011iF\u0004a\u0002\t3\u0004B!L\u001d\u0005\u001e\"9!q\u0017\bA\u0004\u0011u\u0007\u0003B\u0017:\tCCqa!\u0007\u000f\u0001\b!\t\u000f\u0005\u0003.s\u0011\u0015\u0006bBBB\u001d\u0001\u000fAQ\u001d\t\u0005[e\"I\u000bC\u0004\u0004v:\u0001\u001d\u0001\";\u0011\t5JDQ\u0016\u0005\b\t_r\u00019\u0001Cw!\u0011i\u0013\b\"-\t\u000f\u0011Eh\u0002q\u0001\u0005t\u0006aql\u001d;sk\u000e$XO]32iA!Q&\u000fC[\u00031\u0011fn\u001a)s_\u0012,8\r^\u00196+\u0001\"I0\"\u0002\u0006\n\u00155Q\u0011CC\u000b\u000b3)i\"\"\t\u0006&\u0015%RQFC\u0019\u000bk)I$\"\u0010\u0015A\u0011mX\u0011IC#\u000b\u0013*i%\"\u0015\u0006V\u0015eSQLC1\u000bK*I'\"\u001c\u0006r\u0015UT\u0011\u0010\t\u0005[e\"i\u0010E\u0011 \t\u007f,\u0019!b\u0002\u0006\f\u0015=Q1CC\f\u000b7)y\"b\t\u0006(\u0015-RqFC\u001a\u000bo)Y$C\u0002\u0006\u0002\u0001\u0012q\u0001V;qY\u0016\fT\u0007E\u0002A\u000b\u000b!QAQ\bC\u0002\r\u00032\u0001QC\u0005\t\u00151wB1\u0001D!\r\u0001UQ\u0002\u0003\u0007\u0003\u000fy!\u0019A\"\u0011\u0007\u0001+\t\u0002\u0002\u0004\u00026=\u0011\ra\u0011\t\u0004\u0001\u0016UAABA6\u001f\t\u00071\tE\u0002A\u000b3!a!!+\u0010\u0005\u0004\u0019\u0005c\u0001!\u0006\u001e\u00111\u0011q^\bC\u0002\r\u00032\u0001QC\u0011\t\u0019\u0011id\u0004b\u0001\u0007B\u0019\u0001)\"\n\u0005\r\tMuB1\u0001D!\r\u0001U\u0011\u0006\u0003\u0007\u0005c|!\u0019A\"\u0011\u0007\u0001+i\u0003\u0002\u0004\u0004X=\u0011\ra\u0011\t\u0004\u0001\u0016EBABBc\u001f\t\u00071\tE\u0002A\u000bk!a\u0001b\u000f\u0010\u0005\u0004\u0019\u0005c\u0001!\u0006:\u00111A\u0011X\bC\u0002\r\u00032\u0001QC\u001f\t\u0019)yd\u0004b\u0001\u0007\n\tq\n\u0003\u0004r\u001f\u0001\u000fQ1\t\t\u0005[e*\u0019\u0001\u0003\u0004u\u001f\u0001\u000fQq\t\t\u0005[e*9\u0001C\u0004\u0002\u0014=\u0001\u001d!b\u0013\u0011\t5JT1\u0002\u0005\b\u0003\u000bz\u00019AC(!\u0011i\u0013(b\u0004\t\u000f\u0005}t\u0002q\u0001\u0006TA!Q&OC\n\u0011\u001d\t\tm\u0004a\u0002\u000b/\u0002B!L\u001d\u0006\u0018!9!1B\bA\u0004\u0015m\u0003\u0003B\u0017:\u000b7AqA!\u0018\u0010\u0001\b)y\u0006\u0005\u0003.s\u0015}\u0001b\u0002B\\\u001f\u0001\u000fQ1\r\t\u0005[e*\u0019\u0003C\u0004\u0004\u001a=\u0001\u001d!b\u001a\u0011\t5JTq\u0005\u0005\b\u0007\u0007{\u00019AC6!\u0011i\u0013(b\u000b\t\u000f\rUx\u0002q\u0001\u0006pA!Q&OC\u0018\u0011\u001d!yg\u0004a\u0002\u000bg\u0002B!L\u001d\u00064!9A\u0011_\bA\u0004\u0015]\u0004\u0003B\u0017:\u000boAq!b\u001f\u0010\u0001\b)i(\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\fT\u0007\u0005\u0003.s\u0015m\u0012\u0001\u0004*oOB\u0013x\u000eZ;diF2TCICB\u000b\u001f+\u0019*b&\u0006\u001c\u0016}U1UCT\u000bW+y+b-\u00068\u0016mVqXCb\u000b\u000f,Y\r\u0006\u0012\u0006\u0006\u0016=W1[Cl\u000b7,y.b9\u0006h\u0016-Xq^Cz\u000bo,Y0b@\u0007\u0004\u0019\u001da1\u0002\t\u0005[e*9\tE\u0012 \u000b\u0013+i)\"%\u0006\u0016\u0016eUQTCQ\u000bK+I+\",\u00062\u0016UV\u0011XC_\u000b\u0003,)-\"3\n\u0007\u0015-\u0005EA\u0004UkBdW-\r\u001c\u0011\u0007\u0001+y\tB\u0003C!\t\u00071\tE\u0002A\u000b'#QA\u001a\tC\u0002\r\u00032\u0001QCL\t\u0019\t9\u0001\u0005b\u0001\u0007B\u0019\u0001)b'\u0005\r\u0005U\u0002C1\u0001D!\r\u0001Uq\u0014\u0003\u0007\u0003W\u0002\"\u0019A\"\u0011\u0007\u0001+\u0019\u000b\u0002\u0004\u0002*B\u0011\ra\u0011\t\u0004\u0001\u0016\u001dFABAx!\t\u00071\tE\u0002A\u000bW#aA!\u0010\u0011\u0005\u0004\u0019\u0005c\u0001!\u00060\u00121!1\u0013\tC\u0002\r\u00032\u0001QCZ\t\u0019\u0011\t\u0010\u0005b\u0001\u0007B\u0019\u0001)b.\u0005\r\r]\u0003C1\u0001D!\r\u0001U1\u0018\u0003\u0007\u0007\u000b\u0004\"\u0019A\"\u0011\u0007\u0001+y\f\u0002\u0004\u0005<A\u0011\ra\u0011\t\u0004\u0001\u0016\rGA\u0002C]!\t\u00071\tE\u0002A\u000b\u000f$a!b\u0010\u0011\u0005\u0004\u0019\u0005c\u0001!\u0006L\u00121QQ\u001a\tC\u0002\r\u0013\u0011\u0001\u0015\u0005\u0007cB\u0001\u001d!\"5\u0011\t5JTQ\u0012\u0005\u0007iB\u0001\u001d!\"6\u0011\t5JT\u0011\u0013\u0005\b\u0003'\u0001\u00029ACm!\u0011i\u0013(\"&\t\u000f\u0005\u0015\u0003\u0003q\u0001\u0006^B!Q&OCM\u0011\u001d\ty\b\u0005a\u0002\u000bC\u0004B!L\u001d\u0006\u001e\"9\u0011\u0011\u0019\tA\u0004\u0015\u0015\b\u0003B\u0017:\u000bCCqAa\u0003\u0011\u0001\b)I\u000f\u0005\u0003.s\u0015\u0015\u0006b\u0002B/!\u0001\u000fQQ\u001e\t\u0005[e*I\u000bC\u0004\u00038B\u0001\u001d!\"=\u0011\t5JTQ\u0016\u0005\b\u00073\u0001\u00029AC{!\u0011i\u0013(\"-\t\u000f\r\r\u0005\u0003q\u0001\u0006zB!Q&OC[\u0011\u001d\u0019)\u0010\u0005a\u0002\u000b{\u0004B!L\u001d\u0006:\"9Aq\u000e\tA\u0004\u0019\u0005\u0001\u0003B\u0017:\u000b{Cq\u0001\"=\u0011\u0001\b1)\u0001\u0005\u0003.s\u0015\u0005\u0007bBC>!\u0001\u000fa\u0011\u0002\t\u0005[e*)\rC\u0004\u0007\u000eA\u0001\u001dAb\u0004\u0002\u0019}\u001bHO];diV\u0014X-\r\u001c\u0011\t5JT\u0011Z\u0001\r%:<\u0007K]8ek\u000e$\u0018gN\u000b%\r+1\tC\"\n\u0007*\u00195b\u0011\u0007D\u001b\rs1iD\"\u0011\u0007F\u0019%cQ\nD)\r+2IF\"\u0018\u0007bQ!cq\u0003D3\rS2iG\"\u001d\u0007v\u0019edQ\u0010DA\r\u000b3II\"$\u0007\u0012\u001aUe\u0011\u0014DO\rC3)\u000b\u0005\u0003.s\u0019e\u0001#J\u0010\u0007\u001c\u0019}a1\u0005D\u0014\rW1yCb\r\u00078\u0019mbq\bD\"\r\u000f2YEb\u0014\u0007T\u0019]c1\fD0\u0013\r1i\u0002\t\u0002\b)V\u0004H.Z\u00198!\r\u0001e\u0011\u0005\u0003\u0006\u0005F\u0011\ra\u0011\t\u0004\u0001\u001a\u0015B!\u00024\u0012\u0005\u0004\u0019\u0005c\u0001!\u0007*\u00111\u0011qA\tC\u0002\r\u00032\u0001\u0011D\u0017\t\u0019\t)$\u0005b\u0001\u0007B\u0019\u0001I\"\r\u0005\r\u0005-\u0014C1\u0001D!\r\u0001eQ\u0007\u0003\u0007\u0003S\u000b\"\u0019A\"\u0011\u0007\u00013I\u0004\u0002\u0004\u0002pF\u0011\ra\u0011\t\u0004\u0001\u001auBA\u0002B\u001f#\t\u00071\tE\u0002A\r\u0003\"aAa%\u0012\u0005\u0004\u0019\u0005c\u0001!\u0007F\u00111!\u0011_\tC\u0002\r\u00032\u0001\u0011D%\t\u0019\u00199&\u0005b\u0001\u0007B\u0019\u0001I\"\u0014\u0005\r\r\u0015\u0017C1\u0001D!\r\u0001e\u0011\u000b\u0003\u0007\tw\t\"\u0019A\"\u0011\u0007\u00013)\u0006\u0002\u0004\u0005:F\u0011\ra\u0011\t\u0004\u0001\u001aeCABC #\t\u00071\tE\u0002A\r;\"a!\"4\u0012\u0005\u0004\u0019\u0005c\u0001!\u0007b\u00111a1M\tC\u0002\r\u0013\u0011!\u0015\u0005\u0007cF\u0001\u001dAb\u001a\u0011\t5Jdq\u0004\u0005\u0007iF\u0001\u001dAb\u001b\u0011\t5Jd1\u0005\u0005\b\u0003'\t\u00029\u0001D8!\u0011i\u0013Hb\n\t\u000f\u0005\u0015\u0013\u0003q\u0001\u0007tA!Q&\u000fD\u0016\u0011\u001d\ty(\u0005a\u0002\ro\u0002B!L\u001d\u00070!9\u0011\u0011Y\tA\u0004\u0019m\u0004\u0003B\u0017:\rgAqAa\u0003\u0012\u0001\b1y\b\u0005\u0003.s\u0019]\u0002b\u0002B/#\u0001\u000fa1\u0011\t\u0005[e2Y\u0004C\u0004\u00038F\u0001\u001dAb\"\u0011\t5Jdq\b\u0005\b\u00073\t\u00029\u0001DF!\u0011i\u0013Hb\u0011\t\u000f\r\r\u0015\u0003q\u0001\u0007\u0010B!Q&\u000fD$\u0011\u001d\u0019)0\u0005a\u0002\r'\u0003B!L\u001d\u0007L!9AqN\tA\u0004\u0019]\u0005\u0003B\u0017:\r\u001fBq\u0001\"=\u0012\u0001\b1Y\n\u0005\u0003.s\u0019M\u0003bBC>#\u0001\u000faq\u0014\t\u0005[e29\u0006C\u0004\u0007\u000eE\u0001\u001dAb)\u0011\t5Jd1\f\u0005\b\rO\u000b\u00029\u0001DU\u00031y6\u000f\u001e:vGR,(/Z\u00198!\u0011i\u0013Hb\u0018\u0002\u0019Isw\r\u0015:pIV\u001cG/\r\u001d\u0016M\u0019=f1\u0018D`\r\u000749Mb3\u0007P\u001aMgq\u001bDn\r?4\u0019Ob:\u0007l\u001a=h1\u001fD|\rw4y\u0010\u0006\u0014\u00072\u001e\rqqAD\u0006\u000f\u001f9\u0019bb\u0006\b\u001c\u001d}q1ED\u0014\u000fW9ycb\r\b8\u001dmrqHD\"\u000f\u000f\u0002B!L\u001d\u00074B9sD\".\u0007:\u001auf\u0011\u0019Dc\r\u00134iM\"5\u0007V\u001aegQ\u001cDq\rK4IO\"<\u0007r\u001aUh\u0011 D\u007f\u0013\r19\f\t\u0002\b)V\u0004H.Z\u00199!\r\u0001e1\u0018\u0003\u0006\u0005J\u0011\ra\u0011\t\u0004\u0001\u001a}F!\u00024\u0013\u0005\u0004\u0019\u0005c\u0001!\u0007D\u00121\u0011q\u0001\nC\u0002\r\u00032\u0001\u0011Dd\t\u0019\t)D\u0005b\u0001\u0007B\u0019\u0001Ib3\u0005\r\u0005-$C1\u0001D!\r\u0001eq\u001a\u0003\u0007\u0003S\u0013\"\u0019A\"\u0011\u0007\u00013\u0019\u000e\u0002\u0004\u0002pJ\u0011\ra\u0011\t\u0004\u0001\u001a]GA\u0002B\u001f%\t\u00071\tE\u0002A\r7$aAa%\u0013\u0005\u0004\u0019\u0005c\u0001!\u0007`\u00121!\u0011\u001f\nC\u0002\r\u00032\u0001\u0011Dr\t\u0019\u00199F\u0005b\u0001\u0007B\u0019\u0001Ib:\u0005\r\r\u0015'C1\u0001D!\r\u0001e1\u001e\u0003\u0007\tw\u0011\"\u0019A\"\u0011\u0007\u00013y\u000f\u0002\u0004\u0005:J\u0011\ra\u0011\t\u0004\u0001\u001aMHABC %\t\u00071\tE\u0002A\ro$a!\"4\u0013\u0005\u0004\u0019\u0005c\u0001!\u0007|\u00121a1\r\nC\u0002\r\u00032\u0001\u0011D\u0000\t\u00199\tA\u0005b\u0001\u0007\n\t!\u000b\u0003\u0004r%\u0001\u000fqQ\u0001\t\u0005[e2I\f\u0003\u0004u%\u0001\u000fq\u0011\u0002\t\u0005[e2i\fC\u0004\u0002\u0014I\u0001\u001da\"\u0004\u0011\t5Jd\u0011\u0019\u0005\b\u0003\u000b\u0012\u00029AD\t!\u0011i\u0013H\"2\t\u000f\u0005}$\u0003q\u0001\b\u0016A!Q&\u000fDe\u0011\u001d\t\tM\u0005a\u0002\u000f3\u0001B!L\u001d\u0007N\"9!1\u0002\nA\u0004\u001du\u0001\u0003B\u0017:\r#DqA!\u0018\u0013\u0001\b9\t\u0003\u0005\u0003.s\u0019U\u0007b\u0002B\\%\u0001\u000fqQ\u0005\t\u0005[e2I\u000eC\u0004\u0004\u001aI\u0001\u001da\"\u000b\u0011\t5JdQ\u001c\u0005\b\u0007\u0007\u0013\u00029AD\u0017!\u0011i\u0013H\"9\t\u000f\rU(\u0003q\u0001\b2A!Q&\u000fDs\u0011\u001d!yG\u0005a\u0002\u000fk\u0001B!L\u001d\u0007j\"9A\u0011\u001f\nA\u0004\u001de\u0002\u0003B\u0017:\r[Dq!b\u001f\u0013\u0001\b9i\u0004\u0005\u0003.s\u0019E\bb\u0002D\u0007%\u0001\u000fq\u0011\t\t\u0005[e2)\u0010C\u0004\u0007(J\u0001\u001da\"\u0012\u0011\t5Jd\u0011 \u0005\b\u000f\u0013\u0012\u00029AD&\u00031y6\u000f\u001e:vGR,(/Z\u00199!\u0011i\u0013H\"@\u0002\u0019Isw\r\u0015:pIV\u001cG/M\u001d\u0016Q\u001dEsQLD1\u000fK:Ig\"\u001c\br\u001dUt\u0011PD?\u000f\u0003;)i\"#\b\u000e\u001eEuQSDM\u000f;;\tk\"*\u0015Q\u001dMs\u0011VDW\u000fc;)l\"/\b>\u001e\u0005wQYDe\u000f\u001b<\tn\"6\bZ\u001euw\u0011]Ds\u000fS<io\"=\u0011\t5JtQ\u000b\t*?\u001d]s1LD0\u000fG:9gb\u001b\bp\u001dMtqOD>\u000f\u007f:\u0019ib\"\b\f\u001e=u1SDL\u000f7;yjb)\n\u0007\u001de\u0003EA\u0004UkBdW-M\u001d\u0011\u0007\u0001;i\u0006B\u0003C'\t\u00071\tE\u0002A\u000fC\"QAZ\nC\u0002\r\u00032\u0001QD3\t\u0019\t9a\u0005b\u0001\u0007B\u0019\u0001i\"\u001b\u0005\r\u0005U2C1\u0001D!\r\u0001uQ\u000e\u0003\u0007\u0003W\u001a\"\u0019A\"\u0011\u0007\u0001;\t\b\u0002\u0004\u0002*N\u0011\ra\u0011\t\u0004\u0001\u001eUDABAx'\t\u00071\tE\u0002A\u000fs\"aA!\u0010\u0014\u0005\u0004\u0019\u0005c\u0001!\b~\u00111!1S\nC\u0002\r\u00032\u0001QDA\t\u0019\u0011\tp\u0005b\u0001\u0007B\u0019\u0001i\"\"\u0005\r\r]3C1\u0001D!\r\u0001u\u0011\u0012\u0003\u0007\u0007\u000b\u001c\"\u0019A\"\u0011\u0007\u0001;i\t\u0002\u0004\u0005<M\u0011\ra\u0011\t\u0004\u0001\u001eEEA\u0002C]'\t\u00071\tE\u0002A\u000f+#a!b\u0010\u0014\u0005\u0004\u0019\u0005c\u0001!\b\u001a\u00121QQZ\nC\u0002\r\u00032\u0001QDO\t\u00191\u0019g\u0005b\u0001\u0007B\u0019\u0001i\")\u0005\r\u001d\u00051C1\u0001D!\r\u0001uQ\u0015\u0003\u0007\u000fO\u001b\"\u0019A\"\u0003\u0003MCa!]\nA\u0004\u001d-\u0006\u0003B\u0017:\u000f7Ba\u0001^\nA\u0004\u001d=\u0006\u0003B\u0017:\u000f?Bq!a\u0005\u0014\u0001\b9\u0019\f\u0005\u0003.s\u001d\r\u0004bBA#'\u0001\u000fqq\u0017\t\u0005[e:9\u0007C\u0004\u0002\u0000M\u0001\u001dab/\u0011\t5Jt1\u000e\u0005\b\u0003\u0003\u001c\u00029AD`!\u0011i\u0013hb\u001c\t\u000f\t-1\u0003q\u0001\bDB!Q&OD:\u0011\u001d\u0011if\u0005a\u0002\u000f\u000f\u0004B!L\u001d\bx!9!qW\nA\u0004\u001d-\u0007\u0003B\u0017:\u000fwBqa!\u0007\u0014\u0001\b9y\r\u0005\u0003.s\u001d}\u0004bBBB'\u0001\u000fq1\u001b\t\u0005[e:\u0019\tC\u0004\u0004vN\u0001\u001dab6\u0011\t5Jtq\u0011\u0005\b\t_\u001a\u00029ADn!\u0011i\u0013hb#\t\u000f\u0011E8\u0003q\u0001\b`B!Q&ODH\u0011\u001d)Yh\u0005a\u0002\u000fG\u0004B!L\u001d\b\u0014\"9aQB\nA\u0004\u001d\u001d\b\u0003B\u0017:\u000f/CqAb*\u0014\u0001\b9Y\u000f\u0005\u0003.s\u001dm\u0005bBD%'\u0001\u000fqq\u001e\t\u0005[e:y\nC\u0004\btN\u0001\u001da\">\u0002\u0019}\u001bHO];diV\u0014X-M\u001d\u0011\t5Jt1U\u0001\r%:<\u0007K]8ek\u000e$(\u0007M\u000b+\u000fwD9\u0001c\u0003\t\u0010!M\u0001r\u0003E\u000e\u0011?A\u0019\u0003c\n\t,!=\u00022\u0007E\u001c\u0011wAy\u0004c\u0011\tH!-\u0003r\nE*)):i\u0010c\u0016\t\\!}\u00032\rE4\u0011WBy\u0007c\u001d\tx!m\u0004r\u0010EB\u0011\u000fCY\tc$\t\u0014\"]\u00052\u0014EP\u0011G\u0003B!L\u001d\b\u0000BYs\u0004#\u0001\t\u0006!%\u0001R\u0002E\t\u0011+AI\u0002#\b\t\"!\u0015\u0002\u0012\u0006E\u0017\u0011cA)\u0004#\u000f\t>!\u0005\u0003R\tE%\u0011\u001bB\t&C\u0002\t\u0004\u0001\u0012q\u0001V;qY\u0016\u0014\u0004\u0007E\u0002A\u0011\u000f!QA\u0011\u000bC\u0002\r\u00032\u0001\u0011E\u0006\t\u00151GC1\u0001D!\r\u0001\u0005r\u0002\u0003\u0007\u0003\u000f!\"\u0019A\"\u0011\u0007\u0001C\u0019\u0002\u0002\u0004\u00026Q\u0011\ra\u0011\t\u0004\u0001\"]AABA6)\t\u00071\tE\u0002A\u00117!a!!+\u0015\u0005\u0004\u0019\u0005c\u0001!\t \u00111\u0011q\u001e\u000bC\u0002\r\u00032\u0001\u0011E\u0012\t\u0019\u0011i\u0004\u0006b\u0001\u0007B\u0019\u0001\tc\n\u0005\r\tMEC1\u0001D!\r\u0001\u00052\u0006\u0003\u0007\u0005c$\"\u0019A\"\u0011\u0007\u0001Cy\u0003\u0002\u0004\u0004XQ\u0011\ra\u0011\t\u0004\u0001\"MBABBc)\t\u00071\tE\u0002A\u0011o!a\u0001b\u000f\u0015\u0005\u0004\u0019\u0005c\u0001!\t<\u00111A\u0011\u0018\u000bC\u0002\r\u00032\u0001\u0011E \t\u0019)y\u0004\u0006b\u0001\u0007B\u0019\u0001\tc\u0011\u0005\r\u00155GC1\u0001D!\r\u0001\u0005r\t\u0003\u0007\rG\"\"\u0019A\"\u0011\u0007\u0001CY\u0005\u0002\u0004\b\u0002Q\u0011\ra\u0011\t\u0004\u0001\"=CABDT)\t\u00071\tE\u0002A\u0011'\"a\u0001#\u0016\u0015\u0005\u0004\u0019%!\u0001+\t\rE$\u00029\u0001E-!\u0011i\u0013\b#\u0002\t\rQ$\u00029\u0001E/!\u0011i\u0013\b#\u0003\t\u000f\u0005MA\u0003q\u0001\tbA!Q&\u000fE\u0007\u0011\u001d\t)\u0005\u0006a\u0002\u0011K\u0002B!L\u001d\t\u0012!9\u0011q\u0010\u000bA\u0004!%\u0004\u0003B\u0017:\u0011+Aq!!1\u0015\u0001\bAi\u0007\u0005\u0003.s!e\u0001b\u0002B\u0006)\u0001\u000f\u0001\u0012\u000f\t\u0005[eBi\u0002C\u0004\u0003^Q\u0001\u001d\u0001#\u001e\u0011\t5J\u0004\u0012\u0005\u0005\b\u0005o#\u00029\u0001E=!\u0011i\u0013\b#\n\t\u000f\reA\u0003q\u0001\t~A!Q&\u000fE\u0015\u0011\u001d\u0019\u0019\t\u0006a\u0002\u0011\u0003\u0003B!L\u001d\t.!91Q\u001f\u000bA\u0004!\u0015\u0005\u0003B\u0017:\u0011cAq\u0001b\u001c\u0015\u0001\bAI\t\u0005\u0003.s!U\u0002b\u0002Cy)\u0001\u000f\u0001R\u0012\t\u0005[eBI\u0004C\u0004\u0006|Q\u0001\u001d\u0001#%\u0011\t5J\u0004R\b\u0005\b\r\u001b!\u00029\u0001EK!\u0011i\u0013\b#\u0011\t\u000f\u0019\u001dF\u0003q\u0001\t\u001aB!Q&\u000fE#\u0011\u001d9I\u0005\u0006a\u0002\u0011;\u0003B!L\u001d\tJ!9q1\u001f\u000bA\u0004!\u0005\u0006\u0003B\u0017:\u0011\u001bBq\u0001#*\u0015\u0001\bA9+\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\u0014\u0004\u0007\u0005\u0003.s!E\u0013\u0001\u0004*oOB\u0013x\u000eZ;diJ\nT\u0003\fEW\u0011sCi\f#1\tF\"%\u0007R\u001aEi\u0011+DI\u000e#8\tb\"\u0015\b\u0012\u001eEw\u0011cD)\u0010#?\t~&\u0005\u0011RAE\u0005)1By+#\u0004\n\u0012%U\u0011\u0012DE\u000f\u0013CI)##\u000b\n.%E\u0012RGE\u001d\u0013{I\t%#\u0012\nJ%5\u0013\u0012KE+\u00133Ji\u0006\u0005\u0003.s!E\u0006#L\u0010\t4\"]\u00062\u0018E`\u0011\u0007D9\rc3\tP\"M\u0007r\u001bEn\u0011?D\u0019\u000fc:\tl\"=\b2\u001fE|\u0011wDy0c\u0001\n\b%\u0019\u0001R\u0017\u0011\u0003\u000fQ+\b\u000f\\33cA\u0019\u0001\t#/\u0005\u000b\t+\"\u0019A\"\u0011\u0007\u0001Ci\fB\u0003g+\t\u00071\tE\u0002A\u0011\u0003$a!a\u0002\u0016\u0005\u0004\u0019\u0005c\u0001!\tF\u00121\u0011QG\u000bC\u0002\r\u00032\u0001\u0011Ee\t\u0019\tY'\u0006b\u0001\u0007B\u0019\u0001\t#4\u0005\r\u0005%VC1\u0001D!\r\u0001\u0005\u0012\u001b\u0003\u0007\u0003_,\"\u0019A\"\u0011\u0007\u0001C)\u000e\u0002\u0004\u0003>U\u0011\ra\u0011\t\u0004\u0001\"eGA\u0002BJ+\t\u00071\tE\u0002A\u0011;$aA!=\u0016\u0005\u0004\u0019\u0005c\u0001!\tb\u001211qK\u000bC\u0002\r\u00032\u0001\u0011Es\t\u0019\u0019)-\u0006b\u0001\u0007B\u0019\u0001\t#;\u0005\r\u0011mRC1\u0001D!\r\u0001\u0005R\u001e\u0003\u0007\ts+\"\u0019A\"\u0011\u0007\u0001C\t\u0010\u0002\u0004\u0006@U\u0011\ra\u0011\t\u0004\u0001\"UHABCg+\t\u00071\tE\u0002A\u0011s$aAb\u0019\u0016\u0005\u0004\u0019\u0005c\u0001!\t~\u00121q\u0011A\u000bC\u0002\r\u00032\u0001QE\u0001\t\u001999+\u0006b\u0001\u0007B\u0019\u0001)#\u0002\u0005\r!USC1\u0001D!\r\u0001\u0015\u0012\u0002\u0003\u0007\u0013\u0017)\"\u0019A\"\u0003\u0003UCa!]\u000bA\u0004%=\u0001\u0003B\u0017:\u0011oCa\u0001^\u000bA\u0004%M\u0001\u0003B\u0017:\u0011wCq!a\u0005\u0016\u0001\bI9\u0002\u0005\u0003.s!}\u0006bBA#+\u0001\u000f\u00112\u0004\t\u0005[eB\u0019\rC\u0004\u0002\u0000U\u0001\u001d!c\b\u0011\t5J\u0004r\u0019\u0005\b\u0003\u0003,\u00029AE\u0012!\u0011i\u0013\bc3\t\u000f\t-Q\u0003q\u0001\n(A!Q&\u000fEh\u0011\u001d\u0011i&\u0006a\u0002\u0013W\u0001B!L\u001d\tT\"9!qW\u000bA\u0004%=\u0002\u0003B\u0017:\u0011/Dqa!\u0007\u0016\u0001\bI\u0019\u0004\u0005\u0003.s!m\u0007bBBB+\u0001\u000f\u0011r\u0007\t\u0005[eBy\u000eC\u0004\u0004vV\u0001\u001d!c\u000f\u0011\t5J\u00042\u001d\u0005\b\t_*\u00029AE !\u0011i\u0013\bc:\t\u000f\u0011EX\u0003q\u0001\nDA!Q&\u000fEv\u0011\u001d)Y(\u0006a\u0002\u0013\u000f\u0002B!L\u001d\tp\"9aQB\u000bA\u0004%-\u0003\u0003B\u0017:\u0011gDqAb*\u0016\u0001\bIy\u0005\u0005\u0003.s!]\bbBD%+\u0001\u000f\u00112\u000b\t\u0005[eBY\u0010C\u0004\btV\u0001\u001d!c\u0016\u0011\t5J\u0004r \u0005\b\u0011K+\u00029AE.!\u0011i\u0013(c\u0001\t\u000f%}S\u0003q\u0001\nb\u0005aql\u001d;sk\u000e$XO]33cA!Q&OE\u0004\u00031\u0011fn\u001a)s_\u0012,8\r\u001e\u001a3+9J9'c\u001d\nx%m\u0014rPEB\u0013\u000fKY)c$\n\u0014&]\u00152TEP\u0013GK9+c+\n0&M\u0016rWE^\u0013\u007fK\u0019-c2\u0015]%%\u00142ZEh\u0013'L9.c7\n`&\r\u0018r]Ev\u0013_L\u00190c>\n|&}(2\u0001F\u0004\u0015\u0017QyAc\u0005\u000b\u0018)m!r\u0004\t\u0005[eJY\u0007E\u0018 \u0013[J\t(#\u001e\nz%u\u0014\u0012QEC\u0013\u0013Ki)#%\n\u0016&e\u0015RTEQ\u0013KKI+#,\n2&U\u0016\u0012XE_\u0013\u0003L)-C\u0002\np\u0001\u0012q\u0001V;qY\u0016\u0014$\u0007E\u0002A\u0013g\"QA\u0011\fC\u0002\r\u00032\u0001QE<\t\u00151gC1\u0001D!\r\u0001\u00152\u0010\u0003\u0007\u0003\u000f1\"\u0019A\"\u0011\u0007\u0001Ky\b\u0002\u0004\u00026Y\u0011\ra\u0011\t\u0004\u0001&\rEABA6-\t\u00071\tE\u0002A\u0013\u000f#a!!+\u0017\u0005\u0004\u0019\u0005c\u0001!\n\f\u00121\u0011q\u001e\fC\u0002\r\u00032\u0001QEH\t\u0019\u0011iD\u0006b\u0001\u0007B\u0019\u0001)c%\u0005\r\tMeC1\u0001D!\r\u0001\u0015r\u0013\u0003\u0007\u0005c4\"\u0019A\"\u0011\u0007\u0001KY\n\u0002\u0004\u0004XY\u0011\ra\u0011\t\u0004\u0001&}EABBc-\t\u00071\tE\u0002A\u0013G#a\u0001b\u000f\u0017\u0005\u0004\u0019\u0005c\u0001!\n(\u00121A\u0011\u0018\fC\u0002\r\u00032\u0001QEV\t\u0019)yD\u0006b\u0001\u0007B\u0019\u0001)c,\u0005\r\u00155gC1\u0001D!\r\u0001\u00152\u0017\u0003\u0007\rG2\"\u0019A\"\u0011\u0007\u0001K9\f\u0002\u0004\b\u0002Y\u0011\ra\u0011\t\u0004\u0001&mFABDT-\t\u00071\tE\u0002A\u0013\u007f#a\u0001#\u0016\u0017\u0005\u0004\u0019\u0005c\u0001!\nD\u00121\u00112\u0002\fC\u0002\r\u00032\u0001QEd\t\u0019IIM\u0006b\u0001\u0007\n\ta\u000b\u0003\u0004r-\u0001\u000f\u0011R\u001a\t\u0005[eJ\t\b\u0003\u0004u-\u0001\u000f\u0011\u0012\u001b\t\u0005[eJ)\bC\u0004\u0002\u0014Y\u0001\u001d!#6\u0011\t5J\u0014\u0012\u0010\u0005\b\u0003\u000b2\u00029AEm!\u0011i\u0013(# \t\u000f\u0005}d\u0003q\u0001\n^B!Q&OEA\u0011\u001d\t\tM\u0006a\u0002\u0013C\u0004B!L\u001d\n\u0006\"9!1\u0002\fA\u0004%\u0015\b\u0003B\u0017:\u0013\u0013CqA!\u0018\u0017\u0001\bII\u000f\u0005\u0003.s%5\u0005b\u0002B\\-\u0001\u000f\u0011R\u001e\t\u0005[eJ\t\nC\u0004\u0004\u001aY\u0001\u001d!#=\u0011\t5J\u0014R\u0013\u0005\b\u0007\u00073\u00029AE{!\u0011i\u0013(#'\t\u000f\rUh\u0003q\u0001\nzB!Q&OEO\u0011\u001d!yG\u0006a\u0002\u0013{\u0004B!L\u001d\n\"\"9A\u0011\u001f\fA\u0004)\u0005\u0001\u0003B\u0017:\u0013KCq!b\u001f\u0017\u0001\bQ)\u0001\u0005\u0003.s%%\u0006b\u0002D\u0007-\u0001\u000f!\u0012\u0002\t\u0005[eJi\u000bC\u0004\u0007(Z\u0001\u001dA#\u0004\u0011\t5J\u0014\u0012\u0017\u0005\b\u000f\u00132\u00029\u0001F\t!\u0011i\u0013(#.\t\u000f\u001dMh\u0003q\u0001\u000b\u0016A!Q&OE]\u0011\u001dA)K\u0006a\u0002\u00153\u0001B!L\u001d\n>\"9\u0011r\f\fA\u0004)u\u0001\u0003B\u0017:\u0013\u0003DqA#\t\u0017\u0001\bQ\u0019#\u0001\u0007`gR\u0014Xo\u0019;ve\u0016\u0014$\u0007\u0005\u0003.s%\u0015\u0007"
)
public interface RngProductInstances {
   // $FF: synthetic method
   static Rng RngProduct2$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2(_structure1, _structure2);
   }

   default Rng RngProduct2(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2.negate$(this, x0);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2.zero$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$186;
            this.structure2 = _structure2$186;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct3$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3) {
      return $this.RngProduct3(_structure1, _structure2, _structure3);
   }

   default Rng RngProduct3(final Rng _structure1, final Rng _structure2, final Rng _structure3) {
      return new RngProduct3(_structure1, _structure2, _structure3) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;

         public Tuple3 negate(final Tuple3 x0) {
            return RngProduct3.negate$(this, x0);
         }

         public Tuple3 zero() {
            return SemiringProduct3.zero$(this);
         }

         public Tuple3 plus(final Tuple3 x0, final Tuple3 x1) {
            return SemiringProduct3.plus$(this, x0, x1);
         }

         public Tuple3 times(final Tuple3 x0, final Tuple3 x1) {
            return SemiringProduct3.times$(this, x0, x1);
         }

         public Tuple3 pow(final Tuple3 x0, final int x1) {
            return SemiringProduct3.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct3.$init$(this);
            RngProduct3.$init$(this);
            this.structure1 = _structure1$187;
            this.structure2 = _structure2$187;
            this.structure3 = _structure3$101;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct4$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4) {
      return $this.RngProduct4(_structure1, _structure2, _structure3, _structure4);
   }

   default Rng RngProduct4(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4) {
      return new RngProduct4(_structure1, _structure2, _structure3, _structure4) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;

         public Tuple4 negate(final Tuple4 x0) {
            return RngProduct4.negate$(this, x0);
         }

         public Tuple4 zero() {
            return SemiringProduct4.zero$(this);
         }

         public Tuple4 plus(final Tuple4 x0, final Tuple4 x1) {
            return SemiringProduct4.plus$(this, x0, x1);
         }

         public Tuple4 times(final Tuple4 x0, final Tuple4 x1) {
            return SemiringProduct4.times$(this, x0, x1);
         }

         public Tuple4 pow(final Tuple4 x0, final int x1) {
            return SemiringProduct4.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct4.$init$(this);
            RngProduct4.$init$(this);
            this.structure1 = _structure1$188;
            this.structure2 = _structure2$188;
            this.structure3 = _structure3$102;
            this.structure4 = _structure4$96;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct5$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5) {
      return $this.RngProduct5(_structure1, _structure2, _structure3, _structure4, _structure5);
   }

   default Rng RngProduct5(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5) {
      return new RngProduct5(_structure1, _structure2, _structure3, _structure4, _structure5) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;

         public Tuple5 negate(final Tuple5 x0) {
            return RngProduct5.negate$(this, x0);
         }

         public Tuple5 zero() {
            return SemiringProduct5.zero$(this);
         }

         public Tuple5 plus(final Tuple5 x0, final Tuple5 x1) {
            return SemiringProduct5.plus$(this, x0, x1);
         }

         public Tuple5 times(final Tuple5 x0, final Tuple5 x1) {
            return SemiringProduct5.times$(this, x0, x1);
         }

         public Tuple5 pow(final Tuple5 x0, final int x1) {
            return SemiringProduct5.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct5.$init$(this);
            RngProduct5.$init$(this);
            this.structure1 = _structure1$189;
            this.structure2 = _structure2$189;
            this.structure3 = _structure3$103;
            this.structure4 = _structure4$97;
            this.structure5 = _structure5$91;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct6$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6) {
      return $this.RngProduct6(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6);
   }

   default Rng RngProduct6(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6) {
      return new RngProduct6(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;

         public Tuple6 negate(final Tuple6 x0) {
            return RngProduct6.negate$(this, x0);
         }

         public Tuple6 zero() {
            return SemiringProduct6.zero$(this);
         }

         public Tuple6 plus(final Tuple6 x0, final Tuple6 x1) {
            return SemiringProduct6.plus$(this, x0, x1);
         }

         public Tuple6 times(final Tuple6 x0, final Tuple6 x1) {
            return SemiringProduct6.times$(this, x0, x1);
         }

         public Tuple6 pow(final Tuple6 x0, final int x1) {
            return SemiringProduct6.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct6.$init$(this);
            RngProduct6.$init$(this);
            this.structure1 = _structure1$190;
            this.structure2 = _structure2$190;
            this.structure3 = _structure3$104;
            this.structure4 = _structure4$98;
            this.structure5 = _structure5$92;
            this.structure6 = _structure6$86;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct7$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7) {
      return $this.RngProduct7(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7);
   }

   default Rng RngProduct7(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7) {
      return new RngProduct7(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;

         public Tuple7 negate(final Tuple7 x0) {
            return RngProduct7.negate$(this, x0);
         }

         public Tuple7 zero() {
            return SemiringProduct7.zero$(this);
         }

         public Tuple7 plus(final Tuple7 x0, final Tuple7 x1) {
            return SemiringProduct7.plus$(this, x0, x1);
         }

         public Tuple7 times(final Tuple7 x0, final Tuple7 x1) {
            return SemiringProduct7.times$(this, x0, x1);
         }

         public Tuple7 pow(final Tuple7 x0, final int x1) {
            return SemiringProduct7.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct7.$init$(this);
            RngProduct7.$init$(this);
            this.structure1 = _structure1$191;
            this.structure2 = _structure2$191;
            this.structure3 = _structure3$105;
            this.structure4 = _structure4$99;
            this.structure5 = _structure5$93;
            this.structure6 = _structure6$87;
            this.structure7 = _structure7$81;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct8$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8) {
      return $this.RngProduct8(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8);
   }

   default Rng RngProduct8(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8) {
      return new RngProduct8(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;

         public Tuple8 negate(final Tuple8 x0) {
            return RngProduct8.negate$(this, x0);
         }

         public Tuple8 zero() {
            return SemiringProduct8.zero$(this);
         }

         public Tuple8 plus(final Tuple8 x0, final Tuple8 x1) {
            return SemiringProduct8.plus$(this, x0, x1);
         }

         public Tuple8 times(final Tuple8 x0, final Tuple8 x1) {
            return SemiringProduct8.times$(this, x0, x1);
         }

         public Tuple8 pow(final Tuple8 x0, final int x1) {
            return SemiringProduct8.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct8.$init$(this);
            RngProduct8.$init$(this);
            this.structure1 = _structure1$192;
            this.structure2 = _structure2$192;
            this.structure3 = _structure3$106;
            this.structure4 = _structure4$100;
            this.structure5 = _structure5$94;
            this.structure6 = _structure6$88;
            this.structure7 = _structure7$82;
            this.structure8 = _structure8$76;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct9$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9) {
      return $this.RngProduct9(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9);
   }

   default Rng RngProduct9(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9) {
      return new RngProduct9(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;

         public Tuple9 negate(final Tuple9 x0) {
            return RngProduct9.negate$(this, x0);
         }

         public Tuple9 zero() {
            return SemiringProduct9.zero$(this);
         }

         public Tuple9 plus(final Tuple9 x0, final Tuple9 x1) {
            return SemiringProduct9.plus$(this, x0, x1);
         }

         public Tuple9 times(final Tuple9 x0, final Tuple9 x1) {
            return SemiringProduct9.times$(this, x0, x1);
         }

         public Tuple9 pow(final Tuple9 x0, final int x1) {
            return SemiringProduct9.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct9.$init$(this);
            RngProduct9.$init$(this);
            this.structure1 = _structure1$193;
            this.structure2 = _structure2$193;
            this.structure3 = _structure3$107;
            this.structure4 = _structure4$101;
            this.structure5 = _structure5$95;
            this.structure6 = _structure6$89;
            this.structure7 = _structure7$83;
            this.structure8 = _structure8$77;
            this.structure9 = _structure9$71;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct10$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10) {
      return $this.RngProduct10(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10);
   }

   default Rng RngProduct10(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10) {
      return new RngProduct10(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;

         public Tuple10 negate(final Tuple10 x0) {
            return RngProduct10.negate$(this, x0);
         }

         public Tuple10 zero() {
            return SemiringProduct10.zero$(this);
         }

         public Tuple10 plus(final Tuple10 x0, final Tuple10 x1) {
            return SemiringProduct10.plus$(this, x0, x1);
         }

         public Tuple10 times(final Tuple10 x0, final Tuple10 x1) {
            return SemiringProduct10.times$(this, x0, x1);
         }

         public Tuple10 pow(final Tuple10 x0, final int x1) {
            return SemiringProduct10.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct10.$init$(this);
            RngProduct10.$init$(this);
            this.structure1 = _structure1$194;
            this.structure2 = _structure2$194;
            this.structure3 = _structure3$108;
            this.structure4 = _structure4$102;
            this.structure5 = _structure5$96;
            this.structure6 = _structure6$90;
            this.structure7 = _structure7$84;
            this.structure8 = _structure8$78;
            this.structure9 = _structure9$72;
            this.structure10 = _structure10$66;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct11$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11) {
      return $this.RngProduct11(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11);
   }

   default Rng RngProduct11(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11) {
      return new RngProduct11(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;
         private final Rng structure11;

         public Tuple11 negate(final Tuple11 x0) {
            return RngProduct11.negate$(this, x0);
         }

         public Tuple11 zero() {
            return SemiringProduct11.zero$(this);
         }

         public Tuple11 plus(final Tuple11 x0, final Tuple11 x1) {
            return SemiringProduct11.plus$(this, x0, x1);
         }

         public Tuple11 times(final Tuple11 x0, final Tuple11 x1) {
            return SemiringProduct11.times$(this, x0, x1);
         }

         public Tuple11 pow(final Tuple11 x0, final int x1) {
            return SemiringProduct11.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public Rng structure11() {
            return this.structure11;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct11.$init$(this);
            RngProduct11.$init$(this);
            this.structure1 = _structure1$195;
            this.structure2 = _structure2$195;
            this.structure3 = _structure3$109;
            this.structure4 = _structure4$103;
            this.structure5 = _structure5$97;
            this.structure6 = _structure6$91;
            this.structure7 = _structure7$85;
            this.structure8 = _structure8$79;
            this.structure9 = _structure9$73;
            this.structure10 = _structure10$67;
            this.structure11 = _structure11$61;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct12$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12) {
      return $this.RngProduct12(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12);
   }

   default Rng RngProduct12(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12) {
      return new RngProduct12(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;
         private final Rng structure11;
         private final Rng structure12;

         public Tuple12 negate(final Tuple12 x0) {
            return RngProduct12.negate$(this, x0);
         }

         public Tuple12 zero() {
            return SemiringProduct12.zero$(this);
         }

         public Tuple12 plus(final Tuple12 x0, final Tuple12 x1) {
            return SemiringProduct12.plus$(this, x0, x1);
         }

         public Tuple12 times(final Tuple12 x0, final Tuple12 x1) {
            return SemiringProduct12.times$(this, x0, x1);
         }

         public Tuple12 pow(final Tuple12 x0, final int x1) {
            return SemiringProduct12.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public Rng structure11() {
            return this.structure11;
         }

         public Rng structure12() {
            return this.structure12;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct12.$init$(this);
            RngProduct12.$init$(this);
            this.structure1 = _structure1$196;
            this.structure2 = _structure2$196;
            this.structure3 = _structure3$110;
            this.structure4 = _structure4$104;
            this.structure5 = _structure5$98;
            this.structure6 = _structure6$92;
            this.structure7 = _structure7$86;
            this.structure8 = _structure8$80;
            this.structure9 = _structure9$74;
            this.structure10 = _structure10$68;
            this.structure11 = _structure11$62;
            this.structure12 = _structure12$56;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct13$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13) {
      return $this.RngProduct13(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13);
   }

   default Rng RngProduct13(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13) {
      return new RngProduct13(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;
         private final Rng structure11;
         private final Rng structure12;
         private final Rng structure13;

         public Tuple13 negate(final Tuple13 x0) {
            return RngProduct13.negate$(this, x0);
         }

         public Tuple13 zero() {
            return SemiringProduct13.zero$(this);
         }

         public Tuple13 plus(final Tuple13 x0, final Tuple13 x1) {
            return SemiringProduct13.plus$(this, x0, x1);
         }

         public Tuple13 times(final Tuple13 x0, final Tuple13 x1) {
            return SemiringProduct13.times$(this, x0, x1);
         }

         public Tuple13 pow(final Tuple13 x0, final int x1) {
            return SemiringProduct13.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public Rng structure11() {
            return this.structure11;
         }

         public Rng structure12() {
            return this.structure12;
         }

         public Rng structure13() {
            return this.structure13;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct13.$init$(this);
            RngProduct13.$init$(this);
            this.structure1 = _structure1$197;
            this.structure2 = _structure2$197;
            this.structure3 = _structure3$111;
            this.structure4 = _structure4$105;
            this.structure5 = _structure5$99;
            this.structure6 = _structure6$93;
            this.structure7 = _structure7$87;
            this.structure8 = _structure8$81;
            this.structure9 = _structure9$75;
            this.structure10 = _structure10$69;
            this.structure11 = _structure11$63;
            this.structure12 = _structure12$57;
            this.structure13 = _structure13$51;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct14$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14) {
      return $this.RngProduct14(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14);
   }

   default Rng RngProduct14(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14) {
      return new RngProduct14(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;
         private final Rng structure11;
         private final Rng structure12;
         private final Rng structure13;
         private final Rng structure14;

         public Tuple14 negate(final Tuple14 x0) {
            return RngProduct14.negate$(this, x0);
         }

         public Tuple14 zero() {
            return SemiringProduct14.zero$(this);
         }

         public Tuple14 plus(final Tuple14 x0, final Tuple14 x1) {
            return SemiringProduct14.plus$(this, x0, x1);
         }

         public Tuple14 times(final Tuple14 x0, final Tuple14 x1) {
            return SemiringProduct14.times$(this, x0, x1);
         }

         public Tuple14 pow(final Tuple14 x0, final int x1) {
            return SemiringProduct14.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public Rng structure11() {
            return this.structure11;
         }

         public Rng structure12() {
            return this.structure12;
         }

         public Rng structure13() {
            return this.structure13;
         }

         public Rng structure14() {
            return this.structure14;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct14.$init$(this);
            RngProduct14.$init$(this);
            this.structure1 = _structure1$198;
            this.structure2 = _structure2$198;
            this.structure3 = _structure3$112;
            this.structure4 = _structure4$106;
            this.structure5 = _structure5$100;
            this.structure6 = _structure6$94;
            this.structure7 = _structure7$88;
            this.structure8 = _structure8$82;
            this.structure9 = _structure9$76;
            this.structure10 = _structure10$70;
            this.structure11 = _structure11$64;
            this.structure12 = _structure12$58;
            this.structure13 = _structure13$52;
            this.structure14 = _structure14$46;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct15$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15) {
      return $this.RngProduct15(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15);
   }

   default Rng RngProduct15(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15) {
      return new RngProduct15(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;
         private final Rng structure11;
         private final Rng structure12;
         private final Rng structure13;
         private final Rng structure14;
         private final Rng structure15;

         public Tuple15 negate(final Tuple15 x0) {
            return RngProduct15.negate$(this, x0);
         }

         public Tuple15 zero() {
            return SemiringProduct15.zero$(this);
         }

         public Tuple15 plus(final Tuple15 x0, final Tuple15 x1) {
            return SemiringProduct15.plus$(this, x0, x1);
         }

         public Tuple15 times(final Tuple15 x0, final Tuple15 x1) {
            return SemiringProduct15.times$(this, x0, x1);
         }

         public Tuple15 pow(final Tuple15 x0, final int x1) {
            return SemiringProduct15.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public Rng structure11() {
            return this.structure11;
         }

         public Rng structure12() {
            return this.structure12;
         }

         public Rng structure13() {
            return this.structure13;
         }

         public Rng structure14() {
            return this.structure14;
         }

         public Rng structure15() {
            return this.structure15;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct15.$init$(this);
            RngProduct15.$init$(this);
            this.structure1 = _structure1$199;
            this.structure2 = _structure2$199;
            this.structure3 = _structure3$113;
            this.structure4 = _structure4$107;
            this.structure5 = _structure5$101;
            this.structure6 = _structure6$95;
            this.structure7 = _structure7$89;
            this.structure8 = _structure8$83;
            this.structure9 = _structure9$77;
            this.structure10 = _structure10$71;
            this.structure11 = _structure11$65;
            this.structure12 = _structure12$59;
            this.structure13 = _structure13$53;
            this.structure14 = _structure14$47;
            this.structure15 = _structure15$41;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct16$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16) {
      return $this.RngProduct16(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16);
   }

   default Rng RngProduct16(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16) {
      return new RngProduct16(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;
         private final Rng structure11;
         private final Rng structure12;
         private final Rng structure13;
         private final Rng structure14;
         private final Rng structure15;
         private final Rng structure16;

         public Tuple16 negate(final Tuple16 x0) {
            return RngProduct16.negate$(this, x0);
         }

         public Tuple16 zero() {
            return SemiringProduct16.zero$(this);
         }

         public Tuple16 plus(final Tuple16 x0, final Tuple16 x1) {
            return SemiringProduct16.plus$(this, x0, x1);
         }

         public Tuple16 times(final Tuple16 x0, final Tuple16 x1) {
            return SemiringProduct16.times$(this, x0, x1);
         }

         public Tuple16 pow(final Tuple16 x0, final int x1) {
            return SemiringProduct16.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public Rng structure11() {
            return this.structure11;
         }

         public Rng structure12() {
            return this.structure12;
         }

         public Rng structure13() {
            return this.structure13;
         }

         public Rng structure14() {
            return this.structure14;
         }

         public Rng structure15() {
            return this.structure15;
         }

         public Rng structure16() {
            return this.structure16;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct16.$init$(this);
            RngProduct16.$init$(this);
            this.structure1 = _structure1$200;
            this.structure2 = _structure2$200;
            this.structure3 = _structure3$114;
            this.structure4 = _structure4$108;
            this.structure5 = _structure5$102;
            this.structure6 = _structure6$96;
            this.structure7 = _structure7$90;
            this.structure8 = _structure8$84;
            this.structure9 = _structure9$78;
            this.structure10 = _structure10$72;
            this.structure11 = _structure11$66;
            this.structure12 = _structure12$60;
            this.structure13 = _structure13$54;
            this.structure14 = _structure14$48;
            this.structure15 = _structure15$42;
            this.structure16 = _structure16$36;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct17$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16, final Rng _structure17) {
      return $this.RngProduct17(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17);
   }

   default Rng RngProduct17(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16, final Rng _structure17) {
      return new RngProduct17(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;
         private final Rng structure11;
         private final Rng structure12;
         private final Rng structure13;
         private final Rng structure14;
         private final Rng structure15;
         private final Rng structure16;
         private final Rng structure17;

         public Tuple17 negate(final Tuple17 x0) {
            return RngProduct17.negate$(this, x0);
         }

         public Tuple17 zero() {
            return SemiringProduct17.zero$(this);
         }

         public Tuple17 plus(final Tuple17 x0, final Tuple17 x1) {
            return SemiringProduct17.plus$(this, x0, x1);
         }

         public Tuple17 times(final Tuple17 x0, final Tuple17 x1) {
            return SemiringProduct17.times$(this, x0, x1);
         }

         public Tuple17 pow(final Tuple17 x0, final int x1) {
            return SemiringProduct17.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public Rng structure11() {
            return this.structure11;
         }

         public Rng structure12() {
            return this.structure12;
         }

         public Rng structure13() {
            return this.structure13;
         }

         public Rng structure14() {
            return this.structure14;
         }

         public Rng structure15() {
            return this.structure15;
         }

         public Rng structure16() {
            return this.structure16;
         }

         public Rng structure17() {
            return this.structure17;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct17.$init$(this);
            RngProduct17.$init$(this);
            this.structure1 = _structure1$201;
            this.structure2 = _structure2$201;
            this.structure3 = _structure3$115;
            this.structure4 = _structure4$109;
            this.structure5 = _structure5$103;
            this.structure6 = _structure6$97;
            this.structure7 = _structure7$91;
            this.structure8 = _structure8$85;
            this.structure9 = _structure9$79;
            this.structure10 = _structure10$73;
            this.structure11 = _structure11$67;
            this.structure12 = _structure12$61;
            this.structure13 = _structure13$55;
            this.structure14 = _structure14$49;
            this.structure15 = _structure15$43;
            this.structure16 = _structure16$37;
            this.structure17 = _structure17$31;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct18$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16, final Rng _structure17, final Rng _structure18) {
      return $this.RngProduct18(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18);
   }

   default Rng RngProduct18(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16, final Rng _structure17, final Rng _structure18) {
      return new RngProduct18(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;
         private final Rng structure11;
         private final Rng structure12;
         private final Rng structure13;
         private final Rng structure14;
         private final Rng structure15;
         private final Rng structure16;
         private final Rng structure17;
         private final Rng structure18;

         public Tuple18 negate(final Tuple18 x0) {
            return RngProduct18.negate$(this, x0);
         }

         public Tuple18 zero() {
            return SemiringProduct18.zero$(this);
         }

         public Tuple18 plus(final Tuple18 x0, final Tuple18 x1) {
            return SemiringProduct18.plus$(this, x0, x1);
         }

         public Tuple18 times(final Tuple18 x0, final Tuple18 x1) {
            return SemiringProduct18.times$(this, x0, x1);
         }

         public Tuple18 pow(final Tuple18 x0, final int x1) {
            return SemiringProduct18.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public Rng structure11() {
            return this.structure11;
         }

         public Rng structure12() {
            return this.structure12;
         }

         public Rng structure13() {
            return this.structure13;
         }

         public Rng structure14() {
            return this.structure14;
         }

         public Rng structure15() {
            return this.structure15;
         }

         public Rng structure16() {
            return this.structure16;
         }

         public Rng structure17() {
            return this.structure17;
         }

         public Rng structure18() {
            return this.structure18;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct18.$init$(this);
            RngProduct18.$init$(this);
            this.structure1 = _structure1$202;
            this.structure2 = _structure2$202;
            this.structure3 = _structure3$116;
            this.structure4 = _structure4$110;
            this.structure5 = _structure5$104;
            this.structure6 = _structure6$98;
            this.structure7 = _structure7$92;
            this.structure8 = _structure8$86;
            this.structure9 = _structure9$80;
            this.structure10 = _structure10$74;
            this.structure11 = _structure11$68;
            this.structure12 = _structure12$62;
            this.structure13 = _structure13$56;
            this.structure14 = _structure14$50;
            this.structure15 = _structure15$44;
            this.structure16 = _structure16$38;
            this.structure17 = _structure17$32;
            this.structure18 = _structure18$26;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct19$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16, final Rng _structure17, final Rng _structure18, final Rng _structure19) {
      return $this.RngProduct19(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19);
   }

   default Rng RngProduct19(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16, final Rng _structure17, final Rng _structure18, final Rng _structure19) {
      return new RngProduct19(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;
         private final Rng structure11;
         private final Rng structure12;
         private final Rng structure13;
         private final Rng structure14;
         private final Rng structure15;
         private final Rng structure16;
         private final Rng structure17;
         private final Rng structure18;
         private final Rng structure19;

         public Tuple19 negate(final Tuple19 x0) {
            return RngProduct19.negate$(this, x0);
         }

         public Tuple19 zero() {
            return SemiringProduct19.zero$(this);
         }

         public Tuple19 plus(final Tuple19 x0, final Tuple19 x1) {
            return SemiringProduct19.plus$(this, x0, x1);
         }

         public Tuple19 times(final Tuple19 x0, final Tuple19 x1) {
            return SemiringProduct19.times$(this, x0, x1);
         }

         public Tuple19 pow(final Tuple19 x0, final int x1) {
            return SemiringProduct19.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public Rng structure11() {
            return this.structure11;
         }

         public Rng structure12() {
            return this.structure12;
         }

         public Rng structure13() {
            return this.structure13;
         }

         public Rng structure14() {
            return this.structure14;
         }

         public Rng structure15() {
            return this.structure15;
         }

         public Rng structure16() {
            return this.structure16;
         }

         public Rng structure17() {
            return this.structure17;
         }

         public Rng structure18() {
            return this.structure18;
         }

         public Rng structure19() {
            return this.structure19;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct19.$init$(this);
            RngProduct19.$init$(this);
            this.structure1 = _structure1$203;
            this.structure2 = _structure2$203;
            this.structure3 = _structure3$117;
            this.structure4 = _structure4$111;
            this.structure5 = _structure5$105;
            this.structure6 = _structure6$99;
            this.structure7 = _structure7$93;
            this.structure8 = _structure8$87;
            this.structure9 = _structure9$81;
            this.structure10 = _structure10$75;
            this.structure11 = _structure11$69;
            this.structure12 = _structure12$63;
            this.structure13 = _structure13$57;
            this.structure14 = _structure14$51;
            this.structure15 = _structure15$45;
            this.structure16 = _structure16$39;
            this.structure17 = _structure17$33;
            this.structure18 = _structure18$27;
            this.structure19 = _structure19$21;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct20$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16, final Rng _structure17, final Rng _structure18, final Rng _structure19, final Rng _structure20) {
      return $this.RngProduct20(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20);
   }

   default Rng RngProduct20(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16, final Rng _structure17, final Rng _structure18, final Rng _structure19, final Rng _structure20) {
      return new RngProduct20(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;
         private final Rng structure11;
         private final Rng structure12;
         private final Rng structure13;
         private final Rng structure14;
         private final Rng structure15;
         private final Rng structure16;
         private final Rng structure17;
         private final Rng structure18;
         private final Rng structure19;
         private final Rng structure20;

         public Tuple20 negate(final Tuple20 x0) {
            return RngProduct20.negate$(this, x0);
         }

         public Tuple20 zero() {
            return SemiringProduct20.zero$(this);
         }

         public Tuple20 plus(final Tuple20 x0, final Tuple20 x1) {
            return SemiringProduct20.plus$(this, x0, x1);
         }

         public Tuple20 times(final Tuple20 x0, final Tuple20 x1) {
            return SemiringProduct20.times$(this, x0, x1);
         }

         public Tuple20 pow(final Tuple20 x0, final int x1) {
            return SemiringProduct20.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public Rng structure11() {
            return this.structure11;
         }

         public Rng structure12() {
            return this.structure12;
         }

         public Rng structure13() {
            return this.structure13;
         }

         public Rng structure14() {
            return this.structure14;
         }

         public Rng structure15() {
            return this.structure15;
         }

         public Rng structure16() {
            return this.structure16;
         }

         public Rng structure17() {
            return this.structure17;
         }

         public Rng structure18() {
            return this.structure18;
         }

         public Rng structure19() {
            return this.structure19;
         }

         public Rng structure20() {
            return this.structure20;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct20.$init$(this);
            RngProduct20.$init$(this);
            this.structure1 = _structure1$204;
            this.structure2 = _structure2$204;
            this.structure3 = _structure3$118;
            this.structure4 = _structure4$112;
            this.structure5 = _structure5$106;
            this.structure6 = _structure6$100;
            this.structure7 = _structure7$94;
            this.structure8 = _structure8$88;
            this.structure9 = _structure9$82;
            this.structure10 = _structure10$76;
            this.structure11 = _structure11$70;
            this.structure12 = _structure12$64;
            this.structure13 = _structure13$58;
            this.structure14 = _structure14$52;
            this.structure15 = _structure15$46;
            this.structure16 = _structure16$40;
            this.structure17 = _structure17$34;
            this.structure18 = _structure18$28;
            this.structure19 = _structure19$22;
            this.structure20 = _structure20$16;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct21$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16, final Rng _structure17, final Rng _structure18, final Rng _structure19, final Rng _structure20, final Rng _structure21) {
      return $this.RngProduct21(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21);
   }

   default Rng RngProduct21(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16, final Rng _structure17, final Rng _structure18, final Rng _structure19, final Rng _structure20, final Rng _structure21) {
      return new RngProduct21(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;
         private final Rng structure11;
         private final Rng structure12;
         private final Rng structure13;
         private final Rng structure14;
         private final Rng structure15;
         private final Rng structure16;
         private final Rng structure17;
         private final Rng structure18;
         private final Rng structure19;
         private final Rng structure20;
         private final Rng structure21;

         public Tuple21 negate(final Tuple21 x0) {
            return RngProduct21.negate$(this, x0);
         }

         public Tuple21 zero() {
            return SemiringProduct21.zero$(this);
         }

         public Tuple21 plus(final Tuple21 x0, final Tuple21 x1) {
            return SemiringProduct21.plus$(this, x0, x1);
         }

         public Tuple21 times(final Tuple21 x0, final Tuple21 x1) {
            return SemiringProduct21.times$(this, x0, x1);
         }

         public Tuple21 pow(final Tuple21 x0, final int x1) {
            return SemiringProduct21.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public Rng structure11() {
            return this.structure11;
         }

         public Rng structure12() {
            return this.structure12;
         }

         public Rng structure13() {
            return this.structure13;
         }

         public Rng structure14() {
            return this.structure14;
         }

         public Rng structure15() {
            return this.structure15;
         }

         public Rng structure16() {
            return this.structure16;
         }

         public Rng structure17() {
            return this.structure17;
         }

         public Rng structure18() {
            return this.structure18;
         }

         public Rng structure19() {
            return this.structure19;
         }

         public Rng structure20() {
            return this.structure20;
         }

         public Rng structure21() {
            return this.structure21;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct21.$init$(this);
            RngProduct21.$init$(this);
            this.structure1 = _structure1$205;
            this.structure2 = _structure2$205;
            this.structure3 = _structure3$119;
            this.structure4 = _structure4$113;
            this.structure5 = _structure5$107;
            this.structure6 = _structure6$101;
            this.structure7 = _structure7$95;
            this.structure8 = _structure8$89;
            this.structure9 = _structure9$83;
            this.structure10 = _structure10$77;
            this.structure11 = _structure11$71;
            this.structure12 = _structure12$65;
            this.structure13 = _structure13$59;
            this.structure14 = _structure14$53;
            this.structure15 = _structure15$47;
            this.structure16 = _structure16$41;
            this.structure17 = _structure17$35;
            this.structure18 = _structure18$29;
            this.structure19 = _structure19$23;
            this.structure20 = _structure20$17;
            this.structure21 = _structure21$11;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct22$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16, final Rng _structure17, final Rng _structure18, final Rng _structure19, final Rng _structure20, final Rng _structure21, final Rng _structure22) {
      return $this.RngProduct22(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21, _structure22);
   }

   default Rng RngProduct22(final Rng _structure1, final Rng _structure2, final Rng _structure3, final Rng _structure4, final Rng _structure5, final Rng _structure6, final Rng _structure7, final Rng _structure8, final Rng _structure9, final Rng _structure10, final Rng _structure11, final Rng _structure12, final Rng _structure13, final Rng _structure14, final Rng _structure15, final Rng _structure16, final Rng _structure17, final Rng _structure18, final Rng _structure19, final Rng _structure20, final Rng _structure21, final Rng _structure22) {
      return new RngProduct22(_structure1, _structure2, _structure3, _structure4, _structure5, _structure6, _structure7, _structure8, _structure9, _structure10, _structure11, _structure12, _structure13, _structure14, _structure15, _structure16, _structure17, _structure18, _structure19, _structure20, _structure21, _structure22) {
         private final Rng structure1;
         private final Rng structure2;
         private final Rng structure3;
         private final Rng structure4;
         private final Rng structure5;
         private final Rng structure6;
         private final Rng structure7;
         private final Rng structure8;
         private final Rng structure9;
         private final Rng structure10;
         private final Rng structure11;
         private final Rng structure12;
         private final Rng structure13;
         private final Rng structure14;
         private final Rng structure15;
         private final Rng structure16;
         private final Rng structure17;
         private final Rng structure18;
         private final Rng structure19;
         private final Rng structure20;
         private final Rng structure21;
         private final Rng structure22;

         public Tuple22 negate(final Tuple22 x0) {
            return RngProduct22.negate$(this, x0);
         }

         public Tuple22 zero() {
            return SemiringProduct22.zero$(this);
         }

         public Tuple22 plus(final Tuple22 x0, final Tuple22 x1) {
            return SemiringProduct22.plus$(this, x0, x1);
         }

         public Tuple22 times(final Tuple22 x0, final Tuple22 x1) {
            return SemiringProduct22.times$(this, x0, x1);
         }

         public Tuple22 pow(final Tuple22 x0, final int x1) {
            return SemiringProduct22.pow$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1;
         }

         public Rng structure2() {
            return this.structure2;
         }

         public Rng structure3() {
            return this.structure3;
         }

         public Rng structure4() {
            return this.structure4;
         }

         public Rng structure5() {
            return this.structure5;
         }

         public Rng structure6() {
            return this.structure6;
         }

         public Rng structure7() {
            return this.structure7;
         }

         public Rng structure8() {
            return this.structure8;
         }

         public Rng structure9() {
            return this.structure9;
         }

         public Rng structure10() {
            return this.structure10;
         }

         public Rng structure11() {
            return this.structure11;
         }

         public Rng structure12() {
            return this.structure12;
         }

         public Rng structure13() {
            return this.structure13;
         }

         public Rng structure14() {
            return this.structure14;
         }

         public Rng structure15() {
            return this.structure15;
         }

         public Rng structure16() {
            return this.structure16;
         }

         public Rng structure17() {
            return this.structure17;
         }

         public Rng structure18() {
            return this.structure18;
         }

         public Rng structure19() {
            return this.structure19;
         }

         public Rng structure20() {
            return this.structure20;
         }

         public Rng structure21() {
            return this.structure21;
         }

         public Rng structure22() {
            return this.structure22;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct22.$init$(this);
            RngProduct22.$init$(this);
            this.structure1 = _structure1$206;
            this.structure2 = _structure2$206;
            this.structure3 = _structure3$120;
            this.structure4 = _structure4$114;
            this.structure5 = _structure5$108;
            this.structure6 = _structure6$102;
            this.structure7 = _structure7$96;
            this.structure8 = _structure8$90;
            this.structure9 = _structure9$84;
            this.structure10 = _structure10$78;
            this.structure11 = _structure11$72;
            this.structure12 = _structure12$66;
            this.structure13 = _structure13$60;
            this.structure14 = _structure14$54;
            this.structure15 = _structure15$48;
            this.structure16 = _structure16$42;
            this.structure17 = _structure17$36;
            this.structure18 = _structure18$30;
            this.structure19 = _structure19$24;
            this.structure20 = _structure20$18;
            this.structure21 = _structure21$12;
            this.structure22 = _structure22$6;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mDDc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mDDc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mDDc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcDD$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcDD$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2$mcDD$sp.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcDD$sp.zero$(this);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2$mcDD$sp.zero$mcDD$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDD$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDD$sp.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDD$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDD$sp.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDD$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDD$sp.pow$mcDD$sp$(this, x0, x1);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcD$sp();
         }

         public Rng structure2() {
            return this.structure2$mcD$sp();
         }

         public Rng structure1$mcD$sp() {
            return this.structure1;
         }

         public Rng structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$207;
            this.structure2 = _structure2$207;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mDFc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mDFc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mDFc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcDF$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcDF$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2$mcDF$sp.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcDF$sp.zero$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2$mcDF$sp.zero$mcDF$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDF$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDF$sp.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDF$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDF$sp.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDF$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDF$sp.pow$mcDF$sp$(this, x0, x1);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcD$sp();
         }

         public Rng structure2() {
            return this.structure2$mcF$sp();
         }

         public Rng structure1$mcD$sp() {
            return this.structure1;
         }

         public Rng structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$208;
            this.structure2 = _structure2$208;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mDIc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mDIc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mDIc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcDI$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcDI$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2$mcDI$sp.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcDI$sp.zero$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2$mcDI$sp.zero$mcDI$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDI$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDI$sp.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDI$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDI$sp.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDI$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDI$sp.pow$mcDI$sp$(this, x0, x1);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcD$sp();
         }

         public Rng structure2() {
            return this.structure2$mcI$sp();
         }

         public Rng structure1$mcD$sp() {
            return this.structure1;
         }

         public Rng structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$209;
            this.structure2 = _structure2$209;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mDJc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mDJc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mDJc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcDJ$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcDJ$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2$mcDJ$sp.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcDJ$sp.zero$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2$mcDJ$sp.zero$mcDJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDJ$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDJ$sp.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDJ$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcDJ$sp.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDJ$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcDJ$sp.pow$mcDJ$sp$(this, x0, x1);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcD$sp();
         }

         public Rng structure2() {
            return this.structure2$mcJ$sp();
         }

         public Rng structure1$mcD$sp() {
            return this.structure1;
         }

         public Rng structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$210;
            this.structure2 = _structure2$210;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mFDc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mFDc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mFDc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcFD$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcFD$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2$mcFD$sp.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcFD$sp.zero$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2$mcFD$sp.zero$mcFD$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFD$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFD$sp.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFD$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFD$sp.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFD$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFD$sp.pow$mcFD$sp$(this, x0, x1);
         }

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcF$sp();
         }

         public Rng structure2() {
            return this.structure2$mcD$sp();
         }

         public Rng structure1$mcF$sp() {
            return this.structure1;
         }

         public Rng structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$211;
            this.structure2 = _structure2$211;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mFFc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mFFc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mFFc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcFF$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcFF$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2$mcFF$sp.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcFF$sp.zero$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2$mcFF$sp.zero$mcFF$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFF$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFF$sp.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFF$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFF$sp.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFF$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFF$sp.pow$mcFF$sp$(this, x0, x1);
         }

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcF$sp();
         }

         public Rng structure2() {
            return this.structure2$mcF$sp();
         }

         public Rng structure1$mcF$sp() {
            return this.structure1;
         }

         public Rng structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$212;
            this.structure2 = _structure2$212;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mFIc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mFIc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mFIc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcFI$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcFI$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2$mcFI$sp.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcFI$sp.zero$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2$mcFI$sp.zero$mcFI$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFI$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFI$sp.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFI$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFI$sp.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFI$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFI$sp.pow$mcFI$sp$(this, x0, x1);
         }

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcF$sp();
         }

         public Rng structure2() {
            return this.structure2$mcI$sp();
         }

         public Rng structure1$mcF$sp() {
            return this.structure1;
         }

         public Rng structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$213;
            this.structure2 = _structure2$213;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mFJc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mFJc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mFJc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcFJ$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcFJ$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2$mcFJ$sp.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcFJ$sp.zero$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2$mcFJ$sp.zero$mcFJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFJ$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFJ$sp.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFJ$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcFJ$sp.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFJ$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcFJ$sp.pow$mcFJ$sp$(this, x0, x1);
         }

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcF$sp();
         }

         public Rng structure2() {
            return this.structure2$mcJ$sp();
         }

         public Rng structure1$mcF$sp() {
            return this.structure1;
         }

         public Rng structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$214;
            this.structure2 = _structure2$214;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mIDc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mIDc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mIDc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcID$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcID$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2$mcID$sp.negate$mcID$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcID$sp.zero$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2$mcID$sp.zero$mcID$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcID$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcID$sp.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcID$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcID$sp.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcID$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcID$sp.pow$mcID$sp$(this, x0, x1);
         }

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcI$sp();
         }

         public Rng structure2() {
            return this.structure2$mcD$sp();
         }

         public Rng structure1$mcI$sp() {
            return this.structure1;
         }

         public Rng structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$215;
            this.structure2 = _structure2$215;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mIFc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mIFc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mIFc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcIF$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcIF$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2$mcIF$sp.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcIF$sp.zero$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2$mcIF$sp.zero$mcIF$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIF$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIF$sp.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIF$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIF$sp.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcIF$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcIF$sp.pow$mcIF$sp$(this, x0, x1);
         }

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcI$sp();
         }

         public Rng structure2() {
            return this.structure2$mcF$sp();
         }

         public Rng structure1$mcI$sp() {
            return this.structure1;
         }

         public Rng structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$216;
            this.structure2 = _structure2$216;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mIIc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mIIc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mIIc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcII$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcII$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2$mcII$sp.negate$mcII$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcII$sp.zero$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2$mcII$sp.zero$mcII$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcII$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcII$sp.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcII$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcII$sp.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcII$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcII$sp.pow$mcII$sp$(this, x0, x1);
         }

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcI$sp();
         }

         public Rng structure2() {
            return this.structure2$mcI$sp();
         }

         public Rng structure1$mcI$sp() {
            return this.structure1;
         }

         public Rng structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$217;
            this.structure2 = _structure2$217;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mIJc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mIJc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mIJc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcIJ$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcIJ$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2$mcIJ$sp.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcIJ$sp.zero$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2$mcIJ$sp.zero$mcIJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIJ$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIJ$sp.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIJ$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcIJ$sp.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcIJ$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcIJ$sp.pow$mcIJ$sp$(this, x0, x1);
         }

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcJ$sp() {
            return RngProduct2.structure1$mcJ$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcI$sp();
         }

         public Rng structure2() {
            return this.structure2$mcJ$sp();
         }

         public Rng structure1$mcI$sp() {
            return this.structure1;
         }

         public Rng structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$218;
            this.structure2 = _structure2$218;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mJDc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mJDc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mJDc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcJD$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcJD$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2$mcJD$sp.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcJD$sp.zero$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2$mcJD$sp.zero$mcJD$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJD$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJD$sp.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJD$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJD$sp.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJD$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJD$sp.pow$mcJD$sp$(this, x0, x1);
         }

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcJ$sp();
         }

         public Rng structure2() {
            return this.structure2$mcD$sp();
         }

         public Rng structure1$mcJ$sp() {
            return this.structure1;
         }

         public Rng structure2$mcD$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$219;
            this.structure2 = _structure2$219;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mJFc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mJFc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mJFc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcJF$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcJF$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2$mcJF$sp.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcJF$sp.zero$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2$mcJF$sp.zero$mcJF$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJF$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJF$sp.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJF$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJF$sp.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJF$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJF$sp.pow$mcJF$sp$(this, x0, x1);
         }

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcJ$sp();
         }

         public Rng structure2() {
            return this.structure2$mcF$sp();
         }

         public Rng structure1$mcJ$sp() {
            return this.structure1;
         }

         public Rng structure2$mcF$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$220;
            this.structure2 = _structure2$220;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mJIc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mJIc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mJIc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcJI$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcJI$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2$mcJI$sp.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcJI$sp.zero$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2$mcJI$sp.zero$mcJI$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJI$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJI$sp.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJI$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJI$sp.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJI$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJI$sp.pow$mcJI$sp$(this, x0, x1);
         }

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcJ$sp() {
            return RngProduct2.structure2$mcJ$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJJ$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcJ$sp();
         }

         public Rng structure2() {
            return this.structure2$mcI$sp();
         }

         public Rng structure1$mcJ$sp() {
            return this.structure1;
         }

         public Rng structure2$mcI$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$221;
            this.structure2 = _structure2$221;
         }
      };
   }

   // $FF: synthetic method
   static Rng RngProduct2$mJJc$sp$(final RngProductInstances $this, final Rng _structure1, final Rng _structure2) {
      return $this.RngProduct2$mJJc$sp(_structure1, _structure2);
   }

   default Rng RngProduct2$mJJc$sp(final Rng _structure1, final Rng _structure2) {
      return new RngProduct2$mcJJ$sp(_structure1, _structure2) {
         private final Rng structure1;
         private final Rng structure2;

         public Tuple2 negate(final Tuple2 x0) {
            return RngProduct2$mcJJ$sp.negate$(this, x0);
         }

         public Tuple2 negate$mcJJ$sp(final Tuple2 x0) {
            return RngProduct2$mcJJ$sp.negate$mcJJ$sp$(this, x0);
         }

         public Tuple2 zero() {
            return SemiringProduct2$mcJJ$sp.zero$(this);
         }

         public Tuple2 zero$mcJJ$sp() {
            return SemiringProduct2$mcJJ$sp.zero$mcJJ$sp$(this);
         }

         public Tuple2 plus(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJJ$sp.plus$(this, x0, x1);
         }

         public Tuple2 plus$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJJ$sp.plus$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 times(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJJ$sp.times$(this, x0, x1);
         }

         public Tuple2 times$mcJJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2$mcJJ$sp.times$mcJJ$sp$(this, x0, x1);
         }

         public Tuple2 pow(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJJ$sp.pow$(this, x0, x1);
         }

         public Tuple2 pow$mcJJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2$mcJJ$sp.pow$mcJJ$sp$(this, x0, x1);
         }

         public Rng structure1$mcD$sp() {
            return RngProduct2.structure1$mcD$sp$(this);
         }

         public Rng structure1$mcF$sp() {
            return RngProduct2.structure1$mcF$sp$(this);
         }

         public Rng structure1$mcI$sp() {
            return RngProduct2.structure1$mcI$sp$(this);
         }

         public Rng structure2$mcD$sp() {
            return RngProduct2.structure2$mcD$sp$(this);
         }

         public Rng structure2$mcF$sp() {
            return RngProduct2.structure2$mcF$sp$(this);
         }

         public Rng structure2$mcI$sp() {
            return RngProduct2.structure2$mcI$sp$(this);
         }

         public Tuple2 negate$mcDD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDD$sp$(this, x0);
         }

         public Tuple2 negate$mcDF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDF$sp$(this, x0);
         }

         public Tuple2 negate$mcDI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDI$sp$(this, x0);
         }

         public Tuple2 negate$mcDJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcDJ$sp$(this, x0);
         }

         public Tuple2 negate$mcFD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFD$sp$(this, x0);
         }

         public Tuple2 negate$mcFF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFF$sp$(this, x0);
         }

         public Tuple2 negate$mcFI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFI$sp$(this, x0);
         }

         public Tuple2 negate$mcFJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcFJ$sp$(this, x0);
         }

         public Tuple2 negate$mcID$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcID$sp$(this, x0);
         }

         public Tuple2 negate$mcIF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIF$sp$(this, x0);
         }

         public Tuple2 negate$mcII$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcII$sp$(this, x0);
         }

         public Tuple2 negate$mcIJ$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcIJ$sp$(this, x0);
         }

         public Tuple2 negate$mcJD$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJD$sp$(this, x0);
         }

         public Tuple2 negate$mcJF$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJF$sp$(this, x0);
         }

         public Tuple2 negate$mcJI$sp(final Tuple2 x0) {
            return RngProduct2.negate$mcJI$sp$(this, x0);
         }

         public Tuple2 zero$mcDD$sp() {
            return SemiringProduct2.zero$mcDD$sp$(this);
         }

         public Tuple2 zero$mcDF$sp() {
            return SemiringProduct2.zero$mcDF$sp$(this);
         }

         public Tuple2 zero$mcDI$sp() {
            return SemiringProduct2.zero$mcDI$sp$(this);
         }

         public Tuple2 zero$mcDJ$sp() {
            return SemiringProduct2.zero$mcDJ$sp$(this);
         }

         public Tuple2 zero$mcFD$sp() {
            return SemiringProduct2.zero$mcFD$sp$(this);
         }

         public Tuple2 zero$mcFF$sp() {
            return SemiringProduct2.zero$mcFF$sp$(this);
         }

         public Tuple2 zero$mcFI$sp() {
            return SemiringProduct2.zero$mcFI$sp$(this);
         }

         public Tuple2 zero$mcFJ$sp() {
            return SemiringProduct2.zero$mcFJ$sp$(this);
         }

         public Tuple2 zero$mcID$sp() {
            return SemiringProduct2.zero$mcID$sp$(this);
         }

         public Tuple2 zero$mcIF$sp() {
            return SemiringProduct2.zero$mcIF$sp$(this);
         }

         public Tuple2 zero$mcII$sp() {
            return SemiringProduct2.zero$mcII$sp$(this);
         }

         public Tuple2 zero$mcIJ$sp() {
            return SemiringProduct2.zero$mcIJ$sp$(this);
         }

         public Tuple2 zero$mcJD$sp() {
            return SemiringProduct2.zero$mcJD$sp$(this);
         }

         public Tuple2 zero$mcJF$sp() {
            return SemiringProduct2.zero$mcJF$sp$(this);
         }

         public Tuple2 zero$mcJI$sp() {
            return SemiringProduct2.zero$mcJI$sp$(this);
         }

         public Tuple2 plus$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcID$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcII$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 plus$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.plus$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcDJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 times$mcFJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcID$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcID$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcII$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcII$sp$(this, x0, x1);
         }

         public Tuple2 times$mcIJ$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJD$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJF$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 times$mcJI$sp(final Tuple2 x0, final Tuple2 x1) {
            return SemiringProduct2.times$mcJI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcDJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcDJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFI$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcFJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcFJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcID$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcID$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcII$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcII$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcIJ$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcIJ$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJD$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJD$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJF$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJF$sp$(this, x0, x1);
         }

         public Tuple2 pow$mcJI$sp(final Tuple2 x0, final int x1) {
            return SemiringProduct2.pow$mcJI$sp$(this, x0, x1);
         }

         public CommutativeGroup additive() {
            return AdditiveCommutativeGroup.additive$(this);
         }

         public CommutativeGroup additive$mcD$sp() {
            return AdditiveCommutativeGroup.additive$mcD$sp$(this);
         }

         public CommutativeGroup additive$mcF$sp() {
            return AdditiveCommutativeGroup.additive$mcF$sp$(this);
         }

         public CommutativeGroup additive$mcI$sp() {
            return AdditiveCommutativeGroup.additive$mcI$sp$(this);
         }

         public CommutativeGroup additive$mcJ$sp() {
            return AdditiveCommutativeGroup.additive$mcJ$sp$(this);
         }

         public double negate$mcD$sp(final double x) {
            return AdditiveGroup.negate$mcD$sp$(this, x);
         }

         public float negate$mcF$sp(final float x) {
            return AdditiveGroup.negate$mcF$sp$(this, x);
         }

         public int negate$mcI$sp(final int x) {
            return AdditiveGroup.negate$mcI$sp$(this, x);
         }

         public long negate$mcJ$sp(final long x) {
            return AdditiveGroup.negate$mcJ$sp$(this, x);
         }

         public Object minus(final Object x, final Object y) {
            return AdditiveGroup.minus$(this, x, y);
         }

         public double minus$mcD$sp(final double x, final double y) {
            return AdditiveGroup.minus$mcD$sp$(this, x, y);
         }

         public float minus$mcF$sp(final float x, final float y) {
            return AdditiveGroup.minus$mcF$sp$(this, x, y);
         }

         public int minus$mcI$sp(final int x, final int y) {
            return AdditiveGroup.minus$mcI$sp$(this, x, y);
         }

         public long minus$mcJ$sp(final long x, final long y) {
            return AdditiveGroup.minus$mcJ$sp$(this, x, y);
         }

         public Object sumN(final Object a, final int n) {
            return AdditiveGroup.sumN$(this, a, n);
         }

         public double sumN$mcD$sp(final double a, final int n) {
            return AdditiveGroup.sumN$mcD$sp$(this, a, n);
         }

         public float sumN$mcF$sp(final float a, final int n) {
            return AdditiveGroup.sumN$mcF$sp$(this, a, n);
         }

         public int sumN$mcI$sp(final int a, final int n) {
            return AdditiveGroup.sumN$mcI$sp$(this, a, n);
         }

         public long sumN$mcJ$sp(final long a, final int n) {
            return AdditiveGroup.sumN$mcJ$sp$(this, a, n);
         }

         public Semigroup multiplicative() {
            return MultiplicativeSemigroup.multiplicative$(this);
         }

         public Semigroup multiplicative$mcD$sp() {
            return MultiplicativeSemigroup.multiplicative$mcD$sp$(this);
         }

         public Semigroup multiplicative$mcF$sp() {
            return MultiplicativeSemigroup.multiplicative$mcF$sp$(this);
         }

         public Semigroup multiplicative$mcI$sp() {
            return MultiplicativeSemigroup.multiplicative$mcI$sp$(this);
         }

         public Semigroup multiplicative$mcJ$sp() {
            return MultiplicativeSemigroup.multiplicative$mcJ$sp$(this);
         }

         public double times$mcD$sp(final double x, final double y) {
            return MultiplicativeSemigroup.times$mcD$sp$(this, x, y);
         }

         public float times$mcF$sp(final float x, final float y) {
            return MultiplicativeSemigroup.times$mcF$sp$(this, x, y);
         }

         public int times$mcI$sp(final int x, final int y) {
            return MultiplicativeSemigroup.times$mcI$sp$(this, x, y);
         }

         public long times$mcJ$sp(final long x, final long y) {
            return MultiplicativeSemigroup.times$mcJ$sp$(this, x, y);
         }

         public double pow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.pow$mcD$sp$(this, a, n);
         }

         public float pow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.pow$mcF$sp$(this, a, n);
         }

         public int pow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.pow$mcI$sp$(this, a, n);
         }

         public long pow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.pow$mcJ$sp$(this, a, n);
         }

         public Object positivePow(final Object a, final int n) {
            return MultiplicativeSemigroup.positivePow$(this, a, n);
         }

         public double positivePow$mcD$sp(final double a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcD$sp$(this, a, n);
         }

         public float positivePow$mcF$sp(final float a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcF$sp$(this, a, n);
         }

         public int positivePow$mcI$sp(final int a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcI$sp$(this, a, n);
         }

         public long positivePow$mcJ$sp(final long a, final int n) {
            return MultiplicativeSemigroup.positivePow$mcJ$sp$(this, a, n);
         }

         public Option tryProduct(final IterableOnce as) {
            return MultiplicativeSemigroup.tryProduct$(this, as);
         }

         public double zero$mcD$sp() {
            return AdditiveMonoid.zero$mcD$sp$(this);
         }

         public float zero$mcF$sp() {
            return AdditiveMonoid.zero$mcF$sp$(this);
         }

         public int zero$mcI$sp() {
            return AdditiveMonoid.zero$mcI$sp$(this);
         }

         public long zero$mcJ$sp() {
            return AdditiveMonoid.zero$mcJ$sp$(this);
         }

         public boolean isZero(final Object a, final Eq ev) {
            return AdditiveMonoid.isZero$(this, a, ev);
         }

         public boolean isZero$mcD$sp(final double a, final Eq ev) {
            return AdditiveMonoid.isZero$mcD$sp$(this, a, ev);
         }

         public boolean isZero$mcF$sp(final float a, final Eq ev) {
            return AdditiveMonoid.isZero$mcF$sp$(this, a, ev);
         }

         public boolean isZero$mcI$sp(final int a, final Eq ev) {
            return AdditiveMonoid.isZero$mcI$sp$(this, a, ev);
         }

         public boolean isZero$mcJ$sp(final long a, final Eq ev) {
            return AdditiveMonoid.isZero$mcJ$sp$(this, a, ev);
         }

         public Object sum(final IterableOnce as) {
            return AdditiveMonoid.sum$(this, as);
         }

         public double sum$mcD$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcD$sp$(this, as);
         }

         public float sum$mcF$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcF$sp$(this, as);
         }

         public int sum$mcI$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcI$sp$(this, as);
         }

         public long sum$mcJ$sp(final IterableOnce as) {
            return AdditiveMonoid.sum$mcJ$sp$(this, as);
         }

         public Option trySum(final IterableOnce as) {
            return AdditiveMonoid.trySum$(this, as);
         }

         public double plus$mcD$sp(final double x, final double y) {
            return AdditiveSemigroup.plus$mcD$sp$(this, x, y);
         }

         public float plus$mcF$sp(final float x, final float y) {
            return AdditiveSemigroup.plus$mcF$sp$(this, x, y);
         }

         public int plus$mcI$sp(final int x, final int y) {
            return AdditiveSemigroup.plus$mcI$sp$(this, x, y);
         }

         public long plus$mcJ$sp(final long x, final long y) {
            return AdditiveSemigroup.plus$mcJ$sp$(this, x, y);
         }

         public Object positiveSumN(final Object a, final int n) {
            return AdditiveSemigroup.positiveSumN$(this, a, n);
         }

         public double positiveSumN$mcD$sp(final double a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcD$sp$(this, a, n);
         }

         public float positiveSumN$mcF$sp(final float a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcF$sp$(this, a, n);
         }

         public int positiveSumN$mcI$sp(final int a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcI$sp$(this, a, n);
         }

         public long positiveSumN$mcJ$sp(final long a, final int n) {
            return AdditiveSemigroup.positiveSumN$mcJ$sp$(this, a, n);
         }

         public Rng structure1() {
            return this.structure1$mcJ$sp();
         }

         public Rng structure2() {
            return this.structure2$mcJ$sp();
         }

         public Rng structure1$mcJ$sp() {
            return this.structure1;
         }

         public Rng structure2$mcJ$sp() {
            return this.structure2;
         }

         public boolean specInstance$() {
            return true;
         }

         public {
            AdditiveSemigroup.$init$(this);
            AdditiveMonoid.$init$(this);
            AdditiveCommutativeSemigroup.$init$(this);
            AdditiveCommutativeMonoid.$init$(this);
            MultiplicativeSemigroup.$init$(this);
            AdditiveGroup.$init$(this);
            AdditiveCommutativeGroup.$init$(this);
            SemiringProduct2.$init$(this);
            RngProduct2.$init$(this);
            this.structure1 = _structure1$222;
            this.structure2 = _structure2$222;
         }
      };
   }

   static void $init$(final RngProductInstances $this) {
   }
}
