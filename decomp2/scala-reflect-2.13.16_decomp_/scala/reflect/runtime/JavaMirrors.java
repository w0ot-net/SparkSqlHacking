package scala.reflect.runtime;

import java.io.IOException;
import java.io.Serializable;
import java.lang.annotation.Annotation;
import java.lang.invoke.SerializedLambda;
import java.lang.reflect.AnnotatedElement;
import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.GenericArrayType;
import java.lang.reflect.GenericDeclaration;
import java.lang.reflect.Member;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.lang.reflect.Parameter;
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.lang.reflect.TypeVariable;
import java.lang.reflect.WildcardType;
import java.nio.charset.StandardCharsets;
import scala.Function0;
import scala.Function1;
import scala.Function2;
import scala.MatchError;
import scala.Option;
import scala.Predef;
import scala.Product;
import scala.ScalaReflectionException;
import scala.Some;
import scala.StringContext;
import scala.Tuple2;
import scala.collection.ArrayOps;
import scala.collection.IterableFactory;
import scala.collection.IterableOnce;
import scala.collection.IterableOnceOps;
import scala.collection.IterableOps;
import scala.collection.Iterator;
import scala.collection.LinearSeqOps;
import scala.collection.SeqFactory;
import scala.collection.SeqOps;
import scala.collection.SetOps;
import scala.collection.StrictOptimizedIterableOps;
import scala.collection.immutable.ArraySeq;
import scala.collection.immutable.List;
import scala.collection.immutable.Seq;
import scala.collection.immutable.Set;
import scala.collection.mutable.ArrayBuilder;
import scala.collection.mutable.ListBuffer;
import scala.collection.mutable.WeakHashMap;
import scala.math.Ordering;
import scala.ref.WeakReference;
import scala.ref.WeakReference.;
import scala.reflect.ClassTag;
import scala.reflect.ScalaSignature;
import scala.reflect.api.TypeCreator;
import scala.reflect.api.TypeTags;
import scala.reflect.internal.AnnotationInfos;
import scala.reflect.internal.Constants;
import scala.reflect.internal.Definitions;
import scala.reflect.internal.JavaAccFlags$;
import scala.reflect.internal.Mirrors;
import scala.reflect.internal.MissingRequirementError;
import scala.reflect.internal.MissingRequirementError$;
import scala.reflect.internal.Names;
import scala.reflect.internal.Positions;
import scala.reflect.internal.Printers;
import scala.reflect.internal.PrivateWithin;
import scala.reflect.internal.Reporting;
import scala.reflect.internal.Scopes;
import scala.reflect.internal.StdNames;
import scala.reflect.internal.Symbols;
import scala.reflect.internal.Trees;
import scala.reflect.internal.Types;
import scala.reflect.internal.pickling.ByteCodecs$;
import scala.reflect.internal.pickling.UnPickler;
import scala.reflect.internal.settings.MutableSettings;
import scala.reflect.internal.settings.MutableSettings$;
import scala.reflect.internal.transform.Transforms;
import scala.reflect.internal.util.NoPosition$;
import scala.reflect.internal.util.Position;
import scala.reflect.internal.util.StatisticsStatics;
import scala.reflect.internal.util.StripMarginInterpolator;
import scala.reflect.io.AbstractFile;
import scala.reflect.io.NoAbstractFile$;
import scala.runtime.AbstractFunction1;
import scala.runtime.BoxedUnit;
import scala.runtime.BoxesRunTime;
import scala.runtime.ClassValueCompat;
import scala.runtime.Nothing;
import scala.runtime.ObjectRef;
import scala.runtime.ScalaRunTime;
import scala.runtime.Statics;
import scala.runtime.java8.JFunction0;
import scala.util.matching.Regex;

@ScalaSignature(
   bytes = "\u0006\u0005=MdADB\u0004\u0007\u0013\u0001\n1!\u0001\u0004\u0012\rUqr\u000e\u0005\b\u0007o\u0001A\u0011AB\u001e\u0011)\u0019)\u0005\u0001EC\u0002\u0013%1q\t\u0005\b\u001d{\u0004A\u0011\u0002H\u0000\u000b\u0019y\u0019\u0001\u0001\u0011\u0004v!Iq2\u0002\u0001C\u0002\u0013\rqR\u0002\u0005\u000b\u001f#\u0001\u0001R1A\u0005B=M\u0001bBH\u000b\u0001\u0011\u00051Q\u0014\u0004\n\u0019\u0007\u0003\u0001\u0013aI\u0001\u0019\u000bCqad\u0006\u0001\t\u0003yI\"\u0002\u0004\u0004z\u0001\u001111\u0010\u0004\u0007\u0007{\u0002\u0001aa \t\u0015\r=5B!A!\u0002\u0013\u0019\t\n\u0003\u0006\u0004\u001c.\u0011)\u0019!C\u0001\u0007;C!ba(\f\u0005\u0003\u0005\u000b\u0011BB-\u0011\u001d\u0019\tk\u0003C\u0001\u0007GC\u0011b!+\f\u0005\u0004%\taa+\t\u0011\r56\u0002)A\u0005\u0007oBAba,\f\u0011\u000b\u0007I\u0011AB\u0007\u0007cC!ba2\f\u0011\u000b\u0007I\u0011IBe\u0011)\u0019\u0019o\u0003EC\u0002\u0013\u00053Q\u001d\u0005\u000b\u0007o\\\u0001R1A\u0005B\re\bB\u0003C\u0003\u0017!\u0015\r\u0011\"\u0011\u0005\b!QA1C\u0006\t\u0006\u0004%\t\u0005\"\u0006\t\u000f\u0011-2\u0002\"\u0011\u0005.!AAqJ\u0006!\u0002\u0013!\t\u0006\u0003\u0005\u0005|-\u0001\u000b\u0011\u0002C?\u0011!!)i\u0003Q\u0001\n\u0011\u001d\u0005\u0002\u0003CM\u0017\u0001\u0006I\u0001b'\t\u0011\u0011-6\u0002)A\u0005\t[C\u0001\u0002b/\fA\u0003%AQX\u0004\t\t7\\\u0001\u0015#\u0003\u0005^\u001aAAq\\\u0006!\u0012\u0013!\t\u000fC\u0004\u0004\"\u0002\"\t!b\u0002\t\u0013\u0015%\u0001E1A\u0005\u0002\u0015-\u0001\u0002CC\rA\u0001\u0006I!\"\u0004\t\u000f\u0015m\u0001\u0005\"\u0015\u0006\u001e!9Q\u0011H\u0006\u0005\u0006\u0015m\u0002\"CC%\u0017\u0011\u00051\u0011BC&\u0011%)ih\u0003b\u0001\n\u0017)y\b\u0003\u0005\u0006\u000e.\u0001\u000b\u0011BCA\u0011%)yi\u0003b\u0001\n\u0017)\t\n\u0003\u0005\u0006\u0016.\u0001\u000b\u0011BCJ\u0011%)9j\u0003b\u0001\n\u0017)I\n\u0003\u0005\u0006\u001e.\u0001\u000b\u0011BCN\u0011%)yj\u0003b\u0001\n\u0017)\t\u000b\u0003\u0005\u00060.\u0001\u000b\u0011BCR\u0011%)\tl\u0003b\u0001\n\u0017)\u0019\f\u0003\u0005\u0006B.\u0001\u000b\u0011BC[\u0011\u001d)\u0019m\u0003C\u0005\u000b\u000bDq!b3\f\t\u0013)i\rC\u0004\u0006T.!I!\"6\t\u000f\u0015e7\u0002\"\u0003\u0006\\\"9Qq\\\u0006\u0005\n\u0015\u0005\bbBCs\u0017\u0011%Qq\u001d\u0005\b\u000b[\\A\u0011BCx\u0011\u001d)\u0019p\u0003C\u0005\u000bkDq!b?\f\t\u0013)i\u0010C\u0004\u0007\u0004-!IA\"\u0002\t\u000f\u0019=1\u0002\"\u0003\u0007\u0012\u001d9aQC\u0006\t\n\u0019]aa\u0002D\r\u0017!%a1\u0004\u0005\b\u0007CkD\u0011\u0001D\u0012\u0011%1)#\u0010b\u0001\n\u000319\u0003\u0003\u0005\u0007,u\u0002\u000b\u0011\u0002D\u0015\u0011%1i#\u0010b\u0001\n\u00031y\u0003\u0003\u0005\u0007>u\u0002\u000b\u0011\u0002D\u0019\u000f\u001d1y$\u0010E\u0001\r\u00032qA\"\u0012>\u0011\u000319\u0005C\u0004\u0004\"\u0012#\tA\"\u0013\t\u000f\u0019-C\t\"\u0001\u0007N\u001d9a1M\u001f\t\u0002\u0019\u0015da\u0002D4{!\u0005a\u0011\u000e\u0005\b\u0007CCE\u0011\u0001D6\u0011\u001d1Y\u0005\u0013C\u0001\r[:qAb\u001f>\u0011\u00031iHB\u0004\u0007\u0000uB\tA\"!\t\u000f\r\u0005F\n\"\u0001\u0007\u0004\"9a1\n'\u0005\u0002\u0019\u0015ua\u0002DJ{!\u0005aQ\u0013\u0004\b\r/k\u0004\u0012\u0001DM\u0011\u001d\u0019\t\u000b\u0015C\u0001\r7CqAb\u0013Q\t\u00031ijB\u0004\u0007,vB\tA\",\u0007\u000f\u0019=V\b#\u0001\u00072\"91\u0011\u0015+\u0005\u0002\u0019M\u0006b\u0002D[)\u0012\u0005aq\u0017\u0005\b\r\u0017\"F\u0011\u0001Df\u0011\u001d19/\u0010C\u0001\rS4aab\u0001\f\t\u001e\u0015\u0001BCD\u00133\nU\r\u0011\"\u0001\b(!QqQG-\u0003\u0012\u0003\u0006Ia\"\u000b\t\u000f\r\u0005\u0016\f\"\u0001\b8!IqQH-C\u0002\u0013\u0005sq\b\u0005\t\u000f\u000fJ\u0006\u0015!\u0003\bB!Iq\u0011J-C\u0002\u0013\u0005s1\n\u0005\t\u000f?J\u0006\u0015!\u0003\bN!9q\u0011M-\u0005B\u001d\r\u0004bBD33\u0012\u0005sq\r\u0005\b\u000f_JF\u0011ID9\u0011\u001d9i(\u0017C!\u000f\u007fBqab!Z\t\u0003:)\t\u0003\u0006\b\ffC)\u0019!C!\u000f\u001bCqa\"(Z\t\u0003:y\nC\u0005\b,f\u000b\t\u0011\"\u0001\b.\"Iq\u0011W-\u0012\u0002\u0013\u0005q1\u0017\u0005\n\u000f\u000fL\u0016\u0011!C!\u000f\u0013D\u0011bb3Z\u0003\u0003%\ta\"4\t\u0013\u001dU\u0017,!A\u0005\u0002\u001d]\u0007\"CDo3\u0006\u0005I\u0011IDp\u0011%9I/WA\u0001\n\u00039Y\u000fC\u0005\bpf\u000b\t\u0011\"\u0011\br\u001eIqQ_\u0006\u0002\u0002#%qq\u001f\u0004\n\u000f\u0007Y\u0011\u0011!E\u0005\u000fsDqa!)r\t\u0003AY\u0001C\u0005\b\u0004F\f\t\u0011\"\u0012\b\u0006\"Iaq]9\u0002\u0002\u0013\u0005\u0005R\u0002\u0005\n\r\u0017\n\u0018\u0011!CA\u0011#Aqaa\u0004\f\t\u0003AI\u0002C\u0004\t>-!\t\u0001c\u0010\t\u000f!%3\u0002\"\u0001\tL!9\u0001rK\u0006\u0005\u0002!e\u0003b\u0002E,\u0017\u0011\u0005\u0001R\r\u0005\b\u0011SZA\u0011\u0001E6\u0011\u001dA\th\u0003C\u0001\u0011gBq\u0001c\u001e\f\t\u0013AI\bC\u0004\t\b.!I\u0001##\t\u000f!=5\u0002\"\u0003\t\u0012\"9\u0001rS\u0006\u0005\n!eeA\u0002Ed\u0017\u0011AI\rC\u0006\tF\u0006\r!Q1A\u0005\u0002!5\u0007b\u0003Ej\u0003\u0007\u0011\t\u0011)A\u0005\u0011\u001fD1\u0002#6\u0002\u0004\t\r\t\u0015a\u0003\tX\"A1\u0011UA\u0002\t\u0003AI\u000e\u0003\u0005\td\u0006\rA\u0011\u0001Es\u0011!A9/a\u0001\u0005\u0002!%\b\u0002\u0003E{\u0003\u0007!\t\u0001c>\t\u0011!u\u00121\u0001C\u0001\u0013\u0007A\u0001\u0002#\u0013\u0002\u0004\u0011\u0005\u0011r\u0001\u0005\t\u000f\u0007\u000b\u0019\u0001\"\u0011\b\u0006\u001a1\u00112B\u0006\u0005\u0013\u001bA1\"c\u0004\u0002\u001a\t\u0005\t\u0015!\u0003\bB!A1\u0011UA\r\t\u0003I\t\u0002\u0003\u0006\td\u0006e!\u0019!C\u0001\u0013/A\u0011\"#\u0007\u0002\u001a\u0001\u0006Ia!%\t\u0015%m\u0011\u0011\u0004b\u0001\n\u0003Ii\u0002C\u0005\n \u0005e\u0001\u0015!\u0003\u0007P!Y\u0011\u0012EA\r\u0011\u000b\u0007I\u0011AE\u0012\u0011-I9$!\u0007\t\u0006\u0004%\t!#\u000f\u0007\r%m2\u0002BE\u001f\u0011-Iy$a\u000b\u0003\u0006\u0004%\t!#\u0011\t\u0017%\r\u00131\u0006B\u0001B\u0003%Aq\u000e\u0005\f\u0011G\fYC!b\u0001\n\u0003I)\u0005C\u0006\n\u001a\u0005-\"\u0011!Q\u0001\n\u0011U\u0006bCE$\u0003W\u0011\t\u0011)A\u0005\u0013'A\u0001b!)\u0002,\u0011\u0005\u0011\u0012\n\u0005\t\u0007C\u000bY\u0003\"\u0001\nT!A\u0011\u0012LA\u0016\t\u0003IY\u0006C\u0006\nb\u0005-\u0002R1A\u0005\u0002%\r\u0004\u0002CE3\u0003W!\t!#\u0011\t\u0011%\u001d\u00141\u0006C\u0001\u0013SB\u0001bb!\u0002,\u0011\u0005sQ\u0011\u0005\b\u0013_ZA\u0011BE9\u0011\u001dI9h\u0003C\u0005\u0013sB!\"# \f\u0011\u000b\u0007I\u0011AE@\u0011)Iii\u0003EC\u0002\u0013\u0005\u0011r\u0010\u0005\b\u0013\u001f[A\u0011BEI\u0011\u001dI)j\u0003C\u0005\u0013/Cq!#(\f\t\u0013Iy\nC\u0004\n$.!I!#*\u0007\u000f%e6\"!\u0003\n<\"Y\u00012]A+\u0005\u000b\u0007I\u0011AE_\u0011-II\"!\u0016\u0003\u0002\u0003\u0006I\u0001b%\t\u0017%}\u0016Q\u000bBC\u0002\u0013E\u0011\u0012\u0019\u0005\f\u0013\u0007\f)F!A!\u0002\u0013I\u0019\u0002\u0003\u0005\u0004\"\u0006UC\u0011AEc\u0011-Ii-!\u0016\t\u0006\u0004%\t!#\u000f\t\u0017%=\u0017Q\u000bEC\u0002\u0013\u0005\u0011\u0012\u001b\u0005\t\u0013;\f)\u0006\"\u0001\n`\"A\u0011\u0012^A+\t\u0003IY\u000f\u0003\u0005\b\u0004\u0006UC\u0011IDC\r\u0019Iyo\u0003\u0003\nr\"Y\u0011rHA6\u0005\u000b\u0007I\u0011AE!\u0011-I\u0019%a\u001b\u0003\u0002\u0003\u0006I\u0001b\u001c\t\u001b!\r\u00181\u000eB\u0001B\u0003%A1SA,\u00115Iy,a\u001b\u0003\u0002\u0003\u0006I!c\u0005\u0002\\!A1\u0011UA6\t\u0003I\u0019\u0010\u0003\u0005\u0004\"\u0006-D\u0011AE\u007f\u0011!II&a\u001b\u0005\u0002)\r\u0001\u0002\u0003Dt\u0003W\"\tAc\u0002\u0007\r)E1\u0002\u0002F\n\u00115Iy$! \u0003\u0002\u0003\u0006I\u0001b\u001c\u0002n!i\u00012]A?\u0005\u0003\u0005\u000b\u0011\u0002CJ\u0003/BQ\"c0\u0002~\t\u0005\t\u0015!\u0003\n\u0014\u0005m\u0003\u0002CBQ\u0003{\"\tA#\u0006\t\u0011\r\u0005\u0016Q\u0010C\u0001\u0015?A\u0001\"#\u0017\u0002~\u0011\u0005#R\u0005\u0005\t\u0013;\fi\b\"\u0011\u000b*\u00191!RF\u0006\u0005\u0015_AQ\"c\u0010\u0002\u000e\n\u0005\t\u0015!\u0003\u0005p\u00055\u0004\"\u0004Er\u0003\u001b\u0013\t\u0011)A\u0005\t'\u000b9\u0006C\u0007\n@\u00065%\u0011!Q\u0001\n%M\u00111\f\u0005\t\u0007C\u000bi\t\"\u0001\u000b2!A1\u0011UAG\t\u0003QY\u0004\u0003\u0005\nZ\u00055E\u0011\tF!\u0011!Ii.!$\u0005B)\u0015cA\u0002F%\u0017\u0011QY\u0005C\u0007\n@\u0005u%\u0011!Q\u0001\n\u0011=\u0014Q\u000e\u0005\u000e\u0011G\fiJ!A!\u0002\u0013!\u0019*a\u0016\t\u001b%}\u0016Q\u0014B\u0001B\u0003%\u00112CA.\u0011!\u0019\t+!(\u0005\u0002)5\u0003\u0002CBQ\u0003;#\tAc\u0016\t\u0011%e\u0013Q\u0014C!\u0015;B\u0001\"#8\u0002\u001e\u0012\u0005#\u0012\r\u0004\u0007\u0015KZAAc\u001a\t\u001b%}\u0012Q\u0016B\u0001B\u0003%AqNA7\u00115A\u0019/!,\u0003\u0002\u0003\u0006I\u0001b%\u0002X!i\u0011rXAW\u0005\u0003\u0005\u000b\u0011BE\n\u00037B\u0001b!)\u0002.\u0012\u0005!\u0012\u000e\u0005\t\u0007C\u000bi\u000b\"\u0001\u000bt!A\u0011\u0012LAW\t\u0003RI\b\u0003\u0005\n^\u00065F\u0011\tF?\r\u0019Q\ti\u0003\u0003\u000b\u0004\"i\u0011rHA_\u0005\u0003\u0005\u000b\u0011\u0002C8\u0003[BQ\u0002c9\u0002>\n\u0005\t\u0015!\u0003\u0005\u0014\u0006]\u0003\"DE`\u0003{\u0013\t\u0011)A\u0005\u0013'\tY\u0006\u0003\u0005\u0004\"\u0006uF\u0011\u0001FC\u0011!\u0019\t+!0\u0005\u0002)=\u0005\u0002CE-\u0003{#\tE#&\t\u0011%u\u0017Q\u0018C!\u001533aA#(\f\t)}\u0005b\u0003Er\u0003\u001b\u0014\t\u0011)A\u0005\t'C\u0001b!)\u0002N\u0012\u0005!\u0012\u0015\u0005\n\u0015O\u000bi\r)A\u0005\u0015SC\u0011Bc,\u0002N\u0002\u0006IA#-\t\u0015)M\u0016Q\u001ab\u0001\n\u0003Q)\fC\u0005\u000b:\u00065\u0007\u0015!\u0003\u000b8\"A\u00112DAg\t\u0003QY\f\u0003\u0005\u000bB\u00065G\u0011\u0001Fb\u0011)Q9-!4C\u0002\u0013\u0005qQ\u001a\u0005\n\u0015\u0013\fi\r)A\u0005\u000f\u001fD!\"c0\u0002N\n\u0007I\u0011AEa\u0011%I\u0019-!4!\u0002\u0013I\u0019B\u0002\u0004\u000bL.!!R\u001a\u0005\f\u0013\u007f\t9O!b\u0001\n\u0003I\t\u0005C\u0006\nD\u0005\u001d(\u0011!Q\u0001\n\u0011=\u0004\"\u0004Er\u0003O\u0014\t\u0011)A\u0005\t'\u000b9\u0006C\u0006\nH\u0005\u001d(\u0011!Q\u0001\n)\r\u0006\u0002CBQ\u0003O$\tAc4\t\u0011\r\u0005\u0016q\u001dC\u0001\u00153D\u0001\"#\u0017\u0002h\u0012\u0005#r\u001c\u0005\t\rO\f9\u000f\"\u0001\u000bd\u001a1!r]\u0006\u0005\u0015SD1\"c\u0010\u0002z\n\u0015\r\u0011\"\u0001\u000bn\"Y\u00112IA}\u0005\u0003\u0005\u000b\u0011\u0002Fx\u0011-A\u0019/!?\u0003\u0006\u0004%\t!#0\t\u0017%e\u0011\u0011 B\u0001B\u0003%A1\u0013\u0005\f\u0015g\fIPaA!\u0002\u0017Q)\u0010\u0003\u0005\u0004\"\u0006eH\u0011\u0001F|\u0011!II&!?\u0005\u0002-\r\u0001\u0002CDB\u0003s$\te\"\"\t\u0011\u0019\u001d\u0018\u0011 C\u0001\u0017\u000f1qac\u0003\f\u0003\u0013Yi\u0001\u0003\u0005\u0004\"\n5A\u0011AF\u000b\u0011!YIB!\u0004\u0007\u0002-m\u0001\u0002CF\u000f\u0005\u001b1\t\u0001#:\u0007\r-}1\u0002BF\u0011\u0011-YIB!\u0006\u0003\u0006\u0004%\tac\u0007\t\u0017-\r\"Q\u0003B\u0001B\u0003%aQ\u0004\u0005\f\u0011G\u0014)B!b\u0001\n\u0003A)\u000fC\u0006\n\u001a\tU!\u0011!Q\u0001\n\u0011U\u0004\u0002CBQ\u0005+!\ta#\n\t\u0011-u!Q\u0003C\u0001\u0011KD\u0001b#\f\u0003\u0016\u0011\u0005\u0011R\u0004\u0005\t\u0017_\u0011)\u0002\"\u0001\f2!Aq1\u0011B\u000b\t\u0003:)I\u0002\u0004\f8-!1\u0012\b\u0005\f\u00173\u0011IC!b\u0001\n\u0003YY\u0002C\u0006\f$\t%\"\u0011!Q\u0001\n\u0019u\u0001b\u0003Er\u0005S\u0011)\u0019!C\u0001\u0017wA1\"#\u0007\u0003*\t\u0005\t\u0015!\u0003\u00050!A1\u0011\u0015B\u0015\t\u0003Yi\u0004\u0003\u0005\f\u001e\t%B\u0011\u0001Es\u0011!YiC!\u000b\u0005\u0002%u\u0001\u0002\u0003Ec\u0005S!\t!#\u0011\t\u0011\u001d\r%\u0011\u0006C!\u000f\u000bCqa#\u0012\f\t\u0013Y9\u0005C\u0004\fF-!Ia#\u0014\t\u000f-u3\u0002\"\u0001\f`!91rN\u0006\u0005\u0002-E\u0004bBFA\u0017\u0011\u000512Q\u0004\b\u0017'[\u0001\u0012BFK\r\u001dY9j\u0003E\u0005\u00173C\u0001b!)\u0003J\u0011\u00051r\u0015\u0005\u000b\u0017S\u0013IE1A\u0005\u0002\r-\u0006\"CFV\u0005\u0013\u0002\u000b\u0011BB<\u0011\u001dYik\u0003C\u0001\u0017_Cqa#2\f\t\u0013Y9M\u0002\u0004\fX.!1\u0012\u001c\u0005\f\u0017\u0017\u0014)F!A!\u0002\u0013YY\u000e\u0003\u0005\u0004\"\nUC\u0011AFs\u0011!Y\u0019P!\u0016\u0005B-U\b\u0002CF}\u0005+\"\tec?\t\u000f-}8\u0002\"\u0003\r\u0002!9A2C\u0006\u0005\n1UaA\u0002G\u0011\u0017\u0015a\u0019\u0003C\u0006\f4\n\r$Q1A\u0005\u00021\u0015\u0002b\u0003G\u0019\u0005G\u0012\t\u0011)A\u0005\u0019OA\u0001b!)\u0003d\u0011\u0005A2\u0007\u0005\t\u0019\u0003\u0012\u0019\u0007\"\u0001\rD!AA2\nB2\t\u0003ai\u0005C\u0005\rV-\t\t\u0011b\u0003\rX\u00191A2M\u0006\u0006\u0019KB1B\"\u0003\u0003r\t\u0015\r\u0011\"\u0001\rh!YAr\u000eB9\u0005\u0003\u0005\u000b\u0011\u0002G5\u0011!\u0019\tK!\u001d\u0005\u00021E\u0004\u0002\u0003G!\u0005c\"\t\u0001d\u0011\t\u00111-#\u0011\u000fC\u0001\u0019\u001bB\u0011\u0002d\u001e\f\u0003\u0003%Y\u0001$\u001f\u0007\r1u4\u0002\u0002G@\u0011-Y\u0019La \u0003\u0002\u0003\u0006Ia!%\t\u0017-]&q\u0010B\u0001B\u0003%1\u0011\u0013\u0005\f\u0017\u000f\u0013yH!A!\u0002\u0013a9\t\u0003\u0005\u0004\"\n}D\u0011\u0001GI\u0011)a\u0019Ka C\u0002\u0013\u0005AR\n\u0005\n\u0019K\u0013y\b)A\u0005\u0019\u001fB\u0011\u0002d*\u0003\u0000\u0001\u0006Kab4\t\u00131%&q\u0010Q!\n1-\u0006\"\u0003GZ\u0005\u007f\u0002\u000b\u0011\u0002G[\u0011!Y\u0019Pa \u0005B1e\u0006\u0002CF}\u0005\u007f\"\t\u0005$0\t\u00111\u0005'q\u0010C\u0001\u0007w1q\u0001d1\u0003\u0000\u0001a)\rC\u0006\rH\ne%Q1A\u0005B1%\u0007b\u0003Gg\u00053\u0013\t\u0011)A\u0005\u0019\u0017D\u0001b!)\u0003\u001a\u0012\u0005Ar\u001a\u0005\t\u0017s\u0014I\n\"\u0011\rX\"9A2\\\u0006\u0005\n1u\u0007b\u0002Gn\u0017\u0011%AR\u001d\u0004\u0007\u0019[\\\u0011\u0001d<\t\u0017-\u001d%q\u0015B\u0001B\u0003%A\u0012\u001f\u0005\t\u0007C\u00139\u000b\"\u0001\r|\"AQ\u0012\u0002BT\t\u0003Ii\u0002C\u0005\u000e\f-\t\t\u0011b\u0001\u000e\u000e!9Q\u0012D\u0006\u0005\n5m\u0001bBG\r\u0017\u0011%Q\u0012\u0006\u0005\b\u001b3YA\u0011BG\u0018\u0011\u001diid\u0003C\u0005\u001b\u007fAq!d\u0012\f\t\u0003iI\u0005C\u0004\u000eN-!I!d\u0014\t\u000f5M3\u0002\"\u0001\u000eV!9Q2M\u0006\u0005\n5\u0015\u0004bBG:\u0017\u0011\u0005QR\u000f\u0005\b\u001bwZA\u0011AG?\u0011\u001di\ti\u0003C\u0005\u001b\u0007Cq!d&\f\t\u0003iI\nC\u0004\u000e(.!I!$+\t\u000f5]6\u0002\"\u0001\u000e:\"9Q\u0012Z\u0006\u0005\n5-\u0007bBGm\u0017\u0011\u0005Q2\u001c\u0005\b\u001bC\\A\u0011AGr\u0011\u001diIo\u0003C\u0005\u001bWDq!$@\f\t\u0003iy\u0010C\u0004\u000f\u0006-!IAd\u0002\t\u000f9U1\u0002\"\u0003\u000f\u0018!9aRE\u0006\u0005\n9\u001d\u0002b\u0002H\u0016\u0017\u0011%aR\u0006\u0005\b\u001dcYA\u0011\u0002H\u001a\u0011\u001dq\te\u0003C\u0005\u001d\u0007BqAd\u0012\f\t\u0013qI\u0005C\u0004\u000fN-!IAd\u0014\t\u000f9u3\u0002\"\u0003\u000f`!9aRN\u0006\u0005\n9=\u0004b\u0002H?\u0017\u0011\u0005ar\u0010\u0005\t\u001d;[\u0001\u0015!\u0003\u000f \"9arV\u0006\u0005\n9E\u0006b\u0002H[\u0017\u0011\u0005ar\u0017\u0005\b\u001d{[A\u0011\u0001H`\u0011\u001dq\u0019m\u0003C\u0001\u001d\u000bDqAd5\f\t\u0003q)\u000e\u0003\u0007\u000fd.\u0011\t\u0011!A\u0005\u0002\u0001q)\u000fC\u0004\u0010\u001e\u0001!\ted\b\t\u000f=-\u0002\u0001\"\u0011\u0010.!9qR\b\u0001\u0005B=}\u0002bBH+\u0001\u0011\u0005sr\u000b\u0005\b\u001f7\u0002A\u0011IH/\u00119y)\u0007\u0001I\u0001\u0004\u0003\u0005I\u0011BH4\u001f[\u00121BS1wC6K'O]8sg*!11BB\u0007\u0003\u001d\u0011XO\u001c;j[\u0016TAaa\u0004\u0004\u0012\u00059!/\u001a4mK\u000e$(BAB\n\u0003\u0015\u00198-\u00197b'\u001d\u00011qCB\u0012\u0007_\u0001Ba!\u0007\u0004 5\u001111\u0004\u0006\u0005\u0007;\u0019i!\u0001\u0005j]R,'O\\1m\u0013\u0011\u0019\tca\u0007\u0003\u0017MKXNY8m)\u0006\u0014G.\u001a\t\u0005\u0007K\u0019Y#\u0004\u0002\u0004()!1\u0011FB\u0007\u0003\r\t\u0007/[\u0005\u0005\u0007[\u00199C\u0001\u0007KCZ\fWK\\5wKJ\u001cX\r\u0005\u0003\u00042\rMRBAB\u0005\u0013\u0011\u0019)d!\u0003\u0003\u0019Q;xnV1z\u0007\u0006\u001c\u0007.Z:\u0002\r\u0011Jg.\u001b;%\u0007\u0001!\"a!\u0010\u0011\t\r}2\u0011I\u0007\u0003\u0007#IAaa\u0011\u0004\u0012\t!QK\\5u\u0003\u001di\u0017N\u001d:peN,\"a!\u0013\u0011\u0011\r-3QKB-\u0007Sj!a!\u0014\u000b\t\r=3\u0011K\u0001\b[V$\u0018M\u00197f\u0015\u0011\u0019\u0019f!\u0005\u0002\u0015\r|G\u000e\\3di&|g.\u0003\u0003\u0004X\r5#aC,fC.D\u0015m\u001d5NCB\u0004Baa\u0017\u0004f5\u00111Q\f\u0006\u0005\u0007?\u001a\t'\u0001\u0003mC:<'BAB2\u0003\u0011Q\u0017M^1\n\t\r\u001d4Q\f\u0002\f\u00072\f7o\u001d'pC\u0012,'\u000f\u0005\u0004\u0004l\rE4QO\u0007\u0003\u0007[RAaa\u001c\u0004\u0012\u0005\u0019!/\u001a4\n\t\rM4Q\u000e\u0002\u000e/\u0016\f7NU3gKJ,gnY3\u0011\u0007\r]$\"D\u0001\u0001\u0005)i\u0015N\u001d:pe&k\u0007\u000f\u001c\t\u0004\u0007oZ!A\u0003&bm\u0006l\u0015N\u001d:peN)1b!!\u0004\fB!1qOBB\u0013\u0011\u0019)ia\"\u0003\u000bI{w\u000e^:\n\t\r%51\u0004\u0002\b\u001b&\u0014(o\u001c:t!\u0011\u00199h!$\n\t\ru41F\u0001\u0006_^tWM\u001d\t\u0005\u0007o\u001a\u0019*\u0003\u0003\u0004\u0016\u000e]%AB*z[\n|G.\u0003\u0003\u0004\u001a\u000em!aB*z[\n|Gn]\u0001\fG2\f7o\u001d'pC\u0012,'/\u0006\u0002\u0004Z\u0005a1\r\\1tg2{\u0017\rZ3sA\u00051A(\u001b8jiz\"baa\u001f\u0004&\u000e\u001d\u0006bBBH\u001f\u0001\u00071\u0011\u0013\u0005\b\u00077{\u0001\u0019AB-\u0003!)h.\u001b<feN,WCAB<\u0003%)h.\u001b<feN,\u0007%\u0001\bsk:$UMZ5oSRLwN\\:\u0016\u0005\rM\u0006\u0003BB[\u0007\u007fsAaa\u001e\u00048&!1\u0011XB^\u0003-!WMZ5oSRLwN\\:\n\t\ru61\u0004\u0002\f\t\u00164\u0017N\\5uS>t7/\u0003\u0003\u0004B\u000e\r'A\u0004*v]\u0012+g-\u001b8ji&|gn]\u0005\u0005\u0007\u000b\u001cYL\u0001\tEK\u001aLg.\u001b;j_:\u001c8\t\\1tg\u0006Y!k\\8u!\u0006\u001c7.Y4f+\t\u0019YM\u0005\u0004\u0004N\u000eE7\u0011\u001c\u0004\u0007\u0007\u001f\u001c\u0002aa3\u0003\u0019q\u0012XMZ5oK6,g\u000e\u001e \u0011\t\rM7Q[\u0007\u0002\u0017%!1q[BB\u0005-\u0011vn\u001c;QC\u000e\\\u0017mZ3\u0011\t\r]41\\\u0005\u0005\u0007;\u001cyN\u0001\fTs:\u001c\u0007N]8oSj,G\rV3s[NKXNY8m\u0013\u0011\u0019\to!\u0003\u0003'MKhn\u00195s_:L'0\u001a3Ts6\u0014w\u000e\\:\u0002\u0013I{w\u000e^\"mCN\u001cXCABt%\u0019\u0019Ioa;\u0004r\u001a11q\u001a\u000b\u0001\u0007O\u0004Baa5\u0004n&!1q^BB\u0005%\u0011vn\u001c;DY\u0006\u001c8\u000f\u0005\u0003\u0004x\rM\u0018\u0002BB{\u0007?\u0014QdU=oG\"\u0014xN\\5{K\u0012lu\u000eZ;mK\u000ec\u0017m]:Ts6\u0014w\u000e\\\u0001\r\u000b6\u0004H/\u001f)bG.\fw-Z\u000b\u0003\u0007w\u0014ba!@\u0004\u0000\u000eegABBh+\u0001\u0019Y\u0010\u0005\u0003\u0004T\u0012\u0005\u0011\u0002\u0002C\u0002\u0007\u0007\u0013A\"R7qif\u0004\u0016mY6bO\u0016\f\u0011#R7qif\u0004\u0016mY6bO\u0016\u001cE.Y:t+\t!IA\u0005\u0004\u0005\f\u001151\u0011\u001f\u0004\u0007\u0007\u001f4\u0002\u0001\"\u0003\u0011\t\rMGqB\u0005\u0005\t#\u0019\u0019IA\tF[B$\u0018\u0010U1dW\u0006<Wm\u00117bgN\f!B]8pi2{\u0017\rZ3s+\t!9B\u0005\u0004\u0005\u001a\u0011mAQ\u0005\u0004\u0007\u0007\u001f<\u0002\u0001b\u0006\u0011\t\r]DQD\u0005\u0005\t?!\tC\u0001\u0005MCjLH+\u001f9f\u0013\u0011!\u0019ca\u0007\u0003\u000bQK\b/Z:\u0011\t\r]DqE\u0005\u0005\tS!\tCA\u000bGY\u0006<\u0017i\u001a8pgRL7mQ8na2,G/\u001a:\u0002\u001bM$\u0018\r^5d!\u0006\u001c7.Y4f)\u0011!y\u0003\"\u000e\u0011\t\r]D\u0011G\u0005\u0005\tg\u00199J\u0001\u0007N_\u0012,H.Z*z[\n|G\u000eC\u0004\u00058a\u0001\r\u0001\"\u000f\u0002\u0011\u0019,H\u000e\u001c8b[\u0016\u0004B\u0001b\u000f\u0005J9!AQ\bC#!\u0011!yd!\u0005\u000e\u0005\u0011\u0005#\u0002\u0002C\"\u0007s\ta\u0001\u0010:p_Rt\u0014\u0002\u0002C$\u0007#\ta\u0001\u0015:fI\u00164\u0017\u0002\u0002C&\t\u001b\u0012aa\u0015;sS:<'\u0002\u0002C$\u0007#\t!b\u00197bgN\u001c\u0015m\u00195f!!\u00199\bb\u0015\u0005X\u0011U\u0014\u0002\u0002C+\u0007g\u00111\u0002V<p/\u0006L8)Y2iKB\"A\u0011\fC2!\u0019\u0019Y\u0006b\u0017\u0005`%!AQLB/\u0005\u0015\u0019E.Y:t!\u0011!\t\u0007b\u0019\r\u0001\u0011YAQM\r\u0002\u0002\u0003\u0005)\u0011\u0001C4\u0005\ryF%M\t\u0005\tS\"y\u0007\u0005\u0003\u0004@\u0011-\u0014\u0002\u0002C7\u0007#\u0011qAT8uQ&tw\r\u0005\u0003\u0004@\u0011E\u0014\u0002\u0002C:\u0007#\u00111!\u00118z!\u0011\u00199\bb\u001e\n\t\u0011e4q\u0013\u0002\f\u00072\f7o]*z[\n|G.\u0001\u0007qC\u000e\\\u0017mZ3DC\u000eDW\r\u0005\u0005\u0004x\u0011MCq\u0010C\u0018!\u0011\u0019Y\u0006\"!\n\t\u0011\r5Q\f\u0002\b!\u0006\u001c7.Y4f\u0003-iW\r\u001e5pI\u000e\u000b7\r[3\u0011\u0011\r]D1\u000bCE\t'\u0003B\u0001b#\u0005\u00106\u0011AQ\u0012\u0006\u0005\u0007\u001f\u0019i&\u0003\u0003\u0005\u0012\u00125%AB'fi\"|G\r\u0005\u0003\u0004x\u0011U\u0015\u0002\u0002CL\u0007/\u0013A\"T3uQ>$7+_7c_2\f\u0001cY8ogR\u0014Xo\u0019;pe\u000e\u000b7\r[3\u0011\u0011\r]D1\u000bCO\t'\u0003D\u0001b(\u0005(B1A1\u0012CQ\tKKA\u0001b)\u0005\u000e\nY1i\u001c8tiJ,8\r^8s!\u0011!\t\u0007b*\u0005\u0017\u0011%F$!A\u0001\u0002\u000b\u0005Aq\r\u0002\u0004?\u0012\u0012\u0014A\u00034jK2$7)Y2iKBA1q\u000fC*\t_#)\f\u0005\u0003\u0005\f\u0012E\u0016\u0002\u0002CZ\t\u001b\u0013QAR5fY\u0012\u0004Baa\u001e\u00058&!A\u0011XBL\u0005)!VM]7Ts6\u0014w\u000e\\\u0001\fiB\f'/Y7DC\u000eDW\r\u0005\u0005\u0004x\u0011MCq\u0018Cka\u0011!\t\r\"3\u0011\r\u0011-E1\u0019Cd\u0013\u0011!)\r\"$\u0003\u0019QK\b/\u001a,be&\f'\r\\3\u0011\t\u0011\u0005D\u0011\u001a\u0003\f\t\u0017t\u0012\u0011!A\u0001\u0006\u0003!iMA\u0002`IM\nB\u0001\"\u001b\u0005PB!A1\u0012Ci\u0013\u0011!\u0019\u000e\"$\u0003%\u001d+g.\u001a:jG\u0012+7\r\\1sCRLwN\u001c\t\u0005\u0007o\"9.\u0003\u0003\u0005Z\u000e]%A\u0003+za\u0016\u001c\u00160\u001c2pY\u0006aA/\u001f9f)\u0006<7)Y2iKB\u001911\u001b\u0011\u0003\u0019QL\b/\u001a+bO\u000e\u000b7\r[3\u0014\u0007\u0001\"\u0019\u000f\u0005\u0004\u0005f\u0012%HQ^\u0007\u0003\tOTAaa\u0003\u0004\u0012%!A1\u001eCt\u0005A\u0019E.Y:t-\u0006dW/Z\"p[B\fG\u000f\u0005\u0004\u0005p\u0012MHQ_\u0007\u0003\tcTAaa\u001c\u0004^%!11\u000fCya\u0011!90b\u0001\u0011\r\r]D\u0011`C\u0001\u0013\u0011!Y\u0010\"@\u0003\u000fQK\b/\u001a+bO&!Aq`B\u0014\u0005!!\u0016\u0010]3UC\u001e\u001c\b\u0003\u0002C1\u000b\u0007!1\"\"\u0002!\u0003\u0003\u0005\tQ!\u0001\u0005h\t\u0019q\f\n\u001b\u0015\u0005\u0011u\u0017a\u0003;za\u0016\u001c%/Z1u_J,\"!\"\u0004\u0011\r\rmSqBC\n\u0013\u0011)\tb!\u0018\u0003\u0017QC'/Z1e\u0019>\u001c\u0017\r\u001c\t\u0005\u0007K))\"\u0003\u0003\u0006\u0018\r\u001d\"a\u0003+za\u0016\u001c%/Z1u_J\fA\u0002^=qK\u000e\u0013X-\u0019;pe\u0002\nAbY8naV$XMV1mk\u0016$B!b\b\u0006,A1Aq\u001eCz\u000bC\u0001D!b\t\u0006(A11q\u000fC}\u000bK\u0001B\u0001\"\u0019\u0006(\u0011YQ\u0011\u0006\u0013\u0002\u0002\u0003\u0005)\u0011\u0001C4\u0005\ryFE\u000e\u0005\b\u000b[!\u0003\u0019AC\u0018\u0003\r\u0019Gn\u001d\u0019\u0005\u000bc))\u0004\u0005\u0004\u0004\\\u0011mS1\u0007\t\u0005\tC*)\u0004\u0002\u0007\u00068\u0015-\u0012\u0011!A\u0001\u0006\u0003!9GA\u0002`IU\nq\u0001^=qKR\u000bw\r\u0006\u0003\u0006>\u0015\u001d\u0003\u0007BC \u000b\u0007\u0002baa\u001e\u0005z\u0016\u0005\u0003\u0003\u0002C1\u000b\u0007\"1\"\"\u0012&\u0003\u0003\u0005\tQ!\u0001\u0005h\t\u0019q\fJ\u001c\t\u000f\u0015%Q\u00051\u0001\u0006\u0014\u00059Ao\\*dC2\fWCBC'\u000bK*)\u0006\u0006\u0004\u0006P\u0015MT\u0011\u0010\u000b\u0005\u000b#*I\u0007\u0006\u0003\u0006T\u0015e\u0003\u0003\u0002C1\u000b+\"q!b\u0016'\u0005\u0004!9GA\u0001T\u0011%)YFJA\u0001\u0002\b)i&\u0001\u0006fm&$WM\\2fIE\u0002ba!\r\u0006`\u0015\r\u0014\u0002BC1\u0007\u0013\u0011A\u0002S1t\u0015\u00064\u0018m\u00117bgN\u0004B\u0001\"\u0019\u0006f\u00119Qq\r\u0014C\u0002\u0011\u001d$!\u0001&\t\u000f\u0015-d\u00051\u0001\u0006n\u0005!!m\u001c3z!)\u0019y$b\u001c\u0004v\u0015\rT1K\u0005\u0005\u000bc\u001a\tBA\u0005Gk:\u001cG/[8oe!9QQ\u000f\u0014A\u0002\u0015]\u0014!B2bG\",\u0007\u0003CB<\t'*\u0019'b\u0015\t\u000f\u0015md\u00051\u0001\u0006d\u0005\u00191.Z=\u0002#\rd\u0017m]:ICNT\u0015M^1DY\u0006\u001c8/\u0006\u0002\u0006\u0002B11\u0011GC0\u000b\u0007\u0003D!\"\"\u0006\nB111\fC.\u000b\u000f\u0003B\u0001\"\u0019\u0006\n\u0012YQ1\u0012\u0015\u0002\u0002\u0003\u0005)\u0011\u0001C4\u0005\ryF\u0005O\u0001\u0013G2\f7o\u001d%bg*\u000bg/Y\"mCN\u001c\b%\u0001\tnKRD\u0007*Y:KCZ\f7\t\\1tgV\u0011Q1\u0013\t\u0007\u0007c)y\u0006\"#\u0002#5,G\u000f\u001b%bg*\u000bg/Y\"mCN\u001c\b%A\tgS\u0016dG\rS1t\u0015\u00064\u0018m\u00117bgN,\"!b'\u0011\r\rERq\fCX\u0003I1\u0017.\u001a7e\u0011\u0006\u001c(*\u0019<b\u00072\f7o\u001d\u0011\u0002%\r|gn\u001d;s\u0011\u0006\u001c(*\u0019<b\u00072\f7o]\u000b\u0003\u000bG\u0003ba!\r\u0006`\u0015\u0015\u0006\u0007BCT\u000bW\u0003b\u0001b#\u0005\"\u0016%\u0006\u0003\u0002C1\u000bW#1\"\",/\u0003\u0003\u0005\tQ!\u0001\u0005h\t\u0019q\fJ\u001d\u0002'\r|gn\u001d;s\u0011\u0006\u001c(*\u0019<b\u00072\f7o\u001d\u0011\u0002%Q\u0004\u0018M]1n\u0011\u0006\u001c(*\u0019<b\u00072\f7o]\u000b\u0003\u000bk\u0003ba!\r\u0006`\u0015]\u0006\u0007BC]\u000b{\u0003b\u0001b#\u0005D\u0016m\u0006\u0003\u0002C1\u000b{#1\"b01\u0003\u0003\u0005\tQ!\u0001\u0005N\n!q\fJ\u00191\u0003M!\b/\u0019:b[\"\u000b7OS1wC\u000ec\u0017m]:!\u0003\u0015\t'm\u001c:u)\u0011!I'b2\t\u000f\u0015%\u0017\u00071\u0001\u0005:\u0005\u0019Qn]4\u0002\u001f\u0015\u0013(o\u001c:J]:,'o\u00117bgN$B\u0001\"\u001b\u0006P\"9Q\u0011\u001b\u001aA\u0002\rE\u0015aA:z[\u0006\u0001RI\u001d:pe&sg.\u001a:N_\u0012,H.\u001a\u000b\u0005\tS*9\u000eC\u0004\u0006RN\u0002\ra!%\u0002!\u0015\u0013(o\u001c:Ti\u0006$\u0018nY\"mCN\u001cH\u0003\u0002C5\u000b;Dq!\"55\u0001\u0004\u0019\t*A\tFeJ|'o\u0015;bi&\u001cWj\u001c3vY\u0016$B\u0001\"\u001b\u0006d\"9Q\u0011[\u001bA\u0002\rE\u0015AD#se>\u0014hj\u001c;NK6\u0014WM\u001d\u000b\u0007\tS*I/b;\t\u000f\u0015Eg\u00071\u0001\u0004\u0012\"91q\u0012\u001cA\u0002\rE\u0015!D#se>\u0014hj\u001c;GS\u0016dG\r\u0006\u0003\u0005j\u0015E\bbBCio\u0001\u00071\u0011S\u0001\u0014\u000bJ\u0014xN\u001d(pi\u000e{gn\u001d;sk\u000e$xN\u001d\u000b\u0007\tS*90\"?\t\u000f\u0015E\u0007\b1\u0001\u0004\u0012\"91q\u0012\u001dA\u0002\rE\u0015!F#se>\u0014\u0018I\u001d:bs\u000e{gn\u001d;sk\u000e$xN\u001d\u000b\u0007\tS*yP\"\u0001\t\u000f\u0015E\u0017\b1\u0001\u0004\u0012\"91qR\u001dA\u0002\rE\u0015!C#se>\u0014hI]3f)\u0019!IGb\u0002\u0007\f!9a\u0011\u0002\u001eA\u0002\rE\u0015AB7f[\n,'\u000fC\u0004\u0007\u000ei\u0002\ra!%\u0002\u0011\u0019\u0014X-\u001a+za\u0016\fQ#\u0012:s_JtuN\\#ySN$XM\u001c;GS\u0016dG\r\u0006\u0003\u0005j\u0019M\u0001bBCiw\u0001\u00071\u0011S\u0001\u000bi>\feN\\8u\u0003J<\u0007cABj{\tQAo\\!o]>$\u0018I]4\u0014\u0007u2i\u0002\u0005\u0003\u0004@\u0019}\u0011\u0002\u0002D\u0011\u0007#\u0011a!\u00118z%\u00164GC\u0001D\f\u0003-\u0019FO]5oO\u000ec\u0017m]:\u0016\u0005\u0019%\u0002CBB.\t7\"I$\u0001\u0007TiJLgnZ\"mCN\u001c\b%\u0001\u0006DY\u0006\u001c8o\u00117bgN,\"A\"\r\u0011\r\rmC1\fD\u001aa\u00111)D\"\u000f\u0011\r\rmC1\fD\u001c!\u0011!\tG\"\u000f\u0005\u0017\u0019m\")!A\u0001\u0002\u000b\u0005Aq\r\u0002\u0005?\u0012\n$'A\u0006DY\u0006\u001c8o\u00117bgN\u0004\u0013A\u0004)sS6LG/\u001b<f\u00072\f7o\u001d\t\u0004\r\u0007\"U\"A\u001f\u0003\u001dA\u0013\u0018.\\5uSZ,7\t\\1tgN\u0019AI\"\b\u0015\u0005\u0019\u0005\u0013aB;oCB\u0004H.\u001f\u000b\u0005\r\u001f2)\u0006\u0005\u0003\u0004@\u0019E\u0013\u0002\u0002D*\u0007#\u0011qAQ8pY\u0016\fg\u000eC\u0004\u0007X\u0019\u0003\rA\"\u0017\u0002\u0003a\u0004DAb\u0017\u0007`A111\fC.\r;\u0002B\u0001\"\u0019\u0007`\u0011aa\u0011\rD+\u0003\u0003\u0005\tQ!\u0001\u0005h\t!q\fJ\u00194\u0003%)e.^7DY\u0006\u001c8\u000fE\u0002\u0007D!\u0013\u0011\"\u00128v[\u000ec\u0017m]:\u0014\u0007!3i\u0002\u0006\u0002\u0007fQ!aq\nD8\u0011\u001d19F\u0013a\u0001\rc\u0002DAb\u001d\u0007xA111\fC.\rk\u0002B\u0001\"\u0019\u0007x\u0011aa\u0011\u0010D8\u0003\u0003\u0005\tQ!\u0001\u0005h\t!q\fJ\u00195\u0003)\t%O]1z\u00072\f7o\u001d\t\u0004\r\u0007b%AC!se\u0006L8\t\\1tgN\u0019AJ\"\b\u0015\u0005\u0019uD\u0003\u0002D(\r\u000fCqAb\u0016O\u0001\u00041I\t\r\u0003\u0007\f\u001a=\u0005CBB.\t72i\t\u0005\u0003\u0005b\u0019=E\u0001\u0004DI\r\u000f\u000b\t\u0011!A\u0003\u0002\u0011\u001d$\u0001B0%cU\nq\"\u00118o_R\fG/[8o\u00072\f7o\u001d\t\u0004\r\u0007\u0002&aD!o]>$\u0018\r^5p]\u000ec\u0017m]:\u0014\u0007A3i\u0002\u0006\u0002\u0007\u0016R!aq\nDP\u0011\u001d19F\u0015a\u0001\rC\u0003DAb)\u0007(B111\fC.\rK\u0003B\u0001\"\u0019\u0007(\u0012aa\u0011\u0016DP\u0003\u0003\u0005\tQ!\u0001\u0005h\t!q\fJ\u00197\u0003-\u0019uN\\:uC:$\u0018I]4\u0011\u0007\u0019\rCKA\u0006D_:\u001cH/\u00198u\u0003J<7c\u0001+\u0007\u001eQ\u0011aQV\u0001\rK:,X\u000eV8Ts6\u0014w\u000e\u001c\u000b\u0005\u0007#3I\fC\u0004\u0007<Z\u0003\rA\"0\u0002\t\u0015tW/\u001c\u0019\u0005\r\u007f39\r\u0005\u0004\u0004\\\u0019\u0005gQY\u0005\u0005\r\u0007\u001ciF\u0001\u0003F]Vl\u0007\u0003\u0002C1\r\u000f$AB\"3\u0007:\u0006\u0005\t\u0011!B\u0001\tO\u0012Aa\u0018\u00132oQ!aQ\u001aDj!\u0019\u0019yDb4\u0005p%!a\u0011[B\t\u0005\u0019y\u0005\u000f^5p]\"9aQ[,A\u0002\u0019]\u0017AD:dQ\u0016l\u0017-\u00118e-\u0006dW/\u001a\t\t\u0007\u007f1IN\"8\u0005p%!a1\\B\t\u0005\u0019!V\u000f\u001d7feA\"aq\u001cDr!\u0019\u0019Y\u0006b\u0017\u0007bB!A\u0011\rDr\t11)Ob5\u0002\u0002\u0003\u0005)\u0011\u0001C4\u0005\u0011yF%\r\u001d\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\t\u0019-hQ\u001f\t\u0005\u0007o2i/\u0003\u0003\u0007p\u001aE(!E\"mCN\u001ch-\u001b7f\u0003:tw\u000e^!sO&!a1_B\u000e\u0005=\teN\\8uCRLwN\\%oM>\u001c\bb\u0002Dk1\u0002\u0007aq\u001f\t\t\u0007\u007f1IN\"?\u0005pA\"a1 D\u0000!\u0019\u0019Y\u0006b\u0017\u0007~B!A\u0011\rD\u0000\t19\tA\">\u0002\u0002\u0003\u0005)\u0011\u0001C4\u0005\u0011yF%M\u001d\u0003')\u000bg/Y!o]>$\u0018\r^5p]B\u0013x\u000e_=\u0014\u000fe;9a\"\u0004\b\u0014A!1qOD\u0005\u0013\u00119YA\"=\u0003\u001d\u0005sgn\u001c;bi&|g.\u00138g_B!1qHD\b\u0013\u00119\tb!\u0005\u0003\u000fA\u0013x\u000eZ;diB!qQCD\u0010\u001d\u001199bb\u0007\u000f\t\u0011}r\u0011D\u0005\u0003\u0007'IAa\"\b\u0004\u0012\u00059\u0001/Y2lC\u001e,\u0017\u0002BD\u0011\u000fG\u0011AbU3sS\u0006d\u0017N_1cY\u0016TAa\"\b\u0004\u0012\u0005!!.\u00198o+\t9I\u0003\u0005\u0003\b,\u001dERBAD\u0017\u0015\u00119yc!\u0018\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0003\b4\u001d5\"AC!o]>$\u0018\r^5p]\u0006)!.\u00198oAQ!q\u0011HD\u001e!\r\u0019\u0019.\u0017\u0005\b\u000fKa\u0006\u0019AD\u0015\u0003\r\tG\u000f]\u000b\u0003\u000f\u0003\u0002Baa\u001e\bD%!qQ\tC\u0011\u0005\u0011!\u0016\u0010]3\u0002\t\u0005$\b\u000fI\u0001\u0005CJ<7/\u0006\u0002\bNA1qqJD)\u000f+rAaa\u0010\b\u001c%!q1KD\u0012\u0005\u0011a\u0015n\u001d;\u0011\t\r]tqK\u0005\u0005\u000f3:YF\u0001\u0003Ue\u0016,\u0017\u0002BD/\u00077\u0011Q\u0001\u0016:fKN\fQ!\u0019:hg\u0002\n\u0001b\u001c:jO&t\u0017\r\\\u000b\u0003\u000f+\n1b]3u\u001fJLw-\u001b8bYR!q\u0011ND6\u001b\u0005I\u0006bBD7E\u0002\u0007qQK\u0001\u0002i\u0006\u0019\u0001o\\:\u0016\u0005\u001dM\u0004\u0003BB<\u000fkJAab\u001e\bz\tA\u0001k\\:ji&|g.\u0003\u0003\b|\rm!!\u0003)pg&$\u0018n\u001c8t\u0003\u0019\u0019X\r\u001e)pgR!q\u0011NDA\u0011\u001d9y\u0007\u001aa\u0001\u000fg\n\u0001\u0002^8TiJLgn\u001a\u000b\u0003\u000f\u000f\u0003Baa\u0017\b\n&!A1JB/\u0003\u0019\t7o]8dgV\u0011qq\u0012\t\u0007\u000f\u001f:\tf\"%\u0011\u0011\r}b\u0011\\DJ\rW\u0004Baa\u001e\b\u0016&!qqSDM\u0005\u0011q\u0015-\\3\n\t\u001dm51\u0004\u0002\u0006\u001d\u0006lWm]\u0001\u000eiJ\fgn\u001d4pe6\f%oZ:\u0015\t\u001der\u0011\u0015\u0005\b\u000fG;\u0007\u0019ADS\u0003\u00051\u0007\u0003CB \u000fO;ie\"\u0014\n\t\u001d%6\u0011\u0003\u0002\n\rVt7\r^5p]F\nAaY8qsR!q\u0011HDX\u0011%9)\u0003\u001bI\u0001\u0002\u00049I#\u0001\bd_BLH\u0005Z3gCVdG\u000fJ\u0019\u0016\u0005\u001dU&\u0006BD\u0015\u000fo[#a\"/\u0011\t\u001dmv1Y\u0007\u0003\u000f{SAab0\bB\u0006IQO\\2iK\u000e\\W\r\u001a\u0006\u0005\u000f_\u0019\t\"\u0003\u0003\bF\u001eu&!E;oG\",7m[3e-\u0006\u0014\u0018.\u00198dK\u0006i\u0001O]8ek\u000e$\bK]3gSb,\"ab\"\u0002\u0019A\u0014x\u000eZ;di\u0006\u0013\u0018\u000e^=\u0016\u0005\u001d=\u0007\u0003BB \u000f#LAab5\u0004\u0012\t\u0019\u0011J\u001c;\u0002\u001dA\u0014x\u000eZ;di\u0016cW-\\3oiR!AqNDm\u0011%9Y\u000e\\A\u0001\u0002\u00049y-A\u0002yIE\nq\u0002\u001d:pIV\u001cG/\u0013;fe\u0006$xN]\u000b\u0003\u000fC\u0004bab9\bf\u0012=TBAB)\u0013\u001199o!\u0015\u0003\u0011%#XM]1u_J\f\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0005\r\u001f:i\u000fC\u0005\b\\:\f\t\u00111\u0001\u0005p\u0005\u0011\u0002O]8ek\u000e$X\t\\3nK:$h*Y7f)\u001199ib=\t\u0013\u001dmw.!AA\u0002\u001d=\u0017a\u0005&bm\u0006\feN\\8uCRLwN\u001c)s_bL\bcABjcN)\u0011ob?\t\u0002AAAQ]D\u007f\u000fS9I$\u0003\u0003\b\u0000\u0012\u001d(!E!cgR\u0014\u0018m\u0019;Gk:\u001cG/[8ocA!\u00012\u0001E\u0005\u001b\tA)A\u0003\u0003\t\b\r\u0005\u0014AA5p\u0013\u00119\t\u0003#\u0002\u0015\u0005\u001d]H\u0003BD\u001d\u0011\u001fAqa\"\nu\u0001\u00049I\u0003\u0006\u0003\t\u0014!U\u0001CBB \r\u001f<I\u0003C\u0005\t\u0018U\f\t\u00111\u0001\b:\u0005\u0019\u0001\u0010\n\u0019\u0016\t!m\u0001R\u0007\u000b\u0005\u0011;AI\u0004\u0006\u0003\t !\u001d\u0002\u0003BB<\u0011CIA\u0001c\t\t&\tq\u0011J\\:uC:\u001cW-T5se>\u0014\u0018\u0002BBE\u0007OA\u0011\u0002#\u000bw\u0003\u0003\u0005\u001d\u0001c\u000b\u0002\u0015\u00154\u0018\u000eZ3oG\u0016$#\u0007\u0005\u0004\t.!=\u00022G\u0007\u0003\u0007\u001bIA\u0001#\r\u0004\u000e\tA1\t\\1tgR\u000bw\r\u0005\u0003\u0005b!UBa\u0002E\u001cm\n\u0007Aq\r\u0002\u0002)\"9\u00012\b<A\u0002!M\u0012aA8cU\u0006a!/\u001a4mK\u000e$8\t\\1tgR!\u0001\u0012\tE$!\u0011\u00199\bc\u0011\n\t!\u0015\u0003R\u0005\u0002\f\u00072\f7o]'jeJ|'\u000fC\u0004\u0006.]\u0004\r\u0001\"\u001e\u0002\u001bI,g\r\\3di6{G-\u001e7f)\u0011Ai\u0005c\u0015\u0011\t\r]\u0004rJ\u0005\u0005\u0011#B)C\u0001\u0007N_\u0012,H.Z'jeJ|'\u000fC\u0004\tVa\u0004\r\u0001b\f\u0002\u00075|G-\u0001\u0007sk:$\u0018.\\3DY\u0006\u001c8\u000f\u0006\u0003\t\\!\u0005\u0004\u0003BB<\u0011;JA\u0001c\u0018\u0004,\ta!+\u001e8uS6,7\t\\1tg\"9\u00012M=A\u0002\u001d\u0005\u0013a\u0001;qKR!\u00012\fE4\u0011\u001d)iC\u001fa\u0001\tk\n1b\u00197bgN\u001c\u00160\u001c2pYR!AQ\u000fE7\u0011\u001dAyg\u001fa\u0001\u00117\nQA\u001d;dYN\fA\"\\8ek2,7+_7c_2$B\u0001b\f\tv!9\u0001r\u000e?A\u0002!m\u0013aD3ogV\u0014\u0018N\\4O_R4%/Z3\u0015\t!m\u0004R\u0011\u000b\u0005\u0007{Ai\b\u0003\u0005\u0006lu$\t\u0019\u0001E@!\u0019\u0019y\u0004#!\u0005p%!\u00012QB\t\u0005!a$-\u001f8b[\u0016t\u0004bBCi{\u0002\u00071\u0011S\u0001\u000eG\",7m['f[\n,'o\u00144\u0015\r\ru\u00022\u0012EG\u0011\u001d)\tN a\u0001\u0007#Cqaa$\u007f\u0001\u0004!)(\u0001\ndQ\u0016\u001c7nQ8ogR\u0014Xo\u0019;pe>3GCBB\u001f\u0011'C)\nC\u0004\u0006R~\u0004\ra!%\t\u000f\r=u\u00101\u0001\u0005v\u0005a\u0001O]3dSN,7\t\\1tgV!\u00012\u0014E^)\u0011Ai\nc1\u0015\t!}\u0005R\u0018\u0019\t\u0011CC)\u000b#-\t6B111\fC.\u0011G\u0003B\u0001\"\u0019\t&\u0012a\u0001rUA\u0001\u0003\u0003\u0005\tQ!\u0001\t*\n\u0011q,M\t\u0005\u0011W#yG\u0005\u0004\t.\"=\u00062\u0017\u0004\b\u0007\u001f\f\t\u0001\u0001EV!\u0011!\t\u0007#-\u0005\u0019\u0011\u0015\u0014\u0011AA\u0001\u0002\u0003\u0015\t\u0001b\u001a\u0011\t\u0011\u0005\u0004R\u0017\u0003\r\u0011o\t\t!!A\u0001\u0002\u000b\u0005\u0001rW\t\u0005\tSBI\f\u0005\u0003\u0005b!mF\u0001\u0003E\u001c\u0003\u0003\u0011\r\u0001b\u001a\t\u0015!}\u0016\u0011AA\u0001\u0002\bA\t-\u0001\u0006fm&$WM\\2fIM\u0002b\u0001#\f\t0!e\u0006\u0002\u0003Ec\u0003\u0003\u0001\r\u0001#/\u0002\u0011%t7\u000f^1oG\u0016\u0014!CS1wC&s7\u000f^1oG\u0016l\u0015N\u001d:peV!\u00012\u001aEi'\u0019\t\u0019A\"\b\t U\u0011\u0001r\u001a\t\u0005\tCB\t\u000e\u0002\u0005\t8\u0005\r!\u0019\u0001C4\u0003%Ign\u001d;b]\u000e,\u0007%\u0001\u0006fm&$WM\\2fIQ\u0002b\u0001#\f\t0!=G\u0003\u0002En\u0011C$B\u0001#8\t`B111[A\u0002\u0011\u001fD\u0001\u0002#6\u0002\f\u0001\u000f\u0001r\u001b\u0005\t\u0011\u000b\fY\u00011\u0001\tP\u000611/_7c_2,\"\u0001\"\u001e\u0002\u0019I,g\r\\3di\u001aKW\r\u001c3\u0015\t!-\b\u0012\u001f\t\u0005\u0007oBi/\u0003\u0003\tp\"\u0015\"a\u0003$jK2$W*\u001b:s_JD\u0001\u0002c=\u0002\u0010\u0001\u0007AQW\u0001\u0006M&,G\u000eZ\u0001\u000ee\u00164G.Z2u\u001b\u0016$\bn\u001c3\u0015\t!e\br \t\u0005\u0007oBY0\u0003\u0003\t~\"\u0015\"\u0001D'fi\"|G-T5se>\u0014\b\u0002CE\u0001\u0003#\u0001\r\u0001b%\u0002\r5,G\u000f[8e)\u0011A\t%#\u0002\t\u0011\u00155\u00121\u0003a\u0001\tk\"B\u0001#\u0014\n\n!A\u0001RKA\u000b\u0001\u0004!yCA\rEKJLg/\u001a3WC2,Xm\u00117bgNlU\r^1eCR\f7\u0003BA\r\r;\tA!\u001b8g_R!\u00112CE\u000b!\u0011\u0019\u0019.!\u0007\t\u0011%=\u0011Q\u0004a\u0001\u000f\u0003*\"a!%\u0002\u000fMLXNY8mA\u0005\u0019\u0012n\u001d#fe&4X\r\u001a,bYV,7\t\\1tgV\u0011aqJ\u0001\u0015SN$UM]5wK\u00124\u0016\r\\;f\u00072\f7o\u001d\u0011\u0002\u000b\t|\u00070\u001a:\u0016\u0005%\u0015\u0002\u0007BE\u0014\u0013W\u0001b\u0001b#\u0005\"&%\u0002\u0003\u0002C1\u0013W!A\"#\f\u0002(\u0005\u0005\t\u0011!B\u0001\u0013_\u0011!a\u0010\u0019\u0012\t\u0011%\u0014\u0012\u0007\t\u0005\u00077J\u0019$\u0003\u0003\n6\ru#AB(cU\u0016\u001cG/A\u0004v]\n|\u00070\u001a:\u0016\u0005\u0011%%a\u0004&bm\u00064\u0015.\u001a7e\u001b&\u0014(o\u001c:\u0014\r\u0005-bQ\u0004Ev\u0003!\u0011XmY3jm\u0016\u0014XC\u0001C8\u0003%\u0011XmY3jm\u0016\u0014\b%\u0006\u0002\u00056\u0006AQ.\u001a;bI\u0006$\u0018\r\u0006\u0005\nL%5\u0013rJE)!\u0011\u0019\u0019.a\u000b\t\u0011%}\u0012q\u0007a\u0001\t_B\u0001\u0002c9\u00028\u0001\u0007AQ\u0017\u0005\t\u0013\u000f\n9\u00041\u0001\n\u0014Q1\u00112JE+\u0013/B\u0001\"c\u0010\u0002:\u0001\u0007Aq\u000e\u0005\t\u0011G\fI\u00041\u0001\u00056\u0006!!-\u001b8e)\u0011IY%#\u0018\t\u0011%}\u00131\ba\u0001\t_\n1B\\3x%\u0016\u001cW-\u001b<fe\u00061!NZ5fY\u0012,\"\u0001b,\u0002\u0007\u001d,G/A\u0002tKR$Ba!\u0010\nl!A\u0011RNA!\u0001\u0004!y'A\u0003wC2,X-\u0001\u0006jg\u001e+Go\u00117bgN$BAb\u0014\nt!A\u0011ROA#\u0001\u0004!\u0019*\u0001\u0003nKRD\u0017AD5t'R\u0014\u0018N\\4D_:\u001c\u0017\r\u001e\u000b\u0005\r\u001fJY\b\u0003\u0005\nv\u0005\u001d\u0003\u0019\u0001CJ\u0003a\u0011\u0017\u0010^3d_\u0012,G.Z:t\u001b\u0016$\bn\u001c3Po:,'o]\u000b\u0003\u0013\u0003\u0003b!c!\n\n\u000eEUBAEC\u0015\u0011I9i!\u0015\u0002\u0013%lW.\u001e;bE2,\u0017\u0002BEF\u0013\u000b\u00131aU3u\u0003a\u0011\u0017\u0010^3d_\u0012,g-\u001e7PE*,7\r^'fi\"|Gm]\u0001\u0015SN\u0014\u0015\u0010^3d_\u0012,G.Z:t\u001b\u0016$\bn\u001c3\u0015\t\u0019=\u00132\u0013\u0005\t\u0013k\ni\u00051\u0001\u0005\u0014\u0006i\u0011n\u001d\"z\u001d\u0006lW\rU1sC6$BAb\u0014\n\u001a\"A\u00112TA(\u0001\u00049\t%A\u0001q\u0003EI7OV1mk\u0016\u001cE.Y:t!\u0006\u0014\u0018-\u001c\u000b\u0005\r\u001fJ\t\u000b\u0003\u0005\n\u001c\u0006E\u0003\u0019AD!\u00039i7.T3uQ>$W*\u001b:s_J,B!c*\n4R1\u0011\u0012VE[\u0013o#B\u0001#?\n,\"Q\u0011RVA*\u0003\u0003\u0005\u001d!c,\u0002\u0015\u00154\u0018\u000eZ3oG\u0016$S\u0007\u0005\u0004\t.!=\u0012\u0012\u0017\t\u0005\tCJ\u0019\f\u0002\u0005\t8\u0005M#\u0019\u0001C4\u0011!Iy$a\u0015A\u0002%E\u0006\u0002\u0003Er\u0003'\u0002\r\u0001b%\u0003!)\u000bg/Y'fi\"|G-T5se>\u00148CBA+\r;AI0\u0006\u0002\u0005\u0014\u0006\u0019!/\u001a;\u0016\u0005%M\u0011\u0001\u0002:fi\u0002\"b!c2\nJ&-\u0007\u0003BBj\u0003+B\u0001\u0002c9\u0002`\u0001\u0007A1\u0013\u0005\t\u0013\u007f\u000by\u00061\u0001\n\u0014\u0005)!.\\3uQ\u00069!nY8ogR\u0014XCAEja\u0011I).#7\u0011\r\u0011-E\u0011UEl!\u0011!\t'#7\u0005\u0019%m\u00171MA\u0001\u0002\u0003\u0015\t\u0001b\u001a\u0003\t}#CGN\u0001\u000bU&tgo\\6fe\u0006<H\u0003BE\u0019\u0013CD\u0001b\"\u0013\u0002f\u0001\u0007\u00112\u001d\t\u0007\u000f\u001fJ)\u000fb\u001c\n\t%\u001dx1\u0005\u0002\u0004'\u0016\f\u0018a\u00026j]Z|7.\u001a\u000b\u0005\t_Ji\u000f\u0003\u0005\bJ\u0005\u001d\u0004\u0019AEr\u0005]Q\u0015M^1WC:LG\u000e\\1NKRDw\u000eZ'jeJ|'o\u0005\u0003\u0002l%\u001dG\u0003CE{\u0013oLI0c?\u0011\t\rM\u00171\u000e\u0005\t\u0013\u007f\t)\b1\u0001\u0005p!A\u00012]A;\u0001\u0004!\u0019\n\u0003\u0005\n@\u0006U\u0004\u0019AE\n)\u0019I)0c@\u000b\u0002!A\u0011rHA<\u0001\u0004!y\u0007\u0003\u0005\td\u0006]\u0004\u0019\u0001CJ)\u0011I)P#\u0002\t\u0011%}\u0013\u0011\u0010a\u0001\t_\"B\u0001b\u001c\u000b\n!Aq\u0011JA>\u0001\u0004QY\u0001\u0005\u0004\u0004@)5AqN\u0005\u0005\u0015\u001f\u0019\tB\u0001\u0006=e\u0016\u0004X-\u0019;fIz\u0012\u0001DS1wCZ\u000bg.\u001b7mC6+G\u000f[8e\u001b&\u0014(o\u001c:1'\u0011\ti(#>\u0015\u0011)]!\u0012\u0004F\u000e\u0015;\u0001Baa5\u0002~!A\u0011rHAC\u0001\u0004!y\u0007\u0003\u0005\td\u0006\u0015\u0005\u0019\u0001CJ\u0011!Iy,!\"A\u0002%MAC\u0002F\f\u0015CQ\u0019\u0003\u0003\u0005\n@\u0005\u001d\u0005\u0019\u0001C8\u0011!A\u0019/a\"A\u0002\u0011ME\u0003\u0002F\f\u0015OA\u0001\"c\u0018\u0002\n\u0002\u0007Aq\u000e\u000b\u0005\u0013cQY\u0003\u0003\u0005\bJ\u0005-\u0005\u0019AEr\u0005aQ\u0015M^1WC:LG\u000e\\1NKRDw\u000eZ'jeJ|'/M\n\u0005\u0003\u001bK)\u0010\u0006\u0005\u000b4)U\"r\u0007F\u001d!\u0011\u0019\u0019.!$\t\u0011%}\u0012Q\u0013a\u0001\t_B\u0001\u0002c9\u0002\u0016\u0002\u0007A1\u0013\u0005\t\u0013\u007f\u000b)\n1\u0001\n\u0014Q1!2\u0007F\u001f\u0015\u007fA\u0001\"c\u0010\u0002\u0018\u0002\u0007Aq\u000e\u0005\t\u0011G\f9\n1\u0001\u0005\u0014R!!2\u0007F\"\u0011!Iy&!'A\u0002\u0011=D\u0003BE\u0019\u0015\u000fB\u0001b\"\u0013\u0002\u001c\u0002\u0007\u00112\u001d\u0002\u0019\u0015\u00064\u0018MV1oS2d\u0017-T3uQ>$W*\u001b:s_J\u00144\u0003BAO\u0013k$\u0002Bc\u0014\u000bR)M#R\u000b\t\u0005\u0007'\fi\n\u0003\u0005\n@\u0005\u0015\u0006\u0019\u0001C8\u0011!A\u0019/!*A\u0002\u0011M\u0005\u0002CE`\u0003K\u0003\r!c\u0005\u0015\r)=#\u0012\fF.\u0011!Iy$a*A\u0002\u0011=\u0004\u0002\u0003Er\u0003O\u0003\r\u0001b%\u0015\t)=#r\f\u0005\t\u0013?\nI\u000b1\u0001\u0005pQ!\u0011\u0012\u0007F2\u0011!9I%a+A\u0002%\r(\u0001\u0007&bm\u00064\u0016M\\5mY\u0006lU\r\u001e5pI6K'O]8sgM!\u0011QVE{)!QYG#\u001c\u000bp)E\u0004\u0003BBj\u0003[C\u0001\"c\u0010\u00026\u0002\u0007Aq\u000e\u0005\t\u0011G\f)\f1\u0001\u0005\u0014\"A\u0011rXA[\u0001\u0004I\u0019\u0002\u0006\u0004\u000bl)U$r\u000f\u0005\t\u0013\u007f\t9\f1\u0001\u0005p!A\u00012]A\\\u0001\u0004!\u0019\n\u0006\u0003\u000bl)m\u0004\u0002CE0\u0003s\u0003\r\u0001b\u001c\u0015\t%E\"r\u0010\u0005\t\u000f\u0013\nY\f1\u0001\nd\nA\"*\u0019<b-\u0006t\u0017\u000e\u001c7b\u001b\u0016$\bn\u001c3NSJ\u0014xN\u001d\u001b\u0014\t\u0005u\u0016R\u001f\u000b\t\u0015\u000fSIIc#\u000b\u000eB!11[A_\u0011!Iy$!2A\u0002\u0011=\u0004\u0002\u0003Er\u0003\u000b\u0004\r\u0001b%\t\u0011%}\u0016Q\u0019a\u0001\u0013'!bAc\"\u000b\u0012*M\u0005\u0002CE \u0003\u000f\u0004\r\u0001b\u001c\t\u0011!\r\u0018q\u0019a\u0001\t'#BAc\"\u000b\u0018\"A\u0011rLAe\u0001\u0004!y\u0007\u0006\u0003\n2)m\u0005\u0002CD%\u0003\u0017\u0004\r!c9\u0003\u001d5+G\u000f[8e\u001b\u0016$\u0018\rZ1uCN!\u0011Q\u001aD\u000f)\u0011Q\u0019K#*\u0011\t\rM\u0017Q\u001a\u0005\t\u0011G\f\t\u000e1\u0001\u0005\u0014\u00061\u0001/\u0019:b[N\u0004baa\u0010\u000b,\u000eE\u0015\u0002\u0002FW\u0007#\u0011Q!\u0011:sCf\f!B^2NKR\fG-\u0019;b!\u0019\u0019yDc+\n\u0014\u0005A\u0011n\u001d\"z\u001d\u0006lW-\u0006\u0002\u000b8B11q\bFV\r\u001f\n\u0011\"[:Cs:\u000bW.\u001a\u0011\u0015\t\u0019=#R\u0018\u0005\t\u0015\u007f\u000bY\u000e1\u0001\bP\u0006\t\u0011.A\u0007qCJ\fW.\u00168c_b,'o\u001d\u000b\u0005\t\u0013S)\r\u0003\u0005\u000b@\u0006u\u0007\u0019ADh\u0003)\u0001\u0018M]1n\u0007>,h\u000e^\u0001\fa\u0006\u0014\u0018-\\\"pk:$\bE\u0001\u000fKCZ\fGK]1og\u001a|'/\\5oO6+G\u000f[8e\u001b&\u0014(o\u001c:\u0014\t\u0005\u001d\u0018r\u0019\u000b\t\u0015#T\u0019N#6\u000bXB!11[At\u0011!Iy$!=A\u0002\u0011=\u0004\u0002\u0003Er\u0003c\u0004\r\u0001b%\t\u0011%\u001d\u0013\u0011\u001fa\u0001\u0015G#bA#5\u000b\\*u\u0007\u0002CE \u0003g\u0004\r\u0001b\u001c\t\u0011!\r\u00181\u001fa\u0001\t'#BA#5\u000bb\"A\u0011rLA{\u0001\u0004!y\u0007\u0006\u0003\u0005p)\u0015\b\u0002CD%\u0003o\u0004\rAc\u0003\u00031\tKH/Z2pI\u0016dWm]:NKRDw\u000eZ'jeJ|'/\u0006\u0003\u000bl*E8CBA}\r;AI0\u0006\u0002\u000bpB!A\u0011\rFy\t!A9$!?C\u0002\u0011\u001d\u0014AC3wS\u0012,gnY3%mA1\u0001R\u0006E\u0018\u0015_$bA#?\u000b\u0000.\u0005A\u0003\u0002F~\u0015{\u0004baa5\u0002z*=\b\u0002\u0003Fz\u0005\u000b\u0001\u001dA#>\t\u0011%}\"Q\u0001a\u0001\u0015_D\u0001\u0002c9\u0003\u0006\u0001\u0007A1\u0013\u000b\u0005\u0015w\\)\u0001\u0003\u0005\n`\t\u001d\u0001\u0019\u0001C8)\u0011!yg#\u0003\t\u0011\u001d%#1\u0002a\u0001\u0015\u0017\u0011!CS1wCR+W\u000e\u001d7bi\u0016l\u0015N\u001d:peN1!Q\u0002D\u000f\u0017\u001f\u0001Baa\u001e\f\u0012%!12\u0003E\u0013\u00059!V-\u001c9mCR,W*\u001b:s_J$\"ac\u0006\u0011\t\rM'QB\u0001\u0006_V$XM]\u000b\u0003\r;\tq!\u001a:bgV\u0014XMA\bKCZ\f7\t\\1tg6K'O]8s'\u0019\u0011)bc\u0006\tB\u00051q.\u001e;fe\u0002\"bac\n\f*--\u0002\u0003BBj\u0005+A\u0001b#\u0007\u0003 \u0001\u0007aQ\u0004\u0005\t\u0011G\u0014y\u00021\u0001\u0005v\u0005A\u0011n]*uCRL7-\u0001\nsK\u001adWm\u0019;D_:\u001cHO];di>\u0014H\u0003\u0002E}\u0017gA\u0001b#\u000e\u0003&\u0001\u0007A1S\u0001\fG>t7\u000f\u001e:vGR|'O\u0001\tKCZ\fWj\u001c3vY\u0016l\u0015N\u001d:peN1!\u0011FF\f\u0011\u001b*\"\u0001b\f\u0015\r-}2\u0012IF\"!\u0011\u0019\u0019N!\u000b\t\u0011-e!1\u0007a\u0001\r;A\u0001\u0002c9\u00034\u0001\u0007AqF\u0001\tKJ\f7/Z:U_R1aqJF%\u0017\u0017B\u0001\"#\u001e\u0003>\u0001\u00071\u0011\u0013\u0005\t\u0013\u001b\u0014i\u00041\u0001\u0005\nR1aqJF(\u0017#B\u0001\"#\u001e\u0003@\u0001\u00071\u0011\u0013\u0005\t\u0013\u001f\u0014y\u00041\u0001\fTA\"1RKF-!\u0019!Y\t\")\fXA!A\u0011MF-\t1YYf#\u0015\u0002\u0002\u0003\u0005)\u0011\u0001C4\u0005\u0011yFE\r\u0019\u0002\u0013)\fg/Y\"mCN\u001cH\u0003BF1\u0017W\u0002Dac\u0019\fhA111\fC.\u0017K\u0002B\u0001\"\u0019\fh\u0011a1\u0012\u000eB!\u0003\u0003\u0005\tQ!\u0001\u0005h\t!q\f\n\u001a2\u0011!YiG!\u0011A\u0002\u0011e\u0012\u0001\u00029bi\"\fA\u0002\u001e:z\u0015\u00064\u0018m\u00117bgN$Bac\u001d\f\u0000A11q\bDh\u0017k\u0002Dac\u001e\f|A111\fC.\u0017s\u0002B\u0001\"\u0019\f|\u0011a1R\u0010B\"\u0003\u0003\u0005\tQ!\u0001\u0005h\t!q\f\n\u001a3\u0011!YiGa\u0011A\u0002\u0011e\u0012AD7jeJ|'\u000fR3gS:Lgn\u001a\u000b\u0005\u0007kZ)\t\u0003\u0005\f\b\n\u0015\u0003\u0019AFE\u0003\u0019Q7\r\\1{uB\"12RFH!\u0019\u0019Y\u0006b\u0017\f\u000eB!A\u0011MFH\t1Y\tj#\"\u0002\u0002\u0003\u0005)\u0011\u0001C4\u0005\u0011yFEM\u001a\u0002\u0013Ut\u0007/[2lY\u0016\u0014\b\u0003BBj\u0005\u0013\u0012\u0011\"\u001e8qS\u000e\\G.\u001a:\u0014\t\t%32\u0014\t\u0005\u0017;[\u0019+\u0004\u0002\f *!1\u0012UB\u000e\u0003!\u0001\u0018nY6mS:<\u0017\u0002BFS\u0017?\u0013\u0011\"\u00168QS\u000e\\G.\u001a:\u0015\u0005-U\u0015aC:z[\n|G\u000eV1cY\u0016\fAb]=nE>dG+\u00192mK\u0002\nQ\"\u001e8qS\u000e\\G.Z\"mCN\u001cH\u0003CB\u001f\u0017c[)l#/\t\u0011-M&\u0011\u000ba\u0001\tk\nQa\u00197bujD\u0001bc.\u0003R\u0001\u0007AqF\u0001\u0007[>$W\u000f\\3\t\u0011-\u001d%\u0011\u000ba\u0001\u0017w\u0003Da#0\fBB111\fC.\u0017\u007f\u0003B\u0001\"\u0019\fB\u0012a12YF]\u0003\u0003\u0005\tQ!\u0001\u0005h\t!q\f\n\u001a5\u0003M\u0019'/Z1uKRK\b/\u001a)be\u0006lW\r^3s)\u0011!)n#3\t\u0011--'1\u000ba\u0001\u0017\u001b\fQA\u001b;wCJ\u0004Dac4\fTB1A1\u0012Cb\u0017#\u0004B\u0001\"\u0019\fT\u0012a1R[Fe\u0003\u0003\u0005\tQ!\u0001\u0005N\n!q\f\n\u001a6\u0005I!\u0016\u0010]3QCJ\fWnQ8na2,G/\u001a:\u0014\r\tUC1\u0004C\u0013a\u0011Yin#9\u0011\r\u0011-E1YFp!\u0011!\tg#9\u0005\u0019-\r(qKA\u0001\u0002\u0003\u0015\t\u0001\"4\u0003\t}##G\u000e\u000b\u0005\u0017O\\I\u000f\u0005\u0003\u0004T\nU\u0003\u0002CFf\u00053\u0002\rac;1\t-58\u0012\u001f\t\u0007\t\u0017#\u0019mc<\u0011\t\u0011\u00054\u0012\u001f\u0003\r\u0017G\\I/!A\u0001\u0002\u000b\u0005AQZ\u0001\u0005Y>\fG\r\u0006\u0003\u0004>-]\b\u0002CCi\u00057\u0002\ra!%\u0002\u0011\r|W\u000e\u001d7fi\u0016$Ba!\u0010\f~\"AQ\u0011\u001bB/\u0001\u0004\u0019\t*\u0001\u000bbgNLwM\\!tg>\u001c\u0017.\u0019;fI\u001aKG.\u001a\u000b\t\u0007{a\u0019\u0001$\u0002\r\b!A12\u0017B0\u0001\u0004\u0019\t\n\u0003\u0005\f8\n}\u0003\u0019ABI\u0011!Y9Ia\u0018A\u00021%\u0001\u0007\u0002G\u0006\u0019\u001f\u0001baa\u0017\u0005\\15\u0001\u0003\u0002C1\u0019\u001f!A\u0002$\u0005\r\b\u0005\u0005\t\u0011!B\u0001\tO\u0012Aa\u0018\u00133o\u0005y1m\u001c9z\u0003:tw\u000e^1uS>t7\u000f\u0006\u0004\u0004>1]A\u0012\u0004\u0005\t\u000b#\u0014\t\u00071\u0001\u0004\u0012\"AqQ\u0005B1\u0001\u0004aY\u0002\u0005\u0003\u0005\f2u\u0011\u0002\u0002G\u0010\t\u001b\u0013\u0001#\u00118o_R\fG/\u001a3FY\u0016lWM\u001c;\u0003\u0013)\u001cE.Y:t\u001fB\u001c8\u0003\u0002B2\r;)\"\u0001d\n1\t1%BR\u0006\t\u0007\u00077\"Y\u0006d\u000b\u0011\t\u0011\u0005DR\u0006\u0003\r\u0019_\u00119'!A\u0001\u0002\u000b\u0005Aq\r\u0002\u0005?\u0012\u0012\u0004(\u0001\u0004dY\u0006T(\u0010\t\u000b\u0005\u0019ka9\u0004\u0005\u0003\u0004T\n\r\u0004\u0002CFZ\u0005S\u0002\r\u0001$\u000f1\t1mBr\b\t\u0007\u00077\"Y\u0006$\u0010\u0011\t\u0011\u0005Dr\b\u0003\r\u0019_a9$!A\u0001\u0002\u000b\u0005AqM\u0001\nU\u00064\u0018M\u00127bON,\"\u0001$\u0012\u0011\t\reArI\u0005\u0005\u0019\u0013\u001aYB\u0001\u0007KCZ\f\u0017iY2GY\u0006<7/\u0001\u0006tG\u0006d\u0017M\u00127bON,\"\u0001d\u0014\u0011\t\r}B\u0012K\u0005\u0005\u0019'\u001a\tB\u0001\u0003M_:<\u0017!\u00036DY\u0006\u001c8o\u00149t)\u0011a)\u0004$\u0017\t\u0011-M&q\u000ea\u0001\u00197\u0002D\u0001$\u0018\rbA111\fC.\u0019?\u0002B\u0001\"\u0019\rb\u0011aAr\u0006G-\u0003\u0003\u0005\tQ!\u0001\u0005h\tQ!.T3nE\u0016\u0014x\n]:\u0014\t\tEdQD\u000b\u0003\u0019S\u0002B\u0001b#\rl%!AR\u000eCG\u0005\u0019iU-\u001c2fe\u00069Q.Z7cKJ\u0004C\u0003\u0002G:\u0019k\u0002Baa5\u0003r!Aa\u0011\u0002B<\u0001\u0004aI'\u0001\u0006k\u001b\u0016l'-\u001a:PaN$B\u0001d\u001d\r|!Aa\u0011\u0002B?\u0001\u0004aIG\u0001\fGe>l'*\u0019<b\u00072\f7o]\"p[BdW\r^3s'!\u0011y\bb\u0007\r\u0002\u0012\u0015\u0002cAB<\u0011\t\u0011\"*\u0019<b\u00072\f7o]\"p[BdW\r^3s'\rAaQ\u0004\u0019\u0005\u0019\u0013ci\t\u0005\u0004\u0004\\\u0011mC2\u0012\t\u0005\tCbi\t\u0002\u0007\r\u0010\n\u0015\u0015\u0011!A\u0001\u0006\u0003!9G\u0001\u0003`IIJD\u0003\u0003GJ\u0019+c9\n$'\u0011\t\rM'q\u0010\u0005\t\u0017g\u00139\t1\u0001\u0004\u0012\"A1r\u0017BD\u0001\u0004\u0019\t\n\u0003\u0005\f\b\n\u001d\u0005\u0019\u0001GNa\u0011ai\n$)\u0011\r\rmC1\fGP!\u0011!\t\u0007$)\u0005\u00191=E\u0012TA\u0001\u0002\u0003\u0015\t\u0001b\u001a\u0002\u000b\u0019d\u0017mZ:\u0002\r\u0019d\u0017mZ:!\u00031\u0001\u0018M]3oiNdUM^3m\u0003I\u0001XM\u001c3j]\u001edu.\u00193BGRLwN\\:\u0011\r\u001d=s\u0011\u000bGW!\u0019\u0019y\u0004d,\u0004>%!A\u0012WB\t\u0005%1UO\\2uS>t\u0007'\u0001\bsK2\fG/\u001a3Ts6\u0014w\u000e\\:\u0011\r%\rErWBI\u0013\u00119\u0019&#\"\u0015\t\ruB2\u0018\u0005\t\u000b#\u0014\u0019\n1\u0001\u0004\u0012R!1Q\bG`\u0011!)\tN!&A\u0002\rE\u0015\u0001D2p[BdW\r^3SKN$(\u0001\u0004'buf\u0004v\u000e\\=UsB,7C\u0002BM\t7!)#\u0001\u0006usB,\u0007+\u0019:b[N,\"\u0001d3\u0011\r\u001d=s\u0011KBI\u0003-!\u0018\u0010]3QCJ\fWn\u001d\u0011\u0015\t1EGR\u001b\t\u0005\u0019'\u0014I*\u0004\u0002\u0003\u0000!AAr\u0019BP\u0001\u0004aY\r\u0006\u0003\u0004>1e\u0007\u0002CCi\u0005C\u0003\ra!%\u0002\u0019\u0019|G\u000e\\8x'R\fG/[2\u0015\r\rEEr\u001cGq\u0011!Y\u0019La)A\u0002\rE\u0005\u0002\u0003Gr\u0005G\u0003\r\u0001$\u0012\u0002\t5|Gm\u001d\u000b\t\u0007#c9\u000f$;\rl\"A12\u0017BS\u0001\u0004\u0019\t\n\u0003\u0005\f8\n\u0015\u0006\u0019ABI\u0011!a\u0019O!*A\u00021\u0015#!\u0003*jG\"\u001cE.Y:t'\u0011\u00119K\"\b1\t1MHr\u001f\t\u0007\u00077\"Y\u0006$>\u0011\t\u0011\u0005Dr\u001f\u0003\r\u0019s\u0014I+!A\u0001\u0002\u000b\u0005Aq\r\u0002\u0005?\u0012\u001a\u0004\u0007\u0006\u0003\r~2}\b\u0003BBj\u0005OC\u0001bc\"\u0003,\u0002\u0007Q\u0012\u0001\u0019\u0005\u001b\u0007i9\u0001\u0005\u0004\u0004\\\u0011mSR\u0001\t\u0005\tCj9\u0001\u0002\u0007\rz2}\u0018\u0011!A\u0001\u0006\u0003!9'A\u0007jg2{7-\u00197DY\u0006\u001c8\u000fM\u0001\n%&\u001c\u0007n\u00117bgN$B\u0001$@\u000e\u0010!A1r\u0011BX\u0001\u0004i\t\u0002\r\u0003\u000e\u00145]\u0001CBB.\t7j)\u0002\u0005\u0003\u0005b5]A\u0001\u0004G}\u001b\u001f\t\t\u0011!A\u0003\u0002\u0011\u001d\u0014AB:Po:,'\u000f\u0006\u0003\u0004\u00126u\u0001\u0002CFD\u0005c\u0003\r!d\b1\t5\u0005RR\u0005\t\u0007\u00077\"Y&d\t\u0011\t\u0011\u0005TR\u0005\u0003\r\u001bOii\"!A\u0001\u0002\u000b\u0005Aq\r\u0002\u0005?\u0012\u001a\u0014\u0007\u0006\u0003\u0004\u00126-\u0002\u0002CG\u0017\u0005g\u0003\r\u0001$\u001b\u0002\u000f)lW-\u001c2feR!1\u0011SG\u0019\u0011!YYM!.A\u00025M\u0002\u0007BG\u001b\u001bs\u0001b\u0001b#\u0005D6]\u0002\u0003\u0002C1\u001bs!A\"d\u000f\u000e2\u0005\u0005\t\u0011!B\u0001\t\u001b\u0014Aa\u0018\u00134e\u00051An\\8lkB$ba!%\u000eB5\r\u0003\u0002CFZ\u0005o\u0003\ra!%\t\u00115\u0015#q\u0017a\u0001\ts\tQA\u001b8b[\u0016\fQ\"\\3uQ>$Gk\\*dC2\fG\u0003\u0002CJ\u001b\u0017B\u0001\"#4\u0003:\u0002\u0007A\u0011R\u0001\u000f[\u0016$\bn\u001c3U_N\u001b\u0017\r\\12)\u0011!\u0019*$\u0015\t\u0011%5'1\u0018a\u0001\t\u0013\u000b!cY8ogR\u0014Xo\u0019;peR{7kY1mCR!A1SG,\u0011!IyM!0A\u00025e\u0003\u0007BG.\u001b?\u0002b\u0001b#\u0005\"6u\u0003\u0003\u0002C1\u001b?\"A\"$\u0019\u000eX\u0005\u0005\t\u0011!B\u0001\tO\u0012Aa\u0018\u00134g\u0005\u00192m\u001c8tiJ,8\r^8s)>\u001c6-\u00197bcQ!A1SG4\u0011!IyMa0A\u00025%\u0004\u0007BG6\u001b_\u0002b\u0001b#\u0005\"65\u0004\u0003\u0002C1\u001b_\"A\"$\u001d\u000eh\u0005\u0005\t\u0011!B\u0001\tO\u0012Aa\u0018\u00134i\u0005q\u0001/Y2lC\u001e,Gk\\*dC2\fG\u0003\u0002C\u0018\u001boB\u0001\"$\u001f\u0003B\u0002\u0007AqP\u0001\u0005UB\\w-\u0001\nqC\u000e\\\u0017mZ3OC6,Gk\\*dC2\fG\u0003\u0002C\u0018\u001b\u007fB\u0001\u0002b\u000e\u0003D\u0002\u0007A\u0011H\u0001\u0010g\u000e\fG.Y*j[BdWMT1nKR!QRQGF!\u0011\u00199(d\"\n\t5%u\u0011\u0014\u0002\t)f\u0004XMT1nK\"A1r\u0011Bc\u0001\u0004ii\t\r\u0003\u000e\u00106M\u0005CBB.\t7j\t\n\u0005\u0003\u0005b5ME\u0001DGK\u001b\u0017\u000b\t\u0011!A\u0003\u0002\u0011\u001d$\u0001B0%gU\nAb\u00197bgN$vnU2bY\u0006$B\u0001\"\u001e\u000e\u001c\"A1r\u0011Bd\u0001\u0004ii\n\r\u0003\u000e 6\r\u0006CBB.\t7j\t\u000b\u0005\u0003\u0005b5\rF\u0001DGS\u001b7\u000b\t\u0011!A\u0003\u0002\u0011\u001d$\u0001B0%gY\nQb\u00197bgN$vnU2bY\u0006\fD\u0003\u0002C;\u001bWC\u0001bc\"\u0003J\u0002\u0007QR\u0016\u0019\u0005\u001b_k\u0019\f\u0005\u0004\u0004\\\u0011mS\u0012\u0017\t\u0005\tCj\u0019\f\u0002\u0007\u000e66-\u0016\u0011!A\u0001\u0006\u0003!9G\u0001\u0003`IM:\u0014\u0001\u0005;za\u0016\u0004\u0016M]1n)>\u001c6-\u00197b)\u0011!).d/\t\u00115u&1\u001aa\u0001\u001b\u007f\u000baA\u001b9be\u0006l\u0007\u0007BGa\u001b\u000b\u0004b\u0001b#\u0005D6\r\u0007\u0003\u0002C1\u001b\u000b$A\"d2\u000e<\u0006\u0005\t\u0011!B\u0001\t\u001b\u0014Aa\u0018\u00134q\u0005\tB/\u001f9f!\u0006\u0014\u0018-\u001c+p'\u000e\fG.Y\u0019\u0015\t\u0011UWR\u001a\u0005\t\u001b{\u0013i\r1\u0001\u000ePB\"Q\u0012[Gk!\u0019!Y\tb1\u000eTB!A\u0011MGk\t1i9.$4\u0002\u0002\u0003\u0005)\u0011\u0001Cg\u0005\u0011yFeM\u001d\u00023\u001d,g.\u001a:jG\u0012+7\r\\1sCRLwN\u001c+p'\u000e\fG.\u0019\u000b\u0005\u0007#ki\u000e\u0003\u0005\u000e`\n=\u0007\u0019\u0001Ch\u0003\u0015QG-Z2m\u0003Q\u0011XM\u001a7fGRlU-\u001c2feR{7kY1mCR!1\u0011SGs\u0011!i9O!5A\u00021%\u0014!A7\u0002\u0019Q\f'oZ:U_N\u001b\u0017\r\\1\u0015\r55X2_G{!!\u0019yD\"7\u000ep6E\bCBD(\u000f#:\t\u0005\u0005\u0004\bP\u001dECQ\u001b\u0005\t\u0007\u001f\u0013\u0019\u000e1\u0001\u0004\u0012\"Aq\u0011\nBj\u0001\u0004i9\u0010\u0005\u0004\bP\u001dES\u0012 \t\u0005\t\u0017kY0\u0003\u0003\bF\u00115\u0015a\u0003;za\u0016$vnU2bY\u0006$Ba\"\u0011\u000f\u0002!Aa2\u0001Bk\u0001\u0004iI0\u0001\u0003kiB,\u0017!\u00046dY\u0006\u001c8/Q:TG\u0006d\u0017\r\u0006\u0003\u0005v9%\u0001\u0002CFD\u0005/\u0004\rAd\u00031\t95a\u0012\u0003\t\u0007\u00077\"YFd\u0004\u0011\t\u0011\u0005d\u0012\u0003\u0003\r\u001d'qI!!A\u0001\u0002\u000b\u0005Aq\r\u0002\u0005?\u0012\"\u0014'\u0001\bkG2\f7o]!t'\u000e\fG.Y\u0019\u0015\t\u0011Ud\u0012\u0004\u0005\t\u0017\u000f\u0013I\u000e1\u0001\u000f\u001cA\"aR\u0004H\u0011!\u0019\u0019Y\u0006b\u0017\u000f A!A\u0011\rH\u0011\t1q\u0019C$\u0007\u0002\u0002\u0003\u0005)\u0011\u0001C4\u0005\u0011yF\u0005\u000e\u001a\u0002\u001b)4\u0017.\u001a7e\u0003N\u001c6-\u00197b)\u0011!)L$\u000b\t\u0011%\u0005$1\u001ca\u0001\t_\u000baB\u001b4jK2$\u0017i]*dC2\f\u0017\u0007\u0006\u0003\u00056:=\u0002\u0002CE1\u0005;\u0004\r\u0001b,\u0002\u0017M,G/T3uQRK\b/\u001a\u000b\u000b\u0007#s)Dd\u000e\u000f<9u\u0002\u0002CE;\u0005?\u0004\ra!%\t\u00119e\"q\u001ca\u0001\u0019\u0017\fq\u0001\u001e9be\u0006l7\u000f\u0003\u0005\u000b(\n}\u0007\u0019\u0001Gf\u0011!qyDa8A\u0002\u001d\u0005\u0013A\u0002:fgR\u0004X-\u0001\bk[\u0016$\bn\u001c3BgN\u001b\u0017\r\\1\u0015\t\u0011MeR\t\u0005\t\u0013\u001b\u0014\t\u000f1\u0001\u0005\n\u0006y!.\\3uQ>$\u0017i]*dC2\f\u0017\u0007\u0006\u0003\u0005\u0014:-\u0003\u0002CEg\u0005G\u0004\r\u0001\"#\u0002\u001d)\u001cwN\\:ue\u0006\u001b8kY1mCR!A1\u0013H)\u0011!IyM!:A\u00029M\u0003\u0007\u0002H+\u001d3\u0002b\u0001b#\u0005\":]\u0003\u0003\u0002C1\u001d3\"ABd\u0017\u000fR\u0005\u0005\t\u0011!B\u0001\tO\u0012Aa\u0018\u00135g\u0005y!nY8ogR\u0014\u0018i]*dC2\f\u0017\u0007\u0006\u0003\u0005\u0014:\u0005\u0004\u0002CEh\u0005O\u0004\rAd\u00191\t9\u0015d\u0012\u000e\t\u0007\t\u0017#\tKd\u001a\u0011\t\u0011\u0005d\u0012\u000e\u0003\r\u001dWr\t'!A\u0001\u0002\u000b\u0005Aq\r\u0002\u0005?\u0012\"D'\u0001\bka\u0006\u0014\u0018-\\:BgN\u001b\u0017\r\\1\u0015\r1-g\u0012\u000fH:\u0011!I)H!;A\u0002\u0011M\u0005\u0002\u0003FT\u0005S\u0004\rA$\u001e\u0011\r\u001d=s\u0011\u000bH<!\u0011!YI$\u001f\n\t9mDQ\u0012\u0002\n!\u0006\u0014\u0018-\\3uKJ\f1b\u00197bgN$vNS1wCR!a\u0012\u0011HFa\u0011q\u0019Id\"\u0011\r\rmC1\fHC!\u0011!\tGd\"\u0005\u00199%%1^A\u0001\u0002\u0003\u0015\t\u0001b\u001a\u0003\t}#C'\u000e\u0005\t\u0017g\u0013Y\u000f1\u0001\u0005v!2!1\u001eHH\u001d7\u0003baa\u0010\u000f\u0012:U\u0015\u0002\u0002HJ\u0007#\u0011a\u0001\u001e5s_^\u001c\b\u0003BB.\u001d/KAA$'\u0004^\t12\t\\1tg:{GOR8v]\u0012,\u0005pY3qi&|gn\t\u0002\u000f\u0016\u00061\u0002+Y2lC\u001e,\u0017I\u001c3DY\u0006\u001c8\u000fU1ui\u0016\u0014h\u000e\u0005\u0003\u000f\":-VB\u0001HR\u0015\u0011q)Kd*\u0002\u00115\fGo\u00195j]\u001eTAA$+\u0004\u0012\u0005!Q\u000f^5m\u0013\u0011qiKd)\u0003\u000bI+w-\u001a=\u0002\u0019\u0015D\b/\u00198eK\u0012t\u0015-\\3\u0015\t\u0011eb2\u0017\u0005\t\u000b#\u0014y\u000f1\u0001\u0004\u0012\u0006Ya-[3mIR{'*\u0019<b)\u0011!yK$/\t\u00119m&\u0011\u001fa\u0001\tk\u000b1A\u001a7e\u00031iW\r\u001e5pIR{'*\u0019<b)\u0011!II$1\t\u0011%U$1\u001fa\u0001\t'\u000b\u0011cY8ogR\u0014Xo\u0019;peR{'*\u0019<b)\u0011q9Md41\t9%gR\u001a\t\u0007\t\u0017#\tKd3\u0011\t\u0011\u0005dR\u001a\u0003\r\u00137\u0014)0!A\u0001\u0002\u000b\u0005Aq\r\u0005\t\u001d#\u0014)\u00101\u0001\u0005\u0014\u000611m\u001c8tiJ\fq\u0002^=qKR{'*\u0019<b\u00072\f7o\u001d\u000b\u0005\u001d/t\t\u000f\r\u0003\u000fZ:u\u0007CBB.\t7rY\u000e\u0005\u0003\u0005b9uG\u0001\u0004Hp\u0005o\f\t\u0011!A\u0003\u0002\u0011\u001d$\u0001B0%i]B\u0001\u0002c\u0019\u0003x\u0002\u0007q\u0011I\u00014g\u000e\fG.\u0019\u0013sK\u001adWm\u0019;%eVtG/[7fI)\u000bg/Y'jeJ|'o\u001d\u0013%[\u0006\\WmU2bY\u0006\u0004\u0016mY6bO\u0016$B\u0001b\f\u000fh\"AAq\u0007B}\u0001\u0004!I\u0004K\u0006\f\u001dWt\tPd=\u000fx:e\b\u0003BB \u001d[LAAd<\u0004\u0012\tQA-\u001a9sK\u000e\fG/\u001a3\u0002\u000f5,7o]1hK\u0006\u0012aR_\u0001\u0017kN,\u0007%T5se>\u0014\u0018*\u001c9mA%t7\u000f^3bI\u0006)1/\u001b8dK\u0006\u0012a2`\u0001\u0007e9\n4G\f\u001b\u0002\u0019\r\u0014X-\u0019;f\u001b&\u0014(o\u001c:\u0015\r=\u0005qRAH\u0004!\r\u00199\b\u0002\u0002\u0007\u001b&\u0014(o\u001c:\t\u000f\r=5\u00011\u0001\u0004\u0012\"9q\u0012B\u0002A\u0002\re\u0013AA2m\u0003%i\u0015N\u001d:peR\u000bw-\u0006\u0002\u0010\u0010A1\u0001R\u0006E\u0018\u001f\u0003\t!B]8pi6K'O]8s+\ty\t!A\bs_>$8\t\\1tg2{\u0017\rZ3s\u00035\u0011XO\u001c;j[\u0016l\u0015N\u001d:peR!q\u0012AH\u000e\u0011\u001dyI!\u0003a\u0001\u00073\n\u0011C^1mS\u0012\fG/Z\"mCN\u001c\u0018J\u001c4p)\u0011\u0019id$\t\t\u0011=\r\"1 a\u0001\u001fK\t!\u0001\u001e9\u0011\t\r]trE\u0005\u0005\u001fS!\tCA\u0007DY\u0006\u001c8/\u00138g_RK\b/Z\u0001\u0010]\u0016<\b+Y2lC\u001e,7kY8qKR!qrFH\u001d!\u0011\u00199h$\r\n\t=MrR\u0007\u0002\r!\u0006\u001c7.Y4f'\u000e|\u0007/Z\u0005\u0005\u001fo\u0019IAA\u0007Ts6\u0014w\u000e\u001c'pC\u0012,'o\u001d\u0005\t\u001fw\u0011i\u00101\u0001\u0004\u0012\u0006A\u0001o[4DY\u0006\u001c8/\u0001\btG>\u0004X\r\u0016:b]N4wN]7\u0015\t=\u0005s2\u000b\u000b\u0005\u001f\u0007zi\u0005\u0005\u0003\u0004x=\u0015\u0013\u0002BH$\u001f\u0013\u0012QaU2pa\u0016LAad\u0013\u0004\u001c\t11kY8qKND\u0011bd\u0014\u0003\u0000\u0012\u0005\ra$\u0015\u0002\u0005=\u0004\bCBB \u0011\u0003{\u0019\u0005\u0003\u0005\u0004\u0010\n}\b\u0019ABI\u0003Ai\u0017N\u001d:peRC\u0017\r\u001e'pC\u0012,G\r\u0006\u0003\u0010\u0002=e\u0003\u0002CCi\u0007\u0003\u0001\ra!%\u0002\u00175L7o]5oO\"{wn\u001b\u000b\u0007\u0007#{yf$\u0019\t\u0011\r=51\u0001a\u0001\u0007#C\u0001bd\u0019\u0004\u0004\u0001\u0007q1S\u0001\u0005]\u0006lW-A\ttkB,'\u000fJ7jgNLgn\u001a%p_.$ba!%\u0010j=-\u0004\u0002CBH\u0007\u000b\u0001\ra!%\t\u0011=\r4Q\u0001a\u0001\u000f'KAad\u0017\u0004 A!1\u0011GH9\u0013\u0011\u0019\tc!\u0003"
)
public interface JavaMirrors extends scala.reflect.api.JavaUniverse, TwoWayCaches {
   void scala$reflect$runtime$JavaMirrors$_setter_$MirrorTag_$eq(final ClassTag x$1);

   // $FF: synthetic method
   Symbols.Symbol scala$reflect$runtime$JavaMirrors$$super$missingHook(final Symbols.Symbol owner, final Names.Name name);

   // $FF: synthetic method
   static WeakHashMap scala$reflect$runtime$JavaMirrors$$mirrors$(final JavaMirrors $this) {
      return $this.scala$reflect$runtime$JavaMirrors$$mirrors();
   }

   default WeakHashMap scala$reflect$runtime$JavaMirrors$$mirrors() {
      return new WeakHashMap();
   }

   private JavaMirror createMirror(final Symbols.Symbol owner, final ClassLoader cl) {
      JavaMirror jm = (SymbolTable)this.new JavaMirror(owner, cl);
      this.scala$reflect$runtime$JavaMirrors$$mirrors().update(cl, new WeakReference(jm));
      jm.init();
      return jm;
   }

   ClassTag MirrorTag();

   // $FF: synthetic method
   static JavaMirror rootMirror$(final JavaMirrors $this) {
      return $this.rootMirror();
   }

   default JavaMirror rootMirror() {
      return this.createMirror(((Symbols)this).NoSymbol(), this.rootClassLoader());
   }

   // $FF: synthetic method
   static ClassLoader rootClassLoader$(final JavaMirrors $this) {
      return $this.rootClassLoader();
   }

   default ClassLoader rootClassLoader() {
      return this.getClass().getClassLoader();
   }

   // $FF: synthetic method
   static JavaMirror runtimeMirror$(final JavaMirrors $this, final ClassLoader cl) {
      return $this.runtimeMirror(cl);
   }

   default JavaMirror runtimeMirror(final ClassLoader cl) {
      Gil gilSynchronized_this = (Gil)this;
      if (((SymbolTable)gilSynchronized_this).isCompilerUniverse()) {
         return $anonfun$runtimeMirror$1(this, cl);
      } else {
         JavaMirror var10000;
         try {
            gilSynchronized_this.scala$reflect$runtime$Gil$$gil().lock();
            var10000 = $anonfun$runtimeMirror$1(this, cl);
         } finally {
            gilSynchronized_this.scala$reflect$runtime$Gil$$gil().unlock();
         }

         return var10000;
      }
   }

   // $FF: synthetic method
   static void validateClassInfo$(final JavaMirrors $this, final Types.ClassInfoType tp) {
      $this.validateClassInfo(tp);
   }

   default void validateClassInfo(final Types.ClassInfoType tp) {
      scala.reflect.internal.SymbolTable var10000 = (scala.reflect.internal.SymbolTable)this;
      boolean assert_assertion = !tp.typeSymbol().isPackageClass() || tp.decls() instanceof SymbolLoaders.PackageScope;
      scala.reflect.internal.SymbolTable assert_this = var10000;
      if (!assert_assertion) {
         throw assert_this.throwAssertionError($anonfun$validateClassInfo$1(tp));
      }
   }

   // $FF: synthetic method
   static SymbolLoaders.PackageScope newPackageScope$(final JavaMirrors $this, final Symbols.Symbol pkgClass) {
      return $this.newPackageScope(pkgClass);
   }

   default SymbolLoaders.PackageScope newPackageScope(final Symbols.Symbol pkgClass) {
      return (SymbolTable)this.new PackageScope(pkgClass);
   }

   // $FF: synthetic method
   static Scopes.Scope scopeTransform$(final JavaMirrors $this, final Symbols.Symbol owner, final Function0 op) {
      return $this.scopeTransform(owner, op);
   }

   default Scopes.Scope scopeTransform(final Symbols.Symbol owner, final Function0 op) {
      return owner.isPackageClass() ? owner.info().decls() : (Scopes.Scope)op.apply();
   }

   // $FF: synthetic method
   static JavaMirror mirrorThatLoaded$(final JavaMirrors $this, final Symbols.Symbol sym) {
      return $this.mirrorThatLoaded(sym);
   }

   default JavaMirror mirrorThatLoaded(final Symbols.Symbol sym) {
      Symbols.Symbol var2 = sym.enclosingRootClass();
      if (var2 instanceof Mirrors.RootSymbol) {
         return (JavaMirror)((Mirrors.RootSymbol)var2).mirror();
      } else {
         throw ((Reporting)this).abort((new StringBuilder(49)).append(sym).append(".enclosingRootClass = ").append(sym.enclosingRootClass()).append(", which is not a RootSymbol").toString());
      }
   }

   // $FF: synthetic method
   static Symbols.Symbol missingHook$(final JavaMirrors $this, final Symbols.Symbol owner, final Names.Name name) {
      return $this.missingHook(owner, name);
   }

   default Symbols.Symbol missingHook(final Symbols.Symbol owner, final Names.Name name) {
      if (owner.hasPackageFlag()) {
         JavaMirror mirror = this.mirrorThatLoaded(owner);
         if (owner.isRootSymbol() && mirror.tryJavaClass(name.toString()).isDefined()) {
            return ((SynchronizedSymbols.SynchronizedSymbol)mirror.EmptyPackageClass()).info().decl(name);
         }

         if (name.isTermName() && !owner.isEmptyPackageClass()) {
            return mirror.scala$reflect$runtime$JavaMirrors$$makeScalaPackage(owner.isRootSymbol() ? name.toString() : (new StringBuilder(1)).append(owner.fullName('.')).append(".").append(name).toString());
         }

         if (name.equals(((StdNames)this).tpnme().AnyRef()) && owner.owner().isRoot()) {
            Names.Name var10000 = owner.name();
            Names.TypeName var4 = ((StdNames)this).tpnme().scala_();
            if (var10000 == null) {
               if (var4 == null) {
                  return ((Definitions)this).definitions().AnyRefClass();
               }
            } else if (var10000.equals(var4)) {
               return ((Definitions)this).definitions().AnyRefClass();
            }
         }
      }

      ((SymbolTable)this).info(() -> (new StringBuilder(17)).append("*** missing: ").append(name).append("/").append(name.isTermName()).append("/").append(owner).append("/").append(owner.hasPackageFlag()).append("/").append(owner.info().decls().getClass()).toString());
      return this.scala$reflect$runtime$JavaMirrors$$super$missingHook(owner, name);
   }

   // $FF: synthetic method
   static JavaMirror $anonfun$runtimeMirror$1(final JavaMirrors $this, final ClassLoader cl$1) {
      Option var2 = $this.scala$reflect$runtime$JavaMirrors$$mirrors().get(cl$1);
      if (var2 instanceof Some) {
         WeakReference var3 = (WeakReference)((Some)var2).value();
         if (var3 != null) {
            Option var4 = .MODULE$.unapply(var3);
            if (!var4.isEmpty()) {
               return (JavaMirror)var4.get();
            }
         }
      }

      return $this.createMirror($this.rootMirror().RootClass(), cl$1);
   }

   // $FF: synthetic method
   static String $anonfun$validateClassInfo$1(final Types.ClassInfoType tp$1) {
      return (new StringBuilder(26)).append(tp$1).append(" is package class or scope").toString();
   }

   static void $init$(final JavaMirrors $this) {
      $this.scala$reflect$runtime$JavaMirrors$_setter_$MirrorTag_$eq(scala.reflect.ClassTag..MODULE$.apply(JavaMirror.class));
   }

   // $FF: synthetic method
   private static Object $deserializeLambda$(SerializedLambda var0) {
      return var0.lambdaDeserialize<invokedynamic>(var0);
   }

   /** @deprecated */
   public class JavaMirror extends Mirrors.Roots implements scala.reflect.api.JavaUniverse.JavaMirror {
      private Definitions.DefinitionsClass.RunDefinitions runDefinitions;
      private Mirrors.Roots.RootPackage RootPackage;
      private Mirrors.Roots.RootClass RootClass;
      private Mirrors.Roots.EmptyPackage EmptyPackage;
      private Mirrors.Roots.EmptyPackageClass EmptyPackageClass;
      private Types.FlagAgnosticCompleter rootLoader;
      private volatile typeTagCache$ typeTagCache$module;
      private volatile toAnnotArg$ toAnnotArg$module;
      private volatile JavaAnnotationProxy$ JavaAnnotationProxy$module;
      private Set bytecodelessMethodOwners;
      private Set bytecodefulObjectMethods;
      private volatile unpickler$ unpickler$module;
      private final ClassLoader classLoader;
      private final SymbolTable universe;
      private final TwoWayCaches.TwoWayCache classCache;
      private final TwoWayCaches.TwoWayCache packageCache;
      private final TwoWayCaches.TwoWayCache methodCache;
      private final TwoWayCaches.TwoWayCache constructorCache;
      private final TwoWayCaches.TwoWayCache fieldCache;
      private final TwoWayCaches.TwoWayCache tparamCache;
      private final HasJavaClass classHasJavaClass;
      private final HasJavaClass methHasJavaClass;
      private final HasJavaClass fieldHasJavaClass;
      private final HasJavaClass constrHasJavaClass;
      private final HasJavaClass tparamHasJavaClass;
      private final Regex PackageAndClassPattern;
      private volatile byte bitmap$0;

      public String toString() {
         return scala.reflect.api.JavaUniverse.JavaMirror.toString$(this);
      }

      private typeTagCache$ typeTagCache() {
         if (this.typeTagCache$module == null) {
            this.typeTagCache$lzycompute$1();
         }

         return this.typeTagCache$module;
      }

      public toAnnotArg$ scala$reflect$runtime$JavaMirrors$JavaMirror$$toAnnotArg() {
         if (this.toAnnotArg$module == null) {
            this.toAnnotArg$lzycompute$1();
         }

         return this.toAnnotArg$module;
      }

      private JavaAnnotationProxy$ JavaAnnotationProxy() {
         if (this.JavaAnnotationProxy$module == null) {
            this.JavaAnnotationProxy$lzycompute$1();
         }

         return this.JavaAnnotationProxy$module;
      }

      private unpickler$ unpickler() {
         if (this.unpickler$module == null) {
            this.unpickler$lzycompute$1();
         }

         return this.unpickler$module;
      }

      public ClassLoader classLoader() {
         return this.classLoader;
      }

      public SymbolTable universe() {
         return this.universe;
      }

      private Definitions.DefinitionsClass.RunDefinitions runDefinitions$lzycompute() {
         synchronized(this){}

         try {
            if ((byte)(this.bitmap$0 & 1) == 0) {
               this.runDefinitions = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().new RunDefinitions();
               this.bitmap$0 = (byte)(this.bitmap$0 | 1);
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.runDefinitions;
      }

      public Definitions.DefinitionsClass.RunDefinitions runDefinitions() {
         return (byte)(this.bitmap$0 & 1) == 0 ? this.runDefinitions$lzycompute() : this.runDefinitions;
      }

      private Mirrors.Roots.RootPackage RootPackage$lzycompute() {
         synchronized(this){}

         try {
            if ((byte)(this.bitmap$0 & 2) == 0) {
               this.RootPackage = (Mirrors.Roots.RootPackage)SynchronizedSymbols.SynchronizedSymbol.markFlagsCompleted$(new SynchronizedSymbols.SynchronizedTermSymbol() {
                  private volatile boolean scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized;
                  private volatile long scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask;
                  // $FF: synthetic field
                  private final JavaMirror $outer;

                  // $FF: synthetic method
                  public Symbols.Symbol scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$privateWithin() {
                     return super.privateWithin();
                  }

                  // $FF: synthetic method
                  public List scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$annotations() {
                     return super.annotations();
                  }

                  // $FF: synthetic method
                  public long scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$getFlag(final long mask) {
                     return super.getFlag(mask);
                  }

                  // $FF: synthetic method
                  public int scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$validTo() {
                     return super.validTo();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$info() {
                     return super.info();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$rawInfo() {
                     return super.rawInfo();
                  }

                  // $FF: synthetic method
                  public boolean scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$exists() {
                     return super.exists();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeSignature() {
                     return super.typeSignature();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeSignatureIn(final Types.Type site) {
                     return super.typeSignatureIn(site);
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeConstructor() {
                     return super.typeConstructor();
                  }

                  // $FF: synthetic method
                  public List scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeParams() {
                     return super.typeParams();
                  }

                  // $FF: synthetic method
                  public List scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$unsafeTypeParams() {
                     return super.unsafeTypeParams();
                  }

                  public boolean isThreadsafe(final Symbols.SymbolOps purpose) {
                     return SynchronizedSymbols.SynchronizedSymbol.isThreadsafe$(this, purpose);
                  }

                  public final Symbols.Symbol privateWithin() {
                     return SynchronizedSymbols.SynchronizedSymbol.privateWithin$(this);
                  }

                  public List annotations() {
                     return SynchronizedSymbols.SynchronizedSymbol.annotations$(this);
                  }

                  public SynchronizedSymbols.SynchronizedSymbol markFlagsCompleted(final long mask) {
                     return SynchronizedSymbols.SynchronizedSymbol.markFlagsCompleted$(this, mask);
                  }

                  public SynchronizedSymbols.SynchronizedSymbol markAllCompleted() {
                     return SynchronizedSymbols.SynchronizedSymbol.markAllCompleted$(this);
                  }

                  public final Object gilSynchronizedIfNotThreadsafe(final Function0 body) {
                     return SynchronizedSymbols.SynchronizedSymbol.gilSynchronizedIfNotThreadsafe$(this, body);
                  }

                  public final long getFlag(final long mask) {
                     return SynchronizedSymbols.SynchronizedSymbol.getFlag$(this, mask);
                  }

                  public int validTo() {
                     return SynchronizedSymbols.SynchronizedSymbol.validTo$(this);
                  }

                  public Types.Type info() {
                     return SynchronizedSymbols.SynchronizedSymbol.info$(this);
                  }

                  public Types.Type rawInfo() {
                     return SynchronizedSymbols.SynchronizedSymbol.rawInfo$(this);
                  }

                  public boolean exists() {
                     return SynchronizedSymbols.SynchronizedSymbol.exists$(this);
                  }

                  public Types.Type typeSignature() {
                     return SynchronizedSymbols.SynchronizedSymbol.typeSignature$(this);
                  }

                  public Types.Type typeSignatureIn(final Types.Type site) {
                     return SynchronizedSymbols.SynchronizedSymbol.typeSignatureIn$(this, site);
                  }

                  public Types.Type typeConstructor() {
                     return SynchronizedSymbols.SynchronizedSymbol.typeConstructor$(this);
                  }

                  public List typeParams() {
                     return SynchronizedSymbols.SynchronizedSymbol.typeParams$(this);
                  }

                  public List unsafeTypeParams() {
                     return SynchronizedSymbols.SynchronizedSymbol.unsafeTypeParams$(this);
                  }

                  public Symbols.AbstractTypeSymbol createAbstractTypeSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createAbstractTypeSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.AliasTypeSymbol createAliasTypeSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createAliasTypeSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.TypeSkolem createTypeSkolemSymbol(final Names.TypeName name, final Object origin, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createTypeSkolemSymbol$(this, name, origin, pos, newFlags);
                  }

                  public Symbols.ClassSymbol createClassSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createClassSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.ModuleClassSymbol createModuleClassSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createModuleClassSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.PackageClassSymbol createPackageClassSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createPackageClassSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.RefinementClassSymbol createRefinementClassSymbol(final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createRefinementClassSymbol$(this, pos, newFlags);
                  }

                  public Symbols.PackageObjectClassSymbol createPackageObjectClassSymbol(final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createPackageObjectClassSymbol$(this, pos, newFlags);
                  }

                  public Symbols.MethodSymbol createMethodSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createMethodSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.ModuleSymbol createModuleSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createModuleSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.ModuleSymbol createPackageSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createPackageSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.TermSymbol createValueParameterSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createValueParameterSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.TermSymbol createValueMemberSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createValueMemberSymbol$(this, name, pos, newFlags);
                  }

                  public boolean scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized() {
                     return this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized;
                  }

                  public void scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized_$eq(final boolean x$1) {
                     this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized = x$1;
                  }

                  public long scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask() {
                     return this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask;
                  }

                  public void scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask_$eq(final long x$1) {
                     this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask = x$1;
                  }

                  // $FF: synthetic method
                  public SynchronizedSymbols scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$$outer() {
                     return this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
                  }

                  public {
                     if (JavaMirror.this == null) {
                        throw null;
                     } else {
                        this.$outer = JavaMirror.this;
                        SynchronizedSymbols.SynchronizedSymbol.$init$(this);
                     }
                  }
               }, -1L);
               this.bitmap$0 = (byte)(this.bitmap$0 | 2);
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.RootPackage;
      }

      public Mirrors.Roots.RootPackage RootPackage() {
         return (byte)(this.bitmap$0 & 2) == 0 ? this.RootPackage$lzycompute() : this.RootPackage;
      }

      private Mirrors.Roots.RootClass RootClass$lzycompute() {
         synchronized(this){}

         try {
            if ((byte)(this.bitmap$0 & 4) == 0) {
               this.RootClass = (Mirrors.Roots.RootClass)SynchronizedSymbols.SynchronizedSymbol.markFlagsCompleted$(new SynchronizedSymbols.SynchronizedModuleClassSymbol() {
                  private Object scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock;
                  private volatile boolean scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized;
                  private volatile long scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask;
                  private volatile boolean bitmap$0;
                  // $FF: synthetic field
                  private final JavaMirror $outer;

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$super$tpe_$times() {
                     return super.tpe_$times();
                  }

                  public Types.Type tpe_$times() {
                     return SynchronizedSymbols.SynchronizedTypeSymbol.tpe_$times$(this);
                  }

                  // $FF: synthetic method
                  public Symbols.Symbol scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$privateWithin() {
                     return super.privateWithin();
                  }

                  // $FF: synthetic method
                  public List scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$annotations() {
                     return super.annotations();
                  }

                  // $FF: synthetic method
                  public long scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$getFlag(final long mask) {
                     return super.getFlag(mask);
                  }

                  // $FF: synthetic method
                  public int scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$validTo() {
                     return super.validTo();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$info() {
                     return super.info();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$rawInfo() {
                     return super.rawInfo();
                  }

                  // $FF: synthetic method
                  public boolean scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$exists() {
                     return super.exists();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeSignature() {
                     return super.typeSignature();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeSignatureIn(final Types.Type site) {
                     return super.typeSignatureIn(site);
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeConstructor() {
                     return super.typeConstructor();
                  }

                  // $FF: synthetic method
                  public List scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeParams() {
                     return super.typeParams();
                  }

                  // $FF: synthetic method
                  public List scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$unsafeTypeParams() {
                     return super.unsafeTypeParams();
                  }

                  public boolean isThreadsafe(final Symbols.SymbolOps purpose) {
                     return SynchronizedSymbols.SynchronizedSymbol.isThreadsafe$(this, purpose);
                  }

                  public final Symbols.Symbol privateWithin() {
                     return SynchronizedSymbols.SynchronizedSymbol.privateWithin$(this);
                  }

                  public List annotations() {
                     return SynchronizedSymbols.SynchronizedSymbol.annotations$(this);
                  }

                  public SynchronizedSymbols.SynchronizedSymbol markFlagsCompleted(final long mask) {
                     return SynchronizedSymbols.SynchronizedSymbol.markFlagsCompleted$(this, mask);
                  }

                  public SynchronizedSymbols.SynchronizedSymbol markAllCompleted() {
                     return SynchronizedSymbols.SynchronizedSymbol.markAllCompleted$(this);
                  }

                  public final Object gilSynchronizedIfNotThreadsafe(final Function0 body) {
                     return SynchronizedSymbols.SynchronizedSymbol.gilSynchronizedIfNotThreadsafe$(this, body);
                  }

                  public final long getFlag(final long mask) {
                     return SynchronizedSymbols.SynchronizedSymbol.getFlag$(this, mask);
                  }

                  public int validTo() {
                     return SynchronizedSymbols.SynchronizedSymbol.validTo$(this);
                  }

                  public Types.Type info() {
                     return SynchronizedSymbols.SynchronizedSymbol.info$(this);
                  }

                  public Types.Type rawInfo() {
                     return SynchronizedSymbols.SynchronizedSymbol.rawInfo$(this);
                  }

                  public boolean exists() {
                     return SynchronizedSymbols.SynchronizedSymbol.exists$(this);
                  }

                  public Types.Type typeSignature() {
                     return SynchronizedSymbols.SynchronizedSymbol.typeSignature$(this);
                  }

                  public Types.Type typeSignatureIn(final Types.Type site) {
                     return SynchronizedSymbols.SynchronizedSymbol.typeSignatureIn$(this, site);
                  }

                  public Types.Type typeConstructor() {
                     return SynchronizedSymbols.SynchronizedSymbol.typeConstructor$(this);
                  }

                  public List typeParams() {
                     return SynchronizedSymbols.SynchronizedSymbol.typeParams$(this);
                  }

                  public List unsafeTypeParams() {
                     return SynchronizedSymbols.SynchronizedSymbol.unsafeTypeParams$(this);
                  }

                  public Symbols.AbstractTypeSymbol createAbstractTypeSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createAbstractTypeSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.AliasTypeSymbol createAliasTypeSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createAliasTypeSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.TypeSkolem createTypeSkolemSymbol(final Names.TypeName name, final Object origin, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createTypeSkolemSymbol$(this, name, origin, pos, newFlags);
                  }

                  public Symbols.ClassSymbol createClassSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createClassSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.ModuleClassSymbol createModuleClassSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createModuleClassSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.PackageClassSymbol createPackageClassSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createPackageClassSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.RefinementClassSymbol createRefinementClassSymbol(final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createRefinementClassSymbol$(this, pos, newFlags);
                  }

                  public Symbols.PackageObjectClassSymbol createPackageObjectClassSymbol(final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createPackageObjectClassSymbol$(this, pos, newFlags);
                  }

                  public Symbols.MethodSymbol createMethodSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createMethodSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.ModuleSymbol createModuleSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createModuleSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.ModuleSymbol createPackageSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createPackageSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.TermSymbol createValueParameterSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createValueParameterSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.TermSymbol createValueMemberSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createValueMemberSymbol$(this, name, pos, newFlags);
                  }

                  private Object scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock$lzycompute() {
                     synchronized(this){}

                     try {
                        if (!this.bitmap$0) {
                           this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock = new Object();
                           this.bitmap$0 = true;
                        }
                     } catch (Throwable var2) {
                        throw var2;
                     }

                     return this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock;
                  }

                  public Object scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock() {
                     return !this.bitmap$0 ? this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock$lzycompute() : this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock;
                  }

                  public boolean scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized() {
                     return this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized;
                  }

                  public void scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized_$eq(final boolean x$1) {
                     this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized = x$1;
                  }

                  public long scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask() {
                     return this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask;
                  }

                  public void scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask_$eq(final long x$1) {
                     this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask = x$1;
                  }

                  // $FF: synthetic method
                  public SynchronizedSymbols scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$$outer() {
                     return this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
                  }

                  // $FF: synthetic method
                  public SynchronizedSymbols scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$$outer() {
                     return this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
                  }

                  public {
                     if (JavaMirror.this == null) {
                        throw null;
                     } else {
                        this.$outer = JavaMirror.this;
                        SynchronizedSymbols.SynchronizedSymbol.$init$(this);
                     }
                  }
               }, -1L);
               this.bitmap$0 = (byte)(this.bitmap$0 | 4);
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.RootClass;
      }

      public Mirrors.Roots.RootClass RootClass() {
         return (byte)(this.bitmap$0 & 4) == 0 ? this.RootClass$lzycompute() : this.RootClass;
      }

      private Mirrors.Roots.EmptyPackage EmptyPackage$lzycompute() {
         synchronized(this){}

         try {
            if ((byte)(this.bitmap$0 & 8) == 0) {
               this.EmptyPackage = (Mirrors.Roots.EmptyPackage)SynchronizedSymbols.SynchronizedSymbol.markFlagsCompleted$(new SynchronizedSymbols.SynchronizedTermSymbol() {
                  private volatile boolean scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized;
                  private volatile long scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask;
                  // $FF: synthetic field
                  private final JavaMirror $outer;

                  // $FF: synthetic method
                  public Symbols.Symbol scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$privateWithin() {
                     return super.privateWithin();
                  }

                  // $FF: synthetic method
                  public List scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$annotations() {
                     return super.annotations();
                  }

                  // $FF: synthetic method
                  public long scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$getFlag(final long mask) {
                     return super.getFlag(mask);
                  }

                  // $FF: synthetic method
                  public int scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$validTo() {
                     return super.validTo();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$info() {
                     return super.info();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$rawInfo() {
                     return super.rawInfo();
                  }

                  // $FF: synthetic method
                  public boolean scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$exists() {
                     return super.exists();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeSignature() {
                     return super.typeSignature();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeSignatureIn(final Types.Type site) {
                     return super.typeSignatureIn(site);
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeConstructor() {
                     return super.typeConstructor();
                  }

                  // $FF: synthetic method
                  public List scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeParams() {
                     return super.typeParams();
                  }

                  // $FF: synthetic method
                  public List scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$unsafeTypeParams() {
                     return super.unsafeTypeParams();
                  }

                  public boolean isThreadsafe(final Symbols.SymbolOps purpose) {
                     return SynchronizedSymbols.SynchronizedSymbol.isThreadsafe$(this, purpose);
                  }

                  public final Symbols.Symbol privateWithin() {
                     return SynchronizedSymbols.SynchronizedSymbol.privateWithin$(this);
                  }

                  public List annotations() {
                     return SynchronizedSymbols.SynchronizedSymbol.annotations$(this);
                  }

                  public SynchronizedSymbols.SynchronizedSymbol markFlagsCompleted(final long mask) {
                     return SynchronizedSymbols.SynchronizedSymbol.markFlagsCompleted$(this, mask);
                  }

                  public SynchronizedSymbols.SynchronizedSymbol markAllCompleted() {
                     return SynchronizedSymbols.SynchronizedSymbol.markAllCompleted$(this);
                  }

                  public final Object gilSynchronizedIfNotThreadsafe(final Function0 body) {
                     return SynchronizedSymbols.SynchronizedSymbol.gilSynchronizedIfNotThreadsafe$(this, body);
                  }

                  public final long getFlag(final long mask) {
                     return SynchronizedSymbols.SynchronizedSymbol.getFlag$(this, mask);
                  }

                  public int validTo() {
                     return SynchronizedSymbols.SynchronizedSymbol.validTo$(this);
                  }

                  public Types.Type info() {
                     return SynchronizedSymbols.SynchronizedSymbol.info$(this);
                  }

                  public Types.Type rawInfo() {
                     return SynchronizedSymbols.SynchronizedSymbol.rawInfo$(this);
                  }

                  public boolean exists() {
                     return SynchronizedSymbols.SynchronizedSymbol.exists$(this);
                  }

                  public Types.Type typeSignature() {
                     return SynchronizedSymbols.SynchronizedSymbol.typeSignature$(this);
                  }

                  public Types.Type typeSignatureIn(final Types.Type site) {
                     return SynchronizedSymbols.SynchronizedSymbol.typeSignatureIn$(this, site);
                  }

                  public Types.Type typeConstructor() {
                     return SynchronizedSymbols.SynchronizedSymbol.typeConstructor$(this);
                  }

                  public List typeParams() {
                     return SynchronizedSymbols.SynchronizedSymbol.typeParams$(this);
                  }

                  public List unsafeTypeParams() {
                     return SynchronizedSymbols.SynchronizedSymbol.unsafeTypeParams$(this);
                  }

                  public Symbols.AbstractTypeSymbol createAbstractTypeSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createAbstractTypeSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.AliasTypeSymbol createAliasTypeSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createAliasTypeSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.TypeSkolem createTypeSkolemSymbol(final Names.TypeName name, final Object origin, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createTypeSkolemSymbol$(this, name, origin, pos, newFlags);
                  }

                  public Symbols.ClassSymbol createClassSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createClassSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.ModuleClassSymbol createModuleClassSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createModuleClassSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.PackageClassSymbol createPackageClassSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createPackageClassSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.RefinementClassSymbol createRefinementClassSymbol(final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createRefinementClassSymbol$(this, pos, newFlags);
                  }

                  public Symbols.PackageObjectClassSymbol createPackageObjectClassSymbol(final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createPackageObjectClassSymbol$(this, pos, newFlags);
                  }

                  public Symbols.MethodSymbol createMethodSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createMethodSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.ModuleSymbol createModuleSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createModuleSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.ModuleSymbol createPackageSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createPackageSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.TermSymbol createValueParameterSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createValueParameterSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.TermSymbol createValueMemberSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createValueMemberSymbol$(this, name, pos, newFlags);
                  }

                  public boolean scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized() {
                     return this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized;
                  }

                  public void scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized_$eq(final boolean x$1) {
                     this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized = x$1;
                  }

                  public long scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask() {
                     return this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask;
                  }

                  public void scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask_$eq(final long x$1) {
                     this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask = x$1;
                  }

                  // $FF: synthetic method
                  public SynchronizedSymbols scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$$outer() {
                     return this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
                  }

                  public {
                     if (JavaMirror.this == null) {
                        throw null;
                     } else {
                        this.$outer = JavaMirror.this;
                        SynchronizedSymbols.SynchronizedSymbol.$init$(this);
                     }
                  }
               }, -1L);
               this.bitmap$0 = (byte)(this.bitmap$0 | 8);
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.EmptyPackage;
      }

      public Mirrors.Roots.EmptyPackage EmptyPackage() {
         return (byte)(this.bitmap$0 & 8) == 0 ? this.EmptyPackage$lzycompute() : this.EmptyPackage;
      }

      private Mirrors.Roots.EmptyPackageClass EmptyPackageClass$lzycompute() {
         synchronized(this){}

         try {
            if ((byte)(this.bitmap$0 & 16) == 0) {
               this.EmptyPackageClass = (Mirrors.Roots.EmptyPackageClass)SynchronizedSymbols.SynchronizedSymbol.markFlagsCompleted$(new SynchronizedSymbols.SynchronizedModuleClassSymbol() {
                  private Object scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock;
                  private volatile boolean scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized;
                  private volatile long scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask;
                  private volatile boolean bitmap$0;
                  // $FF: synthetic field
                  private final JavaMirror $outer;

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$super$tpe_$times() {
                     return super.tpe_$times();
                  }

                  public Types.Type tpe_$times() {
                     return SynchronizedSymbols.SynchronizedTypeSymbol.tpe_$times$(this);
                  }

                  // $FF: synthetic method
                  public Symbols.Symbol scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$privateWithin() {
                     return super.privateWithin();
                  }

                  // $FF: synthetic method
                  public List scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$annotations() {
                     return super.annotations();
                  }

                  // $FF: synthetic method
                  public long scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$getFlag(final long mask) {
                     return super.getFlag(mask);
                  }

                  // $FF: synthetic method
                  public int scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$validTo() {
                     return super.validTo();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$info() {
                     return super.info();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$rawInfo() {
                     return super.rawInfo();
                  }

                  // $FF: synthetic method
                  public boolean scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$exists() {
                     return super.exists();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeSignature() {
                     return super.typeSignature();
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeSignatureIn(final Types.Type site) {
                     return super.typeSignatureIn(site);
                  }

                  // $FF: synthetic method
                  public Types.Type scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeConstructor() {
                     return super.typeConstructor();
                  }

                  // $FF: synthetic method
                  public List scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$typeParams() {
                     return super.typeParams();
                  }

                  // $FF: synthetic method
                  public List scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$super$unsafeTypeParams() {
                     return super.unsafeTypeParams();
                  }

                  public boolean isThreadsafe(final Symbols.SymbolOps purpose) {
                     return SynchronizedSymbols.SynchronizedSymbol.isThreadsafe$(this, purpose);
                  }

                  public final Symbols.Symbol privateWithin() {
                     return SynchronizedSymbols.SynchronizedSymbol.privateWithin$(this);
                  }

                  public List annotations() {
                     return SynchronizedSymbols.SynchronizedSymbol.annotations$(this);
                  }

                  public SynchronizedSymbols.SynchronizedSymbol markFlagsCompleted(final long mask) {
                     return SynchronizedSymbols.SynchronizedSymbol.markFlagsCompleted$(this, mask);
                  }

                  public SynchronizedSymbols.SynchronizedSymbol markAllCompleted() {
                     return SynchronizedSymbols.SynchronizedSymbol.markAllCompleted$(this);
                  }

                  public final Object gilSynchronizedIfNotThreadsafe(final Function0 body) {
                     return SynchronizedSymbols.SynchronizedSymbol.gilSynchronizedIfNotThreadsafe$(this, body);
                  }

                  public final long getFlag(final long mask) {
                     return SynchronizedSymbols.SynchronizedSymbol.getFlag$(this, mask);
                  }

                  public int validTo() {
                     return SynchronizedSymbols.SynchronizedSymbol.validTo$(this);
                  }

                  public Types.Type info() {
                     return SynchronizedSymbols.SynchronizedSymbol.info$(this);
                  }

                  public Types.Type rawInfo() {
                     return SynchronizedSymbols.SynchronizedSymbol.rawInfo$(this);
                  }

                  public boolean exists() {
                     return SynchronizedSymbols.SynchronizedSymbol.exists$(this);
                  }

                  public Types.Type typeSignature() {
                     return SynchronizedSymbols.SynchronizedSymbol.typeSignature$(this);
                  }

                  public Types.Type typeSignatureIn(final Types.Type site) {
                     return SynchronizedSymbols.SynchronizedSymbol.typeSignatureIn$(this, site);
                  }

                  public Types.Type typeConstructor() {
                     return SynchronizedSymbols.SynchronizedSymbol.typeConstructor$(this);
                  }

                  public List typeParams() {
                     return SynchronizedSymbols.SynchronizedSymbol.typeParams$(this);
                  }

                  public List unsafeTypeParams() {
                     return SynchronizedSymbols.SynchronizedSymbol.unsafeTypeParams$(this);
                  }

                  public Symbols.AbstractTypeSymbol createAbstractTypeSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createAbstractTypeSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.AliasTypeSymbol createAliasTypeSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createAliasTypeSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.TypeSkolem createTypeSkolemSymbol(final Names.TypeName name, final Object origin, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createTypeSkolemSymbol$(this, name, origin, pos, newFlags);
                  }

                  public Symbols.ClassSymbol createClassSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createClassSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.ModuleClassSymbol createModuleClassSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createModuleClassSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.PackageClassSymbol createPackageClassSymbol(final Names.TypeName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createPackageClassSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.RefinementClassSymbol createRefinementClassSymbol(final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createRefinementClassSymbol$(this, pos, newFlags);
                  }

                  public Symbols.PackageObjectClassSymbol createPackageObjectClassSymbol(final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createPackageObjectClassSymbol$(this, pos, newFlags);
                  }

                  public Symbols.MethodSymbol createMethodSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createMethodSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.ModuleSymbol createModuleSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createModuleSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.ModuleSymbol createPackageSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createPackageSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.TermSymbol createValueParameterSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createValueParameterSymbol$(this, name, pos, newFlags);
                  }

                  public Symbols.TermSymbol createValueMemberSymbol(final Names.TermName name, final Position pos, final long newFlags) {
                     return SynchronizedSymbols.SynchronizedSymbol.createValueMemberSymbol$(this, name, pos, newFlags);
                  }

                  private Object scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock$lzycompute() {
                     synchronized(this){}

                     try {
                        if (!this.bitmap$0) {
                           this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock = new Object();
                           this.bitmap$0 = true;
                        }
                     } catch (Throwable var2) {
                        throw var2;
                     }

                     return this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock;
                  }

                  public Object scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock() {
                     return !this.bitmap$0 ? this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock$lzycompute() : this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$tpeLock;
                  }

                  public boolean scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized() {
                     return this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized;
                  }

                  public void scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized_$eq(final boolean x$1) {
                     this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initialized = x$1;
                  }

                  public long scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask() {
                     return this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask;
                  }

                  public void scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask_$eq(final long x$1) {
                     this.scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$_initializationMask = x$1;
                  }

                  // $FF: synthetic method
                  public SynchronizedSymbols scala$reflect$runtime$SynchronizedSymbols$SynchronizedTypeSymbol$$$outer() {
                     return this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
                  }

                  // $FF: synthetic method
                  public SynchronizedSymbols scala$reflect$runtime$SynchronizedSymbols$SynchronizedSymbol$$$outer() {
                     return this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
                  }

                  public {
                     if (JavaMirror.this == null) {
                        throw null;
                     } else {
                        this.$outer = JavaMirror.this;
                        SynchronizedSymbols.SynchronizedSymbol.$init$(this);
                     }
                  }
               }, -1L);
               this.bitmap$0 = (byte)(this.bitmap$0 | 16);
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.EmptyPackageClass;
      }

      public Mirrors.Roots.EmptyPackageClass EmptyPackageClass() {
         return (byte)(this.bitmap$0 & 16) == 0 ? this.EmptyPackageClass$lzycompute() : this.EmptyPackageClass;
      }

      private Types.FlagAgnosticCompleter rootLoader$lzycompute() {
         synchronized(this){}

         try {
            if ((byte)(this.bitmap$0 & 32) == 0) {
               this.rootLoader = new Types.FlagAgnosticCompleter() {
                  // $FF: synthetic field
                  private final JavaMirror $outer;

                  public void complete(final Symbols.Symbol sym) {
                     sym.setInfo(this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().new LazyPackageType());
                  }

                  public {
                     if (JavaMirror.this == null) {
                        throw null;
                     } else {
                        this.$outer = JavaMirror.this;
                     }
                  }
               };
               this.bitmap$0 = (byte)(this.bitmap$0 | 32);
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.rootLoader;
      }

      public Types.FlagAgnosticCompleter rootLoader() {
         return (byte)(this.bitmap$0 & 32) == 0 ? this.rootLoader$lzycompute() : this.rootLoader;
      }

      public Symbols.ModuleSymbol staticPackage(final String fullname) {
         try {
            return super.staticPackage(fullname);
         } catch (ScalaReflectionException var2) {
            return this.scala$reflect$runtime$JavaMirrors$$makeScalaPackage(fullname);
         }
      }

      public final TypeTags.TypeTag typeTag(final TypeCreator typeCreator) {
         this.typeTagCache().typeCreator().set(typeCreator);

         TypeTags.TypeTag var10000;
         try {
            TypeTags.TypeTag tag = (TypeTags.TypeTag)((java.lang.ref.WeakReference)this.typeTagCache().get(typeCreator.getClass())).get();
            if (tag == null) {
               this.typeTagCache().remove(typeCreator.getClass());
               tag = ((TypeTags)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).TypeTagImpl(this, typeCreator);
            }

            var10000 = tag;
         } finally {
            this.typeTagCache().typeCreator().remove();
         }

         return var10000;
      }

      public Object toScala(final TwoWayCaches.TwoWayCache cache, final Object key, final Function2 body, final HasJavaClass evidence$1) {
         return cache.toScala(key, () -> {
            Class jclazz = (Class)evidence$1.getClazz().apply(key);
            return body.apply(this.mirrorDefining(jclazz), key);
         });
      }

      private HasJavaClass classHasJavaClass() {
         return this.classHasJavaClass;
      }

      private HasJavaClass methHasJavaClass() {
         return this.methHasJavaClass;
      }

      private HasJavaClass fieldHasJavaClass() {
         return this.fieldHasJavaClass;
      }

      private HasJavaClass constrHasJavaClass() {
         return this.constrHasJavaClass;
      }

      private HasJavaClass tparamHasJavaClass() {
         return this.tparamHasJavaClass;
      }

      public Nothing scala$reflect$runtime$JavaMirrors$JavaMirror$$abort(final String msg) {
         throw new ScalaReflectionException(msg);
      }

      private Nothing ErrorInnerClass(final Symbols.Symbol sym) {
         String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = (new StringBuilder(83)).append(sym).append(" is an inner class, use reflectClass on an InstanceMirror to obtain its ClassMirror").toString();
         throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
      }

      private Nothing ErrorInnerModule(final Symbols.Symbol sym) {
         String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = (new StringBuilder(86)).append(sym).append(" is an inner module, use reflectModule on an InstanceMirror to obtain its ModuleMirror").toString();
         throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
      }

      public Nothing scala$reflect$runtime$JavaMirrors$JavaMirror$$ErrorStaticClass(final Symbols.Symbol sym) {
         String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = (new StringBuilder(81)).append(sym).append(" is a static class, use reflectClass on a RuntimeMirror to obtain its ClassMirror").toString();
         throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
      }

      public Nothing scala$reflect$runtime$JavaMirrors$JavaMirror$$ErrorStaticModule(final Symbols.Symbol sym) {
         String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = (new StringBuilder(84)).append(sym).append(" is a static module, use reflectModule on a RuntimeMirror to obtain its ModuleMirror").toString();
         throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
      }

      private Nothing ErrorNotMember(final Symbols.Symbol sym, final Symbols.Symbol owner) {
         String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = (new StringBuilder(37)).append("expected a member of ").append(owner).append(", you provided ").append(sym.kindString()).append(" ").append(sym.fullName('.')).toString();
         throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
      }

      public Nothing scala$reflect$runtime$JavaMirrors$JavaMirror$$ErrorNotField(final Symbols.Symbol sym) {
         String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = (new StringBuilder(60)).append("expected a field or an accessor method symbol, you provided ").append(sym).toString();
         throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
      }

      private Nothing ErrorNotConstructor(final Symbols.Symbol sym, final Symbols.Symbol owner) {
         String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = (new StringBuilder(41)).append("expected a constructor of ").append(owner).append(", you provided ").append(sym).toString();
         throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
      }

      private Nothing ErrorArrayConstructor(final Symbols.Symbol sym, final Symbols.Symbol owner) {
         String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = "Cannot instantiate arrays with mirrors. Consider using `scala.reflect.ClassTag(<class of element>).newArray(<length>)` instead";
         throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
      }

      private Nothing ErrorFree(final Symbols.Symbol member, final Symbols.Symbol freeType) {
         String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = (new StringBuilder(55)).append("cannot reflect ").append(member.kindString()).append(" ").append(member.name()).append(", because it's a member of a weak type ").append(freeType.name()).toString();
         throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
      }

      public Nothing scala$reflect$runtime$JavaMirrors$JavaMirror$$ErrorNonExistentField(final Symbols.Symbol sym) {
         scala.reflect.internal.util.package$ var10000 = scala.reflect.internal.util.package$.MODULE$;
         StringContext StringContextStripMarginOps_stringContext = new StringContext(scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new String[]{"Scala field ", " of ", " isn't represented as a Java field, nor does it have a\n          |Java accessor method. One common reason for this is that it may be a private class parameter\n          |not used outside the primary constructor."}));
         scala.reflect.internal.util.package.StringContextStripMarginOps var9 = new scala.reflect.internal.util.package.StringContextStripMarginOps(StringContextStripMarginOps_stringContext);
         Object var8 = null;
         ArraySeq sm_args = scala.runtime.ScalaRunTime..MODULE$.genericWrapArray(new Object[]{sym.name(), sym.owner()});
         scala.reflect.internal.util.package.StringContextStripMarginOps sm_this = var9;
         String var10 = StripMarginInterpolator.sm$(sm_this, sm_args);
         sm_this = null;
         Object var7 = null;
         String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = var10;
         throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
      }

      public scala.reflect.api.Mirrors.InstanceMirror reflect(final Object obj, final ClassTag evidence$2) {
         return new JavaInstanceMirror(obj, evidence$2);
      }

      public scala.reflect.api.Mirrors.ClassMirror reflectClass(final Symbols.ClassSymbol cls) {
         if (!cls.isStatic()) {
            throw this.ErrorInnerClass(cls);
         } else {
            return new JavaClassMirror((Object)null, cls);
         }
      }

      public scala.reflect.api.Mirrors.ModuleMirror reflectModule(final Symbols.ModuleSymbol mod) {
         if (!mod.isStatic()) {
            throw this.ErrorInnerModule(mod);
         } else {
            return new JavaModuleMirror((Object)null, mod);
         }
      }

      public Class runtimeClass(final Types.Type tpe) {
         return this.typeToJavaClass(tpe);
      }

      public Class runtimeClass(final Symbols.ClassSymbol cls) {
         return this.classToJava(cls);
      }

      public Symbols.ClassSymbol classSymbol(final Class rtcls) {
         return this.classToScala(rtcls);
      }

      public Symbols.ModuleSymbol moduleSymbol(final Class rtcls) {
         return (Symbols.ModuleSymbol)this.classToScala(rtcls).companionModule().asModule();
      }

      private void ensuringNotFree(final Symbols.Symbol sym, final Function0 body) {
         List var10000 = sym.ownerChain();
         if (var10000 == null) {
            throw null;
         } else {
            List find_these = var10000;

            while(true) {
               if (find_these.isEmpty()) {
                  var7 = scala.None..MODULE$;
                  break;
               }

               if (((Symbols.Symbol)find_these.head()).isFreeType()) {
                  var7 = new Some(find_these.head());
                  break;
               }

               find_these = (List)find_these.tail();
            }

            Object var6 = null;
            Option freeType = (Option)var7;
            if (freeType instanceof Some) {
               Symbols.Symbol freeType = (Symbols.Symbol)((Some)freeType).value();
               throw this.ErrorFree(sym, freeType);
            } else {
               body.apply();
            }
         }
      }

      public void scala$reflect$runtime$JavaMirrors$JavaMirror$$checkMemberOf(final Symbols.Symbol sym, final Symbols.ClassSymbol owner) {
         Symbols.Symbol var10000 = sym.owner();
         Symbols.ClassSymbol var3 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().AnyClass();
         if (var10000 == null) {
            if (var3 == null) {
               return;
            }
         } else if (var10000.equals(var3)) {
            return;
         }

         var10000 = sym.owner();
         Symbols.AliasTypeSymbol var4 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().AnyRefClass();
         if (var10000 == null) {
            if (var4 == null) {
               return;
            }
         } else if (var10000.equals(var4)) {
            return;
         }

         var10000 = sym.owner();
         Symbols.ClassSymbol var5 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ObjectClass();
         if (var10000 == null) {
            if (var5 == null) {
               return;
            }
         } else if (var10000.equals(var5)) {
            return;
         }

         label73: {
            var10000 = sym.owner();
            Symbols.ClassSymbol var6 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().AnyValClass();
            if (var10000 == null) {
               if (var6 == null) {
                  break label73;
               }
            } else if (var10000.equals(var6)) {
               break label73;
            }

            List var14 = sym.ownerChain();
            if (var14 == null) {
               throw null;
            }

            List ensuringNotFree_find_these = var14;

            while(true) {
               if (ensuringNotFree_find_these.isEmpty()) {
                  var15 = scala.None..MODULE$;
                  break;
               }

               if (((Symbols.Symbol)ensuringNotFree_find_these.head()).isFreeType()) {
                  var15 = new Some(ensuringNotFree_find_these.head());
                  break;
               }

               ensuringNotFree_find_these = (List)ensuringNotFree_find_these.tail();
            }

            Object var10 = null;
            Option ensuringNotFree_freeType = (Option)var15;
            if (ensuringNotFree_freeType instanceof Some) {
               Symbols.Symbol ensuringNotFree_freeType = (Symbols.Symbol)((Some)ensuringNotFree_freeType).value();
               throw this.ErrorFree(sym, ensuringNotFree_freeType);
            }

            $anonfun$checkMemberOf$1(this, owner, sym);
            return;
         }

         if (!owner.isPrimitiveValueClass() && !owner.isDerivedValueClass()) {
            throw this.ErrorNotMember(sym, owner);
         }
      }

      public void scala$reflect$runtime$JavaMirrors$JavaMirror$$checkConstructorOf(final Symbols.Symbol sym, final Symbols.ClassSymbol owner) {
         if (!sym.isClassConstructor()) {
            throw this.ErrorNotConstructor(sym, owner);
         } else {
            label44: {
               Symbols.ClassSymbol var3 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ArrayClass();
               if (owner == null) {
                  if (var3 == null) {
                     break label44;
                  }
               } else if (owner.equals(var3)) {
                  break label44;
               }

               List var10000 = sym.ownerChain();
               if (var10000 == null) {
                  throw null;
               }

               List ensuringNotFree_find_these = var10000;

               while(true) {
                  if (ensuringNotFree_find_these.isEmpty()) {
                     var9 = scala.None..MODULE$;
                     break;
                  }

                  if (((Symbols.Symbol)ensuringNotFree_find_these.head()).isFreeType()) {
                     var9 = new Some(ensuringNotFree_find_these.head());
                     break;
                  }

                  ensuringNotFree_find_these = (List)ensuringNotFree_find_these.tail();
               }

               Object var8 = null;
               Option ensuringNotFree_freeType = (Option)var9;
               if (ensuringNotFree_freeType instanceof Some) {
                  Symbols.Symbol ensuringNotFree_freeType = (Symbols.Symbol)((Some)ensuringNotFree_freeType).value();
                  throw this.ErrorFree(sym, ensuringNotFree_freeType);
               }

               $anonfun$checkConstructorOf$1(this, owner, sym);
               return;
            }

            String ErrorArrayConstructor_scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = "Cannot instantiate arrays with mirrors. Consider using `scala.reflect.ClassTag(<class of element>).newArray(<length>)` instead";
            throw new ScalaReflectionException(ErrorArrayConstructor_scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
         }
      }

      public Class scala$reflect$runtime$JavaMirrors$JavaMirror$$preciseClass(final Object instance, final ClassTag evidence$3) {
         scala.reflect.package var10000 = scala.reflect.package..MODULE$;
         Class staticClazz = evidence$3.runtimeClass();
         Class dynamicClazz = instance.getClass();
         return staticClazz.isPrimitive() ? staticClazz : dynamicClazz;
      }

      public boolean scala$reflect$runtime$JavaMirrors$JavaMirror$$isGetClass(final Symbols.MethodSymbol meth) {
         if (meth.name().string_$eq$eq("getClass")) {
            List var10000 = meth.paramss();
            scala..eq.colon.eq flatten_toIterableOnce = scala..less.colon.less..MODULE$.refl();
            if (var10000 == null) {
               throw null;
            }

            Object var4 = StrictOptimizedIterableOps.flatten$(var10000, flatten_toIterableOnce);
            Object var3 = null;
            if (((List)var4).isEmpty()) {
               return true;
            }
         }

         return false;
      }

      public boolean scala$reflect$runtime$JavaMirrors$JavaMirror$$isStringConcat(final Symbols.MethodSymbol meth) {
         Symbols.MethodSymbol var2 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().String_$plus();
         if (meth == null) {
            if (var2 == null) {
               return true;
            }
         } else if (meth.equals(var2)) {
            return true;
         }

         if (!meth.owner().isPrimitiveValueClass() || !meth.returnType().$eq$colon$eq(((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().StringClass().toType())) {
            return false;
         } else {
            return true;
         }
      }

      private Set bytecodelessMethodOwners$lzycompute() {
         synchronized(this){}

         try {
            if ((byte)(this.bitmap$0 & 64) == 0) {
               Set var10001 = scala.Predef..MODULE$.Set();
               ArraySeq apply_elems = scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.Symbol[]{((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().AnyClass(), ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().AnyValClass(), ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().AnyRefClass(), ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ObjectClass(), ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ArrayClass()});
               if (var10001 == null) {
                  throw null;
               }

               Object var9 = IterableFactory.apply$(var10001, apply_elems);
               Object var7 = null;
               SetOps var10 = (SetOps)var9;
               Definitions.definitions$ var10002 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions();
               if (var10002 == null) {
                  throw null;
               }

               Definitions.DefinitionsClass ScalaPrimitiveValueClasses_this = var10002;
               List var12 = ScalaPrimitiveValueClasses_this.ScalaValueClasses();
               ScalaPrimitiveValueClasses_this = null;
               List $plus$plus_that = var12;
               if (var10 == null) {
                  throw null;
               }

               var10 = var10.concat($plus$plus_that);
               Object var6 = null;
               this.bytecodelessMethodOwners = (Set)var10;
               this.bitmap$0 = (byte)(this.bitmap$0 | 64);
            }
         } catch (Throwable var5) {
            throw var5;
         }

         return this.bytecodelessMethodOwners;
      }

      public Set bytecodelessMethodOwners() {
         return (byte)(this.bitmap$0 & 64) == 0 ? this.bytecodelessMethodOwners$lzycompute() : this.bytecodelessMethodOwners;
      }

      private Set bytecodefulObjectMethods$lzycompute() {
         synchronized(this){}

         try {
            if ((byte)(this.bitmap$0 & 128) == 0) {
               Set var10001 = scala.Predef..MODULE$.Set();
               ArraySeq apply_elems = scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.Symbol[]{((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_clone(), ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_equals(), ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_finalize(), ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_hashCode(), ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_toString(), ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_notify(), ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_notifyAll()});
               if (var10001 == null) {
                  throw null;
               }

               Object var7 = IterableFactory.apply$(var10001, apply_elems);
               Object var6 = null;
               SetOps var8 = (SetOps)var7;
               List $plus$plus_that = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_wait().alternatives();
               if (var8 == null) {
                  throw null;
               }

               var8 = var8.concat($plus$plus_that);
               Object var5 = null;
               this.bytecodefulObjectMethods = (Set)var8;
               this.bitmap$0 = (byte)(this.bitmap$0 | 128);
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.bytecodefulObjectMethods;
      }

      public Set bytecodefulObjectMethods() {
         return (byte)(this.bitmap$0 & 128) == 0 ? this.bytecodefulObjectMethods$lzycompute() : this.bytecodefulObjectMethods;
      }

      private boolean isBytecodelessMethod(final Symbols.MethodSymbol meth) {
         if (!this.scala$reflect$runtime$JavaMirrors$JavaMirror$$isGetClass(meth) && !this.scala$reflect$runtime$JavaMirrors$JavaMirror$$isStringConcat(meth) && !meth.owner().isPrimitiveValueClass() && !meth.equals(this.runDefinitions().Predef_classOf()) && !meth.isMacro()) {
            Set var10000 = this.bytecodelessMethodOwners();
            Symbols.Symbol apply_elem = meth.owner();
            if (var10000 == null) {
               throw null;
            } else {
               boolean var4 = var10000.contains(apply_elem);
               apply_elem = null;
               if (var4) {
                  Set var5 = this.bytecodefulObjectMethods();
                  if (var5 == null) {
                     throw null;
                  }

                  if (!var5.contains(meth)) {
                     return true;
                  }
               }

               return false;
            }
         } else {
            return true;
         }
      }

      public boolean scala$reflect$runtime$JavaMirrors$JavaMirror$$isByNameParam(final Types.Type p) {
         return ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().isByNameParamType(p);
      }

      private boolean isValueClassParam(final Types.Type p) {
         return p.typeSymbol().isDerivedValueClass();
      }

      public scala.reflect.api.Mirrors.MethodMirror scala$reflect$runtime$JavaMirrors$JavaMirror$$mkMethodMirror(final Object receiver, final Symbols.MethodSymbol symbol, final ClassTag evidence$5) {
         if (this.isBytecodelessMethod(symbol)) {
            return new BytecodelessMethodMirror(receiver, symbol, evidence$5);
         } else {
            SymbolTable var10000 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
            List mexists_xss = symbol.paramss();
            if (var10000 == null) {
               throw null;
            } else if (mexists_xss == null) {
               throw null;
            } else {
               List mexists_exists_these = mexists_xss;

               while(true) {
                  if (mexists_exists_these.isEmpty()) {
                     var13 = false;
                     break;
                  }

                  List var6 = (List)mexists_exists_these.head();
                  if (var6 == null) {
                     throw null;
                  }

                  List exists_these = var6;

                  while(true) {
                     if (exists_these.isEmpty()) {
                        var12 = false;
                        break;
                     }

                     Symbols.Symbol var8 = (Symbols.Symbol)exists_these.head();
                     if ($anonfun$mkMethodMirror$1(this, var8)) {
                        var12 = true;
                        break;
                     }

                     exists_these = (List)exists_these.tail();
                  }

                  Object var11 = null;
                  if (var12) {
                     var13 = true;
                     break;
                  }

                  mexists_exists_these = (List)mexists_exists_these.tail();
               }

               Object var10 = null;
               Object var9 = null;
               if (var13) {
                  return new JavaTransformingMethodMirror(receiver, symbol);
               } else {
                  switch (this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().sumSize(symbol.paramss(), 0)) {
                     case 0:
                        return new JavaVanillaMethodMirror0(receiver, symbol);
                     case 1:
                        return new JavaVanillaMethodMirror1(receiver, symbol);
                     case 2:
                        return new JavaVanillaMethodMirror2(receiver, symbol);
                     case 3:
                        return new JavaVanillaMethodMirror3(receiver, symbol);
                     case 4:
                        return new JavaVanillaMethodMirror4(receiver, symbol);
                     default:
                        return new JavaVanillaMethodMirror(receiver, symbol);
                  }
               }
            }
         }
      }

      private boolean erasesTo(final Symbols.Symbol meth, final Method jmeth) {
         Types.Type mtpe = ((Transforms)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).transformedType(meth);
         List var10000 = mtpe.paramTypes();
         if (var10000 == null) {
            throw null;
         } else {
            List map_this = var10000;
            Object var17;
            if (map_this == scala.collection.immutable.Nil..MODULE$) {
               var17 = scala.collection.immutable.Nil..MODULE$;
            } else {
               Types.Type var10 = (Types.Type)map_this.head();
               scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon(this.runtimeClass(var10), scala.collection.immutable.Nil..MODULE$);
               scala.collection.immutable..colon.colon map_t = map_h;

               for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                  var10 = (Types.Type)map_rest.head();
                  scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon(this.runtimeClass(var10), scala.collection.immutable.Nil..MODULE$);
                  map_t.next_$eq(map_nx);
                  map_t = map_nx;
               }

               Statics.releaseFence();
               var17 = map_h;
            }

            Object var11 = null;
            Object var12 = null;
            Object var13 = null;
            Object var14 = null;
            Object var15 = null;
            scala.collection.mutable.ArraySeq.ofRef var10001 = scala.Predef..MODULE$.wrapRefArray(jmeth.getParameterTypes());
            if (var10001 == null) {
               throw null;
            } else {
               if (var17.equals(IterableOnceOps.toList$(var10001))) {
                  Class var18 = this.runtimeClass(mtpe.resultType());
                  Class var4 = jmeth.getReturnType();
                  if (var18 == null) {
                     if (var4 == null) {
                        return true;
                     }
                  } else if (var18.equals(var4)) {
                     return true;
                  }
               }

               return false;
            }
         }
      }

      private boolean erasesTo(final Symbols.Symbol meth, final Constructor jconstr) {
         Types.Type mtpe = ((Transforms)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).transformedType(meth);
         List var10000 = mtpe.paramTypes();
         if (var10000 == null) {
            throw null;
         } else {
            List map_this = var10000;
            Object var17;
            if (map_this == scala.collection.immutable.Nil..MODULE$) {
               var17 = scala.collection.immutable.Nil..MODULE$;
            } else {
               Types.Type var10 = (Types.Type)map_this.head();
               scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon(this.runtimeClass(var10), scala.collection.immutable.Nil..MODULE$);
               scala.collection.immutable..colon.colon map_t = map_h;

               for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                  var10 = (Types.Type)map_rest.head();
                  scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon(this.runtimeClass(var10), scala.collection.immutable.Nil..MODULE$);
                  map_t.next_$eq(map_nx);
                  map_t = map_nx;
               }

               Statics.releaseFence();
               var17 = map_h;
            }

            Object var11 = null;
            Object var12 = null;
            Object var13 = null;
            Object var14 = null;
            Object var15 = null;
            scala.collection.mutable.ArraySeq.ofRef var10001 = scala.Predef..MODULE$.wrapRefArray(jconstr.getParameterTypes());
            if (var10001 == null) {
               throw null;
            } else {
               if (var17.equals(IterableOnceOps.toList$(var10001))) {
                  Class var18 = this.runtimeClass(mtpe.resultType());
                  Class var4 = jconstr.getDeclaringClass();
                  if (var18 == null) {
                     if (var4 == null) {
                        return true;
                     }
                  } else if (var18.equals(var4)) {
                     return true;
                  }
               }

               return false;
            }
         }
      }

      public Class javaClass(final String path) {
         return Class.forName(path, false, this.classLoader());
      }

      public Option tryJavaClass(final String path) {
         try {
            return new Some(this.javaClass(path));
         } catch (Throwable var3) {
            if (var3 instanceof LinkageError ? true : var3 instanceof ClassNotFoundException) {
               return scala.None..MODULE$;
            } else {
               throw var3;
            }
         }
      }

      public JavaMirror mirrorDefining(final Class jclazz) {
         ClassLoader cl = jclazz.getClassLoader();
         ClassLoader var3 = this.classLoader();
         if (cl == null) {
            if (var3 == null) {
               return this;
            }
         } else if (cl.equals(var3)) {
            return this;
         }

         return this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().runtimeMirror(cl);
      }

      public void unpickleClass(final Symbols.ClassSymbol clazz, final Symbols.ModuleSymbol module, final Class jclazz) {
         try {
            this.markAbsent$1(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoType(), clazz, module);
            Option var4 = this.loadBytes$1("scala.reflect.ScalaSignature", scala.reflect.ClassTag..MODULE$.apply(String.class), jclazz);
            if (var4 instanceof Some) {
               String ssig = (String)((Some)var4).value();
               this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().info(() -> (new StringBuilder(32)).append("unpickling Scala ").append(clazz).append(" and ").append(module).append(", owner = ").append(clazz.owner()).toString());
               byte[] bytes = ssig.getBytes(StandardCharsets.UTF_8);
               int len = ByteCodecs$.MODULE$.decode(bytes);
               this.scala$reflect$runtime$JavaMirrors$JavaMirror$$assignAssociatedFile(clazz, module, jclazz);
               this.unpickler().unpickle((byte[])scala.collection.ArrayOps..MODULE$.slice$extension(bytes, 0, len), 0, clazz, module, jclazz.getName());
               this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().markAllCompleted(clazz, module);
            } else {
               if (!scala.None..MODULE$.equals(var4)) {
                  throw new MatchError(var4);
               }

               Option var8 = this.loadBytes$1("scala.reflect.ScalaLongSignature", scala.reflect.ClassTag..MODULE$.apply(scala.runtime.ScalaRunTime..MODULE$.arrayClass(String.class)), jclazz);
               if (var8 instanceof Some) {
                  String[] slsig;
                  Object var37;
                  label139: {
                     label147: {
                        slsig = (String[])((Some)var8).value();
                        this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().info(() -> (new StringBuilder(48)).append("unpickling Scala ").append(clazz).append(" and ").append(module).append(" with long Scala signature").toString());
                        ClassTag flatMap$extension_m = scala.reflect.ClassTag..MODULE$.Byte();
                        ArrayBuilder var10000 = scala.collection.mutable.ArrayBuilder..MODULE$;
                        Class var18 = Byte.TYPE;
                        Class var28 = Byte.TYPE;
                        if (var28 == null) {
                           if (var18 == null) {
                              break label147;
                           }
                        } else if (var28.equals(var18)) {
                           break label147;
                        }

                        label148: {
                           var28 = Short.TYPE;
                           if (var28 == null) {
                              if (var18 == null) {
                                 break label148;
                              }
                           } else if (var28.equals(var18)) {
                              break label148;
                           }

                           label149: {
                              var28 = Character.TYPE;
                              if (var28 == null) {
                                 if (var18 == null) {
                                    break label149;
                                 }
                              } else if (var28.equals(var18)) {
                                 break label149;
                              }

                              label150: {
                                 var28 = Integer.TYPE;
                                 if (var28 == null) {
                                    if (var18 == null) {
                                       break label150;
                                    }
                                 } else if (var28.equals(var18)) {
                                    break label150;
                                 }

                                 label151: {
                                    var28 = Long.TYPE;
                                    if (var28 == null) {
                                       if (var18 == null) {
                                          break label151;
                                       }
                                    } else if (var28.equals(var18)) {
                                       break label151;
                                    }

                                    label152: {
                                       var28 = Float.TYPE;
                                       if (var28 == null) {
                                          if (var18 == null) {
                                             break label152;
                                          }
                                       } else if (var28.equals(var18)) {
                                          break label152;
                                       }

                                       label153: {
                                          var28 = Double.TYPE;
                                          if (var28 == null) {
                                             if (var18 == null) {
                                                break label153;
                                             }
                                          } else if (var28.equals(var18)) {
                                             break label153;
                                          }

                                          label154: {
                                             var28 = Boolean.TYPE;
                                             if (var28 == null) {
                                                if (var18 == null) {
                                                   break label154;
                                                }
                                             } else if (var28.equals(var18)) {
                                                break label154;
                                             }

                                             label83: {
                                                var28 = Void.TYPE;
                                                if (var28 == null) {
                                                   if (var18 == null) {
                                                      break label83;
                                                   }
                                                } else if (var28.equals(var18)) {
                                                   break label83;
                                                }

                                                var37 = new ArrayBuilder.ofRef(flatMap$extension_m);
                                                break label139;
                                             }

                                             var37 = new ArrayBuilder.ofUnit();
                                             break label139;
                                          }

                                          var37 = new ArrayBuilder.ofBoolean();
                                          break label139;
                                       }

                                       var37 = new ArrayBuilder.ofDouble();
                                       break label139;
                                    }

                                    var37 = new ArrayBuilder.ofFloat();
                                    break label139;
                                 }

                                 var37 = new ArrayBuilder.ofLong();
                                 break label139;
                              }

                              var37 = new ArrayBuilder.ofInt();
                              break label139;
                           }

                           var37 = new ArrayBuilder.ofChar();
                           break label139;
                        }

                        var37 = new ArrayBuilder.ofShort();
                        break label139;
                     }

                     var37 = new ArrayBuilder.ofByte();
                  }

                  Object var25 = null;
                  ArrayBuilder flatMap$extension_flatMap$extension_b = (ArrayBuilder)var37;

                  for(int flatMap$extension_flatMap$extension_i = 0; flatMap$extension_flatMap$extension_i < slsig.length; ++flatMap$extension_flatMap$extension_i) {
                     byte[] var20 = slsig[flatMap$extension_flatMap$extension_i].getBytes(StandardCharsets.UTF_8);
                     IterableOnce flatMap$extension_flatMap$extension_$plus$plus$eq_elems = scala.Predef..MODULE$.wrapByteArray(var20);
                     flatMap$extension_flatMap$extension_b.addAll(flatMap$extension_flatMap$extension_$plus$plus$eq_elems);
                     flatMap$extension_flatMap$extension_$plus$plus$eq_elems = null;
                  }

                  var37 = flatMap$extension_flatMap$extension_b.result();
                  Object var23 = null;
                  flatMap$extension_flatMap$extension_b = null;
                  Object var27 = null;
                  byte[] encoded = (byte[])var37;
                  int len = ByteCodecs$.MODULE$.decode(encoded);
                  byte[] decoded = (byte[])scala.collection.ArrayOps..MODULE$.slice$extension(encoded, 0, len);
                  this.scala$reflect$runtime$JavaMirrors$JavaMirror$$assignAssociatedFile(clazz, module, jclazz);
                  this.unpickler().unpickle(decoded, 0, clazz, module, jclazz.getName());
                  this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().markAllCompleted(clazz, module);
               } else {
                  if (!scala.None..MODULE$.equals(var8)) {
                     throw new MatchError(var8);
                  }

                  this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().info(() -> (new StringBuilder(37)).append("translating reflection info for Java ").append(jclazz).toString());
                  this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().initClassAndModule(clazz, module, new FromJavaClassCompleter(clazz, module, jclazz));
               }
            }

         } catch (MissingRequirementError var21) {
            throw this.handleError$1(var21, clazz, module);
         } catch (IOException var22) {
            throw this.handleError$1(var22, clazz, module);
         }
      }

      public Symbols.TypeSymbol scala$reflect$runtime$JavaMirrors$JavaMirror$$createTypeParameter(final TypeVariable jtvar) {
         Symbols.Symbol qual$1 = this.sOwner(jtvar);
         Names.TypeName x$1 = ((Names)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).newTypeName(jtvar.getName());
         Position x$2 = qual$1.newTypeParameter$default$2();
         long x$3 = 0L;
         long newTypeParameter_newAbstractType_newFlags = 8192L | x$3;
         Symbols.TypeSymbol tparam = (Symbols.TypeSymbol)qual$1.createAbstractTypeSymbol(x$1, x$2, 16L | newTypeParameter_newAbstractType_newFlags).setInfo(new TypeParamCompleter(jtvar));
         this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().markFlagsCompleted(tparam, -1L);
         this.tparamCache.enter(jtvar, tparam);
         return tparam;
      }

      public void scala$reflect$runtime$JavaMirrors$JavaMirror$$assignAssociatedFile(final Symbols.Symbol clazz, final Symbols.Symbol module, final Class jclazz) {
         AbstractFile associatedFile;
         label14: {
            ReflectionUtils$ var10000 = ReflectionUtils$.MODULE$;
            associatedFile = NoAbstractFile$.MODULE$;
            clazz.associatedFile_$eq(associatedFile);
            Symbols.NoSymbol var5 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoSymbol();
            if (module == null) {
               if (var5 != null) {
                  break label14;
               }
            } else if (!module.equals(var5)) {
               break label14;
            }

            return;
         }

         module.associatedFile_$eq(associatedFile);
      }

      public void scala$reflect$runtime$JavaMirrors$JavaMirror$$copyAnnotations(final Symbols.Symbol sym, final AnnotatedElement jann) {
         scala.collection.mutable.ArraySeq.ofRef var10001 = scala.Predef..MODULE$.wrapRefArray(scala.collection.ArrayOps..MODULE$.map$extension(jann.getAnnotations(), this.JavaAnnotationProxy(), scala.reflect.ClassTag..MODULE$.apply(JavaAnnotationProxy.class)));
         if (var10001 == null) {
            throw null;
         } else {
            sym.setAnnotations(IterableOnceOps.toList$(var10001));
            Object var9;
            if (jann instanceof Method) {
               Method var3 = (Method)jann;
               scala.collection.mutable.ArraySeq.ofRef var10000 = scala.Predef..MODULE$.wrapRefArray(var3.getExceptionTypes());
               if (var10000 == null) {
                  throw null;
               }

               var9 = IterableOnceOps.toList$(var10000);
            } else if (jann instanceof Constructor) {
               Constructor var4 = (Constructor)jann;
               scala.collection.mutable.ArraySeq.ofRef var10 = scala.Predef..MODULE$.wrapRefArray(var4.getExceptionTypes());
               if (var10 == null) {
                  throw null;
               }

               var9 = IterableOnceOps.toList$(var10);
            } else {
               var9 = scala.collection.immutable.Nil..MODULE$;
            }

            ((List)var9).foreach((jexTpe) -> (Symbols.Symbol)sym.addThrowsAnnotation(this.classSymbol(jexTpe)));
            if (jann instanceof Member) {
               JavaAccFlags$ var11 = JavaAccFlags$.MODULE$;
               Member scala$reflect$runtime$JavaMirrors$JavaMirror$$jMemberOps_member = (Member)jann;
               jMemberOps var13 = new jMemberOps(scala$reflect$runtime$JavaMirrors$JavaMirror$$jMemberOps_member);
               Object var8 = null;
               List var12 = var11.toScalaAnnotations$extension(var13.javaFlags(), (scala.reflect.internal.SymbolTable)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer());
               if (var12 == null) {
                  throw null;
               } else {
                  for(List foreach_these = var12; !foreach_these.isEmpty(); foreach_these = (List)foreach_these.tail()) {
                     AnnotationInfos.AnnotationInfo var7 = (AnnotationInfos.AnnotationInfo)foreach_these.head();
                     sym.addAnnotation(var7);
                  }

               }
            }
         }
      }

      public jClassOps scala$reflect$runtime$JavaMirrors$JavaMirror$$jClassOps(final Class clazz) {
         return new jClassOps(clazz);
      }

      public jMemberOps scala$reflect$runtime$JavaMirrors$JavaMirror$$jMemberOps(final Member member) {
         return new jMemberOps(member);
      }

      private Symbols.Symbol followStatic(final Symbols.Symbol clazz, final int mods) {
         return this.scala$reflect$runtime$JavaMirrors$JavaMirror$$followStatic(clazz, clazz.companionModule(), mods);
      }

      public Symbols.Symbol scala$reflect$runtime$JavaMirrors$JavaMirror$$followStatic(final Symbols.Symbol clazz, final Symbols.Symbol module, final int mods) {
         if (JavaAccFlags$.MODULE$.has$extension(mods, 8)) {
            Symbols.Symbol var10000 = module.moduleClass();
            if (var10000 == null) {
               throw null;
            } else {
               Symbols.Symbol orElse_this = var10000;
               return orElse_this != orElse_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? orElse_this : clazz;
            }
         } else {
            return clazz;
         }
      }

      public RichClass RichClass(final Class jclazz) {
         return new RichClass(jclazz);
      }

      private Symbols.Symbol sOwner(final Class jclazz) {
         if (jclazz != null && ReflectionUtils.PrimitiveOrArray$.MODULE$.unapply(jclazz)) {
            return ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ScalaPackageClass();
         } else {
            if (jclazz != null) {
               Option var2 = ReflectionUtils.EnclosedInMethod$.MODULE$.unapply(jclazz);
               if (!var2.isEmpty()) {
                  Method jowner = (Method)var2.get();
                  return this.methodToScala(jowner);
               }
            }

            if (jclazz != null) {
               Option var4 = ReflectionUtils.EnclosedInConstructor$.MODULE$.unapply(jclazz);
               if (!var4.isEmpty()) {
                  Constructor jowner = (Constructor)var4.get();
                  return this.constructorToScala(jowner);
               }
            }

            if (jclazz != null) {
               Option var6 = ReflectionUtils.EnclosedInClass$.MODULE$.unapply(jclazz);
               if (!var6.isEmpty()) {
                  Class jowner = (Class)var6.get();
                  return this.followStatic(this.classToScala(jowner), (new jClassOps(jclazz)).javaFlags());
               }
            }

            if (jclazz != null) {
               Option var8 = ReflectionUtils.EnclosedInPackage$.MODULE$.unapply(jclazz);
               if (!var8.isEmpty()) {
                  Package jowner = (Package)var8.get();
                  return this.packageToScala(jowner).moduleClass();
               }
            }

            return this.packageNameToScala(scala.collection.StringOps..MODULE$.take$extension(jclazz.getName(), jclazz.getName().lastIndexOf(46))).moduleClass();
         }
      }

      private Symbols.Symbol sOwner(final Member jmember) {
         return this.followStatic(this.classToScala(jmember.getDeclaringClass()), (new jMemberOps(jmember)).javaFlags());
      }

      private Symbols.Symbol sOwner(final TypeVariable jtvar) {
         return this.genericDeclarationToScala(jtvar.getGenericDeclaration());
      }

      private Symbols.Symbol lookup(final Symbols.Symbol clazz, final String jname) {
         Symbols.Symbol var10000 = clazz.info().decl((Names.Name)((Names)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).newTermName(jname));
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol orElse_this = var10000;
            return orElse_this != orElse_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? orElse_this : $anonfun$lookup$1(this, clazz, jname);
         }
      }

      public Symbols.MethodSymbol methodToScala(final Method jmeth) {
         return (Symbols.MethodSymbol)this.toScala(this.methodCache, jmeth, (x$12, x$13) -> x$12.methodToScala1(x$13), this.methHasJavaClass());
      }

      private Symbols.MethodSymbol methodToScala1(final Method jmeth) {
         Class jOwner = jmeth.getDeclaringClass();
         Symbols.ClassSymbol preOwner = this.classToScala(jOwner);
         Symbols.Symbol owner = this.followStatic(preOwner, (new jMemberOps(jmeth)).javaFlags());
         Symbols.Symbol var10000 = this.lookup(owner, jmeth.getName()).suchThat((x$14) -> BoxesRunTime.boxToBoolean($anonfun$methodToScala1$1(this, jmeth, x$14)));
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol orElse_this = var10000;
            var10000 = (Symbols.Symbol)(orElse_this != orElse_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? orElse_this : this.scala$reflect$runtime$JavaMirrors$JavaMirror$$jmethodAsScala(jmeth));
            orElse_this = null;
            return (Symbols.MethodSymbol)var10000.asMethod();
         }
      }

      public Symbols.MethodSymbol constructorToScala(final Constructor jconstr) {
         return (Symbols.MethodSymbol)this.toScala(this.constructorCache, jconstr, (x$15, x$16) -> x$15.constructorToScala1(x$16), this.constrHasJavaClass());
      }

      private Symbols.MethodSymbol constructorToScala1(final Constructor jconstr) {
         Symbols.Symbol owner = this.followStatic(this.classToScala(jconstr.getDeclaringClass()), (new jMemberOps(jconstr)).javaFlags());
         Symbols.Symbol var10000 = this.lookup(owner, jconstr.getName()).suchThat((x$17) -> BoxesRunTime.boxToBoolean($anonfun$constructorToScala1$1(this, jconstr, x$17)));
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol orElse_this = var10000;
            var10000 = (Symbols.Symbol)(orElse_this != orElse_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? orElse_this : this.scala$reflect$runtime$JavaMirrors$JavaMirror$$jconstrAsScala(jconstr));
            orElse_this = null;
            return (Symbols.MethodSymbol)var10000.asMethod();
         }
      }

      public Symbols.ModuleSymbol packageToScala(final Package jpkg) {
         return (Symbols.ModuleSymbol)this.packageCache.toScala(jpkg, () -> this.scala$reflect$runtime$JavaMirrors$$makeScalaPackage(jpkg.getName()));
      }

      public Symbols.ModuleSymbol packageNameToScala(final String fullname) {
         String var2 = "";
         if (fullname != null) {
            if (fullname.equals(var2)) {
               return this.EmptyPackage();
            }
         }

         Package jpkg = Package.getPackage(fullname);
         return jpkg != null ? this.packageToScala(jpkg) : this.scala$reflect$runtime$JavaMirrors$$makeScalaPackage(fullname);
      }

      public Symbols.ModuleSymbol scala$reflect$runtime$JavaMirrors$$makeScalaPackage(final String fullname) {
         String var2 = "";
         if (fullname != null) {
            if (fullname.equals(var2)) {
               return this.EmptyPackage();
            }
         }

         SymbolTable var10000 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
         if (var10000 == null) {
            throw null;
         } else {
            Gil gilSynchronized_this = var10000;
            if (gilSynchronized_this.isCompilerUniverse()) {
               return $anonfun$scala$reflect$runtime$JavaMirrors$$makeScalaPackage$1(this, fullname);
            } else {
               try {
                  gilSynchronized_this.scala$reflect$runtime$Gil$$gil().lock();
                  var7 = $anonfun$scala$reflect$runtime$JavaMirrors$$makeScalaPackage$1(this, fullname);
               } finally {
                  gilSynchronized_this.scala$reflect$runtime$Gil$$gil().unlock();
               }

               return var7;
            }
         }
      }

      private Names.TypeName scalaSimpleName(final Class jclazz) {
         Symbols.Symbol owner = this.sOwner(jclazz);
         Class enclosingClass = jclazz.getEnclosingClass();
         String var7 = enclosingClass != null ? enclosingClass.getName() : "";
         if (owner.isModuleClass() && !owner.isPackageClass() && !var7.endsWith("$")) {
            var7 = (new StringBuilder(1)).append(var7).append("$").toString();
         }

         scala.reflect.internal.SymbolTable var10000 = (scala.reflect.internal.SymbolTable)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
         boolean assert_assertion = jclazz.getName().startsWith(var7);
         if (var10000 == null) {
            throw null;
         } else {
            scala.reflect.internal.SymbolTable assert_this = var10000;
            if (!assert_assertion) {
               throw assert_this.throwAssertionError((new StringBuilder(27)).append("Class name ").append(jclazz.getName()).append(" missing prefix ").append(var7).toString());
            } else {
               assert_this = null;
               String name = jclazz.getName().substring(var7.length());
               name = name.substring(name.lastIndexOf(".") + 1);
               return ((Names)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).newTypeName(name);
            }
         }
      }

      public Symbols.ClassSymbol classToScala(final Class jclazz) {
         return (Symbols.ClassSymbol)this.toScala(this.classCache, jclazz, (x$19, x$20) -> x$19.classToScala1(x$20), this.classHasJavaClass());
      }

      private Symbols.ClassSymbol classToScala1(final Class jclazz) {
         Names.TypeName jname = ((Names)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).newTypeName(jclazz.getName());
         Names.TypeName var3 = ((StdNames)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).fulltpnme().RuntimeNothing();
         if (jname == null) {
            if (var3 == null) {
               return ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().NothingClass();
            }
         } else if (jname.equals(var3)) {
            return ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().NothingClass();
         }

         Names.TypeName var4 = ((StdNames)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).fulltpnme().RuntimeNull();
         if (jname == null) {
            if (var4 == null) {
               return ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().NullClass();
            }
         } else if (jname.equals(var4)) {
            return ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().NullClass();
         }

         Symbols.Symbol owner = this.sOwner(jclazz);
         Names.TypeName simpleName = this.scalaSimpleName(jclazz);
         Object var10000;
         if (jclazz.isMemberClass()) {
            var10000 = this.lookupClass$1(owner, simpleName);
         } else if (this.RichClass(jclazz).isLocalClass0()) {
            Symbols.Symbol var15 = this.lookupClass$1(owner, simpleName);
            if (var15 == null) {
               throw null;
            }

            Symbols.Symbol orElse_this = var15;
            var10000 = orElse_this != orElse_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? orElse_this : this.scala$reflect$runtime$JavaMirrors$JavaMirror$$jclassAsScala(jclazz);
            orElse_this = null;
         } else if (jclazz.isArray()) {
            var10000 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ArrayClass();
         } else {
            Symbols.Symbol var16 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().javaTypeToValueClass(jclazz);
            if (var16 == null) {
               throw null;
            }

            Symbols.Symbol orElse_this = var16;
            var10000 = orElse_this != orElse_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? orElse_this : $anonfun$classToScala1$4(this, owner, simpleName);
            orElse_this = null;
         }

         Symbols.Symbol cls = (Symbols.Symbol)var10000;
         scala.reflect.internal.SymbolTable var17 = (scala.reflect.internal.SymbolTable)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
         boolean assert_assertion = cls.isType();
         if (var17 == null) {
            throw null;
         } else {
            scala.reflect.internal.SymbolTable assert_this = var17;
            if (!assert_assertion) {
               throw assert_this.throwAssertionError($anonfun$classToScala1$5(this, cls, jclazz, owner, simpleName));
            } else {
               assert_this = null;
               return (Symbols.ClassSymbol)cls.asClass();
            }
         }
      }

      public Symbols.TypeSymbol typeParamToScala(final TypeVariable jparam) {
         return (Symbols.TypeSymbol)this.toScala(this.tparamCache, jparam, (x$22, x$23) -> x$22.typeParamToScala1(x$23), this.tparamHasJavaClass());
      }

      private Symbols.TypeSymbol typeParamToScala1(final TypeVariable jparam) {
         Types.Type var2 = this.genericDeclarationToScala(jparam.getGenericDeclaration()).info();
         if (!(var2 instanceof Types.PolyType)) {
            throw new MatchError(var2);
         } else {
            List tparams = ((Types.PolyType)var2).typeParams();
            if (tparams == null) {
               throw null;
            } else {
               List find_these = tparams;

               Object var10000;
               while(true) {
                  if (find_these.isEmpty()) {
                     var10000 = scala.None..MODULE$;
                     break;
                  }

                  Symbols.Symbol var5 = (Symbols.Symbol)find_these.head();
                  if ($anonfun$typeParamToScala1$1(jparam, var5)) {
                     var10000 = new Some(find_these.head());
                     break;
                  }

                  find_these = (List)find_these.tail();
               }

               Object var6 = null;
               return (Symbols.TypeSymbol)((scala.reflect.api.Symbols.SymbolApi)((Option)var10000).get()).asType();
            }
         }
      }

      public Symbols.Symbol genericDeclarationToScala(final GenericDeclaration jdecl) {
         if (jdecl instanceof Class) {
            Class var2 = (Class)jdecl;
            return this.classToScala(var2);
         } else if (jdecl instanceof Method) {
            Method var3 = (Method)jdecl;
            return this.methodToScala(var3);
         } else if (jdecl instanceof Constructor) {
            Constructor var4 = (Constructor)jdecl;
            return this.constructorToScala(var4);
         } else {
            throw new MatchError(jdecl);
         }
      }

      public Symbols.Symbol reflectMemberToScala(final Member m) {
         if (m instanceof GenericDeclaration) {
            return this.genericDeclarationToScala((GenericDeclaration)m);
         } else if (m instanceof Field) {
            Field var2 = (Field)m;
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$$jfieldAsScala(var2);
         } else {
            throw new MatchError(m);
         }
      }

      private Tuple2 targsToScala(final Symbols.Symbol owner, final List args) {
         ListBuffer tparams = new ListBuffer();
         Tuple2 var10000 = new Tuple2;
         if (args == null) {
            throw null;
         } else {
            Object var10002;
            if (args == scala.collection.immutable.Nil..MODULE$) {
               var10002 = scala.collection.immutable.Nil..MODULE$;
            } else {
               Type var8 = (Type)args.head();
               scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon($anonfun$targsToScala$3(this, owner, tparams, var8), scala.collection.immutable.Nil..MODULE$);
               scala.collection.immutable..colon.colon map_t = map_h;

               for(List map_rest = (List)args.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                  var8 = (Type)map_rest.head();
                  scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon($anonfun$targsToScala$3(this, owner, tparams, var8), scala.collection.immutable.Nil..MODULE$);
                  map_t.next_$eq(map_nx);
                  map_t = map_nx;
               }

               Statics.releaseFence();
               var10002 = map_h;
            }

            Object var9 = null;
            Object var10 = null;
            Object var11 = null;
            Object var12 = null;
            var10000.<init>(var10002, tparams.toList());
            return var10000;
         }
      }

      public Types.Type typeToScala(final Type jtpe) {
         if (jtpe instanceof Class) {
            Class var2 = (Class)jtpe;
            if (var2.isArray()) {
               return ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().arrayType(this.typeToScala(var2.getComponentType()));
            } else {
               Symbols.ClassSymbol clazz = this.classToScala(var2);
               Types.Type var4 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().rawToExistential().apply(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().typeRef(clazz.owner().thisType(), clazz, scala.collection.immutable.Nil..MODULE$));
               Types.Type var10000 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ObjectTpe();
               if (var10000 == null) {
                  if (var4 == null) {
                     return ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ObjectTpeJava();
                  }
               } else if (var10000.equals(var4)) {
                  return ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ObjectTpeJava();
               }

               return var4;
            }
         } else if (!(jtpe instanceof ParameterizedType)) {
            if (jtpe instanceof GenericArrayType) {
               GenericArrayType var13 = (GenericArrayType)jtpe;
               Types.Type elemtp = this.typeToScala(var13.getGenericComponentType());
               if (elemtp.typeSymbol().isAbstractType() && elemtp.upperBound().$eq$colon$eq(((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ObjectTpe())) {
                  elemtp = this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().intersectionType(new scala.collection.immutable..colon.colon(elemtp, new scala.collection.immutable..colon.colon(((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ObjectTpe(), scala.collection.immutable.Nil..MODULE$)));
               }

               return ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().arrayType(elemtp);
            } else if (jtpe instanceof TypeVariable) {
               TypeVariable var15 = (TypeVariable)jtpe;
               Symbols.TypeSymbol tparam = this.typeParamToScala(var15);
               return this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().typeRef(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoPrefix(), tparam, scala.collection.immutable.Nil..MODULE$);
            } else {
               throw new MatchError(jtpe);
            }
         } else {
            ParameterizedType var5 = (ParameterizedType)jtpe;
            Class jcls = (Class)var5.getRawType();
            Symbols.ClassSymbol sym = this.classToScala(jcls);
            Types.Type pre = !Modifier.isStatic(jcls.getModifiers()) && var5.getOwnerType() != null ? this.typeToScala(var5.getOwnerType()) : sym.owner().thisType();
            Type[] args0 = var5.getActualTypeArguments();
            Symbols.Symbol var10001 = pre.typeSymbol();
            scala.collection.mutable.ArraySeq.ofRef var10002 = scala.Predef..MODULE$.wrapRefArray(args0);
            if (var10002 == null) {
               throw null;
            } else {
               Tuple2 var10 = this.targsToScala(var10001, IterableOnceOps.toList$(var10002));
               if (var10 != null) {
                  List args = (List)var10._1();
                  List bounds = (List)var10._2();
                  return this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().newExistentialType(bounds, this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().typeRef(pre, sym, args));
               } else {
                  throw new MatchError((Object)null);
               }
            }
         }
      }

      public Symbols.ClassSymbol scala$reflect$runtime$JavaMirrors$JavaMirror$$jclassAsScala(final Class jclazz) {
         return (Symbols.ClassSymbol)this.toScala(this.classCache, jclazz, (x$26, x$27) -> x$26.jclassAsScala1(x$27), this.classHasJavaClass());
      }

      private Symbols.ClassSymbol jclassAsScala1(final Class jclazz) {
         Symbols.Symbol owner = this.sOwner(jclazz);
         Names.TypeName name = this.scalaSimpleName(jclazz);
         Function2 completer = (clazz, module) -> this.new FromJavaClassCompleter(clazz, module, jclazz);
         return (Symbols.ClassSymbol)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().initAndEnterClassAndModule(owner, name, completer)._1();
      }

      public Symbols.TermSymbol scala$reflect$runtime$JavaMirrors$JavaMirror$$jfieldAsScala(final Field jfield) {
         return (Symbols.TermSymbol)this.toScala(this.fieldCache, jfield, (x$28, x$29) -> x$28.jfieldAsScala1(x$29), this.fieldHasJavaClass());
      }

      private Symbols.TermSymbol jfieldAsScala1(final Field jfield) {
         Symbols.TermSymbol var10000 = this.sOwner((Member)jfield);
         Names.TermName var10001 = ((Names)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).newTermName(jfield.getName());
         NoPosition$ var10002 = ((Positions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).NoPosition();
         long newValue_newFlags = (new jMemberOps(jfield)).scalaFlags();
         NoPosition$ newValue_pos = var10002;
         Names.TermName newValue_name = var10001;
         if (var10000 == null) {
            throw null;
         } else {
            var10000 = ((Symbols.Symbol)var10000).newTermSymbol(newValue_name, newValue_pos, newValue_newFlags);
            newValue_name = null;
            newValue_pos = null;
            Symbols.TermSymbol field = (Symbols.TermSymbol)var10000.setInfo(this.typeToScala(jfield.getGenericType()));
            this.fieldCache.enter(jfield, field);
            ((PrivateWithin)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).propagatePackageBoundary((Member)jfield, scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.Symbol[]{field}));
            this.scala$reflect$runtime$JavaMirrors$JavaMirror$$copyAnnotations(field, jfield);
            this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().markAllCompleted(field);
            return field;
         }
      }

      private Symbols.Symbol setMethType(final Symbols.Symbol meth, final List tparams, final List params, final Types.Type restpe) {
         return meth.setInfo(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().GenPolyType().apply(tparams, (scala.reflect.internal.SymbolTable)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().new MethodType(params, restpe)));
      }

      public Symbols.MethodSymbol scala$reflect$runtime$JavaMirrors$JavaMirror$$jmethodAsScala(final Method jmeth) {
         return (Symbols.MethodSymbol)this.toScala(this.methodCache, jmeth, (x$30, x$31) -> x$30.jmethodAsScala1(x$31), this.methHasJavaClass());
      }

      private Symbols.MethodSymbol jmethodAsScala1(final Method jmeth) {
         Symbols.Symbol clazz = this.sOwner((Member)jmeth);
         Names.TermName var10001 = ((Names)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).newTermName(jmeth.getName());
         NoPosition$ var10002 = ((Positions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).NoPosition();
         long newMethod_newFlags = (new jMemberOps(jmeth)).scalaFlags();
         NoPosition$ newMethod_pos = var10002;
         Names.TermName newMethod_name = var10001;
         if (clazz == null) {
            throw null;
         } else {
            Symbols.MethodSymbol var10000 = clazz.createMethodSymbol(newMethod_name, newMethod_pos, 64L | newMethod_newFlags);
            newMethod_name = null;
            newMethod_pos = null;
            Symbols.MethodSymbol meth = var10000;
            this.methodCache.enter(jmeth, meth);
            scala.collection.mutable.ArraySeq.ofRef var27 = scala.Predef..MODULE$.wrapRefArray(jmeth.getTypeParameters());
            if (var27 == null) {
               throw null;
            } else {
               List var28 = IterableOnceOps.toList$(var27);
               if (var28 == null) {
                  throw null;
               } else {
                  List map_this = var28;
                  Object var29;
                  if (map_this == scala.collection.immutable.Nil..MODULE$) {
                     var29 = scala.collection.immutable.Nil..MODULE$;
                  } else {
                     TypeVariable var17 = (TypeVariable)map_this.head();
                     scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$createTypeParameter(var17), scala.collection.immutable.Nil..MODULE$);
                     scala.collection.immutable..colon.colon map_t = map_h;

                     for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                        var17 = (TypeVariable)map_rest.head();
                        scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$createTypeParameter(var17), scala.collection.immutable.Nil..MODULE$);
                        map_t.next_$eq(map_nx);
                        map_t = map_nx;
                     }

                     Statics.releaseFence();
                     var29 = map_h;
                  }

                  Object var18 = null;
                  Object var19 = null;
                  Object var20 = null;
                  Object var21 = null;
                  Object var22 = null;
                  List tparams = (List)var29;
                  scala.collection.mutable.ArraySeq.ofRef var30 = scala.Predef..MODULE$.wrapRefArray(jmeth.getParameters());
                  if (var30 == null) {
                     throw null;
                  } else {
                     List params = this.jparamsAsScala(meth, IterableOnceOps.toList$(var30));
                     Types.Type resulttpe = this.typeToScala(jmeth.getGenericReturnType());
                     this.setMethType(meth, tparams, params, resulttpe);
                     ((PrivateWithin)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).propagatePackageBoundary((new jMemberOps(jmeth)).javaFlags(), scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.Symbol[]{meth}));
                     this.scala$reflect$runtime$JavaMirrors$JavaMirror$$copyAnnotations(meth, jmeth);
                     if (JavaAccFlags$.MODULE$.has$extension((new jMemberOps(jmeth)).javaFlags(), 128)) {
                        meth.modifyInfo((tp) -> ((scala.reflect.internal.SymbolTable)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).arrayToRepeated(tp));
                     }

                     if (jmeth.getDefaultValue() != null) {
                        Symbols.ClassSymbol addAnnotation_sym = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().AnnotationDefaultAttr();
                        if (meth == null) {
                           throw null;
                        }

                        ((Symbols.Symbol)meth).addAnnotation((Symbols.Symbol)addAnnotation_sym, (List)scala.collection.immutable.Nil..MODULE$);
                        addAnnotation_sym = null;
                     }

                     this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().markAllCompleted(meth);
                     return meth;
                  }
               }
            }
         }
      }

      public Symbols.MethodSymbol scala$reflect$runtime$JavaMirrors$JavaMirror$$jconstrAsScala(final Constructor jconstr) {
         return (Symbols.MethodSymbol)this.toScala(this.constructorCache, jconstr, (x$32, x$33) -> x$32.jconstrAsScala1(x$33), this.constrHasJavaClass());
      }

      private Symbols.MethodSymbol jconstrAsScala1(final Constructor jconstr) {
         Symbols.Symbol clazz = this.sOwner((Member)jconstr);
         Symbols.MethodSymbol constr = clazz.newConstructor(((Positions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).NoPosition(), (new jMemberOps(jconstr)).scalaFlags());
         this.constructorCache.enter(jconstr, constr);
         scala.collection.mutable.ArraySeq.ofRef var10000 = scala.Predef..MODULE$.wrapRefArray(jconstr.getTypeParameters());
         if (var10000 == null) {
            throw null;
         } else {
            List var18 = IterableOnceOps.toList$(var10000);
            if (var18 == null) {
               throw null;
            } else {
               List map_this = var18;
               Object var19;
               if (map_this == scala.collection.immutable.Nil..MODULE$) {
                  var19 = scala.collection.immutable.Nil..MODULE$;
               } else {
                  TypeVariable var11 = (TypeVariable)map_this.head();
                  scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$createTypeParameter(var11), scala.collection.immutable.Nil..MODULE$);
                  scala.collection.immutable..colon.colon map_t = map_h;

                  for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                     var11 = (TypeVariable)map_rest.head();
                     scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$createTypeParameter(var11), scala.collection.immutable.Nil..MODULE$);
                     map_t.next_$eq(map_nx);
                     map_t = map_nx;
                  }

                  Statics.releaseFence();
                  var19 = map_h;
               }

               Object var12 = null;
               Object var13 = null;
               Object var14 = null;
               Object var15 = null;
               Object var16 = null;
               List tparams = (List)var19;
               scala.collection.mutable.ArraySeq.ofRef var10002 = scala.Predef..MODULE$.wrapRefArray(jconstr.getParameters());
               if (var10002 == null) {
                  throw null;
               } else {
                  List params = this.jparamsAsScala(constr, IterableOnceOps.toList$(var10002));
                  this.setMethType(constr, tparams, params, clazz.tpe_$times());
                  ((PrivateWithin)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).propagatePackageBoundary((new jMemberOps(jconstr)).javaFlags(), scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.Symbol[]{constr}));
                  this.scala$reflect$runtime$JavaMirrors$JavaMirror$$copyAnnotations(constr, jconstr);
                  if (JavaAccFlags$.MODULE$.has$extension((new jMemberOps(jconstr)).javaFlags(), 128)) {
                     constr.modifyInfo((tp) -> ((scala.reflect.internal.SymbolTable)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).arrayToRepeated(tp));
                  }

                  this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().markAllCompleted(constr);
                  return constr;
               }
            }
         }
      }

      private List jparamsAsScala(final Symbols.MethodSymbol meth, final List params) {
         if (params == null) {
            throw null;
         } else {
            List var10000 = (List)StrictOptimizedIterableOps.zipWithIndex$(params);
            if (var10000 == null) {
               throw null;
            } else {
               List map_this = var10000;
               if (map_this == scala.collection.immutable.Nil..MODULE$) {
                  return scala.collection.immutable.Nil..MODULE$;
               } else {
                  Tuple2 var8 = (Tuple2)map_this.head();
                  scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon($anonfun$jparamsAsScala$1(this, meth, var8), scala.collection.immutable.Nil..MODULE$);
                  scala.collection.immutable..colon.colon map_t = map_h;

                  for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                     var8 = (Tuple2)map_rest.head();
                     scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon($anonfun$jparamsAsScala$1(this, meth, var8), scala.collection.immutable.Nil..MODULE$);
                     map_t.next_$eq(map_nx);
                     map_t = map_nx;
                  }

                  Statics.releaseFence();
                  return map_h;
               }
            }
         }
      }

      public Class classToJava(final Symbols.ClassSymbol clazz) throws ClassNotFoundException {
         return (Class)this.classCache.toJava(clazz, () -> {
            if (clazz.isPrimitiveValueClass()) {
               return ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().valueClassToJavaType(clazz);
            } else if (clazz.equals(((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ArrayClass())) {
               throw noClass$1(clazz);
            } else if (clazz.isTopLevel()) {
               return this.javaClass(clazz.javaClassName());
            } else if (clazz.owner().isClass()) {
               boolean childOfClass = !clazz.owner().isModuleClass();
               boolean childOfTopLevel = clazz.owner().isTopLevel();
               boolean childOfTopLevelObject = clazz.owner().isModuleClass() && childOfTopLevel;
               Class ownerClazz = this.classToJava((Symbols.ClassSymbol)clazz.owner().asClass());
               if (childOfTopLevelObject) {
                  ownerClazz = Class.forName(scala.collection.StringOps..MODULE$.stripSuffix$extension(ownerClazz.getName(), "$"), false, ownerClazz.getClassLoader());
               }

               Class[] ownerChildren = ownerClazz.getDeclaredClasses();
               String var13 = ownerClazz.getName();
               if (childOfClass || childOfTopLevel) {
                  var13 = (new StringBuilder(1)).append(var13).append("$").toString();
               }

               String var10000;
               label81: {
                  var13 = (new StringBuilder(0)).append(var13).append(clazz.name()).toString();
                  if (var13 != null) {
                     Option var7 = this.PackageAndClassPattern.unapplySeq(var13);
                     if (!var7.isEmpty() && var7.get() != null && ((List)var7.get()).lengthCompare(2) == 0) {
                        String pack = (String)((LinearSeqOps)var7.get()).apply(0);
                        String clazzName = (String)((LinearSeqOps)var7.get()).apply(1);
                        var10000 = (new StringBuilder(0)).append(pack).append(((StdNames)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).compactifyName(clazzName)).toString();
                        break label81;
                     }
                  }

                  var10000 = ((StdNames)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).compactifyName(var13);
               }

               var13 = var10000;
               if (clazz.isModuleClass()) {
                  var13 = (new StringBuilder(1)).append(var13).append("$").toString();
               }

               int find$extension_indexWhere$extension_i = 0;

               while(true) {
                  if (find$extension_indexWhere$extension_i >= ownerChildren.length) {
                     var18 = -1;
                     break;
                  }

                  label70: {
                     label69: {
                        var10000 = ownerChildren[find$extension_indexWhere$extension_i].getName();
                        if (var10000 == null) {
                           if (var13 == null) {
                              break label69;
                           }
                        } else if (var10000.equals(var13)) {
                           break label69;
                        }

                        var17 = false;
                        break label70;
                     }

                     var17 = true;
                  }

                  if (var17) {
                     var18 = find$extension_indexWhere$extension_i;
                     break;
                  }

                  ++find$extension_indexWhere$extension_i;
               }

               int find$extension_idx = var18;
               Option getOrElse_this = (Option)(find$extension_idx == -1 ? scala.None..MODULE$ : new Some(ownerChildren[find$extension_idx]));
               if (getOrElse_this.isEmpty()) {
                  throw noClass$1(clazz);
               } else {
                  return (Class)getOrElse_this.get();
               }
            } else {
               throw noClass$1(clazz);
            }
         });
      }

      private String expandedName(final Symbols.Symbol sym) {
         return sym.isPrivate() ? ((StdNames)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).nme().expandedName(sym.name().toTermName(), sym.owner()).toString() : sym.name().toString();
      }

      public Field fieldToJava(final Symbols.TermSymbol fld) {
         return (Field)this.fieldCache.toJava(fld, () -> {
            Class jclazz = this.classToJava((Symbols.ClassSymbol)fld.owner().asClass());
            String jname = fld.name().dropLocal().toString();

            try {
               return jclazz.getDeclaredField(jname);
            } catch (NoSuchFieldException var4) {
               return jclazz.getDeclaredField(this.expandedName(fld));
            }
         });
      }

      public Method methodToJava(final Symbols.MethodSymbol meth) {
         return (Method)this.methodCache.toJava(meth, () -> {
            Class jclazz = this.classToJava((Symbols.ClassSymbol)meth.owner().asClass());
            List var10000 = ((Transforms)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).transformedType((Symbols.Symbol)meth).paramTypes();
            if (var10000 == null) {
               throw null;
            } else {
               List map_this = var10000;
               Object var18;
               if (map_this == scala.collection.immutable.Nil..MODULE$) {
                  var18 = scala.collection.immutable.Nil..MODULE$;
               } else {
                  Types.Type var10 = (Types.Type)map_this.head();
                  scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon(this.typeToJavaClass(var10), scala.collection.immutable.Nil..MODULE$);
                  scala.collection.immutable..colon.colon map_t = map_h;

                  for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                     var10 = (Types.Type)map_rest.head();
                     scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon(this.typeToJavaClass(var10), scala.collection.immutable.Nil..MODULE$);
                     map_t.next_$eq(map_nx);
                     map_t = map_nx;
                  }

                  Statics.releaseFence();
                  var18 = map_h;
               }

               Object var12 = null;
               Object var13 = null;
               Object var14 = null;
               Object var15 = null;
               Object var16 = null;
               List paramClasses = (List)var18;
               String jname = meth.name().dropLocal().toString();

               try {
                  return jclazz.getDeclaredMethod(jname, (Class[])paramClasses.toArray(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().RuntimeClassTag()));
               } catch (NoSuchMethodException var11) {
                  return jclazz.getDeclaredMethod(this.expandedName(meth), (Class[])paramClasses.toArray(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().RuntimeClassTag()));
               }
            }
         });
      }

      public Constructor constructorToJava(final Symbols.MethodSymbol constr) {
         return (Constructor)this.constructorCache.toJava(constr, () -> {
            Class jclazz = this.classToJava((Symbols.ClassSymbol)constr.owner().asClass());
            List var10000 = ((Transforms)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).transformedType((Symbols.Symbol)constr).paramTypes();
            if (var10000 == null) {
               throw null;
            } else {
               List map_this = var10000;
               Object var18;
               if (map_this == scala.collection.immutable.Nil..MODULE$) {
                  var18 = scala.collection.immutable.Nil..MODULE$;
               } else {
                  Types.Type var11 = (Types.Type)map_this.head();
                  scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon(this.typeToJavaClass(var11), scala.collection.immutable.Nil..MODULE$);
                  scala.collection.immutable..colon.colon map_t = map_h;

                  for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                     var11 = (Types.Type)map_rest.head();
                     scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon(this.typeToJavaClass(var11), scala.collection.immutable.Nil..MODULE$);
                     map_t.next_$eq(map_nx);
                     map_t = map_nx;
                  }

                  Statics.releaseFence();
                  var18 = map_h;
               }

               Object var12 = null;
               Object var13 = null;
               Object var14 = null;
               Object var15 = null;
               Object var16 = null;
               List paramClasses = (List)var18;
               if (!constr.owner().owner().isStaticOwner()) {
                  Class var5 = jclazz.getEnclosingClass();
                  var18 = (List)paramClasses.prepended(var5);
               } else {
                  var18 = paramClasses;
               }

               List effectiveParamClasses = (List)var18;
               return jclazz.getDeclaredConstructor((Class[])effectiveParamClasses.toArray(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().RuntimeClassTag()));
            }
         });
      }

      public Class typeToJavaClass(final Types.Type tpe) {
         boolean var2 = false;
         Types.TypeRef var3 = null;
         if (tpe instanceof Types.ExistentialType) {
            Types.Type rtpe = ((Types.ExistentialType)tpe).underlying();
            return this.typeToJavaClass(rtpe);
         } else {
            if (tpe instanceof Types.TypeRef) {
               label48: {
                  var2 = true;
                  var3 = (Types.TypeRef)tpe;
                  Symbols.Symbol var5 = var3.sym();
                  List var6 = var3.args();
                  Symbols.ClassSymbol var10000 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ArrayClass();
                  if (var10000 == null) {
                     if (var5 != null) {
                        break label48;
                     }
                  } else if (!var10000.equals(var5)) {
                     break label48;
                  }

                  if (var6 != null) {
                     List var17 = scala.package..MODULE$.List();
                     if (var17 == null) {
                        throw null;
                     }

                     List unapplySeq_this = var17;
                     SeqOps var18 = SeqFactory.unapplySeq$(unapplySeq_this, var6);
                     Object var16 = null;
                     SeqOps var7 = var18;
                     SeqFactory.UnapplySeqWrapper var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                     SeqFactory.UnapplySeqWrapper var10001 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                     new SeqFactory.UnapplySeqWrapper(var7);
                     var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                     var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                     int lengthCompare$extension_len = 1;
                     if (var7.lengthCompare(lengthCompare$extension_len) == 0) {
                        var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                        var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                        int apply$extension_i = 0;
                        Types.Type elemtpe = (Types.Type)var7.apply(apply$extension_i);
                        return scala.runtime.ScalaRunTime..MODULE$.arrayClass(this.typeToJavaClass(elemtpe));
                     }
                  }
               }
            }

            if (var2) {
               Symbols.Symbol sym = var3.sym();
               if (sym instanceof Symbols.ClassSymbol) {
                  Symbols.ClassSymbol var10 = (Symbols.ClassSymbol)sym;
                  if (var10 == null) {
                     throw null;
                  }

                  return this.classToJava(var10);
               }
            }

            if (var2 && var3.sym() instanceof Symbols.AliasTypeSymbol) {
               return this.typeToJavaClass(var3.dealias());
            } else {
               if (tpe instanceof Types.SingleType) {
                  Symbols.Symbol sym = ((Types.SingleType)tpe).sym();
                  if (sym instanceof Symbols.ModuleSymbol) {
                     Symbols.ModuleSymbol var12 = (Symbols.ModuleSymbol)sym;
                     return this.classToJava((Symbols.ClassSymbol)var12.moduleClass().asClass());
                  }
               }

               throw new NoClassDefFoundError((new StringBuilder(37)).append("no Java class corresponding to ").append(tpe).append(" found").toString());
            }
         }
      }

      // $FF: synthetic method
      public SymbolTable scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer() {
         return (SymbolTable)this.$outer;
      }

      // $FF: synthetic method
      public scala.reflect.api.JavaUniverse scala$reflect$api$JavaUniverse$JavaMirror$$$outer() {
         return this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
      }

      private final void typeTagCache$lzycompute$1() {
         synchronized(this){}

         try {
            if (this.typeTagCache$module == null) {
               this.typeTagCache$module = new typeTagCache$();
            }
         } catch (Throwable var2) {
            throw var2;
         }

      }

      private final void toAnnotArg$lzycompute$1() {
         synchronized(this){}

         try {
            if (this.toAnnotArg$module == null) {
               this.toAnnotArg$module = new toAnnotArg$();
            }
         } catch (Throwable var2) {
            throw var2;
         }

      }

      private final void JavaAnnotationProxy$lzycompute$1() {
         synchronized(this){}

         try {
            if (this.JavaAnnotationProxy$module == null) {
               this.JavaAnnotationProxy$module = new JavaAnnotationProxy$();
            }
         } catch (Throwable var2) {
            throw var2;
         }

      }

      private final void unpickler$lzycompute$1() {
         synchronized(this){}

         try {
            if (this.unpickler$module == null) {
               this.unpickler$module = new unpickler$();
            }
         } catch (Throwable var2) {
            throw var2;
         }

      }

      // $FF: synthetic method
      public static final boolean $anonfun$ensuringNotFree$1(final Symbols.Symbol x$5) {
         return x$5.isFreeType();
      }

      // $FF: synthetic method
      public static final Object $anonfun$checkMemberOf$1(final JavaMirror $this, final Symbols.ClassSymbol owner$1, final Symbols.Symbol sym$1) {
         if (!owner$1.info().baseClasses().contains(sym$1.owner())) {
            throw $this.ErrorNotMember(sym$1, owner$1);
         } else {
            return BoxedUnit.UNIT;
         }
      }

      // $FF: synthetic method
      public static final Object $anonfun$checkConstructorOf$1(final JavaMirror $this, final Symbols.ClassSymbol owner$2, final Symbols.Symbol sym$2) {
         if (!owner$2.info().decls().toList().contains(sym$2)) {
            throw $this.ErrorNotConstructor(sym$2, owner$2);
         } else {
            return BoxedUnit.UNIT;
         }
      }

      // $FF: synthetic method
      public static final boolean $anonfun$mkMethodMirror$1(final JavaMirror $this, final Symbols.Symbol p) {
         return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$$isByNameParam(p.info()) || $this.isValueClassParam(p.info());
      }

      // $FF: synthetic method
      public static final Class $anonfun$erasesTo$1(final JavaMirror $this, final Types.Type tpe) {
         return $this.runtimeClass(tpe);
      }

      // $FF: synthetic method
      public static final Class $anonfun$erasesTo$2(final JavaMirror $this, final Types.Type tpe) {
         return $this.runtimeClass(tpe);
      }

      private final void markAbsent$1(final Types.Type tpe, final Symbols.ClassSymbol clazz$2, final Symbols.ModuleSymbol module$1) {
         this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().setAllInfos(clazz$2, module$1, tpe);
      }

      private final Nothing handleError$1(final Exception ex, final Symbols.ClassSymbol clazz$2, final Symbols.ModuleSymbol module$1) {
         this.markAbsent$1(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().ErrorType(), clazz$2, module$1);
         MutableSettings.SettingsOps$ var10000 = MutableSettings.SettingsOps$.MODULE$;
         MutableSettings$ var10 = MutableSettings$.MODULE$;
         MutableSettings SettingsOps_settings = ((scala.reflect.internal.SymbolTable)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).settings();
         MutableSettings var11 = SettingsOps_settings;
         SettingsOps_settings = null;
         MutableSettings isDebug$extension_$this = var11;
         boolean var12 = StatisticsStatics.DEBUG_GETTER.invokeExact() && BoxesRunTime.unboxToBoolean(isDebug$extension_$this.debug().value());
         isDebug$extension_$this = null;
         if (var12) {
            ex.printStackTrace();
         }

         String msg = ex.getMessage();
         MissingRequirementError$ var13 = MissingRequirementError$.MODULE$;
         String signal_msg = (new StringBuilder(2)).append(msg == null ? (new StringBuilder(31)).append("reflection error while loading ").append(clazz$2.name()).toString() : (new StringBuilder(20)).append("error while loading ").append(clazz$2.name()).toString()).append(", ").append(msg).toString();
         throw new MissingRequirementError(signal_msg);
      }

      // $FF: synthetic method
      public static final boolean $anonfun$unpickleClass$2(final Class annotClass$1, final Annotation x$8) {
         Class var10000 = x$8.annotationType();
         if (var10000 == null) {
            if (annotClass$1 == null) {
               return true;
            }
         } else if (var10000.equals(annotClass$1)) {
            return true;
         }

         return false;
      }

      // $FF: synthetic method
      public static final boolean $anonfun$unpickleClass$3(final String name$1, final Annotation x$9) {
         String var10000 = x$9.annotationType().getName();
         if (var10000 == null) {
            if (name$1 == null) {
               return true;
            }
         } else if (var10000.equals(name$1)) {
            return true;
         }

         return false;
      }

      // $FF: synthetic method
      public static final Option $anonfun$unpickleClass$1(final JavaMirror $this, final Class jclazz$1, final String name$1, final Class annotClass) {
         Annotation[] anns = jclazz$1.getAnnotations();
         int find$extension_indexWhere$extension_i = 0;

         int var10000;
         while(true) {
            if (find$extension_indexWhere$extension_i >= anns.length) {
               var10000 = -1;
               break;
            }

            Annotation var10 = anns[find$extension_indexWhere$extension_i];
            if ($anonfun$unpickleClass$2(annotClass, var10)) {
               var10000 = find$extension_indexWhere$extension_i;
               break;
            }

            ++find$extension_indexWhere$extension_i;
         }

         int find$extension_idx = var10000;
         Option result = (Option)(find$extension_idx == -1 ? scala.None..MODULE$ : new Some(anns[find$extension_idx]));
         if (result.isEmpty()) {
            int exists$extension_indexWhere$extension_i = 0;

            while(true) {
               if (exists$extension_indexWhere$extension_i >= anns.length) {
                  var10000 = -1;
                  break;
               }

               Annotation var11 = anns[exists$extension_indexWhere$extension_i];
               if ($anonfun$unpickleClass$3(name$1, var11)) {
                  var10000 = exists$extension_indexWhere$extension_i;
                  break;
               }

               ++exists$extension_indexWhere$extension_i;
            }

            if (var10000 >= 0) {
               scala.reflect.internal.util.package$ var10002 = scala.reflect.internal.util.package$.MODULE$;
               StringContext StringContextStripMarginOps_stringContext = new StringContext(scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new String[]{"Mirror classloader mismatch: ", " (loaded by ", ")\n                  |is unrelated to the mirror's classloader: (", ")"}));
               scala.reflect.internal.util.package.StringContextStripMarginOps var14 = new scala.reflect.internal.util.package.StringContextStripMarginOps(StringContextStripMarginOps_stringContext);
               Object var12 = null;
               throw new ClassNotFoundException(StripMarginInterpolator.sm$(var14, scala.runtime.ScalaRunTime..MODULE$.genericWrapArray(new Object[]{jclazz$1, ReflectionUtils$.MODULE$.show(jclazz$1.getClassLoader()), ReflectionUtils$.MODULE$.show($this.classLoader())})));
            }
         }

         return result;
      }

      private final Option loadAnnotation$1(final String name, final Class jclazz$1) {
         Option var10000 = this.tryJavaClass(name);
         if (var10000 == null) {
            throw null;
         } else {
            Option flatMap_this = var10000;
            if (flatMap_this.isEmpty()) {
               return scala.None..MODULE$;
            } else {
               Class var4 = (Class)flatMap_this.get();
               return $anonfun$unpickleClass$1(this, jclazz$1, name, var4);
            }
         }
      }

      // $FF: synthetic method
      public static final Object $anonfun$unpickleClass$4(final Annotation ssig) {
         return ssig.annotationType().getMethod("bytes").invoke(ssig);
      }

      private final Option loadBytes$1(final String name, final ClassTag evidence$7, final Class jclazz$1) {
         Option var10000 = this.loadAnnotation$1(name, jclazz$1);
         if (var10000 == null) {
            throw null;
         } else {
            Option map_this = var10000;
            return (Option)(map_this.isEmpty() ? scala.None..MODULE$ : new Some($anonfun$unpickleClass$4((Annotation)map_this.get())));
         }
      }

      // $FF: synthetic method
      public static final byte[] $anonfun$unpickleClass$7(final String x$10) {
         return x$10.getBytes(StandardCharsets.UTF_8);
      }

      // $FF: synthetic method
      public static final scala.collection.mutable.ArraySeq.ofByte $anonfun$unpickleClass$8(final byte[] xs) {
         return scala.Predef..MODULE$.wrapByteArray(xs);
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$copyAnnotations$2(final Symbols.Symbol sym$3, final AnnotationInfos.AnnotationInfo ann) {
         return sym$3.addAnnotation(ann);
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$followStatic$1(final Symbols.Symbol clazz$3) {
         return clazz$3;
      }

      private final boolean approximateMatch$1(final Symbols.Symbol sym, final String jstr) {
         return sym.name().string_$eq$eq(jstr) || sym.isPrivate() && ((StdNames)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).nme().expandedName(sym.name().toTermName(), sym.owner()).string_$eq$eq(jstr);
      }

      // $FF: synthetic method
      public static final boolean $anonfun$lookup$2(final JavaMirror $this, final String jname$1, final Symbols.Symbol x$11) {
         return $this.approximateMatch$1(x$11, jname$1);
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$lookup$1(final JavaMirror $this, final Symbols.Symbol clazz$4, final String jname$1) {
         List var3 = clazz$4.info().decls().iterator().filter((x$11) -> BoxesRunTime.boxToBoolean($anonfun$lookup$2($this, jname$1, x$11))).toList();
         if (var3 != null) {
            List var10000 = scala.package..MODULE$.List();
            if (var10000 == null) {
               throw null;
            }

            List unapplySeq_this = var10000;
            SeqOps var13 = SeqFactory.unapplySeq$(unapplySeq_this, var3);
            Object var11 = null;
            SeqOps var4 = var13;
            SeqFactory.UnapplySeqWrapper var14 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
            SeqFactory.UnapplySeqWrapper var10001 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
            new SeqFactory.UnapplySeqWrapper(var4);
            var14 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
            var14 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
            int lengthCompare$extension_len = 0;
            if (var4.lengthCompare(lengthCompare$extension_len) == 0) {
               return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoSymbol();
            }
         }

         if (var3 != null) {
            List var17 = scala.package..MODULE$.List();
            if (var17 == null) {
               throw null;
            }

            List unapplySeq_this = var17;
            SeqOps var18 = SeqFactory.unapplySeq$(unapplySeq_this, var3);
            Object var12 = null;
            SeqOps var5 = var18;
            SeqFactory.UnapplySeqWrapper var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
            SeqFactory.UnapplySeqWrapper var24 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
            new SeqFactory.UnapplySeqWrapper(var5);
            var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
            var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
            int lengthCompare$extension_len = 1;
            if (var5.lengthCompare(lengthCompare$extension_len) == 0) {
               var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
               var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
               int apply$extension_i = 0;
               return (Symbols.Symbol)var5.apply(apply$extension_i);
            }
         }

         Symbols.Symbol var25 = (Symbols.Symbol)var3.head();
         if (var25 == null) {
            throw null;
         } else {
            return clazz$4.newOverloaded(var25.tpe_$times().prefix(), var3);
         }
      }

      // $FF: synthetic method
      public static final boolean $anonfun$methodToScala1$1(final JavaMirror $this, final Method jmeth$1, final Symbols.Symbol x$14) {
         return $this.erasesTo(x$14, jmeth$1);
      }

      // $FF: synthetic method
      public static final Symbols.MethodSymbol $anonfun$methodToScala1$2(final JavaMirror $this, final Method jmeth$1) {
         return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$$jmethodAsScala(jmeth$1);
      }

      // $FF: synthetic method
      public static final boolean $anonfun$constructorToScala1$1(final JavaMirror $this, final Constructor jconstr$1, final Symbols.Symbol x$17) {
         return $this.erasesTo(x$17, jconstr$1);
      }

      // $FF: synthetic method
      public static final Symbols.MethodSymbol $anonfun$constructorToScala1$2(final JavaMirror $this, final Constructor jconstr$1) {
         return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$$jconstrAsScala(jconstr$1);
      }

      // $FF: synthetic method
      public static final boolean $anonfun$scala$reflect$runtime$JavaMirrors$$makeScalaPackage$2(final Symbols.Symbol x$18) {
         return x$18.hasPackageFlag();
      }

      // $FF: synthetic method
      public static final Symbols.ModuleSymbol $anonfun$scala$reflect$runtime$JavaMirrors$$makeScalaPackage$1(final JavaMirror $this, final String fullname$1) {
         int split = fullname$1.lastIndexOf(46);
         Symbols.Symbol owner = ((Symbols.ModuleSymbol)(split > 0 ? $this.packageNameToScala(scala.collection.StringOps..MODULE$.take$extension(fullname$1, split)) : $this.RootPackage())).moduleClass();
         Names.TermName name = (Names.TermName)((Names)$this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).TermName().apply(fullname$1).drop(split + 1);
         Symbols.Symbol opkg = owner.info().decl((Names.Name)name).filter((x$18) -> BoxesRunTime.boxToBoolean($anonfun$scala$reflect$runtime$JavaMirrors$$makeScalaPackage$2(x$18)));
         Symbols.NoSymbol var6 = $this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoSymbol();
         if (opkg == null) {
            if (var6 != null) {
               return (Symbols.ModuleSymbol)opkg.asModule();
            }
         } else if (!opkg.equals(var6)) {
            return (Symbols.ModuleSymbol)opkg.asModule();
         }

         Symbols.ModuleSymbol pkg = owner.newPackage(name, owner.newPackage$default$2(), 0L);
         pkg.moduleClass().setInfo($this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().new LazyPackageType());
         Symbols.Symbol var10001 = pkg.moduleClass();
         if (var10001 == null) {
            throw null;
         } else {
            pkg.setInfoAndEnter(var10001.tpe_$times());
            $this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().markFlagsCompleted(pkg, -1L);
            $this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().info(() -> (new StringBuilder(11)).append("made Scala ").append(pkg).toString());
            return pkg;
         }
      }

      // $FF: synthetic method
      public static final String $anonfun$scalaSimpleName$1(final Class jclazz$2, final ObjectRef prefix$1) {
         return (new StringBuilder(27)).append("Class name ").append(jclazz$2.getName()).append(" missing prefix ").append((String)prefix$1.elem).toString();
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$classToScala1$1(final JavaMirror $this, final Names.Name name$2, final Symbols.Symbol owner$3) {
         String startsWith_name = "$";
         if (name$2 == null) {
            throw null;
         } else {
            boolean var10000 = name$2.startsWith((String)startsWith_name, 0);
            Object var4 = null;
            return (Symbols.Symbol)(var10000 ? $this.coreLookup$1(name$2.drop(1), owner$3) : $this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoSymbol());
         }
      }

      private final Symbols.Symbol coreLookup$1(final Names.Name name, final Symbols.Symbol owner$3) {
         Symbols.Symbol var10000 = owner$3.info().decl(name);
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol orElse_this = var10000;
            return orElse_this != orElse_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? orElse_this : $anonfun$classToScala1$1(this, name, owner$3);
         }
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$classToScala1$2(final Symbols.Symbol x$21) {
         return x$21.moduleClass();
      }

      private final Symbols.Symbol lookupClass$1(final Symbols.Symbol owner$3, final Names.TypeName simpleName$1) {
         if (((StdNames)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).nme().isModuleName(simpleName$1)) {
            if (simpleName$1 == null) {
               throw null;
            } else {
               Symbols.Symbol var10000 = this.coreLookup$1(((Names.TypeName)((Names.Name)simpleName$1).stripSuffix("$")).toTermName(), owner$3);
               if (var10000 == null) {
                  throw null;
               } else {
                  Symbols.Symbol map_this = var10000;
                  return map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : map_this.moduleClass();
               }
            }
         } else {
            return this.coreLookup$1(simpleName$1, owner$3);
         }
      }

      // $FF: synthetic method
      public static final Symbols.ClassSymbol $anonfun$classToScala1$3(final JavaMirror $this, final Class jclazz$3) {
         return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$$jclassAsScala(jclazz$3);
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$classToScala1$4(final JavaMirror $this, final Symbols.Symbol owner$3, final Names.TypeName simpleName$1) {
         return $this.lookupClass$1(owner$3, simpleName$1);
      }

      // $FF: synthetic method
      public static final String $anonfun$classToScala1$5(final JavaMirror $this, final Symbols.Symbol cls$2, final Class jclazz$3, final Symbols.Symbol owner$3, final Names.TypeName simpleName$1) {
         StringBuilder var10000;
         String var10001;
         label23: {
            var10000 = new StringBuilder(45);
            Symbols.NoSymbol var5 = $this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoSymbol();
            if (cls$2 == null) {
               if (var5 != null) {
                  break label23;
               }
            } else if (!cls$2.equals(var5)) {
               break label23;
            }

            var10001 = "no symbol could be";
            return var10000.append(var10001).append(" loaded from ").append(jclazz$3).append(" in ").append(owner$3).append(" with name ").append(simpleName$1).append(" and classloader ").append($this.classLoader()).toString();
         }

         var10001 = (new StringBuilder(19)).append("not a type: symbol ").append(cls$2).toString();
         return var10000.append(var10001).append(" loaded from ").append(jclazz$3).append(" in ").append(owner$3).append(" with name ").append(simpleName$1).append(" and classloader ").append($this.classLoader()).toString();
      }

      // $FF: synthetic method
      public static final boolean $anonfun$typeParamToScala1$1(final TypeVariable jparam$1, final Symbols.Symbol x$24) {
         return x$24.name().string_$eq$eq(jparam$1.getName());
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$targsToScala$1(final JavaMirror $this, final Type jtpe) {
         return $this.typeToScala(jtpe);
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$targsToScala$2(final JavaMirror $this, final Type jtpe) {
         return $this.typeToScala(jtpe);
      }

      private final Types.Type targToScala$1(final Type arg, final Symbols.Symbol owner$4, final ListBuffer tparams$1) {
         if (!(arg instanceof WildcardType)) {
            return this.typeToScala(arg);
         } else {
            WildcardType var4 = (WildcardType)arg;
            Names.TypeName var10000 = ((Names)this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).newTypeName((new StringBuilder(2)).append("T$").append(tparams$1.length()).toString());
            Position var10001 = owner$4.newExistential$default$2();
            long newExistential_newFlags = 0L;
            Position newExistential_pos = var10001;
            Names.TypeName newExistential_name = var10000;
            long newExistential_newAbstractType_newFlags = 34359738368L | newExistential_newFlags;
            Symbols.AbstractTypeSymbol var38 = owner$4.createAbstractTypeSymbol(newExistential_name, newExistential_pos, 16L | newExistential_newAbstractType_newFlags);
            newExistential_name = null;
            newExistential_pos = null;
            Types.TypeBounds$ var39 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().TypeBounds();
            SymbolTable var10002 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
            scala.collection.mutable.ArraySeq.ofRef var10003 = scala.Predef..MODULE$.wrapRefArray(var4.getLowerBounds());
            if (var10003 == null) {
               throw null;
            } else {
               List var41 = IterableOnceOps.toList$(var10003);
               if (var41 == null) {
                  throw null;
               } else {
                  List map_this = var41;
                  Object var42;
                  if (map_this == scala.collection.immutable.Nil..MODULE$) {
                     var42 = scala.collection.immutable.Nil..MODULE$;
                  } else {
                     Type var22 = (Type)map_this.head();
                     scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon(this.typeToScala(var22), scala.collection.immutable.Nil..MODULE$);
                     scala.collection.immutable..colon.colon map_t = map_h;

                     for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                        var22 = (Type)map_rest.head();
                        scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon(this.typeToScala(var22), scala.collection.immutable.Nil..MODULE$);
                        map_t.next_$eq(map_nx);
                        map_t = map_nx;
                     }

                     Statics.releaseFence();
                     var42 = map_h;
                  }

                  Object var24 = null;
                  Object var25 = null;
                  Object var26 = null;
                  Object var27 = null;
                  Object var28 = null;
                  Types.Type var40 = var10002.lub((List)var42);
                  SymbolTable var43 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
                  scala.collection.mutable.ArraySeq.ofRef var10004 = scala.Predef..MODULE$.wrapRefArray(var4.getUpperBounds());
                  if (var10004 == null) {
                     throw null;
                  } else {
                     List var44 = IterableOnceOps.toList$(var10004);
                     if (var44 == null) {
                        throw null;
                     } else {
                        List map_this = var44;
                        Object var45;
                        if (map_this == scala.collection.immutable.Nil..MODULE$) {
                           var45 = scala.collection.immutable.Nil..MODULE$;
                        } else {
                           Type var23 = (Type)map_this.head();
                           scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon(this.typeToScala(var23), scala.collection.immutable.Nil..MODULE$);
                           scala.collection.immutable..colon.colon map_t = map_h;

                           for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                              var23 = (Type)map_rest.head();
                              scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon(this.typeToScala(var23), scala.collection.immutable.Nil..MODULE$);
                              map_t.next_$eq(map_nx);
                              map_t = map_nx;
                           }

                           Statics.releaseFence();
                           var45 = map_h;
                        }

                        Object var29 = null;
                        Object var30 = null;
                        Object var31 = null;
                        Object var32 = null;
                        Object var33 = null;
                        Symbols.TypeSymbol tparam = (Symbols.TypeSymbol)((Symbols.TypeSymbol)var38).setInfo(var39.apply(var40, var43.glb((List)var45)));
                        tparams$1.addOne(tparam);
                        return this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().typeRef(this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoPrefix(), tparam, scala.collection.immutable.Nil..MODULE$);
                     }
                  }
               }
            }
         }
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$targsToScala$3(final JavaMirror $this, final Symbols.Symbol owner$4, final ListBuffer tparams$1, final Type arg) {
         return $this.targToScala$1(arg, owner$4, tparams$1);
      }

      // $FF: synthetic method
      public static final Symbols.TypeSymbol $anonfun$jmethodAsScala1$1(final JavaMirror $this, final TypeVariable jtvar) {
         return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$$createTypeParameter(jtvar);
      }

      // $FF: synthetic method
      public static final Symbols.TypeSymbol $anonfun$jconstrAsScala1$1(final JavaMirror $this, final TypeVariable jtvar) {
         return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$$createTypeParameter(jtvar);
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$jparamsAsScala$1(final JavaMirror $this, final Symbols.MethodSymbol meth$1, final Tuple2 x0$1) {
         if (x0$1 != null) {
            Parameter param = (Parameter)x0$1._1();
            int ix = x0$1._2$mcI$sp();
            Names.TermName name = param.isNamePresent() ? ((Names)$this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).TermName().apply(param.getName()) : ((StdNames)$this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).nme().syntheticParamName(ix + 1);
            Symbols.Symbol qual$1 = meth$1.owner();
            Position x$2 = meth$1.pos();
            if (qual$1 == null) {
               throw null;
            } else {
               long x$3 = 0L;
               return qual$1.newTermSymbol(name, x$2, 8192L | x$3).setInfo($this.typeToScala(param.getParameterizedType())).setFlag(param.isNamePresent() ? 0L : 2097152L);
            }
         } else {
            throw new MatchError((Object)null);
         }
      }

      private static final Nothing noClass$1(final Symbols.ClassSymbol clazz$5) {
         throw new ClassNotFoundException((new StringBuilder(37)).append("no Java class corresponding to ").append(clazz$5).append(" found").toString());
      }

      // $FF: synthetic method
      public static final boolean $anonfun$classToJava$2(final ObjectRef fullNameOfJavaClass$1, final Class x$34) {
         String var10000 = x$34.getName();
         String var2 = (String)fullNameOfJavaClass$1.elem;
         if (var10000 == null) {
            if (var2 == null) {
               return true;
            }
         } else if (var10000.equals(var2)) {
            return true;
         }

         return false;
      }

      // $FF: synthetic method
      public static final Nothing $anonfun$classToJava$3(final Symbols.ClassSymbol clazz$5) {
         return noClass$1(clazz$5);
      }

      // $FF: synthetic method
      public static final Class $anonfun$methodToJava$2(final JavaMirror $this, final Types.Type tpe) {
         return $this.typeToJavaClass(tpe);
      }

      // $FF: synthetic method
      public static final Class $anonfun$constructorToJava$2(final JavaMirror $this, final Types.Type tpe) {
         return $this.typeToJavaClass(tpe);
      }

      public JavaMirror(final Symbols.Symbol owner, final ClassLoader classLoader) {
         super(owner);
         this.classLoader = classLoader;
         this.universe = JavaMirrors.this;
         this.classCache = JavaMirrors.this.new TwoWayCache();
         this.packageCache = JavaMirrors.this.new TwoWayCache();
         this.methodCache = JavaMirrors.this.new TwoWayCache();
         this.constructorCache = JavaMirrors.this.new TwoWayCache();
         this.fieldCache = JavaMirrors.this.new TwoWayCache();
         this.tparamCache = JavaMirrors.this.new TwoWayCache();
         this.classHasJavaClass = new HasJavaClass((x) -> (Class)scala.Predef..MODULE$.identity(x));
         this.methHasJavaClass = new HasJavaClass((x$1) -> x$1.getDeclaringClass());
         this.fieldHasJavaClass = new HasJavaClass((x$2) -> x$2.getDeclaringClass());
         this.constrHasJavaClass = new HasJavaClass((x$3) -> x$3.getDeclaringClass());
         this.tparamHasJavaClass = new HasJavaClass((tparam) -> {
            GenericDeclaration var1 = tparam.getGenericDeclaration();
            if (var1 instanceof Class) {
               return (Class)var1;
            } else if (var1 instanceof Method) {
               return ((Method)var1).getDeclaringClass();
            } else if (var1 instanceof Constructor) {
               return ((Constructor)var1).getDeclaringClass();
            } else {
               throw new MatchError(var1);
            }
         });
         String augmentString_x = "(.*\\.)(.*)$";
         String var10001 = augmentString_x;
         Object var6 = null;
         String r$extension_$this = var10001;
         this.PackageAndClassPattern = new Regex(r$extension_$this, scala.collection.immutable.Nil..MODULE$);
      }

      // $FF: synthetic method
      public static final Object $anonfun$ensuringNotFree$1$adapted(final Symbols.Symbol x$5) {
         return BoxesRunTime.boxToBoolean($anonfun$ensuringNotFree$1(x$5));
      }

      // $FF: synthetic method
      public static final Object $anonfun$mkMethodMirror$1$adapted(final JavaMirror $this, final Symbols.Symbol p) {
         return BoxesRunTime.boxToBoolean($anonfun$mkMethodMirror$1($this, p));
      }

      // $FF: synthetic method
      public static final Object $anonfun$typeParamToScala1$1$adapted(final TypeVariable jparam$1, final Symbols.Symbol x$24) {
         return BoxesRunTime.boxToBoolean($anonfun$typeParamToScala1$1(jparam$1, x$24));
      }

      // $FF: synthetic method
      public static final Object $anonfun$unpickleClass$2$adapted(final Class annotClass$1, final Annotation x$8) {
         return BoxesRunTime.boxToBoolean($anonfun$unpickleClass$2(annotClass$1, x$8));
      }

      // $FF: synthetic method
      public static final Object $anonfun$unpickleClass$3$adapted(final String name$1, final Annotation x$9) {
         return BoxesRunTime.boxToBoolean($anonfun$unpickleClass$3(name$1, x$9));
      }

      // $FF: synthetic method
      public static final Object $anonfun$classToJava$2$adapted(final ObjectRef fullNameOfJavaClass$1, final Class x$34) {
         return BoxesRunTime.boxToBoolean($anonfun$classToJava$2(fullNameOfJavaClass$1, x$34));
      }

      // $FF: synthetic method
      private static Object $deserializeLambda$(SerializedLambda var0) {
         return Class.lambdaDeserialize<invokedynamic>(var0);
      }

      private class typeTagCache$ extends ClassValueCompat {
         private final ThreadLocal typeCreator;
         // $FF: synthetic field
         private final JavaMirror $outer;

         public ThreadLocal typeCreator() {
            return this.typeCreator;
         }

         public java.lang.ref.WeakReference computeValue(final Class cls) {
            TypeCreator creator;
            boolean var6;
            scala.reflect.internal.SymbolTable var10000;
            label25: {
               label24: {
                  creator = (TypeCreator)this.typeCreator().get();
                  var10000 = (scala.reflect.internal.SymbolTable)this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
                  Class var10001 = creator.getClass();
                  if (var10001 == null) {
                     if (cls == null) {
                        break label24;
                     }
                  } else if (var10001.equals(cls)) {
                     break label24;
                  }

                  var6 = false;
                  break label25;
               }

               var6 = true;
            }

            boolean assert_assertion = var6;
            if (var10000 == null) {
               throw null;
            } else {
               scala.reflect.internal.SymbolTable assert_this = var10000;
               if (!assert_assertion) {
                  throw assert_this.throwAssertionError(new Tuple2(creator, cls));
               } else {
                  assert_this = null;
                  return new java.lang.ref.WeakReference(((TypeTags)this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).TypeTagImpl(this.$outer, creator));
               }
            }
         }

         // $FF: synthetic method
         public static final Tuple2 $anonfun$computeValue$1(final TypeCreator creator$1, final Class cls$1) {
            return new Tuple2(creator$1, cls$1);
         }

         public typeTagCache$() {
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
               this.typeCreator = new ThreadLocal();
            }
         }
      }

      private class toAnnotArg$ {
         private volatile JavaMirrors$JavaMirror$toAnnotArg$PrimitiveClass$ PrimitiveClass$module;
         private volatile JavaMirrors$JavaMirror$toAnnotArg$EnumClass$ EnumClass$module;
         private volatile JavaMirrors$JavaMirror$toAnnotArg$ArrayClass$ ArrayClass$module;
         private volatile JavaMirrors$JavaMirror$toAnnotArg$AnnotationClass$ AnnotationClass$module;
         private volatile JavaMirrors$JavaMirror$toAnnotArg$ConstantArg$ ConstantArg$module;
         private final Class StringClass;
         private final Class ClassClass;
         // $FF: synthetic field
         private final JavaMirror $outer;

         public JavaMirrors$JavaMirror$toAnnotArg$PrimitiveClass$ PrimitiveClass() {
            if (this.PrimitiveClass$module == null) {
               this.PrimitiveClass$lzycompute$1();
            }

            return this.PrimitiveClass$module;
         }

         public JavaMirrors$JavaMirror$toAnnotArg$EnumClass$ EnumClass() {
            if (this.EnumClass$module == null) {
               this.EnumClass$lzycompute$1();
            }

            return this.EnumClass$module;
         }

         public JavaMirrors$JavaMirror$toAnnotArg$ArrayClass$ ArrayClass() {
            if (this.ArrayClass$module == null) {
               this.ArrayClass$lzycompute$1();
            }

            return this.ArrayClass$module;
         }

         public JavaMirrors$JavaMirror$toAnnotArg$AnnotationClass$ AnnotationClass() {
            if (this.AnnotationClass$module == null) {
               this.AnnotationClass$lzycompute$1();
            }

            return this.AnnotationClass$module;
         }

         public JavaMirrors$JavaMirror$toAnnotArg$ConstantArg$ ConstantArg() {
            if (this.ConstantArg$module == null) {
               this.ConstantArg$lzycompute$1();
            }

            return this.ConstantArg$module;
         }

         public Class StringClass() {
            return this.StringClass;
         }

         public Class ClassClass() {
            return this.ClassClass;
         }

         public AnnotationInfos.ClassfileAnnotArg apply(final Tuple2 schemaAndValue) {
            if (schemaAndValue != null) {
               Option var2 = this.ConstantArg().unapply(schemaAndValue);
               if (!var2.isEmpty()) {
                  Object value = var2.get();
                  return (scala.reflect.internal.SymbolTable)this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().new LiteralAnnotArg((scala.reflect.internal.SymbolTable)this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().new Constant(value));
               }
            }

            if (schemaAndValue != null) {
               Class clazz = (Class)schemaAndValue._1();
               Object value = schemaAndValue._2();
               if (clazz != null) {
                  if (this.ArrayClass() == null) {
                     throw null;
                  }

                  if (clazz.isArray() && scala.runtime.ScalaRunTime..MODULE$.isArray(value, 1)) {
                     AnnotationInfos.ArrayAnnotArg var10000 = new AnnotationInfos.ArrayAnnotArg;
                     scala.reflect.internal.SymbolTable var10002 = (scala.reflect.internal.SymbolTable)this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
                     ClassTag map$extension_ct = ((AnnotationInfos)this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).JavaArgumentTag();
                     int map$extension_len = Array.getLength(value);
                     Object map$extension_ys = map$extension_ct.newArray(map$extension_len);
                     if (map$extension_len > 0) {
                        int map$extension_i = 0;
                        if (value instanceof Object[]) {
                           for(Object[] var13 = value; map$extension_i < map$extension_len; ++map$extension_i) {
                              Object var22 = var13[map$extension_i];
                              scala.runtime.ScalaRunTime..MODULE$.array_update(map$extension_ys, map$extension_i, $anonfun$apply$1(this, clazz, var22));
                           }
                        } else if (value instanceof int[]) {
                           for(int[] var14 = (int[])value; map$extension_i < map$extension_len; ++map$extension_i) {
                              ScalaRunTime var10003 = scala.runtime.ScalaRunTime..MODULE$;
                              Integer var34 = var14[map$extension_i];
                              var10003.array_update(map$extension_ys, map$extension_i, $anonfun$apply$1(this, clazz, var34));
                           }
                        } else if (value instanceof double[]) {
                           for(double[] var15 = (double[])value; map$extension_i < map$extension_len; ++map$extension_i) {
                              ScalaRunTime var42 = scala.runtime.ScalaRunTime..MODULE$;
                              Double var35 = var15[map$extension_i];
                              var42.array_update(map$extension_ys, map$extension_i, $anonfun$apply$1(this, clazz, var35));
                           }
                        } else if (value instanceof long[]) {
                           for(long[] var16 = (long[])value; map$extension_i < map$extension_len; ++map$extension_i) {
                              ScalaRunTime var43 = scala.runtime.ScalaRunTime..MODULE$;
                              Long var36 = var16[map$extension_i];
                              var43.array_update(map$extension_ys, map$extension_i, $anonfun$apply$1(this, clazz, var36));
                           }
                        } else if (value instanceof float[]) {
                           for(float[] var17 = (float[])value; map$extension_i < map$extension_len; ++map$extension_i) {
                              ScalaRunTime var44 = scala.runtime.ScalaRunTime..MODULE$;
                              Float var37 = var17[map$extension_i];
                              var44.array_update(map$extension_ys, map$extension_i, $anonfun$apply$1(this, clazz, var37));
                           }
                        } else if (value instanceof char[]) {
                           for(char[] var18 = (char[])value; map$extension_i < map$extension_len; ++map$extension_i) {
                              ScalaRunTime var45 = scala.runtime.ScalaRunTime..MODULE$;
                              Character var38 = var18[map$extension_i];
                              var45.array_update(map$extension_ys, map$extension_i, $anonfun$apply$1(this, clazz, var38));
                           }
                        } else if (value instanceof byte[]) {
                           for(byte[] var19 = (byte[])value; map$extension_i < map$extension_len; ++map$extension_i) {
                              ScalaRunTime var46 = scala.runtime.ScalaRunTime..MODULE$;
                              Byte var39 = var19[map$extension_i];
                              var46.array_update(map$extension_ys, map$extension_i, $anonfun$apply$1(this, clazz, var39));
                           }
                        } else if (value instanceof short[]) {
                           for(short[] var20 = (short[])value; map$extension_i < map$extension_len; ++map$extension_i) {
                              ScalaRunTime var47 = scala.runtime.ScalaRunTime..MODULE$;
                              Short var40 = var20[map$extension_i];
                              var47.array_update(map$extension_ys, map$extension_i, $anonfun$apply$1(this, clazz, var40));
                           }
                        } else {
                           if (!(value instanceof boolean[])) {
                              throw new MatchError(value);
                           }

                           for(boolean[] var21 = (boolean[])value; map$extension_i < map$extension_len; ++map$extension_i) {
                              ScalaRunTime var48 = scala.runtime.ScalaRunTime..MODULE$;
                              Boolean var41 = var21[map$extension_i];
                              var48.array_update(map$extension_ys, map$extension_i, $anonfun$apply$1(this, clazz, var41));
                           }
                        }
                     }

                     Object var23 = null;
                     Object var24 = null;
                     Object var25 = null;
                     Object var26 = null;
                     Object var27 = null;
                     Object var28 = null;
                     Object var29 = null;
                     Object var30 = null;
                     Object var31 = null;
                     Object var32 = null;
                     Object var33 = null;
                     var10000.<init>((AnnotationInfos.ClassfileAnnotArg[])map$extension_ys);
                     return var10000;
                  }
               }
            }

            if (schemaAndValue != null) {
               Class var6 = (Class)schemaAndValue._1();
               Object value = schemaAndValue._2();
               if (var6 != null) {
                  if (this.AnnotationClass() == null) {
                     throw null;
                  }

                  if (var6.isAnnotation() && value instanceof Annotation) {
                     Annotation var8 = (Annotation)value;
                     return (scala.reflect.internal.SymbolTable)this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().new NestedAnnotArg(this.$outer.new JavaAnnotationProxy(var8));
                  }
               }
            }

            return ((AnnotationInfos)this.$outer.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).UnmappableAnnotArg();
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$toAnnotArg$$$outer() {
            return this.$outer;
         }

         private final void PrimitiveClass$lzycompute$1() {
            synchronized(this){}

            try {
               if (this.PrimitiveClass$module == null) {
                  this.PrimitiveClass$module = new JavaMirrors$JavaMirror$toAnnotArg$PrimitiveClass$(this);
               }
            } catch (Throwable var2) {
               throw var2;
            }

         }

         private final void EnumClass$lzycompute$1() {
            synchronized(this){}

            try {
               if (this.EnumClass$module == null) {
                  this.EnumClass$module = new JavaMirrors$JavaMirror$toAnnotArg$EnumClass$(this);
               }
            } catch (Throwable var2) {
               throw var2;
            }

         }

         private final void ArrayClass$lzycompute$1() {
            synchronized(this){}

            try {
               if (this.ArrayClass$module == null) {
                  this.ArrayClass$module = new JavaMirrors$JavaMirror$toAnnotArg$ArrayClass$(this);
               }
            } catch (Throwable var2) {
               throw var2;
            }

         }

         private final void AnnotationClass$lzycompute$1() {
            synchronized(this){}

            try {
               if (this.AnnotationClass$module == null) {
                  this.AnnotationClass$module = new JavaMirrors$JavaMirror$toAnnotArg$AnnotationClass$(this);
               }
            } catch (Throwable var2) {
               throw var2;
            }

         }

         private final void ConstantArg$lzycompute$1() {
            synchronized(this){}

            try {
               if (this.ConstantArg$module == null) {
                  this.ConstantArg$module = new JavaMirrors$JavaMirror$toAnnotArg$ConstantArg$(this);
               }
            } catch (Throwable var2) {
               throw var2;
            }

         }

         // $FF: synthetic method
         public static final AnnotationInfos.ClassfileAnnotArg $anonfun$apply$1(final toAnnotArg$ $this, final Class clazz$1, final Object x) {
            Predef.ArrowAssoc var10001 = scala.Predef.ArrowAssoc..MODULE$;
            Object ArrowAssoc_self = clazz$1.getComponentType();
            Object var7 = ArrowAssoc_self;
            ArrowAssoc_self = null;
            Object $minus$greater$extension_$this = var7;
            Tuple2 var8 = new Tuple2($minus$greater$extension_$this, x);
            $minus$greater$extension_$this = null;
            return $this.apply(var8);
         }

         public toAnnotArg$() {
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
               this.StringClass = String.class;
               this.ClassClass = Class.class;
            }
         }
      }

      private class JavaAnnotationProxy extends AnnotationInfos.AnnotationInfo implements Product, Serializable {
         private List assocs;
         private final Annotation jann;
         private final Types.Type atp;
         private final List args;
         private volatile boolean bitmap$0;
         // $FF: synthetic field
         public final JavaMirror $outer;

         public Iterator productElementNames() {
            return Product.productElementNames$(this);
         }

         public Annotation jann() {
            return this.jann;
         }

         public Types.Type atp() {
            return this.atp;
         }

         public List args() {
            return this.args;
         }

         public Trees.Tree original() {
            return ((Trees)this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaAnnotationProxy$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).EmptyTree();
         }

         public JavaAnnotationProxy setOriginal(final Trees.Tree t) {
            throw new Exception((new StringBuilder(29)).append("setOriginal inapplicable for ").append(this).toString());
         }

         public Position pos() {
            return ((Positions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaAnnotationProxy$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).NoPosition();
         }

         public JavaAnnotationProxy setPos(final Position pos) {
            throw new Exception((new StringBuilder(24)).append("setPos inapplicable for ").append(this).toString());
         }

         public String toString() {
            return ((AnnotationInfos)this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaAnnotationProxy$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).completeAnnotationToString(this);
         }

         private List assocs$lzycompute() {
            synchronized(this){}

            try {
               if (!this.bitmap$0) {
                  Predef var10001 = scala.Predef..MODULE$;
                  ArrayOps var10002 = scala.collection.ArrayOps..MODULE$;
                  Method[] var10003 = this.jann().annotationType().getDeclaredMethods();
                  Function1 var10004 = (x$4) -> x$4.getName();
                  Ordering.String sortBy$extension_ord = scala.math.Ordering.String..MODULE$;
                  Function1 sortBy$extension_f = var10004;
                  Object var22 = var10002.sorted$extension(var10003, new Ordering..anon.1(sortBy$extension_ord, sortBy$extension_f));
                  Object var11 = null;
                  Object var12 = null;
                  scala.collection.mutable.ArraySeq.ofRef var19 = var10001.wrapRefArray(var22);
                  if (var19 == null) {
                     throw null;
                  }

                  List var20 = IterableOnceOps.toList$(var19);
                  if (var20 == null) {
                     throw null;
                  }

                  List map_this = var20;
                  Object var21;
                  if (map_this == scala.collection.immutable.Nil..MODULE$) {
                     var21 = scala.collection.immutable.Nil..MODULE$;
                  } else {
                     Method var8 = (Method)map_this.head();
                     scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon($anonfun$assocs$2(this, var8), scala.collection.immutable.Nil..MODULE$);
                     scala.collection.immutable..colon.colon map_t = map_h;

                     for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                        var8 = (Method)map_rest.head();
                        scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon($anonfun$assocs$2(this, var8), scala.collection.immutable.Nil..MODULE$);
                        map_t.next_$eq(map_nx);
                        map_t = map_nx;
                     }

                     Statics.releaseFence();
                     var21 = map_h;
                  }

                  Object var13 = null;
                  Object var14 = null;
                  Object var15 = null;
                  Object var16 = null;
                  Object var17 = null;
                  this.assocs = (List)var21;
                  this.bitmap$0 = true;
               }
            } catch (Throwable var10) {
               throw var10;
            }

            return this.assocs;
         }

         public List assocs() {
            return !this.bitmap$0 ? this.assocs$lzycompute() : this.assocs;
         }

         public JavaAnnotationProxy transformArgs(final Function1 f) {
            return this;
         }

         public JavaAnnotationProxy copy(final Annotation jann) {
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaAnnotationProxy$$$outer().new JavaAnnotationProxy(jann);
         }

         public Annotation copy$default$1() {
            return this.jann();
         }

         public String productPrefix() {
            return "JavaAnnotationProxy";
         }

         public int productArity() {
            return 1;
         }

         public Object productElement(final int x$1) {
            switch (x$1) {
               case 0:
                  return this.jann();
               default:
                  return Statics.ioobe(x$1);
            }
         }

         public Iterator productIterator() {
            return new ScalaRunTime..anon.1(this);
         }

         public boolean canEqual(final Object x$1) {
            return x$1 instanceof JavaAnnotationProxy;
         }

         public String productElementName(final int x$1) {
            switch (x$1) {
               case 0:
                  return "jann";
               default:
                  return (String)Statics.ioobe(x$1);
            }
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaAnnotationProxy$$$outer() {
            return this.$outer;
         }

         // $FF: synthetic method
         public static final Tuple2 $anonfun$assocs$2(final JavaAnnotationProxy $this, final Method m) {
            Predef.ArrowAssoc var10000 = scala.Predef.ArrowAssoc..MODULE$;
            Names.TermName var8 = ((Names)$this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaAnnotationProxy$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).TermName().apply(m.getName());
            toAnnotArg$ var10001 = $this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaAnnotationProxy$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$toAnnotArg();
            Predef.ArrowAssoc var10002 = scala.Predef.ArrowAssoc..MODULE$;
            Class var9 = m.getReturnType();
            Object $minus$greater$extension_y = m.invoke($this.jann());
            Object $minus$greater$extension_$this = var9;
            Tuple2 var10 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_y);
            $minus$greater$extension_$this = null;
            $minus$greater$extension_y = null;
            AnnotationInfos.ClassfileAnnotArg $minus$greater$extension_yx = var10001.apply(var10);
            Object $minus$greater$extension_$this = var8;
            return new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yx);
         }

         public JavaAnnotationProxy(final Annotation jann) {
            this.jann = jann;
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
               this.atp = JavaMirror.this.classToScala(jann.annotationType()).toType();
               this.args = scala.collection.immutable.Nil..MODULE$;
            }
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return var0.lambdaDeserialize<invokedynamic>(var0);
         }
      }

      private class JavaAnnotationProxy$ extends AbstractFunction1 implements Serializable {
         // $FF: synthetic field
         private final JavaMirror $outer;

         public final String toString() {
            return "JavaAnnotationProxy";
         }

         public JavaAnnotationProxy apply(final Annotation jann) {
            return this.$outer.new JavaAnnotationProxy(jann);
         }

         public Option unapply(final JavaAnnotationProxy x$0) {
            return (Option)(x$0 == null ? scala.None..MODULE$ : new Some(x$0.jann()));
         }

         public JavaAnnotationProxy$() {
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
            }
         }
      }

      private class JavaInstanceMirror implements scala.reflect.api.Mirrors.InstanceMirror {
         private final Object instance;
         private final ClassTag evidence$4;
         // $FF: synthetic field
         public final JavaMirror $outer;

         public Object instance() {
            return this.instance;
         }

         public Symbols.ClassSymbol symbol() {
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().classSymbol(this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$preciseClass(this.instance(), this.evidence$4));
         }

         public scala.reflect.api.Mirrors.FieldMirror reflectField(final Symbols.TermSymbol field) {
            this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$checkMemberOf(field, this.symbol());
            if ((!field.isMethod() || field.isAccessor()) && !field.isModule()) {
               Names.TermName name = field.isAccessor() ? field.localName() : (Names.TermName)field.name();
               Symbols.TermSymbol field1 = (Symbols.TermSymbol)field.owner().info().decl((Names.Name)name).asTerm();

               try {
                  this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().fieldToJava(field1);
               } catch (NoSuchFieldException var4) {
                  throw this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$ErrorNonExistentField(field1);
               }

               return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().new JavaFieldMirror(this.instance(), field1);
            } else {
               throw this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$ErrorNotField(field);
            }
         }

         public scala.reflect.api.Mirrors.MethodMirror reflectMethod(final Symbols.MethodSymbol method) {
            this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$checkMemberOf(method, this.symbol());
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$mkMethodMirror(this.instance(), method, this.evidence$4);
         }

         public scala.reflect.api.Mirrors.ClassMirror reflectClass(final Symbols.ClassSymbol cls) {
            if (cls.isStatic()) {
               throw this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$ErrorStaticClass(cls);
            } else {
               this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$checkMemberOf(cls, this.symbol());
               return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().new JavaClassMirror(this.instance(), cls);
            }
         }

         public scala.reflect.api.Mirrors.ModuleMirror reflectModule(final Symbols.ModuleSymbol mod) {
            if (mod.isStatic()) {
               throw this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$ErrorStaticModule(mod);
            } else {
               this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$checkMemberOf(mod, this.symbol());
               return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer().new JavaModuleMirror(this.instance(), mod);
            }
         }

         public String toString() {
            return (new StringBuilder(20)).append("instance mirror for ").append(this.instance()).toString();
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaInstanceMirror$$$outer() {
            return this.$outer;
         }

         public JavaInstanceMirror(final Object instance, final ClassTag evidence$4) {
            this.instance = instance;
            this.evidence$4 = evidence$4;
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
            }
         }
      }

      private class DerivedValueClassMetadata {
         private Constructor boxer;
         private Method unboxer;
         private final Symbols.Symbol symbol;
         private final boolean isDerivedValueClass;
         private volatile byte bitmap$0;
         // $FF: synthetic field
         public final JavaMirror $outer;

         public Symbols.Symbol symbol() {
            return this.symbol;
         }

         public boolean isDerivedValueClass() {
            return this.isDerivedValueClass;
         }

         private Constructor boxer$lzycompute() {
            synchronized(this){}

            try {
               if ((byte)(this.bitmap$0 & 1) == 0) {
                  this.boxer = (Constructor)scala.collection.ArrayOps..MODULE$.head$extension(this.scala$reflect$runtime$JavaMirrors$JavaMirror$DerivedValueClassMetadata$$$outer().runtimeClass(this.symbol().toType()).getDeclaredConstructors());
                  this.bitmap$0 = (byte)(this.bitmap$0 | 1);
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.boxer;
         }

         public Constructor boxer() {
            return (byte)(this.bitmap$0 & 1) == 0 ? this.boxer$lzycompute() : this.boxer;
         }

         private Method unboxer$lzycompute() {
            synchronized(this){}

            try {
               if ((byte)(this.bitmap$0 & 2) == 0) {
                  List var1 = ((IterableOnceOps)this.symbol().toType().decls().collect(new Serializable() {
                     private static final long serialVersionUID = 0L;

                     public final Object applyOrElse(final Symbols.Symbol x1, final Function1 default) {
                        if (x1 instanceof Symbols.TermSymbol) {
                           Symbols.TermSymbol var3 = (Symbols.TermSymbol)x1;
                           if (var3.isParamAccessor() && var3.isMethod()) {
                              return var3;
                           }
                        }

                        return default.apply(x1);
                     }

                     public final boolean isDefinedAt(final Symbols.Symbol x1) {
                        if (x1 instanceof Symbols.TermSymbol) {
                           Symbols.TermSymbol var2 = (Symbols.TermSymbol)x1;
                           if (var2.isParamAccessor() && var2.isMethod()) {
                              return true;
                           }
                        }

                        return false;
                     }
                  })).toList();
                  if (!(var1 instanceof scala.collection.immutable..colon.colon)) {
                     throw new MatchError(var1);
                  }

                  scala.collection.immutable..colon.colon var2 = (scala.collection.immutable..colon.colon)var1;
                  Symbols.TermSymbol field = (Symbols.TermSymbol)var2.head();
                  scala.reflect.internal.SymbolTable var10001 = (scala.reflect.internal.SymbolTable)this.scala$reflect$runtime$JavaMirrors$JavaMirror$DerivedValueClassMetadata$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
                  IterableOps.SizeCompareOps var10002 = scala.collection.IterableOps.SizeCompareOps..MODULE$;
                  byte $eq$eq$extension_size = 1;
                  boolean assert_assertion = SeqOps.sizeCompare$(var2, $eq$eq$extension_size) == 0;
                  if (var10001 == null) {
                     throw null;
                  }

                  scala.reflect.internal.SymbolTable assert_this = var10001;
                  if (!assert_assertion) {
                     throw assert_this.throwAssertionError($anonfun$unboxer$1(this, var2));
                  }

                  assert_this = null;
                  this.unboxer = this.scala$reflect$runtime$JavaMirrors$JavaMirror$DerivedValueClassMetadata$$$outer().runtimeClass((Symbols.ClassSymbol)this.symbol().asClass()).getDeclaredMethod(field.name().toString());
                  this.bitmap$0 = (byte)(this.bitmap$0 | 2);
               }
            } catch (Throwable var8) {
               throw var8;
            }

            return this.unboxer;
         }

         public Method unboxer() {
            return (byte)(this.bitmap$0 & 2) == 0 ? this.unboxer$lzycompute() : this.unboxer;
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$DerivedValueClassMetadata$$$outer() {
            return this.$outer;
         }

         // $FF: synthetic method
         public static final String $anonfun$unboxer$1(final DerivedValueClassMetadata $this, final scala.collection.immutable..colon.colon fields$1) {
            return (new StringBuilder(2)).append($this.symbol()).append(": ").append(fields$1).toString();
         }

         public DerivedValueClassMetadata(final Types.Type info) {
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
               this.symbol = info.typeSymbol();
               this.isDerivedValueClass = this.symbol().isDerivedValueClass();
            }
         }
      }

      private class JavaFieldMirror implements scala.reflect.api.Mirrors.FieldMirror {
         private Field jfield;
         private final Object receiver;
         private final Symbols.TermSymbol symbol;
         private final DerivedValueClassMetadata metadata;
         private volatile boolean bitmap$0;
         // $FF: synthetic field
         public final JavaMirror $outer;

         public Object receiver() {
            return this.receiver;
         }

         public Symbols.TermSymbol symbol() {
            return this.symbol;
         }

         public JavaFieldMirror bind(final Object newReceiver) {
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaFieldMirror$$$outer().new JavaFieldMirror(newReceiver, this.symbol(), this.metadata);
         }

         private Field jfield$lzycompute() {
            synchronized(this){}

            try {
               if (!this.bitmap$0) {
                  this.jfield = (Field)scala.reflect.package..MODULE$.ensureAccessible(this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaFieldMirror$$$outer().fieldToJava(this.symbol()));
                  this.bitmap$0 = true;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.jfield;
         }

         public Field jfield() {
            return !this.bitmap$0 ? this.jfield$lzycompute() : this.jfield;
         }

         public Object get() {
            Object value = this.jfield().get(this.receiver());
            return this.metadata.isDerivedValueClass() ? this.metadata.boxer().newInstance(value) : value;
         }

         public void set(final Object value) {
            this.jfield().set(this.receiver(), this.metadata.isDerivedValueClass() ? this.metadata.unboxer().invoke(value) : value);
         }

         public String toString() {
            return (new StringBuilder(29)).append("field mirror for ").append(((Printers)this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaFieldMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).showDecl(this.symbol())).append(" (bound to ").append(this.receiver()).append(")").toString();
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaFieldMirror$$$outer() {
            return this.$outer;
         }

         public JavaFieldMirror(final Object receiver, final Symbols.TermSymbol symbol, final DerivedValueClassMetadata metadata) {
            this.receiver = receiver;
            this.symbol = symbol;
            this.metadata = metadata;
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
            }
         }

         public JavaFieldMirror(final Object receiver, final Symbols.TermSymbol symbol) {
            this(receiver, symbol, JavaMirror.this.new DerivedValueClassMetadata(symbol.info()));
         }
      }

      private abstract class JavaMethodMirror implements scala.reflect.api.Mirrors.MethodMirror {
         private Method jmeth;
         private Constructor jconstr;
         private final Symbols.MethodSymbol symbol;
         private final DerivedValueClassMetadata ret;
         private volatile byte bitmap$0;
         // $FF: synthetic field
         public final JavaMirror $outer;

         public Symbols.MethodSymbol symbol() {
            return this.symbol;
         }

         public DerivedValueClassMetadata ret() {
            return this.ret;
         }

         private Method jmeth$lzycompute() {
            synchronized(this){}

            try {
               if ((byte)(this.bitmap$0 & 1) == 0) {
                  this.jmeth = (Method)scala.reflect.package..MODULE$.ensureAccessible(this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaMethodMirror$$$outer().methodToJava(this.symbol()));
                  this.bitmap$0 = (byte)(this.bitmap$0 | 1);
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.jmeth;
         }

         public Method jmeth() {
            return (byte)(this.bitmap$0 & 1) == 0 ? this.jmeth$lzycompute() : this.jmeth;
         }

         private Constructor jconstr$lzycompute() {
            synchronized(this){}

            try {
               if ((byte)(this.bitmap$0 & 2) == 0) {
                  this.jconstr = (Constructor)scala.reflect.package..MODULE$.ensureAccessible(this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaMethodMirror$$$outer().constructorToJava(this.symbol()));
                  this.bitmap$0 = (byte)(this.bitmap$0 | 2);
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.jconstr;
         }

         public Constructor jconstr() {
            return (byte)(this.bitmap$0 & 2) == 0 ? this.jconstr$lzycompute() : this.jconstr;
         }

         public Object jinvokeraw(final Seq args) {
            if (!this.symbol().isConstructor()) {
               return this.jmeth().invoke(this.receiver(), args.toArray(scala.reflect.ClassTag..MODULE$.AnyRef()));
            } else if (this.receiver() == null) {
               return this.jconstr().newInstance(args.toArray(scala.reflect.ClassTag..MODULE$.AnyRef()));
            } else {
               Constructor var10000 = this.jconstr();
               Object var2 = this.receiver();
               if (args == null) {
                  throw null;
               } else {
                  return var10000.newInstance(((Seq)args.prepended(var2)).toArray(scala.reflect.ClassTag..MODULE$.AnyRef()));
               }
            }
         }

         public Object jinvoke(final Seq args) {
            Object result = this.jinvokeraw(args);
            if (!this.symbol().isConstructor()) {
               Class var10000 = this.jmeth().getReturnType();
               Class var3 = Void.TYPE;
               if (var10000 == null) {
                  if (var3 == null) {
                     return BoxedUnit.UNIT;
                  }
               } else if (var10000.equals(var3)) {
                  return BoxedUnit.UNIT;
               }
            }

            if (!this.symbol().isConstructor() && this.ret().isDerivedValueClass()) {
               return this.ret().boxer().newInstance(result);
            } else {
               return result;
            }
         }

         public String toString() {
            String what = this.symbol().isConstructor() ? "constructor mirror" : "method mirror";
            return (new StringBuilder(17)).append(what).append(" for ").append(((Printers)this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).showDecl(this.symbol())).append(" (bound to ").append(this.receiver()).append(")").toString();
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaMethodMirror$$$outer() {
            return this.$outer;
         }

         public JavaMethodMirror(final Symbols.MethodSymbol symbol, final DerivedValueClassMetadata ret) {
            this.symbol = symbol;
            this.ret = ret;
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
            }
         }
      }

      private class JavaVanillaMethodMirror extends JavaMethodMirror {
         private final Object receiver;

         public Object receiver() {
            return this.receiver;
         }

         public JavaVanillaMethodMirror bind(final Object newReceiver) {
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaVanillaMethodMirror$$$outer().new JavaVanillaMethodMirror(newReceiver, super.symbol(), super.ret());
         }

         public Object apply(final Seq args) {
            return this.jinvoke(args);
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaVanillaMethodMirror$$$outer() {
            return this.$outer;
         }

         public JavaVanillaMethodMirror(final Object receiver, final Symbols.MethodSymbol symbol, final DerivedValueClassMetadata ret) {
            super(symbol, ret);
            this.receiver = receiver;
         }

         public JavaVanillaMethodMirror(final Object receiver, final Symbols.MethodSymbol symbol) {
            this(receiver, symbol, JavaMirror.this.new DerivedValueClassMetadata(symbol.returnType()));
         }
      }

      private class JavaVanillaMethodMirror0 extends JavaVanillaMethodMirror {
         public JavaVanillaMethodMirror0 bind(final Object newReceiver) {
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaVanillaMethodMirror0$$$outer().new JavaVanillaMethodMirror0(newReceiver, super.symbol(), super.ret());
         }

         public Object jinvokeraw(final Seq args) {
            if (!super.symbol().isConstructor()) {
               return this.jmeth().invoke(super.receiver());
            } else {
               return super.receiver() == null ? this.jconstr().newInstance() : this.jconstr().newInstance(super.receiver());
            }
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaVanillaMethodMirror0$$$outer() {
            return this.$outer;
         }

         public JavaVanillaMethodMirror0(final Object receiver, final Symbols.MethodSymbol symbol, final DerivedValueClassMetadata ret) {
            super(receiver, symbol, ret);
         }

         public JavaVanillaMethodMirror0(final Object receiver, final Symbols.MethodSymbol symbol) {
            this(receiver, symbol, JavaMirror.this.new DerivedValueClassMetadata(symbol.returnType()));
         }
      }

      private class JavaVanillaMethodMirror1 extends JavaVanillaMethodMirror {
         public JavaVanillaMethodMirror1 bind(final Object newReceiver) {
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaVanillaMethodMirror1$$$outer().new JavaVanillaMethodMirror1(newReceiver, super.symbol(), super.ret());
         }

         public Object jinvokeraw(final Seq args) {
            if (!super.symbol().isConstructor()) {
               return this.jmeth().invoke(super.receiver(), args.apply(0));
            } else {
               return super.receiver() == null ? this.jconstr().newInstance(args.apply(0)) : this.jconstr().newInstance(super.receiver(), args.apply(0));
            }
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaVanillaMethodMirror1$$$outer() {
            return this.$outer;
         }

         public JavaVanillaMethodMirror1(final Object receiver, final Symbols.MethodSymbol symbol, final DerivedValueClassMetadata ret) {
            super(receiver, symbol, ret);
         }

         public JavaVanillaMethodMirror1(final Object receiver, final Symbols.MethodSymbol symbol) {
            this(receiver, symbol, JavaMirror.this.new DerivedValueClassMetadata(symbol.returnType()));
         }
      }

      private class JavaVanillaMethodMirror2 extends JavaVanillaMethodMirror {
         public JavaVanillaMethodMirror2 bind(final Object newReceiver) {
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaVanillaMethodMirror2$$$outer().new JavaVanillaMethodMirror2(newReceiver, super.symbol(), super.ret());
         }

         public Object jinvokeraw(final Seq args) {
            if (!super.symbol().isConstructor()) {
               return this.jmeth().invoke(super.receiver(), args.apply(0), args.apply(1));
            } else {
               return super.receiver() == null ? this.jconstr().newInstance(args.apply(0), args.apply(1)) : this.jconstr().newInstance(super.receiver(), args.apply(0), args.apply(1));
            }
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaVanillaMethodMirror2$$$outer() {
            return this.$outer;
         }

         public JavaVanillaMethodMirror2(final Object receiver, final Symbols.MethodSymbol symbol, final DerivedValueClassMetadata ret) {
            super(receiver, symbol, ret);
         }

         public JavaVanillaMethodMirror2(final Object receiver, final Symbols.MethodSymbol symbol) {
            this(receiver, symbol, JavaMirror.this.new DerivedValueClassMetadata(symbol.returnType()));
         }
      }

      private class JavaVanillaMethodMirror3 extends JavaVanillaMethodMirror {
         public JavaVanillaMethodMirror3 bind(final Object newReceiver) {
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaVanillaMethodMirror3$$$outer().new JavaVanillaMethodMirror3(newReceiver, super.symbol(), super.ret());
         }

         public Object jinvokeraw(final Seq args) {
            if (!super.symbol().isConstructor()) {
               return this.jmeth().invoke(super.receiver(), args.apply(0), args.apply(1), args.apply(2));
            } else {
               return super.receiver() == null ? this.jconstr().newInstance(args.apply(0), args.apply(1), args.apply(2)) : this.jconstr().newInstance(super.receiver(), args.apply(0), args.apply(1), args.apply(2));
            }
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaVanillaMethodMirror3$$$outer() {
            return this.$outer;
         }

         public JavaVanillaMethodMirror3(final Object receiver, final Symbols.MethodSymbol symbol, final DerivedValueClassMetadata ret) {
            super(receiver, symbol, ret);
         }

         public JavaVanillaMethodMirror3(final Object receiver, final Symbols.MethodSymbol symbol) {
            this(receiver, symbol, JavaMirror.this.new DerivedValueClassMetadata(symbol.returnType()));
         }
      }

      private class JavaVanillaMethodMirror4 extends JavaVanillaMethodMirror {
         public JavaVanillaMethodMirror4 bind(final Object newReceiver) {
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaVanillaMethodMirror4$$$outer().new JavaVanillaMethodMirror4(newReceiver, super.symbol(), super.ret());
         }

         public Object jinvokeraw(final Seq args) {
            if (!super.symbol().isConstructor()) {
               return this.jmeth().invoke(super.receiver(), args.apply(0), args.apply(1), args.apply(2), args.apply(3));
            } else {
               return super.receiver() == null ? this.jconstr().newInstance(args.apply(0), args.apply(1), args.apply(2), args.apply(3)) : this.jconstr().newInstance(super.receiver(), args.apply(0), args.apply(1), args.apply(2), args.apply(3));
            }
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaVanillaMethodMirror4$$$outer() {
            return this.$outer;
         }

         public JavaVanillaMethodMirror4(final Object receiver, final Symbols.MethodSymbol symbol, final DerivedValueClassMetadata ret) {
            super(receiver, symbol, ret);
         }

         public JavaVanillaMethodMirror4(final Object receiver, final Symbols.MethodSymbol symbol) {
            this(receiver, symbol, JavaMirror.this.new DerivedValueClassMetadata(symbol.returnType()));
         }
      }

      private class MethodMetadata {
         private final Symbols.Symbol[] params;
         private final DerivedValueClassMetadata[] vcMetadata;
         private final boolean[] isByName;
         private final int paramCount;
         private final DerivedValueClassMetadata ret;
         // $FF: synthetic field
         public final JavaMirror $outer;

         public boolean[] isByName() {
            return this.isByName;
         }

         public boolean isDerivedValueClass(final int i) {
            return this.vcMetadata[i].isDerivedValueClass();
         }

         public Method paramUnboxers(final int i) {
            return this.vcMetadata[i].unboxer();
         }

         public int paramCount() {
            return this.paramCount;
         }

         public DerivedValueClassMetadata ret() {
            return this.ret;
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$MethodMetadata$$$outer() {
            return this.$outer;
         }

         // $FF: synthetic method
         public static final DerivedValueClassMetadata $anonfun$vcMetadata$1(final MethodMetadata $this, final Symbols.Symbol p) {
            return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$MethodMetadata$$$outer().new DerivedValueClassMetadata(p.info());
         }

         // $FF: synthetic method
         public static final boolean $anonfun$isByName$1(final MethodMetadata $this, final Symbols.Symbol p) {
            return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$MethodMetadata$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$isByNameParam(p.info());
         }

         public MethodMetadata(final Symbols.MethodSymbol symbol) {
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
               List var10001 = symbol.paramss();
               scala..eq.colon.eq flatten_toIterableOnce = scala..less.colon.less..MODULE$.refl();
               if (var10001 == null) {
                  throw null;
               } else {
                  Object var22 = StrictOptimizedIterableOps.flatten$(var10001, flatten_toIterableOnce);
                  Object var16 = null;
                  this.params = (Symbols.Symbol[])((IterableOnceOps)var22).toArray(JavaMirror.this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().SymbolTag());
                  Object map$extension_$this = this.params;
                  int map$extension_len = ((Object[])map$extension_$this).length;
                  Object map$extension_ys = new DerivedValueClassMetadata[map$extension_len];
                  if (map$extension_len > 0) {
                     for(int map$extension_i = 0; map$extension_i < map$extension_len; ++map$extension_i) {
                        Object var12 = ((Object[])map$extension_$this)[map$extension_i];
                        Object array_update_value = $anonfun$vcMetadata$1(this, (Symbols.Symbol)var12);
                        ((Object[])map$extension_ys)[map$extension_i] = array_update_value;
                        array_update_value = null;
                     }
                  }

                  map$extension_$this = null;
                  Object var18 = null;
                  this.vcMetadata = (DerivedValueClassMetadata[])map$extension_ys;
                  Object map$extension_$this = this.params;
                  int map$extension_len = ((Object[])map$extension_$this).length;
                  Object map$extension_ys = new boolean[map$extension_len];
                  if (map$extension_len > 0) {
                     for(int map$extension_i = 0; map$extension_i < map$extension_len; ++map$extension_i) {
                        Object var13 = ((Object[])map$extension_$this)[map$extension_i];
                        Object var14 = $anonfun$isByName$1(this, (Symbols.Symbol)var13);
                        ((Object[])map$extension_ys)[map$extension_i] = var14;
                     }
                  }

                  map$extension_$this = null;
                  Object var20 = null;
                  this.isByName = (boolean[])map$extension_ys;
                  this.paramCount = this.params.length;
                  this.ret = JavaMirror.this.new DerivedValueClassMetadata(symbol.returnType());
               }
            }
         }

         // $FF: synthetic method
         public static final Object $anonfun$isByName$1$adapted(final MethodMetadata $this, final Symbols.Symbol p) {
            return BoxesRunTime.boxToBoolean($anonfun$isByName$1($this, p));
         }
      }

      private class JavaTransformingMethodMirror extends JavaMethodMirror {
         private final Object receiver;
         private final MethodMetadata metadata;

         public Object receiver() {
            return this.receiver;
         }

         public JavaTransformingMethodMirror bind(final Object newReceiver) {
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaTransformingMethodMirror$$$outer().new JavaTransformingMethodMirror(newReceiver, super.symbol(), this.metadata);
         }

         public Object apply(final Seq args) {
            Object[] args1 = new Object[args.length()];

            for(int i = 0; i < args1.length; ++i) {
               Object arg = args.apply(i);
               args1[i] = i >= this.metadata.paramCount() ? arg : (this.metadata.isByName()[i] ? () -> arg : (this.metadata.isDerivedValueClass(i) ? this.metadata.paramUnboxers(i).invoke(arg) : arg));
            }

            return this.jinvoke(scala.collection.immutable.ArraySeq..MODULE$.unsafeWrapArray(args1));
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaTransformingMethodMirror$$$outer() {
            return this.$outer;
         }

         public JavaTransformingMethodMirror(final Object receiver, final Symbols.MethodSymbol symbol, final MethodMetadata metadata) {
            super(symbol, metadata.ret());
            this.receiver = receiver;
            this.metadata = metadata;
         }

         public JavaTransformingMethodMirror(final Object receiver, final Symbols.MethodSymbol symbol) {
            this(receiver, symbol, JavaMirror.this.new MethodMetadata(symbol));
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return var0.lambdaDeserialize<invokedynamic>(var0);
         }
      }

      private class BytecodelessMethodMirror implements scala.reflect.api.Mirrors.MethodMirror {
         private final Object receiver;
         private final Symbols.MethodSymbol symbol;
         private final ClassTag evidence$6;
         // $FF: synthetic field
         public final JavaMirror $outer;

         public Object receiver() {
            return this.receiver;
         }

         public Symbols.MethodSymbol symbol() {
            return this.symbol;
         }

         public BytecodelessMethodMirror bind(final Object newReceiver) {
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().new BytecodelessMethodMirror(newReceiver, this.symbol(), this.evidence$6);
         }

         public String toString() {
            return (new StringBuilder(43)).append("bytecodeless method mirror for ").append(((Printers)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).showDecl(this.symbol())).append(" (bound to ").append(this.receiver()).append(")").toString();
         }

         public Object apply(final Seq args) {
            List var10000 = this.symbol().paramss();
            Function1 flatten_toIterableOnce = scala.Predef..MODULE$.$conforms();
            if (var10000 == null) {
               throw null;
            } else {
               Object var17 = StrictOptimizedIterableOps.flatten$(var10000, flatten_toIterableOnce);
               Object var16 = null;
               List params = (List)var17;
               boolean perfectMatch = args.length() == params.length();
               boolean varargMatch = args.length() >= params.length() - 1 && ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().isVarArgsList(params);
               if (!perfectMatch && !varargMatch) {
                  String n_arguments = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().isVarArgsList(params) ? (new StringBuilder(8)).append(params.length() - 1).append(" or more").toString() : String.valueOf(params.length());
                  IterableOps.SizeCompareOps var42 = scala.collection.IterableOps.SizeCompareOps..MODULE$;
                  int $eq$eq$extension_size = 1;
                  String s_arguments = SeqOps.sizeCompare$(params, $eq$eq$extension_size) == 0 && !((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().isVarArgsList(params) ? "argument" : "arguments";
                  JavaMirror var43 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer();
                  String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = (new StringBuilder(8)).append(((Printers)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).showDecl(this.symbol())).append(" takes ").append(n_arguments).append(" ").append(s_arguments).toString();
                  if (var43 == null) {
                     throw null;
                  } else {
                     throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
                  }
               } else {
                  Symbols.MethodSymbol var7;
                  label709: {
                     label722: {
                        var7 = this.symbol();
                        Symbols.MethodSymbol var18 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Any_$eq$eq();
                        if (var18 == null) {
                           if (var7 == null) {
                              break label722;
                           }
                        } else if (var18.equals(var7)) {
                           break label722;
                        }

                        label701: {
                           var18 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_$eq$eq();
                           if (var18 == null) {
                              if (var7 == null) {
                                 break label701;
                              }
                           } else if (var18.equals(var7)) {
                              break label701;
                           }

                           var20 = false;
                           break label709;
                        }

                        var20 = true;
                        break label709;
                     }

                     var20 = true;
                  }

                  if (var20) {
                     return BoxesRunTime.equals(this.objReceiver$1(), objArg0$1(args));
                  } else {
                     label693: {
                        label723: {
                           Symbols.MethodSymbol var21 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Any_$bang$eq();
                           if (var21 == null) {
                              if (var7 == null) {
                                 break label723;
                              }
                           } else if (var21.equals(var7)) {
                              break label723;
                           }

                           label685: {
                              var21 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_$bang$eq();
                              if (var21 == null) {
                                 if (var7 == null) {
                                    break label685;
                                 }
                              } else if (var21.equals(var7)) {
                                 break label685;
                              }

                              var23 = false;
                              break label693;
                           }

                           var23 = true;
                           break label693;
                        }

                        var23 = true;
                     }

                     if (var23) {
                        return !BoxesRunTime.equals(this.objReceiver$1(), objArg0$1(args));
                     } else {
                        label677: {
                           label724: {
                              Symbols.MethodSymbol var24 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Any_$hash$hash();
                              if (var24 == null) {
                                 if (var7 == null) {
                                    break label724;
                                 }
                              } else if (var24.equals(var7)) {
                                 break label724;
                              }

                              label669: {
                                 var24 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_$hash$hash();
                                 if (var24 == null) {
                                    if (var7 == null) {
                                       break label669;
                                    }
                                 } else if (var24.equals(var7)) {
                                    break label669;
                                 }

                                 var26 = false;
                                 break label677;
                              }

                              var26 = true;
                              break label677;
                           }

                           var26 = true;
                        }

                        if (var26) {
                           return Statics.anyHash(this.objReceiver$1());
                        } else {
                           Symbols.MethodSymbol var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Any_equals();
                           if (var27 == null) {
                              if (var7 == null) {
                                 return this.receiver().equals(objArg0$1(args));
                              }
                           } else if (var27.equals(var7)) {
                              return this.receiver().equals(objArg0$1(args));
                           }

                           var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Any_hashCode();
                           if (var27 == null) {
                              if (var7 == null) {
                                 return this.receiver().hashCode();
                              }
                           } else if (var27.equals(var7)) {
                              return this.receiver().hashCode();
                           }

                           var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Any_toString();
                           if (var27 == null) {
                              if (var7 == null) {
                                 return this.receiver().toString();
                              }
                           } else if (var27.equals(var7)) {
                              return this.receiver().toString();
                           }

                           var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_eq();
                           if (var27 == null) {
                              if (var7 == null) {
                                 return this.objReceiver$1() == objArg0$1(args);
                              }
                           } else if (var27.equals(var7)) {
                              return this.objReceiver$1() == objArg0$1(args);
                           }

                           var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_ne();
                           if (var27 == null) {
                              if (var7 == null) {
                                 return this.objReceiver$1() != objArg0$1(args);
                              }
                           } else if (var27.equals(var7)) {
                              return this.objReceiver$1() != objArg0$1(args);
                           }

                           label813: {
                              var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_synchronized();
                              if (var27 == null) {
                                 if (var7 == null) {
                                    break label813;
                                 }
                              } else if (var27.equals(var7)) {
                                 break label813;
                              }

                              if (this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$isGetClass(var7)) {
                                 return this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$preciseClass(this.receiver(), this.evidence$6);
                              }

                              var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Any_asInstanceOf();
                              if (var27 == null) {
                                 if (var7 == null) {
                                    throw this.fail$1("Any.asInstanceOf requires a type argument");
                                 }
                              } else if (var27.equals(var7)) {
                                 throw this.fail$1("Any.asInstanceOf requires a type argument");
                              }

                              var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Any_isInstanceOf();
                              if (var27 == null) {
                                 if (var7 == null) {
                                    throw this.fail$1("Any.isInstanceOf requires a type argument");
                                 }
                              } else if (var27.equals(var7)) {
                                 throw this.fail$1("Any.isInstanceOf requires a type argument");
                              }

                              var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_asInstanceOf();
                              if (var27 == null) {
                                 if (var7 == null) {
                                    throw this.fail$1(scala.collection.StringOps..MODULE$.format$extension("AnyRef.%s is an internal method", scala.runtime.ScalaRunTime..MODULE$.genericWrapArray(new Object[]{this.symbol().name()})));
                                 }
                              } else if (var27.equals(var7)) {
                                 throw this.fail$1(scala.collection.StringOps..MODULE$.format$extension("AnyRef.%s is an internal method", scala.runtime.ScalaRunTime..MODULE$.genericWrapArray(new Object[]{this.symbol().name()})));
                              }

                              var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Object_isInstanceOf();
                              if (var27 == null) {
                                 if (var7 == null) {
                                    throw this.fail$1(scala.collection.StringOps..MODULE$.format$extension("AnyRef.%s is an internal method", scala.runtime.ScalaRunTime..MODULE$.genericWrapArray(new Object[]{this.symbol().name()})));
                                 }
                              } else if (var27.equals(var7)) {
                                 throw this.fail$1(scala.collection.StringOps..MODULE$.format$extension("AnyRef.%s is an internal method", scala.runtime.ScalaRunTime..MODULE$.genericWrapArray(new Object[]{this.symbol().name()})));
                              }

                              var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Array_length();
                              if (var27 == null) {
                                 if (var7 == null) {
                                    return Array.getLength(this.objReceiver$1());
                                 }
                              } else if (var27.equals(var7)) {
                                 return Array.getLength(this.objReceiver$1());
                              }

                              var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Array_apply();
                              if (var27 == null) {
                                 if (var7 == null) {
                                    return scala.runtime.ScalaRunTime..MODULE$.array_apply(this.objReceiver$1(), BoxesRunTime.unboxToInt(args.apply(0)));
                                 }
                              } else if (var27.equals(var7)) {
                                 return scala.runtime.ScalaRunTime..MODULE$.array_apply(this.objReceiver$1(), BoxesRunTime.unboxToInt(args.apply(0)));
                              }

                              label814: {
                                 var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Array_update();
                                 if (var27 == null) {
                                    if (var7 == null) {
                                       break label814;
                                    }
                                 } else if (var27.equals(var7)) {
                                    break label814;
                                 }

                                 var27 = ((Definitions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().Array_clone();
                                 if (var27 == null) {
                                    if (var7 == null) {
                                       return scala.runtime.ScalaRunTime..MODULE$.array_clone(this.objReceiver$1());
                                    }
                                 } else if (var27.equals(var7)) {
                                    return scala.runtime.ScalaRunTime..MODULE$.array_clone(this.objReceiver$1());
                                 }

                                 if (this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$isStringConcat(var7)) {
                                    return (new StringBuilder(0)).append(this.receiver().toString()).append(objArg0$1(args)).toString();
                                 }

                                 if (var7.owner().isPrimitiveValueClass()) {
                                    return this.invokePrimitiveMethod$1(args);
                                 }

                                 if (var7.equals(this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().runDefinitions().Predef_classOf())) {
                                    throw this.fail$1("Predef.classOf is a compile-time function");
                                 }

                                 if (var7.isMacro()) {
                                    throw this.fail$1((new StringBuilder(41)).append(this.symbol().fullName()).append(" is a macro, i.e. a compile-time function").toString());
                                 }

                                 JavaMirror var41 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer();
                                 String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msgx = (new StringBuilder(34)).append("unsupported symbol ").append(this.symbol()).append(" when invoking ").append(this).toString();
                                 if (var41 == null) {
                                    throw null;
                                 }

                                 throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msgx);
                              }

                              scala.runtime.ScalaRunTime..MODULE$.array_update(this.objReceiver$1(), BoxesRunTime.unboxToInt(args.apply(0)), args.apply(1));
                              return BoxedUnit.UNIT;
                           }

                           synchronized(this.objReceiver$1()){}

                           Object var9;
                           try {
                              var9 = objArg0$1(args);
                           } catch (Throwable var15) {
                              throw var15;
                           }

                           return var9;
                        }
                     }
                  }
               }
            }
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer() {
            return this.$outer;
         }

         private final Object objReceiver$1() {
            return this.receiver();
         }

         private static final Object objArg0$1(final Seq args$1) {
            return args$1.apply(0);
         }

         private static final Seq objArgs$1(final Seq args$1) {
            return args$1;
         }

         private final Nothing fail$1(final String msg) {
            JavaMirror var10000 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer();
            String scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg = (new StringBuilder(35)).append(msg).append(", it cannot be invoked with mirrors").toString();
            if (var10000 == null) {
               throw null;
            } else {
               throw new ScalaReflectionException(scala$reflect$runtime$JavaMirrors$JavaMirror$$abort_msg);
            }
         }

         // $FF: synthetic method
         public static final boolean $anonfun$apply$3(final BytecodelessMethodMirror $this, final Method x$7) {
            String var10000 = x$7.getName();
            String var2 = ((StdNames)$this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).nme().primitiveMethodName($this.symbol().name()).toString();
            if (var10000 == null) {
               if (var2 == null) {
                  return true;
               }
            } else if (var10000.equals(var2)) {
               return true;
            }

            return false;
         }

         // $FF: synthetic method
         public static final List $anonfun$apply$4(final Method[] jmeths$1) {
            scala.collection.mutable.ArraySeq.ofRef var10000 = scala.Predef..MODULE$.wrapRefArray(jmeths$1);
            if (var10000 == null) {
               throw null;
            } else {
               return IterableOnceOps.toList$(var10000);
            }
         }

         private final Object invokePrimitiveMethod$1(final Seq args$1) {
            Object filter$extension_$this;
            Object var33;
            label155: {
               label158: {
                  Object[] refArrayOps_xs = BoxesRunTime.class.getDeclaredMethods();
                  Object var16 = null;
                  filter$extension_$this = refArrayOps_xs;
                  ArrayBuilder var23 = scala.collection.mutable.ArrayBuilder..MODULE$;
                  ClassTag filter$extension_make_evidence$1 = scala.reflect.ClassTag..MODULE$.apply(refArrayOps_xs.getClass().getComponentType());
                  Class var15 = filter$extension_make_evidence$1.runtimeClass();
                  Class var24 = Byte.TYPE;
                  if (var24 == null) {
                     if (var15 == null) {
                        break label158;
                     }
                  } else if (var24.equals(var15)) {
                     break label158;
                  }

                  label159: {
                     var24 = Short.TYPE;
                     if (var24 == null) {
                        if (var15 == null) {
                           break label159;
                        }
                     } else if (var24.equals(var15)) {
                        break label159;
                     }

                     label160: {
                        var24 = Character.TYPE;
                        if (var24 == null) {
                           if (var15 == null) {
                              break label160;
                           }
                        } else if (var24.equals(var15)) {
                           break label160;
                        }

                        label161: {
                           var24 = Integer.TYPE;
                           if (var24 == null) {
                              if (var15 == null) {
                                 break label161;
                              }
                           } else if (var24.equals(var15)) {
                              break label161;
                           }

                           label162: {
                              var24 = Long.TYPE;
                              if (var24 == null) {
                                 if (var15 == null) {
                                    break label162;
                                 }
                              } else if (var24.equals(var15)) {
                                 break label162;
                              }

                              label163: {
                                 var24 = Float.TYPE;
                                 if (var24 == null) {
                                    if (var15 == null) {
                                       break label163;
                                    }
                                 } else if (var24.equals(var15)) {
                                    break label163;
                                 }

                                 label164: {
                                    var24 = Double.TYPE;
                                    if (var24 == null) {
                                       if (var15 == null) {
                                          break label164;
                                       }
                                    } else if (var24.equals(var15)) {
                                       break label164;
                                    }

                                    label165: {
                                       var24 = Boolean.TYPE;
                                       if (var24 == null) {
                                          if (var15 == null) {
                                             break label165;
                                          }
                                       } else if (var24.equals(var15)) {
                                          break label165;
                                       }

                                       label98: {
                                          var24 = Void.TYPE;
                                          if (var24 == null) {
                                             if (var15 == null) {
                                                break label98;
                                             }
                                          } else if (var24.equals(var15)) {
                                             break label98;
                                          }

                                          var33 = new ArrayBuilder.ofRef(filter$extension_make_evidence$1);
                                          break label155;
                                       }

                                       var33 = new ArrayBuilder.ofUnit();
                                       break label155;
                                    }

                                    var33 = new ArrayBuilder.ofBoolean();
                                    break label155;
                                 }

                                 var33 = new ArrayBuilder.ofDouble();
                                 break label155;
                              }

                              var33 = new ArrayBuilder.ofFloat();
                              break label155;
                           }

                           var33 = new ArrayBuilder.ofLong();
                           break label155;
                        }

                        var33 = new ArrayBuilder.ofInt();
                        break label155;
                     }

                     var33 = new ArrayBuilder.ofChar();
                     break label155;
                  }

                  var33 = new ArrayBuilder.ofShort();
                  break label155;
               }

               var33 = new ArrayBuilder.ofByte();
            }

            Object var21 = null;
            Object var22 = null;
            ArrayBuilder filter$extension_res = (ArrayBuilder)var33;

            for(int filter$extension_i = 0; filter$extension_i < ((Object[])filter$extension_$this).length; ++filter$extension_i) {
               Object filter$extension_x = ((Object[])filter$extension_$this)[filter$extension_i];
               if ($anonfun$apply$3(this, (Method)filter$extension_x)) {
                  filter$extension_res.addOne(filter$extension_x);
               }
            }

            var33 = filter$extension_res.result();
            filter$extension_$this = null;
            filter$extension_res = null;
            Object var20 = null;
            Method[] jmeths = (Method[])var33;
            scala.reflect.internal.SymbolTable var35 = (scala.reflect.internal.SymbolTable)this.scala$reflect$runtime$JavaMirrors$JavaMirror$BytecodelessMethodMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
            boolean assert_assertion = jmeths.length == 1;
            if (var35 == null) {
               throw null;
            } else {
               scala.reflect.internal.SymbolTable assert_this = var35;
               if (!assert_assertion) {
                  throw assert_this.throwAssertionError($anonfun$apply$4(jmeths));
               } else {
                  assert_this = null;
                  Method jmeth = (Method)scala.collection.ArrayOps..MODULE$.head$extension(jmeths);
                  Object var5 = this.receiver();
                  if (args$1 == null) {
                     throw null;
                  } else {
                     Object result = jmeth.invoke((Object)null, ((Seq)args$1.prepended(var5)).toArray(scala.reflect.ClassTag..MODULE$.AnyRef()));
                     Class var36 = jmeth.getReturnType();
                     Class var6 = Void.TYPE;
                     if (var36 == null) {
                        if (var6 == null) {
                           return BoxedUnit.UNIT;
                        }
                     } else if (var36.equals(var6)) {
                        return BoxedUnit.UNIT;
                     }

                     return result;
                  }
               }
            }
         }

         public BytecodelessMethodMirror(final Object receiver, final Symbols.MethodSymbol symbol, final ClassTag evidence$6) {
            this.receiver = receiver;
            this.symbol = symbol;
            this.evidence$6 = evidence$6;
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
            }
         }

         // $FF: synthetic method
         public static final Object $anonfun$apply$3$adapted(final BytecodelessMethodMirror $this, final Method x$7) {
            return BoxesRunTime.boxToBoolean($anonfun$apply$3($this, x$7));
         }
      }

      private abstract class JavaTemplateMirror implements scala.reflect.api.Mirrors.TemplateMirror {
         // $FF: synthetic field
         public final JavaMirror $outer;

         public abstract Object outer();

         public abstract Symbols.ClassSymbol erasure();

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaTemplateMirror$$$outer() {
            return this.$outer;
         }

         public JavaTemplateMirror() {
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
            }
         }
      }

      private class JavaClassMirror extends JavaTemplateMirror implements scala.reflect.api.Mirrors.ClassMirror {
         private final Object outer;
         private final Symbols.ClassSymbol symbol;

         public Object outer() {
            return this.outer;
         }

         public Symbols.ClassSymbol symbol() {
            return this.symbol;
         }

         public Symbols.ClassSymbol erasure() {
            return this.symbol();
         }

         public boolean isStatic() {
            return false;
         }

         public scala.reflect.api.Mirrors.MethodMirror reflectConstructor(final Symbols.MethodSymbol constructor) {
            this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaClassMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$checkConstructorOf(constructor, this.symbol());
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaClassMirror$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$mkMethodMirror(this.outer(), constructor, scala.reflect.ClassTag..MODULE$.AnyRef());
         }

         public String toString() {
            StringBuilder var10000 = (new StringBuilder(29)).append("class mirror for ");
            Symbols.ClassSymbol var10001 = this.symbol();
            if (var10001 == null) {
               throw null;
            } else {
               return var10000.append(((Symbols.Symbol)var10001).fullName('.')).append(" (bound to ").append(this.outer()).append(")").toString();
            }
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaClassMirror$$$outer() {
            return this.$outer;
         }

         public JavaClassMirror(final Object outer, final Symbols.ClassSymbol symbol) {
            this.outer = outer;
            this.symbol = symbol;
         }
      }

      private class JavaModuleMirror extends JavaTemplateMirror implements scala.reflect.api.Mirrors.ModuleMirror {
         private final Object outer;
         private final Symbols.ModuleSymbol symbol;

         public Object outer() {
            return this.outer;
         }

         public Symbols.ModuleSymbol symbol() {
            return this.symbol;
         }

         public Symbols.ClassSymbol erasure() {
            return (Symbols.ClassSymbol)this.symbol().moduleClass().asClass();
         }

         public boolean isStatic() {
            return true;
         }

         public Object instance() {
            if (this.symbol().isTopLevel()) {
               ReflectionUtils$ var10000 = ReflectionUtils$.MODULE$;
               ClassLoader var10001 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaModuleMirror$$$outer().classLoader();
               Symbols.ModuleSymbol var10002 = this.symbol();
               if (var10002 == null) {
                  throw null;
               } else {
                  return var10000.staticSingletonInstance(var10001, ((Symbols.Symbol)var10002).fullName('.'));
               }
            } else {
               return this.outer() == null ? ReflectionUtils$.MODULE$.staticSingletonInstance(this.scala$reflect$runtime$JavaMirrors$JavaMirror$JavaModuleMirror$$$outer().classToJava((Symbols.ClassSymbol)this.symbol().moduleClass().asClass())) : ReflectionUtils$.MODULE$.innerSingletonInstance(this.outer(), this.symbol().name().toString());
            }
         }

         public String toString() {
            StringBuilder var10000 = (new StringBuilder(30)).append("module mirror for ");
            Symbols.ModuleSymbol var10001 = this.symbol();
            if (var10001 == null) {
               throw null;
            } else {
               return var10000.append(((Symbols.Symbol)var10001).fullName('.')).append(" (bound to ").append(this.outer()).append(")").toString();
            }
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$JavaModuleMirror$$$outer() {
            return this.$outer;
         }

         public JavaModuleMirror(final Object outer, final Symbols.ModuleSymbol symbol) {
            this.outer = outer;
            this.symbol = symbol;
         }
      }

      private class unpickler$ extends UnPickler {
         private final SymbolTable symbolTable = JavaMirror.this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();

         public SymbolTable symbolTable() {
            return this.symbolTable;
         }

         public unpickler$() {
         }
      }

      private class TypeParamCompleter extends Types.LazyType implements Types.FlagAgnosticCompleter {
         private final TypeVariable jtvar;
         // $FF: synthetic field
         public final JavaMirror $outer;

         public void load(final Symbols.Symbol sym) {
            this.complete(sym);
         }

         public void complete(final Symbols.Symbol sym) {
            Types.TypeBounds$ var10001 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$TypeParamCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().TypeBounds();
            SymbolTable var10002 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$TypeParamCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
            scala.collection.mutable.ArraySeq.ofRef var10003 = scala.Predef..MODULE$.wrapRefArray(this.jtvar.getBounds());
            if (var10003 == null) {
               throw null;
            } else {
               List var14 = IterableOnceOps.toList$(var10003);
               if (var14 == null) {
                  throw null;
               } else {
                  List map_this = var14;
                  Object var15;
                  if (map_this == scala.collection.immutable.Nil..MODULE$) {
                     var15 = scala.collection.immutable.Nil..MODULE$;
                  } else {
                     Type var7 = (Type)map_this.head();
                     scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon($anonfun$complete$1(this, var7), scala.collection.immutable.Nil..MODULE$);
                     scala.collection.immutable..colon.colon map_t = map_h;

                     for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                        var7 = (Type)map_rest.head();
                        scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon($anonfun$complete$1(this, var7), scala.collection.immutable.Nil..MODULE$);
                        map_t.next_$eq(map_nx);
                        map_t = map_nx;
                     }

                     Statics.releaseFence();
                     var15 = map_h;
                  }

                  Object var8 = null;
                  Object var9 = null;
                  Object var10 = null;
                  Object var11 = null;
                  Object var12 = null;
                  sym.setInfo(var10001.upper(var10002.glb((List)var15)));
                  this.scala$reflect$runtime$JavaMirrors$JavaMirror$TypeParamCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().markAllCompleted(sym);
               }
            }
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$TypeParamCompleter$$$outer() {
            return this.$outer;
         }

         // $FF: synthetic method
         public static final Types.Type $anonfun$complete$1(final TypeParamCompleter $this, final Type jtpe) {
            return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$TypeParamCompleter$$$outer().typeToScala(jtpe);
         }

         public TypeParamCompleter(final TypeVariable jtvar) {
            this.jtvar = jtvar;
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
            }
         }
      }

      private class jClassOps {
         private final Class clazz;
         // $FF: synthetic field
         public final JavaMirror $outer;

         public Class clazz() {
            return this.clazz;
         }

         public int javaFlags() {
            return JavaAccFlags$.MODULE$.apply(this.clazz());
         }

         public long scalaFlags() {
            return JavaAccFlags$.MODULE$.toScalaFlags$extension(this.javaFlags());
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$jClassOps$$$outer() {
            return this.$outer;
         }

         public jClassOps(final Class clazz) {
            this.clazz = clazz;
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
            }
         }
      }

      private class jMemberOps {
         private final Member member;
         // $FF: synthetic field
         public final JavaMirror $outer;

         public Member member() {
            return this.member;
         }

         public int javaFlags() {
            return JavaAccFlags$.MODULE$.apply(this.member());
         }

         public long scalaFlags() {
            return JavaAccFlags$.MODULE$.toScalaFlags$extension(this.javaFlags());
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$jMemberOps$$$outer() {
            return this.$outer;
         }

         public jMemberOps(final Member member) {
            this.member = member;
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
            }
         }
      }

      private class FromJavaClassCompleter extends Types.LazyType implements JavaClassCompleter, Types.FlagAgnosticCompleter {
         public final Symbols.Symbol scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz;
         public final Symbols.Symbol scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module;
         private final Class jclazz;
         private final long flags;
         private int parentsLevel;
         private List pendingLoadActions;
         private final List relatedSymbols;
         // $FF: synthetic field
         public final JavaMirror $outer;

         public long flags() {
            return this.flags;
         }

         public void load(final Symbols.Symbol sym) {
            boolean var25;
            scala.reflect.internal.SymbolTable var10000;
            label88: {
               label91: {
                  this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().debugInfo(() -> {
                     StringBuilder var10000 = (new StringBuilder(22)).append("completing from Java ").append(sym).append("/");
                     Symbols.Symbol var10001 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz;
                     if (var10001 == null) {
                        throw null;
                     } else {
                        return var10000.append(var10001.fullName('.')).toString();
                     }
                  });
                  var10000 = (scala.reflect.internal.SymbolTable)this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
                  Symbols.Symbol var2 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz;
                  if (sym == null) {
                     if (var2 == null) {
                        break label91;
                     }
                  } else if (sym.equals(var2)) {
                     break label91;
                  }

                  label92: {
                     Symbols.Symbol var10001 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module;
                     Symbols.NoSymbol var3 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoSymbol();
                     if (var10001 == null) {
                        if (var3 == null) {
                           break label92;
                        }
                     } else if (var10001.equals(var3)) {
                        break label92;
                     }

                     Symbols.Symbol var4 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module;
                     if (sym == null) {
                        if (var4 == null) {
                           break label91;
                        }
                     } else if (sym.equals(var4)) {
                        break label91;
                     }

                     Symbols.Symbol var5 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module.moduleClass();
                     if (sym == null) {
                        if (var5 == null) {
                           break label91;
                        }
                     } else if (sym.equals(var5)) {
                        break label91;
                     }
                  }

                  var25 = false;
                  break label88;
               }

               var25 = true;
            }

            boolean assert_assertion = var25;
            if (var10000 == null) {
               throw null;
            } else {
               scala.reflect.internal.SymbolTable assert_this = var10000;
               if (!assert_assertion) {
                  throw assert_this.throwAssertionError(sym);
               } else {
                  assert_this = null;
                  this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$assignAssociatedFile(this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz, this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module, this.jclazz);
                  ((PrivateWithin)this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).propagatePackageBoundary((Class)this.jclazz, this.relatedSymbols);
                  this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$copyAnnotations(this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz, this.jclazz);
                  Symbols.Symbol var22 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz;
                  LazyPolyType var26 = new LazyPolyType;
                  scala.collection.mutable.ArraySeq.ofRef var10004 = scala.Predef..MODULE$.wrapRefArray(this.jclazz.getTypeParameters());
                  if (var10004 == null) {
                     throw null;
                  } else {
                     List var28 = IterableOnceOps.toList$(var10004);
                     if (var28 == null) {
                        throw null;
                     } else {
                        List map_this = var28;
                        Object var29;
                        if (map_this == scala.collection.immutable.Nil..MODULE$) {
                           var29 = scala.collection.immutable.Nil..MODULE$;
                        } else {
                           TypeVariable var14 = (TypeVariable)map_this.head();
                           scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon($anonfun$load$3(this, var14), scala.collection.immutable.Nil..MODULE$);
                           scala.collection.immutable..colon.colon map_t = map_h;

                           for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                              var14 = (TypeVariable)map_rest.head();
                              scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon($anonfun$load$3(this, var14), scala.collection.immutable.Nil..MODULE$);
                              map_t.next_$eq(map_nx);
                              map_t = map_nx;
                           }

                           Statics.releaseFence();
                           var29 = map_h;
                        }

                        Object var16 = null;
                        Object var17 = null;
                        Object var18 = null;
                        Object var19 = null;
                        Object var20 = null;
                        var26.<init>((List)var29);
                        var22.setInfo(var26);
                        var22 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module;
                        Symbols.NoSymbol var6 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoSymbol();
                        if (var22 == null) {
                           if (var6 == null) {
                              return;
                           }
                        } else if (var22.equals(var6)) {
                           return;
                        }

                        var22 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module;
                        Symbols.Symbol var27 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module.moduleClass();
                        if (var27 == null) {
                           throw null;
                        } else {
                           var22.setInfo(var27.tpe_$times());
                           this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module.moduleClass().setInfo(new LazyPolyType(scala.collection.immutable.Nil..MODULE$));
                        }
                     }
                  }
               }
            }
         }

         public void complete(final Symbols.Symbol sym) {
            this.load(sym);
            this.completeRest();
            this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().markAllCompleted(this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz, this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module);
         }

         public void completeRest() {
            SymbolTable var10000 = this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer();
            if (var10000 == null) {
               throw null;
            } else {
               Gil gilSynchronized_this = var10000;
               if (gilSynchronized_this.isCompilerUniverse()) {
                  $anonfun$completeRest$1(this);
               } else {
                  try {
                     gilSynchronized_this.scala$reflect$runtime$Gil$$gil().lock();
                     $anonfun$completeRest$1(this);
                  } finally {
                     gilSynchronized_this.scala$reflect$runtime$Gil$$gil().unlock();
                  }

               }
            }
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer() {
            return this.$outer;
         }

         // $FF: synthetic method
         public static final Symbols.Symbol $anonfun$load$2(final Symbols.Symbol sym$4) {
            return sym$4;
         }

         // $FF: synthetic method
         public static final Symbols.TypeSymbol $anonfun$load$3(final FromJavaClassCompleter $this, final TypeVariable jtvar) {
            return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$createTypeParameter(jtvar);
         }

         // $FF: synthetic method
         public static final Types.Type $anonfun$completeRest$2(final FromJavaClassCompleter $this, final Type jtpe) {
            return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().typeToScala(jtpe);
         }

         private final Symbols.Symbol enter$1(final Symbols.Symbol sym, final int mods) {
            return this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$followStatic(this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz, this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module, mods).info().decls().enter(sym);
         }

         private final void enterEmptyCtorIfNecessary$1() {
            if (this.jclazz.getConstructors().length == 0) {
               this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz.info().decls().enter(this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz.newClassConstructor(((Positions)this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).NoPosition()));
            }
         }

         // $FF: synthetic method
         public static final Symbols.ClassSymbol $anonfun$completeRest$3(final FromJavaClassCompleter $this, final Class jinner) {
            return $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$jclassAsScala(jinner);
         }

         // $FF: synthetic method
         public static final Symbols.Symbol $anonfun$completeRest$5(final FromJavaClassCompleter $this, final Field f) {
            Symbols.TermSymbol var10001 = $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$jfieldAsScala(f);
            JavaMirror var10002 = $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer();
            if (var10002 == null) {
               throw null;
            } else {
               JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$$jMemberOps_this = var10002;
               jMemberOps var4 = scala$reflect$runtime$JavaMirrors$JavaMirror$$jMemberOps_this.new jMemberOps(f);
               scala$reflect$runtime$JavaMirrors$JavaMirror$$jMemberOps_this = null;
               return $this.enter$1(var10001, var4.javaFlags());
            }
         }

         // $FF: synthetic method
         public static final Symbols.Symbol $anonfun$completeRest$6(final FromJavaClassCompleter $this, final Method m) {
            Symbols.MethodSymbol var10001 = $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$jmethodAsScala(m);
            JavaMirror var10002 = $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer();
            if (var10002 == null) {
               throw null;
            } else {
               JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$$jMemberOps_this = var10002;
               jMemberOps var4 = scala$reflect$runtime$JavaMirrors$JavaMirror$$jMemberOps_this.new jMemberOps(m);
               scala$reflect$runtime$JavaMirrors$JavaMirror$$jMemberOps_this = null;
               return $this.enter$1(var10001, var4.javaFlags());
            }
         }

         // $FF: synthetic method
         public static final Symbols.Symbol $anonfun$completeRest$7(final FromJavaClassCompleter $this, final Constructor c) {
            Symbols.MethodSymbol var10001 = $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$jconstrAsScala(c);
            JavaMirror var10002 = $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer();
            if (var10002 == null) {
               throw null;
            } else {
               JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$$jMemberOps_this = var10002;
               jMemberOps var4 = scala$reflect$runtime$JavaMirrors$JavaMirror$$jMemberOps_this.new jMemberOps(c);
               scala$reflect$runtime$JavaMirrors$JavaMirror$$jMemberOps_this = null;
               return $this.enter$1(var10001, var4.javaFlags());
            }
         }

         // $FF: synthetic method
         public static final void $anonfun$completeRest$1(final FromJavaClassCompleter $this) {
            List tparams = $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz.rawInfo().typeParams();

            scala.collection.immutable..colon.colon var35;
            try {
               ++$this.parentsLevel;
               Type jsuperclazz = $this.jclazz.getGenericSuperclass();
               scala.collection.mutable.ArraySeq.ofRef var10000 = scala.Predef..MODULE$.wrapRefArray($this.jclazz.getGenericInterfaces());
               if (var10000 == null) {
                  throw null;
               }

               List var33 = IterableOnceOps.toList$(var10000);
               if (var33 == null) {
                  throw null;
               }

               List map_this = var33;
               Object var34;
               if (map_this == scala.collection.immutable.Nil..MODULE$) {
                  var34 = scala.collection.immutable.Nil..MODULE$;
               } else {
                  Type var20 = (Type)map_this.head();
                  scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon($anonfun$completeRest$2($this, var20), scala.collection.immutable.Nil..MODULE$);
                  scala.collection.immutable..colon.colon map_t = map_h;

                  for(List map_rest = (List)map_this.tail(); map_rest != scala.collection.immutable.Nil..MODULE$; map_rest = (List)map_rest.tail()) {
                     var20 = (Type)map_rest.head();
                     scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon($anonfun$completeRest$2($this, var20), scala.collection.immutable.Nil..MODULE$);
                     map_t.next_$eq(map_nx);
                     map_t = map_nx;
                  }

                  Statics.releaseFence();
                  var34 = map_h;
               }

               Object var24 = null;
               Object var25 = null;
               Object var26 = null;
               Object var27 = null;
               Object var28 = null;
               List ifaces = (List)var34;
               if ($this.jclazz.isInterface()) {
                  Types.Type var5 = ((Definitions)$this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().ObjectTpe();
                  var35 = new scala.collection.immutable..colon.colon(var5, ifaces);
               } else {
                  Types.Type var6 = jsuperclazz == null ? ((Definitions)$this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer()).definitions().AnyTpe() : $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().typeToScala(jsuperclazz);
                  var35 = new scala.collection.immutable..colon.colon(var6, ifaces);
               }
            } finally {
               --$this.parentsLevel;
            }

            label141: {
               List parents = var35;
               $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz.setInfo($this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().GenPolyType().apply(tparams, (scala.reflect.internal.SymbolTable)$this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().new ClassInfoType(parents, (Scopes.Scope)$this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().newScope(), $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz)));
               Symbols.Symbol var36 = $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module;
               Symbols.NoSymbol var8 = $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoSymbol();
               if (var36 == null) {
                  if (var8 == null) {
                     break label141;
                  }
               } else if (var36.equals(var8)) {
                  break label141;
               }

               $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module.moduleClass().setInfo((scala.reflect.internal.SymbolTable)$this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().new ClassInfoType(scala.collection.immutable.Nil..MODULE$, (Scopes.Scope)$this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().newScope(), $this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module.moduleClass()));
            }

            for(Object var21 : $this.jclazz.getDeclaredClasses()) {
               $anonfun$completeRest$3($this, (Class)var21);
            }

            Object var29 = null;
            List var10001 = $this.pendingLoadActions;
            JFunction0.mcV.sp $colon$colon_elem = () -> {
               for(Object var10 : $this.jclazz.getDeclaredFields()) {
                  $anonfun$completeRest$5($this, (Field)var10);
               }

               Object var13 = null;

               for(Object var11 : $this.jclazz.getDeclaredMethods()) {
                  $anonfun$completeRest$6($this, (Method)var11);
               }

               Object var14 = null;

               for(Object var12 : $this.jclazz.getConstructors()) {
                  $anonfun$completeRest$7($this, (Constructor)var12);
               }

               Object var15 = null;
               $this.enterEmptyCtorIfNecessary$1();
            };
            if (var10001 == null) {
               throw null;
            } else {
               List $colon$colon_this = var10001;
               scala.collection.immutable..colon.colon var37 = new scala.collection.immutable..colon.colon($colon$colon_elem, $colon$colon_this);
               Object var30 = null;
               Object var31 = null;
               $this.pendingLoadActions = var37;
               if ($this.parentsLevel == 0) {
                  while($this.pendingLoadActions.nonEmpty()) {
                     Function0 item = (Function0)$this.pendingLoadActions.head();
                     $this.pendingLoadActions = (List)$this.pendingLoadActions.tail();
                     item.apply$mcV$sp();
                  }

               }
            }
         }

         public FromJavaClassCompleter(final Symbols.Symbol clazz, final Symbols.Symbol module, final Class jclazz) {
            this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz = clazz;
            this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module = module;
            this.jclazz = jclazz;
            if (JavaMirror.this == null) {
               throw null;
            } else {
               label31: {
                  this.$outer = JavaMirror.this;
                  super();
                  this.flags = (JavaMirror.this.new jClassOps(jclazz)).scalaFlags();
                  clazz.setFlag(this.flags() | 1048576L);
                  Symbols.NoSymbol var5 = JavaMirror.this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoSymbol();
                  if (module == null) {
                     if (var5 == null) {
                        break label31;
                     }
                  } else if (module.equals(var5)) {
                     break label31;
                  }

                  module.setFlag(this.flags() & 4L | 1048576L);
                  module.moduleClass().setFlag(this.flags() & 4L | 1048576L);
               }

               Object var10001;
               label25: {
                  label24: {
                     JavaMirror.this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().markFlagsCompleted(clazz, module, -1L);
                     this.parentsLevel = 0;
                     this.pendingLoadActions = scala.collection.immutable.Nil..MODULE$;
                     Symbols.NoSymbol var6 = JavaMirror.this.scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().NoSymbol();
                     if (module == null) {
                        if (var6 != null) {
                           break label24;
                        }
                     } else if (!module.equals(var6)) {
                        break label24;
                     }

                     var10001 = scala.collection.immutable.Nil..MODULE$;
                     break label25;
                  }

                  var10001 = new scala.collection.immutable..colon.colon(module, new scala.collection.immutable..colon.colon(module.moduleClass(), scala.collection.immutable.Nil..MODULE$));
               }

               this.relatedSymbols = (List)((SeqOps)var10001).prepended(clazz);
            }
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }

         public class LazyPolyType extends Types.LazyType implements Types.FlagAgnosticCompleter {
            private final List typeParams;
            // $FF: synthetic field
            public final FromJavaClassCompleter $outer;

            public List typeParams() {
               return this.typeParams;
            }

            public void complete(final Symbols.Symbol sym) {
               this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$LazyPolyType$$$outer().completeRest();
               this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$LazyPolyType$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$$$outer().markAllCompleted(this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$LazyPolyType$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$clazz, this.scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$LazyPolyType$$$outer().scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$$module);
            }

            // $FF: synthetic method
            public FromJavaClassCompleter scala$reflect$runtime$JavaMirrors$JavaMirror$FromJavaClassCompleter$LazyPolyType$$$outer() {
               return this.$outer;
            }

            public LazyPolyType(final List typeParams) {
               this.typeParams = typeParams;
               if (FromJavaClassCompleter.this == null) {
                  throw null;
               } else {
                  this.$outer = FromJavaClassCompleter.this;
                  super();
               }
            }
         }
      }

      public class RichClass {
         private final Class jclazz;
         // $FF: synthetic field
         public final JavaMirror $outer;

         public boolean isLocalClass0() {
            return this.jclazz.getEnclosingClass() != null && !this.jclazz.isMemberClass();
         }

         // $FF: synthetic method
         public JavaMirror scala$reflect$runtime$JavaMirrors$JavaMirror$RichClass$$$outer() {
            return this.$outer;
         }

         public RichClass(final Class jclazz) {
            this.jclazz = jclazz;
            if (JavaMirror.this == null) {
               throw null;
            } else {
               this.$outer = JavaMirror.this;
               super();
            }
         }
      }
   }

   public interface JavaClassCompleter {
   }
}
