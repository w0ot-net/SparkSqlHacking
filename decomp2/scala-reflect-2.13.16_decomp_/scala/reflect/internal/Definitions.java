package scala.reflect.internal;

import java.io.Serializable;
import java.lang.annotation.Inherited;
import java.lang.annotation.Repeatable;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.invoke.SerializedLambda;
import java.lang.ref.SoftReference;
import java.util.HashMap;
import scala.Array;
import scala.DelayedInit;
import scala.DummyImplicit;
import scala.Dynamic;
import scala.Function0;
import scala.Function1;
import scala.MatchError;
import scala.None;
import scala.Option;
import scala.PartialFunction;
import scala.Predef;
import scala.Product;
import scala.SerialVersionUID;
import scala.Some;
import scala.Specializable;
import scala.StringContext;
import scala.Symbol;
import scala.Tuple2;
import scala.Tuple3;
import scala.UninitializedFieldError;
import scala.deprecated;
import scala.deprecatedInheritance;
import scala.deprecatedName;
import scala.deprecatedOverriding;
import scala.inline;
import scala.native;
import scala.noinline;
import scala.specialized;
import scala.throws;
import scala.transient;
import scala.unchecked;
import scala.volatile;
import scala.annotation.Annotation;
import scala.annotation.StaticAnnotation;
import scala.annotation.TypeConstraint;
import scala.annotation.elidable;
import scala.annotation.implicitNotFound;
import scala.annotation.migration;
import scala.annotation.strictfp;
import scala.annotation.switch;
import scala.annotation.tailrec;
import scala.annotation.unspecialized;
import scala.annotation.unused;
import scala.annotation.varargs;
import scala.annotation.meta.beanGetter;
import scala.annotation.meta.beanSetter;
import scala.annotation.meta.companionClass;
import scala.annotation.meta.companionMethod;
import scala.annotation.meta.companionObject;
import scala.annotation.meta.field;
import scala.annotation.meta.getter;
import scala.annotation.meta.languageFeature;
import scala.annotation.meta.param;
import scala.annotation.meta.setter;
import scala.annotation.unchecked.uncheckedStable;
import scala.annotation.unchecked.uncheckedVariance;
import scala.beans.BeanProperty;
import scala.beans.BooleanBeanProperty;
import scala.collection.AbstractIterable;
import scala.collection.Iterable;
import scala.collection.IterableFactory;
import scala.collection.IterableOnce;
import scala.collection.IterableOnceOps;
import scala.collection.Iterator;
import scala.collection.LinearSeq;
import scala.collection.MapFactory;
import scala.collection.MapOps;
import scala.collection.SeqFactory;
import scala.collection.SeqOps;
import scala.collection.SetOps;
import scala.collection.StrictOptimizedIterableOps;
import scala.collection.StringOps;
import scala.collection.immutable.ArraySeq;
import scala.collection.immutable.IndexedSeq;
import scala.collection.immutable.List;
import scala.collection.immutable.Map;
import scala.collection.immutable.Nil;
import scala.collection.immutable.Range;
import scala.collection.immutable.Seq;
import scala.collection.immutable.Set;
import scala.collection.immutable.Nil.;
import scala.collection.mutable.AnyRefMap;
import scala.collection.mutable.Builder;
import scala.collection.mutable.HashSet;
import scala.concurrent.Future;
import scala.concurrent.Promise;
import scala.math.ScalaNumber;
import scala.reflect.ClassManifestFactory;
import scala.reflect.ClassTag;
import scala.reflect.Manifest;
import scala.reflect.ManifestFactory;
import scala.reflect.NoManifest;
import scala.reflect.OptManifest;
import scala.reflect.ScalaLongSignature;
import scala.reflect.ScalaSignature;
import scala.reflect.package;
import scala.reflect.api.StandardDefinitions;
import scala.reflect.api.TypeTags;
import scala.reflect.internal.util.Collections;
import scala.reflect.internal.util.NoPosition$;
import scala.reflect.internal.util.Position;
import scala.reflect.internal.util.StripMarginInterpolator;
import scala.reflect.internal.util.package$;
import scala.reflect.macros.internal.macroImpl;
import scala.runtime.AbstractPartialFunction;
import scala.runtime.BoxedUnit;
import scala.runtime.BoxesRunTime;
import scala.runtime.EmptyMethodCache;
import scala.runtime.MethodCache;
import scala.runtime.ModuleSerializationProxy;
import scala.runtime.NonLocalReturnControl;
import scala.runtime.Nothing;
import scala.runtime.Null;
import scala.runtime.ObjectRef;
import scala.runtime.RichInt;
import scala.runtime.ScalaRunTime;
import scala.runtime.Statics;
import scala.runtime.VolatileObjectRef;
import scala.util.Failure;
import scala.util.Success;
import scala.util.Try;
import scala.util.control.NonFatal;

@ScalaSignature(
   bytes = "\u0006\u0005IUf\u0001DC<\u000bs\u0002\n1!\u0001\u0006\bJ=\u0006bBCO\u0001\u0011\u0005QqT\u0004\b\u000bO\u0003\u0001\u0012ACU\r\u001d)i\u000b\u0001E\u0001\u000b_Cqa\"\u0011\u0004\t\u0003\u0011Z'\u0002\u0004\u0010\u0000\u0002!\u0001\u0013\u0001\u0005\b%[\u0002A\u0011\u0002J8\u0011%\u0011J\bAI\u0001\n\u0013\u0011Z\bC\u0004\u0013\u0000\u0001!IA%!\t\u000fIM\u0005\u0001\"\u0003\u0013\u0016\"I!\u0013\u0015\u0001\u0012\u0002\u0013%!3\u0010\u0005\b%G\u0003A\u0011\u0002JS\r-)y\f\u0001I\u0001\u0004\u0003)\t-\"-\t\u000f\u0015uE\u0002\"\u0001\u0006 \"IQ1\u0019\u0007CB\u0013%QQ\u0019\u0005\n\u000bOd!\u0019)C\u0005\u000bSDq!b=\r\t\u0013))\u0010C\u0004\u0007\f1!IA\"\u0004\t\u000f\u0019uC\u0002\"\u0003\u0007`!9a1\u0010\u0007\u0005\n\u0019u\u0004B\u0003DI\u0019!\u0015\r\u0011\"\u0001\u0007\u0014\"Qaq\u0013\u0007\t\u0006\u0004%\tA\"'\t\u0015\u0019uE\u0002#b\u0001\n\u00031y\n\u0003\u0006\u0007*2A)\u0019!C\u0001\rWC!Bb,\r\u0011\u000b\u0007I\u0011\u0001DV\u0011)1\t\f\u0004EC\u0002\u0013\u0005a1\u0016\u0005\u000b\rgc\u0001R1A\u0005\u0002\u0019U\u0006B\u0003D]\u0019!\u0015\r\u0011\"\u0001\u0007<\"QaQ\u0018\u0007\t\u0006\u0004%\tAb/\t\u0015\u0019}F\u0002#b\u0001\n\u00031Y\f\u0003\u0006\u0007B2A)\u0019!C\u0001\r\u0007DqAb3\r\t\u00031i\rC\u0004\u0007X2!\tA\"7\t\u000f\u0019}G\u0002\"\u0001\u0007b\"QaQ\u001d\u0007\t\u0006\u0004%\tAb:\t\u0015\u0019%H\u0002#b\u0001\n\u000319\u000f\u0003\u0006\u0007l2A)\u0019!C\u0001\rOD!B\"<\r\u0011\u000b\u0007I\u0011\u0001Dt\u0011)1y\u000f\u0004EC\u0002\u0013\u0005aq\u001d\u0005\u000b\rcd\u0001R1A\u0005\u0002\u0019\u001d\bB\u0003Dz\u0019!\u0015\r\u0011\"\u0001\u0007h\"QaQ\u001f\u0007\t\u0006\u0004%\tAb:\t\u0015\u0019]H\u0002#b\u0001\n\u000319\u000fC\u0004\u0007z2!\tAb?\t\u000f\u001d\rA\u0002\"\u0001\u0007|\"9qQ\u0001\u0007\u0005\u0002\u0019m\bBCD\u0004\u0019!\u0015\r\u0011\"\u0001\b\n!QqQ\u0003\u0007\t\u0006\u0004%\ta\"\u0003\t\u0015\u001d]A\u0002#b\u0001\n\u00039I\u0001\u0003\u0006\b\u001a1A)\u0019!C\u0001\u000f\u0013A!bb\u0007\r\u0011\u000b\u0007I\u0011AD\u0005\u0011)9i\u0002\u0004EC\u0002\u0013\u0005q\u0011\u0002\u0005\u000b\u000f?a\u0001R1A\u0005\u0002\u001d%\u0001BCD\u0011\u0019!\u0015\r\u0011\"\u0001\b\n!Qq1\u0005\u0007\t\u0006\u0004%\ta\"\u0003\t\u0015\u001d\u0015B\u0002#b\u0001\n\u000399\u0003\u0003\u0006\b.1A)\u0019!C\u0001\u000fOA!bb\f\r\u0011\u000b\u0007I\u0011AD\u0019\u0011)9)\u0004\u0004EC\u0002\u0013\u0005qq\u0007\u0005\u000b\u000f/b\u0001R1A\u0005\u0002\u001d]bABD\u001f\u0019\t9y\u0004\u0003\u0006\u0007Dq\u0012\t\u0011)A\u0005\r\u000bBqa\"\u0011=\t\u00039\u0019\u0005\u0003\u0005\bHq\u0002\u000b\u0011BD%\u0011!9y\u0005\u0010Q\u0001\n\u0019\u0015\u0002bBD)y\u0011\u0015q1\u000b\u0005\b\u000f3bA\u0011AD\u0019\u0011)9Y\u0006\u0004EC\u0002\u0013\u0005a1\u0019\u0005\b\u000f;bA\u0011AD0\u001119)\u0007\u0004B\u0001\u0002\u0003%\t\u0001AD4\u001119I\u0007\u0004B\u0001\u0002\u0003%\t\u0001AD6\r\u001d)\u0019\fAA\u0001\u000bkCqa\"\u0011H\t\u00039I\b\u0003\u0005\b|\u001d\u0003\u000b\u0015\u0002D9\u0011\u001d9ih\u0012C\u0001\u000f\u007fB!b\"!H\u0011\u000b\u0007I\u0011ADB\u0011)9)i\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u000f\u000f;\u0005R1A\u0005\u0002\u001d\r\u0005BCDE\u000f\"\u0015\r\u0011\"\u0001\u0007h\"Qq1R$\t\u0006\u0004%\tAb/\t\u0015\u001d5u\t#b\u0001\n\u00039\u0019\t\u0003\u0006\b\u0010\u001eC)\u0019!C\u0001\rODqa\"%H\t\u00039\u0019\nC\u0004\b(\u001e#\ta\"+\t\u000f\u001d]v\t\"\u0001\b:\"9qqX$\u0005\u0002\u001d\u0005\u0007bBDe\u000f\u0012\u0005q1\u001a\u0005\b\u000f;<E\u0011ADp\u0011\u001d9\u0019o\u0012C\u0001\u000fKDqa\";H\t\u00039Y\u000fC\u0004\bp\u001e#\ta\"=\t\u000f\u001dUx\t\"\u0001\bx\"9q1`$\u0005\u0002\u001du\bb\u0002E\u0001\u000f\u0012%\u00012\u0001\u0005\u000b\u0011\u00139\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003E\u0006\u000f\"\u0015\r\u0011\"\u0001\t\u000e!Q\u0001RC$\t\u0006\u0004%\tAb:\t\u0015!]q\t#b\u0001\n\u00039I\u0001\u0003\u0006\t\u001a\u001dC)\u0019!C\u0001\u000f\u0013A!\u0002c\u0007H\u0011\u000b\u0007I\u0011AD\u0005\u0011)Aib\u0012EC\u0002\u0013\u0005q\u0011\u0002\u0005\u000b\u0011?9\u0005R1A\u0005\u0002\u001d%\u0001B\u0003E\u0011\u000f\"\u0015\r\u0011\"\u0001\b\n!Q\u00012E$\t\u0006\u0004%\ta\"\u0003\t\u0015!\u0015r\t#b\u0001\n\u0003A9\u0003\u0003\u0006\t0\u001dC)\u0019!C\u0001\u000f\u0013A!\u0002#\rH\u0011\u000b\u0007I\u0011AD\u0005\u0011)A\u0019d\u0012EC\u0002\u0013\u0005q\u0011\u0002\u0005\u000b\u0011k9\u0005R1A\u0005\u0002!]\u0002B\u0003E \u000f\"\u0015\r\u0011\"\u0001\t8!Q\u0001\u0012I$\t\u0006\u0004%\t\u0001c\u000e\t\u0015!\rs\t#b\u0001\n\u000319\u000fC\u0004\tF\u001d#\tAb?\t\u0015!\u001ds\t#b\u0001\n\u000319\u000f\u0003\u0006\tJ\u001dC)\u0019!C\u0001\rO4q\u0001c\u0013H\u0003CAi\u0005\u0003\u0006\u0007\u0004M\u0014\t\u0011)A\u0005\r\u000bA!\u0002c\u0014t\u0005\u0003\u0005\u000b\u0011\u0002D\u0013\u0011\u001d9\te\u001dC\u0001\u0011#Bq\u0001c\u0017t\t\u000b:y\bC\u0004\t^M$)\u0005c\u0018\b\u000f!%u\t#\u0002\tt\u00199\u0001RN$\t\u0006!=\u0004bBD!u\u0012\u0005\u0001\u0012\u000f\u0005\b\u0011kRH\u0011\tE<\u000f\u001dAYi\u0012E\u0003\u0011\u00073q\u0001# H\u0011\u000bAy\bC\u0004\bBy$\t\u0001#!\t\u000f!Ud\u0010\"\u0011\t\u0006\"Q\u0001RR$\t\u0006\u0004%\tAb:\t\u0015!=u\t#b\u0001\n\u000319\u000f\u0003\u0006\t\u0012\u001eC)\u0019!C\u0001\rOD!\u0002c%H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)A)j\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u0011/;\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003EM\u000f\"\u0015\r\u0011\"\u0001\u0007h\"Q\u00012T$\t\u0006\u0004%\tAb:\t\u0015!uu\t#b\u0001\n\u000319\u000f\u0003\u0006\t \u001eC)\u0019!C\u0001\rOD!\u0002#)H\u0011\u000b\u0007I\u0011\u0001D^\u0011)A\u0019k\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u0011K;\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003ET\u000f\"\u0015\r\u0011\"\u0001\u0007h\"Q\u0001\u0012V$\t\u0006\u0004%\tAb:\t\u0015!-v\t#b\u0001\n\u00031Y\f\u0003\u0006\t.\u001eC)\u0019!C\u0001\rODq\u0001c,H\t\u00031Y\u0010\u0003\u0006\t2\u001eC)\u0019!C\u0001\rOD!\u0002c-H\u0011\u000b\u0007I\u0011\u0001E[\u0011)AIl\u0012EC\u0002\u0013\u0005\u00012\u0018\u0005\u000b\u0011\u0003<\u0005R1A\u0005\u0002\u001d\r\u0005b\u0002Eb\u000f\u0012\u0005a1 \u0005\b\u0011\u000b<E\u0011\u0001D~\u0011\u001dA9m\u0012C\u0001\u0011\u0013Dq\u0001c4H\t\u0003A\t\u000e\u0003\u0006\tV\u001eC)\u0019!C\u0001\u000f\u0007C!\u0002c6H\u0011\u000b\u0007I\u0011ADB\u0011)AIn\u0012EC\u0002\u0013\u0005q1\u0011\u0005\b\u00117<E\u0011\u0001D~\u0011)Ain\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u0011?<\u0005R1A\u0005\u0002!\u0005\bb\u0002Es\u000f\u0012\u0005a1 \u0005\u000b\u0011O<\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003Eu\u000f\"\u0015\r\u0011\"\u0001\u0007h\"Q\u00012^$\t\u0006\u0004%\t\u0001#<\t\u0015!Ex\t#b\u0001\n\u000319\u000f\u0003\u0006\tt\u001eC)\u0019!C\u0001\rOD!\u0002#>H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)A9p\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u0011s<\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003E~\u000f\"\u0015\r\u0011\"\u0001\u0007h\"Q\u0001R`$\t\u0006\u0004%\tAb:\t\u0015!}x\t#b\u0001\n\u00031Y\f\u0003\u0006\n\u0002\u001dC)\u0019!C\u0001\rOD!\"c\u0001H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)I)a\u0012EC\u0002\u0013\u0005aq\u001d\u0005\b\u0013\u000f9E\u0011AE\u0005\u0011\u001dIia\u0012C\u0001\u0013\u001fAq!c\u0005H\t\u0003I)\u0002C\u0004\n\u001a\u001d#\t!c\u0007\t\u000f%}q\t\"\u0001\n\"!9\u0011rE$\u0005\u0002%%\u0002bBE\u0017\u000f\u0012\u0005\u0011r\u0006\u0005\b\u0013g9E\u0011AE\u001b\u0011\u001dIId\u0012C\u0001\u0013wAq!#\u0011H\t\u0003I\u0019\u0005C\u0004\nR\u001d#\t!c\u0015\t\u000f%]s\t\"\u0001\nZ!9\u0011RL$\u0005\u0002%}\u0003bBE4\u000f\u0012\u0005\u0011\u0012\u000e\u0005\b\u0013[:E\u0011AE8\u0011\u001dI9h\u0012C\u0003\u0013sBq!c#H\t\u0003Ii\tC\u0004\n\u0012\u001e#\t!c%\t\u000f%]u\t\"\u0001\n\u001a\"9\u0011RT$\u0005\u0002%}\u0005bBER\u000f\u0012\u0005\u0011R\u0015\u0005\b\u0013S;E\u0011AEV\u0011\u001dIyk\u0012C\u0001\u0013cCq!#/H\t\u0003IY\f\u0003\u0006\nD\u001eC)\u0019!C\u0001\rOD!\"#2H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)I9m\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u0013\u0013<\u0005R1A\u0005\u0002\u0019\u001d\bBCEf\u000f\"\u0015\r\u0011\"\u0001\u0007h\"Q\u0011RZ$\t\u0006\u0004%\tAb:\t\u0015%=w\t#b\u0001\n\u000319\u000fC\u0004\nR\u001e#\tAb?\t\u0015%Mw\t#b\u0001\n\u000319\u000f\u0003\u0006\nj\u001eC)\u0019!C\u0001\u000f\u0007C!\"c;H\u0011\u000b\u0007I\u0011AEw\u0011)I)p\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u0013o<\u0005R1A\u0005\u0002\u0019\u001d\bBCE}\u000f\"\u0015\r\u0011\"\u0001\u0007h\"9\u00112`$\u0005\u0002\u0019\u001d\bB\u0003F\u0006\u000f\"\u0015\r\u0011\"\u0001\b\u0004\"9!RB$\u0005\u0002\u0019m\bB\u0003F\b\u000f\"\u0015\r\u0011\"\u0001\u0007|\"Q!\u0012C$\t\u0006\u0004%\tab!\t\u0015)Mq\t#b\u0001\n\u00031Y\u0010\u0003\u0006\u000b\u0016\u001dC)\u0019!C\u0001\u000f\u0007C!B#\bH\u0011\u000b\u0007I\u0011\u0001D~\u0011)Qyb\u0012EC\u0002\u0013\u0005q1\u0011\u0005\u000b\u0015C9\u0005R1A\u0005\u0002\u001d\r\u0005B\u0003F\u0012\u000f\"\u0015\r\u0011\"\u0001\u0007|\"9!RE$\u0005\u0002\u0019m\u0006b\u0002F\u0014\u000f\u0012\u0005!\u0012\u0006\u0005\u000b\u0015[9\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003F\u0018\u000f\"\u0015\r\u0011\"\u0001\u0007|\"Q!\u0012G$\t\u0006\u0004%\tAb?\t\u0015)Mr\t#b\u0001\n\u00031Y\u0010\u0003\u0006\u000b6\u001dC)\u0019!C\u0001\rwD!Bc\u000eH\u0011\u000b\u0007I\u0011\u0001Dt\u0011)QId\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u0015w9\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003F\u001f\u000f\"\u0015\r\u0011\"\u0001\u0007h\"9!rH$\u0005\u0002\u0019m\bb\u0002F!\u000f\u0012\u0005a1 \u0005\u000b\u0015\u0007:\u0005R1A\u0005\u0002\u0019m\u0006b\u0002F#\u000f\u0012\u0005a1 \u0005\u000b\u0015\u000f:\u0005R1A\u0005\u0002)%\u0003b\u0002F)\u000f\u0012\u0005a1\u0018\u0005\b\u0015':E\u0011\u0001D^\u0011\u001dQ)f\u0012C\u0001\rwC!Bc\u0016H\u0011\u000b\u0007I\u0011\u0001D^\u0011\u001dQIf\u0012C\u0001\rwCqAc\u0017H\t\u0003QI\u0005\u0003\u0006\u000b^\u001dC)\u0019!C\u0001\rwC!Bc\u0018H\u0011\u000b\u0007I\u0011\u0001D^\u0011)Q\tg\u0012EC\u0002\u0013\u0005q1\u0011\u0005\u000b\u0015G:\u0005R1A\u0005\u0002\u0019m\u0006B\u0003F3\u000f\"\u0015\r\u0011\"\u0001\u0007<\"9!rM$\u0005\u0002\u0019m\u0006b\u0002F5\u000f\u0012\u0005a1\u0018\u0005\u000b\u0015W:\u0005R1A\u0005\u0002\u0019m\u0006b\u0002F7\u000f\u0012\u0005a1 \u0005\u000b\u0015_:\u0005R1A\u0005\u0002\u001d\r\u0005B\u0003F9\u000f\"\u0015\r\u0011\"\u0001\u0007h\"Q!2O$\t\u0006\u0004%\tab!\t\u0015)Ut\t#b\u0001\n\u000319\u000f\u0003\u0006\u000bx\u001dC)\u0019!C\u0001\u000f\u0007C!B#\u001fH\u0011\u000b\u0007I\u0011\u0001D^\u0011)QYh\u0012EC\u0002\u0013\u0005a1\u0018\u0005\b\u0015{:E\u0011\u0001D^\u0011\u001dQyh\u0012C\u0001\rwCqA#!H\t\u00031Y\f\u0003\u0006\u000b\u0004\u001eC)\u0019!C\u0001\u000f\u0007C!B#\"H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)Q9i\u0012EC\u0002\u0013\u0005a1\u0018\u0005\u000b\u0015\u0013;\u0005R1A\u0005\u0002\u0019m\u0006B\u0003FF\u000f\"\u0015\r\u0011\"\u0001\u0007<\"Q!RR$\t\u0006\u0004%\tAb/\t\u0015)=u\t#b\u0001\n\u00031Y\f\u0003\u0006\u000b\u0012\u001eC)\u0019!C\u0001\rwC!Bc%H\u0011\u000b\u0007I\u0011\u0001D^\u0011)Q)j\u0012EC\u0002\u0013\u0005a1\u0018\u0005\u000b\u0015/;\u0005R1A\u0005\u0002\u0019m\u0006b\u0002FM\u000f\u0012\u0005a1\u0018\u0005\b\u00157;E\u0011\u0001D^\u0011\u001dQij\u0012C\u0001\rwCqAc(H\t\u00031Y\fC\u0004\u000b\"\u001e#\tAb/\t\u000f)\rv\t\"\u0001\u0007<\"Q!RU$\t\u0006\u0004%\tAb:\t\u0015)\u001dv\t#b\u0001\n\u000319\u000f\u0003\u0006\u000b*\u001eC)\u0019!C\u0001\rOD!Bc+H\u0011\u000b\u0007I\u0011ADB\u0011)Qik\u0012EC\u0002\u0013\u0005a1\u0018\u0005\u000b\u0015_;\u0005R1A\u0005\u0002\u0019m\u0006B\u0003FY\u000f\"\u0015\r\u0011\"\u0001\u0007<\"Q!2W$\t\u0006\u0004%\tA#.\t\u0015)\u0015x\t#b\u0001\n\u0003Q9\u000f\u0003\u0006\f\u0006\u001dC)\u0019!C\u0001\rOD!bc\u0002H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)YIa\u0012EC\u0002\u0013\u0005a1\u0018\u0005\u000b\u0017\u00179\u0005R1A\u0005\u0002\u0019m\u0006BCF\u0007\u000f\"\u0015\r\u0011\"\u0001\u0007h\"Q1rB$\t\u0006\u0004%\tab!\t\u0015-Eq\t#b\u0001\n\u000319\u000f\u0003\u0006\f\u0014\u001dC)\u0019!C\u0001\u000f\u0007C!b#\u0006H\u0011\u000b\u0007I\u0011ADB\u0011)Y9b\u0012EC\u0002\u0013\u0005aq\u001d\u0005\b\u001739E\u0011AF\u000e\u0011\u001dYId\u0012C\u0001\u0017wAqa#\u0013H\t\u0003YY\u0005C\u0004\fP\u001d#\ta#\u0015\u0007\r-Us\tAF,\u0011-1\u0019A!\u001a\u0003\u0002\u0003\u0006Iac\u0018\t\u0017-\r$Q\rB\u0001B\u0003%Q\u0011\u001d\u0005\f\u0017K\u0012)G!A!\u0002\u0013)\t\u000fC\u0006\fh\t\u0015$\u0011!Q\u0001\n-%\u0004\u0002CD!\u0005K\"\tac\u001c\t\u0013-m$Q\rQ\u0001\n\u0015\u0005\b\u0002CF?\u0005K\"Iac \t\u0015-\u0015%Q\rb\u0001\n\u0003Y9\tC\u0005\f\u0010\n\u0015\u0004\u0015!\u0003\f\n\"I1\u0012\u0013B3A\u0003%12\u0013\u0005\t\u000f#\u0012)\u0007\"\u0001\f\u0016\"A1\u0012\u0014B3\t\u0003YY\n\u0003\u0005\f \n\u0015D\u0011AFQ\u0011)YiK!\u001a\u0012\u0002\u0013\u00051rV\u0004\b\u0017\u0003<\u0005\u0012AFb\r\u001dY)f\u0012E\u0001\u0017\u000bD\u0001b\"\u0011\u0003\u0006\u0012\u00051r\u0019\u0005\u000b\u0017\u0013\u0014))%A\u0005\u0002--\u0007BCFh\u0005\u000b\u000b\n\u0011\"\u0001\fR\"I1R[$C\u0002\u0013\u00051r\u001b\u0005\t\u00173<\u0005\u0015!\u0003\u0006b\"I12\\$C\u0002\u0013\u00051r\u001b\u0005\t\u0017;<\u0005\u0015!\u0003\u0006b\"I1r\\$C\u0002\u0013\u00051r\u001b\u0005\t\u0017C<\u0005\u0015!\u0003\u0006b\"I12]$C\u0002\u0013\u00051r\u001b\u0005\t\u0017K<\u0005\u0015!\u0003\u0006b\"I1r]$C\u0002\u0013\u00051r\u001b\u0005\t\u0017S<\u0005\u0015!\u0003\u0006b\"I12^$C\u0002\u0013\u00051r\u001b\u0005\t\u0017[<\u0005\u0015!\u0003\u0006b\"Q1r^$\t\u0006\u0004%\ta#=\t\u0015-Mx\t#b\u0001\n\u0003Y\t\u0010\u0003\u0006\fv\u001eC)\u0019!C\u0001\u0017cD!bc>H\u0011\u000b\u0007I\u0011AFy\u0011\u001dYIp\u0012C\u0001\u0017wDq\u0001$\u0001H\t\u0003a\u0019\u0001C\u0004\r\f\u001d#\t\u0001$\u0004\t\u000f1Mq\t\"\u0001\r\u0016!9A2D$\u0005\u00021u\u0001b\u0002G\u0011\u000f\u0012\u0005A2\u0005\u0005\b\u0019O9E\u0011\u0001G\u0015\u0011\u001daic\u0012C\u0001\u0019_A!\u0002d\rH\u0011\u000b\u0007I\u0011\u0001Dt\u0011)a)d\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u0019o9\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003G\u001d\u000f\"\u0015\r\u0011\"\u0001\u0007h\"QA2H$\t\u0006\u0004%\tAb:\t\u00151ur\t#b\u0001\n\u00039\u0019\t\u0003\u0006\r@\u001dC)\u0019!C\u0001\rwDq\u0001$\u0011H\t\u0003a\u0019\u0005C\u0004\rH\u001d#\t\u0001$\u0013\b\u000f15s\t#\u0001\rP\u00199A\u0012K$\t\u00021M\u0003\u0002CD!\u0005#$\t\u0001$\u0016\t\u00111]#\u0011\u001bC\u0001\u00193Bq\u0001d\u0018H\t\u0003a\t\u0007C\u0004\rf\u001d#\t\u0001d\u001a\t\u000f1-t\t\"\u0003\rn!9A\u0012O$\u0005\u00021M\u0004b\u0002G<\u000f\u0012\u0005A\u0012\u0010\u0005\b\u0019{:E\u0011\u0001G@\u0011\u001da\u0019i\u0012C\u0001\u0019\u000bCq\u0001$#H\t\u0003aY\tC\u0004\r\u0010\u001e#\t\u0001$%\t\u000f1Uu\t\"\u0001\r\u0018\"9A2T$\u0005\u00021u\u0005b\u0002GQ\u000f\u0012\u0005A2\u0015\u0005\b\u0019S;E\u0011\u0001GV\u0011\u001da)l\u0012C\u0001\u0019oCq\u0001d/H\t\u0003ai\fC\u0004\rB\u001e#\t\u0001d1\t\u00131-w)%A\u0005\u000215\u0007b\u0002Gi\u000f\u0012\u0015A2\u001b\u0005\b\u0019/<E\u0011\u0001Gm\u0011\u001da\to\u0012C\u0001\u0019GDq\u0001d:H\t\u0003aI\u000f\u0003\u0006\rn\u001eC)\u0019!C\u0001\rODq\u0001d<H\t\u00031Y\u0010C\u0004\rr\u001e#\tAb?\t\u000f1Mx\t\"\u0001\u0007<\"9AR_$\u0005\u0002\u0019m\bb\u0002G|\u000f\u0012\u0005a1 \u0005\b\u0019s<E\u0011\u0001D~\u0011\u001daYp\u0012C\u0001\u0019{Dq!d\u0002H\t\u0003iI\u0001C\u0004\u000e\u0018\u001d#\t!$\u0007\t\u000f5}q\t\"\u0001\u000e\"!9QRE$\u0005\u00065\u001d\u0002bBG\u0017\u000f\u0012\u0015Qr\u0006\u0005\b\u001bk9EQAG\u001c\u0011!iYd\u0012Q!\n\u0015\u0005\b\u0002CG\u001f\u000f\u0002\u0006I!d\u0010\t\u000f5-s\t\"\u0001\u000eN!9Q\u0012K$\u0005\u00025M\u0003\u0002CG,\u000f\u0002\u0006I!$\u0017\t\u000f5}s\t\"\u0001\u000eb!9QRM$\u0005\u00025\u001d\u0004bBG6\u000f\u0012\u0005QR\u000e\u0005\b\u001bg:E\u0011AG;\u0011\u001diIh\u0012C\u0001\u001bwBq!d H\t\u0003i\t\tC\u0004\u000e\u0006\u001e#\t!d\"\t\u000f5-u\t\"\u0001\u000e\u000e\"9Q\u0012S$\u0005\u00025M\u0005bBGL\u000f\u0012\u0005Q\u0012\u0014\u0005\b\u001b;;E\u0011AGP\u0011\u001di\u0019k\u0012C\u0001\u001bKCq!$+H\t\u0013iY\u000bC\u0004\u000e@\u001e#I!$1\t\u000f5Mw\t\"\u0001\u000eV\"9Q\u0012\\$\u0005\u00025m\u0007bBGp\u000f\u0012\u0005Q\u0012\u001d\u0005\b\u001bK<E\u0011AGt\u0011)iyo\u0012EC\u0002\u0013\u0005!\u0012\n\u0005\u000b\u001bc<\u0005R1A\u0005\u0002)%\u0003BCGz\u000f\"\u0015\r\u0011\"\u0001\u000bJ!QQR_$\t\u0006\u0004%\tA#\u0013\t\u00155]x\t#b\u0001\n\u0003QI\u0005\u0003\u0006\u000ez\u001eC)\u0019!C\u0001\u0015\u0013B!\"d?H\u0011\u000b\u0007I\u0011\u0001F%\u0011)iip\u0012EC\u0002\u0013\u0005!\u0012\n\u0005\u000b\u001b\u007f<\u0005R1A\u0005\u0002)%\u0003B\u0003H\u0001\u000f\"\u0015\r\u0011\"\u0001\t<\"Qa2A$\t\u0006\u0004%\tAb1\t\u000f9\u0015q\t\"\u0001\u000f\b!9a2B$\u0005\u000295\u0001b\u0002H\n\u000f\u0012\u0005aR\u0003\u0005\b\u001d79E\u0011\u0001H\u000f\u0011\u001dq\tc\u0012C\u0001\u001dGAqAd\nH\t\u0003qI\u0003C\u0004\u000f.\u001d#\tAd\f\t\u000f9Mr\t\"\u0001\u000f6!Qa\u0012H$\t\u0006\u0004%\tA#\u0013\t\u00159mr\t#b\u0001\n\u0003QI\u0005\u0003\u0006\u000f>\u001dC)\u0019!C\u0001\u0015\u0013B!Bd\u0010H\u0011\u000b\u0007I\u0011\u0001F%\u0011)q\te\u0012EC\u0002\u0013\u0005!\u0012\n\u0005\u000b\u001d\u0007:\u0005R1A\u0005\u0002)%\u0003B\u0003H#\u000f\"\u0015\r\u0011\"\u0001\u000bJ!QarI$\t\u0006\u0004%\tA#\u0013\t\u00159%s\t#b\u0001\n\u0003QI\u0005C\u0004\u000fL\u001d#\tAb?\t\u000f95s\t\"\u0001\u0007|\"9arJ$\u0005\u0002\u0019m\bb\u0002H)\u000f\u0012\u0005a1 \u0005\b\u001d':E\u0011\u0001D~\u0011\u001dq)f\u0012C\u0001\rwDqAd\u0016H\t\u00031Y\u0010C\u0004\u000fZ\u001d#\tAb?\t\u000f9ms\t\"\u0001\u0007|\"QaRL$\t\u0006\u0004%\tAb:\t\u00159}s\t#b\u0001\n\u000319\u000f\u0003\u0006\u000fb\u001dC)\u0019!C\u0001\u000f\u0007C!Bd\u0019H\u0011\u000b\u0007I\u0011ADB\u0011)q)g\u0012EC\u0002\u0013\u0005a1\u0018\u0005\u000b\u001dO:\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003H5\u000f\"\u0015\r\u0011\"\u0001\u0007h\"Qa2N$\t\u0006\u0004%\tAb:\t\u001595t\t#b\u0001\n\u000319\u000f\u0003\u0006\u000fp\u001dC)\u0019!C\u0001\rOD!B$\u001dH\u0011\u000b\u0007I\u0011\u0001Dt\u0011)q\u0019h\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u001dk:\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003H<\u000f\"\u0015\r\u0011\"\u0001\u0007h\"Qa\u0012P$\t\u0006\u0004%\tAb:\t\u00159mt\t#b\u0001\n\u00039\u0019\tC\u0004\u000f~\u001d#\tAb?\t\u000f9}t\t\"\u0001\u0007|\"Qa\u0012Q$\t\u0006\u0004%\tAb:\t\u00159\ru\t#b\u0001\n\u00031Y\f\u0003\u0006\u000f\u0006\u001eC)\u0019!C\u0001\rOD!Bd\"H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)qIi\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u001d\u0017;\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003HG\u000f\"\u0015\r\u0011\"\u0001\u0007h\"QarR$\t\u0006\u0004%\tAb:\t\u00159Eu\t#b\u0001\n\u00031Y\f\u0003\u0006\u000f\u0014\u001eC)\u0019!C\u0001\rOD!B$&H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)q9j\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u001d3;\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003HN\u000f\"\u0015\r\u0011\"\u0001\u0007h\"QaRT$\t\u0006\u0004%\tAb/\t\u00159}u\t#b\u0001\n\u000319\u000f\u0003\u0006\u000f\"\u001eC)\u0019!C\u0001\rOD!Bd)H\u0011\u000b\u0007I\u0011\u0001D^\u0011)q)k\u0012EC\u0002\u0013\u0005a1\u0018\u0005\u000b\u001dO;\u0005R1A\u0005\u0002\u0019m\u0006B\u0003HU\u000f\"\u0015\r\u0011\"\u0001\u0007<\"Qa2V$\t\u0006\u0004%\tAb/\t\u001595v\t#b\u0001\n\u00031Y\f\u0003\u0006\u000f0\u001eC)\u0019!C\u0001\rwC!B$-H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)q\u0019l\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u001dk;\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003H\\\u000f\"\u0015\r\u0011\"\u0001\u0007<\"Qa\u0012X$\t\u0006\u0004%\tAb:\t\u00159mv\t#b\u0001\n\u000319\u000f\u0003\u0006\u000f>\u001eC)\u0019!C\u0001\rOD!Bd0H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)q\tm\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u001d\u0007<\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003Hc\u000f\"\u0015\r\u0011\"\u0001\u0007h\"QarY$\t\u0006\u0004%\tAb:\t\u00159%w\t#b\u0001\n\u0003qY\r\u0003\u0006\u000fX\u001eC)\u0019!C\u0001\rOD!B$7H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)qYn\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u001d;<\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003Hp\u000f\"\u0015\r\u0011\"\u0001\u0007<\"Qa\u0012]$\t\u0006\u0004%\tAb:\t\u00159\rx\t#b\u0001\n\u000319\u000f\u0003\u0006\u000ff\u001eC)\u0019!C\u0001\rOD!Bd:H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)qIo\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u001dW<\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003Hw\u000f\"\u0015\r\u0011\"\u0001\u0007h\"Qar^$\t\u0006\u0004%\tAb:\t\u00159Ex\t#b\u0001\n\u000319\u000f\u0003\u0006\u000ft\u001eC)\u0019!C\u0001\rOD!B$>H\u0011\u000b\u0007I\u0011\u0001Dt\u0011)q9p\u0012EC\u0002\u0013\u0005aq\u001d\u0005\u000b\u001ds<\u0005R1A\u0005\u0002\u0019\u001d\bB\u0003H~\u000f\"\u0015\r\u0011\"\u0001\u0007h\"QaR`$\t\u0006\u0004%\tAb:\t\u00159}x\t#b\u0001\n\u000319\u000f\u0003\u0006\u0010\u0002\u001dC)\u0019!C\u0001\u001f\u0007A!bd\u0002H\u0011\u000b\u0007I\u0011ADB\u0011\u001dyIa\u0012C\u0003\u001f\u0017A!b$\u0005H\u0011\u000b\u0007I\u0011\u0001Db\u0011\u001dy\u0019b\u0012C\u0001\u001f+A!b$\nH\u0011\u000b\u0007I\u0011\u0001Dt\u0011\u001dy9c\u0012C\u0005\u001fSA\u0011b$\u000fH#\u0003%Iad\u000f\t\u0013=}r)%A\u0005\n=m\u0002bBH!\u000f\u0012\u0005q2\t\u0005\n\u001f\u0013:\u0015\u0013!C\u0001\u0019\u001bDqad\u0013H\t\u0003yi\u0005C\u0004\u0010T\u001d#\ta$\u0016\t\u000f=Ms\t\"\u0002\u0010`!9q2N$\u0005\u0002=5\u0004bBH:\u000f\u0012\u0005qR\u000f\u0005\b\u001fw:E\u0011AH?\u0011\u001dy\u0019i\u0012C\u0001\u001f\u000bCqad#H\t\u0003yi\tC\u0004\u0010\u0014\u001e#\ta$&\t\u000f=mu\t\"\u0001\u0010\u001e\"9q2U$\u0005\u0002=\u0015\u0006BCHV\u000f\"\u0015\r\u0011\"\u0003\u0010.\"9qrW$\u0005\u0002=e\u0006bBH`\u000f\u0012\u0005q\u0012\u0019\u0005\b\u001f\u000f<E\u0011AHe\u0011\u001dyym\u0012C\u0005\u001f#Dqad7H\t\u0013yi\u000eC\u0004\u0010t\u001e#\ta$>\t\u000fAEq\t\"\u0001\u0011\u0014!9\u0001\u0013E$\u0005\u0002A\r\u0002b\u0002I\u0018\u000f\u0012\u0005\u0001\u0013\u0007\u0005\b!{9E\u0011\u0001I \u0011\u001d\u0001Ze\u0012C\u0001!\u001bBq\u0001%\u0017H\t\u0003\u0001Z\u0006C\u0004\u0011h\u001d#\t\u0001%\u001b\t\u0015AUt\t#b\u0001\n\u0003AY\f\u0003\u0006\u0011x\u001dC)\u0019!C\u0001!sB!\u0002%\"H\u0011\u000b\u0007I\u0011\u0001ID\u0011)\u0001Zi\u0012EC\u0002\u0013\u0005qq\u0005\u0005\u000b!\u001b;\u0005R1A\u0005\u0002A=\u0005BCI\u0004\u000f\"\u0015\r\u0011\"\u0001\t<\"Q\u0011\u0013B$\t\u0006\u0004%I\u0001c/\t\u000fE-q\t\"\u0001\u0012\u000e!9\u0011\u0013C$\u0005\u0002EM\u0001bBI\f\u000f\u0012\u0005\u0011\u0013\u0004\u0005\b#;9E\u0011AI\u0010\u0011\u001d\t\u001ac\u0012C\u0001#KA!\"%\u000bH\u0011\u000b\u0007I\u0011\u0001D^\u0011\u001d\tZc\u0012C\u0001#[Aqac\u001aH\t\u0003)yJ\u0002\u0004\u00122\u001d\u0003\u00113\u0007\u0005\f#k!\u0019J!A!\u0002\u0013yY\u0002\u0003\u0005\bB\u0011ME\u0011AI\u001c\u0011-\tj\u0004b%\t\u0006\u0004%\ta\"\u0003\t\u0017E}B1\u0013EC\u0002\u0013\u0005q\u0011\u0002\u0005\f#\u0003\"\u0019\n#b\u0001\n\u00039I\u0001C\u0006\u0012D\u0011M\u0005R1A\u0005\u0002\u001d%\u0001bCI#\t'C)\u0019!C\u0001\u000f\u0013A1\"e\u0012\u0005\u0014\"\u0015\r\u0011\"\u0001\b\n!Y\u0011\u0013\nCJ\u0011\u000b\u0007I\u0011AD\u0005\u0011-\tZ\u0005b%\t\u0006\u0004%\ta\"\u0003\t\u0017E5C1\u0013EC\u0002\u0013\u0005q\u0011\u0002\u0005\f#\u001f\"\u0019\n#b\u0001\n\u00039I\u0001C\u0006\u0012R\u0011M\u0005R1A\u0005\u0002\u001d%\u0001\u0002CI*\t'#\t!%\u0016\u0007\rEesIAI.\u0011!9\t\u0005\"-\u0005\u0002Eu\u0003\u0002CI1\tc#\t!e\u0019\t\u0017E\u001dD\u0011\u0017EC\u0002\u0013\u0005a1\u0018\u0005\f#S\"\t\f#b\u0001\n\u00031Y\u0010C\u0006\u0012l\u0011E\u0006R1A\u0005\u0002\u0019m\bbCI7\tcC)\u0019!C\u0001\rwD1\"e\u001c\u00052\"\u0015\r\u0011\"\u0001\u0007|\"Y\u0011\u0013\u000fCY\u0011\u000b\u0007I\u0011\u0001Dt\u0011!\t\u001a\b\"-\u0005\u0002EU\u0004bCI=\tcC)\u0019!C\u0001\rwC1\"e\u001f\u00052\"\u0015\r\u0011\"\u0001\u0007<\"A\u0011S\u0010CY\t\u0013\tz\b\u0003\u0005\u0012\u0004\u0012EF\u0011BIC\u0011-\tz\t\"-\t\u0006\u0004%\t!%%\t\u0017EUE\u0011\u0017EC\u0002\u0013\u0005\u0011\u0013\u0013\u0005\f#/#\t\f#b\u0001\n\u0003AY\fC\u0006\u0012\u001a\u0012E\u0006R1A\u0005\u0002!m\u0006b\u0003D}\tcC)\u0019!C\u0001\rwD1bb\u0001\u00052\"\u0015\r\u0011\"\u0001\u0007|\"YqQ\u0001CY\u0011\u000b\u0007I\u0011\u0001D~\u0011-\tZ\n\"-\t\u0006\u0004%\tAb?\t\u0017EuE\u0011\u0017EC\u0002\u0013\u0005a1\u0018\u0005\f#?#\t\f#b\u0001\n\u00031Y\fC\u0006\u000b\u000e\u0011E\u0006R1A\u0005\n\u0019m\bbCIQ\tcC)\u0019!C\u0005\rwD\u0001\"e)\u00052\u0012\u0015\u0011S\u0015\u0005\t#W#\t\f\"\u0002\u0012.\"A\u0011\u0013\u0017CY\t\u000b\t\u001a\f\u0003\u0005\u00128\u0012EF\u0011AI]\u0011-\tj\f\"-\t\u0006\u0004%\t!e0\t\u0017E\rG\u0011\u0017EC\u0002\u0013\u0005\u00012\u0018\u0005\f#\u000b$\t\f#b\u0001\n\u00031Y\fC\u0006\u0012H\u0012E\u0006R1A\u0005\u0002\u001d\r\u0005bCIe\tcC)\u0019!C\u0001\rwD1\"e3\u00052\"\u0015\r\u0011\"\u0001\u0007|\"Y\u0011S\u001aCY\u0011\u000b\u0007I\u0011\u0001D~\u0011-\tz\r\"-\t\u0006\u0004%\tAb?\t\u0017EEG\u0011\u0017EC\u0002\u0013\u0005a1 \u0005\f#'$\t\f#b\u0001\n\u00031Y\u0010C\u0006\u0012V\u0012E\u0006R1A\u0005\u0002\u0019m\bbCIl\tcC)\u0019!C\u0001\rwD1\"%7\u00052\"\u0015\r\u0011\"\u0001\u0007|\"Y\u00113\u001cCY\u0011\u000b\u0007I\u0011\u0001D~\u0011-\tj\u000e\"-\t\u0006\u0004%\t\u0001c/\t\u0017E}G\u0011\u0017EC\u0002\u0013\u0005a1 \u0005\f\u0011\u0007$\t\f#b\u0001\n\u00031Y\u0010C\u0006\u0012b\u0012E\u0006R1A\u0005\u0002\u0019m\u0006bCIr\tcC)\u0019!C\u0001\rwD1\"%:\u00052\"\u0015\r\u0011\"\u0001\u0007|\"Y\u0011s\u001dCY\u0011\u000b\u0007I\u0011\u0001D~\u0011-\tJ\u000f\"-\t\u0006\u0004%\tAb?\t\u0017E-H\u0011\u0017EC\u0002\u0013\u0005a1 \u0005\f#[$\t\f#b\u0001\n\u00031Y\u0010C\u0006\u0012p\u0012E\u0006R1A\u0005\u0002\u0019m\bbCIy\tcC)\u0019!C\u0001\rwD1\"e=\u00052\"\u0015\r\u0011\"\u0001\u0012v\"Y\u00113 CY\u0011\u000b\u0007I\u0011\u0001D~\u0011-\tj\u0010\"-\t\u0006\u0004%\tAb:\t\u0017E}H\u0011\u0017EC\u0002\u0013\u0005a1\u0018\u0005\f%\u0003!\t\f#b\u0001\n\u00031Y\fC\u0006\u0013\u0004\u0011E\u0006R1A\u0005\u0002\u0019m\u0006b\u0003J\u0003\tcC)\u0019!C\u0001\rwC1B#(\u00052\"\u0015\r\u0011\"\u0001\u0007<\"Y!s\u0001CY\u0011\u000b\u0007I\u0011\u0001D~\u0011-\u0011J\u0001\"-\t\u0006\u0004%\tAb/\t\u0017I-A\u0011\u0017EC\u0002\u0013\u0005a1\u0018\u0005\f%\u001b!\t\f#b\u0001\n\u00039\u0019\tC\u0006\u0013\u0010\u0011E\u0006R1A\u0005\u0002\u0019m\u0006b\u0003J\t\tcC)\u0019!C\u0001\rwC1Be\u0005\u00052\"\u0015\r\u0011\"\u0001\u0007<\"Y!S\u0003CY\u0011\u000b\u0007I\u0011\u0001D^\u0011-\u0011:\u0002\"-\t\u0006\u0004%\tAb/\t\u0017IeA\u0011\u0017EC\u0002\u0013\u0005a1\u0018\u0005\f%K!\t\f#b\u0001\n\u00031Y\fC\u0006\u0013(\u0011E\u0006R1A\u0005\u0002\u0019m\u0006b\u0003F4\tcC)\u0019!C\u0001\rwC1B#\u001b\u00052\"\u0015\r\u0011\"\u0001\u0007<\"Y!\u0013\u0006CY\u0011\u000b\u0007I\u0011\u0001D^\u000f!\u0011Z\u0003\"-\t\u0002I5b\u0001\u0003J\u0019\tcC\tAe\r\t\u0011\u001d\u0005S\u0011\u000bC\u0001%kA\u0001\u0002d\u0016\u0006R\u0011\u0005!sG\u0004\t%w!\t\f#\u0001\u0013>\u0019A!s\bCY\u0011\u0003\u0011\n\u0005\u0003\u0005\bB\u0015eC\u0011\u0001J\"\u0011!a9&\"\u0017\u0005\u0002I\u0015s\u0001\u0003J%\tcC\tAe\u0013\u0007\u0011I5C\u0011\u0017E\u0001%\u001fB\u0001b\"\u0011\u0006b\u0011\u0005!\u0013\u000b\u0005\t\u0019/*\t\u0007\"\u0001\u0013T!Y!s\u000bCY\u0011\u000b\u0007I\u0011AEw\u0011-\u0011J\u0006\"-\t\u0006\u0004%\t\u0001c/\t\u0011ImC\u0011\u0017C\u0001%;B1B%\u0019\u00052\"\u0015\r\u0011\"\u0001\u0007<\"Y!3\rCY\u0011\u000b\u0007I\u0011\u0001D^\u0011-\u0011*\u0007\"-\t\u0006\u0004%\tAb/\t\u0017I\u001dD\u0011\u0017EC\u0002\u0013\u0005a1\u0018\u0005\f%S\"\t\f#b\u0001\n\u00031YLA\u0006EK\u001aLg.\u001b;j_:\u001c(\u0002BC>\u000b{\n\u0001\"\u001b8uKJt\u0017\r\u001c\u0006\u0005\u000b\u007f*\t)A\u0004sK\u001adWm\u0019;\u000b\u0005\u0015\r\u0015!B:dC2\f7\u0001A\n\u0006\u0001\u0015%U\u0011\u0013\t\u0005\u000b\u0017+i)\u0004\u0002\u0006\u0002&!QqRCA\u0005\u0019\te.\u001f*fMB!Q1SCM\u001b\t))J\u0003\u0003\u0006\u0018\u0016u\u0014aA1qS&!Q1TCK\u0005M\u0019F/\u00198eCJ$G)\u001a4j]&$\u0018n\u001c8t\u0003\u0019!\u0013N\\5uIQ\u0011Q\u0011\u0015\t\u0005\u000b\u0017+\u0019+\u0003\u0003\u0006&\u0016\u0005%\u0001B+oSR\f1\u0002Z3gS:LG/[8ogB\u0019Q1V\u0002\u000e\u0003\u0001\u00111\u0002Z3gS:LG/[8ogN\u00191!\"-\u0011\u0007\u0015-vI\u0001\tEK\u001aLg.\u001b;j_:\u001c8\t\\1tgN9q)\"#\u00068\u0016u\u0006\u0003BCV\u000bsKA!b/\u0006\u001a\nqA)\u001a4j]&$\u0018n\u001c8t\u0003BL\u0007cACV\u0019\t)b+\u00197vK\u000ec\u0017m]:EK\u001aLg.\u001b;j_:\u001c8c\u0001\u0007\u0006\n\u0006aa.Y7f)><V-[4iiV\u0011Qq\u0019\t\t\u000b\u0013,\u0019.b6\u0006b6\u0011Q1\u001a\u0006\u0005\u000b\u001b,y-A\u0005j[6,H/\u00192mK*!Q\u0011[CA\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0005\u000b+,YMA\u0002NCB\u0004B!b+\u0006Z&!Q1\\Co\u0005\u0011q\u0015-\\3\n\t\u0015}W\u0011\u0010\u0002\u0006\u001d\u0006lWm\u001d\t\u0005\u000b\u0017+\u0019/\u0003\u0003\u0006f\u0016\u0005%aA%oi\u0006Ia.Y7f)>$\u0016mZ\u000b\u0003\u000bW\u0004\u0002\"\"3\u0006T\u0016]WQ\u001e\t\u0005\u000b\u0017+y/\u0003\u0003\u0006r\u0016\u0005%\u0001B\"iCJ\f\u0001C^1mk\u0016\u001cE.Y:t'fl'm\u001c7\u0015\t\u0015]h\u0011\u0001\t\u0005\u000bW+I0\u0003\u0003\u0006|\u0016u(aC\"mCN\u001c8+_7c_2LA!b@\u0006z\t91+_7c_2\u001c\bb\u0002D\u0002!\u0001\u0007aQA\u0001\u0005]\u0006lW\r\u0005\u0003\u0006,\u001a\u001d\u0011\u0002\u0002D\u0005\u000b;\u0014\u0001\u0002V=qK:\u000bW.Z\u0001\u000bgfl'm\u001c7t\u001b\u0006\u0004X\u0003\u0002D\b\r_!bA\"\u0005\u0007B\u0019M\u0003\u0003\u0003D\n\rC1)Cb\u000b\u000f\t\u0019UaQ\u0004\t\u0005\r/)\t)\u0004\u0002\u0007\u001a)!a1DCC\u0003\u0019a$o\\8u}%!aqDCA\u0003\u0019\u0001&/\u001a3fM&!QQ\u001bD\u0012\u0015\u00111y\"\"!\u0011\t\u0015-fqE\u0005\u0005\rS)iP\u0001\u0004Ts6\u0014w\u000e\u001c\t\u0005\r[1y\u0003\u0004\u0001\u0005\u000f\u0019E\u0012C1\u0001\u00074\t\tA+\u0005\u0003\u00076\u0019m\u0002\u0003BCF\roIAA\"\u000f\u0006\u0002\n9aj\u001c;iS:<\u0007\u0003BCF\r{IAAb\u0010\u0006\u0002\n\u0019\u0011I\\=\t\u000f\u0019\r\u0013\u00031\u0001\u0007F\u0005!1/_7t!\u001919E\"\u0014\u0007&9!Q1\u0012D%\u0013\u00111Y%\"!\u0002\u000fA\f7m[1hK&!aq\nD)\u0005\u0011a\u0015n\u001d;\u000b\t\u0019-S\u0011\u0011\u0005\b\r+\n\u0002\u0019\u0001D,\u0003\u00051\u0007\u0003CCF\r3*9Nb\u000b\n\t\u0019mS\u0011\u0011\u0002\n\rVt7\r^5p]F\nab]=nE>d7/T1q\r&dG/\u0006\u0003\u0007b\u0019\u001dD\u0003\u0003D2\rS2YGb\u001e\u0011\u0011\u0019Ma\u0011\u0005D\u0013\rK\u0002BA\"\f\u0007h\u00119a\u0011\u0007\nC\u0002\u0019M\u0002b\u0002D\"%\u0001\u0007aQ\t\u0005\b\r[\u0012\u0002\u0019\u0001D8\u0003\u0005\u0001\b\u0003CCF\r3*9N\"\u001d\u0011\t\u0015-e1O\u0005\u0005\rk*\tIA\u0004C_>dW-\u00198\t\u000f\u0019U#\u00031\u0001\u0007zAAQ1\u0012D-\u000b/4)'A\u0005c_b,GMT1nKR!aq\u0010DH!\u00111\tIb#\u000e\u0005\u0019\r%\u0002\u0002DC\r\u000f\u000bA\u0001\\1oO*\u0011a\u0011R\u0001\u0005U\u00064\u0018-\u0003\u0003\u0007\u000e\u001a\r%AB*ue&tw\rC\u0004\u0007\u0004M\u0001\r!b6\u0002\u0011\u0005\u0014'M\u001d<UC\u001e,\"A\"&\u0011\u0011\u0015%W1\u001bD\u0013\u000b[\fQB\\;nKJL7mV3jO\"$XC\u0001DN!!1\u0019B\"\t\u0007&\u0015\u0005\u0018a\u00032pq\u0016$Wj\u001c3vY\u0016,\"A\")\u0011\u0011\u0019Ma\u0011\u0005D\u0013\rG\u0003B!b+\u0007&&!aqUC\u007f\u00051iu\u000eZ;mKNKXNY8m\u0003)\u0011w\u000e_3e\u00072\f7o]\u000b\u0003\r[\u0003\u0002Bb\u0005\u0007\"\u0019\u0015Rq_\u0001\te\u001647\t\\1tg\u0006\u0001bo\u001c7bi&dWMU3g\u00072\f7o]\u0001\fY\u0006T\u0018\u0010S8mI\u0016\u00148/\u0006\u0002\u00078BAa1\u0003D\u0011\rK1)#\u0001\u0007MCjL(+\u001a4DY\u0006\u001c8/\u0006\u0002\u0007&\u0005iA*\u0019>z+:LGo\u00117bgN\faBU5dQ\u001acw.\u0019;DY\u0006\u001c8/A\u0007bY2\u0014VMZ\"mCN\u001cXm]\u000b\u0003\r\u000b\u0004bAb\u0005\u0007H\u001a\u0015\u0012\u0002\u0002De\rG\u00111aU3u\u0003EI7OT;nKJL7mU;c\u00072\f7o\u001d\u000b\u0007\rc2yMb5\t\u000f\u0019Ew\u00041\u0001\u0007&\u0005\u00191/\u001e2\t\u000f\u0019Uw\u00041\u0001\u0007&\u0005\u00191/\u001e9\u0002'%\u001ch*^7fe&\u001cg+\u00197vK\u000ec\u0017m]:\u0015\t\u0019Ed1\u001c\u0005\b\r;\u0004\u0003\u0019\u0001D\u0013\u0003\r\u0019\u00180\\\u0001\u000bSN<U\r^\"mCN\u001cH\u0003\u0002D9\rGDqA\"8\"\u0001\u00041)#A\u0005V]&$8\t\\1tgV\u0011Qq_\u0001\n\u0005f$Xm\u00117bgN\f!b\u00155peR\u001cE.Y:t\u0003%\u0019\u0005.\u0019:DY\u0006\u001c8/\u0001\u0005J]R\u001cE.Y:t\u0003%auN\\4DY\u0006\u001c8/\u0001\u0006GY>\fGo\u00117bgN\f1\u0002R8vE2,7\t\\1tg\u0006a!i\\8mK\u0006t7\t\\1tg\u0006Y!i\\8mK\u0006tw,\u00198e+\t1i\u0010\u0005\u0003\u0006,\u001a}\u0018\u0002BD\u0001\u000b{\u0014!\u0002V3s[NKXNY8m\u0003)\u0011un\u001c7fC:|vN]\u0001\f\u0005>|G.Z1o?:|G/A\u0004V]&$H\u000b]3\u0016\u0005\u001d-\u0001\u0003BCV\u000f\u001bIAab\u0004\b\u0012\t!A+\u001f9f\u0013\u00119\u0019\"\"\u001f\u0003\u000bQK\b/Z:\u0002\u000f\tKH/\u001a+qK\u0006A1\u000b[8siR\u0003X-A\u0004DQ\u0006\u0014H\u000b]3\u0002\r%sG\u000f\u00169f\u0003\u001dauN\\4Ua\u0016\f\u0001B\u00127pCR$\u0006/Z\u0001\n\t>,(\r\\3Ua\u0016\f!BQ8pY\u0016\fg\u000e\u00169f\u0003a\u00196-\u00197b\u001dVlWM]5d-\u0006dW/Z\"mCN\u001cXm]\u000b\u0003\u000fS\u0001b!\"3\b,\u0015]\u0018\u0002\u0002D(\u000b\u0017\fqcU2bY\u00064\u0016\r\\;f\u00072\f7o]3t\u001d>,f.\u001b;\u0002#M\u001b\u0017\r\\1WC2,Xm\u00117bgN,7/\u0006\u0002\b4A1aq\tD'\u000bo\fAcU2bY\u00064\u0016\r\\;f\u00072\f7o]3t'\u0016$XCAD\u001d!\r9Y\u0004P\u0007\u0002\u0019\tI1+_7c_2\u001cV\r^\n\u0004y\u0015%\u0015A\u0002\u001fj]&$h\b\u0006\u0003\b:\u001d\u0015\u0003b\u0002D\"}\u0001\u0007aQI\u0001\u0004S\u0012\u001c\bCBCF\u000f\u00172)#\u0003\u0003\bN\u0015\u0005%!B!se\u0006L\u0018aC2p[6|gnT<oKJ\f\u0001bY8oi\u0006Lgn\u001d\u000b\u0005\rc:)\u0006C\u0004\u0007^\u0006\u0003\rA\"\n\u00027M\u001b\u0017\r\\1Ok6,'/[2WC2,Xm\u00117bgN,7oU3u\u0003i\u00196-\u00197b!JLW.\u001b;jm\u00164\u0016\r\\;f\u00072\f7o]3t\u0003e\u00196-\u00197b\u0013:$Xm\u001a:bYZ\u000bG.^3DY\u0006\u001c8/Z:\u0002-UtG-\u001a:ms&twm\u00144WC2,Xm\u00117bgN$Bab\u0003\bb!9q1\r#A\u0002\u0019\u0015\u0012!B2mCjT\u0018aN:dC2\fGE]3gY\u0016\u001cG\u000fJ5oi\u0016\u0014h.\u00197%\t\u00164\u0017N\\5uS>t7\u000f\n\u0013dCR\f7\u000f\u001e:pa\"L7MR1jYV\u0014X\r\u0006\u0002\u00076\u0005q3oY1mC\u0012\u0012XM\u001a7fGR$\u0013N\u001c;fe:\fG\u000e\n#fM&t\u0017\u000e^5p]N$Ce\u00197bgN,7/T1q+\u00119igb\u001d\u0015\t\u001d=tQ\u000f\t\t\r'1\tC\"\n\brA!aQFD:\t\u001d1\tD\u0012b\u0001\rgAqA\"\u0016G\u0001\u000499\b\u0005\u0005\u0006\f\u001aeSq[D9)\t)\t,A\u0007jg&s\u0017\u000e^5bY&TX\rZ\u0001\u0019SN$UMZ5oSRLwN\\:J]&$\u0018.\u00197ju\u0016$WC\u0001D9\u0003=Q\u0015M^1MC:<\u0007+Y2lC\u001e,WC\u0001DR\u0003QQ\u0015M^1MC:<\u0007+Y2lC\u001e,7\t\\1tg\u0006a1kY1mCB\u000b7m[1hK\u0006\t2kY1mCB\u000b7m[1hK\u000ec\u0017m]:\u0002%M\u001b\u0017\r\\1QC\u000e\\\u0017mZ3PE*,7\r^\u0001\u000f%VtG/[7f!\u0006\u001c7.Y4f\u0003M\u0011VO\u001c;j[\u0016\u0004\u0016mY6bO\u0016\u001cE.Y:t\u0003QQ\u0017M^1UsB,Gk\u001c,bYV,7\t\\1tgR!aQEDK\u0011\u001d99J\u0015a\u0001\u000f3\u000bQA\u001b;za\u0016\u0004Dab'\b$B1a1CDO\u000fCKAab(\u0007$\t)1\t\\1tgB!aQFDR\t19)k\"&\u0002\u0002\u0003\u0005)\u0011\u0001D\u001a\u0005\ryF%M\u0001\u0015m\u0006dW/Z\"mCN\u001cHk\u001c&bm\u0006$\u0016\u0010]3\u0015\t\u001d-vQ\u0017\u0019\u0005\u000f[;\t\f\u0005\u0004\u0007\u0014\u001duuq\u0016\t\u0005\r[9\t\fB\u0006\b4N\u000b\t\u0011!A\u0003\u0002\u0019M\"aA0%e!9aQ\\*A\u0002\u0019\u0015\u0012!\u00064vY2L\u0018J\\5uS\u0006d\u0017N_3Ts6\u0014w\u000e\u001c\u000b\u0005\u000fw;iL\u0004\u0003\u0007.\u001du\u0006b\u0002Do)\u0002\u0007aQE\u0001\u0014MVdG._%oSRL\u0017\r\\5{KRK\b/\u001a\u000b\u0005\u000f\u0007<)M\u0004\u0003\u0007.\u001d\u0015\u0007bBDd+\u0002\u0007q1B\u0001\u0003iB\fACZ;mYfLe.\u001b;jC2L'0Z*d_B,G\u0003BDg\u000f\u001ftAA\"\f\bP\"9q\u0011\u001b,A\u0002\u001dM\u0017!B:d_B,\u0007\u0003BCV\u000f+LAab6\bZ\n)1kY8qK&!q1\\C=\u0005\u0019\u00196m\u001c9fg\u0006\t\u0012n]+oSZ,'o]1m\u001b\u0016l'-\u001a:\u0015\t\u0019Et\u0011\u001d\u0005\b\r;<\u0006\u0019\u0001D\u0013\u00039I7/\u00168j[B|'\u000f^1cY\u0016$BA\"\u001d\bh\"9aQ\u001c-A\u0002\u0019\u0015\u0012aG5t+:LW\u000e]8si\u0006\u0014G.Z+oY\u0016\u001c8OU3oC6,G\r\u0006\u0003\u0007r\u001d5\bb\u0002Do3\u0002\u0007aQE\u0001\rSNLU\u000e]8si\u0006\u0014G.\u001a\u000b\u0005\rc:\u0019\u0010C\u0004\u0007^j\u0003\rA\"\n\u0002!%\u001cHK]5wS\u0006dGk\u001c9UsB,G\u0003\u0002D9\u000fsDqab2\\\u0001\u00049Y!\u0001\u0006jgVs\u0017\u000e\u001e+za\u0016$BA\"\u001d\b\u0000\"9qq\u0019/A\u0002\u001d-\u0011a\u00044jqV\u0004\u0018i]!osR\u0013\u0018-\u001b;\u0015\t\u001d-\u0001R\u0001\u0005\b\u0011\u000fi\u0006\u0019AD\u0006\u0003\r!\b/Z\u0001\t\u0003:L8\t\\1tg\u0006Y\u0011I\\=SK\u001a\u001cE.Y:t+\tAy\u0001\u0005\u0003\u0006,\"E\u0011\u0002\u0002E\n\u000b{\u0014q\"\u00117jCN$\u0016\u0010]3Ts6\u0014w\u000e\\\u0001\f\u001f\nTWm\u0019;DY\u0006\u001c8/A\u0005B]f\u0014VM\u001a+qK\u00061\u0011I\\=Ua\u0016\f\u0011\"\u00118z-\u0006dG\u000b]3\u0002\u0019\t{\u00070\u001a3V]&$H\u000b]3\u0002\u00159{G\u000f[5oOR\u0003X-A\u0004Ok2dG\u000b]3\u0002\u0013=\u0013'.Z2u)B,\u0017!D(cU\u0016\u001cG\u000f\u00169f\u0015\u00064\u0018-\u0006\u0002\t*A!Q1\u0016E\u0016\u0013\u0011Aic\"\u0005\u0003!=\u0013'.Z2u)B,'*\u0019<b%\u00164\u0017aD*fe&\fG.\u001b>bE2,G\u000b]3\u0002\u0013M#(/\u001b8h)B,\u0017\u0001\u0004+ie><\u0018M\u00197f)B,\u0017\u0001D\"p]N$\u0018M\u001c;UeV,WC\u0001E\u001d!\u0011)Y\u000bc\u000f\n\t!ur\u0011\u0003\u0002\r\u0007>t7\u000f^1oiRK\b/Z\u0001\u000e\u0007>t7\u000f^1oi\u001a\u000bGn]3\u0002\u0019\r{gn\u001d;b]RtU\u000f\u001c7\u0002\u0017\u0005s\u0017PV1m\u00072\f7o]\u0001\u0010\u0003:Lh+\u00197`O\u0016$8\t\\1tg\u0006\u0019\"+\u001e8uS6,gj\u001c;iS:<7\t\\1tg\u0006\u0001\"+\u001e8uS6,g*\u001e7m\u00072\f7o\u001d\u0002\u0012\u0005>$Ho\\7DY\u0006\u001c8oU=nE>d7cA:\u0006x\u00061\u0001/\u0019:f]R$b\u0001c\u0015\tX!e\u0003c\u0001E+g6\tq\tC\u0004\u0007\u0004Y\u0004\rA\"\u0002\t\u000f!=c\u000f1\u0001\u0007&\u0005i\u0011n\u001d\"piR|Wn\u00117bgN\fA\"[:UQJ,\u0017\rZ:bM\u0016$BA\"\u001d\tb!9\u00012\r=A\u0002!\u0015\u0014a\u00029veB|7/\u001a\t\u0005\u000bWC9'\u0003\u0003\tj\u0015u(!C*z[\n|Gn\u00149tS\r\u0019(P \u0002\r\u001d>$\b.\u001b8h\u00072\f7o]\n\u0004u\"MCC\u0001E:!\rA)F_\u0001\u000bSN\u001cVOY\"mCN\u001cH\u0003\u0002D9\u0011sBq\u0001c\u001f}\u0001\u00041)#\u0001\u0003uQ\u0006$(!\u0003(vY2\u001cE.Y:t'\rq\b2\u000b\u000b\u0003\u0011\u0007\u00032\u0001#\u0016\u007f)\u00111\t\bc\"\t\u0011!m\u0014\u0011\u0001a\u0001\rK\tABT8uQ&twm\u00117bgN\f\u0011BT;mY\u000ec\u0017m]:\u0002/\rc\u0017m]:DCN$X\t_2faRLwN\\\"mCN\u001c\u0018AH%oI\u0016Dx*\u001e;PM\n{WO\u001c3t\u000bb\u001cW\r\u001d;j_:\u001cE.Y:t\u0003yIeN^8dCRLwN\u001c+be\u001e,G/\u0012=dKB$\u0018n\u001c8DY\u0006\u001c8/A\bNCR\u001c\u0007.\u0012:s_J\u001cE.Y:t\u0003iquN\u001c'pG\u0006d'+\u001a;ve:\u001cuN\u001c;s_2\u001cE.Y:t\u0003eqU\u000f\u001c7Q_&tG/\u001a:Fq\u000e,\u0007\u000f^5p]\u000ec\u0017m]:\u0002\u001dQC'o\\<bE2,7\t\\1tg\u00069RK\\5oSRL\u0017\r\\5{K\u0012,%O]8s\u00072\f7o]\u0001\u0016%VtG/[7f\u000bb\u001cW\r\u001d;j_:\u001cE.Y:t\u0003aIE\u000e\\3hC2\f%oZ#yG\u0016\u0004H/[8o\u00072\f7o]\u0001\u001e+:Lg.\u001b;jC2L'0\u001a3GS\u0016dGmQ8ogR\u0014Xo\u0019;pe\u0006!\u0002+\u0019:uS\u0006dg)\u001e8di&|gn\u00117bgN\fA$\u00112tiJ\f7\r\u001e)beRL\u0017\r\u001c$v]\u000e$\u0018n\u001c8DY\u0006\u001c8/A\u0006Ts6\u0014w\u000e\\\"mCN\u001c\u0018aC*ue&twm\u00117bgN\fAb\u0015;sS:<Wj\u001c3vY\u0016\f!b\u00117bgN\u001cE.Y:t\u0003=\u0019E.Y:t?\u001e,G/T3uQ>$\u0017\u0001\u0004#z]\u0006l\u0017nY\"mCN\u001c\u0018AE+ocV\fG.\u001b4jK\u0012lu\u000eZ;mKN,\"\u0001c.\u0011\r\u0015%w1\u0006DR\u0003E)f.];bY&4\u0017.\u001a3Po:,'o]\u000b\u0003\u0011{\u0003b!\"3\t@\u001a\u0015\u0012\u0002\u0002De\u000b\u0017\fA\u0002\u0015:fI\u00164Wj\u001c3vY\u0016\f\u0011\u0004\u0015:fI\u00164w\fJ9nCJ\\G%]7be.$\u0013/\\1sW\u0006q\u0001K]3eK\u001a|Fn\\2bY2L\u0018aE5t!J,G-\u001a4NK6\u0014WM\u001d(b[\u0016$GC\u0002D9\u0011\u0017Di\r\u0003\u0005\u0007^\u0006M\u0002\u0019\u0001D\u0013\u0011!1\u0019!a\rA\u0002\u0015]\u0017AF<sCB4\u0016M]1sON\f%O]1z\u001b\u0016$\bn\u001c3\u0015\t\u0019u\b2\u001b\u0005\t\u000f\u000f\f)\u00041\u0001\b\f\u0005\u00192\u000b]3dS\u0006d\u0017N_1cY\u0016lu\u000eZ;mK\u0006\u00112kY1mCJ+h\u000eV5nK6{G-\u001e7f\u00031\u0019\u00160\u001c2pY6{G-\u001e7f\u00031\u0019\u00160\u001c2pY~\u000b\u0007\u000f\u001d7z\u0003A\u00196-\u00197b\u001dVl'-\u001a:DY\u0006\u001c8/\u0001\tEK2\f\u00170\u001a3J]&$8\t\\1tgV\u0011\u00012\u001d\t\u0005\u000bW+I0A\teK2\f\u00170\u001a3J]&$X*\u001a;i_\u0012\f1\u0003V=qK\u000e{gn\u001d;sC&tGo\u00117bgN\fabU5oO2,Go\u001c8DY\u0006\u001c8/A\fMSN$xJZ*j]\u001edW\r^8o\u00072\f7o\u001d+qKV\u0011\u0001r\u001e\t\u0007\u000b\u0013<Ycb\u0003\u0002#M+'/[1mSj\f'\r\\3DY\u0006\u001c8/A\bD_6\u0004\u0018M]1cY\u0016\u001cE.Y:t\u0003IQ\u0015M^1DY>tW-\u00192mK\u000ec\u0017m]:\u0002\u001f)\u000bg/\u0019(v[\n,'o\u00117bgN\fQBS1wC\u0016sW/\\\"mCN\u001c\u0018a\u0003&bm\u0006,F/\u001b7NCB\fqBS1wCV#\u0018\u000e\u001c%bg\"l\u0015\r]\u0001\u0010\u0015\u00064\u0018MU3d_J$7\t\\1tg\u0006\u0001\")\u001f(b[\u0016\u0004\u0016M]1n\u00072\f7o]\u0001\u0017\u0015\u00064\u0018MU3qK\u0006$X\r\u001a)be\u0006l7\t\\1tg\u0006\u0011\"+\u001a9fCR,G\rU1sC6\u001cE.Y:t\u0003EI7OQ=OC6,\u0007+\u0019:b[RK\b/\u001a\u000b\u0005\rcJY\u0001\u0003\u0005\bH\u0006\u0005\u0004\u0019AD\u0006\u0003aI7oU2bY\u0006\u0014V\r]3bi\u0016$\u0007+\u0019:b[RK\b/\u001a\u000b\u0005\rcJ\t\u0002\u0003\u0005\bH\u0006\r\u0004\u0019AD\u0006\u0003]I7OS1wCJ+\u0007/Z1uK\u0012\u0004\u0016M]1n)f\u0004X\r\u0006\u0003\u0007r%]\u0001\u0002CDd\u0003K\u0002\rab\u0003\u0002'%\u001c(+\u001a9fCR,G\rU1sC6$\u0016\u0010]3\u0015\t\u0019E\u0014R\u0004\u0005\t\u000f\u000f\f9\u00071\u0001\b\f\u0005Q\u0011n\u001d*fa\u0016\fG/\u001a3\u0015\t\u0019E\u00142\u0005\u0005\t\u0013K\tI\u00071\u0001\u0007&\u0005)\u0001/\u0019:b[\u0006A\u0011n\u001d\"z\u001d\u0006lW\r\u0006\u0003\u0007r%-\u0002\u0002CE\u0013\u0003W\u0002\rA\"\n\u0002\u0019%\u001c8)Y:u'fl'm\u001c7\u0015\t\u0019E\u0014\u0012\u0007\u0005\t\r;\fi\u00071\u0001\u0007&\u0005\u0001\u0012n\u001d+za\u0016$Vm\u001d;Ts6\u0014w\u000e\u001c\u000b\u0005\rcJ9\u0004\u0003\u0005\u0007^\u0006=\u0004\u0019\u0001D\u0013\u0003MI7OS1wCZ\u000b'/\u0011:hg6+G\u000f[8e)\u00111\t(#\u0010\t\u0011%}\u0012\u0011\u000fa\u0001\rK\t\u0011!\\\u0001\u000eSNT\u0015M^1WCJ\f%oZ:\u0015\t\u0019E\u0014R\t\u0005\t\u0013\u000f\n\u0019\b1\u0001\nJ\u00051\u0001/\u0019:b[N\u0004b!c\u0013\nN\u0019\u0015RBACh\u0013\u0011Iy%b4\u0003\u0007M+\u0017/\u0001\bjgN\u001b\u0017\r\\1WCJ\f%oZ:\u0015\t\u0019E\u0014R\u000b\u0005\t\u0013\u000f\n)\b1\u0001\nJ\u0005i\u0011n\u001d,be\u0006\u0013xm\u001d'jgR$BA\"\u001d\n\\!A\u0011rIA<\u0001\u0004II%A\u0007jgZ\u000b'/\u0011:h)f\u0004Xm\u001d\u000b\u0005\rcJ\t\u0007\u0003\u0005\nd\u0005e\u0004\u0019AE3\u0003\u001d1wN]7bYN\u0004b!c\u0013\nN\u001d-\u0011A\u00044jeN$\b+\u0019:b[RK\b/\u001a\u000b\u0005\u000f\u0017IY\u0007\u0003\u0005\t\b\u0005m\u0004\u0019AD\u0006\u0003EI7/S7qY&\u001c\u0017\u000e\u001e)be\u0006l7o\u001d\u000b\u0005\rcJ\t\b\u0003\u0005\nt\u0005u\u0004\u0019AE;\u0003\u001d\u0001\u0018M]1ngN\u0004bAb\u0012\u0007N\u0019\u0015\u0013\u0001\u00055bgJ+\u0007/Z1uK\u0012\u0004\u0016M]1n)\u00111\t(c\u001f\t\u0011\u001d\u001d\u0017q\u0010a\u0001\u000f\u0017AC!a \n\u0000A!\u0011\u0012QED\u001b\tI\u0019I\u0003\u0003\n\u0006\u0016\u0005\u0015AC1o]>$\u0018\r^5p]&!\u0011\u0012REB\u0005\u001d!\u0018-\u001b7sK\u000e\f!\u0002\u001a:pa\nKh*Y7f)\u00119Y!c$\t\u0011\u001d\u001d\u0017\u0011\u0011a\u0001\u000f\u0017\tA\u0002\u001a:paJ+\u0007/Z1uK\u0012$Bab\u0003\n\u0016\"AqqYAB\u0001\u00049Y!\u0001\tsKB,\u0017\r^3e)>\u001c\u0016N\\4mKR!q1BEN\u0011!99-!\"A\u0002\u001d-\u0011!\u0004:fa\u0016\fG/\u001a3U_N+\u0017\u000f\u0006\u0003\b\f%\u0005\u0006\u0002CDd\u0003\u000f\u0003\rab\u0003\u0002\u001bM,\u0017\u000fV8SKB,\u0017\r^3e)\u00119Y!c*\t\u0011\u001d\u001d\u0017\u0011\u0012a\u0001\u000f\u0017\t\u0001#[:SK\u001a,'/\u001a8dK\u0006\u0013(/Y=\u0015\t\u0019E\u0014R\u0016\u0005\t\u000f\u000f\fY\t1\u0001\b\f\u0005y\u0011n]!se\u0006LxJZ*z[\n|G\u000e\u0006\u0004\u0007r%M\u0016R\u0017\u0005\t\u000f\u000f\fi\t1\u0001\b\f!A\u0011rWAG\u0001\u00041)#\u0001\u0003fY\u0016l\u0017aC3mK6,g\u000e\u001e+za\u0016$bab\u0003\n>&\u0005\u0007\u0002CE`\u0003\u001f\u0003\rA\"\n\u0002\u0013\r|g\u000e^1j]\u0016\u0014\b\u0002CDd\u0003\u001f\u0003\rab\u0003\u0002\u0019M+(\rV=qK\u000ec\u0017m]:\u0002\u001bM\u000bW.\u001a+za\u0016\u001cE.Y:t\u0003I!U/\\7z\u00136\u0004H.[2ji\u000ec\u0017m]:\u0002\u0013\r{gn]\"mCN\u001c\u0018!D%uKJ\fGo\u001c:DY\u0006\u001c8/A\u0007Ji\u0016\u0014\u0018M\u00197f\u00072\f7o]\u0001\n\u0019&\u001cHo\u00117bgN\f\u0011\u0002T5ti~\u001bwN\\:\u0002\u0011M+\u0017o\u00117bgNDC\"!)\nX&u\u0017r\\Er\u0013K\u0004B!#!\nZ&!\u00112\\EB\u0005%i\u0017n\u001a:bi&|g.A\u0004nKN\u001c\u0018mZ3\"\u0005%\u0005\u0018!N*fc\u000ec\u0017m]:!]><\bE]3gKJ\u001c\b\u0005^8!g\u000e\fG.\u0019\u0018d_2dWm\u0019;j_:t\u0013.\\7vi\u0006\u0014G.\u001a\u0018TKF\f\u0011b\u00195b]\u001e,G-\u00138\"\u0005%\u001d\u0018A\u0002\u001a/cMr\u0003'A\bTKF4\u0015m\u0019;pef\u001cE.Y:t\u0003Y)f.\u00199qYf\u001cV-],sCB\u0004XM]\"mCN\u001cXCAEx!\u0011)Y+#=\n\t%MXQ \u0002\u000b)f\u0004XmU=nE>d\u0017A\u0006&bm\u0006\u001cFO]5oO\n+\u0018\u000e\u001c3fe\u000ec\u0017m]:\u0002+)\u000bg/Y*ue&twMQ;gM\u0016\u00148\t\\1tg\u0006)\"*\u0019<b\u0007\"\f'oU3rk\u0016t7-Z\"mCN\u001c\u0018\u0001\u0005+sCZ,'o]1cY\u0016\u001cE.Y:tQ1\ti+c@\n^*\u0015!\u0012BEs!\u0011)YI#\u0001\n\t)\rQ\u0011\u0011\u0002\u000bI\u0016\u0004(/Z2bi\u0016$\u0017E\u0001F\u0004\u00035*6/\u001a\u0011Ji\u0016\u0014\u0018M\u00197f\u00072\f7o\u001d\u0011j]N$X-\u00193!_\u001a\u0004CK]1wKJ\u001c\u0018M\u00197f\u00072\f7o]\u0001\u0006g&t7-Z\u0001\u000b\u0019&\u001cH/T8ek2,\u0017A\u0003'jgR|\u0016\r\u001d9ms\u0006yA*[:u\u001b>$W\u000f\\3BY&\f7/A\u0005OS2lu\u000eZ;mK\u0006qa*\u001b7N_\u0012,H.Z!mS\u0006\u001c\u0018!C*fc6{G-\u001e7fQ1\tI,c6\n^*e\u00112]EsC\tQY\"\u0001\u001cTKFlu\u000eZ;mK\u0002rwn\u001e\u0011sK\u001a,'o\u001d\u0011u_\u0002\u001a8-\u00197b]\r|G\u000e\\3di&|gNL5n[V$\u0018M\u00197f]M+\u0017/\u0001\bTKFlu\u000eZ;mK\u0006c\u0017.Y:\u0002)\r{G\u000e\\3di&|gnX*fc6{G-\u001e7f\u0003-\t%O]1z\u001b>$W\u000f\\3\u00027\u0005\u0013(/Y=N_\u0012,H.Z0pm\u0016\u0014Hn\\1eK\u0012\f\u0005\u000f\u001d7z\u0003a\t%O]1z\u001b>$W\u000f\\3`O\u0016tWM]5d\u0003B\u0004H._\u0001\u0012\u0003J\u0014\u0018-_'pIVdWmX1qa2LH\u0003\u0002D\u0013\u0015WA\u0001bb2\u0002F\u0002\u0007q1B\u0001\u000b\u0003J\u0014\u0018-_\"mCN\u001c\u0018aC!se\u0006Lx,\u00199qYf\fA\"\u0011:sCf|V\u000f\u001d3bi\u0016\fA\"\u0011:sCf|F.\u001a8hi\"\f1\"\u0011:sCf|6\r\\8oK\u0006\u00112k\u001c4u%\u00164WM]3oG\u0016\u001cE.Y:t\u0003-iU\r\u001e5pI\u000ec\u0017m]:\u0002+\u0015k\u0007\u000f^=NKRDw\u000eZ\"bG\",7\t\\1tg\u0006\u0001R*\u001a;i_\u0012\u001c\u0015m\u00195f\u00072\f7o]\u0001\u0011[\u0016$\bn\u001c3DC\u000eDWm\u00184j]\u0012\fq\"\\3uQ>$7)Y2iK~\u000bG\rZ\u0001\u0013'R\u0014Xo\u0019;ve\u0006d7)\u00197m'&$X-\u0001\u000fTiJ,8\r^;sC2\u001c\u0015\r\u001c7TSR,wLY8piN$(/\u00199\u00021M#(/^2ukJ\fGnQ1mYNKG/Z0ek6l\u00170\u0006\u0002\u000bLA!Q1\u0016F'\u0013\u0011Qy%\"@\u0003\u00195+G\u000f[8e'fl'm\u001c7\u0002/M#(/^2ukJ\fGnQ1mYNKG/Z0gS:$\u0017AF*ueV\u001cG/\u001e:bY\u000e\u000bG\u000e\\*ji\u0016|\u0016\r\u001a3\u0002IM#(/^2ukJ\fGnQ1mYNKG/Z0hKR\u0004\u0016M]1nKR,'\u000fV=qKN\fQbU=nE>dG*\u001b;fe\u0006d\u0017aF*z[\n|G\u000eT5uKJ\fGn\u00182p_R\u001cHO]1q\u0003M\u0019\u00160\u001c2pY2KG/\u001a:bY~#W/\\7z\u0003A\u00196-\u00197b16dGk\u001c9TG>\u0004X-A\bTG\u0006d\u0017\rW7m!\u0006\u001c7.Y4f\u00039\u0011VM\u001a7fGR\u0004\u0016mY6bO\u0016\f\u0011CU3gY\u0016\u001cG/\u00119j!\u0006\u001c7.Y4f\u0003U\u0011VM\u001a7fGR\u0014VO\u001c;j[\u0016\u0004\u0016mY6bO\u0016\faCU3gY\u0016\u001cGOU;oi&lW-\u00168jm\u0016\u00148/Z\u0001\u001c%\u00164G.Z2u%VtG/[7f\u0007V\u0014(/\u001a8u\u001b&\u0014(o\u001c:\u0002\u001bUs\u0017N^3sg\u0016\u001cE.Y:t\u0003A)f.\u001b<feN,\u0017J\u001c;fe:\fG.A\u000bQCJ$\u0018.\u00197NC:Lg-Z:u\u001b>$W\u000f\\3\u0002#\u0019+H\u000e\\'b]&4Wm\u001d;DY\u0006\u001c8/\u0001\nGk2dW*\u00198jM\u0016\u001cH/T8ek2,\u0017\u0001E(qi6\u000bg.\u001b4fgR\u001cE.Y:t\u0003)qu.T1oS\u001a,7\u000f^\u0001\u000b)J,Wm]\"mCN\u001c\u0018AC#yaJ\u001c8\t\\1tg\u0006IQ\t\u001f9s\u00072\f7o]\u0001\u000b\u000bb\u0004(o\u00159mS\u000e,\u0017!C#yaJ4\u0016\r\\;f\u00039\u0019E.Y:t)\u0006<Wj\u001c3vY\u0016\fQb\u00117bgN$\u0016mZ\"mCN\u001c\u0018!\u0004+za\u0016$\u0016mZ:DY\u0006\u001c8/\u0001\tBa&,f.\u001b<feN,7\t\\1tg\u0006\u0019\u0012\t]5Rk\u0006\u001c\u0018.];pi\u0016\u001c8\t\\1tg\u0006\t\"*\u0019<b+:Lg/\u001a:tK\u000ec\u0017m]:\u0002\u00175K'O]8s\u00072\f7o]\u0001\u0011)f\u0004Xm\u0011:fCR|'o\u00117bgN\f\u0001\u0003\u0016:fK\u000e\u0013X-\u0019;pe\u000ec\u0017m]:\u0002)\tc\u0017mY6c_b\u001cuN\u001c;fqR\u001cE.Y:t\u0003Q9\u0006.\u001b;fE>D8i\u001c8uKb$8\t\\1tg\u0006\u0011R*Y2s_\u000e{g\u000e^3yiB\u0013XMZ5y\u0003Yi\u0015m\u0019:p\u0007>tG/\u001a=u!J,g-\u001b=UsB,\u0017\u0001F'bGJ|7i\u001c8uKb$XK\\5wKJ\u001cX-A\u000bNC\u000e\u0014xnQ8oi\u0016DH/\u0012=qe\u000ec\u0017m]:\u000295\u000b7M]8D_:$X\r\u001f;XK\u0006\\G+\u001f9f)\u0006<7\t\\1tg\u0006!R*Y2s_\u000e{g\u000e^3yiR\u0013X-\u001a+za\u0016\f1#T1de>LU\u000e\u001d7B]:|G/\u0019;j_:\f1$T1de>LU\u000e\u001d7M_\u000e\fG/[8o\u0003:tw\u000e^1uS>t\u0017AE*ue&twmQ8oi\u0016DHo\u00117bgN\f1c\u0015;sS:<7i\u001c8uKb$Xj\u001c3vY\u0016\fABV1mk\u0016|em\u00117bgN\fq\"U;bg&\fXo\u001c;f\u00072\f7o]\u0001\u0014#V\f7/[9v_R,7\t\\1tg~\u000b\u0007/[\u0001\u001a#V\f7/[9v_R,7\t\\1tg~\u000b\u0007/[0baBd\u00170\u0006\u0002\u000b8J!!\u0012\u0018D\u0013\r\u0019QY\f\u0001\u0001\u000b8\naAH]3gS:,W.\u001a8u}\u0011A!r\u0018F]\u0005\u0003Q\tM\u0001\nUsB,wJZ\"m_:,GmU=nE>d\u0017\u0003\u0002Fb\u0015\u001b\u0014bA#2\u0007~*\u001dgA\u0002F^\u0001\u0001Q\u0019\r\u0005\u0003\u0006,*%\u0017\u0002\u0002Ff\u000b{\u0014\u0001BT8Ts6\u0014w\u000e\u001c\n\u0005\u0015\u001f4)C\u0002\u0004\u000b<\u0002\u0001!R\u001a\u0003\t\u0015\u007fSyM!\u0001\u000bTF!!R\u001bD\u0013%\u0019Q9N\"@\u000bH\u001a1!2\u0018\u0001\u0001\u0015+$\u0001Bc7\u000bP\n\u0005!R\u001c\u0002\t\u001d\u0006lW\rV=qKB!Q1\u0016Fp\u0013\u0011Q\t/\"8\u0003\u0011Q+'/\u001c(b[\u0016$\u0001Bc7\u000b:\n\u0005!R\\\u0001\u001c#V\f7/[9v_R,7\t\\1tg~\u000b\u0007/[0v]\u0006\u0004\b\u000f\\=\u0016\u0005)%(\u0003\u0002Fv\rK1aAc/\u0001\u0001)%H\u0001\u0003F`\u0015W\u0014\tAc<\u0012\t)E(R\u001f\n\u0007\u0015g4iPc2\u0007\r)m\u0006\u0001\u0001Fy%\u0011Q9P\"\n\u0007\r)m\u0006\u0001\u0001F{\t!QyLc>\u0003\u0002)m\u0018\u0003\u0002F\u007f\rK\u0011bAc@\u0007~*\u001dgA\u0002F^\u0001\u0001Qi\u0010\u0002\u0005\u000b\\*](\u0011\u0001Fo\t!QYNc;\u0003\u0002)u\u0017\u0001G*dC2\f7+[4oCR,(/Z!o]>$\u0018\r^5p]\u0006a2kY1mC2{gnZ*jO:\fG/\u001e:f\u0003:tw\u000e^1uS>t\u0017!E'fi\"|G\rS1oI2,7\t\\1tg\u0006qa+\u0019:IC:$G.Z\"mCN\u001c\u0018aC(qi&|gn\u00117bgN\fAb\u00149uS>tWj\u001c3vY\u0016\f\u0011bU8nK\u000ec\u0017m]:\u0002\u00159{g.Z'pIVdW-\u0001\u0006T_6,Wj\u001c3vY\u0016\fQ$T8ek2,7+\u001a:jC2L'0\u0019;j_:\u0004&o\u001c=z\u00072\f7o]\u0001\u0014G>l\u0007/\u001b7feRK\b/\u001a$s_6$\u0016m\u001a\u000b\u0005\u000f\u0017Yi\u0002\u0003\u0005\f \tu\u0003\u0019AF\u0011\u0003\t!H\u000f\r\u0003\f$-U\u0002CBF\u0013\u0017WY\u0019\u0004\u0005\u0003\u0006\u0014.\u001d\u0012\u0002BF\u0015\u000b+\u0013\u0001\"\u00168jm\u0016\u00148/Z\u0005\u0005\u0017[YyCA\u0006XK\u0006\\G+\u001f9f)\u0006<\u0017\u0002BF\u0019\u000b+\u0013\u0001\u0002V=qKR\u000bwm\u001d\t\u0005\r[Y)\u0004\u0002\u0007\f8-u\u0011\u0011!A\u0001\u0006\u00031\u0019D\u0001\u0003`IM\n\u0014!F2p[BLG.\u001a:Ts6\u0014w\u000e\u001c$s_6$\u0016m\u001a\u000b\u0005\rKYi\u0004\u0003\u0005\f \t}\u0003\u0019AF a\u0011Y\te#\u0012\u0011\r-\u001522FF\"!\u00111ic#\u0012\u0005\u0019-\u001d3RHA\u0001\u0002\u0003\u0015\tAb\r\u0003\t}#3GM\u0001\u0011SNT\u0015M^1NC&tW*\u001a;i_\u0012$BA\"\u001d\fN!AaQ\u001cB1\u0001\u00041)#A\tiCNT\u0015M^1NC&tW*\u001a;i_\u0012$BA\"\u001d\fT!AaQ\u001cB2\u0001\u00041)CA\u0007WCJ\f%/\u001b;z\u00072\f7o]\n\u0005\u0005KZI\u0006\u0005\u0003\tV-m\u0013\u0002BF/\u000bs\u0013\u0001CV1s\u0003JLG/_\"mCN\u001c\u0018\t]5\u0011\t\u0019M1\u0012M\u0005\u0005\r\u001b3\u0019#\u0001\u0005nCb\f%/\u001b;z\u0003%\u0019w.\u001e8u\rJ|W.\u0001\u0003j]&$\bCBCF\u0017W*90\u0003\u0003\fn\u0015\u0005%AB(qi&|g\u000e\u0006\u0006\fr-M4ROF<\u0017s\u0002B\u0001#\u0016\u0003f!Aa1\u0001B8\u0001\u0004Yy\u0006\u0003\u0005\fd\t=\u0004\u0019ACq\u0011)Y)Ga\u001c\u0011\u0002\u0003\u0007Q\u0011\u001d\u0005\u000b\u0017O\u0012y\u0007%AA\u0002-%\u0014AB8gMN,G/A\u0006jg\u0012+g-\u001b8fI\u0006#H\u0003\u0002D9\u0017\u0003C\u0001bc!\u0003t\u0001\u0007Q\u0011]\u0001\u0002S\u0006\u00191/Z9\u0016\u0005-%\u0005C\u0002D$\u0017\u0017+90\u0003\u0003\f\u000e\u001aE#AC%oI\u0016DX\rZ*fc\u0006!1/Z9!\u0003\u0019\u0019\u00180\\*fiB\u0019\u0001R\u000b\u001f\u0015\t\u0019E4r\u0013\u0005\t\r;\u0014Y\b1\u0001\u0007&\u0005)\u0011\r\u001d9msR!aQEFO\u0011!Y\u0019I! A\u0002\u0015\u0005\u0018\u0001D:qK\u000eLg-[2UsB,GCBD\u0006\u0017G[I\u000b\u0003\u0005\f&\n}\u0004\u0019AFT\u0003\u0011\t'oZ:\u0011\r\u0019\u001dcQJD\u0006\u0011)YYKa \u0011\u0002\u0003\u00071rU\u0001\u0007_RDWM]:\u0002-M\u0004XmY5gS\u000e$\u0016\u0010]3%I\u00164\u0017-\u001e7uII*\"a#-+\t-\u001d62W\u0016\u0003\u0017k\u0003Bac.\f>6\u00111\u0012\u0018\u0006\u0005\u0017wK\u0019)A\u0005v]\u000eDWmY6fI&!1rXF]\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\u000e-\u0006\u0014\u0018I]5us\u000ec\u0017m]:\u0011\t!U#QQ\n\u0005\u0005\u000b+I\t\u0006\u0002\fD\u0006YB\u0005\\3tg&t\u0017\u000e\u001e\u0013he\u0016\fG/\u001a:%I\u00164\u0017-\u001e7uIM*\"a#4+\t\u0015\u000582W\u0001\u001cI1,7o]5oSR$sM]3bi\u0016\u0014H\u0005Z3gCVdG\u000f\n\u001b\u0016\u0005-M'\u0006BF5\u0017g\u000bQ\"T1y)V\u0004H.Z!sSRLXCACq\u00039i\u0015\r\u001f+va2,\u0017I]5us\u0002\nq\"T1y!J|G-^2u\u0003JLG/_\u0001\u0011\u001b\u0006D\bK]8ek\u000e$\u0018I]5us\u0002\n\u0001#T1y\rVt7\r^5p]\u0006\u0013\u0018\u000e^=\u0002#5\u000b\u0007PR;oGRLwN\\!sSRL\b%\u0001\rNCb$V\u000f\u001d7f\u0003JLG/_*qK\u000eL\u0017\r\\5{K\u0012\f\u0011$T1y)V\u0004H.Z!sSRL8\u000b]3dS\u0006d\u0017N_3eA\u0005QR*\u0019=Qe>$Wo\u0019;Be&$\u0018p\u00159fG&\fG.\u001b>fI\u0006YR*\u0019=Qe>$Wo\u0019;Be&$\u0018p\u00159fG&\fG.\u001b>fI\u0002\n1$T1y\rVt7\r^5p]\u0006\u0013\u0018\u000e^=Ta\u0016\u001c\u0017.\u00197ju\u0016$\u0017\u0001H'bq\u001a+hn\u0019;j_:\f%/\u001b;z'B,7-[1mSj,G\rI\u0001\r!J|G-^2u\u00072\f7o]\u000b\u0003\u0017c\n!\u0002V;qY\u0016\u001cE.Y:t\u000351UO\\2uS>t7\t\\1tg\u0006)\u0012IY:ue\u0006\u001cGOR;oGRLwN\\\"mCN\u001c\u0018!\u0003;va2,G+\u001f9f)\u00119Ya#@\t\u0011-}(Q\u0016a\u0001\u0017O\u000bQ!\u001a7f[N\fABZ;oGRLwN\u001c+za\u0016$bab\u0003\r\u00061\u001d\u0001\u0002CE2\u0005_\u0003\rac*\t\u00111%!q\u0016a\u0001\u000f\u0017\taA]3tiB,\u0017\u0001F1cgR\u0014\u0018m\u0019;Gk:\u001cG/[8o)f\u0004X\r\u0006\u0004\b\f1=A\u0012\u0003\u0005\t\u0013G\u0012\t\f1\u0001\f(\"AA\u0012\u0002BY\u0001\u00049Y!\u0001\u000exe\u0006\u0004h+\u0019:be\u001e\u001c\u0018I\u001d:bs6+G\u000f[8e\u001d\u0006lW\r\u0006\u0003\u000b^2]\u0001\u0002\u0003G\r\u0005g\u0003\rab\u0003\u0002\r\u0015dW-\u001c;q\u00035I7\u000fV;qY\u0016\u001c\u00160\u001c2pYR!a\u0011\u000fG\u0010\u0011!1iN!.A\u0002\u0019\u0015\u0012\u0001E5t\rVt7\r^5p]NKXNY8m)\u00111\t\b$\n\t\u0011\u0019u'q\u0017a\u0001\rK\t\u0001$[:BEN$(/Y2u\rVt7\r^5p]NKXNY8m)\u00111\t\bd\u000b\t\u0011\u0019u'\u0011\u0018a\u0001\rK\t\u0001#[:Qe>$Wo\u0019;O'fl'm\u001c7\u0015\t\u0019ED\u0012\u0007\u0005\t\r;\u0014Y\f1\u0001\u0007&\u0005AAK]=DY\u0006\u001c8/\u0001\u0007GC&dWO]3DY\u0006\u001c8/\u0001\u0007Tk\u000e\u001cWm]:DY\u0006\u001c8/A\u0006GkR,(/Z\"mCN\u001c\u0018\u0001\u0004)s_6L7/Z\"mCN\u001c\u0018A\u0004(p]\u001a\u000bG/\u00197N_\u0012,H.Z\u0001\u000f\u001d>tg)\u0019;bY~\u000b\u0007\u000f\u001d7z\u0003M)hn\u001d9fG&\fG.\u001b>fINKXNY8m)\u00111)\u0003$\u0012\t\u0011\u0019u'1\u001aa\u0001\rK\tQ#\u001e8ta\u0016\u001c\u0017.\u00197ju\u0016$G+\u001f9f\u0003J<7\u000f\u0006\u0003\f(2-\u0003\u0002CDd\u0005\u001b\u0004\rab\u0003\u0002!5\u000b7M]8D_:$X\r\u001f;UsB,\u0007\u0003\u0002E+\u0005#\u0014\u0001#T1de>\u001cuN\u001c;fqR$\u0016\u0010]3\u0014\t\tEW\u0011\u0012\u000b\u0003\u0019\u001f\nq!\u001e8baBd\u0017\u0010\u0006\u0003\r\\1u\u0003CBCF\u0017W:Y\u0001\u0003\u0005\bH\nU\u0007\u0019AD\u0006\u0003II7/T1de>\u001cuN\u001c;fqR$\u0016\u0010]3\u0015\t\u0019ED2\r\u0005\t\u000f\u000f\u00149\u000e1\u0001\b\f\u0005)\u0012n],iSR,'m\u001c=D_:$X\r\u001f;UsB,G\u0003\u0002D9\u0019SB\u0001bb2\u0003Z\u0002\u0007q1B\u0001\u0015[\u0006\u001c'o\u001c\"v]\u0012dW\rU1sC6LeNZ8\u0015\t\u001d-Ar\u000e\u0005\t\u000f\u000f\u0014Y\u000e1\u0001\b\f\u0005ABn\\8lg2K7.Z'bGJ|')\u001e8eY\u0016$\u0016\u0010]3\u0015\t\u0019EDR\u000f\u0005\t\u000f\u000f\u0014i\u000e1\u0001\b\f\u0005\t\u0012n]'bGJ|')\u001e8eY\u0016$\u0016\u0010]3\u0015\t\u0019ED2\u0010\u0005\t\u000f\u000f\u0014y\u000e1\u0001\b\f\u0005I\u0012n\u001d\"mC\u000e\\'m\u001c=NC\u000e\u0014xNQ;oI2,G+\u001f9f)\u00111\t\b$!\t\u0011\u001d\u001d'\u0011\u001da\u0001\u000f\u0017\t!\"[:MSN$H+\u001f9f)\u00111\t\bd\"\t\u0011\u001d\u001d'1\u001da\u0001\u000f\u0017\ta\"[:Ji\u0016\u0014\u0018M\u00197f)f\u0004X\r\u0006\u0003\u0007r15\u0005\u0002CDd\u0005K\u0004\rab\u0003\u0002)%\u001ch)\u001e8di&|g\u000eV=qK\u0012K'/Z2u)\u00111\t\bd%\t\u0011\u001d\u001d'q\u001da\u0001\u000f\u0017\t\u0011#[:UkBdW\rV=qK\u0012K'/Z2u)\u00111\t\b$'\t\u0011\u001d\u001d'\u0011\u001ea\u0001\u000f\u0017\ta\"[:Gk:\u001cG/[8o)f\u0004X\r\u0006\u0003\u0007r1}\u0005\u0002CDd\u0005W\u0004\rab\u0003\u0002\u001f%\u001ch)\u001e8di&|g\u000e\u0015:pi>$BA\"\u001d\r&\"AAr\u0015Bw\u0001\u00049Y!\u0001\u0002qi\u0006\u0011\u0003/\u0019:uS\u0006dg)\u001e8di&|g.\u0011:h%\u0016\u001cH+\u001f9f\rJ|W\u000e\u0015:pi>$B\u0001$,\r4BAQ1\u0012GX\u000f\u00179Y!\u0003\u0003\r2\u0016\u0005%A\u0002+va2,'\u0007\u0003\u0005\r(\n=\b\u0019AD\u0006\u0003U1WO\\2uS>t\u0017I]5us\u001a\u0013x.\u001c+za\u0016$B!\"9\r:\"Aqq\u0019By\u0001\u00049Y!A\rgk:\u001cG/[8o\u001fJ\u0004fm\u0014:TC6\f%o\u001a+za\u0016\u001cH\u0003BFT\u0019\u007fC\u0001bb2\u0003t\u0002\u0007q1B\u0001\u0012g\u0006lGk\u001c$v]\u000e$\u0018n\u001c8UsB,GCBD\u0006\u0019\u000bd9\r\u0003\u0005\bH\nU\b\u0019AD\u0006\u0011)aIM!>\u0011\u0002\u0003\u0007aQE\u0001\u0004g\u0006l\u0017aG:b[R{g)\u001e8di&|g\u000eV=qK\u0012\"WMZ1vYR$#'\u0006\u0002\rP*\"aQEFZ\u0003QiW\r\u001e5pIR{W\t\u001f9sKN\u001c\u0018n\u001c8UaR!q1\u0002Gk\u0011!99M!?A\u0002\u001d-\u0011AH:b[6\u000bGo\u00195fg\u001a+hn\u0019;j_:\u0014\u0015m]3e\u001f:\f%/\u001b;z)\u00191\t\bd7\r^\"AA\u0012\u001aB~\u0001\u00041)\u0003\u0003\u0005\nd\tm\b\u0019\u0001Gp!\u001919E\"\u0014\u0007<\u0005Y\u0011n\u001d+va2,G+\u001f9f)\u00111\t\b$:\t\u0011\u001d\u001d'Q a\u0001\u000f\u0017\tq\u0002^;qY\u0016\u001cu.\u001c9p]\u0016tGo\u001d\u000b\u0005\u0017OcY\u000f\u0003\u0005\bH\n}\b\u0019AD\u0006\u0003A\u0001&o\u001c3vGR\u0014vn\u001c;DY\u0006\u001c8/\u0001\u000bQe>$Wo\u0019;`aJ|G-^2u\u0003JLG/_\u0001\u0017!J|G-^2u?B\u0014x\u000eZ;di\u0016cW-\\3oi\u0006Q\u0002K]8ek\u000e$x\f\u001d:pIV\u001cG/\u00127f[\u0016tGOT1nK\u0006\u0001\u0002K]8ek\u000e$x,\u001b;fe\u0006$xN]\u0001\u0016!J|G-^2u?B\u0014x\u000eZ;diB\u0013XMZ5y\u0003A\u0001&o\u001c3vGR|6-\u00198FcV\fG.A\u0006qe>$Wo\u0019;Qe>TGC\u0002D\u007f\u0019\u007fl\u0019\u0001\u0003\u0005\u000e\u0002\r=\u0001\u0019\u0001D\u0013\u0003\u0005Q\b\u0002CG\u0003\u0007\u001f\u0001\r!\"9\u0002\u0003)\fabZ3u!J|G-^2u\u0003J<7\u000f\u0006\u0003\f(6-\u0001\u0002\u0003E\u0004\u0007#\u0001\rab\u0003)\u0019\rE\u0011r`Eo\u001b\u001fQI!d\u0005\"\u00055E\u0011A\u00048pA1|gnZ3sAU\u001cX\rZ\u0011\u0003\u001b+\taA\r\u00182c9\u0002\u0014!D;oCB\u0004H._+ooJ\f\u0007\u000f\u0006\u0003\b\f5m\u0001\u0002\u0003E\u0004\u0007'\u0001\rab\u0003)\u0019\rM\u0011r`Eo\u001b\u001fQI!d\u0005\u0002#\u0011\u0014x\u000e\u001d(vY2\f'/_'fi\"|G\r\u0006\u0003\b\f5\r\u0002\u0002CDd\u0007+\u0001\rab\u0003\u0002\u001f\u0019Lg.\u00197SKN,H\u000e\u001e+za\u0016$Bab\u0003\u000e*!AqqYB\f\u0001\u00049Y\u0001\u000b\u0003\u0004\u0018%}\u0014\u0001C5t'R\f'\r\\3\u0015\t\u0019ET\u0012\u0007\u0005\t\u000f\u000f\u001cI\u00021\u0001\b\f!\"1\u0011DE@\u0003)I7OV8mCRLG.\u001a\u000b\u0005\rcjI\u0004\u0003\u0005\bH\u000em\u0001\u0019AD\u0006\u0003I1x\u000e\\1uS2,'+Z2veNLwN\\:\u0002!A,g\u000eZ5oOZ{G.\u0019;jY\u0016\u001c\bCBG!\u001b\u000f2)#\u0004\u0002\u000eD)!QRICh\u0003\u001diW\u000f^1cY\u0016LA!$\u0013\u000eD\t9\u0001*Y:i'\u0016$\u0018!\u00054v]\u000e$\u0018n\u001c8O\u0005\u0006\u001cX\rV=qKR!q1BG(\u0011!99m!\tA\u0002\u001d-\u0011!F5t!\u0006\u0014H/[1m\rVt7\r^5p]RK\b/\u001a\u000b\u0005\rcj)\u0006\u0003\u0005\bH\u000e\r\u0002\u0019AD\u0006\u0003!\u0019\u0018-\\\"bG\",\u0007\u0003CG!\u001b72)C\"\n\n\t5uS2\t\u0002\n\u0003:L(+\u001a4NCB\fQa]1n\u001f\u001a$BA\"\n\u000ed!AqqYB\u0014\u0001\u00049Y!\u0001\u0006tC6|e\r\u0015:pi>$BA\"\n\u000ej!AArUB\u0015\u0001\u00049Y!A\u0005beJ\f\u0017\u0010V=qKR!q1BG8\u0011!i\tha\u000bA\u0002\u001d-\u0011aA1sO\u0006Q!-\u001f(b[\u0016$\u0016\u0010]3\u0015\t\u001d-Qr\u000f\u0005\t\u001bc\u001ai\u00031\u0001\b\f\u0005q\u0011\u000e^3sCR|'o\u00144UsB,G\u0003BD\u0006\u001b{B\u0001bb2\u00040\u0001\u0007q1B\u0001\u0011U\u00064\u0018MU3qK\u0006$X\r\u001a+za\u0016$Bab\u0003\u000e\u0004\"AQ\u0012OB\u0019\u0001\u00049Y!\u0001\u0006paRLwN\u001c+za\u0016$Bab\u0003\u000e\n\"AqqYB\u001a\u0001\u00049Y!A\ttG\u0006d\u0017MU3qK\u0006$X\r\u001a+za\u0016$Bab\u0003\u000e\u0010\"AQ\u0012OB\u001b\u0001\u00049Y!A\u0004tKF$\u0016\u0010]3\u0015\t\u001d-QR\u0013\u0005\t\u001bc\u001a9\u00041\u0001\b\f\u0005\u0011R\r\\3nK:$H+\u001f9f\rJ|WnR3u)\u00119Y!d'\t\u0011\u001d\u001d7\u0011\ba\u0001\u000f\u0017\tA#\u001a7f[\u0016tG\u000fV=qK\u001a\u0013x.\\!qa2LH\u0003BD\u0006\u001bCC\u0001bb2\u0004<\u0001\u0007q1B\u0001\u0010e\u0016\u001cX\u000f\u001c;PM&\u001bX)\u001c9usR!q1BGT\u0011!99m!\u0010A\u0002\u001d-\u0011a\u0005;za\u0016\f%oZ(g\u0005\u0006\u001cX\rV=qK>\u0013HCBGW\u001bskY\f\u0006\u0003\b\f5=\u0006\"CGY\u0007\u007f!\t\u0019AGZ\u0003\ty'\u000f\u0005\u0004\u0006\f6Uv1B\u0005\u0005\u001bo+\tI\u0001\u0005=Eft\u0017-\\3?\u0011!99ma\u0010A\u0002\u001d-\u0001\u0002CG_\u0007\u007f\u0001\rA\"\n\u0002\u0013\t\f7/Z\"mCN\u001c\u0018A\u0006:fgVdGo\u00144NCR\u001c\u0007.\u001b8h\u001b\u0016$\bn\u001c3\u0015\r5\rWrZGi)\u00119Y!$2\t\u00115\u001d7\u0011\ta\u0001\u001b\u0013\f!\u0002]1sC6$\u0016\u0010]3t!\u0019)Y)d3\b\f%!QRZCA\u0005)a$/\u001a9fCR,GM\u0010\u0005\t\u000f\u000f\u001c\t\u00051\u0001\b\f!Aa1AB!\u0001\u0004Qi.A\u0005DY\u0006\u001c8\u000fV=qKR!q1BGl\u0011!i\tha\u0011A\u0002\u001d-\u0011A\u00068fm\u0016\u0014\b*Y:UsB,\u0007+\u0019:b[\u0016$XM]:\u0015\t\u0019ETR\u001c\u0005\t\r;\u001c)\u00051\u0001\u0007&\u0005AQI\\;n)f\u0004X\r\u0006\u0003\b\f5\r\b\u0002\u0003Do\u0007\u000f\u0002\rA\"\n\u0002)\rd\u0017m]:Fq&\u001cH/\u001a8uS\u0006dG+\u001f9f)\u00199Y!$;\u000en\"AQ2^B%\u0001\u00049Y!\u0001\u0004qe\u00164\u0017\u000e\u001f\u0005\t\u000fG\u001aI\u00051\u0001\u0007&\u0005Q\u0011I\\=`I\u0015\fH%Z9\u0002\u0019\u0005s\u0017p\u0018\u0013cC:<G%Z9\u0002\u0015\u0005s\u0017pX3rk\u0006d7/\u0001\u0007B]f|\u0006.Y:i\u0007>$W-\u0001\u0007B]f|Fo\\*ue&tw-\u0001\bB]f|F\u0005[1tQ\u0012B\u0017m\u001d5\u0002\u0019\u0005s\u0017pX4fi\u000ec\u0017m]:\u0002!\u0005s\u0017pX5t\u0013:\u001cH/\u00198dK>3\u0017\u0001E!os~\u000b7/\u00138ti\u0006t7-Z(g\u0003a\u0001(/[7ji&4XmR3u\u00072\f7o]'fi\"|Gm]\u0001\u0010O\u0016$8\t\\1tg6+G\u000f[8eg\u0006\u0011r-\u001a;DY\u0006\u001c8OU3ukJtG+\u001f9f)\u00119YA$\u0003\t\u0011\u001d\u001d7\u0011\ra\u0001\u000f\u0017\taC]3n_Z,'+\u001a3v]\u0012\fg\u000e^(cU\u0016\u001cGo\u001d\u000b\u0005\u0017Osy\u0001\u0003\u0005\u000f\u0012\r\r\u0004\u0019AFT\u0003\r!\bo]\u0001\u0012]>\u0014X.\u00197ju\u0016$\u0007+\u0019:f]R\u001cH\u0003BFT\u001d/A\u0001B$\u0007\u0004f\u0001\u00071rU\u0001\ba\u0006\u0014XM\u001c;t\u00035\tG\u000e\u001c)be\u0006lW\r^3sgR!aQ\tH\u0010\u0011!A9aa\u001aA\u0002\u001d-\u0011a\u0005;za\u0016\u001cFO]5oO:{\u0007+Y2lC\u001e,G\u0003\u0002D@\u001dKA\u0001bb2\u0004j\u0001\u0007q1B\u0001\u0013EJLWM\u001a)be\u0016tGo]*ue&tw\r\u0006\u0003\f`9-\u0002\u0002\u0003H\r\u0007W\u0002\rac*\u0002\u001bA\f'/\u001a8ugN#(/\u001b8h)\u0011YyF$\r\t\u00119e1Q\u000ea\u0001\u0017O\u000b\u0011C^1mk\u0016\u0004\u0016M]1ngN#(/\u001b8h)\u0011YyFd\u000e\t\u0011\u001d\u001d7q\u000ea\u0001\u000f\u0017\t\u0011c\u00142kK\u000e$x\f\n5bg\"$\u0003.Y:i\u00035y%M[3di~#S-\u001d\u0013fc\u0006yqJ\u00196fGR|FEY1oO\u0012*\u0017/A\u0005PE*,7\r^0fc\u0006IqJ\u00196fGR|f.Z\u0001\u0014\u001f\nTWm\u0019;`SNLen\u001d;b]\u000e,wJZ\u0001\u0014\u001f\nTWm\u0019;`CNLen\u001d;b]\u000e,wJZ\u0001\u0014\u001f\nTWm\u0019;`gft7\r\u001b:p]&TX\rZ\u0001\r'R\u0014\u0018N\\4`IAdWo]\u0001\u0010\u001f\nTWm\u0019;`O\u0016$8\t\\1tg\u0006aqJ\u00196fGR|6\r\\8oK\u0006yqJ\u00196fGR|f-\u001b8bY&TX-A\u0007PE*,7\r^0o_RLg-_\u0001\u0011\u001f\nTWm\u0019;`]>$\u0018NZ=BY2\f1b\u00142kK\u000e$xl^1ji\u0006iqJ\u00196fGR|V-];bYN\fqb\u00142kK\u000e$x\f[1tQ\u000e{G-Z\u0001\u0010\u001f\nTWm\u0019;`i>\u001cFO]5oO\u0006qqJ\u00196fGR\u0014VMZ\"mCN\u001c\u0018A\u0006,pY\u0006$\u0018\u000e\\3PE*,7\r\u001e*fM\u000ec\u0017m]:\u0002)I+h\u000e^5nKN#\u0018\r^5dg6{G-\u001e7f\u0003I\u0011u\u000e_3t%VtG+[7f\u001b>$W\u000f\\3\u0002#\t{\u00070Z:Sk:$\u0016.\\3DY\u0006\u001c8/\u0001\tC_b,GMT;nE\u0016\u00148\t\\1tg\u0006\u0019\"i\u001c=fI\u000eC\u0017M]1di\u0016\u00148\t\\1tg\u0006\t\"i\u001c=fI\n{w\u000e\\3b]\u000ec\u0017m]:\u0002\u001d\t{\u00070\u001a3CsR,7\t\\1tg\u0006y!i\u001c=fINCwN\u001d;DY\u0006\u001c8/A\u0007C_b,G-\u00138u\u00072\f7o]\u0001\u000f\u0005>DX\r\u001a'p]\u001e\u001cE.Y:t\u0003=\u0011u\u000e_3e\r2|\u0017\r^\"mCN\u001c\u0018\u0001\u0005\"pq\u0016$Gi\\;cY\u0016\u001cE.Y:t\u00039\u0011u\u000e_3e+:LGo\u00117bgN\fqBQ8yK\u0012,f.\u001b;N_\u0012,H.Z\u0001\u000f\u0005>DX\rZ+oSR|VKT%U\u00039\u0011u\u000e_3e+:LGo\u0018+Z!\u0016\u000bq\"\u00118o_R\fG/[8o\u00072\f7o]\u0001\u0018\u0007>t7\u000f^1oi\u0006sgn\u001c;bi&|gn\u00117bgN\fQc\u0015;bi&\u001c\u0017I\u001c8pi\u0006$\u0018n\u001c8DY\u0006\u001c8/A\fB]:|G/\u0019;j_:\u0014V\r^3oi&|g.\u0011;ue\u0006i\u0012I\u001c8pi\u0006$\u0018n\u001c8SKR,g\u000e^5p]B{G.[2z\u0003R$(/\u0001\rB]:|G/\u0019;j_:\u0014V\r]3bi\u0006\u0014G.Z!uiJ\f1#\u00127jI\u0006\u0014G.Z'fi\"|Gm\u00117bgN\fQ#S7qY&\u001c\u0017\u000e\u001e(pi\u001a{WO\u001c3DY\u0006\u001c8/\u0001\fJ[Bd\u0017nY5u\u00036\u0014\u0017nZ;pkN\u001cE.Y:t\u0003ai\u0015n\u001a:bi&|g.\u00118o_R\fG/[8o\u00072\f7o]\u0001\u0012'\u000e\fG.Y*ue&\u001cGO\u0012)BiR\u0014\u0018aC*xSR\u001c\u0007n\u00117bgN\fA\u0002V1jYJ,7m\u00117bgN\fABV1sCJ<7o\u00117bgN\f1BT8xCJt7\t\\1tg\u0006!RO\\2iK\u000e\\W\rZ*uC\ndWm\u00117bgN\fa#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u00072\f7o]\u0001\u0015\u0007\"LG\u000eZ!o]>$\u0018\r^5p]\u000ec\u0017m]:\u0002/I+\u0007/Z1uK\u0012\feN\\8uCRLwN\\\"mCN\u001c\u0018!\u0007+be\u001e,GOT1nK\u0006sgn\u001c;bi&|gn\u00117bgN\f1d\u0015;bi&\u001cW*\u001a;i_\u0012\feN\\8uCRLwN\\\"mCN\u001c\u0018!\u0005)pYf4UO\\2uS>t7\t\\1tg\u0006YR\t\u001f9fe&lWM\u001c;bY\u0006sgn\u001c;bi&|gn\u00117bgN\fa#\u00118o_R\fG/[8o\t\u00164\u0017-\u001e7u\u00072\f7o]\u0001\u0014\u0015\u00064\u0018-\u00118o_R\fG/[8o\u00072\f7o]\u0001\u0011\u0005\u0016\fg\u000e\u0015:pa\u0016\u0014H/_!uiJ\fqCQ8pY\u0016\fgNQ3b]B\u0013x\u000e]3sif\fE\u000f\u001e:\u0002'\r{W\u000e]5mKRKW.Z(oYf\fE\u000f\u001e:\u0002\u001d\u0011+\u0007O]3dCR,G-\u0011;ue\u0006\u0011B)\u001a9sK\u000e\fG/\u001a3OC6,\u0017\t\u001e;s\u0003e!U\r\u001d:fG\u0006$X\rZ%oQ\u0016\u0014\u0018\u000e^1oG\u0016\fE\u000f\u001e:\u00021\u0011+\u0007O]3dCR,Gm\u0014<feJLG-\u001b8h\u0003R$(/\u0001\u0006OCRLg/Z!uiJ\f\u0001cU2bY\u0006Le\u000e\\5oK\u000ec\u0017m]:\u0002%M\u001b\u0017\r\\1O_&sG.\u001b8f\u00072\f7o]\u0001\u0015'\u0016\u0014\u0018.\u00197WKJ\u001c\u0018n\u001c8V\u0013\u0012\u000bE\u000f\u001e:\u00025M+'/[1m-\u0016\u00148/[8o+&#\u0015I\u001c8pi\u0006$\u0018n\u001c8\u0016\u000595\u0007\u0003BCV\u001d\u001fLAA$5\u000fT\nq\u0011I\u001c8pi\u0006$\u0018n\u001c8J]\u001a|\u0017\u0002\u0002Hk\u000bs\u0012q\"\u00118o_R\fG/[8o\u0013:4wn]\u0001\u0011'B,7-[1mSj,Gm\u00117bgN\f1\u0002\u00165s_^\u001c8\t\\1tg\u0006iAK]1og&,g\u000e^!uiJ\fa\"\u00168dQ\u0016\u001c7.\u001a3DY\u0006\u001c8/\u0001\u000bV]\u000eDWmY6fI\n{WO\u001c3t\u00072\f7o]\u0001\u0013+:\u001c\b/Z2jC2L'0\u001a3DY\u0006\u001c8/A\u0006V]V\u001cX\rZ\"mCN\u001c\u0018\u0001\u0004,pY\u0006$\u0018\u000e\\3BiR\u0014\u0018A\u0005&bm\u0006$U\r\u001d:fG\u0006$X\rZ!uiJ\f\u0001DR;oGRLwN\\1m\u0013:$XM\u001d4bG\u0016\u001cE.Y:t\u0003U\u0011U-\u00198HKR$XM\u001d+be\u001e,Go\u00117bgN\fQCQ3b]N+G\u000f^3s)\u0006\u0014x-\u001a;DY\u0006\u001c8/\u0001\tGS\u0016dG\rV1sO\u0016$8\t\\1tg\u0006\tr)\u001a;uKJ$\u0016M]4fi\u000ec\u0017m]:\u0002!A\u000b'/Y7UCJ<W\r^\"mCN\u001c\u0018!E*fiR,'\u000fV1sO\u0016$8\t\\1tg\u0006\trJ\u00196fGR$\u0016M]4fi\u000ec\u0017m]:\u0002!\rc\u0017m]:UCJ<W\r^\"mCN\u001c\u0018!E'fi\"|G\rV1sO\u0016$8\t\\1tg\u0006!B*\u00198hk\u0006<WMR3biV\u0014X-\u00118o_R\fQ\"\u00138iKJLG/\u001a3BiR\u0014\u0018\u0001\u0005&V]&$\u0018I\u001c8pi\u0006$\u0018n\u001c8t+\ty)\u0001\u0005\u0004\u0006J\u001e-bQE\u0001\u0016Y\u0006tw-^1hK\u001a+\u0017\r^;sK6{G-\u001e7f\u0003AI7/T3uC\u0006sgn\u001c;bi&|g\u000e\u0006\u0003\u0007r=5\u0001\u0002\u0003Do\tc\u0001\rA\"\n)\t\u0011E\u0012rP\u0001\u0010[\u0016$\u0018-\u00118o_R\fG/[8og\u00069B-\u001a4bk2$\u0018I\u001c8pi\u0006$\u0018n\u001c8UCJ<W\r\u001e\u000b\u0005\rKy9\u0002\u0003\u0005\u0010\u001a\u0011U\u0002\u0019AH\u000e\u0003\u0005!\b\u0003BCV\u001f;IAad\b\u0010\"\t!AK]3f\u0013\u0011y\u0019#\"\u001f\u0003\u000bQ\u0013X-Z:\u0002+\u0005sgn\u001c;bi&|g\u000eR3gCVdG/\u0011;ue\u0006\u0011b-\u0019;bY6K7o]5oONKXNY8m))1)dd\u000b\u00100=ErR\u0007\u0005\t\u001f[!I\u00041\u0001\u0007&\u0005)qn\u001e8fe\"Aa1\u0001C\u001d\u0001\u0004)9\u000e\u0003\u0006\u00104\u0011e\u0002\u0013!a\u0001\u0017?\nAa\u001e5bi\"Qqr\u0007C\u001d!\u0003\u0005\rac\u0018\u0002\u0011\u0005$G-\u001a8ek6\fADZ1uC2l\u0015n]:j]\u001e\u001c\u00160\u001c2pY\u0012\"WMZ1vYR$3'\u0006\u0002\u0010>)\"1rLFZ\u0003q1\u0017\r^1m\u001b&\u001c8/\u001b8h'fl'm\u001c7%I\u00164\u0017-\u001e7uIQ\n!cZ3u\u0019\u0006tw-^1hK\u001a+\u0017\r^;sKR1aQEH#\u001f\u000fB\u0001Bb\u0001\u0005@\u0001\u00071r\f\u0005\u000b\u001f[!y\u0004%AA\u0002\u0019\u0015\u0012\u0001H4fi2\u000bgnZ;bO\u00164U-\u0019;ve\u0016$C-\u001a4bk2$HEM\u0001\u000bi\u0016\u0014X.T3nE\u0016\u0014HC\u0002D\u0013\u001f\u001fz\t\u0006\u0003\u0005\u0010.\u0011\r\u0003\u0019\u0001D\u0013\u0011!1\u0019\u0001b\u0011A\u0002-}\u0013a\u00044j]\u0012t\u0015-\\3e\u001b\u0016l'-\u001a:\u0015\r\u0019\u0015rrKH.\u0011!yI\u0006\"\u0012A\u0002\u0015]\u0017\u0001\u00034vY2t\u0015-\\3\t\u0011=uCQ\ta\u0001\rK\tAA]8piR1aQEH1\u001fOB\u0001bd\u0019\u0005H\u0001\u0007qRM\u0001\u0005g\u0016<7\u000f\u0005\u0004\u0007H\u00195Sq\u001b\u0005\t\u001f;\"9\u00051\u0001\u0007&!\"AqIE@\u0003%9W\r^'f[\n,'\u000f\u0006\u0004\u0007&==t\u0012\u000f\u0005\t\u001f[!I\u00051\u0001\u0007&!Aa1\u0001C%\u0001\u0004)9.\u0001\bhKRlU-\u001c2feZ\u000bG.^3\u0015\r\u0019uxrOH=\u0011!yi\u0003b\u0013A\u0002\u0019\u0015\u0002\u0002\u0003D\u0002\t\u0017\u0002\r!b6\u0002\u001f\u001d,G/T3nE\u0016\u0014Xj\u001c3vY\u0016$bAb)\u0010\u0000=\u0005\u0005\u0002CH\u0017\t\u001b\u0002\rA\"\n\t\u0011\u0019\rAQ\na\u0001\u000b/\fQbZ3u)f\u0004X-T3nE\u0016\u0014HCBEx\u001f\u000f{I\t\u0003\u0005\u0010.\u0011=\u0003\u0019\u0001D\u0013\u0011!1\u0019\u0001b\u0014A\u0002\u0015]\u0017AD4fi6+WNY3s\u00072\f7o\u001d\u000b\u0007\u000bo|yi$%\t\u0011=5B\u0011\u000ba\u0001\rKA\u0001Bb\u0001\u0005R\u0001\u0007Qq[\u0001\u0010O\u0016$X*Z7cKJlU\r\u001e5pIR1aQ`HL\u001f3C\u0001b$\f\u0005T\u0001\u0007aQ\u0005\u0005\t\r\u0007!\u0019\u00061\u0001\u0006X\u0006iq-\u001a;EK\u000edW*\u001a;i_\u0012$bA\"@\u0010 >\u0005\u0006\u0002CH\u0017\t+\u0002\rA\"\n\t\u0011\u0019\rAQ\u000ba\u0001\u000b/\fAbZ3u\t\u0016\u001cGNV1mk\u0016$bA\"@\u0010(>%\u0006\u0002CH\u0017\t/\u0002\rA\"\n\t\u0011\u0019\rAq\u000ba\u0001\u000b/\fA\"\u001a:bgV\u0014X\r\u00155bg\u0016,\"ad,\u0011\t=Ev2W\u0007\u0003\u000bsJAa$.\u0006z\t)\u0001\u000b[1tK\u0006\u0011r-\u001a;NK6\u0014WM]%g\t\u00164\u0017N\\3e)\u00191)cd/\u0010>\"AqR\u0006C.\u0001\u00041)\u0003\u0003\u0005\u0007\u0004\u0011m\u0003\u0019ACl\u0003\u001d9W\r\u001e#fG2$bA\"\n\u0010D>\u0015\u0007\u0002CH\u0017\t;\u0002\rA\"\n\t\u0011\u0019\rAQ\fa\u0001\u000b/\f\u0001cZ3u\t\u0016\u001cG.\u00134EK\u001aLg.\u001a3\u0015\r\u0019\u0015r2ZHg\u0011!yi\u0003b\u0018A\u0002\u0019\u0015\u0002\u0002\u0003D\u0002\t?\u0002\r!b6\u0002\u00119,w/\u00117jCN$\u0002\u0002c\u0004\u0010T>Uwr\u001b\u0005\t\u001f[!\t\u00071\u0001\u0007&!Aa1\u0001C1\u0001\u00041)\u0001\u0003\u0005\u0010Z\u0012\u0005\u0004\u0019AD\u0006\u0003\u0015\tG.[1t\u0003A\u0019\b/Z2jC2\u0004v\u000e\\=DY\u0006\u001c8\u000f\u0006\u0004\u0010`>\u001dx\u0012\u001e\u000b\u0005\u000bo|\t\u000f\u0003\u0005\u0010d\u0012\r\u0004\u0019AHs\u0003!\u0001\u0018M]3oi\u001as\u0007\u0003CCF\r32)cb\u0003\t\u0011\u0019\rA1\ra\u0001\r\u000bA\u0001bd;\u0005d\u0001\u0007qR^\u0001\u0006M2\fwm\u001d\t\u0005\u000b\u0017{y/\u0003\u0003\u0010r\u0016\u0005%\u0001\u0002'p]\u001e\fQB\\3x!>d\u00170T3uQ>$GCCH|!\u000f\u0001Z\u0001%\u0004\u0011\u0010Q!!2JH}\u0011!yY\u0010\"\u001aA\u0002=u\u0018\u0001C2sK\u0006$XM\u00128\u0011\u0007\u0015-VAA\tQ_2LX*\u001a;i_\u0012\u001c%/Z1u_J\u0004\u0002\"b#\u0007Z\u0019\u0015\u00033\u0001\t\t\u000b\u0017cy\u000b%\u0002\b\fA1Q1RF6\u0017OC\u0001\u0002%\u0003\u0005f\u0001\u0007Q\u0011]\u0001\u000fif\u0004X\rU1sC6\u001cu.\u001e8u\u0011!yi\u0003\"\u001aA\u0002\u0019\u0015\u0002\u0002\u0003D\u0002\tK\u0002\rA#8\t\u0011=-HQ\ra\u0001\u001f[\f!#\u001a8uKJtUm\u001e)pYflU\r\u001e5pIRQ\u0001S\u0003I\r!7\u0001j\u0002e\b\u0015\t)-\u0003s\u0003\u0005\t\u001fw$9\u00071\u0001\u0010~\"A\u0001\u0013\u0002C4\u0001\u0004)\t\u000f\u0003\u0005\u0010.\u0011\u001d\u0004\u0019\u0001D\u0013\u0011!1\u0019\u0001b\u001aA\u0002)u\u0007\u0002CHv\tO\u0002\ra$<\u0002%9,w\u000fV\u0019Ok2d\u0017M]=NKRDw\u000e\u001a\u000b\t!K\u0001J\u0003e\u000b\u0011.Q!!2\nI\u0014\u0011!yY\u0010\"\u001bA\u0002=\u0015\b\u0002CH\u0017\tS\u0002\rA\"\n\t\u0011\u0019\rA\u0011\u000ea\u0001\u0015;D\u0001bd;\u0005j\u0001\u0007qR^\u0001\u0018K:$XM\u001d(foR\u000bd*\u001e7mCJLX*\u001a;i_\u0012$\u0002\u0002e\r\u00118Ae\u00023\b\u000b\u0005\u0015\u0017\u0002*\u0004\u0003\u0005\u0010|\u0012-\u0004\u0019AHs\u0011!yi\u0003b\u001bA\u0002\u0019\u0015\u0002\u0002\u0003D\u0002\tW\u0002\rA#8\t\u0011=-H1\u000ea\u0001\u001f[\f\u0011C\\3x)Fr\u0015\u000e\\1ss6+G\u000f[8e)!\u0001\n\u0005%\u0012\u0011HA%C\u0003\u0002F&!\u0007B\u0001bd?\u0005n\u0001\u0007qR\u001d\u0005\t\u001f[!i\u00071\u0001\u0007&!Aa1\u0001C7\u0001\u0004Qi\u000e\u0003\u0005\u0010l\u00125\u0004\u0019AHw\u0003Y)g\u000e^3s\u001d\u0016<H+\r(jY\u0006\u0014\u00180T3uQ>$G\u0003\u0003I(!'\u0002*\u0006e\u0016\u0015\t)-\u0003\u0013\u000b\u0005\t\u001fw$y\u00071\u0001\u0010f\"AqR\u0006C8\u0001\u00041)\u0003\u0003\u0005\u0007\u0004\u0011=\u0004\u0019\u0001Fo\u0011!yY\u000fb\u001cA\u0002=5\u0018a\u00038foR\u000bT*\u001a;i_\u0012$\u0002\u0002%\u0018\u0011bA\r\u0004S\r\u000b\u0005\u0015\u0017\u0002z\u0006\u0003\u0005\u0010|\u0012E\u0004\u0019AHs\u0011!yi\u0003\"\u001dA\u0002\u0019\u0015\u0002\u0002\u0003D\u0002\tc\u0002\rA#8\t\u0011=-H\u0011\u000fa\u0001\u001f[\f\u0001#\u001a8uKJtUm\u001e+2\u001b\u0016$\bn\u001c3\u0015\u0011A-\u0004s\u000eI9!g\"BAc\u0013\u0011n!Aq2 C:\u0001\u0004y)\u000f\u0003\u0005\u0010.\u0011M\u0004\u0019\u0001D\u0013\u0011!1\u0019\u0001b\u001dA\u0002)u\u0007\u0002CHv\tg\u0002\ra$<\u0002\u001d%\u001c\b\u000b[1oi>l7\t\\1tg\u0006!2/\u001f8uQ\u0016$\u0018nY\"pe\u0016\u001cE.Y:tKN,\"\u0001e\u001f\u0011\r\u0015%w1\u0006I?%\u0011\u0001z(c<\u0007\r)m\u0006\u0001\u0001I?\t!Qy\fe \u0003\u0002A\r\u0015\u0003BC|\u0013_\fAc]=oi\",G/[2D_J,W*\u001a;i_\u0012\u001cXC\u0001IE!\u0019)Imb\u000b\u000bL\u0005\u0019\u0002.\u001b6bG.,GmQ8sK\u000ec\u0017m]:fg\u0006Y2/_7c_2\u001chj\u001c;Qe\u0016\u001cXM\u001c;J]\nKH/Z2pI\u0016,\"\u0001%%\u0011\r\u0015%w1\u0006IJ%\u0011\u0001*J\"\n\u0007\r)m\u0006\u0001\u0001IJ\t!Qy\f%&\u0003\u0002Ae\u0015\u0003\u0002IN!?\u0013b\u0001%(\u0006x\u001auhA\u0002F^\u0001\u0001\u0001ZJ\u0005\u0003\u0011\"\u001a\u0015bA\u0002F^\u0001\u0001\u0001z\n\u0002\u0005\u000b@B\u0005&\u0011\u0001IS#\u0011\u0001:\u000b%,\u0011\t\u0015-\u0005\u0013V\u0005\u0005!W+\tI\u0001\u0003Ok2d'\u0003\u0002IX\rK1aAc/\u0001\u0001A5F\u0001\u0003Fn!_\u0013\t\u0001e-\u0012\tAUVq\u001b\n\u0007!o3)A#8\u0007\r)m\u0006\u0001\u0001I[\t!QY\u000e%)\u0003\u0002Am\u0016\u0003\u0002I_!\u0003\u0014b\u0001e0\u0007\u0006)ugA\u0002F^\u0001\u0001\u0001jL\u0005\u0003\u0011D\u0016]gA\u0002F^\u0001\u0001\u0001\n\r\u0002\u0005\u0011HB\r'\u0011\u0001IZ\u00051!\u0006.[:OC6,G+\u001f9f\t!QY\u000e%&\u0003\u0002A-\u0017\u0003\u0002Ig!#\u0014b\u0001e4\u0007\u0006)ugA\u0002F^\u0001\u0001\u0001jM\u0005\u0003\u0011T\u0016]gA\u0002F^\u0001\u0001\u0001\n\u000e\u0003\u0005\u0011XBMg\u0011\u0001Im\u0003\u001dqWm\u001e(b[\u0016$B\u0001%1\u0011\\\"A\u0001S\u001cIk\u0001\u0004Yy&A\u0002tiJD\u0001\u0002%9\u0011T\u001a\u0005\u00013]\u0001\bgV\u0014g*Y7f)\u0019\u0001\n\r%:\u0011j\"A\u0001s\u001dIp\u0001\u0004)\t/\u0001\u0003ge>l\u0007\u0002\u0003Iv!?\u0004\r!\"9\u0002\u0005Q|\u0007\u0002\u0003Ix!'4\t\u0001%=\u0002\u001b\r|W\u000e]1oS>tg*Y7f+\t\u0001\u001aP\u0005\u0003\u0011v\u0016]gA\u0002F^\u0001\u0001\u0001\u001a\u0010\u0002\u0005\u0011HBU(\u0011\u0001I}#\u0011\u0001Z0b6\u0013\rAu(R\u001cD\u0003\r\u0019QY\f\u0001\u0001\u0011|\"A\u0011\u0013\u0001Ij\r\u0003\t\u001a!\u0001\u0003oKb$XC\u0001Ia\t!\u0001:\re5\u0003\u0002Am\u0016!G5t!>\u001c8/\u001b2mKNKh\u000e\u001e5fi&\u001c\u0007+\u0019:f]R\fACY8yK\u00124\u0016\r\\;f\u00072\f7o]3t'\u0016$\u0018!F5t!JLW.\u001b;jm\u00164\u0016\r\\;f\u00072\f7o\u001d\u000b\u0005\rc\nz\u0001\u0003\u0005\u0007^\u0012\r\u0005\u0019\u0001D\u0013\u0003QI7\u000f\u0015:j[&$\u0018N^3WC2,X\rV=qKR!a\u0011OI\u000b\u0011!99\r\"\"A\u0002\u001d-\u0011!E5t\u0005>DX\r\u001a,bYV,7\t\\1tgR!a\u0011OI\u000e\u0011!1i\u000eb\"A\u0002\u0019\u0015\u0012!E;oE>DX\r\u001a,bYV,7\t\\1tgR!aQEI\u0011\u0011!1i\u000e\"#A\u0002\u0019\u0015\u0012AE5t\u001dVlWM]5d-\u0006dW/\u001a+za\u0016$BA\"\u001d\u0012(!Aqq\u0019CF\u0001\u00049Y!\u0001\u000eTQ><\u0018i]%oM&D\u0018I\u001c8pi\u0006$\u0018n\u001c8DY\u0006\u001c8/A\u0005tS\u001et\u0017\r^;sKR!1rLI\u0018\u0011!99\rb$A\u0002\u001d-!AF+oSZ,'o]3EKB,g\u000eZ3oiRK\b/Z:\u0014\t\u0011MU\u0011R\u0001\tk:Lg/\u001a:tKR!\u0011\u0013HI\u001e!\u0011A)\u0006b%\t\u0011EUBq\u0013a\u0001\u001f7\t\u0001B\\1nKRK\b/Z\u0001\t[>$7\u000fV=qK\u0006Ia\r\\1hgRK\b/Z\u0001\u000bgfl'm\u001c7UsB,\u0017\u0001\u0003;sK\u0016$\u0016\u0010]3\u0002\u0017\r\f7/\u001a#fMRK\b/Z\u0001\rY&4G/\u00192mKRK\b/Z\u0001\u000fk:d\u0017N\u001a;bE2,G+\u001f9f\u0003AIG/\u001a:bE2,GK]3f)f\u0004X-\u0001\u0007mSN$HK]3f)f\u0004X-\u0001\tmSN$H*[:u)J,W\rV=qK\u0006\u0011RO\\5wKJ\u001cX-T3nE\u0016\u0014H+\u001f9f)\u00119Y!e\u0016\t\u0011\u0019\rAq\u0016a\u0001\r\u000b\u0011aBU;o\t\u00164\u0017N\\5uS>t7o\u0005\u0003\u00052\u0016%ECAI0!\u0011A)\u0006\"-\u0002!%\u001c8\u000b\u001e:j]\u001e\fE\rZ5uS>tG\u0003\u0002D9#KB\u0001B\"8\u00056\u0002\u0007aQE\u0001\u0013'R\u0014\u0018N\\4`m\u0006dW/Z(g?&sG/A\bTiJLgnZ\"p]R,\u0007\u0010^0g\u0003=\u0019FO]5oO\u000e{g\u000e^3yi~\u001b\u0018!E*ue&twmQ8oi\u0016DHo\u0018:bo\u0006\u00192\u000b\u001e:j]\u001e\u001cuN\u001c;fqR|\u0016\r\u001d9ms\u0006y\u0011I\u001d:po\u0006\u001b8o\\2DY\u0006\u001c8/\u0001\u0007jg\u0006\u0013(o\\<BgN|7\r\u0006\u0003\u0007rE]\u0004\u0002\u0003Do\t\u0007\u0004\rA\"\n\u0002)\t{\u00070Z:`SNtU/\u001c2fe>\u0013(i\\8m\u00039\u0011u\u000e_3t?&\u001ch*^7cKJ\f1C^1mk\u0016\u001cE.Y:t\u0007>l\u0007/\u00198j_:$BAb)\u0012\u0002\"Aa1\u0001Ce\u0001\u0004Qi.\u0001\u000bwC2,XmQ8na\u0006t\u0017n\u001c8NK6\u0014WM\u001d\u000b\u0007\r{\f:)e#\t\u0011E%E1\u001aa\u0001\u000b/\f\u0011b\u00197bgNt\u0015-\\3\t\u0011E5E1\u001aa\u0001\u0015;\f!\"\\3uQ>$g*Y7f\u0003%\u0011w\u000e_'fi\"|G-\u0006\u0002\u0012\u0014BAa1\u0003D\u0011\rK1i0A\u0006v]\n|\u00070T3uQ>$\u0017aB5t+:\u0014w\u000e_\u0001\u0006SN\u0014u\u000e_\u0001\r\u001fB$\u0018n\u001c8`CB\u0004H._\u0001\u0011\u001fB$\u0018n\u001c8`SN$UMZ5oK\u0012\f!b\u00149uS>twlZ3u\u0003%\u0019V-]0baBd\u00170A\u0006jg2K7\u000f^!qa2LH\u0003\u0002D9#OC\u0001\"%+\u0005f\u0002\u0007q2D\u0001\u0005iJ,W-\u0001\u0006jgN+\u0017/\u00119qYf$BA\"\u001d\u00120\"A\u0011\u0013\u0016Ct\u0001\u0004yY\"A\u0003jg:KG\u000e\u0006\u0003\u0007rEU\u0006\u0002\u0003Do\tS\u0004\rA\"\n\u0002\u001f%\u001c\bK]3eK\u001a\u001cE.Y:t\u001f\u001a$BA\"\u001d\u0012<\"AaQ\u001cCv\u0001\u00041)#\u0001\tUC\u001el\u0015\r^3sS\u0006d\u0017N_3sgV\u0011\u0011\u0013\u0019\t\t\u000b\u0013,\u0019N\"\n\u0007&\u0005QA+Y4Ts6\u0014w\u000e\\:\u0002\u001fA\u0013X\rZ3g?\u000e|gNZ8s[N\fQbU;c)f\u0004X-T8ek2,\u0017\u0001D*vERK\b/Z0sK\u001ad\u0017A\u0004)sK\u0012,gmX2mCN\u001cxJZ\u0001\u0015!J,G-\u001a4`I>,(\r\\33\t>,(\r\\3\u0002%A\u0013X\rZ3g?\u001adw.\u0019;3\r2|\u0017\r^\u0001\u0011!J,G-\u001a4`Ef$XM\r\"zi\u0016\f!\u0003\u0015:fI\u00164wl\u001d5peR\u00144\u000b[8si\u0006)\u0002K]3eK\u001a|6\r[1se\rC\u0017M]1di\u0016\u0014\u0018A\u0005)sK\u0012,gmX5oiJJe\u000e^3hKJ\f\u0001\u0003\u0015:fI\u00164w\f\\8oOJbuN\\4\u0002-A\u0013X\rZ3g?\n|w\u000e\\3b]J\u0012un\u001c7fC:\fA\u0004\u0015:f\t\u00164w\f\u001d:j[&$\u0018N^3teA\u0013\u0018.\\5uSZ,7/A\tQe\u0016$WMZ0j[Bd\u0017nY5uYf\f!\u0004\u0015:fI\u00164w,\u00198zeM$(/\u001b8hC\u0012$W*\u001a;i_\u0012\f\u0001#\u0019:sCf\f\u0005\u000f\u001d7z\u001b\u0016$\bn\u001c3\u0002#\u0005\u0014(/Y=Va\u0012\fG/Z'fi\"|G-A\tbeJ\f\u0017\u0010T3oORDW*\u001a;i_\u0012\f\u0001#\u0019:sCf\u001cEn\u001c8f\u001b\u0016$\bn\u001c3\u0002-\u0015t7/\u001e:f\u0003\u000e\u001cWm]:jE2,W*\u001a;i_\u0012\f\u0001#\u0019:sCf\u001cE.Y:t\u001b\u0016$\bn\u001c3\u00023]\u0014\u0018\r\u001d,be\u0006\u0014xm\u001d*fM\u0006\u0013(/Y=NKRDw\u000eZ\u0001!O\u0016tWM]5d/J\f\u0007OV1sCJ<7OU3g\u0003J\u0014\u0018-_'fi\"|G-\u0001\rqe&l\u0017\u000e^5wK^\u0013\u0018\r]!se\u0006LX*\u001a;i_\u0012,\"!e>\u0011\r\u0015%\u0017\u0013 D\u0013\u0013\u0011Iy%b3\u0002)I+h\u000e^5nKN#\u0018\r^5dg~Kwn\u001c2f\u0003Q9%o\\;q\u001f\u001a\u001c\u0006/Z2jC2L'0\u00192mK\u0006\u0001r+Z1l)f\u0004X\rV1h\u00072\f7o]\u0001\u0012/\u0016\f7\u000eV=qKR\u000bw-T8ek2,\u0017\u0001\u0004+za\u0016$\u0016mZ\"mCN\u001c\u0018!\u0004+za\u0016$\u0016mZ'pIVdW-A\nnCR,'/[1mSj,7\t\\1tgR\u000bw-\u0001\fnCR,'/[1mSj,w+Z1l)f\u0004X\rV1h\u0003Ii\u0017\r^3sS\u0006d\u0017N_3UsB,G+Y4\u0002%\u0015D\b/\u001a:j[\u0016tG/\u00197N_\u0012,H.Z\u0001\u000e\u001b\u0006\u001c'o\\:GK\u0006$XO]3\u0002\u001f\u0011Kh.Y7jGN4U-\u0019;ve\u0016\f\u0011\u0003U8ti\u001aL\u0007p\u00149t\r\u0016\fG/\u001e:f\u0003Y\u0011VM\u001a7fGRLg/Z\"bY2\u001ch)Z1ukJ,\u0017AG%na2L7-\u001b;D_:4XM]:j_:\u001ch)Z1ukJ,\u0017A\u0005%jO\",'oS5oIN4U-\u0019;ve\u0016DC\"b\u0011\n\u0000&u'S\u0004F\u0005%C\t#Ae\b\u0002\tN\u001c\u0017\r\\1/Y\u0006tw-^1hK:B\u0017n\u001a5fe.Kg\u000eZ:!]>\u0004Cn\u001c8hKJ\u0004c.Z3eg\u0002\"x\u000e\t2fA%l\u0007o\u001c:uK\u0012\u0004S\r\u001f9mS\u000eLG\u000f\\=\"\u0005I\r\u0012A\u0002\u001a/cMr\u0013'A\nFq&\u001cH/\u001a8uS\u0006d7OR3biV\u0014X-\u0001\tBa&,f.\u001b<feN,'+Z5gs\u0006iAK]3fgR\u0013X-\u001a+za\u0016\f\u0001\u0002\u0016:fKRK\b/\u001a\t\u0005%_)\t&\u0004\u0002\u00052\nAAK]3f)f\u0004Xm\u0005\u0003\u0006R\u0015%EC\u0001J\u0017)\u00111\tH%\u000f\t\u0011!\u001dQQ\u000ba\u0001\u000f\u0017\t1bU;ciJ,W\rV=qKB!!sFC-\u0005-\u0019VO\u0019;sK\u0016$\u0016\u0010]3\u0014\t\u0015eS\u0011\u0012\u000b\u0003%{!BA\"\u001d\u0013H!A\u0001rAC/\u0001\u00049Y!A\u0006FqB\u00148\t\\1tg>3\u0007\u0003\u0002J\u0018\u000bC\u00121\"\u0012=qe\u000ec\u0017m]:PMN!Q\u0011MCE)\t\u0011Z\u0005\u0006\u0003\r\\IU\u0003\u0002CDd\u000bK\u0002\rab\u0003\u0002)A\u000b'\u000f^5bY6\u000bg.\u001b4fgR\u001cE.Y:t\u0003=i\u0015M\\5gKN$8+_7c_2\u001c\u0018AF5t!>d\u00170\\8sa\"L7mU5h]\u0006$XO]3\u0015\t\u0019E$s\f\u0005\t\r;,Y\u00071\u0001\u0007&\u0005I2kY1mC~S\u0015M^19?\u000e{W\u000e]1u!\u0006\u001c7.Y4f\u0003-1U\u000f^;sK~+h.\u001b;\u0002#\u0019+H/\u001e:f?>t7i\\7qY\u0016$X-\u0001\u0007GkR,(/Z0wC2,X-\u0001\tQe>l\u0017n]3`G>l\u0007\u000f\\3uKR\u0011Q\u0011V\u0001\u000eK:$XM\u001d(fo\u000ec\u0017m]:\u0015\u0015\u0015](\u0013\u000fJ:%k\u0012:\bC\u0004\u0010.\u0019\u0001\rA\"\n\t\u000f\u0019\ra\u00011\u0001\u0007\u0006!9a\u0012\u0004\u0004A\u0002-\u001d\u0006\"CHv\rA\u0005\t\u0019AHw\u0003])g\u000e^3s\u001d\u0016<8\t\\1tg\u0012\"WMZ1vYR$C'\u0006\u0002\u0013~)\"qR^FZ\u0003%qWm^'fi\"|G\r\u0006\u0007\u000bLI\r%S\u0011JD%\u0013\u0013\n\nC\u0004\u0010.!\u0001\rA\"\n\t\u000f\u0019\r\u0001\u00021\u0001\u000b^\"9\u00112\r\u0005A\u0002-\u001d\u0006b\u0002JF\u0011\u0001\u0007!SR\u0001\u0007[.lU\r\u001e5\u0011\u0011\u0015-e\u0011\fJH\u000f\u0017\u0001bAb\u0012\u0007N\u0019u\bbBHv\u0011\u0001\u0007qR^\u0001\u000fK:$XM\u001d(fo6+G\u000f[8e)1QYEe&\u0013\u001aJm%S\u0014JP\u0011\u001dyi#\u0003a\u0001\rKAqAb\u0001\n\u0001\u0004Qi\u000eC\u0004\nd%\u0001\rac*\t\u000f1%\u0011\u00021\u0001\b\f!Iq2^\u0005\u0011\u0002\u0003\u0007qR^\u0001\u0019K:$XM\u001d(fo6+G\u000f[8eI\u0011,g-Y;mi\u0012*\u0014!F3oi\u0016\u0014h*Z<Ok2d\u0017M]=NKRDw\u000e\u001a\u000b\u000b\u0015\u0017\u0012:K%+\u0013,J5\u0006bBH\u0017\u0017\u0001\u0007aQ\u0005\u0005\b\r\u0007Y\u0001\u0019\u0001Fo\u0011\u001daIa\u0003a\u0001\u000f\u0017Aqad;\f\u0001\u0004yi\u000f\u0005\u0003\u00102JE\u0016\u0002\u0002JZ\u000bs\u00121bU=nE>dG+\u00192mK\u0002"
)
public interface Definitions extends StandardDefinitions {
   definitions$ definitions();

   // $FF: synthetic method
   static Symbols.ClassSymbol scala$reflect$internal$Definitions$$enterNewClass$(final Definitions $this, final Symbols.Symbol owner, final Names.TypeName name, final List parents, final long flags) {
      return $this.scala$reflect$internal$Definitions$$enterNewClass(owner, name, parents, flags);
   }

   default Symbols.ClassSymbol scala$reflect$internal$Definitions$$enterNewClass(final Symbols.Symbol owner, final Names.TypeName name, final List parents, final long flags) {
      Symbols.ClassSymbol clazz = owner.newClassSymbol(name, ((Positions)this).NoPosition(), flags);
      return (Symbols.ClassSymbol)clazz.setInfoAndEnter((SymbolTable)this.new ClassInfoType(parents, ((Scopes)this).newScope(), clazz)).markAllCompleted();
   }

   // $FF: synthetic method
   static long scala$reflect$internal$Definitions$$enterNewClass$default$4$(final Definitions $this) {
      return $this.scala$reflect$internal$Definitions$$enterNewClass$default$4();
   }

   default long scala$reflect$internal$Definitions$$enterNewClass$default$4() {
      return 0L;
   }

   private Symbols.MethodSymbol newMethod(final Symbols.Symbol owner, final Names.TermName name, final List formals, final Function1 mkMeth, final long flags) {
      Names.TermName var10001 = (Names.TermName)name.encode();
      NoPosition$ newMethod_pos = ((Positions)this).NoPosition();
      Names.TermName newMethod_name = var10001;
      if (owner == null) {
         throw null;
      } else {
         Symbols.MethodSymbol var10000 = owner.createMethodSymbol(newMethod_name, newMethod_pos, 64L | flags);
         newMethod_name = null;
         newMethod_pos = null;
         Symbols.MethodSymbol msym = var10000;
         List params = msym.newSyntheticValueParams(formals);
         Types.Type info = (Types.Type)mkMeth.apply(params);
         return (Symbols.MethodSymbol)msym.setInfo(info).markAllCompleted();
      }
   }

   // $FF: synthetic method
   static Symbols.MethodSymbol scala$reflect$internal$Definitions$$enterNewMethod$(final Definitions $this, final Symbols.Symbol owner, final Names.TermName name, final List formals, final Types.Type restpe, final long flags) {
      return $this.scala$reflect$internal$Definitions$$enterNewMethod(owner, name, formals, restpe, flags);
   }

   default Symbols.MethodSymbol scala$reflect$internal$Definitions$$enterNewMethod(final Symbols.Symbol owner, final Names.TermName name, final List formals, final Types.Type restpe, final long flags) {
      Scopes.Scope var10000 = owner.info().decls();
      Names.TermName var10001 = (Names.TermName)name.encode();
      NoPosition$ newMethod_newMethod_pos = ((Positions)this).NoPosition();
      Names.TermName newMethod_newMethod_name = var10001;
      Symbols.MethodSymbol var16 = owner.createMethodSymbol(newMethod_newMethod_name, newMethod_newMethod_pos, 64L | flags);
      newMethod_newMethod_name = null;
      newMethod_newMethod_pos = null;
      Symbols.MethodSymbol newMethod_msym = var16;
      List var11 = newMethod_msym.newSyntheticValueParams(formals);
      Types.Type newMethod_info = (SymbolTable)this.new MethodType(var11, restpe);
      var16 = (Symbols.MethodSymbol)newMethod_msym.setInfo(newMethod_info).markAllCompleted();
      Object var12 = null;
      newMethod_info = null;
      return (Symbols.MethodSymbol)var10000.enter(var16);
   }

   // $FF: synthetic method
   static long scala$reflect$internal$Definitions$$enterNewMethod$default$5$(final Definitions $this) {
      return $this.scala$reflect$internal$Definitions$$enterNewMethod$default$5();
   }

   default long scala$reflect$internal$Definitions$$enterNewMethod$default$5() {
      return 0L;
   }

   // $FF: synthetic method
   static Symbols.MethodSymbol scala$reflect$internal$Definitions$$enterNewNullaryMethod$(final Definitions $this, final Symbols.Symbol owner, final Names.TermName name, final Types.Type restpe, final long flags) {
      return $this.scala$reflect$internal$Definitions$$enterNewNullaryMethod(owner, name, restpe, flags);
   }

   default Symbols.MethodSymbol scala$reflect$internal$Definitions$$enterNewNullaryMethod(final Symbols.Symbol owner, final Names.TermName name, final Types.Type restpe, final long flags) {
      Scopes.Scope var10000 = owner.info().decls();
      List newMethod_formals = .MODULE$;
      Names.TermName var10001 = (Names.TermName)name.encode();
      NoPosition$ newMethod_newMethod_pos = ((Positions)this).NoPosition();
      Names.TermName newMethod_newMethod_name = var10001;
      Symbols.MethodSymbol var16 = owner.createMethodSymbol(newMethod_newMethod_name, newMethod_newMethod_pos, 64L | flags);
      newMethod_newMethod_name = null;
      newMethod_newMethod_pos = null;
      Symbols.MethodSymbol newMethod_msym = var16;
      newMethod_msym.newSyntheticValueParams(newMethod_formals);
      Types.Type newMethod_info = (SymbolTable)this.new NullaryMethodType(restpe);
      var16 = (Symbols.MethodSymbol)newMethod_msym.setInfo(newMethod_info).markAllCompleted();
      newMethod_formals = null;
      Object var12 = null;
      newMethod_info = null;
      return (Symbols.MethodSymbol)var10000.enter(var16);
   }

   // $FF: synthetic method
   static Types.MethodType $anonfun$enterNewMethod$1(final Definitions $this, final Types.Type restpe$1, final List x$1) {
      return (SymbolTable)$this.new MethodType(x$1, restpe$1);
   }

   // $FF: synthetic method
   static Types.NullaryMethodType $anonfun$enterNewNullaryMethod$1(final Definitions $this, final Types.Type restpe$2, final List x$2) {
      return (SymbolTable)$this.new NullaryMethodType(restpe$2);
   }

   static void $init$(final Definitions $this) {
   }

   public class definitions$ extends DefinitionsClass {
   }

   public interface ValueClassDefinitions {
      void scala$reflect$internal$Definitions$ValueClassDefinitions$_setter_$scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToWeight_$eq(final Map x$1);

      void scala$reflect$internal$Definitions$ValueClassDefinitions$_setter_$scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToTag_$eq(final Map x$1);

      Map scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToWeight();

      Map scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToTag();

      default Nothing scala$reflect$internal$Definitions$$catastrophicFailure() {
         return ((Reporting)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).abort((new StringBuilder(69)).append("Could not find value classes! This is a catastrophic failure.  scala ").append(scala.util.Properties..MODULE$.versionString()).toString());
      }

      private Symbols.ClassSymbol valueClassSymbol(final Names.TypeName name) {
         Symbols.Symbol var2 = ((DefinitionsClass)this).getMember(((DefinitionsClass)this).ScalaPackageClass(), name);
         if (var2 instanceof Symbols.ClassSymbol) {
            return (Symbols.ClassSymbol)var2;
         } else {
            throw this.scala$reflect$internal$Definitions$$catastrophicFailure();
         }
      }

      default Map scala$reflect$internal$Definitions$$classesMap(final Function1 f) {
         List symbolsMap_syms = this.ScalaValueClassesNoUnit();
         if ((Collections)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer() == null) {
            throw null;
         } else {
            Map var10000 = scala.Predef..MODULE$.Map();
            if (symbolsMap_syms == null) {
               throw null;
            } else {
               Object var10001;
               if (symbolsMap_syms == .MODULE$) {
                  var10001 = .MODULE$;
               } else {
                  Object var8 = symbolsMap_syms.head();
                  Symbols.Symbol var9 = (Symbols.Symbol)var8;
                  scala.collection.immutable..colon.colon symbolsMap_mapFrom_map_h = new scala.collection.immutable..colon.colon(new Tuple2(var8, f.apply(var9.name())), .MODULE$);
                  scala.collection.immutable..colon.colon symbolsMap_mapFrom_map_t = symbolsMap_mapFrom_map_h;

                  for(List symbolsMap_mapFrom_map_rest = (List)symbolsMap_syms.tail(); symbolsMap_mapFrom_map_rest != .MODULE$; symbolsMap_mapFrom_map_rest = (List)symbolsMap_mapFrom_map_rest.tail()) {
                     var8 = symbolsMap_mapFrom_map_rest.head();
                     var9 = (Symbols.Symbol)var8;
                     scala.collection.immutable..colon.colon symbolsMap_mapFrom_map_nx = new scala.collection.immutable..colon.colon(new Tuple2(var8, f.apply(var9.name())), .MODULE$);
                     symbolsMap_mapFrom_map_t.next_$eq(symbolsMap_mapFrom_map_nx);
                     symbolsMap_mapFrom_map_t = symbolsMap_mapFrom_map_nx;
                  }

                  Statics.releaseFence();
                  var10001 = symbolsMap_mapFrom_map_h;
               }

               Object var10 = null;
               Object var11 = null;
               Object var12 = null;
               Object var13 = null;
               Object symbolsMap_mapFrom_apply_elems = var10001;
               if (var10000 == null) {
                  throw null;
               } else {
                  return (Map)MapFactory.apply$(var10000, (Seq)symbolsMap_mapFrom_apply_elems);
               }
            }
         }
      }

      private Map symbolsMap(final List syms, final Function1 f) {
         if ((Collections)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer() == null) {
            throw null;
         } else {
            Map var10000 = scala.Predef..MODULE$.Map();
            if (syms == null) {
               throw null;
            } else {
               Object var10001;
               if (syms == .MODULE$) {
                  var10001 = .MODULE$;
               } else {
                  Object var8 = syms.head();
                  Symbols.Symbol var9 = (Symbols.Symbol)var8;
                  scala.collection.immutable..colon.colon mapFrom_map_h = new scala.collection.immutable..colon.colon(new Tuple2(var8, f.apply(var9.name())), .MODULE$);
                  scala.collection.immutable..colon.colon mapFrom_map_t = mapFrom_map_h;

                  for(List mapFrom_map_rest = (List)syms.tail(); mapFrom_map_rest != .MODULE$; mapFrom_map_rest = (List)mapFrom_map_rest.tail()) {
                     var8 = mapFrom_map_rest.head();
                     var9 = (Symbols.Symbol)var8;
                     scala.collection.immutable..colon.colon mapFrom_map_nx = new scala.collection.immutable..colon.colon(new Tuple2(var8, f.apply(var9.name())), .MODULE$);
                     mapFrom_map_t.next_$eq(mapFrom_map_nx);
                     mapFrom_map_t = mapFrom_map_nx;
                  }

                  Statics.releaseFence();
                  var10001 = mapFrom_map_h;
               }

               Object var10 = null;
               Object var11 = null;
               Object var12 = null;
               Object var13 = null;
               Object mapFrom_apply_elems = var10001;
               if (var10000 == null) {
                  throw null;
               } else {
                  return (Map)MapFactory.apply$(var10000, (Seq)mapFrom_apply_elems);
               }
            }
         }
      }

      private Map symbolsMapFilt(final List syms, final Function1 p, final Function1 f) {
         if (syms == null) {
            throw null;
         } else {
            boolean filter_filterCommon_isFlipped = false;
            List filter_filterCommon_noneIn$1_l = syms;

            Object var10000;
            while(true) {
               if (filter_filterCommon_noneIn$1_l.isEmpty()) {
                  var10000 = .MODULE$;
                  break;
               }

               Object filter_filterCommon_noneIn$1_h = filter_filterCommon_noneIn$1_l.head();
               List filter_filterCommon_noneIn$1_t = (List)filter_filterCommon_noneIn$1_l.tail();
               Symbols.Symbol var25 = (Symbols.Symbol)filter_filterCommon_noneIn$1_h;
               if (BoxesRunTime.unboxToBoolean(p.apply(var25.name())) != filter_filterCommon_isFlipped) {
                  List filter_filterCommon_noneIn$1_allIn$1_remaining = filter_filterCommon_noneIn$1_t;

                  while(true) {
                     if (filter_filterCommon_noneIn$1_allIn$1_remaining.isEmpty()) {
                        var10000 = filter_filterCommon_noneIn$1_l;
                        break;
                     }

                     Object filter_filterCommon_noneIn$1_allIn$1_x = filter_filterCommon_noneIn$1_allIn$1_remaining.head();
                     var25 = (Symbols.Symbol)filter_filterCommon_noneIn$1_allIn$1_x;
                     if (BoxesRunTime.unboxToBoolean(p.apply(var25.name())) == filter_filterCommon_isFlipped) {
                        scala.collection.immutable..colon.colon filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead = new scala.collection.immutable..colon.colon(filter_filterCommon_noneIn$1_l.head(), .MODULE$);
                        List filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess = (List)filter_filterCommon_noneIn$1_l.tail();

                        scala.collection.immutable..colon.colon filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast;
                        for(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead; filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess != filter_filterCommon_noneIn$1_allIn$1_remaining; filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess.tail()) {
                           scala.collection.immutable..colon.colon filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem = new scala.collection.immutable..colon.colon(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess.head(), .MODULE$);
                           filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem);
                           filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem;
                        }

                        List filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filter_filterCommon_noneIn$1_allIn$1_remaining.tail();
                        List filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next;

                        while(!filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.isEmpty()) {
                           Object filter_filterCommon_noneIn$1_allIn$1_partialFill$1_head = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.head();
                           var25 = (Symbols.Symbol)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_head;
                           if (BoxesRunTime.unboxToBoolean(p.apply(var25.name())) != filter_filterCommon_isFlipped) {
                              filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                           } else {
                              while(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy != filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next) {
                                 scala.collection.immutable..colon.colon filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem = new scala.collection.immutable..colon.colon(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.head(), .MODULE$);
                                 filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem);
                                 filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem;
                                 filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.tail();
                              }

                              filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                              filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                           }
                        }

                        if (!filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.isEmpty()) {
                           filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy);
                        }

                        var10000 = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead;
                        Object var36 = null;
                        Object var39 = null;
                        Object var42 = null;
                        Object var45 = null;
                        Object var48 = null;
                        Object var51 = null;
                        Object var54 = null;
                        Object var57 = null;
                        break;
                     }

                     filter_filterCommon_noneIn$1_allIn$1_remaining = (List)filter_filterCommon_noneIn$1_allIn$1_remaining.tail();
                  }

                  Object var32 = null;
                  Object var34 = null;
                  Object var37 = null;
                  Object var40 = null;
                  Object var43 = null;
                  Object var46 = null;
                  Object var49 = null;
                  Object var52 = null;
                  Object var55 = null;
                  Object var58 = null;
                  break;
               }

               filter_filterCommon_noneIn$1_l = filter_filterCommon_noneIn$1_t;
            }

            Object var29 = null;
            Object var30 = null;
            Object var31 = null;
            Object var33 = null;
            Object var35 = null;
            Object var38 = null;
            Object var41 = null;
            Object var44 = null;
            Object var47 = null;
            Object var50 = null;
            Object var53 = null;
            Object var56 = null;
            Object var59 = null;
            List filter_filterCommon_result = (List)var10000;
            Statics.releaseFence();
            var10000 = filter_filterCommon_result;
            filter_filterCommon_result = null;
            List symbolsMap_syms = (List)var10000;
            if ((Collections)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer() == null) {
               throw null;
            } else {
               Map var69 = scala.Predef..MODULE$.Map();
               Object var10001;
               if (symbolsMap_syms == .MODULE$) {
                  var10001 = .MODULE$;
               } else {
                  Object var26 = symbolsMap_syms.head();
                  Symbols.Symbol var27 = (Symbols.Symbol)var26;
                  scala.collection.immutable..colon.colon symbolsMap_mapFrom_map_h = new scala.collection.immutable..colon.colon(new Tuple2(var26, f.apply(var27.name())), .MODULE$);
                  scala.collection.immutable..colon.colon symbolsMap_mapFrom_map_t = symbolsMap_mapFrom_map_h;

                  for(List symbolsMap_mapFrom_map_rest = (List)symbolsMap_syms.tail(); symbolsMap_mapFrom_map_rest != .MODULE$; symbolsMap_mapFrom_map_rest = (List)symbolsMap_mapFrom_map_rest.tail()) {
                     var26 = symbolsMap_mapFrom_map_rest.head();
                     var27 = (Symbols.Symbol)var26;
                     scala.collection.immutable..colon.colon symbolsMap_mapFrom_map_nx = new scala.collection.immutable..colon.colon(new Tuple2(var26, f.apply(var27.name())), .MODULE$);
                     symbolsMap_mapFrom_map_t.next_$eq(symbolsMap_mapFrom_map_nx);
                     symbolsMap_mapFrom_map_t = symbolsMap_mapFrom_map_nx;
                  }

                  Statics.releaseFence();
                  var10001 = symbolsMap_mapFrom_map_h;
               }

               Object var60 = null;
               Object var61 = null;
               Object var62 = null;
               Object var63 = null;
               Object symbolsMap_mapFrom_apply_elems = var10001;
               if (var69 == null) {
                  throw null;
               } else {
                  return (Map)MapFactory.apply$(var69, (Seq)symbolsMap_mapFrom_apply_elems);
               }
            }
         }
      }

      private String boxedName(final Names.Name name) {
         return (String)((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).sn().Boxed().apply(name.toTypeName());
      }

      default Map abbrvTag() {
         return this.symbolsMap(this.ScalaValueClasses(), this.scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToTag()).withDefaultValue('L');
      }

      default Map numericWeight() {
         return this.symbolsMapFilt(this.ScalaValueClasses(), this.scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToWeight().keySet(), this.scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToWeight());
      }

      default Map boxedModule() {
         return this.scala$reflect$internal$Definitions$$classesMap((x) -> ((Mirrors.RootsBase)((scala.reflect.api.Mirrors)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).rootMirror()).getModuleByName(this.boxedName(x)));
      }

      default Map boxedClass() {
         return this.scala$reflect$internal$Definitions$$classesMap((x) -> ((Mirrors.RootsBase)((scala.reflect.api.Mirrors)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).rootMirror()).getClassByName(this.boxedName(x)));
      }

      default Map refClass() {
         return this.scala$reflect$internal$Definitions$$classesMap((x) -> ((Mirrors.RootsBase)((scala.reflect.api.Mirrors)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).rootMirror()).getRequiredClass((new StringBuilder(17)).append("scala.runtime.").append(x).append("Ref").toString()));
      }

      default Map volatileRefClass() {
         return this.scala$reflect$internal$Definitions$$classesMap((x) -> ((Mirrors.RootsBase)((scala.reflect.api.Mirrors)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).rootMirror()).getRequiredClass((new StringBuilder(25)).append("scala.runtime.Volatile").append(x).append("Ref").toString()));
      }

      default Map lazyHolders() {
         List symbolsMap_syms = this.ScalaValueClasses();
         if ((Collections)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer() == null) {
            throw null;
         } else {
            Map var10000 = scala.Predef..MODULE$.Map();
            if (symbolsMap_syms == null) {
               throw null;
            } else {
               Object var10001;
               if (symbolsMap_syms == .MODULE$) {
                  var10001 = .MODULE$;
               } else {
                  Object var7 = symbolsMap_syms.head();
                  Names.Name var8 = ((Symbols.Symbol)var7).name();
                  scala.collection.immutable..colon.colon symbolsMap_mapFrom_map_h = new scala.collection.immutable..colon.colon(new Tuple2(var7, $anonfun$lazyHolders$1(this, var8)), .MODULE$);
                  scala.collection.immutable..colon.colon symbolsMap_mapFrom_map_t = symbolsMap_mapFrom_map_h;

                  for(List symbolsMap_mapFrom_map_rest = (List)symbolsMap_syms.tail(); symbolsMap_mapFrom_map_rest != .MODULE$; symbolsMap_mapFrom_map_rest = (List)symbolsMap_mapFrom_map_rest.tail()) {
                     var7 = symbolsMap_mapFrom_map_rest.head();
                     var8 = ((Symbols.Symbol)var7).name();
                     scala.collection.immutable..colon.colon symbolsMap_mapFrom_map_nx = new scala.collection.immutable..colon.colon(new Tuple2(var7, $anonfun$lazyHolders$1(this, var8)), .MODULE$);
                     symbolsMap_mapFrom_map_t.next_$eq(symbolsMap_mapFrom_map_nx);
                     symbolsMap_mapFrom_map_t = symbolsMap_mapFrom_map_nx;
                  }

                  Statics.releaseFence();
                  var10001 = symbolsMap_mapFrom_map_h;
               }

               Object var9 = null;
               Object var10 = null;
               Object var11 = null;
               Object var12 = null;
               Object symbolsMap_mapFrom_apply_elems = var10001;
               if (var10000 == null) {
                  throw null;
               } else {
                  return (Map)MapFactory.apply$(var10000, (Seq)symbolsMap_mapFrom_apply_elems);
               }
            }
         }
      }

      default Symbols.Symbol LazyRefClass() {
         return ((Mirrors.RootsBase)((scala.reflect.api.Mirrors)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).rootMirror()).getClassIfDefined("scala.runtime.LazyRef");
      }

      default Symbols.Symbol LazyUnitClass() {
         return ((Mirrors.RootsBase)((scala.reflect.api.Mirrors)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).rootMirror()).getClassIfDefined("scala.runtime.LazyUnit");
      }

      default Symbols.Symbol RichFloatClass() {
         return ((Mirrors.RootsBase)((scala.reflect.api.Mirrors)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).rootMirror()).getClassIfDefined("scala.runtime.RichFloat");
      }

      default Set allRefClasses() {
         SetOps var10000 = this.refClass().values().toSet();
         Set $plus$plus_that = this.volatileRefClass().values().toSet();
         if (var10000 == null) {
            throw null;
         } else {
            var10000 = var10000.concat($plus$plus_that);
            Object var4 = null;
            Set var10001 = scala.Predef..MODULE$.Set();
            ArraySeq apply_elems = scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.ClassSymbol[]{((DefinitionsClass)this).VolatileObjectRefClass(), ((DefinitionsClass)this).ObjectRefClass()});
            if (var10001 == null) {
               throw null;
            } else {
               Object var7 = IterableFactory.apply$(var10001, apply_elems);
               Object var5 = null;
               IterableOnce $plus$plus_suffix = (IterableOnce)var7;
               if (var10000 == null) {
                  throw null;
               } else {
                  return (Set)var10000.concat($plus$plus_suffix);
               }
            }
         }
      }

      default boolean isNumericSubClass(final Symbols.Symbol sub, final Symbols.Symbol sup) {
         return this.isNumericValueClass(sub) && this.isNumericValueClass(sup) && BoxesRunTime.unboxToInt(this.numericWeight().apply(sup)) % BoxesRunTime.unboxToInt(this.numericWeight().apply(sub)) == 0;
      }

      default boolean isNumericValueClass(final Symbols.Symbol sym) {
         return this.ScalaNumericValueClassesSet().contains(sym);
      }

      default boolean isGetClass(final Symbols.Symbol sym) {
         Names.Name var10000 = sym.name();
         Names.TermName var2 = ((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).nme().getClass_();
         if (var10000 == null) {
            if (var2 != null) {
               return false;
            }
         } else if (!var10000.equals(var2)) {
            return false;
         }

         Set var3 = ((DefinitionsClass)this).getClassMethods();
         if (var3 == null) {
            throw null;
         } else if (var3.contains(sym)) {
            return true;
         } else {
            return false;
         }
      }

      default Symbols.ClassSymbol UnitClass() {
         return this.valueClassSymbol((Names.TypeName)((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Unit());
      }

      default Symbols.ClassSymbol ByteClass() {
         return this.valueClassSymbol((Names.TypeName)((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Byte());
      }

      default Symbols.ClassSymbol ShortClass() {
         return this.valueClassSymbol((Names.TypeName)((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Short());
      }

      default Symbols.ClassSymbol CharClass() {
         return this.valueClassSymbol((Names.TypeName)((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Char());
      }

      default Symbols.ClassSymbol IntClass() {
         return this.valueClassSymbol((Names.TypeName)((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Int());
      }

      default Symbols.ClassSymbol LongClass() {
         return this.valueClassSymbol((Names.TypeName)((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Long());
      }

      default Symbols.ClassSymbol FloatClass() {
         return this.valueClassSymbol((Names.TypeName)((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Float());
      }

      default Symbols.ClassSymbol DoubleClass() {
         return this.valueClassSymbol((Names.TypeName)((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Double());
      }

      default Symbols.ClassSymbol BooleanClass() {
         return this.valueClassSymbol((Names.TypeName)((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Boolean());
      }

      default Symbols.TermSymbol Boolean_and() {
         return ((DefinitionsClass)this).getMemberMethod(this.BooleanClass(), ((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).nme().ZAND());
      }

      default Symbols.TermSymbol Boolean_or() {
         return ((DefinitionsClass)this).getMemberMethod(this.BooleanClass(), ((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).nme().ZOR());
      }

      default Symbols.TermSymbol Boolean_not() {
         return ((DefinitionsClass)this).getMemberMethod(this.BooleanClass(), ((StdNames)this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).nme().UNARY_$bang());
      }

      default Types.Type UnitTpe() {
         Symbols.ClassSymbol var10000 = this.UnitClass();
         if (var10000 == null) {
            throw null;
         } else {
            return ((Symbols.Symbol)var10000).tpe_$times();
         }
      }

      default Types.Type ByteTpe() {
         Symbols.ClassSymbol var10000 = this.ByteClass();
         if (var10000 == null) {
            throw null;
         } else {
            return ((Symbols.Symbol)var10000).tpe_$times();
         }
      }

      default Types.Type ShortTpe() {
         Symbols.ClassSymbol var10000 = this.ShortClass();
         if (var10000 == null) {
            throw null;
         } else {
            return ((Symbols.Symbol)var10000).tpe_$times();
         }
      }

      default Types.Type CharTpe() {
         Symbols.ClassSymbol var10000 = this.CharClass();
         if (var10000 == null) {
            throw null;
         } else {
            return ((Symbols.Symbol)var10000).tpe_$times();
         }
      }

      default Types.Type IntTpe() {
         Symbols.ClassSymbol var10000 = this.IntClass();
         if (var10000 == null) {
            throw null;
         } else {
            return ((Symbols.Symbol)var10000).tpe_$times();
         }
      }

      default Types.Type LongTpe() {
         Symbols.ClassSymbol var10000 = this.LongClass();
         if (var10000 == null) {
            throw null;
         } else {
            return ((Symbols.Symbol)var10000).tpe_$times();
         }
      }

      default Types.Type FloatTpe() {
         Symbols.ClassSymbol var10000 = this.FloatClass();
         if (var10000 == null) {
            throw null;
         } else {
            return ((Symbols.Symbol)var10000).tpe_$times();
         }
      }

      default Types.Type DoubleTpe() {
         Symbols.ClassSymbol var10000 = this.DoubleClass();
         if (var10000 == null) {
            throw null;
         } else {
            return ((Symbols.Symbol)var10000).tpe_$times();
         }
      }

      default Types.Type BooleanTpe() {
         Symbols.ClassSymbol var10000 = this.BooleanClass();
         if (var10000 == null) {
            throw null;
         } else {
            return ((Symbols.Symbol)var10000).tpe_$times();
         }
      }

      default List ScalaNumericValueClasses() {
         List var10000 = this.ScalaValueClasses();
         Set var10001 = scala.Predef..MODULE$.Set();
         ArraySeq apply_elems = scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.Symbol[]{this.UnitClass(), this.BooleanClass()});
         if (var10001 == null) {
            throw null;
         } else {
            Object var3 = IterableFactory.apply$(var10001, apply_elems);
            Object var2 = null;
            return var10000.filterNot((Function1)var3);
         }
      }

      default List ScalaValueClassesNoUnit() {
         List var10000 = this.ScalaValueClasses();
         if (var10000 == null) {
            throw null;
         } else {
            List filterNot_this = var10000;
            boolean filterNot_filterCommon_isFlipped = true;
            List filterNot_filterCommon_noneIn$1_l = filterNot_this;

            while(true) {
               if (filterNot_filterCommon_noneIn$1_l.isEmpty()) {
                  var51 = .MODULE$;
                  break;
               }

               Object filterNot_filterCommon_noneIn$1_h = filterNot_filterCommon_noneIn$1_l.head();
               List filterNot_filterCommon_noneIn$1_t = (List)filterNot_filterCommon_noneIn$1_l.tail();
               Symbols.ClassSymbol var17 = (Symbols.ClassSymbol)filterNot_filterCommon_noneIn$1_h;
               if ($anonfun$ScalaValueClassesNoUnit$1(this, var17) != filterNot_filterCommon_isFlipped) {
                  List filterNot_filterCommon_noneIn$1_allIn$1_remaining = filterNot_filterCommon_noneIn$1_t;

                  while(true) {
                     if (filterNot_filterCommon_noneIn$1_allIn$1_remaining.isEmpty()) {
                        var51 = filterNot_filterCommon_noneIn$1_l;
                        break;
                     }

                     Object filterNot_filterCommon_noneIn$1_allIn$1_x = filterNot_filterCommon_noneIn$1_allIn$1_remaining.head();
                     var17 = (Symbols.ClassSymbol)filterNot_filterCommon_noneIn$1_allIn$1_x;
                     if ($anonfun$ScalaValueClassesNoUnit$1(this, var17) == filterNot_filterCommon_isFlipped) {
                        scala.collection.immutable..colon.colon filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead = new scala.collection.immutable..colon.colon(filterNot_filterCommon_noneIn$1_l.head(), .MODULE$);
                        List filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess = (List)filterNot_filterCommon_noneIn$1_l.tail();

                        scala.collection.immutable..colon.colon filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast;
                        for(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead; filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess != filterNot_filterCommon_noneIn$1_allIn$1_remaining; filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess.tail()) {
                           scala.collection.immutable..colon.colon filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem = new scala.collection.immutable..colon.colon(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess.head(), .MODULE$);
                           filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem);
                           filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem;
                        }

                        List filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filterNot_filterCommon_noneIn$1_allIn$1_remaining.tail();
                        List filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next;

                        while(!filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.isEmpty()) {
                           Object filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_head = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.head();
                           var17 = (Symbols.ClassSymbol)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_head;
                           if ($anonfun$ScalaValueClassesNoUnit$1(this, var17) != filterNot_filterCommon_isFlipped) {
                              filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                           } else {
                              while(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy != filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next) {
                                 scala.collection.immutable..colon.colon filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem = new scala.collection.immutable..colon.colon(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.head(), .MODULE$);
                                 filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem);
                                 filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem;
                                 filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.tail();
                              }

                              filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                              filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                           }
                        }

                        if (!filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.isEmpty()) {
                           filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy);
                        }

                        var51 = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead;
                        Object var25 = null;
                        Object var28 = null;
                        Object var31 = null;
                        Object var34 = null;
                        Object var37 = null;
                        Object var40 = null;
                        Object var43 = null;
                        Object var46 = null;
                        break;
                     }

                     filterNot_filterCommon_noneIn$1_allIn$1_remaining = (List)filterNot_filterCommon_noneIn$1_allIn$1_remaining.tail();
                  }

                  Object var21 = null;
                  Object var23 = null;
                  Object var26 = null;
                  Object var29 = null;
                  Object var32 = null;
                  Object var35 = null;
                  Object var38 = null;
                  Object var41 = null;
                  Object var44 = null;
                  Object var47 = null;
                  break;
               }

               filterNot_filterCommon_noneIn$1_l = filterNot_filterCommon_noneIn$1_t;
            }

            Object var18 = null;
            Object var19 = null;
            Object var20 = null;
            Object var22 = null;
            Object var24 = null;
            Object var27 = null;
            Object var30 = null;
            Object var33 = null;
            Object var36 = null;
            Object var39 = null;
            Object var42 = null;
            Object var45 = null;
            Object var48 = null;
            List filterNot_filterCommon_result = (List)var51;
            Statics.releaseFence();
            return filterNot_filterCommon_result;
         }
      }

      default List ScalaValueClasses() {
         List var10000 = scala.package..MODULE$.List();
         ArraySeq apply_elems = scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.ClassSymbol[]{this.UnitClass(), this.BooleanClass(), this.ByteClass(), this.ShortClass(), this.CharClass(), this.IntClass(), this.LongClass(), this.FloatClass(), this.DoubleClass()});
         if (var10000 == null) {
            throw null;
         } else {
            return (List)IterableFactory.apply$(var10000, apply_elems);
         }
      }

      default SymbolSet ScalaValueClassesSet() {
         return (DefinitionsClass)this.new SymbolSet(this.ScalaValueClasses());
      }

      default SymbolSet ScalaNumericValueClassesSet() {
         return (DefinitionsClass)this.new SymbolSet(this.ScalaNumericValueClasses());
      }

      default List ScalaPrimitiveValueClasses() {
         return this.ScalaValueClasses();
      }

      default Set ScalaIntegralValueClasses() {
         Set var10000 = scala.Predef..MODULE$.Set();
         ArraySeq apply_elems = scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.Symbol[]{this.CharClass(), this.ByteClass(), this.ShortClass(), this.IntClass(), this.LongClass()});
         if (var10000 == null) {
            throw null;
         } else {
            return (Set)IterableFactory.apply$(var10000, apply_elems);
         }
      }

      default Types.Type underlyingOfValueClass(final Symbols.Symbol clazz) {
         Symbols.Symbol var10000 = clazz.derivedValueClassUnbox();
         if (var10000 == null) {
            throw null;
         } else {
            return var10000.tpe_$times().resultType();
         }
      }

      // $FF: synthetic method
      Definitions scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer();

      // $FF: synthetic method
      static Object $anonfun$symbolsMap$1(final Function1 f$1, final Symbols.Symbol x) {
         return f$1.apply(x.name());
      }

      // $FF: synthetic method
      static boolean $anonfun$symbolsMapFilt$1(final Function1 p$1, final Symbols.Symbol x) {
         return BoxesRunTime.unboxToBoolean(p$1.apply(x.name()));
      }

      // $FF: synthetic method
      static Symbols.Symbol $anonfun$lazyHolders$1(final ValueClassDefinitions $this, final Names.Name x) {
         return ((Mirrors.RootsBase)((scala.reflect.api.Mirrors)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).rootMirror()).getClassIfDefined((new StringBuilder(18)).append("scala.runtime.Lazy").append(x).toString());
      }

      // $FF: synthetic method
      static boolean $anonfun$ScalaValueClassesNoUnit$1(final ValueClassDefinitions $this, final Symbols.ClassSymbol x$3) {
         return x$3 == $this.UnitClass();
      }

      static void $init$(final ValueClassDefinitions $this) {
         Map var10001 = scala.Predef..MODULE$.Map();
         ScalaRunTime var10002 = scala.runtime.ScalaRunTime..MODULE$;
         Tuple2[] var10003 = new Tuple2[7];
         Predef.ArrowAssoc var10006 = scala.Predef.ArrowAssoc..MODULE$;
         Names.Name var74 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Byte();
         Integer $minus$greater$extension_y = 2;
         Object $minus$greater$extension_$this = var74;
         Tuple2 var75 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_y);
         $minus$greater$extension_$this = null;
         Object var36 = null;
         var10003[0] = var75;
         Predef.ArrowAssoc var76 = scala.Predef.ArrowAssoc..MODULE$;
         Names.Name var77 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Char();
         Integer $minus$greater$extension_yx = 3;
         Object $minus$greater$extension_$this = var77;
         Tuple2 var78 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yx);
         $minus$greater$extension_$this = null;
         Object var38 = null;
         var10003[1] = var78;
         Predef.ArrowAssoc var79 = scala.Predef.ArrowAssoc..MODULE$;
         Names.Name var80 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Short();
         Integer $minus$greater$extension_yxx = 4;
         Object $minus$greater$extension_$this = var80;
         Tuple2 var81 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxx);
         $minus$greater$extension_$this = null;
         Object var40 = null;
         var10003[2] = var81;
         Predef.ArrowAssoc var82 = scala.Predef.ArrowAssoc..MODULE$;
         Names.Name var83 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Int();
         Integer $minus$greater$extension_yxxx = 12;
         Object $minus$greater$extension_$this = var83;
         Tuple2 var84 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxx);
         $minus$greater$extension_$this = null;
         Object var42 = null;
         var10003[3] = var84;
         Predef.ArrowAssoc var85 = scala.Predef.ArrowAssoc..MODULE$;
         Names.Name var86 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Long();
         Integer $minus$greater$extension_yxxxx = 24;
         Object $minus$greater$extension_$this = var86;
         Tuple2 var87 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxxx);
         $minus$greater$extension_$this = null;
         Object var44 = null;
         var10003[4] = var87;
         Predef.ArrowAssoc var88 = scala.Predef.ArrowAssoc..MODULE$;
         Names.Name var89 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Float();
         Integer $minus$greater$extension_yxxxxx = 48;
         Object $minus$greater$extension_$this = var89;
         Tuple2 var90 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxxxx);
         $minus$greater$extension_$this = null;
         Object var46 = null;
         var10003[5] = var90;
         Predef.ArrowAssoc var91 = scala.Predef.ArrowAssoc..MODULE$;
         Names.Name var92 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Double();
         Integer $minus$greater$extension_yxxxxxx = 96;
         Object $minus$greater$extension_$this = var92;
         Tuple2 var93 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxxxxx);
         $minus$greater$extension_$this = null;
         Object var48 = null;
         var10003[6] = var93;
         ArraySeq apply_elems = var10002.wrapRefArray(var10003);
         if (var10001 == null) {
            throw null;
         } else {
            Object var69 = MapFactory.apply$(var10001, apply_elems);
            Object var67 = null;
            $this.scala$reflect$internal$Definitions$ValueClassDefinitions$_setter_$scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToWeight_$eq((Map)var69);
            Map var70 = scala.Predef..MODULE$.Map();
            var10002 = scala.runtime.ScalaRunTime..MODULE$;
            var10003 = new Tuple2[9];
            Predef.ArrowAssoc var94 = scala.Predef.ArrowAssoc..MODULE$;
            Names.Name var95 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Byte();
            Character $minus$greater$extension_yxxxxxxx = 'B';
            Object $minus$greater$extension_$this = var95;
            Tuple2 var96 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxxxxxx);
            $minus$greater$extension_$this = null;
            Object var50 = null;
            var10003[0] = var96;
            Predef.ArrowAssoc var97 = scala.Predef.ArrowAssoc..MODULE$;
            Names.Name var98 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Char();
            Character $minus$greater$extension_yxxxxxxxx = 'C';
            Object $minus$greater$extension_$this = var98;
            Tuple2 var99 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxxxxxxx);
            $minus$greater$extension_$this = null;
            Object var52 = null;
            var10003[1] = var99;
            Predef.ArrowAssoc var100 = scala.Predef.ArrowAssoc..MODULE$;
            Names.Name var101 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Short();
            Character $minus$greater$extension_yxxxxxxxxx = 'S';
            Object $minus$greater$extension_$this = var101;
            Tuple2 var102 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxxxxxxxx);
            $minus$greater$extension_$this = null;
            Object var54 = null;
            var10003[2] = var102;
            Predef.ArrowAssoc var103 = scala.Predef.ArrowAssoc..MODULE$;
            Names.Name var104 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Int();
            Character $minus$greater$extension_yxxxxxxxxxx = 'I';
            Object $minus$greater$extension_$this = var104;
            Tuple2 var105 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxxxxxxxxx);
            $minus$greater$extension_$this = null;
            Object var56 = null;
            var10003[3] = var105;
            Predef.ArrowAssoc var106 = scala.Predef.ArrowAssoc..MODULE$;
            Names.Name var107 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Long();
            Character $minus$greater$extension_yxxxxxxxxxxx = 'J';
            Object $minus$greater$extension_$this = var107;
            Tuple2 var108 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxxxxxxxxxx);
            $minus$greater$extension_$this = null;
            Object var58 = null;
            var10003[4] = var108;
            Predef.ArrowAssoc var109 = scala.Predef.ArrowAssoc..MODULE$;
            Names.Name var110 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Float();
            Character $minus$greater$extension_yxxxxxxxxxxxx = 'F';
            Object $minus$greater$extension_$this = var110;
            Tuple2 var111 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxxxxxxxxxxx);
            $minus$greater$extension_$this = null;
            Object var60 = null;
            var10003[5] = var111;
            Predef.ArrowAssoc var112 = scala.Predef.ArrowAssoc..MODULE$;
            Names.Name var113 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Double();
            Character $minus$greater$extension_yxxxxxxxxxxxxx = 'D';
            Object $minus$greater$extension_$this = var113;
            Tuple2 var114 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxxxxxxxxxxxx);
            $minus$greater$extension_$this = null;
            Object var62 = null;
            var10003[6] = var114;
            Predef.ArrowAssoc var115 = scala.Predef.ArrowAssoc..MODULE$;
            Names.Name var116 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Boolean();
            Character $minus$greater$extension_yxxxxxxxxxxxxxx = 'Z';
            Object $minus$greater$extension_$this = var116;
            Tuple2 var117 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxxxxxxxxxxxxx);
            $minus$greater$extension_$this = null;
            Object var64 = null;
            var10003[7] = var117;
            Predef.ArrowAssoc var118 = scala.Predef.ArrowAssoc..MODULE$;
            Names.Name var119 = ((StdNames)$this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).tpnme().Unit();
            Character $minus$greater$extension_yxxxxxxxxxxxxxxx = 'V';
            Object $minus$greater$extension_$this = var119;
            Tuple2 var120 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxxxxxxxxxxxxxxx);
            $minus$greater$extension_$this = null;
            Object var66 = null;
            var10003[8] = var120;
            ArraySeq apply_elemsx = var10002.wrapRefArray(var10003);
            if (var70 == null) {
               throw null;
            } else {
               Object var71 = MapFactory.apply$(var70, apply_elemsx);
               Object var68 = null;
               $this.scala$reflect$internal$Definitions$ValueClassDefinitions$_setter_$scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToTag_$eq((Map)var71);
            }
         }
      }

      // $FF: synthetic method
      static Object $anonfun$symbolsMapFilt$1$adapted(final Function1 p$1, final Symbols.Symbol x) {
         return BoxesRunTime.boxToBoolean($anonfun$symbolsMapFilt$1(p$1, x));
      }

      // $FF: synthetic method
      static Object $anonfun$ScalaValueClassesNoUnit$1$adapted(final ValueClassDefinitions $this, final Symbols.ClassSymbol x$3) {
         return BoxesRunTime.boxToBoolean($anonfun$ScalaValueClassesNoUnit$1($this, x$3));
      }

      // $FF: synthetic method
      private static Object $deserializeLambda$(SerializedLambda var0) {
         return Class.lambdaDeserialize<invokedynamic>(var0);
      }

      public final class SymbolSet {
         private final Symbols.Symbol[] ids;
         private final Symbols.Symbol commonOwner;

         public final boolean contains(final Symbols.Symbol sym) {
            if (this.commonOwner != null && this.commonOwner != sym.rawowner()) {
               return false;
            } else {
               Symbols.Symbol[] array = this.ids;

               for(int i = 0; i < array.length; ++i) {
                  if (array[i] == sym) {
                     return true;
                  }
               }

               return false;
            }
         }

         // $FF: synthetic method
         public static final boolean $anonfun$commonOwner$1(final Symbols.Symbol hhOwner$1, final Symbols.Symbol x$4) {
            Symbols.Symbol var10000 = x$4.rawowner();
            if (var10000 == null) {
               if (hhOwner$1 == null) {
                  return true;
               }
            } else if (var10000.equals(hhOwner$1)) {
               return true;
            }

            return false;
         }

         public SymbolSet(final List syms) {
            this.ids = (Symbols.Symbol[])syms.toArray(((Symbols)ValueClassDefinitions.this.scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer()).SymbolTag());
            Symbols.Symbol var10001;
            if (syms.isEmpty()) {
               var10001 = null;
            } else {
               Symbols.Symbol hhOwner = ((Symbols.Symbol)syms.head()).rawowner();
               List var7 = (List)syms.tail();
               if (var7 == null) {
                  throw null;
               }

               List forall_these = var7;

               while(true) {
                  if (forall_these.isEmpty()) {
                     var8 = true;
                     break;
                  }

                  Symbols.Symbol var5 = (Symbols.Symbol)forall_these.head();
                  if (!$anonfun$commonOwner$1(hhOwner, var5)) {
                     var8 = false;
                     break;
                  }

                  forall_these = (List)forall_these.tail();
               }

               Object var6 = null;
               var10001 = var8 ? hhOwner : null;
            }

            this.commonOwner = var10001;
         }

         // $FF: synthetic method
         public static final Object $anonfun$commonOwner$1$adapted(final Symbols.Symbol hhOwner$1, final Symbols.Symbol x$4) {
            return BoxesRunTime.boxToBoolean($anonfun$commonOwner$1(hhOwner$1, x$4));
         }
      }
   }

   public abstract class DefinitionsClass implements StandardDefinitions.DefinitionsApi, ValueClassDefinitions {
      private Symbols.ModuleSymbol JavaLangPackage;
      private Symbols.ClassSymbol JavaLangPackageClass;
      private Symbols.ModuleSymbol ScalaPackage;
      private Symbols.ClassSymbol ScalaPackageClass;
      private Symbols.Symbol ScalaPackageObject;
      private Symbols.ModuleSymbol RuntimePackage;
      private Symbols.ClassSymbol RuntimePackageClass;
      private Symbols.ClassSymbol AnyClass;
      private Symbols.AliasTypeSymbol AnyRefClass;
      private Symbols.ClassSymbol ObjectClass;
      private Types.Type AnyRefTpe;
      private Types.Type AnyTpe;
      private Types.Type AnyValTpe;
      private Types.Type BoxedUnitTpe;
      private Types.Type NothingTpe;
      private Types.Type NullTpe;
      private Types.Type ObjectTpe;
      private Types.ObjectTpeJavaRef ObjectTpeJava;
      private Types.Type SerializableTpe;
      private Types.Type StringTpe;
      private Types.Type ThrowableTpe;
      private Types.ConstantType ConstantTrue;
      private Types.ConstantType ConstantFalse;
      private Types.ConstantType ConstantNull;
      private Symbols.ClassSymbol AnyValClass;
      private Symbols.ClassSymbol RuntimeNothingClass;
      private Symbols.ClassSymbol RuntimeNullClass;
      private volatile NothingClass$ NothingClass$module;
      private volatile NullClass$ NullClass$module;
      private Symbols.ClassSymbol ClassCastExceptionClass;
      private Symbols.ClassSymbol IndexOutOfBoundsExceptionClass;
      private Symbols.ClassSymbol InvocationTargetExceptionClass;
      private Symbols.ClassSymbol MatchErrorClass;
      private Symbols.ClassSymbol NonLocalReturnControlClass;
      private Symbols.ClassSymbol NullPointerExceptionClass;
      private Symbols.ClassSymbol ThrowableClass;
      private Symbols.ClassSymbol UninitializedErrorClass;
      private Symbols.ClassSymbol RuntimeExceptionClass;
      private Symbols.ClassSymbol IllegalArgExceptionClass;
      private Symbols.Symbol UninitializedFieldConstructor;
      private Symbols.ClassSymbol PartialFunctionClass;
      private Symbols.ClassSymbol AbstractPartialFunctionClass;
      private Symbols.ClassSymbol SymbolClass;
      private Symbols.ClassSymbol StringClass;
      private Symbols.Symbol StringModule;
      private Symbols.ClassSymbol ClassClass;
      private Symbols.ClassSymbol DynamicClass;
      private List UnqualifiedModules;
      private Set UnqualifiedOwners;
      private Symbols.ModuleSymbol PredefModule;
      private Symbols.ModuleSymbol SpecializableModule;
      private Symbols.ModuleSymbol ScalaRunTimeModule;
      private Symbols.ModuleSymbol SymbolModule;
      private Symbols.ClassSymbol ScalaNumberClass;
      private Symbols.ClassSymbol DelayedInitClass;
      private Symbols.ClassSymbol TypeConstraintClass;
      private Symbols.ClassSymbol SingletonClass;
      private List ListOfSingletonClassTpe;
      private Symbols.ClassSymbol SerializableClass;
      private Symbols.ClassSymbol ComparableClass;
      private Symbols.ClassSymbol JavaCloneableClass;
      private Symbols.ClassSymbol JavaNumberClass;
      private Symbols.ClassSymbol JavaEnumClass;
      private Symbols.ClassSymbol JavaUtilMap;
      private Symbols.ClassSymbol JavaUtilHashMap;
      private Symbols.Symbol JavaRecordClass;
      private Symbols.ClassSymbol ByNameParamClass;
      private Symbols.ClassSymbol JavaRepeatedParamClass;
      private Symbols.ClassSymbol RepeatedParamClass;
      private Symbols.ClassSymbol SubTypeClass;
      private Symbols.ClassSymbol SameTypeClass;
      private Symbols.ClassSymbol DummyImplicitClass;
      private Symbols.ClassSymbol ConsClass;
      private Symbols.ClassSymbol IteratorClass;
      private Symbols.ClassSymbol IterableClass;
      private Symbols.ClassSymbol ListClass;
      private Symbols.ClassSymbol SeqClass;
      private Symbols.ModuleSymbol SeqFactoryClass;
      private Symbols.TypeSymbol UnapplySeqWrapperClass;
      private Symbols.ClassSymbol JavaStringBuilderClass;
      private Symbols.ClassSymbol JavaStringBufferClass;
      private Symbols.ClassSymbol JavaCharSequenceClass;
      private Symbols.ModuleSymbol ListModule;
      private Symbols.TermSymbol ListModuleAlias;
      private Symbols.ModuleSymbol NilModule;
      private Symbols.TermSymbol NilModuleAlias;
      private Symbols.ModuleSymbol SeqModule;
      private Symbols.TermSymbol SeqModuleAlias;
      private Symbols.ModuleSymbol Collection_SeqModule;
      private Symbols.ModuleSymbol ArrayModule;
      private Symbols.TermSymbol ArrayModule_overloadedApply;
      private Symbols.ClassSymbol ArrayClass;
      private Symbols.TermSymbol Array_apply;
      private Symbols.TermSymbol Array_update;
      private Symbols.TermSymbol Array_length;
      private Symbols.TermSymbol Array_clone;
      private Symbols.ClassSymbol SoftReferenceClass;
      private Symbols.ClassSymbol MethodClass;
      private Symbols.ClassSymbol EmptyMethodCacheClass;
      private Symbols.ClassSymbol MethodCacheClass;
      private Symbols.Symbol StructuralCallSite;
      private Symbols.MethodSymbol StructuralCallSite_dummy;
      private Symbols.Symbol SymbolLiteral;
      private Symbols.Symbol ScalaXmlTopScope;
      private Symbols.Symbol ScalaXmlPackage;
      private Symbols.ModuleSymbol ReflectPackage;
      private Symbols.Symbol ReflectApiPackage;
      private Symbols.Symbol ReflectRuntimePackage;
      private Symbols.Symbol UniverseClass;
      private Symbols.ModuleSymbol PartialManifestModule;
      private Symbols.ClassSymbol FullManifestClass;
      private Symbols.ModuleSymbol FullManifestModule;
      private Symbols.ClassSymbol OptManifestClass;
      private Symbols.ModuleSymbol NoManifest;
      private Symbols.Symbol TreesClass;
      private Symbols.Symbol ExprsClass;
      private Symbols.ModuleSymbol ClassTagModule;
      private Symbols.ClassSymbol ClassTagClass;
      private Symbols.Symbol TypeTagsClass;
      private Symbols.Symbol ApiUniverseClass;
      private Symbols.Symbol ApiQuasiquotesClass;
      private Symbols.Symbol JavaUniverseClass;
      private Symbols.Symbol MirrorClass;
      private Symbols.Symbol TypeCreatorClass;
      private Symbols.Symbol TreeCreatorClass;
      private Symbols.Symbol BlackboxContextClass;
      private Symbols.Symbol WhiteboxContextClass;
      private Symbols.ClassSymbol MacroImplAnnotation;
      private Symbols.ClassSymbol MacroImplLocationAnnotation;
      private Symbols.ClassSymbol StringContextClass;
      private Symbols.ModuleSymbol StringContextModule;
      private Symbols.Symbol ValueOfClass;
      private Symbols.Symbol QuasiquoteClass;
      private Symbols.Symbol QuasiquoteClass_api;
      private Symbols.Symbol QuasiquoteClass_api_apply;
      private Symbols.Symbol QuasiquoteClass_api_unapply;
      private Symbols.ClassSymbol ScalaSignatureAnnotation;
      private Symbols.ClassSymbol ScalaLongSignatureAnnotation;
      private Symbols.Symbol MethodHandleClass;
      private Symbols.Symbol VarHandleClass;
      private Symbols.ClassSymbol OptionClass;
      private Symbols.ModuleSymbol OptionModule;
      private Symbols.ClassSymbol SomeClass;
      private Symbols.ModuleSymbol NoneModule;
      private Symbols.ModuleSymbol SomeModule;
      private Symbols.ClassSymbol ModuleSerializationProxyClass;
      private volatile VarArityClass$ VarArityClass$module;
      private VarArityClass ProductClass;
      private VarArityClass TupleClass;
      private VarArityClass FunctionClass;
      private VarArityClass AbstractFunctionClass;
      private Symbols.ClassSymbol TryClass;
      private Symbols.ClassSymbol FailureClass;
      private Symbols.ClassSymbol SuccessClass;
      private Symbols.ClassSymbol FutureClass;
      private Symbols.ClassSymbol PromiseClass;
      private Symbols.ModuleSymbol NonFatalModule;
      private Symbols.TermSymbol NonFatal_apply;
      private volatile MacroContextType$ MacroContextType$module;
      private Symbols.ClassSymbol ProductRootClass;
      private Symbols.MethodSymbol Any_$eq$eq;
      private Symbols.MethodSymbol Any_$bang$eq;
      private Symbols.MethodSymbol Any_equals;
      private Symbols.MethodSymbol Any_hashCode;
      private Symbols.MethodSymbol Any_toString;
      private Symbols.MethodSymbol Any_$hash$hash;
      private Symbols.MethodSymbol Any_getClass;
      private Symbols.MethodSymbol Any_isInstanceOf;
      private Symbols.MethodSymbol Any_asInstanceOf;
      private Set primitiveGetClassMethods;
      private Set getClassMethods;
      private Symbols.MethodSymbol Object_$hash$hash;
      private Symbols.MethodSymbol Object_$eq$eq;
      private Symbols.MethodSymbol Object_$bang$eq;
      private Symbols.MethodSymbol Object_eq;
      private Symbols.MethodSymbol Object_ne;
      private Symbols.MethodSymbol Object_isInstanceOf;
      private Symbols.MethodSymbol Object_asInstanceOf;
      private Symbols.MethodSymbol Object_synchronized;
      private Symbols.MethodSymbol String_$plus;
      private Symbols.ClassSymbol ObjectRefClass;
      private Symbols.ClassSymbol VolatileObjectRefClass;
      private Symbols.ModuleSymbol RuntimeStaticsModule;
      private Symbols.ModuleSymbol BoxesRunTimeModule;
      private Symbols.Symbol BoxesRunTimeClass;
      private Symbols.ClassSymbol BoxedNumberClass;
      private Symbols.ClassSymbol BoxedCharacterClass;
      private Symbols.ClassSymbol BoxedBooleanClass;
      private Symbols.ClassSymbol BoxedByteClass;
      private Symbols.ClassSymbol BoxedShortClass;
      private Symbols.ClassSymbol BoxedIntClass;
      private Symbols.ClassSymbol BoxedLongClass;
      private Symbols.ClassSymbol BoxedFloatClass;
      private Symbols.ClassSymbol BoxedDoubleClass;
      private Symbols.ClassSymbol BoxedUnitClass;
      private Symbols.ModuleSymbol BoxedUnitModule;
      private Symbols.ClassSymbol AnnotationClass;
      private Symbols.Symbol ConstantAnnotationClass;
      private Symbols.ClassSymbol StaticAnnotationClass;
      private Symbols.ClassSymbol AnnotationRetentionAttr;
      private Symbols.ClassSymbol AnnotationRetentionPolicyAttr;
      private Symbols.ClassSymbol AnnotationRepeatableAttr;
      private Symbols.ClassSymbol ElidableMethodClass;
      private Symbols.ClassSymbol ImplicitNotFoundClass;
      private Symbols.Symbol ImplicitAmbiguousClass;
      private Symbols.ClassSymbol MigrationAnnotationClass;
      private Symbols.ClassSymbol ScalaStrictFPAttr;
      private Symbols.ClassSymbol SwitchClass;
      private Symbols.ClassSymbol TailrecClass;
      private Symbols.ClassSymbol VarargsClass;
      private Symbols.Symbol NowarnClass;
      private Symbols.ClassSymbol uncheckedStableClass;
      private Symbols.ClassSymbol uncheckedVarianceClass;
      private Symbols.Symbol ChildAnnotationClass;
      private Symbols.Symbol RepeatedAnnotationClass;
      private Symbols.Symbol TargetNameAnnotationClass;
      private Symbols.Symbol StaticMethodAnnotationClass;
      private Symbols.Symbol PolyFunctionClass;
      private Symbols.Symbol ExperimentalAnnotationClass;
      private Symbols.Symbol AnnotationDefaultClass;
      private Symbols.ClassSymbol JavaAnnotationClass;
      private Symbols.ClassSymbol BeanPropertyAttr;
      private Symbols.ClassSymbol BooleanBeanPropertyAttr;
      private Symbols.Symbol CompileTimeOnlyAttr;
      private Symbols.ClassSymbol DeprecatedAttr;
      private Symbols.ClassSymbol DeprecatedNameAttr;
      private Symbols.ClassSymbol DeprecatedInheritanceAttr;
      private Symbols.ClassSymbol DeprecatedOverridingAttr;
      private Symbols.ClassSymbol NativeAttr;
      private Symbols.ClassSymbol ScalaInlineClass;
      private Symbols.ClassSymbol ScalaNoInlineClass;
      private Symbols.ClassSymbol SerialVersionUIDAttr;
      private AnnotationInfos.AnnotationInfo SerialVersionUIDAnnotation;
      private Symbols.ClassSymbol SpecializedClass;
      private Symbols.ClassSymbol ThrowsClass;
      private Symbols.ClassSymbol TransientAttr;
      private Symbols.ClassSymbol UncheckedClass;
      private Symbols.Symbol UncheckedBoundsClass;
      private Symbols.ClassSymbol UnspecializedClass;
      private Symbols.ClassSymbol UnusedClass;
      private Symbols.ClassSymbol VolatileAttr;
      private Symbols.ClassSymbol JavaDeprecatedAttr;
      private Symbols.ClassSymbol FunctionalInterfaceClass;
      private Symbols.ClassSymbol BeanGetterTargetClass;
      private Symbols.ClassSymbol BeanSetterTargetClass;
      private Symbols.ClassSymbol FieldTargetClass;
      private Symbols.ClassSymbol GetterTargetClass;
      private Symbols.ClassSymbol ParamTargetClass;
      private Symbols.ClassSymbol SetterTargetClass;
      private Symbols.ClassSymbol ObjectTargetClass;
      private Symbols.ClassSymbol ClassTargetClass;
      private Symbols.ClassSymbol MethodTargetClass;
      private Symbols.ClassSymbol LanguageFeatureAnnot;
      private Symbols.ClassSymbol InheritedAttr;
      private List JUnitAnnotations;
      private Symbols.ModuleSymbol languageFeatureModule;
      private Set metaAnnotations;
      private Symbols.ClassSymbol AnnotationDefaultAttr;
      private Phase erasurePhase;
      private Set isPhantomClass;
      private List syntheticCoreClasses;
      private List syntheticCoreMethods;
      private List hijackedCoreClasses;
      private List symbolsNotPresentInBytecode;
      private Set isPossibleSyntheticParent;
      private Set boxedValueClassesSet;
      private Symbols.Symbol ShowAsInfixAnnotationClass;
      private boolean isInitialized;
      private final int MaxTupleArity;
      private final int MaxProductArity;
      private final int MaxFunctionArity;
      private final int MaxTupleAritySpecialized;
      private final int MaxProductAritySpecialized;
      private final int MaxFunctionAritySpecialized;
      private int volatileRecursions;
      private final HashSet pendingVolatiles;
      private final AnyRefMap samCache;
      private Map scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToWeight;
      private Map scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToTag;
      private Map abbrvTag;
      private Map numericWeight;
      private Map boxedModule;
      private Map boxedClass;
      private Map refClass;
      private Map volatileRefClass;
      private Map lazyHolders;
      private Symbols.Symbol LazyRefClass;
      private Symbols.Symbol LazyUnitClass;
      private Symbols.Symbol RichFloatClass;
      private Set allRefClasses;
      private Symbols.ClassSymbol UnitClass;
      private Symbols.ClassSymbol ByteClass;
      private Symbols.ClassSymbol ShortClass;
      private Symbols.ClassSymbol CharClass;
      private Symbols.ClassSymbol IntClass;
      private Symbols.ClassSymbol LongClass;
      private Symbols.ClassSymbol FloatClass;
      private Symbols.ClassSymbol DoubleClass;
      private Symbols.ClassSymbol BooleanClass;
      private Types.Type UnitTpe;
      private Types.Type ByteTpe;
      private Types.Type ShortTpe;
      private Types.Type CharTpe;
      private Types.Type IntTpe;
      private Types.Type LongTpe;
      private Types.Type FloatTpe;
      private Types.Type DoubleTpe;
      private Types.Type BooleanTpe;
      private List ScalaNumericValueClasses;
      private List ScalaValueClassesNoUnit;
      private List ScalaValueClasses;
      private ValueClassDefinitions.SymbolSet ScalaValueClassesSet;
      private ValueClassDefinitions.SymbolSet ScalaNumericValueClassesSet;
      private Set ScalaIntegralValueClasses;
      private volatile long bitmap$0;
      private volatile long bitmap$1;
      private volatile long bitmap$2;
      private volatile long bitmap$3;
      private volatile long bitmap$4;
      // $FF: synthetic field
      public final SymbolTable $outer;

      public boolean isNumericSubClass(final Symbols.Symbol sub, final Symbols.Symbol sup) {
         return Definitions.ValueClassDefinitions.super.isNumericSubClass(sub, sup);
      }

      public boolean isNumericValueClass(final Symbols.Symbol sym) {
         return Definitions.ValueClassDefinitions.super.isNumericValueClass(sym);
      }

      public boolean isGetClass(final Symbols.Symbol sym) {
         return Definitions.ValueClassDefinitions.super.isGetClass(sym);
      }

      public Symbols.TermSymbol Boolean_and() {
         return Definitions.ValueClassDefinitions.super.Boolean_and();
      }

      public Symbols.TermSymbol Boolean_or() {
         return Definitions.ValueClassDefinitions.super.Boolean_or();
      }

      public Symbols.TermSymbol Boolean_not() {
         return Definitions.ValueClassDefinitions.super.Boolean_not();
      }

      public List ScalaPrimitiveValueClasses() {
         return Definitions.ValueClassDefinitions.super.ScalaPrimitiveValueClasses();
      }

      public Types.Type underlyingOfValueClass(final Symbols.Symbol clazz) {
         return Definitions.ValueClassDefinitions.super.underlyingOfValueClass(clazz);
      }

      public Nothing scala$reflect$internal$Definitions$$catastrophicFailure() {
         return Definitions.ValueClassDefinitions.super.scala$reflect$internal$Definitions$$catastrophicFailure();
      }

      public Map scala$reflect$internal$Definitions$$classesMap(final Function1 f) {
         return Definitions.ValueClassDefinitions.super.scala$reflect$internal$Definitions$$classesMap(f);
      }

      public final NothingClass$ NothingClass() {
         if (this.NothingClass$module == null) {
            this.NothingClass$lzycompute$1();
         }

         return this.NothingClass$module;
      }

      public final NullClass$ NullClass() {
         if (this.NullClass$module == null) {
            this.NullClass$lzycompute$1();
         }

         return this.NullClass$module;
      }

      public VarArityClass$ VarArityClass() {
         if (this.VarArityClass$module == null) {
            this.VarArityClass$lzycompute$1();
         }

         return this.VarArityClass$module;
      }

      public MacroContextType$ MacroContextType() {
         if (this.MacroContextType$module == null) {
            this.MacroContextType$lzycompute$1();
         }

         return this.MacroContextType$module;
      }

      public Map scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToWeight() {
         return this.scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToWeight;
      }

      public Map scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToTag() {
         return this.scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToTag;
      }

      private Map abbrvTag$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 128L) == 0L) {
               this.abbrvTag = Definitions.ValueClassDefinitions.super.abbrvTag();
               this.bitmap$4 |= 128L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.abbrvTag;
      }

      public Map abbrvTag() {
         return (this.bitmap$4 & 128L) == 0L ? this.abbrvTag$lzycompute() : this.abbrvTag;
      }

      private Map numericWeight$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 256L) == 0L) {
               this.numericWeight = Definitions.ValueClassDefinitions.super.numericWeight();
               this.bitmap$4 |= 256L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.numericWeight;
      }

      public Map numericWeight() {
         return (this.bitmap$4 & 256L) == 0L ? this.numericWeight$lzycompute() : this.numericWeight;
      }

      private Map boxedModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 512L) == 0L) {
               this.boxedModule = Definitions.ValueClassDefinitions.super.boxedModule();
               this.bitmap$4 |= 512L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.boxedModule;
      }

      public Map boxedModule() {
         return (this.bitmap$4 & 512L) == 0L ? this.boxedModule$lzycompute() : this.boxedModule;
      }

      private Map boxedClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 1024L) == 0L) {
               this.boxedClass = Definitions.ValueClassDefinitions.super.boxedClass();
               this.bitmap$4 |= 1024L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.boxedClass;
      }

      public Map boxedClass() {
         return (this.bitmap$4 & 1024L) == 0L ? this.boxedClass$lzycompute() : this.boxedClass;
      }

      private Map refClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 2048L) == 0L) {
               this.refClass = Definitions.ValueClassDefinitions.super.refClass();
               this.bitmap$4 |= 2048L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.refClass;
      }

      public Map refClass() {
         return (this.bitmap$4 & 2048L) == 0L ? this.refClass$lzycompute() : this.refClass;
      }

      private Map volatileRefClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 4096L) == 0L) {
               this.volatileRefClass = Definitions.ValueClassDefinitions.super.volatileRefClass();
               this.bitmap$4 |= 4096L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.volatileRefClass;
      }

      public Map volatileRefClass() {
         return (this.bitmap$4 & 4096L) == 0L ? this.volatileRefClass$lzycompute() : this.volatileRefClass;
      }

      private Map lazyHolders$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 8192L) == 0L) {
               this.lazyHolders = Definitions.ValueClassDefinitions.super.lazyHolders();
               this.bitmap$4 |= 8192L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.lazyHolders;
      }

      public Map lazyHolders() {
         return (this.bitmap$4 & 8192L) == 0L ? this.lazyHolders$lzycompute() : this.lazyHolders;
      }

      private Symbols.Symbol LazyRefClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 16384L) == 0L) {
               this.LazyRefClass = Definitions.ValueClassDefinitions.super.LazyRefClass();
               this.bitmap$4 |= 16384L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.LazyRefClass;
      }

      public Symbols.Symbol LazyRefClass() {
         return (this.bitmap$4 & 16384L) == 0L ? this.LazyRefClass$lzycompute() : this.LazyRefClass;
      }

      private Symbols.Symbol LazyUnitClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 32768L) == 0L) {
               this.LazyUnitClass = Definitions.ValueClassDefinitions.super.LazyUnitClass();
               this.bitmap$4 |= 32768L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.LazyUnitClass;
      }

      public Symbols.Symbol LazyUnitClass() {
         return (this.bitmap$4 & 32768L) == 0L ? this.LazyUnitClass$lzycompute() : this.LazyUnitClass;
      }

      private Symbols.Symbol RichFloatClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 65536L) == 0L) {
               this.RichFloatClass = Definitions.ValueClassDefinitions.super.RichFloatClass();
               this.bitmap$4 |= 65536L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.RichFloatClass;
      }

      public Symbols.Symbol RichFloatClass() {
         return (this.bitmap$4 & 65536L) == 0L ? this.RichFloatClass$lzycompute() : this.RichFloatClass;
      }

      private Set allRefClasses$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 131072L) == 0L) {
               this.allRefClasses = Definitions.ValueClassDefinitions.super.allRefClasses();
               this.bitmap$4 |= 131072L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.allRefClasses;
      }

      public Set allRefClasses() {
         return (this.bitmap$4 & 131072L) == 0L ? this.allRefClasses$lzycompute() : this.allRefClasses;
      }

      private Symbols.ClassSymbol UnitClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 262144L) == 0L) {
               this.UnitClass = Definitions.ValueClassDefinitions.super.UnitClass();
               this.bitmap$4 |= 262144L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.UnitClass;
      }

      public Symbols.ClassSymbol UnitClass() {
         return (this.bitmap$4 & 262144L) == 0L ? this.UnitClass$lzycompute() : this.UnitClass;
      }

      private Symbols.ClassSymbol ByteClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 524288L) == 0L) {
               this.ByteClass = Definitions.ValueClassDefinitions.super.ByteClass();
               this.bitmap$4 |= 524288L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ByteClass;
      }

      public Symbols.ClassSymbol ByteClass() {
         return (this.bitmap$4 & 524288L) == 0L ? this.ByteClass$lzycompute() : this.ByteClass;
      }

      private Symbols.ClassSymbol ShortClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 1048576L) == 0L) {
               this.ShortClass = Definitions.ValueClassDefinitions.super.ShortClass();
               this.bitmap$4 |= 1048576L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ShortClass;
      }

      public Symbols.ClassSymbol ShortClass() {
         return (this.bitmap$4 & 1048576L) == 0L ? this.ShortClass$lzycompute() : this.ShortClass;
      }

      private Symbols.ClassSymbol CharClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 2097152L) == 0L) {
               this.CharClass = Definitions.ValueClassDefinitions.super.CharClass();
               this.bitmap$4 |= 2097152L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.CharClass;
      }

      public Symbols.ClassSymbol CharClass() {
         return (this.bitmap$4 & 2097152L) == 0L ? this.CharClass$lzycompute() : this.CharClass;
      }

      private Symbols.ClassSymbol IntClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 4194304L) == 0L) {
               this.IntClass = Definitions.ValueClassDefinitions.super.IntClass();
               this.bitmap$4 |= 4194304L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.IntClass;
      }

      public Symbols.ClassSymbol IntClass() {
         return (this.bitmap$4 & 4194304L) == 0L ? this.IntClass$lzycompute() : this.IntClass;
      }

      private Symbols.ClassSymbol LongClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 8388608L) == 0L) {
               this.LongClass = Definitions.ValueClassDefinitions.super.LongClass();
               this.bitmap$4 |= 8388608L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.LongClass;
      }

      public Symbols.ClassSymbol LongClass() {
         return (this.bitmap$4 & 8388608L) == 0L ? this.LongClass$lzycompute() : this.LongClass;
      }

      private Symbols.ClassSymbol FloatClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 16777216L) == 0L) {
               this.FloatClass = Definitions.ValueClassDefinitions.super.FloatClass();
               this.bitmap$4 |= 16777216L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.FloatClass;
      }

      public Symbols.ClassSymbol FloatClass() {
         return (this.bitmap$4 & 16777216L) == 0L ? this.FloatClass$lzycompute() : this.FloatClass;
      }

      private Symbols.ClassSymbol DoubleClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 33554432L) == 0L) {
               this.DoubleClass = Definitions.ValueClassDefinitions.super.DoubleClass();
               this.bitmap$4 |= 33554432L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.DoubleClass;
      }

      public Symbols.ClassSymbol DoubleClass() {
         return (this.bitmap$4 & 33554432L) == 0L ? this.DoubleClass$lzycompute() : this.DoubleClass;
      }

      private Symbols.ClassSymbol BooleanClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 67108864L) == 0L) {
               this.BooleanClass = Definitions.ValueClassDefinitions.super.BooleanClass();
               this.bitmap$4 |= 67108864L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BooleanClass;
      }

      public Symbols.ClassSymbol BooleanClass() {
         return (this.bitmap$4 & 67108864L) == 0L ? this.BooleanClass$lzycompute() : this.BooleanClass;
      }

      private Types.Type UnitTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 134217728L) == 0L) {
               this.UnitTpe = Definitions.ValueClassDefinitions.super.UnitTpe();
               this.bitmap$4 |= 134217728L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.UnitTpe;
      }

      public Types.Type UnitTpe() {
         return (this.bitmap$4 & 134217728L) == 0L ? this.UnitTpe$lzycompute() : this.UnitTpe;
      }

      private Types.Type ByteTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 268435456L) == 0L) {
               this.ByteTpe = Definitions.ValueClassDefinitions.super.ByteTpe();
               this.bitmap$4 |= 268435456L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ByteTpe;
      }

      public Types.Type ByteTpe() {
         return (this.bitmap$4 & 268435456L) == 0L ? this.ByteTpe$lzycompute() : this.ByteTpe;
      }

      private Types.Type ShortTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 536870912L) == 0L) {
               this.ShortTpe = Definitions.ValueClassDefinitions.super.ShortTpe();
               this.bitmap$4 |= 536870912L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ShortTpe;
      }

      public Types.Type ShortTpe() {
         return (this.bitmap$4 & 536870912L) == 0L ? this.ShortTpe$lzycompute() : this.ShortTpe;
      }

      private Types.Type CharTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 1073741824L) == 0L) {
               this.CharTpe = Definitions.ValueClassDefinitions.super.CharTpe();
               this.bitmap$4 |= 1073741824L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.CharTpe;
      }

      public Types.Type CharTpe() {
         return (this.bitmap$4 & 1073741824L) == 0L ? this.CharTpe$lzycompute() : this.CharTpe;
      }

      private Types.Type IntTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 2147483648L) == 0L) {
               this.IntTpe = Definitions.ValueClassDefinitions.super.IntTpe();
               this.bitmap$4 |= 2147483648L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.IntTpe;
      }

      public Types.Type IntTpe() {
         return (this.bitmap$4 & 2147483648L) == 0L ? this.IntTpe$lzycompute() : this.IntTpe;
      }

      private Types.Type LongTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 4294967296L) == 0L) {
               this.LongTpe = Definitions.ValueClassDefinitions.super.LongTpe();
               this.bitmap$4 |= 4294967296L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.LongTpe;
      }

      public Types.Type LongTpe() {
         return (this.bitmap$4 & 4294967296L) == 0L ? this.LongTpe$lzycompute() : this.LongTpe;
      }

      private Types.Type FloatTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 8589934592L) == 0L) {
               this.FloatTpe = Definitions.ValueClassDefinitions.super.FloatTpe();
               this.bitmap$4 |= 8589934592L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.FloatTpe;
      }

      public Types.Type FloatTpe() {
         return (this.bitmap$4 & 8589934592L) == 0L ? this.FloatTpe$lzycompute() : this.FloatTpe;
      }

      private Types.Type DoubleTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 17179869184L) == 0L) {
               this.DoubleTpe = Definitions.ValueClassDefinitions.super.DoubleTpe();
               this.bitmap$4 |= 17179869184L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.DoubleTpe;
      }

      public Types.Type DoubleTpe() {
         return (this.bitmap$4 & 17179869184L) == 0L ? this.DoubleTpe$lzycompute() : this.DoubleTpe;
      }

      private Types.Type BooleanTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 34359738368L) == 0L) {
               this.BooleanTpe = Definitions.ValueClassDefinitions.super.BooleanTpe();
               this.bitmap$4 |= 34359738368L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BooleanTpe;
      }

      public Types.Type BooleanTpe() {
         return (this.bitmap$4 & 34359738368L) == 0L ? this.BooleanTpe$lzycompute() : this.BooleanTpe;
      }

      private List ScalaNumericValueClasses$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 68719476736L) == 0L) {
               this.ScalaNumericValueClasses = Definitions.ValueClassDefinitions.super.ScalaNumericValueClasses();
               this.bitmap$4 |= 68719476736L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaNumericValueClasses;
      }

      public List ScalaNumericValueClasses() {
         return (this.bitmap$4 & 68719476736L) == 0L ? this.ScalaNumericValueClasses$lzycompute() : this.ScalaNumericValueClasses;
      }

      private List ScalaValueClassesNoUnit$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 137438953472L) == 0L) {
               this.ScalaValueClassesNoUnit = Definitions.ValueClassDefinitions.super.ScalaValueClassesNoUnit();
               this.bitmap$4 |= 137438953472L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaValueClassesNoUnit;
      }

      public List ScalaValueClassesNoUnit() {
         return (this.bitmap$4 & 137438953472L) == 0L ? this.ScalaValueClassesNoUnit$lzycompute() : this.ScalaValueClassesNoUnit;
      }

      private List ScalaValueClasses$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 274877906944L) == 0L) {
               this.ScalaValueClasses = Definitions.ValueClassDefinitions.super.ScalaValueClasses();
               this.bitmap$4 |= 274877906944L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaValueClasses;
      }

      public List ScalaValueClasses() {
         return (this.bitmap$4 & 274877906944L) == 0L ? this.ScalaValueClasses$lzycompute() : this.ScalaValueClasses;
      }

      private ValueClassDefinitions.SymbolSet ScalaValueClassesSet$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 549755813888L) == 0L) {
               this.ScalaValueClassesSet = Definitions.ValueClassDefinitions.super.ScalaValueClassesSet();
               this.bitmap$4 |= 549755813888L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaValueClassesSet;
      }

      public ValueClassDefinitions.SymbolSet ScalaValueClassesSet() {
         return (this.bitmap$4 & 549755813888L) == 0L ? this.ScalaValueClassesSet$lzycompute() : this.ScalaValueClassesSet;
      }

      private ValueClassDefinitions.SymbolSet ScalaNumericValueClassesSet$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 1099511627776L) == 0L) {
               this.ScalaNumericValueClassesSet = Definitions.ValueClassDefinitions.super.ScalaNumericValueClassesSet();
               this.bitmap$4 |= 1099511627776L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaNumericValueClassesSet;
      }

      public ValueClassDefinitions.SymbolSet ScalaNumericValueClassesSet() {
         return (this.bitmap$4 & 1099511627776L) == 0L ? this.ScalaNumericValueClassesSet$lzycompute() : this.ScalaNumericValueClassesSet;
      }

      private Set ScalaIntegralValueClasses$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 2199023255552L) == 0L) {
               this.ScalaIntegralValueClasses = Definitions.ValueClassDefinitions.super.ScalaIntegralValueClasses();
               this.bitmap$4 |= 2199023255552L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaIntegralValueClasses;
      }

      public Set ScalaIntegralValueClasses() {
         return (this.bitmap$4 & 2199023255552L) == 0L ? this.ScalaIntegralValueClasses$lzycompute() : this.ScalaIntegralValueClasses;
      }

      public final void scala$reflect$internal$Definitions$ValueClassDefinitions$_setter_$scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToWeight_$eq(final Map x$1) {
         this.scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToWeight = x$1;
      }

      public final void scala$reflect$internal$Definitions$ValueClassDefinitions$_setter_$scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToTag_$eq(final Map x$1) {
         this.scala$reflect$internal$Definitions$ValueClassDefinitions$$nameToTag = x$1;
      }

      public boolean isDefinitionsInitialized() {
         return this.isInitialized;
      }

      private Symbols.ModuleSymbol JavaLangPackage$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 1L) == 0L) {
               this.JavaLangPackage = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getPackage("java.lang");
               this.bitmap$0 |= 1L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaLangPackage;
      }

      public Symbols.ModuleSymbol JavaLangPackage() {
         return (this.bitmap$0 & 1L) == 0L ? this.JavaLangPackage$lzycompute() : this.JavaLangPackage;
      }

      private Symbols.ClassSymbol JavaLangPackageClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 2L) == 0L) {
               this.JavaLangPackageClass = (Symbols.ClassSymbol)this.JavaLangPackage().moduleClass().asClass();
               this.bitmap$0 |= 2L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaLangPackageClass;
      }

      public Symbols.ClassSymbol JavaLangPackageClass() {
         return (this.bitmap$0 & 2L) == 0L ? this.JavaLangPackageClass$lzycompute() : this.JavaLangPackageClass;
      }

      private Symbols.ModuleSymbol ScalaPackage$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 4L) == 0L) {
               this.ScalaPackage = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getPackage("scala");
               this.bitmap$0 |= 4L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaPackage;
      }

      public Symbols.ModuleSymbol ScalaPackage() {
         return (this.bitmap$0 & 4L) == 0L ? this.ScalaPackage$lzycompute() : this.ScalaPackage;
      }

      private Symbols.ClassSymbol ScalaPackageClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 8L) == 0L) {
               this.ScalaPackageClass = (Symbols.ClassSymbol)this.ScalaPackage().moduleClass().asClass();
               this.bitmap$0 |= 8L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaPackageClass;
      }

      public Symbols.ClassSymbol ScalaPackageClass() {
         return (this.bitmap$0 & 8L) == 0L ? this.ScalaPackageClass$lzycompute() : this.ScalaPackageClass;
      }

      private Symbols.Symbol ScalaPackageObject$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 16L) == 0L) {
               this.ScalaPackageObject = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getPackageObjectIfDefined("scala");
               this.bitmap$0 |= 16L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaPackageObject;
      }

      public Symbols.Symbol ScalaPackageObject() {
         return (this.bitmap$0 & 16L) == 0L ? this.ScalaPackageObject$lzycompute() : this.ScalaPackageObject;
      }

      private Symbols.ModuleSymbol RuntimePackage$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 32L) == 0L) {
               this.RuntimePackage = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getPackage("scala.runtime");
               this.bitmap$0 |= 32L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.RuntimePackage;
      }

      public Symbols.ModuleSymbol RuntimePackage() {
         return (this.bitmap$0 & 32L) == 0L ? this.RuntimePackage$lzycompute() : this.RuntimePackage;
      }

      private Symbols.ClassSymbol RuntimePackageClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 64L) == 0L) {
               this.RuntimePackageClass = (Symbols.ClassSymbol)this.RuntimePackage().moduleClass().asClass();
               this.bitmap$0 |= 64L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.RuntimePackageClass;
      }

      public Symbols.ClassSymbol RuntimePackageClass() {
         return (this.bitmap$0 & 64L) == 0L ? this.RuntimePackageClass$lzycompute() : this.RuntimePackageClass;
      }

      public Symbols.Symbol javaTypeToValueClass(final Class jtype) {
         Class var10000 = Void.TYPE;
         if (var10000 == null) {
            if (jtype == null) {
               return this.UnitClass();
            }
         } else if (var10000.equals(jtype)) {
            return this.UnitClass();
         }

         var10000 = Byte.TYPE;
         if (var10000 == null) {
            if (jtype == null) {
               return this.ByteClass();
            }
         } else if (var10000.equals(jtype)) {
            return this.ByteClass();
         }

         var10000 = Character.TYPE;
         if (var10000 == null) {
            if (jtype == null) {
               return this.CharClass();
            }
         } else if (var10000.equals(jtype)) {
            return this.CharClass();
         }

         var10000 = Short.TYPE;
         if (var10000 == null) {
            if (jtype == null) {
               return this.ShortClass();
            }
         } else if (var10000.equals(jtype)) {
            return this.ShortClass();
         }

         var10000 = Integer.TYPE;
         if (var10000 == null) {
            if (jtype == null) {
               return this.IntClass();
            }
         } else if (var10000.equals(jtype)) {
            return this.IntClass();
         }

         var10000 = Long.TYPE;
         if (var10000 == null) {
            if (jtype == null) {
               return this.LongClass();
            }
         } else if (var10000.equals(jtype)) {
            return this.LongClass();
         }

         var10000 = Float.TYPE;
         if (var10000 == null) {
            if (jtype == null) {
               return this.FloatClass();
            }
         } else if (var10000.equals(jtype)) {
            return this.FloatClass();
         }

         var10000 = Double.TYPE;
         if (var10000 == null) {
            if (jtype == null) {
               return this.DoubleClass();
            }
         } else if (var10000.equals(jtype)) {
            return this.DoubleClass();
         }

         var10000 = Boolean.TYPE;
         if (var10000 == null) {
            if (jtype == null) {
               return this.BooleanClass();
            }
         } else if (var10000.equals(jtype)) {
            return this.BooleanClass();
         }

         return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
      }

      public Class valueClassToJavaType(final Symbols.Symbol sym) {
         Symbols.ClassSymbol var10000 = this.UnitClass();
         if (var10000 == null) {
            if (sym == null) {
               return Void.TYPE;
            }
         } else if (var10000.equals(sym)) {
            return Void.TYPE;
         }

         var10000 = this.ByteClass();
         if (var10000 == null) {
            if (sym == null) {
               return Byte.TYPE;
            }
         } else if (var10000.equals(sym)) {
            return Byte.TYPE;
         }

         var10000 = this.CharClass();
         if (var10000 == null) {
            if (sym == null) {
               return Character.TYPE;
            }
         } else if (var10000.equals(sym)) {
            return Character.TYPE;
         }

         var10000 = this.ShortClass();
         if (var10000 == null) {
            if (sym == null) {
               return Short.TYPE;
            }
         } else if (var10000.equals(sym)) {
            return Short.TYPE;
         }

         var10000 = this.IntClass();
         if (var10000 == null) {
            if (sym == null) {
               return Integer.TYPE;
            }
         } else if (var10000.equals(sym)) {
            return Integer.TYPE;
         }

         var10000 = this.LongClass();
         if (var10000 == null) {
            if (sym == null) {
               return Long.TYPE;
            }
         } else if (var10000.equals(sym)) {
            return Long.TYPE;
         }

         var10000 = this.FloatClass();
         if (var10000 == null) {
            if (sym == null) {
               return Float.TYPE;
            }
         } else if (var10000.equals(sym)) {
            return Float.TYPE;
         }

         var10000 = this.DoubleClass();
         if (var10000 == null) {
            if (sym == null) {
               return Double.TYPE;
            }
         } else if (var10000.equals(sym)) {
            return Double.TYPE;
         }

         var10000 = this.BooleanClass();
         if (var10000 == null) {
            if (sym == null) {
               return Boolean.TYPE;
            }
         } else if (var10000.equals(sym)) {
            return Boolean.TYPE;
         }

         return null;
      }

      public Symbols.Symbol fullyInitializeSymbol(final Symbols.Symbol sym) {
         sym.initialize();
         if (sym.owner().initialize().isJavaDefined()) {
            sym.cookJavaRawInfo();
         }

         this.fullyInitializeType(sym.info());
         this.fullyInitializeType(sym.tpe_$times());
         return sym;
      }

      public Types.Type fullyInitializeType(final Types.Type tp) {
         List var10000 = tp.typeParams();
         if (var10000 == null) {
            throw null;
         } else {
            for(List foreach_these = var10000; !foreach_these.isEmpty(); foreach_these = (List)foreach_these.tail()) {
               Symbols.Symbol var5 = (Symbols.Symbol)foreach_these.head();
               this.fullyInitializeSymbol(var5);
            }

            Object var9 = null;
            SymbolTable var11 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
            List mforeach_xss = tp.paramss();
            if (var11 == null) {
               throw null;
            } else if (mforeach_xss == null) {
               throw null;
            } else {
               for(List mforeach_foreach_these = mforeach_xss; !mforeach_foreach_these.isEmpty(); mforeach_foreach_these = (List)mforeach_foreach_these.tail()) {
                  List var6 = (List)mforeach_foreach_these.head();
                  if (var6 == null) {
                     throw null;
                  }

                  for(List foreach_these = var6; !foreach_these.isEmpty(); foreach_these = (List)foreach_these.tail()) {
                     Symbols.Symbol var8 = (Symbols.Symbol)foreach_these.head();
                     this.fullyInitializeSymbol(var8);
                  }

                  Object var10 = null;
               }

               return tp;
            }
         }
      }

      public Scopes.Scope fullyInitializeScope(final Scopes.Scope scope) {
         List var10000 = scope.sorted();
         if (var10000 == null) {
            throw null;
         } else {
            for(List foreach_these = var10000; !foreach_these.isEmpty(); foreach_these = (List)foreach_these.tail()) {
               Symbols.Symbol var3 = (Symbols.Symbol)foreach_these.head();
               this.fullyInitializeSymbol(var3);
            }

            return scope;
         }
      }

      public boolean isUniversalMember(final Symbols.Symbol sym) {
         if (sym.isOverloaded()) {
            List var10000 = sym.alternatives();
            if (var10000 == null) {
               throw null;
            } else {
               for(List exists_these = var10000; !exists_these.isEmpty(); exists_these = (List)exists_these.tail()) {
                  Symbols.Symbol var3 = (Symbols.Symbol)exists_these.head();
                  if ($anonfun$isUniversalMember$1(this, var3)) {
                     return true;
                  }
               }

               return false;
            }
         } else {
            return this.ObjectClass().isSubClass(sym.owner());
         }
      }

      public boolean isUnimportable(final Symbols.Symbol sym) {
         return sym == this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol() || sym.isConstructor() || sym.isPrivateLocal();
      }

      public boolean isUnimportableUnlessRenamed(final Symbols.Symbol sym) {
         return this.isUnimportable(sym) || this.isUniversalMember(sym);
      }

      public boolean isImportable(final Symbols.Symbol sym) {
         return !this.isUnimportable(sym);
      }

      public boolean isTrivialTopType(final Types.Type tp) {
         return tp.$eq$colon$eq(this.AnyTpe()) || tp.$eq$colon$eq(this.AnyValTpe()) || tp.$eq$colon$eq(this.AnyRefTpe());
      }

      public boolean isUnitType(final Types.Type tp) {
         Symbols.Symbol var10000 = tp.typeSymbol();
         Symbols.ClassSymbol var2 = this.UnitClass();
         if (var10000 == null) {
            if (var2 != null) {
               return false;
            }
         } else if (!var10000.equals(var2)) {
            return false;
         }

         if (tp.annotations().isEmpty()) {
            return true;
         } else {
            return false;
         }
      }

      private Types.Type fixupAsAnyTrait(final Types.Type tpe) {
         if (!(tpe instanceof Types.ClassInfoType)) {
            if (tpe instanceof Types.PolyType) {
               Types.PolyType var9 = (Types.PolyType)tpe;
               List tparams = var9.typeParams();
               Types.Type restpe = var9.resultType();
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new PolyType(tparams, this.fixupAsAnyTrait(restpe));
            } else {
               throw new MatchError(tpe);
            }
         } else {
            Types.ClassInfoType var2 = (Types.ClassInfoType)tpe;
            List parents = var2.parents();
            Scopes.Scope decls = var2.decls();
            Symbols.Symbol clazz = var2.typeSymbol();
            Symbols.Symbol var10000 = ((Types.Type)parents.head()).typeSymbol();
            Symbols.ClassSymbol var6 = this.AnyClass();
            if (var10000 == null) {
               if (var6 == null) {
                  return tpe;
               }
            } else if (var10000.equals(var6)) {
               return tpe;
            }

            boolean var19;
            label41: {
               label40: {
                  var17 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
                  Symbols.Symbol var10001 = ((Types.Type)parents.head()).typeSymbol();
                  Symbols.ClassSymbol var7 = this.ObjectClass();
                  if (var10001 == null) {
                     if (var7 == null) {
                        break label40;
                     }
                  } else if (var10001.equals(var7)) {
                     break label40;
                  }

                  var19 = false;
                  break label41;
               }

               var19 = true;
            }

            boolean assert_assertion = var19;
            if (var17 == null) {
               throw null;
            } else {
               SymbolTable assert_this = var17;
               if (!assert_assertion) {
                  throw assert_this.throwAssertionError(parents);
               } else {
                  assert_this = null;
                  Types.ClassInfoType var18 = new Types.ClassInfoType;
                  SymbolTable var10002 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
                  Types.Type var8 = this.AnyTpe();
                  List var10003 = (List)parents.tail();
                  if (var10003 == null) {
                     throw null;
                  } else {
                     List $colon$colon_this = var10003;
                     scala.collection.immutable..colon.colon var20 = new scala.collection.immutable..colon.colon(var8, $colon$colon_this);
                     Object var16 = null;
                     var18.<init>(var20, decls, clazz);
                     return var18;
                  }
               }
            }
         }
      }

      private Symbols.ClassSymbol AnyClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 128L) == 0L) {
               this.AnyClass = (Symbols.ClassSymbol)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().scala$reflect$internal$Definitions$$enterNewClass(this.ScalaPackageClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Any(), .MODULE$, 8L).markAllCompleted();
               this.bitmap$0 |= 128L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.AnyClass;
      }

      public Symbols.ClassSymbol AnyClass() {
         return (this.bitmap$0 & 128L) == 0L ? this.AnyClass$lzycompute() : this.AnyClass;
      }

      private Symbols.AliasTypeSymbol AnyRefClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 256L) == 0L) {
               this.AnyRefClass = (Symbols.AliasTypeSymbol)this.newAlias(this.ScalaPackageClass(), (Names.TypeName)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().AnyRef(), this.ObjectTpe()).markAllCompleted();
               this.bitmap$0 |= 256L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.AnyRefClass;
      }

      public Symbols.AliasTypeSymbol AnyRefClass() {
         return (this.bitmap$0 & 256L) == 0L ? this.AnyRefClass$lzycompute() : this.AnyRefClass;
      }

      private Symbols.ClassSymbol ObjectClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 512L) == 0L) {
               this.ObjectClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getRequiredClass("java.lang.Object");
               this.bitmap$0 |= 512L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ObjectClass;
      }

      public Symbols.ClassSymbol ObjectClass() {
         return (this.bitmap$0 & 512L) == 0L ? this.ObjectClass$lzycompute() : this.ObjectClass;
      }

      private Types.Type AnyRefTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 1024L) == 0L) {
               Symbols.AliasTypeSymbol var10001 = this.AnyRefClass();
               if (var10001 == null) {
                  throw null;
               }

               this.AnyRefTpe = ((Symbols.Symbol)var10001).tpe_$times();
               this.bitmap$0 |= 1024L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.AnyRefTpe;
      }

      public Types.Type AnyRefTpe() {
         return (this.bitmap$0 & 1024L) == 0L ? this.AnyRefTpe$lzycompute() : this.AnyRefTpe;
      }

      private Types.Type AnyTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 2048L) == 0L) {
               Symbols.ClassSymbol var10001 = this.AnyClass();
               if (var10001 == null) {
                  throw null;
               }

               this.AnyTpe = ((Symbols.Symbol)var10001).tpe_$times();
               this.bitmap$0 |= 2048L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.AnyTpe;
      }

      public Types.Type AnyTpe() {
         return (this.bitmap$0 & 2048L) == 0L ? this.AnyTpe$lzycompute() : this.AnyTpe;
      }

      private Types.Type AnyValTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 4096L) == 0L) {
               Symbols.ClassSymbol var10001 = this.AnyValClass();
               if (var10001 == null) {
                  throw null;
               }

               this.AnyValTpe = ((Symbols.Symbol)var10001).tpe_$times();
               this.bitmap$0 |= 4096L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.AnyValTpe;
      }

      public Types.Type AnyValTpe() {
         return (this.bitmap$0 & 4096L) == 0L ? this.AnyValTpe$lzycompute() : this.AnyValTpe;
      }

      private Types.Type BoxedUnitTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 8192L) == 0L) {
               Symbols.ClassSymbol var10001 = this.BoxedUnitClass();
               if (var10001 == null) {
                  throw null;
               }

               this.BoxedUnitTpe = ((Symbols.Symbol)var10001).tpe_$times();
               this.bitmap$0 |= 8192L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxedUnitTpe;
      }

      public Types.Type BoxedUnitTpe() {
         return (this.bitmap$0 & 8192L) == 0L ? this.BoxedUnitTpe$lzycompute() : this.BoxedUnitTpe;
      }

      private Types.Type NothingTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 16384L) == 0L) {
               NothingClass$ var10001 = this.NothingClass();
               if (var10001 == null) {
                  throw null;
               }

               this.NothingTpe = ((Symbols.Symbol)var10001).tpe_$times();
               this.bitmap$0 |= 16384L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.NothingTpe;
      }

      public Types.Type NothingTpe() {
         return (this.bitmap$0 & 16384L) == 0L ? this.NothingTpe$lzycompute() : this.NothingTpe;
      }

      private Types.Type NullTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 32768L) == 0L) {
               NullClass$ var10001 = this.NullClass();
               if (var10001 == null) {
                  throw null;
               }

               this.NullTpe = ((Symbols.Symbol)var10001).tpe_$times();
               this.bitmap$0 |= 32768L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.NullTpe;
      }

      public Types.Type NullTpe() {
         return (this.bitmap$0 & 32768L) == 0L ? this.NullTpe$lzycompute() : this.NullTpe;
      }

      private Types.Type ObjectTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 65536L) == 0L) {
               Symbols.ClassSymbol var10001 = this.ObjectClass();
               if (var10001 == null) {
                  throw null;
               }

               this.ObjectTpe = ((Symbols.Symbol)var10001).tpe_$times();
               this.bitmap$0 |= 65536L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ObjectTpe;
      }

      public Types.Type ObjectTpe() {
         return (this.bitmap$0 & 65536L) == 0L ? this.ObjectTpe$lzycompute() : this.ObjectTpe;
      }

      private Types.ObjectTpeJavaRef ObjectTpeJava$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 131072L) == 0L) {
               this.ObjectTpeJava = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new ObjectTpeJavaRef();
               this.bitmap$0 |= 131072L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ObjectTpeJava;
      }

      public Types.ObjectTpeJavaRef ObjectTpeJava() {
         return (this.bitmap$0 & 131072L) == 0L ? this.ObjectTpeJava$lzycompute() : this.ObjectTpeJava;
      }

      private Types.Type SerializableTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 262144L) == 0L) {
               Symbols.ClassSymbol var10001 = this.SerializableClass();
               if (var10001 == null) {
                  throw null;
               }

               this.SerializableTpe = ((Symbols.Symbol)var10001).tpe_$times();
               this.bitmap$0 |= 262144L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SerializableTpe;
      }

      public Types.Type SerializableTpe() {
         return (this.bitmap$0 & 262144L) == 0L ? this.SerializableTpe$lzycompute() : this.SerializableTpe;
      }

      private Types.Type StringTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 524288L) == 0L) {
               Symbols.ClassSymbol var10001 = this.StringClass();
               if (var10001 == null) {
                  throw null;
               }

               this.StringTpe = ((Symbols.Symbol)var10001).tpe_$times();
               this.bitmap$0 |= 524288L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.StringTpe;
      }

      public Types.Type StringTpe() {
         return (this.bitmap$0 & 524288L) == 0L ? this.StringTpe$lzycompute() : this.StringTpe;
      }

      private Types.Type ThrowableTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 1048576L) == 0L) {
               Symbols.ClassSymbol var10001 = this.ThrowableClass();
               if (var10001 == null) {
                  throw null;
               }

               this.ThrowableTpe = ((Symbols.Symbol)var10001).tpe_$times();
               this.bitmap$0 |= 1048576L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ThrowableTpe;
      }

      public Types.Type ThrowableTpe() {
         return (this.bitmap$0 & 1048576L) == 0L ? this.ThrowableTpe$lzycompute() : this.ThrowableTpe;
      }

      private Types.ConstantType ConstantTrue$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 2097152L) == 0L) {
               this.ConstantTrue = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().ConstantType().apply(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new Constant(true));
               this.bitmap$0 |= 2097152L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ConstantTrue;
      }

      public Types.ConstantType ConstantTrue() {
         return (this.bitmap$0 & 2097152L) == 0L ? this.ConstantTrue$lzycompute() : this.ConstantTrue;
      }

      private Types.ConstantType ConstantFalse$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 4194304L) == 0L) {
               this.ConstantFalse = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().ConstantType().apply(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new Constant(false));
               this.bitmap$0 |= 4194304L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ConstantFalse;
      }

      public Types.ConstantType ConstantFalse() {
         return (this.bitmap$0 & 4194304L) == 0L ? this.ConstantFalse$lzycompute() : this.ConstantFalse;
      }

      private Types.ConstantType ConstantNull$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 8388608L) == 0L) {
               this.ConstantNull = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().ConstantType().apply(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new Constant((Object)null));
               this.bitmap$0 |= 8388608L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ConstantNull;
      }

      public Types.ConstantType ConstantNull() {
         return (this.bitmap$0 & 8388608L) == 0L ? this.ConstantNull$lzycompute() : this.ConstantNull;
      }

      private Symbols.ClassSymbol AnyValClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 16777216L) == 0L) {
               Symbols.Symbol var10001 = this.ScalaPackageClass().info().member((Names.Name)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().AnyVal());
               if (var10001 == null) {
                  throw null;
               }

               Symbols.Symbol orElse_this = var10001;
               var10001 = (Symbols.Symbol)(orElse_this != orElse_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? orElse_this : $anonfun$AnyValClass$1(this));
               orElse_this = null;
               this.AnyValClass = (Symbols.ClassSymbol)var10001;
               this.bitmap$0 |= 16777216L;
            }
         } catch (Throwable var3) {
            throw var3;
         }

         return this.AnyValClass;
      }

      public Symbols.ClassSymbol AnyValClass() {
         return (this.bitmap$0 & 16777216L) == 0L ? this.AnyValClass$lzycompute() : this.AnyValClass;
      }

      public Symbols.TermSymbol AnyVal_getClass() {
         return this.getMemberMethod(this.AnyValClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().getClass_());
      }

      private Symbols.ClassSymbol RuntimeNothingClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 33554432L) == 0L) {
               this.RuntimeNothingClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Nothing.class));
               this.bitmap$0 |= 33554432L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.RuntimeNothingClass;
      }

      public Symbols.ClassSymbol RuntimeNothingClass() {
         return (this.bitmap$0 & 33554432L) == 0L ? this.RuntimeNothingClass$lzycompute() : this.RuntimeNothingClass;
      }

      private Symbols.ClassSymbol RuntimeNullClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 67108864L) == 0L) {
               this.RuntimeNullClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Null.class));
               this.bitmap$0 |= 67108864L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.RuntimeNullClass;
      }

      public Symbols.ClassSymbol RuntimeNullClass() {
         return (this.bitmap$0 & 67108864L) == 0L ? this.RuntimeNullClass$lzycompute() : this.RuntimeNullClass;
      }

      private Symbols.ClassSymbol ClassCastExceptionClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 134217728L) == 0L) {
               this.ClassCastExceptionClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(ClassCastException.class));
               this.bitmap$0 |= 134217728L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ClassCastExceptionClass;
      }

      public Symbols.ClassSymbol ClassCastExceptionClass() {
         return (this.bitmap$0 & 134217728L) == 0L ? this.ClassCastExceptionClass$lzycompute() : this.ClassCastExceptionClass;
      }

      private Symbols.ClassSymbol IndexOutOfBoundsExceptionClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 268435456L) == 0L) {
               this.IndexOutOfBoundsExceptionClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassByName("java.lang.IndexOutOfBoundsException");
               this.bitmap$0 |= 268435456L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.IndexOutOfBoundsExceptionClass;
      }

      public Symbols.ClassSymbol IndexOutOfBoundsExceptionClass() {
         return (this.bitmap$0 & 268435456L) == 0L ? this.IndexOutOfBoundsExceptionClass$lzycompute() : this.IndexOutOfBoundsExceptionClass;
      }

      private Symbols.ClassSymbol InvocationTargetExceptionClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 536870912L) == 0L) {
               this.InvocationTargetExceptionClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassByName("java.lang.reflect.InvocationTargetException");
               this.bitmap$0 |= 536870912L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.InvocationTargetExceptionClass;
      }

      public Symbols.ClassSymbol InvocationTargetExceptionClass() {
         return (this.bitmap$0 & 536870912L) == 0L ? this.InvocationTargetExceptionClass$lzycompute() : this.InvocationTargetExceptionClass;
      }

      private Symbols.ClassSymbol MatchErrorClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 1073741824L) == 0L) {
               this.MatchErrorClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(MatchError.class));
               this.bitmap$0 |= 1073741824L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.MatchErrorClass;
      }

      public Symbols.ClassSymbol MatchErrorClass() {
         return (this.bitmap$0 & 1073741824L) == 0L ? this.MatchErrorClass$lzycompute() : this.MatchErrorClass;
      }

      private Symbols.ClassSymbol NonLocalReturnControlClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 2147483648L) == 0L) {
               this.NonLocalReturnControlClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(NonLocalReturnControl.class));
               this.bitmap$0 |= 2147483648L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.NonLocalReturnControlClass;
      }

      public Symbols.ClassSymbol NonLocalReturnControlClass() {
         return (this.bitmap$0 & 2147483648L) == 0L ? this.NonLocalReturnControlClass$lzycompute() : this.NonLocalReturnControlClass;
      }

      private Symbols.ClassSymbol NullPointerExceptionClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 4294967296L) == 0L) {
               this.NullPointerExceptionClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassByName("java.lang.NullPointerException");
               this.bitmap$0 |= 4294967296L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.NullPointerExceptionClass;
      }

      public Symbols.ClassSymbol NullPointerExceptionClass() {
         return (this.bitmap$0 & 4294967296L) == 0L ? this.NullPointerExceptionClass$lzycompute() : this.NullPointerExceptionClass;
      }

      private Symbols.ClassSymbol ThrowableClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 8589934592L) == 0L) {
               this.ThrowableClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassByName("java.lang.Throwable");
               this.bitmap$0 |= 8589934592L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ThrowableClass;
      }

      public Symbols.ClassSymbol ThrowableClass() {
         return (this.bitmap$0 & 8589934592L) == 0L ? this.ThrowableClass$lzycompute() : this.ThrowableClass;
      }

      private Symbols.ClassSymbol UninitializedErrorClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 17179869184L) == 0L) {
               this.UninitializedErrorClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(UninitializedFieldError.class));
               this.bitmap$0 |= 17179869184L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.UninitializedErrorClass;
      }

      public Symbols.ClassSymbol UninitializedErrorClass() {
         return (this.bitmap$0 & 17179869184L) == 0L ? this.UninitializedErrorClass$lzycompute() : this.UninitializedErrorClass;
      }

      private Symbols.ClassSymbol RuntimeExceptionClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 34359738368L) == 0L) {
               this.RuntimeExceptionClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(RuntimeException.class));
               this.bitmap$0 |= 34359738368L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.RuntimeExceptionClass;
      }

      public Symbols.ClassSymbol RuntimeExceptionClass() {
         return (this.bitmap$0 & 34359738368L) == 0L ? this.RuntimeExceptionClass$lzycompute() : this.RuntimeExceptionClass;
      }

      private Symbols.ClassSymbol IllegalArgExceptionClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 68719476736L) == 0L) {
               this.IllegalArgExceptionClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(IllegalArgumentException.class));
               this.bitmap$0 |= 68719476736L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.IllegalArgExceptionClass;
      }

      public Symbols.ClassSymbol IllegalArgExceptionClass() {
         return (this.bitmap$0 & 68719476736L) == 0L ? this.IllegalArgExceptionClass$lzycompute() : this.IllegalArgExceptionClass;
      }

      private Symbols.Symbol UninitializedFieldConstructor$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 137438953472L) == 0L) {
               this.UninitializedFieldConstructor = this.UninitializedErrorClass().primaryConstructor();
               this.bitmap$0 |= 137438953472L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.UninitializedFieldConstructor;
      }

      public Symbols.Symbol UninitializedFieldConstructor() {
         return (this.bitmap$0 & 137438953472L) == 0L ? this.UninitializedFieldConstructor$lzycompute() : this.UninitializedFieldConstructor;
      }

      private Symbols.ClassSymbol PartialFunctionClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 274877906944L) == 0L) {
               this.PartialFunctionClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(PartialFunction.class));
               this.bitmap$0 |= 274877906944L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.PartialFunctionClass;
      }

      public Symbols.ClassSymbol PartialFunctionClass() {
         return (this.bitmap$0 & 274877906944L) == 0L ? this.PartialFunctionClass$lzycompute() : this.PartialFunctionClass;
      }

      private Symbols.ClassSymbol AbstractPartialFunctionClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 549755813888L) == 0L) {
               this.AbstractPartialFunctionClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(AbstractPartialFunction.class));
               this.bitmap$0 |= 549755813888L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.AbstractPartialFunctionClass;
      }

      public Symbols.ClassSymbol AbstractPartialFunctionClass() {
         return (this.bitmap$0 & 549755813888L) == 0L ? this.AbstractPartialFunctionClass$lzycompute() : this.AbstractPartialFunctionClass;
      }

      private Symbols.ClassSymbol SymbolClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 1099511627776L) == 0L) {
               this.SymbolClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Symbol.class));
               this.bitmap$0 |= 1099511627776L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SymbolClass;
      }

      public Symbols.ClassSymbol SymbolClass() {
         return (this.bitmap$0 & 1099511627776L) == 0L ? this.SymbolClass$lzycompute() : this.SymbolClass;
      }

      private Symbols.ClassSymbol StringClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 2199023255552L) == 0L) {
               this.StringClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(String.class));
               this.bitmap$0 |= 2199023255552L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.StringClass;
      }

      public Symbols.ClassSymbol StringClass() {
         return (this.bitmap$0 & 2199023255552L) == 0L ? this.StringClass$lzycompute() : this.StringClass;
      }

      private Symbols.Symbol StringModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 4398046511104L) == 0L) {
               this.StringModule = this.StringClass().linkedClassOfClass();
               this.bitmap$0 |= 4398046511104L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.StringModule;
      }

      public Symbols.Symbol StringModule() {
         return (this.bitmap$0 & 4398046511104L) == 0L ? this.StringModule$lzycompute() : this.StringModule;
      }

      private Symbols.ClassSymbol ClassClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 8796093022208L) == 0L) {
               this.ClassClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Class.class));
               this.bitmap$0 |= 8796093022208L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ClassClass;
      }

      public Symbols.ClassSymbol ClassClass() {
         return (this.bitmap$0 & 8796093022208L) == 0L ? this.ClassClass$lzycompute() : this.ClassClass;
      }

      public Symbols.TermSymbol Class_getMethod() {
         return this.getMemberMethod(this.ClassClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().getMethod_());
      }

      private Symbols.ClassSymbol DynamicClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 17592186044416L) == 0L) {
               this.DynamicClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Dynamic.class));
               this.bitmap$0 |= 17592186044416L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.DynamicClass;
      }

      public Symbols.ClassSymbol DynamicClass() {
         return (this.bitmap$0 & 17592186044416L) == 0L ? this.DynamicClass$lzycompute() : this.DynamicClass;
      }

      private List UnqualifiedModules$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 35184372088832L) == 0L) {
               this.UnqualifiedModules = new scala.collection.immutable..colon.colon(this.PredefModule(), new scala.collection.immutable..colon.colon(this.ScalaPackage(), new scala.collection.immutable..colon.colon(this.JavaLangPackage(), .MODULE$)));
               this.bitmap$0 |= 35184372088832L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.UnqualifiedModules;
      }

      public List UnqualifiedModules() {
         return (this.bitmap$0 & 35184372088832L) == 0L ? this.UnqualifiedModules$lzycompute() : this.UnqualifiedModules;
      }

      private Set UnqualifiedOwners$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 70368744177664L) == 0L) {
               SetOps var10001 = this.UnqualifiedModules().toSet();
               List var10002 = this.UnqualifiedModules();
               if (var10002 == null) {
                  throw null;
               }

               List map_this = var10002;
               Object var16;
               if (map_this == .MODULE$) {
                  var16 = .MODULE$;
               } else {
                  scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon(((Symbols.ModuleSymbol)map_this.head()).moduleClass(), .MODULE$);
                  scala.collection.immutable..colon.colon map_t = map_h;

                  for(List map_rest = (List)map_this.tail(); map_rest != .MODULE$; map_rest = (List)map_rest.tail()) {
                     scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon(((Symbols.ModuleSymbol)map_rest.head()).moduleClass(), .MODULE$);
                     map_t.next_$eq(map_nx);
                     map_t = map_nx;
                  }

                  Statics.releaseFence();
                  var16 = map_h;
               }

               Object var10 = null;
               Object var11 = null;
               Object var12 = null;
               Object var13 = null;
               Object var14 = null;
               Object $plus$plus_that = var16;
               if (var10001 == null) {
                  throw null;
               }

               var10001 = var10001.concat((IterableOnce)$plus$plus_that);
               $plus$plus_that = null;
               this.UnqualifiedOwners = (Set)var10001;
               this.bitmap$0 |= 70368744177664L;
            }
         } catch (Throwable var8) {
            throw var8;
         }

         return this.UnqualifiedOwners;
      }

      public Set UnqualifiedOwners() {
         return (this.bitmap$0 & 70368744177664L) == 0L ? this.UnqualifiedOwners$lzycompute() : this.UnqualifiedOwners;
      }

      private Symbols.ModuleSymbol PredefModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 140737488355328L) == 0L) {
               this.PredefModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(Predef.class));
               this.bitmap$0 |= 140737488355328L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.PredefModule;
      }

      public Symbols.ModuleSymbol PredefModule() {
         return (this.bitmap$0 & 140737488355328L) == 0L ? this.PredefModule$lzycompute() : this.PredefModule;
      }

      public Symbols.TermSymbol Predef_$qmark$qmark$qmark() {
         return this.getMemberMethod(this.PredefModule(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().$qmark$qmark$qmark());
      }

      public Symbols.TermSymbol Predef_locally() {
         return this.getMemberMethod(this.PredefModule(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().locally());
      }

      public boolean isPredefMemberNamed(final Symbols.Symbol sym, final Names.Name name) {
         Names.Name var10000 = sym.name();
         if (var10000 == null) {
            if (name != null) {
               return false;
            }
         } else if (!var10000.equals(name)) {
            return false;
         }

         Symbols.Symbol var4 = sym.owner();
         Symbols.Symbol var3 = this.PredefModule().moduleClass();
         if (var4 == null) {
            if (var3 == null) {
               return true;
            }
         } else if (var4.equals(var3)) {
            return true;
         }

         return false;
      }

      public Symbols.TermSymbol wrapVarargsArrayMethod(final Types.Type tp) {
         return this.getMemberMethod(this.ScalaRunTimeModule(), this.wrapVarargsArrayMethodName(tp));
      }

      private Symbols.ModuleSymbol SpecializableModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 281474976710656L) == 0L) {
               this.SpecializableModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(Specializable.class));
               this.bitmap$0 |= 281474976710656L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SpecializableModule;
      }

      public Symbols.ModuleSymbol SpecializableModule() {
         return (this.bitmap$0 & 281474976710656L) == 0L ? this.SpecializableModule$lzycompute() : this.SpecializableModule;
      }

      private Symbols.ModuleSymbol ScalaRunTimeModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 562949953421312L) == 0L) {
               this.ScalaRunTimeModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(ScalaRunTime.class));
               this.bitmap$0 |= 562949953421312L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaRunTimeModule;
      }

      public Symbols.ModuleSymbol ScalaRunTimeModule() {
         return (this.bitmap$0 & 562949953421312L) == 0L ? this.ScalaRunTimeModule$lzycompute() : this.ScalaRunTimeModule;
      }

      private Symbols.ModuleSymbol SymbolModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 1125899906842624L) == 0L) {
               this.SymbolModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(Symbol.class));
               this.bitmap$0 |= 1125899906842624L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SymbolModule;
      }

      public Symbols.ModuleSymbol SymbolModule() {
         return (this.bitmap$0 & 1125899906842624L) == 0L ? this.SymbolModule$lzycompute() : this.SymbolModule;
      }

      public Symbols.TermSymbol Symbol_apply() {
         return this.getMemberMethod(this.SymbolModule(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply());
      }

      private Symbols.ClassSymbol ScalaNumberClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 2251799813685248L) == 0L) {
               this.ScalaNumberClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(ScalaNumber.class));
               this.bitmap$0 |= 2251799813685248L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaNumberClass;
      }

      public Symbols.ClassSymbol ScalaNumberClass() {
         return (this.bitmap$0 & 2251799813685248L) == 0L ? this.ScalaNumberClass$lzycompute() : this.ScalaNumberClass;
      }

      private Symbols.ClassSymbol DelayedInitClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 4503599627370496L) == 0L) {
               this.DelayedInitClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(DelayedInit.class));
               this.bitmap$0 |= 4503599627370496L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.DelayedInitClass;
      }

      public Symbols.ClassSymbol DelayedInitClass() {
         return (this.bitmap$0 & 4503599627370496L) == 0L ? this.DelayedInitClass$lzycompute() : this.DelayedInitClass;
      }

      public Symbols.TermSymbol delayedInitMethod() {
         return this.getMemberMethod(this.DelayedInitClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().delayedInit());
      }

      private Symbols.ClassSymbol TypeConstraintClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 9007199254740992L) == 0L) {
               this.TypeConstraintClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(TypeConstraint.class));
               this.bitmap$0 |= 9007199254740992L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.TypeConstraintClass;
      }

      public Symbols.ClassSymbol TypeConstraintClass() {
         return (this.bitmap$0 & 9007199254740992L) == 0L ? this.TypeConstraintClass$lzycompute() : this.TypeConstraintClass;
      }

      private Symbols.ClassSymbol SingletonClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 18014398509481984L) == 0L) {
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.ScalaPackageClass();
               Names.TypeName var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Singleton();
               Types.Type var1 = this.AnyTpe();
               List $colon$colon_this = .MODULE$;
               scala.collection.immutable..colon.colon var10004 = new scala.collection.immutable..colon.colon(var1, $colon$colon_this);
               $colon$colon_this = null;
               this.SingletonClass = (Symbols.ClassSymbol)var10001.scala$reflect$internal$Definitions$$enterNewClass(var10002, var10003, var10004, 33554472L).markAllCompleted();
               this.bitmap$0 |= 18014398509481984L;
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.SingletonClass;
      }

      public Symbols.ClassSymbol SingletonClass() {
         return (this.bitmap$0 & 18014398509481984L) == 0L ? this.SingletonClass$lzycompute() : this.SingletonClass;
      }

      private List ListOfSingletonClassTpe$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 36028797018963968L) == 0L) {
               Symbols.ClassSymbol var10001 = this.SingletonClass();
               if (var10001 == null) {
                  throw null;
               }

               Symbols.Symbol tpe_this = var10001;
               Types.Type var8 = tpe_this.tpe_$times();
               tpe_this = null;
               Types.Type var1 = var8;
               List $colon$colon_this = .MODULE$;
               scala.collection.immutable..colon.colon var9 = new scala.collection.immutable..colon.colon(var1, $colon$colon_this);
               $colon$colon_this = null;
               this.ListOfSingletonClassTpe = var9;
               this.bitmap$0 |= 36028797018963968L;
            }
         } catch (Throwable var5) {
            throw var5;
         }

         return this.ListOfSingletonClassTpe;
      }

      public List ListOfSingletonClassTpe() {
         return (this.bitmap$0 & 36028797018963968L) == 0L ? this.ListOfSingletonClassTpe$lzycompute() : this.ListOfSingletonClassTpe;
      }

      private Symbols.ClassSymbol SerializableClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 72057594037927936L) == 0L) {
               this.SerializableClass = (Symbols.ClassSymbol)((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Serializable.class)).modifyInfo((tpe) -> this.fixupAsAnyTrait(tpe));
               this.bitmap$0 |= 72057594037927936L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SerializableClass;
      }

      public Symbols.ClassSymbol SerializableClass() {
         return (this.bitmap$0 & 72057594037927936L) == 0L ? this.SerializableClass$lzycompute() : this.SerializableClass;
      }

      private Symbols.ClassSymbol ComparableClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 144115188075855872L) == 0L) {
               this.ComparableClass = (Symbols.ClassSymbol)((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Comparable.class)).modifyInfo((tpe) -> this.fixupAsAnyTrait(tpe));
               this.bitmap$0 |= 144115188075855872L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ComparableClass;
      }

      public Symbols.ClassSymbol ComparableClass() {
         return (this.bitmap$0 & 144115188075855872L) == 0L ? this.ComparableClass$lzycompute() : this.ComparableClass;
      }

      private Symbols.ClassSymbol JavaCloneableClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 288230376151711744L) == 0L) {
               this.JavaCloneableClass = (Symbols.ClassSymbol)((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Cloneable.class)).modifyInfo((tpe) -> this.fixupAsAnyTrait(tpe));
               this.bitmap$0 |= 288230376151711744L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaCloneableClass;
      }

      public Symbols.ClassSymbol JavaCloneableClass() {
         return (this.bitmap$0 & 288230376151711744L) == 0L ? this.JavaCloneableClass$lzycompute() : this.JavaCloneableClass;
      }

      private Symbols.ClassSymbol JavaNumberClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 576460752303423488L) == 0L) {
               this.JavaNumberClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Number.class));
               this.bitmap$0 |= 576460752303423488L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaNumberClass;
      }

      public Symbols.ClassSymbol JavaNumberClass() {
         return (this.bitmap$0 & 576460752303423488L) == 0L ? this.JavaNumberClass$lzycompute() : this.JavaNumberClass;
      }

      private Symbols.ClassSymbol JavaEnumClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 1152921504606846976L) == 0L) {
               this.JavaEnumClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Enum.class));
               this.bitmap$0 |= 1152921504606846976L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaEnumClass;
      }

      public Symbols.ClassSymbol JavaEnumClass() {
         return (this.bitmap$0 & 1152921504606846976L) == 0L ? this.JavaEnumClass$lzycompute() : this.JavaEnumClass;
      }

      private Symbols.ClassSymbol JavaUtilMap$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 2305843009213693952L) == 0L) {
               this.JavaUtilMap = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(java.util.Map.class));
               this.bitmap$0 |= 2305843009213693952L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaUtilMap;
      }

      public Symbols.ClassSymbol JavaUtilMap() {
         return (this.bitmap$0 & 2305843009213693952L) == 0L ? this.JavaUtilMap$lzycompute() : this.JavaUtilMap;
      }

      private Symbols.ClassSymbol JavaUtilHashMap$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & 4611686018427387904L) == 0L) {
               this.JavaUtilHashMap = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(HashMap.class));
               this.bitmap$0 |= 4611686018427387904L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaUtilHashMap;
      }

      public Symbols.ClassSymbol JavaUtilHashMap() {
         return (this.bitmap$0 & 4611686018427387904L) == 0L ? this.JavaUtilHashMap$lzycompute() : this.JavaUtilHashMap;
      }

      private Symbols.Symbol JavaRecordClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$0 & Long.MIN_VALUE) == 0L) {
               this.JavaRecordClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("java.lang.Record");
               this.bitmap$0 |= Long.MIN_VALUE;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaRecordClass;
      }

      public Symbols.Symbol JavaRecordClass() {
         return (this.bitmap$0 & Long.MIN_VALUE) == 0L ? this.JavaRecordClass$lzycompute() : this.JavaRecordClass;
      }

      private Symbols.ClassSymbol ByNameParamClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 1L) == 0L) {
               Names.TypeName var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().BYNAME_PARAM_CLASS_NAME();
               long specialPolyClass_flags = 65536L;
               Names.TypeName specialPolyClass_name = var10001;
               SymbolTable var13 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.ScalaPackageClass();
               Nil var10004 = .MODULE$;
               if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer() == null) {
                  throw null;
               }

               Symbols.ClassSymbol specialPolyClass_clazz = var13.scala$reflect$internal$Definitions$$enterNewClass(var10002, specialPolyClass_name, var10004, 0L);
               Symbols.TypeSymbol specialPolyClass_tparam = specialPolyClass_clazz.newSyntheticTypeParam("T0", specialPolyClass_flags);
               List specialPolyClass_parents = new scala.collection.immutable..colon.colon(this.AnyRefTpe(), new scala.collection.immutable..colon.colon(this.AnyTpe(), .MODULE$));
               Symbols.ClassSymbol var14 = (Symbols.ClassSymbol)specialPolyClass_clazz.setInfo(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().GenPolyType().apply(new scala.collection.immutable..colon.colon(specialPolyClass_tparam, .MODULE$), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new ClassInfoType(specialPolyClass_parents, this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().newScope(), specialPolyClass_clazz))).markAllCompleted();
               specialPolyClass_name = null;
               Object var10 = null;
               specialPolyClass_tparam = null;
               specialPolyClass_parents = null;
               this.ByNameParamClass = var14;
               this.bitmap$1 |= 1L;
            }
         } catch (Throwable var8) {
            throw var8;
         }

         return this.ByNameParamClass;
      }

      public Symbols.ClassSymbol ByNameParamClass() {
         return (this.bitmap$1 & 1L) == 0L ? this.ByNameParamClass$lzycompute() : this.ByNameParamClass;
      }

      private Symbols.ClassSymbol JavaRepeatedParamClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 2L) == 0L) {
               Names.TypeName var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().JAVA_REPEATED_PARAM_CLASS_NAME();
               long specialPolyClass_flags = 65536L;
               Names.TypeName specialPolyClass_name = var10001;
               SymbolTable var13 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.ScalaPackageClass();
               Nil var10004 = .MODULE$;
               if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer() == null) {
                  throw null;
               }

               Symbols.ClassSymbol specialPolyClass_clazz = var13.scala$reflect$internal$Definitions$$enterNewClass(var10002, specialPolyClass_name, var10004, 0L);
               Symbols.TypeSymbol specialPolyClass_tparam = specialPolyClass_clazz.newSyntheticTypeParam("T0", specialPolyClass_flags);
               List specialPolyClass_parents = new scala.collection.immutable..colon.colon(this.AnyRefTpe(), new scala.collection.immutable..colon.colon($anonfun$JavaRepeatedParamClass$1(this, specialPolyClass_tparam), .MODULE$));
               Symbols.ClassSymbol var14 = (Symbols.ClassSymbol)specialPolyClass_clazz.setInfo(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().GenPolyType().apply(new scala.collection.immutable..colon.colon(specialPolyClass_tparam, .MODULE$), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new ClassInfoType(specialPolyClass_parents, this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().newScope(), specialPolyClass_clazz))).markAllCompleted();
               specialPolyClass_name = null;
               Object var10 = null;
               specialPolyClass_tparam = null;
               specialPolyClass_parents = null;
               this.JavaRepeatedParamClass = var14;
               this.bitmap$1 |= 2L;
            }
         } catch (Throwable var8) {
            throw var8;
         }

         return this.JavaRepeatedParamClass;
      }

      public Symbols.ClassSymbol JavaRepeatedParamClass() {
         return (this.bitmap$1 & 2L) == 0L ? this.JavaRepeatedParamClass$lzycompute() : this.JavaRepeatedParamClass;
      }

      private Symbols.ClassSymbol RepeatedParamClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 4L) == 0L) {
               Names.TypeName var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().REPEATED_PARAM_CLASS_NAME();
               long specialPolyClass_flags = 65536L;
               Names.TypeName specialPolyClass_name = var10001;
               SymbolTable var13 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.ScalaPackageClass();
               Nil var10004 = .MODULE$;
               if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer() == null) {
                  throw null;
               }

               Symbols.ClassSymbol specialPolyClass_clazz = var13.scala$reflect$internal$Definitions$$enterNewClass(var10002, specialPolyClass_name, var10004, 0L);
               Symbols.TypeSymbol specialPolyClass_tparam = specialPolyClass_clazz.newSyntheticTypeParam("T0", specialPolyClass_flags);
               List specialPolyClass_parents = new scala.collection.immutable..colon.colon(this.AnyRefTpe(), new scala.collection.immutable..colon.colon($anonfun$RepeatedParamClass$1(this, specialPolyClass_tparam), .MODULE$));
               Symbols.ClassSymbol var14 = (Symbols.ClassSymbol)specialPolyClass_clazz.setInfo(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().GenPolyType().apply(new scala.collection.immutable..colon.colon(specialPolyClass_tparam, .MODULE$), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new ClassInfoType(specialPolyClass_parents, this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().newScope(), specialPolyClass_clazz))).markAllCompleted();
               specialPolyClass_name = null;
               Object var10 = null;
               specialPolyClass_tparam = null;
               specialPolyClass_parents = null;
               this.RepeatedParamClass = var14;
               this.bitmap$1 |= 4L;
            }
         } catch (Throwable var8) {
            throw var8;
         }

         return this.RepeatedParamClass;
      }

      public Symbols.ClassSymbol RepeatedParamClass() {
         return (this.bitmap$1 & 4L) == 0L ? this.RepeatedParamClass$lzycompute() : this.RepeatedParamClass;
      }

      public boolean isByNameParamType(final Types.Type tp) {
         Symbols.Symbol var10000 = tp.typeSymbol();
         Symbols.ClassSymbol var2 = this.ByNameParamClass();
         if (var10000 == null) {
            if (var2 == null) {
               return true;
            }
         } else if (var10000.equals(var2)) {
            return true;
         }

         return false;
      }

      public boolean isScalaRepeatedParamType(final Types.Type tp) {
         Symbols.Symbol var10000 = tp.typeSymbol();
         Symbols.ClassSymbol var2 = this.RepeatedParamClass();
         if (var10000 == null) {
            if (var2 == null) {
               return true;
            }
         } else if (var10000.equals(var2)) {
            return true;
         }

         return false;
      }

      public boolean isJavaRepeatedParamType(final Types.Type tp) {
         Symbols.Symbol var10000 = tp.typeSymbol();
         Symbols.ClassSymbol var2 = this.JavaRepeatedParamClass();
         if (var10000 == null) {
            if (var2 == null) {
               return true;
            }
         } else if (var10000.equals(var2)) {
            return true;
         }

         return false;
      }

      public boolean isRepeatedParamType(final Types.Type tp) {
         return this.isScalaRepeatedParamType(tp) || this.isJavaRepeatedParamType(tp);
      }

      public boolean isRepeated(final Symbols.Symbol param) {
         return this.isRepeatedParamType(param.tpe_$times());
      }

      public boolean isByName(final Symbols.Symbol param) {
         return this.isByNameParamType(param.tpe_$times());
      }

      public boolean isCastSymbol(final Symbols.Symbol sym) {
         Symbols.MethodSymbol var2 = this.Any_asInstanceOf();
         if (sym == null) {
            if (var2 == null) {
               return true;
            }
         } else if (sym.equals(var2)) {
            return true;
         }

         Symbols.MethodSymbol var3 = this.Object_asInstanceOf();
         if (sym == null) {
            if (var3 == null) {
               return true;
            }
         } else if (sym.equals(var3)) {
            return true;
         }

         return false;
      }

      public boolean isTypeTestSymbol(final Symbols.Symbol sym) {
         Symbols.MethodSymbol var2 = this.Any_isInstanceOf();
         if (sym == null) {
            if (var2 == null) {
               return true;
            }
         } else if (sym.equals(var2)) {
            return true;
         }

         Symbols.MethodSymbol var3 = this.Object_isInstanceOf();
         if (sym == null) {
            if (var3 == null) {
               return true;
            }
         } else if (sym.equals(var3)) {
            return true;
         }

         return false;
      }

      public boolean isJavaVarArgsMethod(final Symbols.Symbol m) {
         if (m.isMethod()) {
            Types.Type var2 = m.rawInfo();
            if (var2 instanceof Types.LazyType ? ((Types.LazyType)var2).isJavaVarargsMethod() : this.isJavaVarArgs(m.info().params())) {
               return true;
            }
         }

         return false;
      }

      public boolean isJavaVarArgs(final scala.collection.Seq params) {
         if (!params.isEmpty()) {
            Symbols.Symbol var10001 = (Symbols.Symbol)params.last();
            if (var10001 == null) {
               throw null;
            }

            if (this.isJavaRepeatedParamType(var10001.tpe_$times())) {
               return true;
            }
         }

         return false;
      }

      public boolean isScalaVarArgs(final scala.collection.Seq params) {
         if (!params.isEmpty()) {
            Symbols.Symbol var10001 = (Symbols.Symbol)params.last();
            if (var10001 == null) {
               throw null;
            }

            if (this.isScalaRepeatedParamType(var10001.tpe_$times())) {
               return true;
            }
         }

         return false;
      }

      public boolean isVarArgsList(final scala.collection.Seq params) {
         if (!params.isEmpty()) {
            Symbols.Symbol var10001 = (Symbols.Symbol)params.last();
            if (var10001 == null) {
               throw null;
            }

            if (this.isRepeatedParamType(var10001.tpe_$times())) {
               return true;
            }
         }

         return false;
      }

      public boolean isVarArgTypes(final scala.collection.Seq formals) {
         return !formals.isEmpty() && this.isRepeatedParamType((Types.Type)formals.last());
      }

      public Types.Type firstParamType(final Types.Type tpe) {
         List var2 = tpe.paramTypes();
         return (Types.Type)(var2 instanceof scala.collection.immutable..colon.colon ? (Types.Type)((scala.collection.immutable..colon.colon)var2).head() : this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoType());
      }

      public boolean isImplicitParamss(final List paramss) {
         if (paramss instanceof scala.collection.immutable..colon.colon) {
            List var2 = (List)((scala.collection.immutable..colon.colon)paramss).head();
            if (var2 instanceof scala.collection.immutable..colon.colon) {
               return ((Symbols.Symbol)((scala.collection.immutable..colon.colon)var2).head()).isImplicit();
            }
         }

         return false;
      }

      public final boolean hasRepeatedParam(final Types.Type tp) {
         while(true) {
            if (tp instanceof Types.MethodType) {
               Types.MethodType var2 = (Types.MethodType)tp;
               List formals = var2.params();
               Types.Type restpe = var2.resultType();
               if (this.isScalaVarArgs(formals)) {
                  return true;
               }

               tp = restpe;
            } else {
               if (!(tp instanceof Types.PolyType)) {
                  return false;
               }

               tp = ((Types.PolyType)tp).resultType();
            }
         }
      }

      public Types.Type dropByName(final Types.Type tp) {
         Types.Type var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().elementExtract(this.ByNameParamClass(), tp);
         if (var10000 == null) {
            throw null;
         } else {
            Types.Type orElse_this = var10000;
            return orElse_this != orElse_this.scala$reflect$internal$Types$Type$$$outer().NoType() ? orElse_this : tp;
         }
      }

      public Types.Type dropRepeated(final Types.Type tp) {
         if (this.isJavaRepeatedParamType(tp)) {
            Types.Type var4 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().elementExtract(this.JavaRepeatedParamClass(), tp);
            if (var4 == null) {
               throw null;
            } else {
               Types.Type orElse_this = var4;
               return orElse_this != orElse_this.scala$reflect$internal$Types$Type$$$outer().NoType() ? orElse_this : tp;
            }
         } else if (this.isScalaRepeatedParamType(tp)) {
            Types.Type var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().elementExtract(this.RepeatedParamClass(), tp);
            if (var10000 == null) {
               throw null;
            } else {
               Types.Type orElse_this = var10000;
               return orElse_this != orElse_this.scala$reflect$internal$Types$Type$$$outer().NoType() ? orElse_this : tp;
            }
         } else {
            return tp;
         }
      }

      public Types.Type repeatedToSingle(final Types.Type tp) {
         Types.Type var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().elementExtract(this.RepeatedParamClass(), tp);
         if (var10000 == null) {
            throw null;
         } else {
            Types.Type orElse_this = var10000;
            var10000 = orElse_this != orElse_this.scala$reflect$internal$Types$Type$$$outer().NoType() ? orElse_this : $anonfun$repeatedToSingle$1(this, tp);
            orElse_this = null;
            if (var10000 == null) {
               throw null;
            } else {
               Types.Type orElse_this = var10000;
               return orElse_this != orElse_this.scala$reflect$internal$Types$Type$$$outer().NoType() ? orElse_this : tp;
            }
         }
      }

      public Types.Type repeatedToSeq(final Types.Type tp) {
         Types.Type var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().elementTransform(this.RepeatedParamClass(), tp, (arg) -> this.seqType(arg));
         if (var10000 == null) {
            throw null;
         } else {
            Types.Type orElse_this = var10000;
            return orElse_this != orElse_this.scala$reflect$internal$Types$Type$$$outer().NoType() ? orElse_this : tp;
         }
      }

      public Types.Type seqToRepeated(final Types.Type tp) {
         Types.Type var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().elementTransform(this.SeqClass(), tp, (arg) -> this.scalaRepeatedType(arg));
         if (var10000 == null) {
            throw null;
         } else {
            Types.Type orElse_this = var10000;
            return orElse_this != orElse_this.scala$reflect$internal$Types$Type$$$outer().NoType() ? orElse_this : tp;
         }
      }

      public boolean isReferenceArray(final Types.Type tp) {
         return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().elementTest(this.ArrayClass(), tp, (elemtp) -> BoxesRunTime.boxToBoolean($anonfun$isReferenceArray$1(this, elemtp)));
      }

      public boolean isArrayOfSymbol(final Types.Type tp, final Symbols.Symbol elem) {
         return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().elementTest(this.ArrayClass(), tp, (x$7) -> BoxesRunTime.boxToBoolean($anonfun$isArrayOfSymbol$1(elem, x$7)));
      }

      public Types.Type elementType(final Symbols.Symbol container, final Types.Type tp) {
         return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().elementExtract(container, tp);
      }

      private Symbols.ClassSymbol SubTypeClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 8L) == 0L) {
               this.SubTypeClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(scala..less.colon.less.class));
               this.bitmap$1 |= 8L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SubTypeClass;
      }

      public Symbols.ClassSymbol SubTypeClass() {
         return (this.bitmap$1 & 8L) == 0L ? this.SubTypeClass$lzycompute() : this.SubTypeClass;
      }

      private Symbols.ClassSymbol SameTypeClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 16L) == 0L) {
               this.SameTypeClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(scala..eq.colon.eq.class));
               this.bitmap$1 |= 16L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SameTypeClass;
      }

      public Symbols.ClassSymbol SameTypeClass() {
         return (this.bitmap$1 & 16L) == 0L ? this.SameTypeClass$lzycompute() : this.SameTypeClass;
      }

      private Symbols.ClassSymbol DummyImplicitClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 32L) == 0L) {
               this.DummyImplicitClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(DummyImplicit.class));
               this.bitmap$1 |= 32L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.DummyImplicitClass;
      }

      public Symbols.ClassSymbol DummyImplicitClass() {
         return (this.bitmap$1 & 32L) == 0L ? this.DummyImplicitClass$lzycompute() : this.DummyImplicitClass;
      }

      private Symbols.ClassSymbol ConsClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 64L) == 0L) {
               this.ConsClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(scala.collection.immutable..colon.colon.class));
               this.bitmap$1 |= 64L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ConsClass;
      }

      public Symbols.ClassSymbol ConsClass() {
         return (this.bitmap$1 & 64L) == 0L ? this.ConsClass$lzycompute() : this.ConsClass;
      }

      private Symbols.ClassSymbol IteratorClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 128L) == 0L) {
               this.IteratorClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Iterator.class));
               this.bitmap$1 |= 128L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.IteratorClass;
      }

      public Symbols.ClassSymbol IteratorClass() {
         return (this.bitmap$1 & 128L) == 0L ? this.IteratorClass$lzycompute() : this.IteratorClass;
      }

      private Symbols.ClassSymbol IterableClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 256L) == 0L) {
               this.IterableClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Iterable.class));
               this.bitmap$1 |= 256L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.IterableClass;
      }

      public Symbols.ClassSymbol IterableClass() {
         return (this.bitmap$1 & 256L) == 0L ? this.IterableClass$lzycompute() : this.IterableClass;
      }

      private Symbols.ClassSymbol ListClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 512L) == 0L) {
               this.ListClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(List.class));
               this.bitmap$1 |= 512L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ListClass;
      }

      public Symbols.ClassSymbol ListClass() {
         return (this.bitmap$1 & 512L) == 0L ? this.ListClass$lzycompute() : this.ListClass;
      }

      public Symbols.TermSymbol List_cons() {
         return this.getMemberMethod(this.ListClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().CONS());
      }

      private Symbols.ClassSymbol SeqClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 1024L) == 0L) {
               this.SeqClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Seq.class));
               this.bitmap$1 |= 1024L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SeqClass;
      }

      public Symbols.ClassSymbol SeqClass() {
         return (this.bitmap$1 & 1024L) == 0L ? this.SeqClass$lzycompute() : this.SeqClass;
      }

      private Symbols.ModuleSymbol SeqFactoryClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 2048L) == 0L) {
               this.SeqFactoryClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(SeqFactory.class));
               this.bitmap$1 |= 2048L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SeqFactoryClass;
      }

      public Symbols.ModuleSymbol SeqFactoryClass() {
         return (this.bitmap$1 & 2048L) == 0L ? this.SeqFactoryClass$lzycompute() : this.SeqFactoryClass;
      }

      private Symbols.TypeSymbol UnapplySeqWrapperClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 4096L) == 0L) {
               this.UnapplySeqWrapperClass = this.getTypeMember(this.SeqFactoryClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().UnapplySeqWrapper());
               this.bitmap$1 |= 4096L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.UnapplySeqWrapperClass;
      }

      public Symbols.TypeSymbol UnapplySeqWrapperClass() {
         return (this.bitmap$1 & 4096L) == 0L ? this.UnapplySeqWrapperClass$lzycompute() : this.UnapplySeqWrapperClass;
      }

      private Symbols.ClassSymbol JavaStringBuilderClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 8192L) == 0L) {
               this.JavaStringBuilderClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(StringBuilder.class));
               this.bitmap$1 |= 8192L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaStringBuilderClass;
      }

      public Symbols.ClassSymbol JavaStringBuilderClass() {
         return (this.bitmap$1 & 8192L) == 0L ? this.JavaStringBuilderClass$lzycompute() : this.JavaStringBuilderClass;
      }

      private Symbols.ClassSymbol JavaStringBufferClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 16384L) == 0L) {
               this.JavaStringBufferClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(StringBuffer.class));
               this.bitmap$1 |= 16384L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaStringBufferClass;
      }

      public Symbols.ClassSymbol JavaStringBufferClass() {
         return (this.bitmap$1 & 16384L) == 0L ? this.JavaStringBufferClass$lzycompute() : this.JavaStringBufferClass;
      }

      private Symbols.ClassSymbol JavaCharSequenceClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 32768L) == 0L) {
               this.JavaCharSequenceClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(CharSequence.class));
               this.bitmap$1 |= 32768L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaCharSequenceClass;
      }

      public Symbols.ClassSymbol JavaCharSequenceClass() {
         return (this.bitmap$1 & 32768L) == 0L ? this.JavaCharSequenceClass$lzycompute() : this.JavaCharSequenceClass;
      }

      /** @deprecated */
      public Symbols.ClassSymbol TraversableClass() {
         return this.IterableClass();
      }

      private Symbols.ModuleSymbol ListModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 65536L) == 0L) {
               this.ListModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(List.class));
               this.bitmap$1 |= 65536L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ListModule;
      }

      public Symbols.ModuleSymbol ListModule() {
         return (this.bitmap$1 & 65536L) == 0L ? this.ListModule$lzycompute() : this.ListModule;
      }

      public Symbols.TermSymbol List_apply() {
         return this.getMemberMethod(this.ListModule(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply());
      }

      private Symbols.TermSymbol ListModuleAlias$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 131072L) == 0L) {
               this.ListModuleAlias = this.getMemberValue(this.ScalaPackageClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().List());
               this.bitmap$1 |= 131072L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ListModuleAlias;
      }

      public Symbols.TermSymbol ListModuleAlias() {
         return (this.bitmap$1 & 131072L) == 0L ? this.ListModuleAlias$lzycompute() : this.ListModuleAlias;
      }

      private Symbols.ModuleSymbol NilModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 262144L) == 0L) {
               this.NilModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(Nil.class));
               this.bitmap$1 |= 262144L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.NilModule;
      }

      public Symbols.ModuleSymbol NilModule() {
         return (this.bitmap$1 & 262144L) == 0L ? this.NilModule$lzycompute() : this.NilModule;
      }

      private Symbols.TermSymbol NilModuleAlias$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 524288L) == 0L) {
               this.NilModuleAlias = this.getMemberValue(this.ScalaPackageClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().Nil());
               this.bitmap$1 |= 524288L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.NilModuleAlias;
      }

      public Symbols.TermSymbol NilModuleAlias() {
         return (this.bitmap$1 & 524288L) == 0L ? this.NilModuleAlias$lzycompute() : this.NilModuleAlias;
      }

      private Symbols.ModuleSymbol SeqModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 1048576L) == 0L) {
               this.SeqModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(Seq.class));
               this.bitmap$1 |= 1048576L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SeqModule;
      }

      public Symbols.ModuleSymbol SeqModule() {
         return (this.bitmap$1 & 1048576L) == 0L ? this.SeqModule$lzycompute() : this.SeqModule;
      }

      private Symbols.TermSymbol SeqModuleAlias$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 2097152L) == 0L) {
               this.SeqModuleAlias = this.getMemberValue(this.ScalaPackageClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().Seq());
               this.bitmap$1 |= 2097152L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SeqModuleAlias;
      }

      public Symbols.TermSymbol SeqModuleAlias() {
         return (this.bitmap$1 & 2097152L) == 0L ? this.SeqModuleAlias$lzycompute() : this.SeqModuleAlias;
      }

      private Symbols.ModuleSymbol Collection_SeqModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 4194304L) == 0L) {
               this.Collection_SeqModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(scala.collection.Seq.class));
               this.bitmap$1 |= 4194304L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Collection_SeqModule;
      }

      public Symbols.ModuleSymbol Collection_SeqModule() {
         return (this.bitmap$1 & 4194304L) == 0L ? this.Collection_SeqModule$lzycompute() : this.Collection_SeqModule;
      }

      private Symbols.ModuleSymbol ArrayModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 8388608L) == 0L) {
               this.ArrayModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(Array.class));
               this.bitmap$1 |= 8388608L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ArrayModule;
      }

      public Symbols.ModuleSymbol ArrayModule() {
         return (this.bitmap$1 & 8388608L) == 0L ? this.ArrayModule$lzycompute() : this.ArrayModule;
      }

      private Symbols.TermSymbol ArrayModule_overloadedApply$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 16777216L) == 0L) {
               this.ArrayModule_overloadedApply = this.getMemberMethod(this.ArrayModule(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply());
               this.bitmap$1 |= 16777216L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ArrayModule_overloadedApply;
      }

      public Symbols.TermSymbol ArrayModule_overloadedApply() {
         return (this.bitmap$1 & 16777216L) == 0L ? this.ArrayModule_overloadedApply$lzycompute() : this.ArrayModule_overloadedApply;
      }

      public Symbols.Symbol ArrayModule_genericApply() {
         return this.ArrayModule_overloadedApply().suchThat((x$8) -> BoxesRunTime.boxToBoolean($anonfun$ArrayModule_genericApply$1(this, x$8)));
      }

      public Symbols.Symbol ArrayModule_apply(final Types.Type tp) {
         return this.ArrayModule_overloadedApply().suchThat((x$9) -> BoxesRunTime.boxToBoolean($anonfun$ArrayModule_apply$1(this, tp, x$9)));
      }

      private Symbols.ClassSymbol ArrayClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 33554432L) == 0L) {
               this.ArrayClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getRequiredClass("scala.Array");
               this.bitmap$1 |= 33554432L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ArrayClass;
      }

      public Symbols.ClassSymbol ArrayClass() {
         return (this.bitmap$1 & 33554432L) == 0L ? this.ArrayClass$lzycompute() : this.ArrayClass;
      }

      private Symbols.TermSymbol Array_apply$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 67108864L) == 0L) {
               this.Array_apply = this.getMemberMethod(this.ArrayClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply());
               this.bitmap$1 |= 67108864L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Array_apply;
      }

      public Symbols.TermSymbol Array_apply() {
         return (this.bitmap$1 & 67108864L) == 0L ? this.Array_apply$lzycompute() : this.Array_apply;
      }

      private Symbols.TermSymbol Array_update$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 134217728L) == 0L) {
               this.Array_update = this.getMemberMethod(this.ArrayClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().update());
               this.bitmap$1 |= 134217728L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Array_update;
      }

      public Symbols.TermSymbol Array_update() {
         return (this.bitmap$1 & 134217728L) == 0L ? this.Array_update$lzycompute() : this.Array_update;
      }

      private Symbols.TermSymbol Array_length$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 268435456L) == 0L) {
               this.Array_length = this.getMemberMethod(this.ArrayClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().length());
               this.bitmap$1 |= 268435456L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Array_length;
      }

      public Symbols.TermSymbol Array_length() {
         return (this.bitmap$1 & 268435456L) == 0L ? this.Array_length$lzycompute() : this.Array_length;
      }

      private Symbols.TermSymbol Array_clone$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 536870912L) == 0L) {
               this.Array_clone = this.getMemberMethod(this.ArrayClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().clone_());
               this.bitmap$1 |= 536870912L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Array_clone;
      }

      public Symbols.TermSymbol Array_clone() {
         return (this.bitmap$1 & 536870912L) == 0L ? this.Array_clone$lzycompute() : this.Array_clone;
      }

      private Symbols.ClassSymbol SoftReferenceClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 1073741824L) == 0L) {
               this.SoftReferenceClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(SoftReference.class));
               this.bitmap$1 |= 1073741824L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SoftReferenceClass;
      }

      public Symbols.ClassSymbol SoftReferenceClass() {
         return (this.bitmap$1 & 1073741824L) == 0L ? this.SoftReferenceClass$lzycompute() : this.SoftReferenceClass;
      }

      private Symbols.ClassSymbol MethodClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 2147483648L) == 0L) {
               this.MethodClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassByName("java.lang.reflect.Method");
               this.bitmap$1 |= 2147483648L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.MethodClass;
      }

      public Symbols.ClassSymbol MethodClass() {
         return (this.bitmap$1 & 2147483648L) == 0L ? this.MethodClass$lzycompute() : this.MethodClass;
      }

      private Symbols.ClassSymbol EmptyMethodCacheClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 4294967296L) == 0L) {
               this.EmptyMethodCacheClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(EmptyMethodCache.class));
               this.bitmap$1 |= 4294967296L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.EmptyMethodCacheClass;
      }

      public Symbols.ClassSymbol EmptyMethodCacheClass() {
         return (this.bitmap$1 & 4294967296L) == 0L ? this.EmptyMethodCacheClass$lzycompute() : this.EmptyMethodCacheClass;
      }

      private Symbols.ClassSymbol MethodCacheClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 8589934592L) == 0L) {
               this.MethodCacheClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(MethodCache.class));
               this.bitmap$1 |= 8589934592L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.MethodCacheClass;
      }

      public Symbols.ClassSymbol MethodCacheClass() {
         return (this.bitmap$1 & 8589934592L) == 0L ? this.MethodCacheClass$lzycompute() : this.MethodCacheClass;
      }

      public Symbols.TermSymbol methodCache_find() {
         return this.getMemberMethod(this.MethodCacheClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().find_());
      }

      public Symbols.TermSymbol methodCache_add() {
         return this.getMemberMethod(this.MethodCacheClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().add_());
      }

      private Symbols.Symbol StructuralCallSite$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 17179869184L) == 0L) {
               this.StructuralCallSite = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.runtime.StructuralCallSite");
               this.bitmap$1 |= 17179869184L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.StructuralCallSite;
      }

      public Symbols.Symbol StructuralCallSite() {
         return (this.bitmap$1 & 17179869184L) == 0L ? this.StructuralCallSite$lzycompute() : this.StructuralCallSite;
      }

      public Symbols.TermSymbol StructuralCallSite_bootstrap() {
         return this.getMemberMethod(this.StructuralCallSite().linkedClassOfClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().sn().Bootstrap());
      }

      private Symbols.MethodSymbol StructuralCallSite_dummy$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 34359738368L) == 0L) {
               Symbols.MethodSymbol var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
               Names.TermName var10002 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply();
               Position var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol().newMethodSymbol$default$2();
               if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol() == null) {
                  throw null;
               }

               long newMethodSymbol_newFlags = 0L;
               Position newMethodSymbol_pos = var10003;
               Names.TermName newMethodSymbol_name = var10002;
               if (var10001 == null) {
                  throw null;
               }

               var10001 = ((Symbols.Symbol)var10001).createMethodSymbol(newMethodSymbol_name, newMethodSymbol_pos, 64L | newMethodSymbol_newFlags);
               newMethodSymbol_name = null;
               newMethodSymbol_pos = null;
               Types.NullaryMethodType var10 = new Types.NullaryMethodType;
               SymbolTable var10004 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.Symbol var10005 = this.StructuralCallSite();
               if (var10005 == null) {
                  throw null;
               }

               var10.<init>(var10005.tpe_$times());
               this.StructuralCallSite_dummy = (Symbols.MethodSymbol)var10001.setInfo(var10);
               this.bitmap$1 |= 34359738368L;
            }
         } catch (Throwable var6) {
            throw var6;
         }

         return this.StructuralCallSite_dummy;
      }

      public Symbols.MethodSymbol StructuralCallSite_dummy() {
         return (this.bitmap$1 & 34359738368L) == 0L ? this.StructuralCallSite_dummy$lzycompute() : this.StructuralCallSite_dummy;
      }

      public Symbols.Symbol StructuralCallSite_find() {
         return this.getMemberIfDefined(this.StructuralCallSite(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().find_());
      }

      public Symbols.Symbol StructuralCallSite_add() {
         return this.getMemberIfDefined(this.StructuralCallSite(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().add_());
      }

      public Symbols.Symbol StructuralCallSite_getParameterTypes() {
         return this.getMemberIfDefined(this.StructuralCallSite(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().parameterTypes());
      }

      private Symbols.Symbol SymbolLiteral$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 68719476736L) == 0L) {
               this.SymbolLiteral = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.runtime.SymbolLiteral");
               this.bitmap$1 |= 68719476736L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SymbolLiteral;
      }

      public Symbols.Symbol SymbolLiteral() {
         return (this.bitmap$1 & 68719476736L) == 0L ? this.SymbolLiteral$lzycompute() : this.SymbolLiteral;
      }

      public Symbols.Symbol SymbolLiteral_bootstrap() {
         return this.getMemberIfDefined(this.SymbolLiteral().linkedClassOfClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().sn().Bootstrap());
      }

      public Symbols.MethodSymbol SymbolLiteral_dummy() {
         Symbols.MethodSymbol var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
         Names.TermName var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply();
         Position var10002 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol().newMethodSymbol$default$2();
         if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol() == null) {
            throw null;
         } else {
            long newMethodSymbol_newFlags = 0L;
            Position newMethodSymbol_pos = var10002;
            Names.TermName newMethodSymbol_name = var10001;
            if (var10000 == null) {
               throw null;
            } else {
               var10000 = ((Symbols.Symbol)var10000).createMethodSymbol(newMethodSymbol_name, newMethodSymbol_pos, 64L | newMethodSymbol_newFlags);
               newMethodSymbol_name = null;
               newMethodSymbol_pos = null;
               Types.NullaryMethodType var8 = new Types.NullaryMethodType;
               SymbolTable var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.Symbol var10004 = this.SymbolModule().companionClass();
               if (var10004 == null) {
                  throw null;
               } else {
                  var8.<init>(var10004.tpe_$times());
                  return (Symbols.MethodSymbol)var10000.setInfo(var8);
               }
            }
         }
      }

      private Symbols.Symbol ScalaXmlTopScope$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 137438953472L) == 0L) {
               this.ScalaXmlTopScope = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getModuleIfDefined("scala.xml.TopScope");
               this.bitmap$1 |= 137438953472L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaXmlTopScope;
      }

      public Symbols.Symbol ScalaXmlTopScope() {
         return (this.bitmap$1 & 137438953472L) == 0L ? this.ScalaXmlTopScope$lzycompute() : this.ScalaXmlTopScope;
      }

      private Symbols.Symbol ScalaXmlPackage$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 274877906944L) == 0L) {
               this.ScalaXmlPackage = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getPackageIfDefined("scala.xml");
               this.bitmap$1 |= 274877906944L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaXmlPackage;
      }

      public Symbols.Symbol ScalaXmlPackage() {
         return (this.bitmap$1 & 274877906944L) == 0L ? this.ScalaXmlPackage$lzycompute() : this.ScalaXmlPackage;
      }

      private Symbols.ModuleSymbol ReflectPackage$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 549755813888L) == 0L) {
               this.ReflectPackage = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(package.class));
               this.bitmap$1 |= 549755813888L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ReflectPackage;
      }

      public Symbols.ModuleSymbol ReflectPackage() {
         return (this.bitmap$1 & 549755813888L) == 0L ? this.ReflectPackage$lzycompute() : this.ReflectPackage;
      }

      private Symbols.Symbol ReflectApiPackage$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 1099511627776L) == 0L) {
               this.ReflectApiPackage = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getPackageObjectIfDefined("scala.reflect.api");
               this.bitmap$1 |= 1099511627776L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ReflectApiPackage;
      }

      public Symbols.Symbol ReflectApiPackage() {
         return (this.bitmap$1 & 1099511627776L) == 0L ? this.ReflectApiPackage$lzycompute() : this.ReflectApiPackage;
      }

      private Symbols.Symbol ReflectRuntimePackage$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 2199023255552L) == 0L) {
               this.ReflectRuntimePackage = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getPackageObjectIfDefined("scala.reflect.runtime");
               this.bitmap$1 |= 2199023255552L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ReflectRuntimePackage;
      }

      public Symbols.Symbol ReflectRuntimePackage() {
         return (this.bitmap$1 & 2199023255552L) == 0L ? this.ReflectRuntimePackage$lzycompute() : this.ReflectRuntimePackage;
      }

      public Symbols.Symbol ReflectRuntimeUniverse() {
         Symbols.Symbol var10000 = this.ReflectRuntimePackage();
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol map_this = var10000;
            return (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$ReflectRuntimeUniverse$1(this, map_this));
         }
      }

      public Symbols.Symbol ReflectRuntimeCurrentMirror() {
         Symbols.Symbol var10000 = this.ReflectRuntimePackage();
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol map_this = var10000;
            return (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$ReflectRuntimeCurrentMirror$1(this, map_this));
         }
      }

      private Symbols.Symbol UniverseClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 4398046511104L) == 0L) {
               this.UniverseClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.api.Universe");
               this.bitmap$1 |= 4398046511104L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.UniverseClass;
      }

      public Symbols.Symbol UniverseClass() {
         return (this.bitmap$1 & 4398046511104L) == 0L ? this.UniverseClass$lzycompute() : this.UniverseClass;
      }

      public Symbols.TermSymbol UniverseInternal() {
         return this.getMemberValue(this.UniverseClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().internal());
      }

      private Symbols.ModuleSymbol PartialManifestModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 8796093022208L) == 0L) {
               this.PartialManifestModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(ClassManifestFactory.class));
               this.bitmap$1 |= 8796093022208L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.PartialManifestModule;
      }

      public Symbols.ModuleSymbol PartialManifestModule() {
         return (this.bitmap$1 & 8796093022208L) == 0L ? this.PartialManifestModule$lzycompute() : this.PartialManifestModule;
      }

      private Symbols.ClassSymbol FullManifestClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 17592186044416L) == 0L) {
               this.FullManifestClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Manifest.class));
               this.bitmap$1 |= 17592186044416L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.FullManifestClass;
      }

      public Symbols.ClassSymbol FullManifestClass() {
         return (this.bitmap$1 & 17592186044416L) == 0L ? this.FullManifestClass$lzycompute() : this.FullManifestClass;
      }

      private Symbols.ModuleSymbol FullManifestModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 35184372088832L) == 0L) {
               this.FullManifestModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(ManifestFactory.class));
               this.bitmap$1 |= 35184372088832L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.FullManifestModule;
      }

      public Symbols.ModuleSymbol FullManifestModule() {
         return (this.bitmap$1 & 35184372088832L) == 0L ? this.FullManifestModule$lzycompute() : this.FullManifestModule;
      }

      private Symbols.ClassSymbol OptManifestClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 70368744177664L) == 0L) {
               this.OptManifestClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(OptManifest.class));
               this.bitmap$1 |= 70368744177664L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.OptManifestClass;
      }

      public Symbols.ClassSymbol OptManifestClass() {
         return (this.bitmap$1 & 70368744177664L) == 0L ? this.OptManifestClass$lzycompute() : this.OptManifestClass;
      }

      private Symbols.ModuleSymbol NoManifest$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 140737488355328L) == 0L) {
               this.NoManifest = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(NoManifest.class));
               this.bitmap$1 |= 140737488355328L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.NoManifest;
      }

      public Symbols.ModuleSymbol NoManifest() {
         return (this.bitmap$1 & 140737488355328L) == 0L ? this.NoManifest$lzycompute() : this.NoManifest;
      }

      private Symbols.Symbol TreesClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 281474976710656L) == 0L) {
               this.TreesClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.api.Trees");
               this.bitmap$1 |= 281474976710656L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.TreesClass;
      }

      public Symbols.Symbol TreesClass() {
         return (this.bitmap$1 & 281474976710656L) == 0L ? this.TreesClass$lzycompute() : this.TreesClass;
      }

      private Symbols.Symbol ExprsClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 562949953421312L) == 0L) {
               this.ExprsClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.api.Exprs");
               this.bitmap$1 |= 562949953421312L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ExprsClass;
      }

      public Symbols.Symbol ExprsClass() {
         return (this.bitmap$1 & 562949953421312L) == 0L ? this.ExprsClass$lzycompute() : this.ExprsClass;
      }

      public Symbols.Symbol ExprClass() {
         Symbols.Symbol var10000 = this.ExprsClass();
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol map_this = var10000;
            return (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$ExprClass$1(this, map_this));
         }
      }

      public Symbols.Symbol ExprSplice() {
         Symbols.Symbol var10000 = this.ExprClass();
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol map_this = var10000;
            return (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$ExprSplice$1(this, map_this));
         }
      }

      public Symbols.Symbol ExprValue() {
         Symbols.Symbol var10000 = this.ExprClass();
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol map_this = var10000;
            return (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$ExprValue$1(this, map_this));
         }
      }

      private Symbols.ModuleSymbol ClassTagModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 1125899906842624L) == 0L) {
               this.ClassTagModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(ClassTag.class));
               this.bitmap$1 |= 1125899906842624L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ClassTagModule;
      }

      public Symbols.ModuleSymbol ClassTagModule() {
         return (this.bitmap$1 & 1125899906842624L) == 0L ? this.ClassTagModule$lzycompute() : this.ClassTagModule;
      }

      private Symbols.ClassSymbol ClassTagClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 2251799813685248L) == 0L) {
               this.ClassTagClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(ClassTag.class));
               this.bitmap$1 |= 2251799813685248L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ClassTagClass;
      }

      public Symbols.ClassSymbol ClassTagClass() {
         return (this.bitmap$1 & 2251799813685248L) == 0L ? this.ClassTagClass$lzycompute() : this.ClassTagClass;
      }

      private Symbols.Symbol TypeTagsClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 4503599627370496L) == 0L) {
               this.TypeTagsClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.api.TypeTags");
               this.bitmap$1 |= 4503599627370496L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.TypeTagsClass;
      }

      public Symbols.Symbol TypeTagsClass() {
         return (this.bitmap$1 & 4503599627370496L) == 0L ? this.TypeTagsClass$lzycompute() : this.TypeTagsClass;
      }

      private Symbols.Symbol ApiUniverseClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 9007199254740992L) == 0L) {
               this.ApiUniverseClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.api.Universe");
               this.bitmap$1 |= 9007199254740992L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ApiUniverseClass;
      }

      public Symbols.Symbol ApiUniverseClass() {
         return (this.bitmap$1 & 9007199254740992L) == 0L ? this.ApiUniverseClass$lzycompute() : this.ApiUniverseClass;
      }

      private Symbols.Symbol ApiQuasiquotesClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 18014398509481984L) == 0L) {
               this.ApiQuasiquotesClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.api.Quasiquotes");
               this.bitmap$1 |= 18014398509481984L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ApiQuasiquotesClass;
      }

      public Symbols.Symbol ApiQuasiquotesClass() {
         return (this.bitmap$1 & 18014398509481984L) == 0L ? this.ApiQuasiquotesClass$lzycompute() : this.ApiQuasiquotesClass;
      }

      private Symbols.Symbol JavaUniverseClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 36028797018963968L) == 0L) {
               this.JavaUniverseClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.api.JavaUniverse");
               this.bitmap$1 |= 36028797018963968L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaUniverseClass;
      }

      public Symbols.Symbol JavaUniverseClass() {
         return (this.bitmap$1 & 36028797018963968L) == 0L ? this.JavaUniverseClass$lzycompute() : this.JavaUniverseClass;
      }

      private Symbols.Symbol MirrorClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 72057594037927936L) == 0L) {
               this.MirrorClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.api.Mirror");
               this.bitmap$1 |= 72057594037927936L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.MirrorClass;
      }

      public Symbols.Symbol MirrorClass() {
         return (this.bitmap$1 & 72057594037927936L) == 0L ? this.MirrorClass$lzycompute() : this.MirrorClass;
      }

      private Symbols.Symbol TypeCreatorClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 144115188075855872L) == 0L) {
               this.TypeCreatorClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.api.TypeCreator");
               this.bitmap$1 |= 144115188075855872L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.TypeCreatorClass;
      }

      public Symbols.Symbol TypeCreatorClass() {
         return (this.bitmap$1 & 144115188075855872L) == 0L ? this.TypeCreatorClass$lzycompute() : this.TypeCreatorClass;
      }

      private Symbols.Symbol TreeCreatorClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 288230376151711744L) == 0L) {
               this.TreeCreatorClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.api.TreeCreator");
               this.bitmap$1 |= 288230376151711744L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.TreeCreatorClass;
      }

      public Symbols.Symbol TreeCreatorClass() {
         return (this.bitmap$1 & 288230376151711744L) == 0L ? this.TreeCreatorClass$lzycompute() : this.TreeCreatorClass;
      }

      private Symbols.Symbol BlackboxContextClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 576460752303423488L) == 0L) {
               this.BlackboxContextClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.macros.blackbox.Context");
               this.bitmap$1 |= 576460752303423488L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BlackboxContextClass;
      }

      public Symbols.Symbol BlackboxContextClass() {
         return (this.bitmap$1 & 576460752303423488L) == 0L ? this.BlackboxContextClass$lzycompute() : this.BlackboxContextClass;
      }

      private Symbols.Symbol WhiteboxContextClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 1152921504606846976L) == 0L) {
               this.WhiteboxContextClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.macros.whitebox.Context");
               this.bitmap$1 |= 1152921504606846976L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.WhiteboxContextClass;
      }

      public Symbols.Symbol WhiteboxContextClass() {
         return (this.bitmap$1 & 1152921504606846976L) == 0L ? this.WhiteboxContextClass$lzycompute() : this.WhiteboxContextClass;
      }

      public Symbols.Symbol MacroContextPrefix() {
         Symbols.Symbol var10000 = this.BlackboxContextClass();
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol map_this = var10000;
            return (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$MacroContextPrefix$1(this, map_this));
         }
      }

      public Symbols.Symbol MacroContextPrefixType() {
         Symbols.Symbol var10000 = this.BlackboxContextClass();
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol map_this = var10000;
            return (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$MacroContextPrefixType$1(this, map_this));
         }
      }

      public Symbols.Symbol MacroContextUniverse() {
         Symbols.Symbol var10000 = this.BlackboxContextClass();
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol map_this = var10000;
            return (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$MacroContextUniverse$1(this, map_this));
         }
      }

      public Symbols.Symbol MacroContextExprClass() {
         Symbols.Symbol var10000 = this.BlackboxContextClass();
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol map_this = var10000;
            return (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$MacroContextExprClass$1(this, map_this));
         }
      }

      public Symbols.Symbol MacroContextWeakTypeTagClass() {
         Symbols.Symbol var10000 = this.BlackboxContextClass();
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol map_this = var10000;
            return (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$MacroContextWeakTypeTagClass$1(this, map_this));
         }
      }

      public Symbols.Symbol MacroContextTreeType() {
         Symbols.Symbol var10000 = this.BlackboxContextClass();
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol map_this = var10000;
            return (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$MacroContextTreeType$1(this, map_this));
         }
      }

      private Symbols.ClassSymbol MacroImplAnnotation$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 2305843009213693952L) == 0L) {
               this.MacroImplAnnotation = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(macroImpl.class));
               this.bitmap$1 |= 2305843009213693952L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.MacroImplAnnotation;
      }

      public Symbols.ClassSymbol MacroImplAnnotation() {
         return (this.bitmap$1 & 2305843009213693952L) == 0L ? this.MacroImplAnnotation$lzycompute() : this.MacroImplAnnotation;
      }

      private Symbols.ClassSymbol MacroImplLocationAnnotation$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & 4611686018427387904L) == 0L) {
               Symbols.Symbol internalPkg = this.MacroImplAnnotation().owner().suchThat((x$10) -> BoxesRunTime.boxToBoolean($anonfun$MacroImplLocationAnnotation$1(x$10)));
               Names.TypeName var10002 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().macroImplLocation();
               NoPosition$ var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoPosition();
               if (internalPkg == null) {
                  throw null;
               }

               Symbols.ClassSymbol MacroImplLocation = internalPkg.newClassSymbol(var10002, var10003, 0L);
               MacroImplLocation.setPrivateWithin(this.ScalaPackage());
               Types.ClassInfoType var29 = new Types.ClassInfoType;
               SymbolTable var10004 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10005 = this.AnnotationClass();
               if (var10005 == null) {
                  throw null;
               }

               Symbols.Symbol tpe_this = var10005;
               Types.Type var32 = tpe_this.tpe_$times();
               tpe_this = null;
               Types.Type var3 = var32;
               List $colon$colon_this = .MODULE$;
               scala.collection.immutable..colon.colon var33 = new scala.collection.immutable..colon.colon(var3, $colon$colon_this);
               $colon$colon_this = null;
               var29.<init>(var33, this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().newScope(), MacroImplLocation);
               MacroImplLocation.setInfoAndEnter(var29);
               Names.TermName x$1 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().unpickledMacroImpl();
               Position x$3 = MacroImplLocation.newMethod$default$2();
               long newMethod_newFlags = 675282944L;
               ((Symbols.Symbol)MacroImplLocation).createMethodSymbol(x$1, x$3, 64L | newMethod_newFlags).setInfoAndEnter((Types.Type)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().internal().nullaryMethodType(this.AnyTpe())).markAllCompleted();
               Names.TermName x$4 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().unpickledMacroImpl();
               Position x$6 = MacroImplLocation.newValue$default$2();
               long newValue_newFlags = 537395204L;
               ((Symbols.Symbol)MacroImplLocation).newTermSymbol(x$4, x$6, newValue_newFlags).setInfoAndEnter(this.AnyTpe()).markAllCompleted();
               Symbols.MethodSymbol ctor = MacroImplLocation.newConstructor(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoPosition(), 0L);
               Names.TermName var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().unpickledMacroImpl();
               Position var30 = ctor.newValueParameter$default$2();
               long newValueParameter_newFlags = 0L;
               Position newValueParameter_pos = var30;
               Names.TermName newValueParameter_name = var10001;
               Symbols.TermSymbol var28 = ((Symbols.Symbol)ctor).newTermSymbol(newValueParameter_name, newValueParameter_pos, 8192L | newValueParameter_newFlags);
               newValueParameter_name = null;
               newValueParameter_pos = null;
               Symbols.TermSymbol param = (Symbols.TermSymbol)var28.setInfo(this.AnyTpe());
               var10004 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               List $colon$colon_this = .MODULE$;
               var33 = new scala.collection.immutable..colon.colon(param, $colon$colon_this);
               $colon$colon_this = null;
               ctor.setInfoAndEnter(var10004.new MethodType(var33, ((Symbols.Symbol)MacroImplLocation).tpe_$times())).markAllCompleted();
               MacroImplLocation.addAnnotation(this.CompileTimeOnlyAttr(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new Literal(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new Constant((new StringBuilder(73)).append("illegal reference to ").append(MacroImplLocation).append(", it is an implementation detail of unpickling TASTy").toString())));
               this.MacroImplLocationAnnotation = (Symbols.ClassSymbol)MacroImplLocation.markAllCompleted();
               this.bitmap$1 |= 4611686018427387904L;
            }
         } catch (Throwable var22) {
            throw var22;
         }

         return this.MacroImplLocationAnnotation;
      }

      public Symbols.ClassSymbol MacroImplLocationAnnotation() {
         return (this.bitmap$1 & 4611686018427387904L) == 0L ? this.MacroImplLocationAnnotation$lzycompute() : this.MacroImplLocationAnnotation;
      }

      private Symbols.ClassSymbol StringContextClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$1 & Long.MIN_VALUE) == 0L) {
               this.StringContextClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(StringContext.class));
               this.bitmap$1 |= Long.MIN_VALUE;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.StringContextClass;
      }

      public Symbols.ClassSymbol StringContextClass() {
         return (this.bitmap$1 & Long.MIN_VALUE) == 0L ? this.StringContextClass$lzycompute() : this.StringContextClass;
      }

      private Symbols.ModuleSymbol StringContextModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 1L) == 0L) {
               this.StringContextModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(StringContext.class));
               this.bitmap$2 |= 1L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.StringContextModule;
      }

      public Symbols.ModuleSymbol StringContextModule() {
         return (this.bitmap$2 & 1L) == 0L ? this.StringContextModule$lzycompute() : this.StringContextModule;
      }

      private Symbols.Symbol ValueOfClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 2L) == 0L) {
               this.ValueOfClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.ValueOf");
               this.bitmap$2 |= 2L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ValueOfClass;
      }

      public Symbols.Symbol ValueOfClass() {
         return (this.bitmap$2 & 2L) == 0L ? this.ValueOfClass$lzycompute() : this.ValueOfClass;
      }

      private Symbols.Symbol QuasiquoteClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 4L) == 0L) {
               Object var4;
               label53: {
                  label52: {
                     Symbols.Symbol var10001 = this.ApiUniverseClass();
                     Symbols.NoSymbol var1 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
                     if (var10001 == null) {
                        if (var1 != null) {
                           break label52;
                        }
                     } else if (!var10001.equals(var1)) {
                        break label52;
                     }

                     var4 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
                     break label53;
                  }

                  var4 = this.ApiQuasiquotesClass().info().decl((Names.Name)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Quasiquote());
               }

               this.QuasiquoteClass = (Symbols.Symbol)var4;
               this.bitmap$2 |= 4L;
            }
         } catch (Throwable var3) {
            throw var3;
         }

         return this.QuasiquoteClass;
      }

      public Symbols.Symbol QuasiquoteClass() {
         return (this.bitmap$2 & 4L) == 0L ? this.QuasiquoteClass$lzycompute() : this.QuasiquoteClass;
      }

      private Symbols.Symbol QuasiquoteClass_api$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 8L) == 0L) {
               Object var4;
               label53: {
                  label52: {
                     Symbols.Symbol var10001 = this.QuasiquoteClass();
                     Symbols.NoSymbol var1 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
                     if (var10001 == null) {
                        if (var1 != null) {
                           break label52;
                        }
                     } else if (!var10001.equals(var1)) {
                        break label52;
                     }

                     var4 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
                     break label53;
                  }

                  var4 = this.QuasiquoteClass().info().decl((Names.Name)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().api());
               }

               this.QuasiquoteClass_api = (Symbols.Symbol)var4;
               this.bitmap$2 |= 8L;
            }
         } catch (Throwable var3) {
            throw var3;
         }

         return this.QuasiquoteClass_api;
      }

      public Symbols.Symbol QuasiquoteClass_api() {
         return (this.bitmap$2 & 8L) == 0L ? this.QuasiquoteClass_api$lzycompute() : this.QuasiquoteClass_api;
      }

      private Symbols.Symbol QuasiquoteClass_api_apply$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 16L) == 0L) {
               Object var4;
               label53: {
                  label52: {
                     Symbols.Symbol var10001 = this.QuasiquoteClass_api();
                     Symbols.NoSymbol var1 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
                     if (var10001 == null) {
                        if (var1 != null) {
                           break label52;
                        }
                     } else if (!var10001.equals(var1)) {
                        break label52;
                     }

                     var4 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
                     break label53;
                  }

                  var4 = this.getDeclMethod(this.QuasiquoteClass_api(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply());
               }

               this.QuasiquoteClass_api_apply = (Symbols.Symbol)var4;
               this.bitmap$2 |= 16L;
            }
         } catch (Throwable var3) {
            throw var3;
         }

         return this.QuasiquoteClass_api_apply;
      }

      public Symbols.Symbol QuasiquoteClass_api_apply() {
         return (this.bitmap$2 & 16L) == 0L ? this.QuasiquoteClass_api_apply$lzycompute() : this.QuasiquoteClass_api_apply;
      }

      private Symbols.Symbol QuasiquoteClass_api_unapply$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 32L) == 0L) {
               Object var4;
               label53: {
                  label52: {
                     Symbols.Symbol var10001 = this.QuasiquoteClass_api();
                     Symbols.NoSymbol var1 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
                     if (var10001 == null) {
                        if (var1 != null) {
                           break label52;
                        }
                     } else if (!var10001.equals(var1)) {
                        break label52;
                     }

                     var4 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
                     break label53;
                  }

                  var4 = this.getDeclMethod(this.QuasiquoteClass_api(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().unapply());
               }

               this.QuasiquoteClass_api_unapply = (Symbols.Symbol)var4;
               this.bitmap$2 |= 32L;
            }
         } catch (Throwable var3) {
            throw var3;
         }

         return this.QuasiquoteClass_api_unapply;
      }

      public Symbols.Symbol QuasiquoteClass_api_unapply() {
         return (this.bitmap$2 & 32L) == 0L ? this.QuasiquoteClass_api_unapply$lzycompute() : this.QuasiquoteClass_api_unapply;
      }

      private Symbols.ClassSymbol ScalaSignatureAnnotation$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 64L) == 0L) {
               this.ScalaSignatureAnnotation = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(ScalaSignature.class));
               this.bitmap$2 |= 64L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaSignatureAnnotation;
      }

      public Symbols.ClassSymbol ScalaSignatureAnnotation() {
         return (this.bitmap$2 & 64L) == 0L ? this.ScalaSignatureAnnotation$lzycompute() : this.ScalaSignatureAnnotation;
      }

      private Symbols.ClassSymbol ScalaLongSignatureAnnotation$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 128L) == 0L) {
               this.ScalaLongSignatureAnnotation = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(ScalaLongSignature.class));
               this.bitmap$2 |= 128L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaLongSignatureAnnotation;
      }

      public Symbols.ClassSymbol ScalaLongSignatureAnnotation() {
         return (this.bitmap$2 & 128L) == 0L ? this.ScalaLongSignatureAnnotation$lzycompute() : this.ScalaLongSignatureAnnotation;
      }

      private Symbols.Symbol MethodHandleClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 256L) == 0L) {
               this.MethodHandleClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("java.lang.invoke.MethodHandle");
               this.bitmap$2 |= 256L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.MethodHandleClass;
      }

      public Symbols.Symbol MethodHandleClass() {
         return (this.bitmap$2 & 256L) == 0L ? this.MethodHandleClass$lzycompute() : this.MethodHandleClass;
      }

      private Symbols.Symbol VarHandleClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 512L) == 0L) {
               this.VarHandleClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("java.lang.invoke.VarHandle");
               this.bitmap$2 |= 512L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.VarHandleClass;
      }

      public Symbols.Symbol VarHandleClass() {
         return (this.bitmap$2 & 512L) == 0L ? this.VarHandleClass$lzycompute() : this.VarHandleClass;
      }

      private Symbols.ClassSymbol OptionClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 1024L) == 0L) {
               this.OptionClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Option.class));
               this.bitmap$2 |= 1024L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.OptionClass;
      }

      public Symbols.ClassSymbol OptionClass() {
         return (this.bitmap$2 & 1024L) == 0L ? this.OptionClass$lzycompute() : this.OptionClass;
      }

      private Symbols.ModuleSymbol OptionModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 2048L) == 0L) {
               this.OptionModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(Option.class));
               this.bitmap$2 |= 2048L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.OptionModule;
      }

      public Symbols.ModuleSymbol OptionModule() {
         return (this.bitmap$2 & 2048L) == 0L ? this.OptionModule$lzycompute() : this.OptionModule;
      }

      private Symbols.ClassSymbol SomeClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 4096L) == 0L) {
               this.SomeClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Some.class));
               this.bitmap$2 |= 4096L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SomeClass;
      }

      public Symbols.ClassSymbol SomeClass() {
         return (this.bitmap$2 & 4096L) == 0L ? this.SomeClass$lzycompute() : this.SomeClass;
      }

      private Symbols.ModuleSymbol NoneModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 8192L) == 0L) {
               this.NoneModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(None.class));
               this.bitmap$2 |= 8192L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.NoneModule;
      }

      public Symbols.ModuleSymbol NoneModule() {
         return (this.bitmap$2 & 8192L) == 0L ? this.NoneModule$lzycompute() : this.NoneModule;
      }

      private Symbols.ModuleSymbol SomeModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 16384L) == 0L) {
               this.SomeModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(Some.class));
               this.bitmap$2 |= 16384L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SomeModule;
      }

      public Symbols.ModuleSymbol SomeModule() {
         return (this.bitmap$2 & 16384L) == 0L ? this.SomeModule$lzycompute() : this.SomeModule;
      }

      private Symbols.ClassSymbol ModuleSerializationProxyClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 32768L) == 0L) {
               this.ModuleSerializationProxyClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(ModuleSerializationProxy.class));
               this.bitmap$2 |= 32768L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ModuleSerializationProxyClass;
      }

      public Symbols.ClassSymbol ModuleSerializationProxyClass() {
         return (this.bitmap$2 & 32768L) == 0L ? this.ModuleSerializationProxyClass$lzycompute() : this.ModuleSerializationProxyClass;
      }

      public Types.Type compilerTypeFromTag(final TypeTags.WeakTypeTag tt) {
         return (Types.Type)tt.in(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).tpe();
      }

      public Symbols.Symbol compilerSymbolFromTag(final TypeTags.WeakTypeTag tt) {
         return ((Types.Type)tt.in(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).tpe()).typeSymbol();
      }

      public boolean isJavaMainMethod(final Symbols.Symbol sym) {
         Names.Name var10000 = sym.name();
         Names.TermName var2 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().main();
         if (var10000 == null) {
            if (var2 != null) {
               return false;
            }
         } else if (!var10000.equals(var2)) {
            return false;
         }

         label39: {
            Types.Type var3 = sym.info();
            if (var3 instanceof Types.MethodType) {
               Types.MethodType var4 = (Types.MethodType)var3;
               List var5 = var4.params();
               Types.Type restpe = var4.resultType();
               if (var5 instanceof scala.collection.immutable..colon.colon) {
                  scala.collection.immutable..colon.colon var7 = (scala.collection.immutable..colon.colon)var5;
                  Symbols.Symbol p = (Symbols.Symbol)var7.head();
                  List var9 = var7.next$access$1();
                  if (.MODULE$.equals(var9)) {
                     if (p == null) {
                        throw null;
                     }

                     label33: {
                        if (this.isArrayOfSymbol(p.tpe_$times(), this.StringClass())) {
                           Symbols.Symbol var12 = restpe.typeSymbol();
                           Symbols.ClassSymbol var10 = this.UnitClass();
                           if (var12 == null) {
                              if (var10 == null) {
                                 break label33;
                              }
                           } else if (var12.equals(var10)) {
                              break label33;
                           }
                        }

                        var11 = false;
                        break label39;
                     }

                     var11 = true;
                     break label39;
                  }
               }
            }

            var11 = false;
         }

         if (var11) {
            return true;
         } else {
            return false;
         }
      }

      public boolean hasJavaMainMethod(final Symbols.Symbol sym) {
         if (sym == null) {
            throw null;
         } else {
            List var10000 = sym.tpe_$times().member((Names.Name)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().main()).alternatives();
            if (var10000 == null) {
               throw null;
            } else {
               for(List exists_these = var10000; !exists_these.isEmpty(); exists_these = (List)exists_these.tail()) {
                  Symbols.Symbol var3 = (Symbols.Symbol)exists_these.head();
                  if (this.isJavaMainMethod(var3)) {
                     return true;
                  }
               }

               return false;
            }
         }
      }

      public int MaxTupleArity() {
         return this.MaxTupleArity;
      }

      public int MaxProductArity() {
         return this.MaxProductArity;
      }

      public int MaxFunctionArity() {
         return this.MaxFunctionArity;
      }

      public int MaxTupleAritySpecialized() {
         return this.MaxTupleAritySpecialized;
      }

      public int MaxProductAritySpecialized() {
         return this.MaxProductAritySpecialized;
      }

      public int MaxFunctionAritySpecialized() {
         return this.MaxFunctionAritySpecialized;
      }

      private VarArityClass ProductClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 65536L) == 0L) {
               this.ProductClass = new VarArityClass("Product", this.MaxProductArity(), 1, new Some(this.UnitClass()));
               this.bitmap$2 |= 65536L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ProductClass;
      }

      public VarArityClass ProductClass() {
         return (this.bitmap$2 & 65536L) == 0L ? this.ProductClass$lzycompute() : this.ProductClass;
      }

      private VarArityClass TupleClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 131072L) == 0L) {
               VarArityClass var10001 = new VarArityClass;
               int var10005 = this.MaxTupleArity();
               if (this.VarArityClass() == null) {
                  throw null;
               }

               var10001.<init>("Tuple", var10005, 1, scala.None..MODULE$);
               this.TupleClass = var10001;
               this.bitmap$2 |= 131072L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.TupleClass;
      }

      public VarArityClass TupleClass() {
         return (this.bitmap$2 & 131072L) == 0L ? this.TupleClass$lzycompute() : this.TupleClass;
      }

      private VarArityClass FunctionClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 262144L) == 0L) {
               VarArityClass var10001 = new VarArityClass;
               int var10005 = this.MaxFunctionArity();
               if (this.VarArityClass() == null) {
                  throw null;
               }

               if (this.VarArityClass() == null) {
                  throw null;
               }

               var10001.<init>("Function", var10005, 0, scala.None..MODULE$);
               this.FunctionClass = var10001;
               this.bitmap$2 |= 262144L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.FunctionClass;
      }

      public VarArityClass FunctionClass() {
         return (this.bitmap$2 & 262144L) == 0L ? this.FunctionClass$lzycompute() : this.FunctionClass;
      }

      private VarArityClass AbstractFunctionClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 524288L) == 0L) {
               VarArityClass var10001 = new VarArityClass;
               int var10005 = this.MaxFunctionArity();
               if (this.VarArityClass() == null) {
                  throw null;
               }

               if (this.VarArityClass() == null) {
                  throw null;
               }

               var10001.<init>("runtime.AbstractFunction", var10005, 0, scala.None..MODULE$);
               this.AbstractFunctionClass = var10001;
               this.bitmap$2 |= 524288L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.AbstractFunctionClass;
      }

      public VarArityClass AbstractFunctionClass() {
         return (this.bitmap$2 & 524288L) == 0L ? this.AbstractFunctionClass$lzycompute() : this.AbstractFunctionClass;
      }

      public Types.Type tupleType(final List elems) {
         return this.TupleClass().specificType(elems, this.TupleClass().specificType$default$2());
      }

      public Types.Type functionType(final List formals, final Types.Type restpe) {
         VarArityClass var10000 = this.FunctionClass();
         List $colon$colon_this = .MODULE$;
         scala.collection.immutable..colon.colon var10002 = new scala.collection.immutable..colon.colon(restpe, $colon$colon_this);
         $colon$colon_this = null;
         return var10000.specificType(formals, var10002);
      }

      public Types.Type abstractFunctionType(final List formals, final Types.Type restpe) {
         VarArityClass var10000 = this.AbstractFunctionClass();
         List $colon$colon_this = .MODULE$;
         scala.collection.immutable..colon.colon var10002 = new scala.collection.immutable..colon.colon(restpe, $colon$colon_this);
         $colon$colon_this = null;
         return var10000.specificType(formals, var10002);
      }

      public Names.TermName wrapVarargsArrayMethodName(final Types.Type elemtp) {
         Symbols.Symbol var2 = elemtp.typeSymbol();
         Symbols.ClassSymbol var10000 = this.ByteClass();
         if (var10000 == null) {
            if (var2 == null) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapByteArray();
            }
         } else if (var10000.equals(var2)) {
            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapByteArray();
         }

         var10000 = this.ShortClass();
         if (var10000 == null) {
            if (var2 == null) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapShortArray();
            }
         } else if (var10000.equals(var2)) {
            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapShortArray();
         }

         var10000 = this.CharClass();
         if (var10000 == null) {
            if (var2 == null) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapCharArray();
            }
         } else if (var10000.equals(var2)) {
            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapCharArray();
         }

         var10000 = this.IntClass();
         if (var10000 == null) {
            if (var2 == null) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapIntArray();
            }
         } else if (var10000.equals(var2)) {
            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapIntArray();
         }

         var10000 = this.LongClass();
         if (var10000 == null) {
            if (var2 == null) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapLongArray();
            }
         } else if (var10000.equals(var2)) {
            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapLongArray();
         }

         var10000 = this.FloatClass();
         if (var10000 == null) {
            if (var2 == null) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapFloatArray();
            }
         } else if (var10000.equals(var2)) {
            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapFloatArray();
         }

         var10000 = this.DoubleClass();
         if (var10000 == null) {
            if (var2 == null) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapDoubleArray();
            }
         } else if (var10000.equals(var2)) {
            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapDoubleArray();
         }

         var10000 = this.BooleanClass();
         if (var10000 == null) {
            if (var2 == null) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapBooleanArray();
            }
         } else if (var10000.equals(var2)) {
            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapBooleanArray();
         }

         var10000 = this.UnitClass();
         if (var10000 == null) {
            if (var2 == null) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapUnitArray();
            }
         } else if (var10000.equals(var2)) {
            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapUnitArray();
         }

         if (elemtp.$less$colon$less(this.AnyRefTpe())) {
            Set var13 = this.isPhantomClass();
            Symbols.Symbol apply_elem = elemtp.typeSymbol();
            if (var13 == null) {
               throw null;
            }

            boolean var14 = var13.contains(apply_elem);
            apply_elem = null;
            if (!var14) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapRefArray();
            }
         }

         return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().genericWrapArray();
      }

      public boolean isTupleSymbol(final Symbols.Symbol sym) {
         return this.TupleClass().contains(this.unspecializedSymbol(sym));
      }

      public boolean isFunctionSymbol(final Symbols.Symbol sym) {
         return this.FunctionClass().contains(this.unspecializedSymbol(sym));
      }

      public boolean isAbstractFunctionSymbol(final Symbols.Symbol sym) {
         return this.AbstractFunctionClass().contains(this.unspecializedSymbol(sym));
      }

      public boolean isProductNSymbol(final Symbols.Symbol sym) {
         return this.ProductClass().contains(this.unspecializedSymbol(sym));
      }

      private Symbols.ClassSymbol TryClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 1048576L) == 0L) {
               this.TryClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Try.class));
               this.bitmap$2 |= 1048576L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.TryClass;
      }

      public Symbols.ClassSymbol TryClass() {
         return (this.bitmap$2 & 1048576L) == 0L ? this.TryClass$lzycompute() : this.TryClass;
      }

      private Symbols.ClassSymbol FailureClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 2097152L) == 0L) {
               this.FailureClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Failure.class));
               this.bitmap$2 |= 2097152L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.FailureClass;
      }

      public Symbols.ClassSymbol FailureClass() {
         return (this.bitmap$2 & 2097152L) == 0L ? this.FailureClass$lzycompute() : this.FailureClass;
      }

      private Symbols.ClassSymbol SuccessClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 4194304L) == 0L) {
               this.SuccessClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Success.class));
               this.bitmap$2 |= 4194304L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SuccessClass;
      }

      public Symbols.ClassSymbol SuccessClass() {
         return (this.bitmap$2 & 4194304L) == 0L ? this.SuccessClass$lzycompute() : this.SuccessClass;
      }

      private Symbols.ClassSymbol FutureClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 8388608L) == 0L) {
               this.FutureClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Future.class));
               this.bitmap$2 |= 8388608L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.FutureClass;
      }

      public Symbols.ClassSymbol FutureClass() {
         return (this.bitmap$2 & 8388608L) == 0L ? this.FutureClass$lzycompute() : this.FutureClass;
      }

      private Symbols.ClassSymbol PromiseClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 16777216L) == 0L) {
               this.PromiseClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Promise.class));
               this.bitmap$2 |= 16777216L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.PromiseClass;
      }

      public Symbols.ClassSymbol PromiseClass() {
         return (this.bitmap$2 & 16777216L) == 0L ? this.PromiseClass$lzycompute() : this.PromiseClass;
      }

      private Symbols.ModuleSymbol NonFatalModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 33554432L) == 0L) {
               this.NonFatalModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(NonFatal.class));
               this.bitmap$2 |= 33554432L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.NonFatalModule;
      }

      public Symbols.ModuleSymbol NonFatalModule() {
         return (this.bitmap$2 & 33554432L) == 0L ? this.NonFatalModule$lzycompute() : this.NonFatalModule;
      }

      private Symbols.TermSymbol NonFatal_apply$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 67108864L) == 0L) {
               this.NonFatal_apply = this.getMemberMethod(this.NonFatalModule(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply());
               this.bitmap$2 |= 67108864L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.NonFatal_apply;
      }

      public Symbols.TermSymbol NonFatal_apply() {
         return (this.bitmap$2 & 67108864L) == 0L ? this.NonFatal_apply$lzycompute() : this.NonFatal_apply;
      }

      public Symbols.Symbol unspecializedSymbol(final Symbols.Symbol sym) {
         if (sym.hasFlag(1099511627776L)) {
            Names.Name genericName = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().unspecializedName(sym.name());
            return sym.owner().info().decl((Names.Name)genericName.toTypeName());
         } else {
            return sym;
         }
      }

      public List unspecializedTypeArgs(final Types.Type tp) {
         return tp.baseType(this.unspecializedSymbol(tp.typeSymbolDirect())).typeArgs();
      }

      public boolean isMacroContextType(final Types.Type tp) {
         return this.MacroContextType().unapply(tp).isDefined();
      }

      public boolean isWhiteboxContextType(final Types.Type tp) {
         if (this.isMacroContextType(tp)) {
            Symbols.Symbol var10001 = this.WhiteboxContextClass();
            if (var10001 == null) {
               throw null;
            }

            if (tp.$less$colon$less(var10001.tpe_$times())) {
               return true;
            }
         }

         return false;
      }

      private Types.Type macroBundleParamInfo(final Types.Type tp) {
         List var2 = tp.erasure().typeSymbol().primaryConstructor().paramss();
         if (var2 != null) {
            List var10000 = scala.package..MODULE$.List();
            if (var10000 == null) {
               throw null;
            }

            List unapplySeq_this = var10000;
            SeqOps var16 = SeqFactory.unapplySeq$(unapplySeq_this, var2);
            Object var14 = null;
            SeqOps var3 = var16;
            SeqFactory.UnapplySeqWrapper var17 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
            SeqFactory.UnapplySeqWrapper var10001 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
            new SeqFactory.UnapplySeqWrapper(var3);
            var17 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
            var17 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
            int lengthCompare$extension_len = 1;
            if (var3.lengthCompare(lengthCompare$extension_len) == 0) {
               var17 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
               var17 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
               int apply$extension_i = 0;
               List var4 = (List)var3.apply(apply$extension_i);
               if (var4 != null) {
                  List var22 = scala.package..MODULE$.List();
                  if (var22 == null) {
                     throw null;
                  }

                  List unapplySeq_this = var22;
                  SeqOps var23 = SeqFactory.unapplySeq$(unapplySeq_this, var4);
                  Object var15 = null;
                  SeqOps var5 = var23;
                  SeqFactory.UnapplySeqWrapper var24 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                  var10001 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                  new SeqFactory.UnapplySeqWrapper(var5);
                  var24 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                  var24 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                  int lengthCompare$extension_len = 1;
                  if (var5.lengthCompare(lengthCompare$extension_len) == 0) {
                     var24 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                     var24 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                     int apply$extension_i = 0;
                     Symbols.Symbol c = (Symbols.Symbol)var5.apply(apply$extension_i);
                     Symbols.Symbol sym = c.info().typeSymbol();
                     if (sym.isNonBottomSubClass(this.BlackboxContextClass()) || sym.isNonBottomSubClass(this.WhiteboxContextClass())) {
                        return c.info();
                     }

                     return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoType();
                  }
               }
            }
         }

         return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoType();
      }

      public boolean looksLikeMacroBundleType(final Types.Type tp) {
         Types.Type var10000 = this.macroBundleParamInfo(tp);
         Types.NoType$ var2 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoType();
         if (var10000 == null) {
            if (var2 != null) {
               return true;
            }
         } else if (!var10000.equals(var2)) {
            return true;
         }

         return false;
      }

      public boolean isMacroBundleType(final Types.Type tp) {
         boolean isMonomorphic = tp.typeSymbol().typeParams().isEmpty();
         boolean isContextCompatible = this.isMacroContextType(this.macroBundleParamInfo(tp));
         boolean hasSingleConstructor = !tp.declaration(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().CONSTRUCTOR()).isOverloaded();
         boolean nonAbstract = !tp.erasure().typeSymbol().isAbstractClass();
         return isMonomorphic && isContextCompatible && hasSingleConstructor && nonAbstract;
      }

      public boolean isBlackboxMacroBundleType(final Types.Type tp) {
         boolean isBundle = this.isMacroBundleType(tp);
         Option var10000 = this.MacroContextType().unapply(this.macroBundleParamInfo(tp));
         if (var10000 == null) {
            throw null;
         } else {
            Option getOrElse_this = var10000;
            Types.Type var6 = (Types.Type)(getOrElse_this.isEmpty() ? $anonfun$isBlackboxMacroBundleType$1(this) : getOrElse_this.get());
            Object var5 = null;
            var6 = var6;
            Symbols.Symbol var10001 = this.BlackboxContextClass();
            if (var10001 == null) {
               throw null;
            } else {
               boolean isBlackbox = var6.$eq$colon$eq(var10001.tpe_$times());
               return isBundle && isBlackbox;
            }
         }
      }

      public boolean isListType(final Types.Type tp) {
         return tp.typeSymbol().isNonBottomSubClass(this.ListClass());
      }

      public boolean isIterableType(final Types.Type tp) {
         return tp.typeSymbol().isNonBottomSubClass(this.IterableClass());
      }

      public boolean isFunctionTypeDirect(final Types.Type tp) {
         return !tp.isHigherKinded() && this.isFunctionSymbol(tp.typeSymbolDirect());
      }

      public boolean isTupleTypeDirect(final Types.Type tp) {
         return !tp.isHigherKinded() && this.isTupleSymbol(tp.typeSymbolDirect());
      }

      public boolean isFunctionType(final Types.Type tp) {
         return this.isFunctionTypeDirect(tp.dealiasWiden());
      }

      public boolean isFunctionProto(final Types.Type pt) {
         return this.isFunctionType(pt) || (pt instanceof Types.ProtoType ? ((Types.ProtoType)pt).expectsFunctionType() : false) || this.samOf(pt).exists();
      }

      public Tuple2 partialFunctionArgResTypeFromProto(final Types.Type pt) {
         if (pt instanceof Types.OverloadedArgProto) {
            Types.OverloadedArgProto var2 = (Types.OverloadedArgProto)pt;
            return new Tuple2(var2.hofParamTypes().head(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().WildcardType());
         } else {
            List var3 = pt.baseType((Symbols.Symbol)this.PartialFunctionClass()).typeArgs();
            if (var3 instanceof scala.collection.immutable..colon.colon) {
               scala.collection.immutable..colon.colon var4 = (scala.collection.immutable..colon.colon)var3;
               Types.Type arg = (Types.Type)var4.head();
               List var6 = var4.next$access$1();
               if (var6 instanceof scala.collection.immutable..colon.colon) {
                  scala.collection.immutable..colon.colon var7 = (scala.collection.immutable..colon.colon)var6;
                  Types.Type res = (Types.Type)var7.head();
                  List var9 = var7.next$access$1();
                  if (.MODULE$.equals(var9)) {
                     return new Tuple2(arg, res);
                  }
               }
            }

            throw new MatchError(var3);
         }
      }

      public int functionArityFromType(final Types.Type tp) {
         Types.Type dealiased = tp.dealiasWiden();
         if (this.isFunctionTypeDirect(dealiased)) {
            return dealiased.typeArgs().length() - 1;
         } else {
            Symbols.Symbol var3 = this.samOf(tp);
            return var3.exists() ? var3.info().params().length() : -1;
         }
      }

      public List functionOrPfOrSamArgTypes(final Types.Type tp) {
         Types.Type dealiased = tp.dealiasWiden();
         if (!this.isFunctionTypeDirect(dealiased) && !this.isPartialFunctionType(dealiased)) {
            Symbols.Symbol var3 = this.samOf(tp);
            return (List)(var3.exists() ? tp.memberInfo(var3).paramTypes() : .MODULE$);
         } else {
            return (List)dealiased.typeArgs().init();
         }
      }

      public Types.Type samToFunctionType(final Types.Type tp, final Symbols.Symbol sam) {
         if (tp instanceof Types.ProtoType) {
            return ((Types.ProtoType)tp).asFunctionType();
         } else if (sam == null) {
            throw null;
         } else {
            Symbols.Symbol samSym = sam != sam.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? sam : this.samOf(tp);
            if (samSym.exists()) {
               Symbols.Symbol var10000 = tp.typeSymbol();
               Symbols.Symbol var4 = this.correspondingFunctionSymbol$1(samSym);
               if (var10000 == null) {
                  if (var4 != null) {
                     return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().wildcardExtrapolation().apply(this.methodToExpressionTp(tp.memberInfo(samSym)));
                  }
               } else if (!var10000.equals(var4)) {
                  return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().wildcardExtrapolation().apply(this.methodToExpressionTp(tp.memberInfo(samSym)));
               }
            }

            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoType();
         }
      }

      public Symbols.Symbol samToFunctionType$default$2() {
         return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
      }

      public final Types.Type methodToExpressionTp(final Types.Type tp) {
         while(true) {
            boolean var2 = false;
            Types.MethodType var3 = null;
            if (tp instanceof Types.PolyType) {
               Types.Type restpe = ((Types.PolyType)tp).resultType();
               SymbolTable var14 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Function0 var10001 = () -> {
                  package$ var10000 = package$.MODULE$;
                  StringContext StringContextStripMarginOps_stringContext = new StringContext(scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new String[]{"|Normalizing PolyType in infer:\n                       |  was: ", "\n                       |  now"}));
                  scala.reflect.internal.util.package.StringContextStripMarginOps var3 = new scala.reflect.internal.util.package.StringContextStripMarginOps(StringContextStripMarginOps_stringContext);
                  Object var2 = null;
                  return StripMarginInterpolator.sm$(var3, scala.runtime.ScalaRunTime..MODULE$.genericWrapArray(new Object[]{restpe}));
               };
               Types.Type logResult_result = this.methodToExpressionTp(restpe);
               Function0 logResult_msg = var10001;
               if (var14 == null) {
                  throw null;
               }

               var14.log(SymbolTable::$anonfun$logResult$1);
               return logResult_result;
            }

            if (tp instanceof Types.MethodType) {
               var2 = true;
               var3 = (Types.MethodType)tp;
               Types.Type restpe = var3.resultType();
               if (var3.isImplicit()) {
                  tp = restpe;
                  continue;
               }
            }

            if (var2) {
               Types.Type restpe = var3.resultType();
               if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().phase().erasedTypes()) {
                  Symbols.Symbol var13 = this.FunctionClass().apply(var3.params().length());
                  if (var13 == null) {
                     throw null;
                  }

                  return var13.tpe_$times();
               }

               return this.functionType(var3.paramTypes(), this.methodToExpressionTp(restpe));
            }

            if (!(tp instanceof Types.NullaryMethodType)) {
               if (tp instanceof Types.ExistentialType) {
                  Types.ExistentialType var7 = (Types.ExistentialType)tp;
                  List tparams = var7.quantified();
                  Types.Type qtpe = var7.underlying();
                  SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
                  Types.Type newExistentialType_underlying = this.methodToExpressionTp(qtpe);
                  if (var10000 == null) {
                     throw null;
                  }

                  return Types.newExistentialType$(var10000, tparams, newExistentialType_underlying);
               }

               return tp;
            }

            tp = ((Types.NullaryMethodType)tp).resultType();
         }
      }

      public boolean samMatchesFunctionBasedOnArity(final Symbols.Symbol sam, final List formals) {
         if (sam.exists()) {
            SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
            List sameLength_xs1 = sam.info().params();
            if (var10000 == null) {
               throw null;
            }

            boolean var5 = Collections.sameLength$(var10000, sameLength_xs1, formals);
            Object var4 = null;
            if (var5) {
               return true;
            }
         }

         return false;
      }

      public boolean isTupleType(final Types.Type tp) {
         return this.isTupleTypeDirect(tp.dealiasWiden());
      }

      public List tupleComponents(final Types.Type tp) {
         return tp.dealiasWiden().typeArgs();
      }

      private Symbols.ClassSymbol ProductRootClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 134217728L) == 0L) {
               this.ProductRootClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Product.class));
               this.bitmap$2 |= 134217728L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ProductRootClass;
      }

      public Symbols.ClassSymbol ProductRootClass() {
         return (this.bitmap$2 & 134217728L) == 0L ? this.ProductRootClass$lzycompute() : this.ProductRootClass;
      }

      public Symbols.TermSymbol Product_productArity() {
         return this.getMemberMethod(this.ProductRootClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().productArity());
      }

      public Symbols.TermSymbol Product_productElement() {
         return this.getMemberMethod(this.ProductRootClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().productElement());
      }

      public Symbols.Symbol Product_productElementName() {
         return this.getMemberIfDefined(this.ProductRootClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().productElementName());
      }

      public Symbols.TermSymbol Product_iterator() {
         return this.getMemberMethod(this.ProductRootClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().productIterator());
      }

      public Symbols.TermSymbol Product_productPrefix() {
         return this.getMemberMethod(this.ProductRootClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().productPrefix());
      }

      public Symbols.TermSymbol Product_canEqual() {
         return this.getMemberMethod(this.ProductRootClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().canEqual_());
      }

      public Symbols.TermSymbol productProj(final Symbols.Symbol z, final int j) {
         return this.getMemberValue(z, this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().productAccessorName(j));
      }

      /** @deprecated */
      public List getProductArgs(final Types.Type tpe) {
         List var10000 = tpe.baseClasses();
         if (var10000 == null) {
            throw null;
         } else {
            List find_these = var10000;

            while(true) {
               if (find_these.isEmpty()) {
                  var7 = scala.None..MODULE$;
                  break;
               }

               Symbols.Symbol var5 = (Symbols.Symbol)find_these.head();
               if (this.isProductNSymbol(var5)) {
                  var7 = new Some(find_these.head());
                  break;
               }

               find_these = (List)find_these.tail();
            }

            Object var6 = null;
            Object var2 = var7;
            if (var2 instanceof Some) {
               Symbols.Symbol x = (Symbols.Symbol)((Some)var2).value();
               return tpe.baseType(x).typeArgs();
            } else {
               return .MODULE$;
            }
         }
      }

      /** @deprecated */
      public Types.Type unapplyUnwrap(final Types.Type tpe) {
         Types.Type var2 = tpe.finalResultType().dealiasWiden();
         if (var2 instanceof Types.RefinedType) {
            List var3 = ((Types.RefinedType)var2).parents();
            if (var3 instanceof scala.collection.immutable..colon.colon) {
               return ((Types.Type)((scala.collection.immutable..colon.colon)var3).head()).dealiasWiden();
            }
         }

         return var2;
      }

      public Types.Type dropNullaryMethod(final Types.Type tp) {
         return tp instanceof Types.NullaryMethodType ? ((Types.NullaryMethodType)tp).resultType() : tp;
      }

      public final Types.Type finalResultType(final Types.Type tp) {
         while(true) {
            if (tp instanceof Types.PolyType) {
               tp = ((Types.PolyType)tp).resultType();
            } else if (tp instanceof Types.MethodType) {
               tp = ((Types.MethodType)tp).resultType();
            } else {
               if (!(tp instanceof Types.NullaryMethodType)) {
                  return tp;
               }

               tp = ((Types.NullaryMethodType)tp).resultType();
            }
         }
      }

      public final boolean isStable(final Types.Type tp) {
         while(true) {
            boolean var2 = false;
            Types.TypeRef var3 = null;
            if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoPrefix().equals(tp) ? true : tp instanceof Types.SingletonType) {
               return true;
            }

            if (tp instanceof Types.TypeRef) {
               var2 = true;
               var3 = (Types.TypeRef)tp;
               Symbols.Symbol var4 = var3.sym();
               boolean var10;
               if (this.NothingClass().equals(var4)) {
                  var10 = true;
               } else {
                  label79: {
                     label67: {
                        Symbols.ClassSymbol var10000 = this.SingletonClass();
                        if (var10000 == null) {
                           if (var4 == null) {
                              break label67;
                           }
                        } else if (var10000.equals(var4)) {
                           break label67;
                        }

                        var10 = false;
                        break label79;
                     }

                     var10 = true;
                  }
               }

               if (var10) {
                  return true;
               }
            }

            if (var2 && var3.sym().isAbstractType()) {
               return tp.upperBound().typeSymbol().isSubClass(this.SingletonClass());
            }

            if (var2) {
               Types.Type pre = var3.pre();
               if (var3.sym().isModuleClass()) {
                  tp = pre;
                  continue;
               }
            }

            if (var2) {
               Types.Type norm = tp.normalize();
               if (norm == tp) {
                  return false;
               }

               tp = norm;
            } else if (tp instanceof Types.TypeVar) {
               tp = ((Types.TypeVar)tp).origin();
            } else if (tp instanceof Types.ExistentialType) {
               Types.ExistentialType var7 = (Types.ExistentialType)tp;
               List qs = var7.quantified();
               Types.Type underlying = var7.underlying();
               tp = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().deriveTypeWithWildcards(qs, underlying);
            } else {
               if (!(tp instanceof Types.SimpleTypeProxy)) {
                  return false;
               }

               tp = tp.underlying();
            }
         }
      }

      public final boolean isVolatile(final Types.Type tp) {
         while(!(tp instanceof Types.ThisType)) {
            if (!(tp instanceof Types.SingleType)) {
               if (tp instanceof Types.NullaryMethodType) {
                  tp = ((Types.NullaryMethodType)tp).resultType();
                  continue;
               }

               if (tp instanceof Types.PolyType) {
                  tp = ((Types.PolyType)tp).resultType();
                  continue;
               }

               if (tp instanceof Types.TypeRef) {
                  Types.TypeRef var3 = (Types.TypeRef)tp;
                  return this.isVolatileTypeRef$1(var3, tp);
               }

               if (tp instanceof Types.RefinedType) {
                  return this.isVolatileRefinedType$1(tp);
               }

               if (tp instanceof Types.TypeVar) {
                  tp = ((Types.TypeVar)tp).origin();
                  continue;
               }

               if (tp instanceof Types.SimpleTypeProxy) {
                  tp = tp.underlying();
                  continue;
               }

               return false;
            }

            Symbols.Symbol sym = ((Types.SingleType)tp).sym();
            if (!this.isVolatile(tp.underlying()) || !sym.hasVolatileType() && sym.isStable()) {
               return false;
            }

            return true;
         }

         return false;
      }

      public Types.Type functionNBaseType(final Types.Type tp) {
         List var10000 = tp.baseClasses();
         if (var10000 == null) {
            throw null;
         } else {
            List find_these = var10000;

            while(true) {
               if (find_these.isEmpty()) {
                  var7 = scala.None..MODULE$;
                  break;
               }

               Symbols.Symbol var5 = (Symbols.Symbol)find_these.head();
               if (this.isFunctionSymbol(var5)) {
                  var7 = new Some(find_these.head());
                  break;
               }

               find_these = (List)find_these.tail();
            }

            Object var6 = null;
            Object var2 = var7;
            if (var2 instanceof Some) {
               Symbols.Symbol sym = (Symbols.Symbol)((Some)var2).value();
               return tp.baseType(this.unspecializedSymbol(sym));
            } else {
               return tp;
            }
         }
      }

      public boolean isPartialFunctionType(final Types.Type tp) {
         Symbols.Symbol sym = tp.typeSymbol();
         return sym == this.PartialFunctionClass() || sym == this.AbstractPartialFunctionClass();
      }

      public Symbols.Symbol samOf(final Types.Type tp) {
         if (this.isEligible$1(tp)) {
            Symbols.Symbol tpSym = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().erasure().javaErasure().apply(tp).typeSymbol();
            return (Symbols.Symbol)this.samCache.getOrElseUpdate(tpSym, () -> this.compute$1(tpSym));
         } else {
            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
         }
      }

      public Symbols.Symbol samOfProto(final Types.Type pt) {
         if (pt instanceof Types.ProtoType) {
            Types.ProtoType var2 = (Types.ProtoType)pt;
            return this.samOf(var2.underlying());
         } else {
            return this.samOf(pt);
         }
      }

      public Types.Type arrayType(final Types.Type arg) {
         SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         Symbols.ClassSymbol var10001 = this.ArrayClass();
         List $colon$colon_this = .MODULE$;
         scala.collection.immutable..colon.colon var10002 = new scala.collection.immutable..colon.colon(arg, $colon$colon_this);
         $colon$colon_this = null;
         return var10000.appliedType((Symbols.Symbol)var10001, (List)var10002);
      }

      public Types.Type byNameType(final Types.Type arg) {
         SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         Symbols.ClassSymbol var10001 = this.ByNameParamClass();
         List $colon$colon_this = .MODULE$;
         scala.collection.immutable..colon.colon var10002 = new scala.collection.immutable..colon.colon(arg, $colon$colon_this);
         $colon$colon_this = null;
         return var10000.appliedType((Symbols.Symbol)var10001, (List)var10002);
      }

      public Types.Type iteratorOfType(final Types.Type tp) {
         SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         Symbols.ClassSymbol var10001 = this.IteratorClass();
         List $colon$colon_this = .MODULE$;
         scala.collection.immutable..colon.colon var10002 = new scala.collection.immutable..colon.colon(tp, $colon$colon_this);
         $colon$colon_this = null;
         return var10000.appliedType((Symbols.Symbol)var10001, (List)var10002);
      }

      public Types.Type javaRepeatedType(final Types.Type arg) {
         SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         Symbols.ClassSymbol var10001 = this.JavaRepeatedParamClass();
         List $colon$colon_this = .MODULE$;
         scala.collection.immutable..colon.colon var10002 = new scala.collection.immutable..colon.colon(arg, $colon$colon_this);
         $colon$colon_this = null;
         return var10000.appliedType((Symbols.Symbol)var10001, (List)var10002);
      }

      public Types.Type optionType(final Types.Type tp) {
         SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         Symbols.ClassSymbol var10001 = this.OptionClass();
         List $colon$colon_this = .MODULE$;
         scala.collection.immutable..colon.colon var10002 = new scala.collection.immutable..colon.colon(tp, $colon$colon_this);
         $colon$colon_this = null;
         return var10000.appliedType((Symbols.Symbol)var10001, (List)var10002);
      }

      public Types.Type scalaRepeatedType(final Types.Type arg) {
         SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         Symbols.ClassSymbol var10001 = this.RepeatedParamClass();
         List $colon$colon_this = .MODULE$;
         scala.collection.immutable..colon.colon var10002 = new scala.collection.immutable..colon.colon(arg, $colon$colon_this);
         $colon$colon_this = null;
         return var10000.appliedType((Symbols.Symbol)var10001, (List)var10002);
      }

      public Types.Type seqType(final Types.Type arg) {
         SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         Symbols.ClassSymbol var10001 = this.SeqClass();
         List $colon$colon_this = .MODULE$;
         scala.collection.immutable..colon.colon var10002 = new scala.collection.immutable..colon.colon(arg, $colon$colon_this);
         $colon$colon_this = null;
         return var10000.appliedType((Symbols.Symbol)var10001, (List)var10002);
      }

      public Types.Type elementTypeFromGet(final Types.Type tp) {
         Symbols.Symbol typeArgOfBaseTypeOr_baseClass = this.OptionClass();
         List var3 = tp.baseType(typeArgOfBaseTypeOr_baseClass).typeArgs();
         if (var3 instanceof scala.collection.immutable..colon.colon) {
            scala.collection.immutable..colon.colon var4 = (scala.collection.immutable..colon.colon)var3;
            Types.Type typeArgOfBaseTypeOr_x = (Types.Type)var4.head();
            List var6 = var4.next$access$1();
            if (.MODULE$.equals(var6)) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().repackExistential(typeArgOfBaseTypeOr_x);
            }
         }

         return $anonfun$elementTypeFromGet$1(this, tp);
      }

      public Types.Type elementTypeFromApply(final Types.Type tp) {
         Symbols.Symbol typeArgOfBaseTypeOr_baseClass = this.SeqClass();
         List var3 = tp.baseType(typeArgOfBaseTypeOr_baseClass).typeArgs();
         if (var3 instanceof scala.collection.immutable..colon.colon) {
            scala.collection.immutable..colon.colon var4 = (scala.collection.immutable..colon.colon)var3;
            Types.Type typeArgOfBaseTypeOr_x = (Types.Type)var4.head();
            List var6 = var4.next$access$1();
            if (.MODULE$.equals(var6)) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().repackExistential(typeArgOfBaseTypeOr_x);
            }
         }

         return $anonfun$elementTypeFromApply$1(this, tp);
      }

      public Types.Type resultOfIsEmpty(final Types.Type tp) {
         return this.resultOfMatchingMethod(tp, this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().isEmpty(), .MODULE$);
      }

      private Types.Type typeArgOfBaseTypeOr(final Types.Type tp, final Symbols.Symbol baseClass, final Function0 or) {
         List var4 = tp.baseType(baseClass).typeArgs();
         if (var4 instanceof scala.collection.immutable..colon.colon) {
            scala.collection.immutable..colon.colon var5 = (scala.collection.immutable..colon.colon)var4;
            Types.Type x = (Types.Type)var5.head();
            List var7 = var5.next$access$1();
            if (.MODULE$.equals(var7)) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().repackExistential(x);
            }
         }

         return (Types.Type)or.apply();
      }

      private Types.Type resultOfMatchingMethod(final Types.Type tp, final Names.TermName name, final Seq paramTypes) {
         Symbols.Symbol var4 = tp.member((Names.Name)name).filter((member) -> BoxesRunTime.boxToBoolean($anonfun$resultOfMatchingMethod$2(this, paramTypes, member)));
         Symbols.NoSymbol var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
         if (var10000 == null) {
            if (var4 == null) {
               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoType();
            }
         } else if (var10000.equals(var4)) {
            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoType();
         }

         return tp.memberType(var4).finalResultType();
      }

      public Types.Type ClassType(final Types.Type arg) {
         if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().phase().erasedTypes()) {
            Symbols.ClassSymbol var4 = this.ClassClass();
            if (var4 == null) {
               throw null;
            } else {
               return ((Symbols.Symbol)var4).tpe_$times();
            }
         } else {
            SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
            Symbols.ClassSymbol var10001 = this.ClassClass();
            List $colon$colon_this = .MODULE$;
            scala.collection.immutable..colon.colon var10002 = new scala.collection.immutable..colon.colon(arg, $colon$colon_this);
            $colon$colon_this = null;
            return var10000.appliedType((Symbols.Symbol)var10001, (List)var10002);
         }
      }

      public boolean neverHasTypeParameters(final Symbols.Symbol sym) {
         if (sym instanceof Symbols.RefinementClassSymbol) {
            return true;
         } else if (sym instanceof Symbols.ModuleClassSymbol) {
            return true;
         } else {
            return sym.isPrimitiveValueClass() || sym.isAnonymousClass() || sym.initialize().isMonomorphicType();
         }
      }

      public Types.Type EnumType(final Symbols.Symbol sym) {
         SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         Phase enteringPhaseNotLaterThan_target = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().picklerPhase();
         if (var10000 == null) {
            throw null;
         } else {
            SymbolTable enteringPhaseNotLaterThan_this = var10000;
            Symbols.Symbol var12;
            if (enteringPhaseNotLaterThan_this.isAtPhaseAfter(enteringPhaseNotLaterThan_target)) {
               if (enteringPhaseNotLaterThan_target == enteringPhaseNotLaterThan_this.phase()) {
                  var12 = $anonfun$EnumType$1(sym);
               } else {
                  Phase enteringPhaseNotLaterThan_enteringPhase_saved = enteringPhaseNotLaterThan_this.pushPhase(enteringPhaseNotLaterThan_target);

                  try {
                     var12 = $anonfun$EnumType$1(sym);
                  } finally {
                     enteringPhaseNotLaterThan_this.popPhase(enteringPhaseNotLaterThan_enteringPhase_saved);
                  }
               }

               Object var10 = null;
            } else {
               var12 = $anonfun$EnumType$1(sym);
            }

            Object var8 = null;
            enteringPhaseNotLaterThan_target = null;
            Object var11 = null;
            if (var12 == null) {
               throw null;
            } else {
               return var12.tpe_$times();
            }
         }
      }

      public Types.Type classExistentialType(final Types.Type prefix, final Symbols.Symbol clazz) {
         List eparams = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().typeParamsToExistentials(clazz, clazz.unsafeTypeParams());
         SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         if (eparams == null) {
            throw null;
         } else {
            Object var10002;
            if (eparams == .MODULE$) {
               var10002 = .MODULE$;
            } else {
               scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon(((Symbols.Symbol)eparams.head()).tpeHK(), .MODULE$);
               scala.collection.immutable..colon.colon map_t = map_h;

               for(List map_rest = (List)eparams.tail(); map_rest != .MODULE$; map_rest = (List)map_rest.tail()) {
                  scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon(((Symbols.Symbol)map_rest.head()).tpeHK(), .MODULE$);
                  map_t.next_$eq(map_nx);
                  map_t = map_nx;
               }

               Statics.releaseFence();
               var10002 = map_h;
            }

            Object var13 = null;
            Object var14 = null;
            Object var15 = null;
            Object var16 = null;
            Object typeRef_args = var10002;
            if (var10001 == null) {
               throw null;
            } else {
               SymbolTable typeRef_this = var10001;
               Types.Type var17 = Types.typeRef$(typeRef_this, prefix, clazz, (List)typeRef_args);
               typeRef_this = null;
               typeRef_args = null;
               Types.Type newExistentialType_underlying = var17;
               if (var10000 == null) {
                  throw null;
               } else {
                  return Types.newExistentialType$(var10000, eparams, newExistentialType_underlying);
               }
            }
         }
      }

      private Symbols.MethodSymbol Any_$eq$eq$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 268435456L) == 0L) {
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.AnyClass();
               Names.TermName var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().EQ();
               Types.Type var1 = this.AnyTpe();
               List $colon$colon_this = .MODULE$;
               scala.collection.immutable..colon.colon var10004 = new scala.collection.immutable..colon.colon(var1, $colon$colon_this);
               $colon$colon_this = null;
               this.Any_$eq$eq = var10001.scala$reflect$internal$Definitions$$enterNewMethod(var10002, var10003, var10004, this.BooleanTpe(), 32L);
               this.bitmap$2 |= 268435456L;
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.Any_$eq$eq;
      }

      public Symbols.MethodSymbol Any_$eq$eq() {
         return (this.bitmap$2 & 268435456L) == 0L ? this.Any_$eq$eq$lzycompute() : this.Any_$eq$eq;
      }

      private Symbols.MethodSymbol Any_$bang$eq$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 536870912L) == 0L) {
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.AnyClass();
               Names.TermName var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().NE();
               Types.Type var1 = this.AnyTpe();
               List $colon$colon_this = .MODULE$;
               scala.collection.immutable..colon.colon var10004 = new scala.collection.immutable..colon.colon(var1, $colon$colon_this);
               $colon$colon_this = null;
               this.Any_$bang$eq = var10001.scala$reflect$internal$Definitions$$enterNewMethod(var10002, var10003, var10004, this.BooleanTpe(), 32L);
               this.bitmap$2 |= 536870912L;
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.Any_$bang$eq;
      }

      public Symbols.MethodSymbol Any_$bang$eq() {
         return (this.bitmap$2 & 536870912L) == 0L ? this.Any_$bang$eq$lzycompute() : this.Any_$bang$eq;
      }

      private Symbols.MethodSymbol Any_equals$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 1073741824L) == 0L) {
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.AnyClass();
               Names.TermName var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().equals_();
               Types.Type var1 = this.AnyTpe();
               List $colon$colon_this = .MODULE$;
               scala.collection.immutable..colon.colon var10004 = new scala.collection.immutable..colon.colon(var1, $colon$colon_this);
               $colon$colon_this = null;
               Types.Type var10005 = this.BooleanTpe();
               if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer() == null) {
                  throw null;
               }

               this.Any_equals = var10001.scala$reflect$internal$Definitions$$enterNewMethod(var10002, var10003, var10004, var10005, 0L);
               this.bitmap$2 |= 1073741824L;
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.Any_equals;
      }

      public Symbols.MethodSymbol Any_equals() {
         return (this.bitmap$2 & 1073741824L) == 0L ? this.Any_equals$lzycompute() : this.Any_equals;
      }

      private Symbols.MethodSymbol Any_hashCode$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 2147483648L) == 0L) {
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.AnyClass();
               Names.TermName var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().hashCode_();
               Nil var10004 = .MODULE$;
               Types.Type var10005 = this.IntTpe();
               if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer() == null) {
                  throw null;
               }

               this.Any_hashCode = var10001.scala$reflect$internal$Definitions$$enterNewMethod(var10002, var10003, var10004, var10005, 0L);
               this.bitmap$2 |= 2147483648L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Any_hashCode;
      }

      public Symbols.MethodSymbol Any_hashCode() {
         return (this.bitmap$2 & 2147483648L) == 0L ? this.Any_hashCode$lzycompute() : this.Any_hashCode;
      }

      private Symbols.MethodSymbol Any_toString$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 4294967296L) == 0L) {
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.AnyClass();
               Names.TermName var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().toString_();
               Nil var10004 = .MODULE$;
               Types.Type var10005 = this.StringTpe();
               if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer() == null) {
                  throw null;
               }

               this.Any_toString = var10001.scala$reflect$internal$Definitions$$enterNewMethod(var10002, var10003, var10004, var10005, 0L);
               this.bitmap$2 |= 4294967296L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Any_toString;
      }

      public Symbols.MethodSymbol Any_toString() {
         return (this.bitmap$2 & 4294967296L) == 0L ? this.Any_toString$lzycompute() : this.Any_toString;
      }

      private Symbols.MethodSymbol Any_$hash$hash$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 8589934592L) == 0L) {
               this.Any_$hash$hash = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().scala$reflect$internal$Definitions$$enterNewNullaryMethod(this.AnyClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().HASHHASH(), this.IntTpe(), 32L);
               this.bitmap$2 |= 8589934592L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Any_$hash$hash;
      }

      public Symbols.MethodSymbol Any_$hash$hash() {
         return (this.bitmap$2 & 8589934592L) == 0L ? this.Any_$hash$hash$lzycompute() : this.Any_$hash$hash;
      }

      private Symbols.MethodSymbol Any_getClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 17179869184L) == 0L) {
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.AnyClass();
               Names.TermName var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().getClass_();
               Nil var10004 = .MODULE$;
               Symbols.TermSymbol var10005 = this.getMemberMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().getClass_());
               if (var10005 == null) {
                  throw null;
               }

               this.Any_getClass = var10001.scala$reflect$internal$Definitions$$enterNewMethod(var10002, var10003, var10004, ((Symbols.Symbol)var10005).tpe_$times().resultType(), 16L);
               this.bitmap$2 |= 17179869184L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Any_getClass;
      }

      public Symbols.MethodSymbol Any_getClass() {
         return (this.bitmap$2 & 17179869184L) == 0L ? this.Any_getClass$lzycompute() : this.Any_getClass;
      }

      private Symbols.MethodSymbol Any_isInstanceOf$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 34359738368L) == 0L) {
               this.Any_isInstanceOf = this.enterNewT1NullaryMethod(this.AnyClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().isInstanceOf_(), 32L, (x$17) -> this.BooleanTpe());
               this.bitmap$2 |= 34359738368L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Any_isInstanceOf;
      }

      public Symbols.MethodSymbol Any_isInstanceOf() {
         return (this.bitmap$2 & 34359738368L) == 0L ? this.Any_isInstanceOf$lzycompute() : this.Any_isInstanceOf;
      }

      private Symbols.MethodSymbol Any_asInstanceOf$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 68719476736L) == 0L) {
               this.Any_asInstanceOf = this.enterNewT1NullaryMethod(this.AnyClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().asInstanceOf_(), 32L, (x$18) -> x$18.typeConstructor());
               this.bitmap$2 |= 68719476736L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Any_asInstanceOf;
      }

      public Symbols.MethodSymbol Any_asInstanceOf() {
         return (this.bitmap$2 & 68719476736L) == 0L ? this.Any_asInstanceOf$lzycompute() : this.Any_asInstanceOf;
      }

      private Set primitiveGetClassMethods$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 137438953472L) == 0L) {
               Set var10001 = scala.Predef..MODULE$.Set();
               ArraySeq apply_elems = scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.Symbol[]{this.Any_getClass(), this.AnyVal_getClass()});
               if (var10001 == null) {
                  throw null;
               }

               Object var19 = IterableFactory.apply$(var10001, apply_elems);
               Object var12 = null;
               SetOps var20 = (SetOps)var19;
               List var10002 = this.ScalaValueClasses();
               if (var10002 == null) {
                  throw null;
               }

               List map_this = var10002;
               Object var22;
               if (map_this == .MODULE$) {
                  var22 = .MODULE$;
               } else {
                  Symbols.ClassSymbol var8 = (Symbols.ClassSymbol)map_this.head();
                  scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon($anonfun$primitiveGetClassMethods$1(this, var8), .MODULE$);
                  scala.collection.immutable..colon.colon map_t = map_h;

                  for(List map_rest = (List)map_this.tail(); map_rest != .MODULE$; map_rest = (List)map_rest.tail()) {
                     var8 = (Symbols.ClassSymbol)map_rest.head();
                     scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon($anonfun$primitiveGetClassMethods$1(this, var8), .MODULE$);
                     map_t.next_$eq(map_nx);
                     map_t = map_nx;
                  }

                  Statics.releaseFence();
                  var22 = map_h;
               }

               Object var13 = null;
               Object var14 = null;
               Object var15 = null;
               Object var16 = null;
               Object var17 = null;
               Object $plus$plus_that = var22;
               if (var20 == null) {
                  throw null;
               }

               var20 = var20.concat((IterableOnce)$plus$plus_that);
               $plus$plus_that = null;
               this.primitiveGetClassMethods = (Set)var20;
               this.bitmap$2 |= 137438953472L;
            }
         } catch (Throwable var10) {
            throw var10;
         }

         return this.primitiveGetClassMethods;
      }

      public Set primitiveGetClassMethods() {
         return (this.bitmap$2 & 137438953472L) == 0L ? this.primitiveGetClassMethods$lzycompute() : this.primitiveGetClassMethods;
      }

      private Set getClassMethods$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 274877906944L) == 0L) {
               scala.collection.immutable.SetOps var10001 = this.primitiveGetClassMethods();
               Symbols.TermSymbol $plus_elem = this.Object_getClass();
               if (var10001 == null) {
                  throw null;
               }

               var10001 = var10001.incl($plus_elem);
               $plus_elem = null;
               this.getClassMethods = (Set)var10001;
               this.bitmap$2 |= 274877906944L;
            }
         } catch (Throwable var3) {
            throw var3;
         }

         return this.getClassMethods;
      }

      public Set getClassMethods() {
         return (this.bitmap$2 & 274877906944L) == 0L ? this.getClassMethods$lzycompute() : this.getClassMethods;
      }

      public Types.Type getClassReturnType(final Types.Type tp) {
         Symbols.Symbol sym = tp.typeSymbol();
         if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().phase().erasedTypes()) {
            Symbols.ClassSymbol var6 = this.ClassClass();
            if (var6 == null) {
               throw null;
            } else {
               return ((Symbols.Symbol)var6).tpe_$times();
            }
         } else if (this.isPrimitiveValueClass(sym)) {
            return this.ClassType(tp.widen());
         } else {
            List eparams = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().typeParamsToExistentials(this.ClassClass(), this.ClassClass().typeParams());
            Set var10000 = this.isPhantomClass();
            if (var10000 == null) {
               throw null;
            } else {
               Types.Type upperBound = var10000.contains(sym) ? this.AnyTpe() : (sym.isLocalClass() ? this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().erasure().intersectionDominator(tp.parents()) : tp.widen());
               SymbolTable var5 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.Symbol var10003 = ((Symbols.Symbol)eparams.head()).setInfo(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().TypeBounds().upper(upperBound));
               if (var10003 == null) {
                  throw null;
               } else {
                  return var5.existentialAbstraction(eparams, this.ClassType(var10003.tpe_$times()), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().existentialAbstraction$default$3());
               }
            }
         }
      }

      public List removeRedundantObjects(final List tps) {
         if (.MODULE$.equals(tps)) {
            return .MODULE$;
         } else if (!(tps instanceof scala.collection.immutable..colon.colon)) {
            throw new MatchError(tps);
         } else {
            Types.Type x;
            List xs;
            label96: {
               scala.collection.immutable..colon.colon var2 = (scala.collection.immutable..colon.colon)tps;
               x = (Types.Type)var2.head();
               xs = var2.next$access$1();
               Symbols.Symbol var10000 = x.typeSymbol();
               Symbols.ClassSymbol var5 = this.ObjectClass();
               if (var10000 == null) {
                  if (var5 != null) {
                     break label96;
                  }
               } else if (!var10000.equals(var5)) {
                  break label96;
               }

               if (xs == null) {
                  throw null;
               }

               boolean filterNot_filterCommon_isFlipped = true;
               List filterNot_filterCommon_noneIn$1_l = xs;

               while(true) {
                  if (filterNot_filterCommon_noneIn$1_l.isEmpty()) {
                     var10000 = .MODULE$;
                     break;
                  }

                  Object filterNot_filterCommon_noneIn$1_h = filterNot_filterCommon_noneIn$1_l.head();
                  List filterNot_filterCommon_noneIn$1_t = (List)filterNot_filterCommon_noneIn$1_l.tail();
                  Types.Type var23 = (Types.Type)filterNot_filterCommon_noneIn$1_h;
                  if ($anonfun$removeRedundantObjects$1(this, var23) != filterNot_filterCommon_isFlipped) {
                     List filterNot_filterCommon_noneIn$1_allIn$1_remaining = filterNot_filterCommon_noneIn$1_t;

                     while(true) {
                        if (filterNot_filterCommon_noneIn$1_allIn$1_remaining.isEmpty()) {
                           var10000 = filterNot_filterCommon_noneIn$1_l;
                           break;
                        }

                        Object filterNot_filterCommon_noneIn$1_allIn$1_x = filterNot_filterCommon_noneIn$1_allIn$1_remaining.head();
                        var23 = (Types.Type)filterNot_filterCommon_noneIn$1_allIn$1_x;
                        if ($anonfun$removeRedundantObjects$1(this, var23) == filterNot_filterCommon_isFlipped) {
                           scala.collection.immutable..colon.colon filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead = new scala.collection.immutable..colon.colon(filterNot_filterCommon_noneIn$1_l.head(), .MODULE$);
                           List filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess = (List)filterNot_filterCommon_noneIn$1_l.tail();

                           scala.collection.immutable..colon.colon filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast;
                           for(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead; filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess != filterNot_filterCommon_noneIn$1_allIn$1_remaining; filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess.tail()) {
                              scala.collection.immutable..colon.colon filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem = new scala.collection.immutable..colon.colon(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess.head(), .MODULE$);
                              filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem);
                              filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem;
                           }

                           List filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filterNot_filterCommon_noneIn$1_allIn$1_remaining.tail();
                           List filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next;

                           while(!filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.isEmpty()) {
                              Object filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_head = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.head();
                              var23 = (Types.Type)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_head;
                              if ($anonfun$removeRedundantObjects$1(this, var23) != filterNot_filterCommon_isFlipped) {
                                 filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                              } else {
                                 while(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy != filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next) {
                                    scala.collection.immutable..colon.colon filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem = new scala.collection.immutable..colon.colon(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.head(), .MODULE$);
                                    filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem);
                                    filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem;
                                    filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.tail();
                                 }

                                 filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                                 filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                              }
                           }

                           if (!filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.isEmpty()) {
                              filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy);
                           }

                           var10000 = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead;
                           Object var32 = null;
                           Object var35 = null;
                           Object var38 = null;
                           Object var41 = null;
                           Object var44 = null;
                           Object var47 = null;
                           Object var50 = null;
                           Object var53 = null;
                           break;
                        }

                        filterNot_filterCommon_noneIn$1_allIn$1_remaining = (List)filterNot_filterCommon_noneIn$1_allIn$1_remaining.tail();
                     }

                     Object var28 = null;
                     Object var30 = null;
                     Object var33 = null;
                     Object var36 = null;
                     Object var39 = null;
                     Object var42 = null;
                     Object var45 = null;
                     Object var48 = null;
                     Object var51 = null;
                     Object var54 = null;
                     break;
                  }

                  filterNot_filterCommon_noneIn$1_l = filterNot_filterCommon_noneIn$1_t;
               }

               Object var25 = null;
               Object var26 = null;
               Object var27 = null;
               Object var29 = null;
               Object var31 = null;
               Object var34 = null;
               Object var37 = null;
               Object var40 = null;
               Object var43 = null;
               Object var46 = null;
               Object var49 = null;
               Object var52 = null;
               Object var55 = null;
               List filterNot_filterCommon_result = var10000;
               Statics.releaseFence();
               var10000 = filterNot_filterCommon_result;
               filterNot_filterCommon_result = null;
               List $colon$colon_this = var10000;
               return new scala.collection.immutable..colon.colon(x, $colon$colon_this);
            }

            List var60 = this.removeRedundantObjects(xs);
            if (var60 == null) {
               throw null;
            } else {
               List $colon$colon_this = var60;
               return new scala.collection.immutable..colon.colon(x, $colon$colon_this);
            }
         }
      }

      public List normalizedParents(final List parents) {
         if (parents == null) {
            throw null;
         } else {
            List exists_these = parents;

            boolean var10000;
            while(true) {
               if (exists_these.isEmpty()) {
                  var10000 = false;
                  break;
               }

               Types.Type var18 = (Types.Type)exists_these.head();
               if ($anonfun$normalizedParents$1(this, var18)) {
                  var10000 = true;
                  break;
               }

               exists_these = (List)exists_these.tail();
            }

            Object var20 = null;
            if (!var10000) {
               return this.removeRedundantObjects(parents);
            } else {
               boolean filterNot_filterCommon_isFlipped = true;
               List filterNot_filterCommon_noneIn$1_l = parents;

               while(true) {
                  if (filterNot_filterCommon_noneIn$1_l.isEmpty()) {
                     var54 = .MODULE$;
                     break;
                  }

                  Object filterNot_filterCommon_noneIn$1_h = filterNot_filterCommon_noneIn$1_l.head();
                  List filterNot_filterCommon_noneIn$1_t = (List)filterNot_filterCommon_noneIn$1_l.tail();
                  Types.Type var19 = (Types.Type)filterNot_filterCommon_noneIn$1_h;
                  if ($anonfun$normalizedParents$2(this, var19) != filterNot_filterCommon_isFlipped) {
                     List filterNot_filterCommon_noneIn$1_allIn$1_remaining = filterNot_filterCommon_noneIn$1_t;

                     while(true) {
                        if (filterNot_filterCommon_noneIn$1_allIn$1_remaining.isEmpty()) {
                           var54 = filterNot_filterCommon_noneIn$1_l;
                           break;
                        }

                        Object filterNot_filterCommon_noneIn$1_allIn$1_x = filterNot_filterCommon_noneIn$1_allIn$1_remaining.head();
                        var19 = (Types.Type)filterNot_filterCommon_noneIn$1_allIn$1_x;
                        if ($anonfun$normalizedParents$2(this, var19) == filterNot_filterCommon_isFlipped) {
                           scala.collection.immutable..colon.colon filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead = new scala.collection.immutable..colon.colon(filterNot_filterCommon_noneIn$1_l.head(), .MODULE$);
                           List filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess = (List)filterNot_filterCommon_noneIn$1_l.tail();

                           scala.collection.immutable..colon.colon filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast;
                           for(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead; filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess != filterNot_filterCommon_noneIn$1_allIn$1_remaining; filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess.tail()) {
                              scala.collection.immutable..colon.colon filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem = new scala.collection.immutable..colon.colon(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess.head(), .MODULE$);
                              filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem);
                              filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem;
                           }

                           List filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filterNot_filterCommon_noneIn$1_allIn$1_remaining.tail();
                           List filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next;

                           while(!filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.isEmpty()) {
                              Object filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_head = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.head();
                              var19 = (Types.Type)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_head;
                              if ($anonfun$normalizedParents$2(this, var19) != filterNot_filterCommon_isFlipped) {
                                 filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                              } else {
                                 while(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy != filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next) {
                                    scala.collection.immutable..colon.colon filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem = new scala.collection.immutable..colon.colon(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.head(), .MODULE$);
                                    filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem);
                                    filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem;
                                    filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.tail();
                                 }

                                 filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                                 filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                              }
                           }

                           if (!filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.isEmpty()) {
                              filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy);
                           }

                           var54 = filterNot_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead;
                           Object var28 = null;
                           Object var31 = null;
                           Object var34 = null;
                           Object var37 = null;
                           Object var40 = null;
                           Object var43 = null;
                           Object var46 = null;
                           Object var49 = null;
                           break;
                        }

                        filterNot_filterCommon_noneIn$1_allIn$1_remaining = (List)filterNot_filterCommon_noneIn$1_allIn$1_remaining.tail();
                     }

                     Object var24 = null;
                     Object var26 = null;
                     Object var29 = null;
                     Object var32 = null;
                     Object var35 = null;
                     Object var38 = null;
                     Object var41 = null;
                     Object var44 = null;
                     Object var47 = null;
                     Object var50 = null;
                     break;
                  }

                  filterNot_filterCommon_noneIn$1_l = filterNot_filterCommon_noneIn$1_t;
               }

               Object var21 = null;
               Object var22 = null;
               Object var23 = null;
               Object var25 = null;
               Object var27 = null;
               Object var30 = null;
               Object var33 = null;
               Object var36 = null;
               Object var39 = null;
               Object var42 = null;
               Object var45 = null;
               Object var48 = null;
               Object var51 = null;
               List filterNot_filterCommon_result = (List)var54;
               Statics.releaseFence();
               return filterNot_filterCommon_result;
            }
         }
      }

      public List allParameters(final Types.Type tpe) {
         if (tpe instanceof Types.MethodType) {
            Types.MethodType var2 = (Types.MethodType)tpe;
            List params = var2.params();
            Types.Type res = var2.resultType();
            return this.allParameters(res).$colon$colon$colon(params);
         } else {
            return .MODULE$;
         }
      }

      public String typeStringNoPackage(final Types.Type tp) {
         StringOps var10000 = scala.collection.StringOps..MODULE$;
         String var10001 = String.valueOf(tp);
         StringBuilder var10002 = new StringBuilder(1);
         Symbols.Symbol var10003 = tp.typeSymbol().enclosingPackage();
         if (var10003 == null) {
            throw null;
         } else {
            return var10000.stripPrefix$extension(var10001, var10002.append(var10003.fullName('.')).append(".").toString());
         }
      }

      public String briefParentsString(final List parents) {
         List var10000 = this.normalizedParents(parents);
         if (var10000 == null) {
            throw null;
         } else {
            List map_this = var10000;
            Object var15;
            if (map_this == .MODULE$) {
               var15 = .MODULE$;
            } else {
               Types.Type var8 = (Types.Type)map_this.head();
               scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon(this.typeStringNoPackage(var8), .MODULE$);
               scala.collection.immutable..colon.colon map_t = map_h;

               for(List map_rest = (List)map_this.tail(); map_rest != .MODULE$; map_rest = (List)map_rest.tail()) {
                  var8 = (Types.Type)map_rest.head();
                  scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon(this.typeStringNoPackage(var8), .MODULE$);
                  map_t.next_$eq(map_nx);
                  map_t = map_nx;
               }

               Statics.releaseFence();
               var15 = map_h;
            }

            Object var9 = null;
            Object var10 = null;
            Object var11 = null;
            Object var12 = null;
            Object var13 = null;
            String mkString_sep = " with ";
            return ((IterableOnceOps)var15).mkString("", mkString_sep, "");
         }
      }

      public String parentsString(final List parents) {
         List var10000 = this.normalizedParents(parents);
         String mkString_sep = " with ";
         if (var10000 == null) {
            throw null;
         } else {
            AbstractIterable mkString_this = var10000;
            String mkString_end = "";
            String mkString_start = "";
            return IterableOnceOps.mkString$(mkString_this, mkString_start, mkString_sep, mkString_end);
         }
      }

      public String valueParamsString(final Types.Type tp) {
         if (tp instanceof Types.MethodType) {
            List params = ((Types.MethodType)tp).params();
            if (params == null) {
               throw null;
            } else {
               Object var10000;
               if (params == .MODULE$) {
                  var10000 = .MODULE$;
               } else {
                  scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon(((Symbols.Symbol)params.head()).defString(), .MODULE$);
                  scala.collection.immutable..colon.colon map_t = map_h;

                  for(List map_rest = (List)params.tail(); map_rest != .MODULE$; map_rest = (List)map_rest.tail()) {
                     scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon(((Symbols.Symbol)map_rest.head()).defString(), .MODULE$);
                     map_t.next_$eq(map_nx);
                     map_t = map_nx;
                  }

                  Statics.releaseFence();
                  var10000 = map_h;
               }

               Object var7 = null;
               Object var8 = null;
               Object var9 = null;
               Object var10 = null;
               return IterableOnceOps.mkString$((IterableOnceOps)var10000, "(", ", ", ")");
            }
         } else {
            return "";
         }
      }

      private Symbols.MethodSymbol Object_$hash$hash$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 549755813888L) == 0L) {
               this.Object_$hash$hash = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().scala$reflect$internal$Definitions$$enterNewNullaryMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().HASHHASH(), this.IntTpe(), 32L);
               this.bitmap$2 |= 549755813888L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Object_$hash$hash;
      }

      public Symbols.MethodSymbol Object_$hash$hash() {
         return (this.bitmap$2 & 549755813888L) == 0L ? this.Object_$hash$hash$lzycompute() : this.Object_$hash$hash;
      }

      private Symbols.MethodSymbol Object_$eq$eq$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 1099511627776L) == 0L) {
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.ObjectClass();
               Names.TermName var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().EQ();
               Types.Type var1 = this.AnyTpe();
               List $colon$colon_this = .MODULE$;
               scala.collection.immutable..colon.colon var10004 = new scala.collection.immutable..colon.colon(var1, $colon$colon_this);
               $colon$colon_this = null;
               this.Object_$eq$eq = var10001.scala$reflect$internal$Definitions$$enterNewMethod(var10002, var10003, var10004, this.BooleanTpe(), 32L);
               this.bitmap$2 |= 1099511627776L;
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.Object_$eq$eq;
      }

      public Symbols.MethodSymbol Object_$eq$eq() {
         return (this.bitmap$2 & 1099511627776L) == 0L ? this.Object_$eq$eq$lzycompute() : this.Object_$eq$eq;
      }

      private Symbols.MethodSymbol Object_$bang$eq$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 2199023255552L) == 0L) {
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.ObjectClass();
               Names.TermName var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().NE();
               Types.Type var1 = this.AnyTpe();
               List $colon$colon_this = .MODULE$;
               scala.collection.immutable..colon.colon var10004 = new scala.collection.immutable..colon.colon(var1, $colon$colon_this);
               $colon$colon_this = null;
               this.Object_$bang$eq = var10001.scala$reflect$internal$Definitions$$enterNewMethod(var10002, var10003, var10004, this.BooleanTpe(), 32L);
               this.bitmap$2 |= 2199023255552L;
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.Object_$bang$eq;
      }

      public Symbols.MethodSymbol Object_$bang$eq() {
         return (this.bitmap$2 & 2199023255552L) == 0L ? this.Object_$bang$eq$lzycompute() : this.Object_$bang$eq;
      }

      private Symbols.MethodSymbol Object_eq$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 4398046511104L) == 0L) {
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.ObjectClass();
               Names.TermName var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().eq();
               Types.Type var1 = this.AnyRefTpe();
               List $colon$colon_this = .MODULE$;
               scala.collection.immutable..colon.colon var10004 = new scala.collection.immutable..colon.colon(var1, $colon$colon_this);
               $colon$colon_this = null;
               this.Object_eq = var10001.scala$reflect$internal$Definitions$$enterNewMethod(var10002, var10003, var10004, this.BooleanTpe(), 32L);
               this.bitmap$2 |= 4398046511104L;
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.Object_eq;
      }

      public Symbols.MethodSymbol Object_eq() {
         return (this.bitmap$2 & 4398046511104L) == 0L ? this.Object_eq$lzycompute() : this.Object_eq;
      }

      private Symbols.MethodSymbol Object_ne$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 8796093022208L) == 0L) {
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.ObjectClass();
               Names.TermName var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().ne();
               Types.Type var1 = this.AnyRefTpe();
               List $colon$colon_this = .MODULE$;
               scala.collection.immutable..colon.colon var10004 = new scala.collection.immutable..colon.colon(var1, $colon$colon_this);
               $colon$colon_this = null;
               this.Object_ne = var10001.scala$reflect$internal$Definitions$$enterNewMethod(var10002, var10003, var10004, this.BooleanTpe(), 32L);
               this.bitmap$2 |= 8796093022208L;
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.Object_ne;
      }

      public Symbols.MethodSymbol Object_ne() {
         return (this.bitmap$2 & 8796093022208L) == 0L ? this.Object_ne$lzycompute() : this.Object_ne;
      }

      private Symbols.MethodSymbol Object_isInstanceOf$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 17592186044416L) == 0L) {
               this.Object_isInstanceOf = this.newT1NilaryMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().isInstanceOf_Ob(), 70368746274848L, (x$23) -> this.BooleanTpe());
               this.bitmap$2 |= 17592186044416L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Object_isInstanceOf;
      }

      public Symbols.MethodSymbol Object_isInstanceOf() {
         return (this.bitmap$2 & 17592186044416L) == 0L ? this.Object_isInstanceOf$lzycompute() : this.Object_isInstanceOf;
      }

      private Symbols.MethodSymbol Object_asInstanceOf$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 35184372088832L) == 0L) {
               this.Object_asInstanceOf = this.newT1NilaryMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().asInstanceOf_Ob(), 70368746274848L, (x$24) -> x$24.typeConstructor());
               this.bitmap$2 |= 35184372088832L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Object_asInstanceOf;
      }

      public Symbols.MethodSymbol Object_asInstanceOf() {
         return (this.bitmap$2 & 35184372088832L) == 0L ? this.Object_asInstanceOf$lzycompute() : this.Object_asInstanceOf;
      }

      private Symbols.MethodSymbol Object_synchronized$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 70368744177664L) == 0L) {
               this.Object_synchronized = this.enterNewT1Method(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().synchronized_(), 32L, (x$25) -> x$25.typeConstructor());
               this.bitmap$2 |= 70368744177664L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.Object_synchronized;
      }

      public Symbols.MethodSymbol Object_synchronized() {
         return (this.bitmap$2 & 70368744177664L) == 0L ? this.Object_synchronized$lzycompute() : this.Object_synchronized;
      }

      private Symbols.MethodSymbol String_$plus$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 140737488355328L) == 0L) {
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               Symbols.ClassSymbol var10002 = this.StringClass();
               Names.TermName var10003 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().raw().PLUS();
               Types.Type var1 = this.AnyTpe();
               List $colon$colon_this = .MODULE$;
               scala.collection.immutable..colon.colon var10004 = new scala.collection.immutable..colon.colon(var1, $colon$colon_this);
               $colon$colon_this = null;
               this.String_$plus = var10001.scala$reflect$internal$Definitions$$enterNewMethod(var10002, var10003, var10004, this.StringTpe(), 32L);
               this.bitmap$2 |= 140737488355328L;
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.String_$plus;
      }

      public Symbols.MethodSymbol String_$plus() {
         return (this.bitmap$2 & 140737488355328L) == 0L ? this.String_$plus$lzycompute() : this.String_$plus;
      }

      public Symbols.TermSymbol Object_getClass() {
         return this.getMemberMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().getClass_());
      }

      public Symbols.TermSymbol Object_clone() {
         return this.getMemberMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().clone_());
      }

      public Symbols.TermSymbol Object_finalize() {
         return this.getMemberMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().finalize_());
      }

      public Symbols.TermSymbol Object_notify() {
         return this.getMemberMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().notify_());
      }

      public Symbols.TermSymbol Object_notifyAll() {
         return this.getMemberMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().notifyAll_());
      }

      public Symbols.TermSymbol Object_wait() {
         return this.getMemberMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wait_());
      }

      public Symbols.TermSymbol Object_equals() {
         return this.getMemberMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().equals_());
      }

      public Symbols.TermSymbol Object_hashCode() {
         return this.getMemberMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().hashCode_());
      }

      public Symbols.TermSymbol Object_toString() {
         return this.getMemberMethod(this.ObjectClass(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().toString_());
      }

      private Symbols.ClassSymbol ObjectRefClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 281474976710656L) == 0L) {
               this.ObjectRefClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(ObjectRef.class));
               this.bitmap$2 |= 281474976710656L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ObjectRefClass;
      }

      public Symbols.ClassSymbol ObjectRefClass() {
         return (this.bitmap$2 & 281474976710656L) == 0L ? this.ObjectRefClass$lzycompute() : this.ObjectRefClass;
      }

      private Symbols.ClassSymbol VolatileObjectRefClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 562949953421312L) == 0L) {
               this.VolatileObjectRefClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(VolatileObjectRef.class));
               this.bitmap$2 |= 562949953421312L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.VolatileObjectRefClass;
      }

      public Symbols.ClassSymbol VolatileObjectRefClass() {
         return (this.bitmap$2 & 562949953421312L) == 0L ? this.VolatileObjectRefClass$lzycompute() : this.VolatileObjectRefClass;
      }

      private Symbols.ModuleSymbol RuntimeStaticsModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 1125899906842624L) == 0L) {
               this.RuntimeStaticsModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getRequiredModule("scala.runtime.Statics");
               this.bitmap$2 |= 1125899906842624L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.RuntimeStaticsModule;
      }

      public Symbols.ModuleSymbol RuntimeStaticsModule() {
         return (this.bitmap$2 & 1125899906842624L) == 0L ? this.RuntimeStaticsModule$lzycompute() : this.RuntimeStaticsModule;
      }

      private Symbols.ModuleSymbol BoxesRunTimeModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 2251799813685248L) == 0L) {
               this.BoxesRunTimeModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getRequiredModule("scala.runtime.BoxesRunTime");
               this.bitmap$2 |= 2251799813685248L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxesRunTimeModule;
      }

      public Symbols.ModuleSymbol BoxesRunTimeModule() {
         return (this.bitmap$2 & 2251799813685248L) == 0L ? this.BoxesRunTimeModule$lzycompute() : this.BoxesRunTimeModule;
      }

      private Symbols.Symbol BoxesRunTimeClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 4503599627370496L) == 0L) {
               this.BoxesRunTimeClass = this.BoxesRunTimeModule().moduleClass();
               this.bitmap$2 |= 4503599627370496L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxesRunTimeClass;
      }

      public Symbols.Symbol BoxesRunTimeClass() {
         return (this.bitmap$2 & 4503599627370496L) == 0L ? this.BoxesRunTimeClass$lzycompute() : this.BoxesRunTimeClass;
      }

      private Symbols.ClassSymbol BoxedNumberClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 9007199254740992L) == 0L) {
               this.BoxedNumberClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassByName(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().sn().BoxedNumber());
               this.bitmap$2 |= 9007199254740992L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxedNumberClass;
      }

      public Symbols.ClassSymbol BoxedNumberClass() {
         return (this.bitmap$2 & 9007199254740992L) == 0L ? this.BoxedNumberClass$lzycompute() : this.BoxedNumberClass;
      }

      private Symbols.ClassSymbol BoxedCharacterClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 18014398509481984L) == 0L) {
               this.BoxedCharacterClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassByName(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().sn().BoxedCharacter());
               this.bitmap$2 |= 18014398509481984L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxedCharacterClass;
      }

      public Symbols.ClassSymbol BoxedCharacterClass() {
         return (this.bitmap$2 & 18014398509481984L) == 0L ? this.BoxedCharacterClass$lzycompute() : this.BoxedCharacterClass;
      }

      private Symbols.ClassSymbol BoxedBooleanClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 36028797018963968L) == 0L) {
               this.BoxedBooleanClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassByName(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().sn().BoxedBoolean());
               this.bitmap$2 |= 36028797018963968L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxedBooleanClass;
      }

      public Symbols.ClassSymbol BoxedBooleanClass() {
         return (this.bitmap$2 & 36028797018963968L) == 0L ? this.BoxedBooleanClass$lzycompute() : this.BoxedBooleanClass;
      }

      private Symbols.ClassSymbol BoxedByteClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 72057594037927936L) == 0L) {
               this.BoxedByteClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Byte.class));
               this.bitmap$2 |= 72057594037927936L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxedByteClass;
      }

      public Symbols.ClassSymbol BoxedByteClass() {
         return (this.bitmap$2 & 72057594037927936L) == 0L ? this.BoxedByteClass$lzycompute() : this.BoxedByteClass;
      }

      private Symbols.ClassSymbol BoxedShortClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 144115188075855872L) == 0L) {
               this.BoxedShortClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Short.class));
               this.bitmap$2 |= 144115188075855872L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxedShortClass;
      }

      public Symbols.ClassSymbol BoxedShortClass() {
         return (this.bitmap$2 & 144115188075855872L) == 0L ? this.BoxedShortClass$lzycompute() : this.BoxedShortClass;
      }

      private Symbols.ClassSymbol BoxedIntClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 288230376151711744L) == 0L) {
               this.BoxedIntClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Integer.class));
               this.bitmap$2 |= 288230376151711744L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxedIntClass;
      }

      public Symbols.ClassSymbol BoxedIntClass() {
         return (this.bitmap$2 & 288230376151711744L) == 0L ? this.BoxedIntClass$lzycompute() : this.BoxedIntClass;
      }

      private Symbols.ClassSymbol BoxedLongClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 576460752303423488L) == 0L) {
               this.BoxedLongClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Long.class));
               this.bitmap$2 |= 576460752303423488L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxedLongClass;
      }

      public Symbols.ClassSymbol BoxedLongClass() {
         return (this.bitmap$2 & 576460752303423488L) == 0L ? this.BoxedLongClass$lzycompute() : this.BoxedLongClass;
      }

      private Symbols.ClassSymbol BoxedFloatClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 1152921504606846976L) == 0L) {
               this.BoxedFloatClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Float.class));
               this.bitmap$2 |= 1152921504606846976L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxedFloatClass;
      }

      public Symbols.ClassSymbol BoxedFloatClass() {
         return (this.bitmap$2 & 1152921504606846976L) == 0L ? this.BoxedFloatClass$lzycompute() : this.BoxedFloatClass;
      }

      private Symbols.ClassSymbol BoxedDoubleClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 2305843009213693952L) == 0L) {
               this.BoxedDoubleClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Double.class));
               this.bitmap$2 |= 2305843009213693952L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxedDoubleClass;
      }

      public Symbols.ClassSymbol BoxedDoubleClass() {
         return (this.bitmap$2 & 2305843009213693952L) == 0L ? this.BoxedDoubleClass$lzycompute() : this.BoxedDoubleClass;
      }

      private Symbols.ClassSymbol BoxedUnitClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & 4611686018427387904L) == 0L) {
               this.BoxedUnitClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(BoxedUnit.class));
               this.bitmap$2 |= 4611686018427387904L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxedUnitClass;
      }

      public Symbols.ClassSymbol BoxedUnitClass() {
         return (this.bitmap$2 & 4611686018427387904L) == 0L ? this.BoxedUnitClass$lzycompute() : this.BoxedUnitClass;
      }

      private Symbols.ModuleSymbol BoxedUnitModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$2 & Long.MIN_VALUE) == 0L) {
               this.BoxedUnitModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getRequiredModule("scala.runtime.BoxedUnit");
               this.bitmap$2 |= Long.MIN_VALUE;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BoxedUnitModule;
      }

      public Symbols.ModuleSymbol BoxedUnitModule() {
         return (this.bitmap$2 & Long.MIN_VALUE) == 0L ? this.BoxedUnitModule$lzycompute() : this.BoxedUnitModule;
      }

      public Symbols.TermSymbol BoxedUnit_UNIT() {
         return this.getMemberValue(this.BoxedUnitModule(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().UNIT());
      }

      public Symbols.TermSymbol BoxedUnit_TYPE() {
         return this.getMemberValue(this.BoxedUnitModule(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().TYPE_());
      }

      private Symbols.ClassSymbol AnnotationClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 1L) == 0L) {
               this.AnnotationClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Annotation.class));
               this.bitmap$3 |= 1L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.AnnotationClass;
      }

      public Symbols.ClassSymbol AnnotationClass() {
         return (this.bitmap$3 & 1L) == 0L ? this.AnnotationClass$lzycompute() : this.AnnotationClass;
      }

      private Symbols.Symbol ConstantAnnotationClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 2L) == 0L) {
               this.ConstantAnnotationClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.annotation.ConstantAnnotation");
               this.bitmap$3 |= 2L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ConstantAnnotationClass;
      }

      public Symbols.Symbol ConstantAnnotationClass() {
         return (this.bitmap$3 & 2L) == 0L ? this.ConstantAnnotationClass$lzycompute() : this.ConstantAnnotationClass;
      }

      private Symbols.ClassSymbol StaticAnnotationClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 4L) == 0L) {
               this.StaticAnnotationClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(StaticAnnotation.class));
               this.bitmap$3 |= 4L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.StaticAnnotationClass;
      }

      public Symbols.ClassSymbol StaticAnnotationClass() {
         return (this.bitmap$3 & 4L) == 0L ? this.StaticAnnotationClass$lzycompute() : this.StaticAnnotationClass;
      }

      private Symbols.ClassSymbol AnnotationRetentionAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 8L) == 0L) {
               this.AnnotationRetentionAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Retention.class));
               this.bitmap$3 |= 8L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.AnnotationRetentionAttr;
      }

      public Symbols.ClassSymbol AnnotationRetentionAttr() {
         return (this.bitmap$3 & 8L) == 0L ? this.AnnotationRetentionAttr$lzycompute() : this.AnnotationRetentionAttr;
      }

      private Symbols.ClassSymbol AnnotationRetentionPolicyAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 16L) == 0L) {
               this.AnnotationRetentionPolicyAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(RetentionPolicy.class));
               this.bitmap$3 |= 16L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.AnnotationRetentionPolicyAttr;
      }

      public Symbols.ClassSymbol AnnotationRetentionPolicyAttr() {
         return (this.bitmap$3 & 16L) == 0L ? this.AnnotationRetentionPolicyAttr$lzycompute() : this.AnnotationRetentionPolicyAttr;
      }

      private Symbols.ClassSymbol AnnotationRepeatableAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 32L) == 0L) {
               this.AnnotationRepeatableAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Repeatable.class));
               this.bitmap$3 |= 32L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.AnnotationRepeatableAttr;
      }

      public Symbols.ClassSymbol AnnotationRepeatableAttr() {
         return (this.bitmap$3 & 32L) == 0L ? this.AnnotationRepeatableAttr$lzycompute() : this.AnnotationRepeatableAttr;
      }

      private Symbols.ClassSymbol ElidableMethodClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 64L) == 0L) {
               this.ElidableMethodClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(elidable.class));
               this.bitmap$3 |= 64L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ElidableMethodClass;
      }

      public Symbols.ClassSymbol ElidableMethodClass() {
         return (this.bitmap$3 & 64L) == 0L ? this.ElidableMethodClass$lzycompute() : this.ElidableMethodClass;
      }

      private Symbols.ClassSymbol ImplicitNotFoundClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 128L) == 0L) {
               this.ImplicitNotFoundClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(implicitNotFound.class));
               this.bitmap$3 |= 128L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ImplicitNotFoundClass;
      }

      public Symbols.ClassSymbol ImplicitNotFoundClass() {
         return (this.bitmap$3 & 128L) == 0L ? this.ImplicitNotFoundClass$lzycompute() : this.ImplicitNotFoundClass;
      }

      private Symbols.Symbol ImplicitAmbiguousClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 256L) == 0L) {
               this.ImplicitAmbiguousClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.annotation.implicitAmbiguous");
               this.bitmap$3 |= 256L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ImplicitAmbiguousClass;
      }

      public Symbols.Symbol ImplicitAmbiguousClass() {
         return (this.bitmap$3 & 256L) == 0L ? this.ImplicitAmbiguousClass$lzycompute() : this.ImplicitAmbiguousClass;
      }

      private Symbols.ClassSymbol MigrationAnnotationClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 512L) == 0L) {
               this.MigrationAnnotationClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(migration.class));
               this.bitmap$3 |= 512L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.MigrationAnnotationClass;
      }

      public Symbols.ClassSymbol MigrationAnnotationClass() {
         return (this.bitmap$3 & 512L) == 0L ? this.MigrationAnnotationClass$lzycompute() : this.MigrationAnnotationClass;
      }

      private Symbols.ClassSymbol ScalaStrictFPAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 1024L) == 0L) {
               this.ScalaStrictFPAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(strictfp.class));
               this.bitmap$3 |= 1024L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaStrictFPAttr;
      }

      public Symbols.ClassSymbol ScalaStrictFPAttr() {
         return (this.bitmap$3 & 1024L) == 0L ? this.ScalaStrictFPAttr$lzycompute() : this.ScalaStrictFPAttr;
      }

      private Symbols.ClassSymbol SwitchClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 2048L) == 0L) {
               this.SwitchClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(switch.class));
               this.bitmap$3 |= 2048L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SwitchClass;
      }

      public Symbols.ClassSymbol SwitchClass() {
         return (this.bitmap$3 & 2048L) == 0L ? this.SwitchClass$lzycompute() : this.SwitchClass;
      }

      private Symbols.ClassSymbol TailrecClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 4096L) == 0L) {
               this.TailrecClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(tailrec.class));
               this.bitmap$3 |= 4096L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.TailrecClass;
      }

      public Symbols.ClassSymbol TailrecClass() {
         return (this.bitmap$3 & 4096L) == 0L ? this.TailrecClass$lzycompute() : this.TailrecClass;
      }

      private Symbols.ClassSymbol VarargsClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 8192L) == 0L) {
               this.VarargsClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(varargs.class));
               this.bitmap$3 |= 8192L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.VarargsClass;
      }

      public Symbols.ClassSymbol VarargsClass() {
         return (this.bitmap$3 & 8192L) == 0L ? this.VarargsClass$lzycompute() : this.VarargsClass;
      }

      private Symbols.Symbol NowarnClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 16384L) == 0L) {
               this.NowarnClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.annotation.nowarn");
               this.bitmap$3 |= 16384L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.NowarnClass;
      }

      public Symbols.Symbol NowarnClass() {
         return (this.bitmap$3 & 16384L) == 0L ? this.NowarnClass$lzycompute() : this.NowarnClass;
      }

      private Symbols.ClassSymbol uncheckedStableClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 32768L) == 0L) {
               this.uncheckedStableClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(uncheckedStable.class));
               this.bitmap$3 |= 32768L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.uncheckedStableClass;
      }

      public Symbols.ClassSymbol uncheckedStableClass() {
         return (this.bitmap$3 & 32768L) == 0L ? this.uncheckedStableClass$lzycompute() : this.uncheckedStableClass;
      }

      private Symbols.ClassSymbol uncheckedVarianceClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 65536L) == 0L) {
               this.uncheckedVarianceClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(uncheckedVariance.class));
               this.bitmap$3 |= 65536L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.uncheckedVarianceClass;
      }

      public Symbols.ClassSymbol uncheckedVarianceClass() {
         return (this.bitmap$3 & 65536L) == 0L ? this.uncheckedVarianceClass$lzycompute() : this.uncheckedVarianceClass;
      }

      private Symbols.Symbol ChildAnnotationClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 131072L) == 0L) {
               this.ChildAnnotationClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.annotation.internal.Child");
               this.bitmap$3 |= 131072L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ChildAnnotationClass;
      }

      public Symbols.Symbol ChildAnnotationClass() {
         return (this.bitmap$3 & 131072L) == 0L ? this.ChildAnnotationClass$lzycompute() : this.ChildAnnotationClass;
      }

      private Symbols.Symbol RepeatedAnnotationClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 262144L) == 0L) {
               this.RepeatedAnnotationClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.annotation.internal.Repeated");
               this.bitmap$3 |= 262144L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.RepeatedAnnotationClass;
      }

      public Symbols.Symbol RepeatedAnnotationClass() {
         return (this.bitmap$3 & 262144L) == 0L ? this.RepeatedAnnotationClass$lzycompute() : this.RepeatedAnnotationClass;
      }

      private Symbols.Symbol TargetNameAnnotationClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 524288L) == 0L) {
               this.TargetNameAnnotationClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.annotation.targetName");
               this.bitmap$3 |= 524288L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.TargetNameAnnotationClass;
      }

      public Symbols.Symbol TargetNameAnnotationClass() {
         return (this.bitmap$3 & 524288L) == 0L ? this.TargetNameAnnotationClass$lzycompute() : this.TargetNameAnnotationClass;
      }

      private Symbols.Symbol StaticMethodAnnotationClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 1048576L) == 0L) {
               this.StaticMethodAnnotationClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.annotation.static");
               this.bitmap$3 |= 1048576L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.StaticMethodAnnotationClass;
      }

      public Symbols.Symbol StaticMethodAnnotationClass() {
         return (this.bitmap$3 & 1048576L) == 0L ? this.StaticMethodAnnotationClass$lzycompute() : this.StaticMethodAnnotationClass;
      }

      private Symbols.Symbol PolyFunctionClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 2097152L) == 0L) {
               this.PolyFunctionClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.PolyFunction");
               this.bitmap$3 |= 2097152L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.PolyFunctionClass;
      }

      public Symbols.Symbol PolyFunctionClass() {
         return (this.bitmap$3 & 2097152L) == 0L ? this.PolyFunctionClass$lzycompute() : this.PolyFunctionClass;
      }

      private Symbols.Symbol ExperimentalAnnotationClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 4194304L) == 0L) {
               this.ExperimentalAnnotationClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.annotation.experimental");
               this.bitmap$3 |= 4194304L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ExperimentalAnnotationClass;
      }

      public Symbols.Symbol ExperimentalAnnotationClass() {
         return (this.bitmap$3 & 4194304L) == 0L ? this.ExperimentalAnnotationClass$lzycompute() : this.ExperimentalAnnotationClass;
      }

      private Symbols.Symbol AnnotationDefaultClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 8388608L) == 0L) {
               this.AnnotationDefaultClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.annotation.internal.AnnotationDefault");
               this.bitmap$3 |= 8388608L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.AnnotationDefaultClass;
      }

      public Symbols.Symbol AnnotationDefaultClass() {
         return (this.bitmap$3 & 8388608L) == 0L ? this.AnnotationDefaultClass$lzycompute() : this.AnnotationDefaultClass;
      }

      private Symbols.ClassSymbol JavaAnnotationClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 16777216L) == 0L) {
               this.JavaAnnotationClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(java.lang.annotation.Annotation.class));
               this.bitmap$3 |= 16777216L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaAnnotationClass;
      }

      public Symbols.ClassSymbol JavaAnnotationClass() {
         return (this.bitmap$3 & 16777216L) == 0L ? this.JavaAnnotationClass$lzycompute() : this.JavaAnnotationClass;
      }

      private Symbols.ClassSymbol BeanPropertyAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 33554432L) == 0L) {
               this.BeanPropertyAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(BeanProperty.class));
               this.bitmap$3 |= 33554432L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BeanPropertyAttr;
      }

      public Symbols.ClassSymbol BeanPropertyAttr() {
         return (this.bitmap$3 & 33554432L) == 0L ? this.BeanPropertyAttr$lzycompute() : this.BeanPropertyAttr;
      }

      private Symbols.ClassSymbol BooleanBeanPropertyAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 67108864L) == 0L) {
               this.BooleanBeanPropertyAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(BooleanBeanProperty.class));
               this.bitmap$3 |= 67108864L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BooleanBeanPropertyAttr;
      }

      public Symbols.ClassSymbol BooleanBeanPropertyAttr() {
         return (this.bitmap$3 & 67108864L) == 0L ? this.BooleanBeanPropertyAttr$lzycompute() : this.BooleanBeanPropertyAttr;
      }

      private Symbols.Symbol CompileTimeOnlyAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 134217728L) == 0L) {
               this.CompileTimeOnlyAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.annotation.compileTimeOnly");
               this.bitmap$3 |= 134217728L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.CompileTimeOnlyAttr;
      }

      public Symbols.Symbol CompileTimeOnlyAttr() {
         return (this.bitmap$3 & 134217728L) == 0L ? this.CompileTimeOnlyAttr$lzycompute() : this.CompileTimeOnlyAttr;
      }

      private Symbols.ClassSymbol DeprecatedAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 268435456L) == 0L) {
               this.DeprecatedAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(deprecated.class));
               this.bitmap$3 |= 268435456L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.DeprecatedAttr;
      }

      public Symbols.ClassSymbol DeprecatedAttr() {
         return (this.bitmap$3 & 268435456L) == 0L ? this.DeprecatedAttr$lzycompute() : this.DeprecatedAttr;
      }

      private Symbols.ClassSymbol DeprecatedNameAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 536870912L) == 0L) {
               this.DeprecatedNameAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(deprecatedName.class));
               this.bitmap$3 |= 536870912L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.DeprecatedNameAttr;
      }

      public Symbols.ClassSymbol DeprecatedNameAttr() {
         return (this.bitmap$3 & 536870912L) == 0L ? this.DeprecatedNameAttr$lzycompute() : this.DeprecatedNameAttr;
      }

      private Symbols.ClassSymbol DeprecatedInheritanceAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 1073741824L) == 0L) {
               this.DeprecatedInheritanceAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(deprecatedInheritance.class));
               this.bitmap$3 |= 1073741824L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.DeprecatedInheritanceAttr;
      }

      public Symbols.ClassSymbol DeprecatedInheritanceAttr() {
         return (this.bitmap$3 & 1073741824L) == 0L ? this.DeprecatedInheritanceAttr$lzycompute() : this.DeprecatedInheritanceAttr;
      }

      private Symbols.ClassSymbol DeprecatedOverridingAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 2147483648L) == 0L) {
               this.DeprecatedOverridingAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(deprecatedOverriding.class));
               this.bitmap$3 |= 2147483648L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.DeprecatedOverridingAttr;
      }

      public Symbols.ClassSymbol DeprecatedOverridingAttr() {
         return (this.bitmap$3 & 2147483648L) == 0L ? this.DeprecatedOverridingAttr$lzycompute() : this.DeprecatedOverridingAttr;
      }

      private Symbols.ClassSymbol NativeAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 4294967296L) == 0L) {
               this.NativeAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(native.class));
               this.bitmap$3 |= 4294967296L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.NativeAttr;
      }

      public Symbols.ClassSymbol NativeAttr() {
         return (this.bitmap$3 & 4294967296L) == 0L ? this.NativeAttr$lzycompute() : this.NativeAttr;
      }

      private Symbols.ClassSymbol ScalaInlineClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 8589934592L) == 0L) {
               this.ScalaInlineClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(inline.class));
               this.bitmap$3 |= 8589934592L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaInlineClass;
      }

      public Symbols.ClassSymbol ScalaInlineClass() {
         return (this.bitmap$3 & 8589934592L) == 0L ? this.ScalaInlineClass$lzycompute() : this.ScalaInlineClass;
      }

      private Symbols.ClassSymbol ScalaNoInlineClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 17179869184L) == 0L) {
               this.ScalaNoInlineClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(noinline.class));
               this.bitmap$3 |= 17179869184L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ScalaNoInlineClass;
      }

      public Symbols.ClassSymbol ScalaNoInlineClass() {
         return (this.bitmap$3 & 17179869184L) == 0L ? this.ScalaNoInlineClass$lzycompute() : this.ScalaNoInlineClass;
      }

      private Symbols.ClassSymbol SerialVersionUIDAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 34359738368L) == 0L) {
               this.SerialVersionUIDAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(SerialVersionUID.class));
               this.bitmap$3 |= 34359738368L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SerialVersionUIDAttr;
      }

      public Symbols.ClassSymbol SerialVersionUIDAttr() {
         return (this.bitmap$3 & 34359738368L) == 0L ? this.SerialVersionUIDAttr$lzycompute() : this.SerialVersionUIDAttr;
      }

      private AnnotationInfos.AnnotationInfo SerialVersionUIDAnnotation$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 68719476736L) == 0L) {
               AnnotationInfos.AnnotationInfo$ var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().AnnotationInfo();
               Symbols.ClassSymbol var10002 = this.SerialVersionUIDAttr();
               if (var10002 == null) {
                  throw null;
               }

               Types.Type var7 = ((Symbols.Symbol)var10002).tpe_$times();
               Nil var10003 = .MODULE$;
               Predef.ArrowAssoc var10006 = scala.Predef.ArrowAssoc..MODULE$;
               Names.TermName var8 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().value();
               AnnotationInfos.LiteralAnnotArg $minus$greater$extension_y = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new LiteralAnnotArg(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new Constant(0));
               Object $minus$greater$extension_$this = var8;
               Tuple2 var9 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_y);
               $minus$greater$extension_$this = null;
               $minus$greater$extension_y = null;
               this.SerialVersionUIDAnnotation = var10001.apply(var7, var10003, new scala.collection.immutable..colon.colon(var9, .MODULE$));
               this.bitmap$3 |= 68719476736L;
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.SerialVersionUIDAnnotation;
      }

      public AnnotationInfos.AnnotationInfo SerialVersionUIDAnnotation() {
         return (this.bitmap$3 & 68719476736L) == 0L ? this.SerialVersionUIDAnnotation$lzycompute() : this.SerialVersionUIDAnnotation;
      }

      private Symbols.ClassSymbol SpecializedClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 137438953472L) == 0L) {
               this.SpecializedClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(specialized.class));
               this.bitmap$3 |= 137438953472L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SpecializedClass;
      }

      public Symbols.ClassSymbol SpecializedClass() {
         return (this.bitmap$3 & 137438953472L) == 0L ? this.SpecializedClass$lzycompute() : this.SpecializedClass;
      }

      private Symbols.ClassSymbol ThrowsClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 274877906944L) == 0L) {
               this.ThrowsClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(throws.class));
               this.bitmap$3 |= 274877906944L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ThrowsClass;
      }

      public Symbols.ClassSymbol ThrowsClass() {
         return (this.bitmap$3 & 274877906944L) == 0L ? this.ThrowsClass$lzycompute() : this.ThrowsClass;
      }

      private Symbols.ClassSymbol TransientAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 549755813888L) == 0L) {
               this.TransientAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(transient.class));
               this.bitmap$3 |= 549755813888L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.TransientAttr;
      }

      public Symbols.ClassSymbol TransientAttr() {
         return (this.bitmap$3 & 549755813888L) == 0L ? this.TransientAttr$lzycompute() : this.TransientAttr;
      }

      private Symbols.ClassSymbol UncheckedClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 1099511627776L) == 0L) {
               this.UncheckedClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(unchecked.class));
               this.bitmap$3 |= 1099511627776L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.UncheckedClass;
      }

      public Symbols.ClassSymbol UncheckedClass() {
         return (this.bitmap$3 & 1099511627776L) == 0L ? this.UncheckedClass$lzycompute() : this.UncheckedClass;
      }

      private Symbols.Symbol UncheckedBoundsClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 2199023255552L) == 0L) {
               this.UncheckedBoundsClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.reflect.internal.annotations.uncheckedBounds");
               this.bitmap$3 |= 2199023255552L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.UncheckedBoundsClass;
      }

      public Symbols.Symbol UncheckedBoundsClass() {
         return (this.bitmap$3 & 2199023255552L) == 0L ? this.UncheckedBoundsClass$lzycompute() : this.UncheckedBoundsClass;
      }

      private Symbols.ClassSymbol UnspecializedClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 4398046511104L) == 0L) {
               this.UnspecializedClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(unspecialized.class));
               this.bitmap$3 |= 4398046511104L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.UnspecializedClass;
      }

      public Symbols.ClassSymbol UnspecializedClass() {
         return (this.bitmap$3 & 4398046511104L) == 0L ? this.UnspecializedClass$lzycompute() : this.UnspecializedClass;
      }

      private Symbols.ClassSymbol UnusedClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 8796093022208L) == 0L) {
               this.UnusedClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(unused.class));
               this.bitmap$3 |= 8796093022208L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.UnusedClass;
      }

      public Symbols.ClassSymbol UnusedClass() {
         return (this.bitmap$3 & 8796093022208L) == 0L ? this.UnusedClass$lzycompute() : this.UnusedClass;
      }

      private Symbols.ClassSymbol VolatileAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 17592186044416L) == 0L) {
               this.VolatileAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(volatile.class));
               this.bitmap$3 |= 17592186044416L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.VolatileAttr;
      }

      public Symbols.ClassSymbol VolatileAttr() {
         return (this.bitmap$3 & 17592186044416L) == 0L ? this.VolatileAttr$lzycompute() : this.VolatileAttr;
      }

      private Symbols.ClassSymbol JavaDeprecatedAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 35184372088832L) == 0L) {
               this.JavaDeprecatedAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Deprecated.class));
               this.bitmap$3 |= 35184372088832L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.JavaDeprecatedAttr;
      }

      public Symbols.ClassSymbol JavaDeprecatedAttr() {
         return (this.bitmap$3 & 35184372088832L) == 0L ? this.JavaDeprecatedAttr$lzycompute() : this.JavaDeprecatedAttr;
      }

      private Symbols.ClassSymbol FunctionalInterfaceClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 70368744177664L) == 0L) {
               this.FunctionalInterfaceClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(FunctionalInterface.class));
               this.bitmap$3 |= 70368744177664L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.FunctionalInterfaceClass;
      }

      public Symbols.ClassSymbol FunctionalInterfaceClass() {
         return (this.bitmap$3 & 70368744177664L) == 0L ? this.FunctionalInterfaceClass$lzycompute() : this.FunctionalInterfaceClass;
      }

      private Symbols.ClassSymbol BeanGetterTargetClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 140737488355328L) == 0L) {
               this.BeanGetterTargetClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(beanGetter.class));
               this.bitmap$3 |= 140737488355328L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BeanGetterTargetClass;
      }

      public Symbols.ClassSymbol BeanGetterTargetClass() {
         return (this.bitmap$3 & 140737488355328L) == 0L ? this.BeanGetterTargetClass$lzycompute() : this.BeanGetterTargetClass;
      }

      private Symbols.ClassSymbol BeanSetterTargetClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 281474976710656L) == 0L) {
               this.BeanSetterTargetClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(beanSetter.class));
               this.bitmap$3 |= 281474976710656L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.BeanSetterTargetClass;
      }

      public Symbols.ClassSymbol BeanSetterTargetClass() {
         return (this.bitmap$3 & 281474976710656L) == 0L ? this.BeanSetterTargetClass$lzycompute() : this.BeanSetterTargetClass;
      }

      private Symbols.ClassSymbol FieldTargetClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 562949953421312L) == 0L) {
               this.FieldTargetClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(field.class));
               this.bitmap$3 |= 562949953421312L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.FieldTargetClass;
      }

      public Symbols.ClassSymbol FieldTargetClass() {
         return (this.bitmap$3 & 562949953421312L) == 0L ? this.FieldTargetClass$lzycompute() : this.FieldTargetClass;
      }

      private Symbols.ClassSymbol GetterTargetClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 1125899906842624L) == 0L) {
               this.GetterTargetClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(getter.class));
               this.bitmap$3 |= 1125899906842624L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.GetterTargetClass;
      }

      public Symbols.ClassSymbol GetterTargetClass() {
         return (this.bitmap$3 & 1125899906842624L) == 0L ? this.GetterTargetClass$lzycompute() : this.GetterTargetClass;
      }

      private Symbols.ClassSymbol ParamTargetClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 2251799813685248L) == 0L) {
               this.ParamTargetClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(param.class));
               this.bitmap$3 |= 2251799813685248L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ParamTargetClass;
      }

      public Symbols.ClassSymbol ParamTargetClass() {
         return (this.bitmap$3 & 2251799813685248L) == 0L ? this.ParamTargetClass$lzycompute() : this.ParamTargetClass;
      }

      private Symbols.ClassSymbol SetterTargetClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 4503599627370496L) == 0L) {
               this.SetterTargetClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(setter.class));
               this.bitmap$3 |= 4503599627370496L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.SetterTargetClass;
      }

      public Symbols.ClassSymbol SetterTargetClass() {
         return (this.bitmap$3 & 4503599627370496L) == 0L ? this.SetterTargetClass$lzycompute() : this.SetterTargetClass;
      }

      private Symbols.ClassSymbol ObjectTargetClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 9007199254740992L) == 0L) {
               this.ObjectTargetClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(companionObject.class));
               this.bitmap$3 |= 9007199254740992L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ObjectTargetClass;
      }

      public Symbols.ClassSymbol ObjectTargetClass() {
         return (this.bitmap$3 & 9007199254740992L) == 0L ? this.ObjectTargetClass$lzycompute() : this.ObjectTargetClass;
      }

      private Symbols.ClassSymbol ClassTargetClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 18014398509481984L) == 0L) {
               this.ClassTargetClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(companionClass.class));
               this.bitmap$3 |= 18014398509481984L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ClassTargetClass;
      }

      public Symbols.ClassSymbol ClassTargetClass() {
         return (this.bitmap$3 & 18014398509481984L) == 0L ? this.ClassTargetClass$lzycompute() : this.ClassTargetClass;
      }

      private Symbols.ClassSymbol MethodTargetClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 36028797018963968L) == 0L) {
               this.MethodTargetClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(companionMethod.class));
               this.bitmap$3 |= 36028797018963968L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.MethodTargetClass;
      }

      public Symbols.ClassSymbol MethodTargetClass() {
         return (this.bitmap$3 & 36028797018963968L) == 0L ? this.MethodTargetClass$lzycompute() : this.MethodTargetClass;
      }

      private Symbols.ClassSymbol LanguageFeatureAnnot$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 72057594037927936L) == 0L) {
               this.LanguageFeatureAnnot = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(languageFeature.class));
               this.bitmap$3 |= 72057594037927936L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.LanguageFeatureAnnot;
      }

      public Symbols.ClassSymbol LanguageFeatureAnnot() {
         return (this.bitmap$3 & 72057594037927936L) == 0L ? this.LanguageFeatureAnnot$lzycompute() : this.LanguageFeatureAnnot;
      }

      private Symbols.ClassSymbol InheritedAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 144115188075855872L) == 0L) {
               this.InheritedAttr = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredClass(scala.reflect.ClassTag..MODULE$.apply(Inherited.class));
               this.bitmap$3 |= 144115188075855872L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.InheritedAttr;
      }

      public Symbols.ClassSymbol InheritedAttr() {
         return (this.bitmap$3 & 144115188075855872L) == 0L ? this.InheritedAttr$lzycompute() : this.InheritedAttr;
      }

      private List JUnitAnnotations$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 288230376151711744L) == 0L) {
               List map_this = new scala.collection.immutable..colon.colon("Test", new scala.collection.immutable..colon.colon("Ignore", new scala.collection.immutable..colon.colon("Before", new scala.collection.immutable..colon.colon("After", new scala.collection.immutable..colon.colon("BeforeClass", new scala.collection.immutable..colon.colon("AfterClass", .MODULE$))))));
               Object var10001;
               if (map_this == .MODULE$) {
                  var10001 = .MODULE$;
               } else {
                  String var6 = (String)map_this.head();
                  scala.collection.immutable..colon.colon map_h = new scala.collection.immutable..colon.colon($anonfun$JUnitAnnotations$1(this, var6), .MODULE$);
                  scala.collection.immutable..colon.colon map_t = map_h;

                  for(List map_rest = ((scala.collection.immutable..colon.colon)map_this).next(); map_rest != .MODULE$; map_rest = (List)map_rest.tail()) {
                     var6 = (String)map_rest.head();
                     scala.collection.immutable..colon.colon map_nx = new scala.collection.immutable..colon.colon($anonfun$JUnitAnnotations$1(this, var6), .MODULE$);
                     map_t.next_$eq(map_nx);
                     map_t = map_nx;
                  }

                  Statics.releaseFence();
                  var10001 = map_h;
               }

               map_this = null;
               Object var10 = null;
               Object var11 = null;
               Object var12 = null;
               Object var13 = null;
               this.JUnitAnnotations = (List)var10001;
               this.bitmap$3 |= 288230376151711744L;
            }
         } catch (Throwable var8) {
            throw var8;
         }

         return this.JUnitAnnotations;
      }

      public List JUnitAnnotations() {
         return (this.bitmap$3 & 288230376151711744L) == 0L ? this.JUnitAnnotations$lzycompute() : this.JUnitAnnotations;
      }

      private Symbols.ModuleSymbol languageFeatureModule$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 576460752303423488L) == 0L) {
               this.languageFeatureModule = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getRequiredModule("scala.languageFeature");
               this.bitmap$3 |= 576460752303423488L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.languageFeatureModule;
      }

      public Symbols.ModuleSymbol languageFeatureModule() {
         return (this.bitmap$3 & 576460752303423488L) == 0L ? this.languageFeatureModule$lzycompute() : this.languageFeatureModule;
      }

      public final boolean isMetaAnnotation(final Symbols.Symbol sym) {
         while(true) {
            Set var10000 = this.metaAnnotations();
            if (var10000 == null) {
               throw null;
            }

            if (!var10000.contains(sym)) {
               if (sym.isAliasType()) {
                  sym = sym.info().typeSymbol();
                  continue;
               }

               return false;
            }

            return true;
         }
      }

      private Set metaAnnotations$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 1152921504606846976L) == 0L) {
               this.metaAnnotations = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getPackage("scala.annotation.meta").info().members().filter((x$26) -> BoxesRunTime.boxToBoolean($anonfun$metaAnnotations$1(this, x$26))).toSet();
               this.bitmap$3 |= 1152921504606846976L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.metaAnnotations;
      }

      public Set metaAnnotations() {
         return (this.bitmap$3 & 1152921504606846976L) == 0L ? this.metaAnnotations$lzycompute() : this.metaAnnotations;
      }

      public Symbols.Symbol defaultAnnotationTarget(final Trees.Tree t) {
         boolean var2 = false;
         Trees.ValDef var3 = null;
         if (t instanceof Trees.ClassDef) {
            return this.ClassTargetClass();
         } else if (t instanceof Trees.ModuleDef) {
            return this.ObjectTargetClass();
         } else {
            if (t instanceof Trees.ValDef) {
               var2 = true;
               var3 = (Trees.ValDef)t;
               if (var3.symbol().isParamAccessor()) {
                  return this.ParamTargetClass();
               }
            }

            if (var2 && var3.symbol().isValueParameter()) {
               return this.ParamTargetClass();
            } else if (var2) {
               return this.FieldTargetClass();
            } else {
               return t instanceof Trees.DefDef ? this.MethodTargetClass() : this.GetterTargetClass();
            }
         }
      }

      private Symbols.ClassSymbol AnnotationDefaultAttr$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 2305843009213693952L) == 0L) {
               Symbols.ClassSymbol sym = this.RuntimePackageClass().newClassSymbol(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().AnnotationDefaultATTR(), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoPosition(), 0L);
               Types.ClassInfoType var10002 = new Types.ClassInfoType;
               SymbolTable var10004 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               scala.collection.immutable..colon.colon var10005 = new scala.collection.immutable..colon.colon;
               Symbols.ClassSymbol var10007 = this.StaticAnnotationClass();
               if (var10007 == null) {
                  throw null;
               }

               var10005.<init>(((Symbols.Symbol)var10007).tpe_$times(), .MODULE$);
               var10002.<init>(var10005, this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().newScope(), sym);
               sym.setInfo(var10002);
               SymbolTable var10001 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               if (var10001 == null) {
                  throw null;
               }

               Symbols.markAllCompleted$(var10001, sym);
               List var57 = this.RuntimePackageClass().info().decls().toList();
               if (var57 == null) {
                  throw null;
               }

               List filter_this = var57;
               boolean filter_filterCommon_isFlipped = false;
               List filter_filterCommon_noneIn$1_l = filter_this;

               while(true) {
                  if (filter_filterCommon_noneIn$1_l.isEmpty()) {
                     var58 = .MODULE$;
                     break;
                  }

                  Object filter_filterCommon_noneIn$1_h = filter_filterCommon_noneIn$1_l.head();
                  List filter_filterCommon_noneIn$1_t = (List)filter_filterCommon_noneIn$1_l.tail();
                  Symbols.Symbol var19 = (Symbols.Symbol)filter_filterCommon_noneIn$1_h;
                  if ($anonfun$AnnotationDefaultAttr$1(sym, var19) != filter_filterCommon_isFlipped) {
                     List filter_filterCommon_noneIn$1_allIn$1_remaining = filter_filterCommon_noneIn$1_t;

                     while(true) {
                        if (filter_filterCommon_noneIn$1_allIn$1_remaining.isEmpty()) {
                           var58 = filter_filterCommon_noneIn$1_l;
                           break;
                        }

                        Object filter_filterCommon_noneIn$1_allIn$1_x = filter_filterCommon_noneIn$1_allIn$1_remaining.head();
                        var19 = (Symbols.Symbol)filter_filterCommon_noneIn$1_allIn$1_x;
                        if ($anonfun$AnnotationDefaultAttr$1(sym, var19) == filter_filterCommon_isFlipped) {
                           scala.collection.immutable..colon.colon filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead = new scala.collection.immutable..colon.colon(filter_filterCommon_noneIn$1_l.head(), .MODULE$);
                           List filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess = (List)filter_filterCommon_noneIn$1_l.tail();

                           scala.collection.immutable..colon.colon filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast;
                           for(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead; filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess != filter_filterCommon_noneIn$1_allIn$1_remaining; filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess.tail()) {
                              scala.collection.immutable..colon.colon filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem = new scala.collection.immutable..colon.colon(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess.head(), .MODULE$);
                              filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem);
                              filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem;
                           }

                           List filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filter_filterCommon_noneIn$1_allIn$1_remaining.tail();
                           List filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next;

                           while(!filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.isEmpty()) {
                              Object filter_filterCommon_noneIn$1_allIn$1_partialFill$1_head = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.head();
                              var19 = (Symbols.Symbol)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_head;
                              if ($anonfun$AnnotationDefaultAttr$1(sym, var19) != filter_filterCommon_isFlipped) {
                                 filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                              } else {
                                 while(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy != filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next) {
                                    scala.collection.immutable..colon.colon filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem = new scala.collection.immutable..colon.colon(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.head(), .MODULE$);
                                    filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem);
                                    filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem;
                                    filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.tail();
                                 }

                                 filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                                 filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                              }
                           }

                           if (!filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.isEmpty()) {
                              filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy);
                           }

                           var58 = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead;
                           Object var31 = null;
                           Object var34 = null;
                           Object var37 = null;
                           Object var40 = null;
                           Object var43 = null;
                           Object var46 = null;
                           Object var49 = null;
                           Object var52 = null;
                           break;
                        }

                        filter_filterCommon_noneIn$1_allIn$1_remaining = (List)filter_filterCommon_noneIn$1_allIn$1_remaining.tail();
                     }

                     Object var27 = null;
                     Object var29 = null;
                     Object var32 = null;
                     Object var35 = null;
                     Object var38 = null;
                     Object var41 = null;
                     Object var44 = null;
                     Object var47 = null;
                     Object var50 = null;
                     Object var53 = null;
                     break;
                  }

                  filter_filterCommon_noneIn$1_l = filter_filterCommon_noneIn$1_t;
               }

               Object var24 = null;
               Object var25 = null;
               Object var26 = null;
               Object var28 = null;
               Object var30 = null;
               Object var33 = null;
               Object var36 = null;
               Object var39 = null;
               Object var42 = null;
               Object var45 = null;
               Object var48 = null;
               Object var51 = null;
               Object var54 = null;
               List filter_filterCommon_result = (List)var58;
               Statics.releaseFence();
               Object var59 = filter_filterCommon_result;
               Object var22 = null;
               filter_filterCommon_result = null;
               Object var2 = var59;
               Symbols.ClassSymbol var60;
               if (var2 instanceof scala.collection.immutable..colon.colon) {
                  var60 = (Symbols.ClassSymbol)((Symbols.Symbol)((scala.collection.immutable..colon.colon)var2).head());
               } else {
                  this.RuntimePackageClass().info().decls().enter(sym);
                  sym.info().decls().enter(sym.newClassConstructor(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoPosition()));
                  var60 = sym;
               }

               this.AnnotationDefaultAttr = var60;
               this.bitmap$3 |= 2305843009213693952L;
            }
         } catch (Throwable var21) {
            throw var21;
         }

         return this.AnnotationDefaultAttr;
      }

      public Symbols.ClassSymbol AnnotationDefaultAttr() {
         return (this.bitmap$3 & 2305843009213693952L) == 0L ? this.AnnotationDefaultAttr$lzycompute() : this.AnnotationDefaultAttr;
      }

      private Nothing fatalMissingSymbol(final Symbols.Symbol owner, final Names.Name name, final String what, final String addendum) {
         throw new FatalError((new StringBuilder(18)).append(owner).append(" does not have a ").append(what).append(" ").append(name).append(addendum).toString());
      }

      private String fatalMissingSymbol$default$3() {
         return "member";
      }

      private String fatalMissingSymbol$default$4() {
         return "";
      }

      public Symbols.Symbol getLanguageFeature(final String name, final Symbols.Symbol owner) {
         return this.getMember(owner, this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().newTypeName(name));
      }

      public Symbols.Symbol getLanguageFeature$default$2() {
         return this.languageFeatureModule();
      }

      public Symbols.Symbol termMember(final Symbols.Symbol owner, final String name) {
         return owner.info().member((Names.Name)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().newTermName(name));
      }

      public Symbols.Symbol findNamedMember(final Names.Name fullName, final Symbols.Symbol root) {
         List segs = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().segments(fullName.toString(), fullName.isTermName());
         if (!segs.isEmpty()) {
            Object var10000 = segs.head();
            if (root == null) {
               throw null;
            } else {
               Names.Name var4 = root.name();
               if (var10000 == null) {
                  if (var4 != null) {
                     return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
                  }
               } else if (!var10000.equals(var4)) {
                  return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
               }

               return this.findNamedMember((List)segs.tail(), root);
            }
         } else {
            return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
         }
      }

      public final Symbols.Symbol findNamedMember(final List segs, final Symbols.Symbol root) {
         while(!segs.isEmpty()) {
            List var10000 = (List)segs.tail();
            root = root.info().member((Names.Name)segs.head());
            segs = var10000;
         }

         return root;
      }

      public Symbols.Symbol getMember(final Symbols.Symbol owner, final Names.Name name) {
         Symbols.Symbol var10000 = this.getMemberIfDefined(owner, name);
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol orElse_this = var10000;
            return orElse_this != orElse_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? orElse_this : $anonfun$getMember$1(this, name, owner);
         }
      }

      public Symbols.TermSymbol getMemberValue(final Symbols.Symbol owner, final Names.Name name) {
         Symbols.Symbol var3 = this.getMember(owner, name.toTermName());
         if (var3 instanceof Symbols.TermSymbol) {
            return (Symbols.TermSymbol)var3;
         } else {
            throw this.fatalMissingSymbol(owner, name, "member value", "");
         }
      }

      public Symbols.ModuleSymbol getMemberModule(final Symbols.Symbol owner, final Names.Name name) {
         Symbols.Symbol var3 = this.getMember(owner, name.toTermName());
         if (var3 instanceof Symbols.ModuleSymbol) {
            return (Symbols.ModuleSymbol)var3;
         } else {
            Symbols.NoSymbol var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
            if (var10000 == null) {
               if (var3 == null) {
                  throw this.fatalMissingSymbol(owner, name, "member object", "");
               }
            } else if (var10000.equals(var3)) {
               throw this.fatalMissingSymbol(owner, name, "member object", "");
            }

            throw this.fatalMissingSymbol(owner, name, "member object", (new StringBuilder(36)).append(". A symbol ").append(var3).append(" of kind ").append(var3.accurateKindString()).append(" already exists.").toString());
         }
      }

      public Symbols.TypeSymbol getTypeMember(final Symbols.Symbol owner, final Names.Name name) {
         Symbols.Symbol var3 = this.getMember(owner, name.toTypeName());
         if (var3 instanceof Symbols.TypeSymbol) {
            return (Symbols.TypeSymbol)var3;
         } else {
            throw this.fatalMissingSymbol(owner, name, "type member", "");
         }
      }

      public Symbols.ClassSymbol getMemberClass(final Symbols.Symbol owner, final Names.Name name) {
         Symbols.Symbol var3 = this.getMember(owner, name.toTypeName());
         if (var3 instanceof Symbols.ClassSymbol) {
            return (Symbols.ClassSymbol)var3;
         } else {
            throw this.fatalMissingSymbol(owner, name, "member class", "");
         }
      }

      public Symbols.TermSymbol getMemberMethod(final Symbols.Symbol owner, final Names.Name name) {
         Symbols.Symbol var3 = this.getMember(owner, name.toTermName());
         if (var3 instanceof Symbols.TermSymbol) {
            Symbols.Symbol var10000 = ((Symbols.TermSymbol)var3).filter((x$28) -> BoxesRunTime.boxToBoolean($anonfun$getMemberMethod$1(x$28)));
            if (var10000 == null) {
               throw null;
            } else {
               Symbols.Symbol orElse_this = var10000;
               if (orElse_this != orElse_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol()) {
                  return (Symbols.TermSymbol)orElse_this;
               } else {
                  throw $anonfun$getMemberMethod$2(this, owner, name);
               }
            }
         } else {
            throw this.miss$1(owner, name);
         }
      }

      public Symbols.TermSymbol getDeclMethod(final Symbols.Symbol owner, final Names.Name name) {
         Symbols.Symbol var3 = this.getDecl(owner, name.toTermName());
         if (var3 instanceof Symbols.TermSymbol) {
            return (Symbols.TermSymbol)var3;
         } else {
            throw this.fatalMissingSymbol(owner, name, "method", "");
         }
      }

      public Symbols.TermSymbol getDeclValue(final Symbols.Symbol owner, final Names.Name name) {
         Symbols.Symbol var3 = this.getDecl(owner, name.toTermName());
         if (var3 instanceof Symbols.TermSymbol) {
            return (Symbols.TermSymbol)var3;
         } else {
            throw this.fatalMissingSymbol(owner, name, "declared value", "");
         }
      }

      private Phase erasurePhase$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & 4611686018427387904L) == 0L) {
               this.erasurePhase = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().findPhaseWithName("erasure");
               this.bitmap$3 |= 4611686018427387904L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.erasurePhase;
      }

      private Phase erasurePhase() {
         return (this.bitmap$3 & 4611686018427387904L) == 0L ? this.erasurePhase$lzycompute() : this.erasurePhase;
      }

      public Symbols.Symbol getMemberIfDefined(final Symbols.Symbol owner, final Names.Name name) {
         SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         Phase enteringPhaseNotLaterThan_target = this.erasurePhase();
         if (var10000 == null) {
            throw null;
         } else {
            SymbolTable enteringPhaseNotLaterThan_this = var10000;
            if (enteringPhaseNotLaterThan_this.isAtPhaseAfter(enteringPhaseNotLaterThan_target)) {
               if (enteringPhaseNotLaterThan_target == enteringPhaseNotLaterThan_this.phase()) {
                  return $anonfun$getMemberIfDefined$1(owner, name);
               } else {
                  Phase enteringPhaseNotLaterThan_enteringPhase_saved = enteringPhaseNotLaterThan_this.pushPhase(enteringPhaseNotLaterThan_target);

                  try {
                     var9 = $anonfun$getMemberIfDefined$1(owner, name);
                  } finally {
                     enteringPhaseNotLaterThan_this.popPhase(enteringPhaseNotLaterThan_enteringPhase_saved);
                  }

                  return var9;
               }
            } else {
               return $anonfun$getMemberIfDefined$1(owner, name);
            }
         }
      }

      public Symbols.Symbol getDecl(final Symbols.Symbol owner, final Names.Name name) {
         Symbols.Symbol var10000 = this.getDeclIfDefined(owner, name);
         if (var10000 == null) {
            throw null;
         } else {
            Symbols.Symbol orElse_this = var10000;
            if (orElse_this != orElse_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol()) {
               return orElse_this;
            } else {
               throw $anonfun$getDecl$1(this, owner, name);
            }
         }
      }

      public Symbols.Symbol getDeclIfDefined(final Symbols.Symbol owner, final Names.Name name) {
         return owner.info().nonPrivateDecl(name);
      }

      private Symbols.AliasTypeSymbol newAlias(final Symbols.Symbol owner, final Names.TypeName name, final Types.Type alias) {
         Position var10000 = owner.newAliasType$default$2();
         long newAliasType_newFlags = 0L;
         Position newAliasType_pos = var10000;
         Symbols.AliasTypeSymbol var8 = owner.createAliasTypeSymbol(name, newAliasType_pos, newAliasType_newFlags);
         newAliasType_pos = null;
         return (Symbols.AliasTypeSymbol)var8.setInfoAndEnter(alias);
      }

      private Symbols.ClassSymbol specialPolyClass(final Names.TypeName name, final long flags, final Function1 parentFn) {
         SymbolTable var10000 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         Symbols.ClassSymbol var10001 = this.ScalaPackageClass();
         Nil var10003 = .MODULE$;
         if (this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer() == null) {
            throw null;
         } else {
            Symbols.ClassSymbol clazz = var10000.scala$reflect$internal$Definitions$$enterNewClass(var10001, name, var10003, 0L);
            Symbols.TypeSymbol tparam = clazz.newSyntheticTypeParam("T0", flags);
            List parents = new scala.collection.immutable..colon.colon(this.AnyRefTpe(), new scala.collection.immutable..colon.colon((Types.Type)parentFn.apply(tparam), .MODULE$));
            return (Symbols.ClassSymbol)clazz.setInfo(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().GenPolyType().apply(new scala.collection.immutable..colon.colon(tparam, .MODULE$), this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new ClassInfoType(parents, this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().newScope(), clazz))).markAllCompleted();
         }
      }

      public Symbols.MethodSymbol newPolyMethod(final int typeParamCount, final Symbols.Symbol owner, final Names.TermName name, final long flags, final Function1 createFn) {
         Names.TermName var10001 = (Names.TermName)name.encode();
         NoPosition$ newMethod_pos = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoPosition();
         Names.TermName newMethod_name = var10001;
         if (owner == null) {
            throw null;
         } else {
            Symbols.MethodSymbol msym;
            List tparams;
            Object var19;
            label23: {
               Symbols.MethodSymbol var10000 = owner.createMethodSymbol(newMethod_name, newMethod_pos, 64L | flags);
               newMethod_name = null;
               newMethod_pos = null;
               msym = var10000;
               tparams = msym.newSyntheticTypeParams(typeParamCount);
               Tuple2 var10 = (Tuple2)createFn.apply(tparams);
               if (var10 != null) {
                  Option var11 = (Option)var10._1();
                  Types.Type restpe = (Types.Type)var10._2();
                  if (var11 instanceof Some) {
                     List formals = (List)((Some)var11).value();
                     var19 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new MethodType(msym.newSyntheticValueParams(formals), restpe);
                     break label23;
                  }
               }

               if (var10 == null) {
                  throw new MatchError((Object)null);
               }

               Types.Type restpe = (Types.Type)var10._2();
               var19 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().new NullaryMethodType(restpe);
            }

            Types.Type mtpe = (Types.Type)var19;
            return (Symbols.MethodSymbol)msym.setInfo(this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().genPolyType(tparams, mtpe)).markAllCompleted();
         }
      }

      public Symbols.MethodSymbol enterNewPolyMethod(final int typeParamCount, final Symbols.Symbol owner, final Names.TermName name, final long flags, final Function1 createFn) {
         Symbols.MethodSymbol m = this.newPolyMethod(typeParamCount, owner, name, flags, createFn);
         owner.info().decls().enter(m);
         return m;
      }

      public Symbols.MethodSymbol newT1NullaryMethod(final Symbols.Symbol owner, final Names.TermName name, final long flags, final Function1 createFn) {
         return this.newPolyMethod(1, owner, name, flags, (tparams) -> new Tuple2(scala.None..MODULE$, createFn.apply(tparams.head())));
      }

      public Symbols.MethodSymbol enterNewT1NullaryMethod(final Symbols.Symbol owner, final Names.TermName name, final long flags, final Function1 createFn) {
         return this.enterNewPolyMethod(1, owner, name, flags, (tparams) -> new Tuple2(scala.None..MODULE$, createFn.apply(tparams.head())));
      }

      public Symbols.MethodSymbol newT1NilaryMethod(final Symbols.Symbol owner, final Names.TermName name, final long flags, final Function1 createFn) {
         return this.newPolyMethod(1, owner, name, flags, (tparams) -> new Tuple2(package$.MODULE$.SomeOfNil(), createFn.apply(tparams.head())));
      }

      public Symbols.MethodSymbol enterNewT1NilaryMethod(final Symbols.Symbol owner, final Names.TermName name, final long flags, final Function1 createFn) {
         return this.enterNewPolyMethod(1, owner, name, flags, (tparams) -> new Tuple2(package$.MODULE$.SomeOfNil(), createFn.apply(tparams.head())));
      }

      public Symbols.MethodSymbol newT1Method(final Symbols.Symbol owner, final Names.TermName name, final long flags, final Function1 createFn) {
         return this.newPolyMethod(1, owner, name, flags, (tparams) -> {
            Types.Type t = (Types.Type)createFn.apply(tparams.head());
            return new Tuple2(new Some(new scala.collection.immutable..colon.colon(t, .MODULE$)), t);
         });
      }

      public Symbols.MethodSymbol enterNewT1Method(final Symbols.Symbol owner, final Names.TermName name, final long flags, final Function1 createFn) {
         return this.enterNewPolyMethod(1, owner, name, flags, (tparams) -> {
            Types.Type t = (Types.Type)createFn.apply(tparams.head());
            return new Tuple2(new Some(new scala.collection.immutable..colon.colon(t, .MODULE$)), t);
         });
      }

      private Set isPhantomClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$3 & Long.MIN_VALUE) == 0L) {
               Set var10001 = scala.Predef..MODULE$.Set();
               ArraySeq apply_elems = scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.Symbol[]{this.AnyClass(), this.AnyValClass(), this.NullClass(), this.NothingClass()});
               if (var10001 == null) {
                  throw null;
               }

               Object var5 = IterableFactory.apply$(var10001, apply_elems);
               Object var4 = null;
               this.isPhantomClass = (Set)var5;
               this.bitmap$3 |= Long.MIN_VALUE;
            }
         } catch (Throwable var3) {
            throw var3;
         }

         return this.isPhantomClass;
      }

      public Set isPhantomClass() {
         return (this.bitmap$3 & Long.MIN_VALUE) == 0L ? this.isPhantomClass$lzycompute() : this.isPhantomClass;
      }

      private List syntheticCoreClasses$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 1L) == 0L) {
               List var10001 = scala.package..MODULE$.List();
               ArraySeq apply_elems = scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.TypeSymbol[]{this.AnnotationDefaultAttr(), this.RepeatedParamClass(), this.JavaRepeatedParamClass(), this.ByNameParamClass(), this.AnyClass(), this.AnyRefClass(), this.AnyValClass(), this.NullClass(), this.NothingClass(), this.SingletonClass()});
               if (var10001 == null) {
                  throw null;
               }

               Object var5 = IterableFactory.apply$(var10001, apply_elems);
               Object var4 = null;
               this.syntheticCoreClasses = (List)var5;
               this.bitmap$4 |= 1L;
            }
         } catch (Throwable var3) {
            throw var3;
         }

         return this.syntheticCoreClasses;
      }

      public List syntheticCoreClasses() {
         return (this.bitmap$4 & 1L) == 0L ? this.syntheticCoreClasses$lzycompute() : this.syntheticCoreClasses;
      }

      private List syntheticCoreMethods$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 2L) == 0L) {
               List var10001 = scala.package..MODULE$.List();
               ArraySeq apply_elems = scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.MethodSymbol[]{this.Any_$eq$eq(), this.Any_$bang$eq(), this.Any_equals(), this.Any_hashCode(), this.Any_toString(), this.Any_getClass(), this.Any_isInstanceOf(), this.Any_asInstanceOf(), this.Any_$hash$hash(), this.Object_eq(), this.Object_ne(), this.Object_$eq$eq(), this.Object_$bang$eq(), this.Object_$hash$hash(), this.Object_synchronized(), this.Object_isInstanceOf(), this.Object_asInstanceOf(), this.String_$plus()});
               if (var10001 == null) {
                  throw null;
               }

               Object var5 = IterableFactory.apply$(var10001, apply_elems);
               Object var4 = null;
               this.syntheticCoreMethods = (List)var5;
               this.bitmap$4 |= 2L;
            }
         } catch (Throwable var3) {
            throw var3;
         }

         return this.syntheticCoreMethods;
      }

      public List syntheticCoreMethods() {
         return (this.bitmap$4 & 2L) == 0L ? this.syntheticCoreMethods$lzycompute() : this.syntheticCoreMethods;
      }

      private List hijackedCoreClasses$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 4L) == 0L) {
               this.hijackedCoreClasses = new scala.collection.immutable..colon.colon(this.ComparableClass(), new scala.collection.immutable..colon.colon(this.JavaCloneableClass(), new scala.collection.immutable..colon.colon(this.SerializableClass(), .MODULE$)));
               this.bitmap$4 |= 4L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.hijackedCoreClasses;
      }

      public List hijackedCoreClasses() {
         return (this.bitmap$4 & 4L) == 0L ? this.hijackedCoreClasses$lzycompute() : this.hijackedCoreClasses;
      }

      private List symbolsNotPresentInBytecode$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 8L) == 0L) {
               List var10001 = this.syntheticCoreClasses();
               List $plus$plus_suffix = this.syntheticCoreMethods();
               if (var10001 == null) {
                  throw null;
               }

               var10001 = var10001.appendedAll($plus$plus_suffix);
               Object var5 = null;
               List $plus$plus_suffixx = this.hijackedCoreClasses();
               if (var10001 == null) {
                  throw null;
               }

               Object var8 = var10001.concat($plus$plus_suffixx);
               Object var6 = null;
               this.symbolsNotPresentInBytecode = (List)var8;
               this.bitmap$4 |= 8L;
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.symbolsNotPresentInBytecode;
      }

      public List symbolsNotPresentInBytecode() {
         return (this.bitmap$4 & 8L) == 0L ? this.symbolsNotPresentInBytecode$lzycompute() : this.symbolsNotPresentInBytecode;
      }

      private Set isPossibleSyntheticParent$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 16L) == 0L) {
               scala.collection.immutable.SetOps var10001 = this.ProductClass().seq().toSet();
               Symbols.ClassSymbol $plus_elem = this.ProductRootClass();
               if (var10001 == null) {
                  throw null;
               }

               var10001 = var10001.incl($plus_elem);
               $plus_elem = null;
               Symbols.ClassSymbol $plus_elemx = this.SerializableClass();
               if (var10001 == null) {
                  throw null;
               }

               var10001 = var10001.incl($plus_elemx);
               $plus_elemx = null;
               this.isPossibleSyntheticParent = (Set)var10001;
               this.bitmap$4 |= 16L;
            }
         } catch (Throwable var4) {
            throw var4;
         }

         return this.isPossibleSyntheticParent;
      }

      public Set isPossibleSyntheticParent() {
         return (this.bitmap$4 & 16L) == 0L ? this.isPossibleSyntheticParent$lzycompute() : this.isPossibleSyntheticParent;
      }

      private Set boxedValueClassesSet$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 32L) == 0L) {
               scala.collection.immutable.SetOps var10001 = this.boxedClass().values().toSet();
               Symbols.ClassSymbol $plus_elem = this.BoxedUnitClass();
               if (var10001 == null) {
                  throw null;
               }

               var10001 = var10001.incl($plus_elem);
               $plus_elem = null;
               this.boxedValueClassesSet = (Set)var10001;
               this.bitmap$4 |= 32L;
            }
         } catch (Throwable var3) {
            throw var3;
         }

         return this.boxedValueClassesSet;
      }

      private Set boxedValueClassesSet() {
         return (this.bitmap$4 & 32L) == 0L ? this.boxedValueClassesSet$lzycompute() : this.boxedValueClassesSet;
      }

      public boolean isPrimitiveValueClass(final Symbols.Symbol sym) {
         return this.ScalaValueClassesSet().contains(sym);
      }

      public boolean isPrimitiveValueType(final Types.Type tp) {
         return this.isPrimitiveValueClass(tp.typeSymbol());
      }

      public boolean isBoxedValueClass(final Symbols.Symbol sym) {
         Set var10000 = this.boxedValueClassesSet();
         if (var10000 == null) {
            throw null;
         } else {
            return var10000.contains(sym);
         }
      }

      public Symbols.Symbol unboxedValueClass(final Symbols.Symbol sym) {
         if (this.isPrimitiveValueClass(sym)) {
            return sym;
         } else {
            Symbols.ClassSymbol var2 = this.BoxedUnitClass();
            if (sym == null) {
               if (var2 == null) {
                  return this.UnitClass();
               }
            } else if (sym.equals(var2)) {
               return this.UnitClass();
            }

            return (Symbols.Symbol)((MapOps)this.boxedClass().map((kvp) -> new Tuple2((Symbols.Symbol)kvp._2(), kvp._1()))).getOrElse(sym, () -> this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol());
         }
      }

      public boolean isNumericValueType(final Types.Type tp) {
         Types.Type var2 = tp.widen();
         if (var2 instanceof Types.TypeRef) {
            Symbols.Symbol sym = ((Types.TypeRef)var2).sym();
            return this.isNumericValueClass(sym);
         } else {
            return false;
         }
      }

      private Symbols.Symbol ShowAsInfixAnnotationClass$lzycompute() {
         synchronized(this){}

         try {
            if ((this.bitmap$4 & 64L) == 0L) {
               this.ShowAsInfixAnnotationClass = ((Mirrors.RootsBase)this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined("scala.annotation.showAsInfix");
               this.bitmap$4 |= 64L;
            }
         } catch (Throwable var2) {
            throw var2;
         }

         return this.ShowAsInfixAnnotationClass;
      }

      public Symbols.Symbol ShowAsInfixAnnotationClass() {
         return (this.bitmap$4 & 64L) == 0L ? this.ShowAsInfixAnnotationClass$lzycompute() : this.ShowAsInfixAnnotationClass;
      }

      public String signature(final Types.Type tp) {
         Types.Type etp = this.erasure$1(tp);
         Symbols.Symbol var10000 = etp.typeSymbol();
         Symbols.ClassSymbol var3 = this.ArrayClass();
         if (var10000 == null) {
            if (var3 == null) {
               return this.signature1$1(etp);
            }
         } else if (var10000.equals(var3)) {
            return this.signature1$1(etp);
         }

         return this.flatNameString$1(etp.typeSymbol(), '.');
      }

      public void init() {
         if (!this.isInitialized) {
            this.ObjectClass().initialize();
            this.ScalaPackageClass().initialize();
            this.symbolsNotPresentInBytecode();
            this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
            this.isInitialized = true;
         }
      }

      // $FF: synthetic method
      public SymbolTable scala$reflect$internal$Definitions$DefinitionsClass$$$outer() {
         return this.$outer;
      }

      // $FF: synthetic method
      public Definitions scala$reflect$internal$Definitions$ValueClassDefinitions$$$outer() {
         return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
      }

      // $FF: synthetic method
      public StandardDefinitions scala$reflect$api$StandardDefinitions$DefinitionsApi$$$outer() {
         return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
      }

      private final void NothingClass$lzycompute$1() {
         synchronized(this){}

         try {
            if (this.NothingClass$module == null) {
               this.NothingClass$module = new NothingClass$();
            }
         } catch (Throwable var2) {
            throw var2;
         }

      }

      private final void NullClass$lzycompute$1() {
         synchronized(this){}

         try {
            if (this.NullClass$module == null) {
               this.NullClass$module = new NullClass$();
            }
         } catch (Throwable var2) {
            throw var2;
         }

      }

      private final void VarArityClass$lzycompute$1() {
         synchronized(this){}

         try {
            if (this.VarArityClass$module == null) {
               this.VarArityClass$module = new VarArityClass$();
            }
         } catch (Throwable var2) {
            throw var2;
         }

      }

      private final void MacroContextType$lzycompute$1() {
         synchronized(this){}

         try {
            if (this.MacroContextType$module == null) {
               this.MacroContextType$module = new MacroContextType$();
            }
         } catch (Throwable var2) {
            throw var2;
         }

      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$fullyInitializeType$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.fullyInitializeSymbol(sym);
      }

      // $FF: synthetic method
      public static final void $anonfun$fullyInitializeType$2(final DefinitionsClass $this, final Symbols.Symbol sym) {
         $this.fullyInitializeSymbol(sym);
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$fullyInitializeScope$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.fullyInitializeSymbol(sym);
      }

      // $FF: synthetic method
      public static final boolean $anonfun$isUniversalMember$1(final DefinitionsClass $this, final Symbols.Symbol alt) {
         return $this.ObjectClass().isSubClass(alt.owner());
      }

      // $FF: synthetic method
      public static final List $anonfun$fixupAsAnyTrait$1(final List parents$1) {
         return parents$1;
      }

      // $FF: synthetic method
      public static final Symbols.ClassSymbol $anonfun$AnyValClass$1(final DefinitionsClass $this) {
         SymbolTable var10000 = $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
         Symbols.ClassSymbol var10001 = $this.ScalaPackageClass();
         Names.TypeName var10002 = $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().AnyVal();
         Types.Type var2 = $this.AnyTpe();
         List $colon$colon_this = .MODULE$;
         scala.collection.immutable..colon.colon var10003 = new scala.collection.immutable..colon.colon(var2, $colon$colon_this);
         $colon$colon_this = null;
         Symbols.ClassSymbol anyval = var10000.scala$reflect$internal$Definitions$$enterNewClass(var10001, var10002, var10003, 8L);
         Symbols.MethodSymbol av_constr = anyval.newClassConstructor($this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoPosition());
         anyval.info().decls().enter(av_constr);
         return (Symbols.ClassSymbol)anyval.markAllCompleted();
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$UnqualifiedOwners$1(final Symbols.ModuleSymbol x$5) {
         return x$5.moduleClass();
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$ByNameParamClass$1(final DefinitionsClass $this, final Symbols.Symbol x$6) {
         return $this.AnyTpe();
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$JavaRepeatedParamClass$1(final DefinitionsClass $this, final Symbols.Symbol tparam) {
         if (tparam == null) {
            throw null;
         } else {
            return $this.arrayType(tparam.tpe_$times());
         }
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$RepeatedParamClass$1(final DefinitionsClass $this, final Symbols.Symbol tparam) {
         if (tparam == null) {
            throw null;
         } else {
            return $this.seqType(tparam.tpe_$times());
         }
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$dropByName$1(final Types.Type tp$1) {
         return tp$1;
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$dropRepeated$1(final Types.Type tp$2) {
         return tp$2;
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$dropRepeated$2(final Types.Type tp$2) {
         return tp$2;
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$repeatedToSingle$1(final DefinitionsClass $this, final Types.Type tp$3) {
         return $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().elementExtract($this.JavaRepeatedParamClass(), tp$3);
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$repeatedToSingle$2(final Types.Type tp$3) {
         return tp$3;
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$repeatedToSeq$2(final Types.Type tp$4) {
         return tp$4;
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$seqToRepeated$2(final Types.Type tp$5) {
         return tp$5;
      }

      // $FF: synthetic method
      public static final boolean $anonfun$isReferenceArray$1(final DefinitionsClass $this, final Types.Type elemtp) {
         return elemtp.$less$colon$less($this.AnyRefTpe()) || elemtp == $this.ObjectTpeJava();
      }

      // $FF: synthetic method
      public static final boolean $anonfun$isArrayOfSymbol$1(final Symbols.Symbol elem$1, final Types.Type x$7) {
         Symbols.Symbol var10000 = x$7.typeSymbol();
         if (var10000 == null) {
            if (elem$1 == null) {
               return true;
            }
         } else if (var10000.equals(elem$1)) {
            return true;
         }

         return false;
      }

      // $FF: synthetic method
      public static final boolean $anonfun$ArrayModule_genericApply$1(final DefinitionsClass $this, final Symbols.Symbol x$8) {
         List var10000 = x$8.paramss();
         scala..eq.colon.eq flatten_toIterableOnce = scala..less.colon.less..MODULE$.refl();
         if (var10000 == null) {
            throw null;
         } else {
            Object var5 = StrictOptimizedIterableOps.flatten$(var10000, flatten_toIterableOnce);
            Object var4 = null;
            Symbols.Symbol var6 = (Symbols.Symbol)((List)var5).last();
            if (var6 == null) {
               throw null;
            } else {
               var6 = var6.tpe_$times().typeSymbol();
               Symbols.ClassSymbol var2 = $this.ClassTagClass();
               if (var6 == null) {
                  if (var2 == null) {
                     return true;
                  }
               } else if (var6.equals(var2)) {
                  return true;
               }

               return false;
            }
         }
      }

      // $FF: synthetic method
      public static final boolean $anonfun$ArrayModule_apply$1(final DefinitionsClass $this, final Types.Type tp$6, final Symbols.Symbol x$9) {
         if (x$9 == null) {
            throw null;
         } else {
            return x$9.tpe_$times().resultType().$eq$colon$eq($this.arrayType(tp$6));
         }
      }

      // $FF: synthetic method
      public static final Symbols.TermSymbol $anonfun$ReflectRuntimeUniverse$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.getDeclValue(sym, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().universe());
      }

      // $FF: synthetic method
      public static final Symbols.TermSymbol $anonfun$ReflectRuntimeCurrentMirror$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.getDeclMethod(sym, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().currentMirror());
      }

      // $FF: synthetic method
      public static final Symbols.ClassSymbol $anonfun$ExprClass$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.getMemberClass(sym, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Expr());
      }

      // $FF: synthetic method
      public static final Symbols.TermSymbol $anonfun$ExprSplice$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.getMemberMethod(sym, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().splice());
      }

      // $FF: synthetic method
      public static final Symbols.TermSymbol $anonfun$ExprValue$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.getMemberMethod(sym, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().value());
      }

      // $FF: synthetic method
      public static final Symbols.TermSymbol $anonfun$MacroContextPrefix$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.getMemberMethod(sym, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().prefix());
      }

      // $FF: synthetic method
      public static final Symbols.TypeSymbol $anonfun$MacroContextPrefixType$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.getTypeMember(sym, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().PrefixType());
      }

      // $FF: synthetic method
      public static final Symbols.TermSymbol $anonfun$MacroContextUniverse$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.getMemberMethod(sym, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().universe());
      }

      // $FF: synthetic method
      public static final Symbols.TypeSymbol $anonfun$MacroContextExprClass$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.getTypeMember(sym, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Expr());
      }

      // $FF: synthetic method
      public static final Symbols.TypeSymbol $anonfun$MacroContextWeakTypeTagClass$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.getTypeMember(sym, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().WeakTypeTag());
      }

      // $FF: synthetic method
      public static final Symbols.TypeSymbol $anonfun$MacroContextTreeType$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.getTypeMember(sym, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Tree());
      }

      // $FF: synthetic method
      public static final boolean $anonfun$MacroImplLocationAnnotation$1(final Symbols.Symbol x$10) {
         return x$10.isPackageClass();
      }

      // $FF: synthetic method
      public static final boolean $anonfun$hasJavaMainMethod$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.isJavaMainMethod(sym);
      }

      // $FF: synthetic method
      public static final Types.NoType$ $anonfun$isBlackboxMacroBundleType$1(final DefinitionsClass $this) {
         return $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoType();
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$samToFunctionType$1(final DefinitionsClass $this, final Types.Type tp$7) {
         return $this.samOf(tp$7);
      }

      private final Symbols.Symbol correspondingFunctionSymbol$1(final Symbols.Symbol samSym$1) {
         int numVparams = samSym$1.info().params().length();
         return (Symbols.Symbol)(numVparams > this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().definitions().MaxFunctionArity() ? this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol() : this.FunctionClass().apply(numVparams));
      }

      // $FF: synthetic method
      public static final boolean $anonfun$getProductArgs$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.isProductNSymbol(sym);
      }

      private static final Symbols.Symbol sym$1(final Types.Type tp$8) {
         return tp$8.typeSymbol();
      }

      private final boolean volatileUpperBound$1(final Types.Type tp$8) {
         return this.isVolatile(tp$8.upperBound());
      }

      private final boolean safeIsVolatile$1(final Types.Type tp$8) {
         if (this.volatileRecursions < 50) {
            return this.volatileUpperBound$1(tp$8);
         } else {
            HashSet var10000 = this.pendingVolatiles;
            Symbols.Symbol apply_elem = tp$8.typeSymbol();
            if (var10000 == null) {
               throw null;
            } else {
               boolean var12 = var10000.contains(apply_elem);
               apply_elem = null;
               if (!var12) {
                  HashSet var13 = this.pendingVolatiles;
                  Symbols.Symbol $plus$eq_elem = tp$8.typeSymbol();
                  if (var13 == null) {
                     throw null;
                  }

                  var13.add($plus$eq_elem);
                  $plus$eq_elem = null;

                  try {
                     var14 = this.volatileUpperBound$1(tp$8);
                  } finally {
                     HashSet var10001 = this.pendingVolatiles;
                     Symbols.Symbol $minus$eq_elem = tp$8.typeSymbol();
                     if (var10001 == null) {
                        throw null;
                     }

                     var10001.remove($minus$eq_elem);
                     $minus$eq_elem = null;
                  }

                  if (!var14) {
                     return false;
                  }
               }

               return true;
            }
         }
      }

      private final boolean isVolatileAbstractType$1(final Types.Type tp$8) {
         ++this.volatileRecursions;

         boolean var10000;
         try {
            var10000 = this.safeIsVolatile$1(tp$8);
         } finally {
            --this.volatileRecursions;
         }

         return var10000;
      }

      private static final boolean isVisibleDeferred$1(final Symbols.Symbol m, final Types.Type tp$8) {
         return m.isDeferred() && tp$8.nonPrivateMember(m.name()).alternatives().contains(m);
      }

      // $FF: synthetic method
      public static final boolean $anonfun$isVolatile$1(final Types.Type tp$8, final Symbols.Symbol m) {
         return isVisibleDeferred$1(m, tp$8);
      }

      private static final boolean contributesAbstractMembers$1(final Types.Type p, final Types.Type tp$8) {
         return p.deferredMembers().exists((m) -> BoxesRunTime.boxToBoolean($anonfun$isVolatile$1(tp$8, m)));
      }

      // $FF: synthetic method
      public static final boolean $anonfun$isVolatile$2(final Types.Type p) {
         return !p.typeSymbol().isAbstractType();
      }

      private static final List dropConcreteParents$1(final List parents$2) {
         LinearSeq dropWhile_loop$3_s;
         for(dropWhile_loop$3_s = (LinearSeq)parents$2.coll(); dropWhile_loop$3_s.nonEmpty() && $anonfun$isVolatile$2((Types.Type)dropWhile_loop$3_s.head()); dropWhile_loop$3_s = (LinearSeq)dropWhile_loop$3_s.tail()) {
         }

         return (List)dropWhile_loop$3_s;
      }

      // $FF: synthetic method
      public static final boolean $anonfun$isVolatile$3(final DefinitionsClass $this, final Types.Type tp) {
         return $this.isVolatile(tp);
      }

      // $FF: synthetic method
      public static final boolean $anonfun$isVolatile$4(final Types.Type tp$8, final Types.Type p) {
         return contributesAbstractMembers$1(p, tp$8);
      }

      // $FF: synthetic method
      public static final boolean $anonfun$isVolatile$5(final Types.Type tp$8, final Symbols.Symbol m) {
         return isVisibleDeferred$1(m, tp$8);
      }

      private final boolean isVolatileRefinedType$1(final Types.Type tp$8) {
         if (!(tp$8 instanceof Types.RefinedType)) {
            throw new MatchError(tp$8);
         } else {
            Types.RefinedType var2 = (Types.RefinedType)tp$8;
            List parents = var2.parents();
            Scopes.Scope decls = var2.decls();
            if (parents == null) {
               throw null;
            } else {
               List exists_these = parents;

               boolean var10000;
               while(true) {
                  if (exists_these.isEmpty()) {
                     var10000 = false;
                     break;
                  }

                  Types.Type var8 = (Types.Type)exists_these.head();
                  if (this.isVolatile(var8)) {
                     var10000 = true;
                     break;
                  }

                  exists_these = (List)exists_these.tail();
               }

               Object var9 = null;
               if (!var10000) {
                  List var5 = dropConcreteParents$1(parents);
                  if (.MODULE$.equals(var5)) {
                     var10000 = false;
                  } else {
                     label73: {
                        if (var5 == parents) {
                           List var11 = (List)var5.tail();
                           if (var11 == null) {
                              throw null;
                           }

                           List exists_these = var11;

                           while(true) {
                              if (exists_these.isEmpty()) {
                                 var12 = false;
                                 break;
                              }

                              if (contributesAbstractMembers$1((Types.Type)exists_these.head(), tp$8)) {
                                 var12 = true;
                                 break;
                              }

                              exists_these = (List)exists_these.tail();
                           }

                           Object var10 = null;
                           if (!var12 && !decls.exists((m) -> BoxesRunTime.boxToBoolean($anonfun$isVolatile$5(tp$8, m)))) {
                              var10000 = false;
                              break label73;
                           }
                        }

                        var10000 = true;
                     }
                  }

                  if (!var10000) {
                     return false;
                  }
               }

               return true;
            }
         }
      }

      private final boolean isVolatileTypeRef$1(final Types.TypeRef tr, final Types.Type tp$8) {
         Types.Type dealised = tr.dealias();
         if (dealised != tr) {
            return this.isVolatile(dealised);
         } else {
            return tr.sym().isAbstractType() ? this.isVolatileAbstractType$1(tp$8) : false;
         }
      }

      // $FF: synthetic method
      public static final boolean $anonfun$functionNBaseType$1(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return $this.isFunctionSymbol(sym);
      }

      // $FF: synthetic method
      public static final boolean $anonfun$samOf$1(final Symbols.Symbol x$13) {
         return x$13.isType();
      }

      private final boolean isEligible$1(final Types.Type tp) {
         while(true) {
            Types.Type var2 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().unwrapToClass().apply(tp);
            if (var2 instanceof Types.TypeRef) {
               Symbols.Symbol sym = ((Types.TypeRef)var2).sym();
               if (sym.isClass() && !sym.isRefinementClass()) {
                  return true;
               }

               return false;
            }

            if (var2 instanceof Types.RefinedType) {
               Types.RefinedType var4 = (Types.RefinedType)var2;
               List var5 = var4.parents();
               Scopes.Scope decls = var4.decls();
               if (var5 instanceof scala.collection.immutable..colon.colon) {
                  scala.collection.immutable..colon.colon var7 = (scala.collection.immutable..colon.colon)var5;
                  Types.Type parent = (Types.Type)var7.head();
                  List var9 = var7.next$access$1();
                  if (.MODULE$.equals(var9)) {
                     if (decls.forall((x$13) -> BoxesRunTime.boxToBoolean($anonfun$samOf$1(x$13)))) {
                        tp = parent;
                        continue;
                     }

                     return false;
                  }
               }
            }

            return false;
         }
      }

      // $FF: synthetic method
      public static final boolean $anonfun$samOf$2(final DefinitionsClass $this, final Symbols.Symbol mem) {
         return mem.isDeferred() && !$this.isUniversalMember(mem);
      }

      private final Symbols.Symbol compute$1(final Symbols.Symbol tpSym$1) {
         if (tpSym$1.exists() && tpSym$1.isClass() && !tpSym$1.hasFlag(1056L)) {
            Symbols.Symbol ctor = tpSym$1.primaryConstructor();
            if ((!ctor.exists() || !ctor.isOverloaded() && ctor.isPublic() && ctor.info().params().isEmpty() && ctor.info().paramSectionCount() <= 1) && !tpSym$1.hasSelfType()) {
               List var10000 = tpSym$1.info().membersBasedOnFlags(4398113619972L, 64L).toList();
               if (var10000 == null) {
                  throw null;
               }

               List filter_this = var10000;
               boolean filter_filterCommon_isFlipped = false;
               List filter_filterCommon_noneIn$1_l = filter_this;

               while(true) {
                  if (filter_filterCommon_noneIn$1_l.isEmpty()) {
                     var56 = .MODULE$;
                     break;
                  }

                  Object filter_filterCommon_noneIn$1_h = filter_filterCommon_noneIn$1_l.head();
                  List filter_filterCommon_noneIn$1_t = (List)filter_filterCommon_noneIn$1_l.tail();
                  Symbols.Symbol var20 = (Symbols.Symbol)filter_filterCommon_noneIn$1_h;
                  if ($anonfun$samOf$2(this, var20) != filter_filterCommon_isFlipped) {
                     List filter_filterCommon_noneIn$1_allIn$1_remaining = filter_filterCommon_noneIn$1_t;

                     while(true) {
                        if (filter_filterCommon_noneIn$1_allIn$1_remaining.isEmpty()) {
                           var56 = filter_filterCommon_noneIn$1_l;
                           break;
                        }

                        Object filter_filterCommon_noneIn$1_allIn$1_x = filter_filterCommon_noneIn$1_allIn$1_remaining.head();
                        var20 = (Symbols.Symbol)filter_filterCommon_noneIn$1_allIn$1_x;
                        if ($anonfun$samOf$2(this, var20) == filter_filterCommon_isFlipped) {
                           scala.collection.immutable..colon.colon filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead = new scala.collection.immutable..colon.colon(filter_filterCommon_noneIn$1_l.head(), .MODULE$);
                           List filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess = (List)filter_filterCommon_noneIn$1_l.tail();

                           scala.collection.immutable..colon.colon filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast;
                           for(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead; filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess != filter_filterCommon_noneIn$1_allIn$1_remaining; filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess.tail()) {
                              scala.collection.immutable..colon.colon filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem = new scala.collection.immutable..colon.colon(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_toProcess.head(), .MODULE$);
                              filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem);
                              filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem;
                           }

                           List filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filter_filterCommon_noneIn$1_allIn$1_remaining.tail();
                           List filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next;

                           while(!filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.isEmpty()) {
                              Object filter_filterCommon_noneIn$1_allIn$1_partialFill$1_head = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.head();
                              var20 = (Symbols.Symbol)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_head;
                              if ($anonfun$samOf$2(this, var20) != filter_filterCommon_isFlipped) {
                                 filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                              } else {
                                 while(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy != filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next) {
                                    scala.collection.immutable..colon.colon filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem = new scala.collection.immutable..colon.colon(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.head(), .MODULE$);
                                    filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem);
                                    filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newElem;
                                    filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.tail();
                                 }

                                 filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                                 filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next = (List)filter_filterCommon_noneIn$1_allIn$1_partialFill$1_next.tail();
                              }
                           }

                           if (!filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy.isEmpty()) {
                              filter_filterCommon_noneIn$1_allIn$1_partialFill$1_currentLast.next_$eq(filter_filterCommon_noneIn$1_allIn$1_partialFill$1_nextToCopy);
                           }

                           var56 = filter_filterCommon_noneIn$1_allIn$1_partialFill$1_newHead;
                           Object var30 = null;
                           Object var33 = null;
                           Object var36 = null;
                           Object var39 = null;
                           Object var42 = null;
                           Object var45 = null;
                           Object var48 = null;
                           Object var51 = null;
                           break;
                        }

                        filter_filterCommon_noneIn$1_allIn$1_remaining = (List)filter_filterCommon_noneIn$1_allIn$1_remaining.tail();
                     }

                     Object var26 = null;
                     Object var28 = null;
                     Object var31 = null;
                     Object var34 = null;
                     Object var37 = null;
                     Object var40 = null;
                     Object var43 = null;
                     Object var46 = null;
                     Object var49 = null;
                     Object var52 = null;
                     break;
                  }

                  filter_filterCommon_noneIn$1_l = filter_filterCommon_noneIn$1_t;
               }

               Object var23 = null;
               Object var24 = null;
               Object var25 = null;
               Object var27 = null;
               Object var29 = null;
               Object var32 = null;
               Object var35 = null;
               Object var38 = null;
               Object var41 = null;
               Object var44 = null;
               Object var47 = null;
               Object var50 = null;
               Object var53 = null;
               List filter_filterCommon_result = (List)var56;
               Statics.releaseFence();
               Object var57 = filter_filterCommon_result;
               Object var21 = null;
               filter_filterCommon_result = null;
               List deferredMembers = (List)var57;
               if (deferredMembers.lengthCompare(1) == 0 && ((Symbols.Symbol)deferredMembers.head()).typeParams().isEmpty() && ((Symbols.Symbol)deferredMembers.head()).info().paramSectionCount() == 1) {
                  return (Symbols.Symbol)deferredMembers.head();
               }

               return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
            }
         }

         return this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$elementTypeFromGet$1(final DefinitionsClass $this, final Types.Type tp$9) {
         return $this.resultOfMatchingMethod(tp$9, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().get(), .MODULE$);
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$elementTypeFromApply$1(final DefinitionsClass $this, final Types.Type tp$10) {
         return $this.resultOfMatchingMethod(tp$10, $this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply(), scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Types.Type[]{$this.IntTpe()}));
      }

      // $FF: synthetic method
      public static final boolean $anonfun$resultOfMatchingMethod$1(final Symbols.Symbol x$14, final Types.Type x$15) {
         return x$14.tpe_$times().$eq$colon$eq(x$15);
      }

      private final boolean matchesParams$1(final Symbols.Symbol member, final Seq paramTypes$1) {
         List var3 = member.paramss();
         if (.MODULE$.equals(var3)) {
            return paramTypes$1.isEmpty();
         } else if (!(var3 instanceof scala.collection.immutable..colon.colon)) {
            throw new MatchError(var3);
         } else {
            scala.collection.immutable..colon.colon var4 = (scala.collection.immutable..colon.colon)var3;
            List ps = (List)var4.head();
            List rest = var4.next$access$1();
            return (rest.isEmpty() || this.isImplicitParamss(rest)) && ps.corresponds(paramTypes$1, (x$14, x$15) -> BoxesRunTime.boxToBoolean($anonfun$resultOfMatchingMethod$1(x$14, x$15)));
         }
      }

      // $FF: synthetic method
      public static final boolean $anonfun$resultOfMatchingMethod$2(final DefinitionsClass $this, final Seq paramTypes$1, final Symbols.Symbol member) {
         return $this.matchesParams$1(member, paramTypes$1);
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$EnumType$1(final Symbols.Symbol sym$2) {
         return sym$2.owner().linkedClassOfClass();
      }

      // $FF: synthetic method
      public static final Types.Type $anonfun$classExistentialType$1(final Symbols.Symbol x$16) {
         return x$16.tpeHK();
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$primitiveGetClassMethods$1(final DefinitionsClass $this, final Symbols.ClassSymbol x$19) {
         if (x$19 == null) {
            throw null;
         } else {
            return ((Symbols.Symbol)x$19).tpe_$times().member((Names.Name)$this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().getClass_());
         }
      }

      // $FF: synthetic method
      public static final boolean $anonfun$removeRedundantObjects$1(final DefinitionsClass $this, final Types.Type x$20) {
         Symbols.Symbol var10000 = x$20.typeSymbol();
         Symbols.ClassSymbol var2 = $this.ObjectClass();
         if (var10000 == null) {
            if (var2 == null) {
               return true;
            }
         } else if (var10000.equals(var2)) {
            return true;
         }

         return false;
      }

      // $FF: synthetic method
      public static final boolean $anonfun$normalizedParents$1(final DefinitionsClass $this, final Types.Type t) {
         return t.typeSymbol() != $this.ObjectClass() && t.typeSymbol().isClass();
      }

      // $FF: synthetic method
      public static final boolean $anonfun$normalizedParents$2(final DefinitionsClass $this, final Types.Type x$21) {
         return x$21.typeSymbol() == $this.ObjectClass();
      }

      // $FF: synthetic method
      public static final String $anonfun$briefParentsString$1(final DefinitionsClass $this, final Types.Type tp) {
         return $this.typeStringNoPackage(tp);
      }

      // $FF: synthetic method
      public static final String $anonfun$valueParamsString$1(final Symbols.Symbol x$22) {
         return x$22.defString();
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$JUnitAnnotations$1(final DefinitionsClass $this, final String n) {
         return ((Mirrors.RootsBase)$this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getClassIfDefined((new StringBuilder(10)).append("org.junit.").append(n).toString());
      }

      // $FF: synthetic method
      public static final boolean $anonfun$metaAnnotations$1(final DefinitionsClass $this, final Symbols.Symbol x$26) {
         return x$26.isSubClass($this.StaticAnnotationClass());
      }

      // $FF: synthetic method
      public static final boolean $anonfun$AnnotationDefaultAttr$1(final Symbols.ClassSymbol sym$3, final Symbols.Symbol x$27) {
         Names.Name var10000 = x$27.name();
         Names.Name var2 = sym$3.name();
         if (var10000 == null) {
            if (var2 == null) {
               return true;
            }
         } else if (var10000.equals(var2)) {
            return true;
         }

         return false;
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$getMember$1(final DefinitionsClass $this, final Names.Name name$1, final Symbols.Symbol owner$1) {
         if ($this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().phase().flatClasses() && name$1.isTypeName() && !owner$1.isPackageObjectOrClass()) {
            Symbols.Symbol pkg = owner$1.owner();
            Names.TypeName flatname = (Names.TypeName)$this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().flattenedName(owner$1, name$1);
            return $this.getMember(pkg, flatname);
         } else {
            throw $this.fatalMissingSymbol(owner$1, name$1, "member", "");
         }
      }

      private final Nothing miss$1(final Symbols.Symbol owner$2, final Names.Name name$2) {
         return this.fatalMissingSymbol(owner$2, name$2, "method", "");
      }

      // $FF: synthetic method
      public static final boolean $anonfun$getMemberMethod$1(final Symbols.Symbol x$28) {
         return x$28.isMethod();
      }

      // $FF: synthetic method
      public static final Nothing $anonfun$getMemberMethod$2(final DefinitionsClass $this, final Symbols.Symbol owner$2, final Names.Name name$2) {
         return $this.miss$1(owner$2, name$2);
      }

      // $FF: synthetic method
      public static final Symbols.Symbol $anonfun$getMemberIfDefined$1(final Symbols.Symbol owner$3, final Names.Name name$3) {
         return owner$3.info().nonPrivateMember(name$3);
      }

      // $FF: synthetic method
      public static final Nothing $anonfun$getDecl$1(final DefinitionsClass $this, final Symbols.Symbol owner$4, final Names.Name name$4) {
         return $this.fatalMissingSymbol(owner$4, name$4, "decl", "");
      }

      private final Types.Type erasure$1(final Types.Type tp) {
         while(true) {
            if (tp instanceof Types.SubType) {
               tp = ((Types.SubType)tp).supertype();
            } else {
               if (!(tp instanceof Types.RefinedType)) {
                  return tp;
               }

               tp = (Types.Type)((Types.RefinedType)tp).parents().head();
            }
         }
      }

      private final String flatNameString$1(final Symbols.Symbol sym, final char separator) {
         Symbols.NoSymbol var3 = this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol();
         if (sym == null) {
            if (var3 == null) {
               return "";
            }
         } else if (sym.equals(var3)) {
            return "";
         }

         if (sym.isTopLevel()) {
            return sym.javaClassName();
         } else {
            return (new StringBuilder(1)).append(this.flatNameString$1(sym.owner(), separator)).append("$").append(sym.name()).toString();
         }
      }

      private final String signature1$1(final Types.Type etp) {
         Symbols.Symbol var10000 = etp.typeSymbol();
         Symbols.ClassSymbol var2 = this.ArrayClass();
         if (var10000 == null) {
            if (var2 == null) {
               return (new StringBuilder(1)).append("[").append(this.signature1$1(this.erasure$1((Types.Type)etp.dealiasWiden().typeArgs().head()))).toString();
            }
         } else if (var10000.equals(var2)) {
            return (new StringBuilder(1)).append("[").append(this.signature1$1(this.erasure$1((Types.Type)etp.dealiasWiden().typeArgs().head()))).toString();
         }

         if (this.isPrimitiveValueClass(etp.typeSymbol())) {
            return this.abbrvTag().apply(etp.typeSymbol()).toString();
         } else {
            return (new StringBuilder(2)).append("L").append(this.flatNameString$1(etp.typeSymbol(), '/')).append(";").toString();
         }
      }

      public DefinitionsClass() {
         if (Definitions.this == null) {
            throw null;
         } else {
            this.$outer = Definitions.this;
            super();
            Definitions.ValueClassDefinitions.$init$(this);
            this.isInitialized = false;
            this.MaxTupleArity = 22;
            this.MaxProductArity = 22;
            this.MaxFunctionArity = 22;
            this.MaxTupleAritySpecialized = 2;
            this.MaxProductAritySpecialized = 2;
            this.MaxFunctionAritySpecialized = 2;
            this.volatileRecursions = 0;
            this.pendingVolatiles = (HashSet)IterableFactory.apply$(scala.collection.mutable.HashSet..MODULE$, .MODULE$);
            this.samCache = Definitions.this.perRunCaches().newAnyRefMap();
            Statics.releaseFence();
         }
      }

      // $FF: synthetic method
      public static final Object $anonfun$fullyInitializeType$2$adapted(final DefinitionsClass $this, final Symbols.Symbol sym) {
         $anonfun$fullyInitializeType$2($this, sym);
         return BoxedUnit.UNIT;
      }

      // $FF: synthetic method
      public static final Object $anonfun$isUniversalMember$1$adapted(final DefinitionsClass $this, final Symbols.Symbol alt) {
         return BoxesRunTime.boxToBoolean($anonfun$isUniversalMember$1($this, alt));
      }

      // $FF: synthetic method
      public static final Object $anonfun$hasJavaMainMethod$1$adapted(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return BoxesRunTime.boxToBoolean($anonfun$hasJavaMainMethod$1($this, sym));
      }

      // $FF: synthetic method
      public static final Object $anonfun$getProductArgs$1$adapted(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return BoxesRunTime.boxToBoolean($anonfun$getProductArgs$1($this, sym));
      }

      // $FF: synthetic method
      public static final Object $anonfun$functionNBaseType$1$adapted(final DefinitionsClass $this, final Symbols.Symbol sym) {
         return BoxesRunTime.boxToBoolean($anonfun$functionNBaseType$1($this, sym));
      }

      // $FF: synthetic method
      public static final Object $anonfun$removeRedundantObjects$1$adapted(final DefinitionsClass $this, final Types.Type x$20) {
         return BoxesRunTime.boxToBoolean($anonfun$removeRedundantObjects$1($this, x$20));
      }

      // $FF: synthetic method
      public static final Object $anonfun$normalizedParents$1$adapted(final DefinitionsClass $this, final Types.Type t) {
         return BoxesRunTime.boxToBoolean($anonfun$normalizedParents$1($this, t));
      }

      // $FF: synthetic method
      public static final Object $anonfun$normalizedParents$2$adapted(final DefinitionsClass $this, final Types.Type x$21) {
         return BoxesRunTime.boxToBoolean($anonfun$normalizedParents$2($this, x$21));
      }

      // $FF: synthetic method
      public static final Object $anonfun$AnnotationDefaultAttr$1$adapted(final Symbols.ClassSymbol sym$3, final Symbols.Symbol x$27) {
         return BoxesRunTime.boxToBoolean($anonfun$AnnotationDefaultAttr$1(sym$3, x$27));
      }

      // $FF: synthetic method
      public static final Object $anonfun$isVolatile$2$adapted(final Types.Type p) {
         return BoxesRunTime.boxToBoolean($anonfun$isVolatile$2(p));
      }

      // $FF: synthetic method
      public static final Object $anonfun$isVolatile$3$adapted(final DefinitionsClass $this, final Types.Type tp) {
         return BoxesRunTime.boxToBoolean($anonfun$isVolatile$3($this, tp));
      }

      // $FF: synthetic method
      public static final Object $anonfun$isVolatile$4$adapted(final Types.Type tp$8, final Types.Type p) {
         return BoxesRunTime.boxToBoolean($anonfun$isVolatile$4(tp$8, p));
      }

      // $FF: synthetic method
      public static final Object $anonfun$samOf$2$adapted(final DefinitionsClass $this, final Symbols.Symbol mem) {
         return BoxesRunTime.boxToBoolean($anonfun$samOf$2($this, mem));
      }

      // $FF: synthetic method
      private static Object $deserializeLambda$(SerializedLambda var0) {
         return Class.lambdaDeserialize<invokedynamic>(var0);
      }

      public abstract class BottomClassSymbol extends Symbols.ClassSymbol {
         // $FF: synthetic field
         public final DefinitionsClass $outer;

         public final boolean isBottomClass() {
            return true;
         }

         public final boolean isThreadsafe(final Symbols.SymbolOps purpose) {
            return true;
         }

         // $FF: synthetic method
         public DefinitionsClass scala$reflect$internal$Definitions$DefinitionsClass$BottomClassSymbol$$$outer() {
            return this.$outer;
         }

         public BottomClassSymbol(final Names.TypeName name, final Symbols.Symbol parent) {
            if (DefinitionsClass.this == null) {
               throw null;
            } else {
               this.$outer = DefinitionsClass.this;
               super(DefinitionsClass.this.ScalaPackageClass(), DefinitionsClass.this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoPosition(), name);
               this.initFlags(40L);
               Types.ClassInfoType var10001 = new Types.ClassInfoType;
               SymbolTable var10003 = DefinitionsClass.this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
               scala.collection.immutable..colon.colon var10004 = new scala.collection.immutable..colon.colon;
               if (parent == null) {
                  throw null;
               } else {
                  var10004.<init>(parent.tpe_$times(), .MODULE$);
                  var10001.<init>(var10004, DefinitionsClass.this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().newScope(), this);
                  this.setInfoAndEnter(var10001);
                  this.markAllCompleted();
               }
            }
         }
      }

      public final class NothingClass$ extends BottomClassSymbol {
         public boolean isSubClass(final Symbols.Symbol that) {
            return true;
         }

         public NothingClass$() {
            super(DefinitionsClass.this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Nothing(), DefinitionsClass.this.AnyClass());
         }
      }

      public final class NullClass$ extends BottomClassSymbol {
         public boolean isSubClass(final Symbols.Symbol that) {
            return that == this.scala$reflect$internal$Definitions$DefinitionsClass$NullClass$$$outer().AnyClass() || that != this.scala$reflect$internal$Definitions$DefinitionsClass$NullClass$$$outer().NothingClass() && that.isSubClass(this.scala$reflect$internal$Definitions$DefinitionsClass$NullClass$$$outer().ObjectClass());
         }

         // $FF: synthetic method
         public DefinitionsClass scala$reflect$internal$Definitions$DefinitionsClass$NullClass$$$outer() {
            return this.$outer;
         }

         public NullClass$() {
            super(DefinitionsClass.this.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Null(), DefinitionsClass.this.AnyRefClass());
         }
      }

      public class VarArityClass$ {
         public int $lessinit$greater$default$3() {
            return 0;
         }

         public Option $lessinit$greater$default$4() {
            return scala.None..MODULE$;
         }
      }

      public class VarArityClass extends StandardDefinitions.DefinitionsApi.VarArityClassApi {
         private final String name;
         private final int offset;
         private final IndexedSeq seq;
         private final ValueClassDefinitions.SymbolSet symSet;

         private boolean isDefinedAt(final int i) {
            return i < this.seq().length() + this.offset && i >= this.offset;
         }

         public IndexedSeq seq() {
            return this.seq;
         }

         public boolean contains(final Symbols.Symbol sym) {
            return this.symSet.contains(sym);
         }

         public Symbols.Symbol apply(final int i) {
            return (Symbols.Symbol)(this.isDefinedAt(i) ? (Symbols.Symbol)this.seq().apply(i - this.offset) : this.scala$reflect$internal$Definitions$DefinitionsClass$VarArityClass$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoSymbol());
         }

         public Types.Type specificType(final List args, final List others) {
            int arity = args.length();
            return (Types.Type)(!this.isDefinedAt(arity) ? this.scala$reflect$internal$Definitions$DefinitionsClass$VarArityClass$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().NoType() : this.scala$reflect$internal$Definitions$DefinitionsClass$VarArityClass$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().appliedType(this.apply(arity), others.$colon$colon$colon(args)));
         }

         public List specificType$default$2() {
            return .MODULE$;
         }

         // $FF: synthetic method
         public DefinitionsClass scala$reflect$internal$Definitions$DefinitionsClass$VarArityClass$$$outer() {
            return (DefinitionsClass)this.$outer;
         }

         // $FF: synthetic method
         public static final Symbols.ClassSymbol $anonfun$seq$1(final VarArityClass $this, final int i) {
            return ((Mirrors.RootsBase)$this.scala$reflect$internal$Definitions$DefinitionsClass$VarArityClass$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getRequiredClass((new StringBuilder(6)).append("scala.").append($this.name).append(i).toString());
         }

         public VarArityClass(final String name, final int maxArity, final int countFrom, final Option init) {
            this.name = name;
            this.offset = countFrom - scala.Option..MODULE$.option2Iterable(init).size();
            RichInt var10001 = scala.runtime.RichInt..MODULE$;
            Range var16 = scala.collection.immutable.Range..MODULE$;
            Range map_this = new Range.Inclusive(countFrom, maxArity, 1);
            map_this.scala$collection$immutable$Range$$validateMaxLength();
            Builder map_strictOptimizedMap_b = scala.collection.immutable.IndexedSeq..MODULE$.newBuilder();

            Object var14;
            for(Iterator map_strictOptimizedMap_it = map_this.iterator(); map_strictOptimizedMap_it.hasNext(); var14 = null) {
               Object var10 = map_strictOptimizedMap_it.next();
               Symbols.ClassSymbol map_strictOptimizedMap_$plus$eq_elem = $anonfun$seq$1(this, BoxesRunTime.unboxToInt(var10));
               if (map_strictOptimizedMap_b == null) {
                  throw null;
               }

               map_strictOptimizedMap_b.addOne(map_strictOptimizedMap_$plus$eq_elem);
            }

            IndexedSeq var17 = (IndexedSeq)map_strictOptimizedMap_b.result();
            map_this = null;
            Object var12 = null;
            Object var13 = null;
            var14 = null;
            if (var17 == null) {
               throw null;
            } else {
               this.seq = ((IterableOnceOps)var17.prependedAll(init)).toVector();
               this.symSet = DefinitionsClass.this.new SymbolSet(this.seq().toList());
            }
         }

         // $FF: synthetic method
         public static final Symbols.ClassSymbol $anonfun$seq$1$adapted(final VarArityClass $this, final Object i) {
            return $anonfun$seq$1($this, BoxesRunTime.unboxToInt(i));
         }
      }

      public class MacroContextType$ {
         // $FF: synthetic field
         private final DefinitionsClass $outer;

         public Option unapply(final Types.Type tp) {
            Types.Type var2 = tp.dealias();
            if (var2 instanceof Types.RefinedType) {
               Types.RefinedType var3 = (Types.RefinedType)var2;
               List var4 = var3.parents();
               Scopes.Scope var5 = var3.decls();
               if (var4 != null) {
                  List var10000 = scala.package..MODULE$.List();
                  if (var10000 == null) {
                     throw null;
                  }

                  List unapplySeq_this = var10000;
                  SeqOps var14 = SeqFactory.unapplySeq$(unapplySeq_this, var4);
                  Object var13 = null;
                  SeqOps var6 = var14;
                  SeqFactory.UnapplySeqWrapper var15 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                  SeqFactory.UnapplySeqWrapper var10001 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                  new SeqFactory.UnapplySeqWrapper(var6);
                  var15 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                  var15 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                  int lengthCompare$extension_len = 1;
                  if (var6.lengthCompare(lengthCompare$extension_len) == 0) {
                     var15 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                     var15 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                     int apply$extension_i = 0;
                     Types.Type tp = (Types.Type)var6.apply(apply$extension_i);
                     if (var5 != null) {
                        Some var8 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().Scope().unapplySeq(var5);
                        if (!var8.isEmpty() && var8.value() != null && ((SeqOps)var8.value()).lengthCompare(1) == 0) {
                           Symbols.Symbol sym = (Symbols.Symbol)((SeqOps)var8.value()).apply(0);
                           if (this.isOneOfContextTypes$1(tp) && this.isPrefix$1(sym)) {
                              return new Some(tp);
                           }
                        }
                     }
                  }
               }
            }

            return (Option)(this.isOneOfContextTypes$1(var2) ? new Some(var2) : scala.None..MODULE$);
         }

         private final boolean isOneOfContextTypes$1(final Types.Type tp) {
            Symbols.Symbol var10001 = this.$outer.BlackboxContextClass();
            if (var10001 == null) {
               throw null;
            } else {
               if (!tp.$eq$colon$eq(var10001.tpe_$times())) {
                  var10001 = this.$outer.WhiteboxContextClass();
                  if (var10001 == null) {
                     throw null;
                  }

                  if (!tp.$eq$colon$eq(var10001.tpe_$times())) {
                     return false;
                  }
               }

               return true;
            }
         }

         private final boolean isPrefix$1(final Symbols.Symbol sym) {
            return sym.allOverriddenSymbols().contains(this.$outer.MacroContextPrefixType());
         }

         public MacroContextType$() {
            if (DefinitionsClass.this == null) {
               throw null;
            } else {
               this.$outer = DefinitionsClass.this;
               super();
            }
         }
      }

      public class UniverseDependentTypes {
         private Types.Type nameType;
         private Types.Type modsType;
         private Types.Type flagsType;
         private Types.Type symbolType;
         private Types.Type treeType;
         private Types.Type caseDefType;
         private Types.Type liftableType;
         private Types.Type unliftableType;
         private Types.Type iterableTreeType;
         private Types.Type listTreeType;
         private Types.Type listListTreeType;
         private final Trees.Tree universe;
         private volatile int bitmap$0;
         // $FF: synthetic field
         public final DefinitionsClass $outer;

         private Types.Type nameType$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 1) == 0) {
                  this.nameType = this.universeMemberType(this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Name());
                  this.bitmap$0 |= 1;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.nameType;
         }

         public Types.Type nameType() {
            return (this.bitmap$0 & 1) == 0 ? this.nameType$lzycompute() : this.nameType;
         }

         private Types.Type modsType$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 2) == 0) {
                  this.modsType = this.universeMemberType(this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Modifiers());
                  this.bitmap$0 |= 2;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.modsType;
         }

         public Types.Type modsType() {
            return (this.bitmap$0 & 2) == 0 ? this.modsType$lzycompute() : this.modsType;
         }

         private Types.Type flagsType$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 4) == 0) {
                  this.flagsType = this.universeMemberType(this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().FlagSet());
                  this.bitmap$0 |= 4;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.flagsType;
         }

         public Types.Type flagsType() {
            return (this.bitmap$0 & 4) == 0 ? this.flagsType$lzycompute() : this.flagsType;
         }

         private Types.Type symbolType$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 8) == 0) {
                  this.symbolType = this.universeMemberType((Names.TypeName)this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Symbol());
                  this.bitmap$0 |= 8;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.symbolType;
         }

         public Types.Type symbolType() {
            return (this.bitmap$0 & 8) == 0 ? this.symbolType$lzycompute() : this.symbolType;
         }

         private Types.Type treeType$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 16) == 0) {
                  this.treeType = this.universeMemberType(this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Tree());
                  this.bitmap$0 |= 16;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.treeType;
         }

         public Types.Type treeType() {
            return (this.bitmap$0 & 16) == 0 ? this.treeType$lzycompute() : this.treeType;
         }

         private Types.Type caseDefType$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 32) == 0) {
                  this.caseDefType = this.universeMemberType(this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().CaseDef());
                  this.bitmap$0 |= 32;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.caseDefType;
         }

         public Types.Type caseDefType() {
            return (this.bitmap$0 & 32) == 0 ? this.caseDefType$lzycompute() : this.caseDefType;
         }

         private Types.Type liftableType$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 64) == 0) {
                  this.liftableType = this.universeMemberType(this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Liftable());
                  this.bitmap$0 |= 64;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.liftableType;
         }

         public Types.Type liftableType() {
            return (this.bitmap$0 & 64) == 0 ? this.liftableType$lzycompute() : this.liftableType;
         }

         private Types.Type unliftableType$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 128) == 0) {
                  this.unliftableType = this.universeMemberType(this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Unliftable());
                  this.bitmap$0 |= 128;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.unliftableType;
         }

         public Types.Type unliftableType() {
            return (this.bitmap$0 & 128) == 0 ? this.unliftableType$lzycompute() : this.unliftableType;
         }

         private Types.Type iterableTreeType$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 256) == 0) {
                  this.iterableTreeType = this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().appliedType((Symbols.Symbol)this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().IterableClass(), (Seq)scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Types.Type[]{this.treeType()}));
                  this.bitmap$0 |= 256;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.iterableTreeType;
         }

         public Types.Type iterableTreeType() {
            return (this.bitmap$0 & 256) == 0 ? this.iterableTreeType$lzycompute() : this.iterableTreeType;
         }

         private Types.Type listTreeType$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 512) == 0) {
                  this.listTreeType = this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().appliedType((Symbols.Symbol)this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().ListClass(), (Seq)scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Types.Type[]{this.treeType()}));
                  this.bitmap$0 |= 512;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.listTreeType;
         }

         public Types.Type listTreeType() {
            return (this.bitmap$0 & 512) == 0 ? this.listTreeType$lzycompute() : this.listTreeType;
         }

         private Types.Type listListTreeType$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 1024) == 0) {
                  this.listListTreeType = this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().appliedType((Symbols.Symbol)this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().ListClass(), (Seq)scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Types.Type[]{this.listTreeType()}));
                  this.bitmap$0 |= 1024;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.listListTreeType;
         }

         public Types.Type listListTreeType() {
            return (this.bitmap$0 & 1024) == 0 ? this.listListTreeType$lzycompute() : this.listListTreeType;
         }

         public Types.Type universeMemberType(final Names.TypeName name) {
            return this.universe.tpe().memberType(this.scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer().getTypeMember(this.universe.symbol(), name));
         }

         // $FF: synthetic method
         public DefinitionsClass scala$reflect$internal$Definitions$DefinitionsClass$UniverseDependentTypes$$$outer() {
            return this.$outer;
         }

         public UniverseDependentTypes(final Trees.Tree universe) {
            this.universe = universe;
            if (DefinitionsClass.this == null) {
               throw null;
            } else {
               this.$outer = DefinitionsClass.this;
               super();
            }
         }
      }

      public final class RunDefinitions {
         private Symbols.Symbol String_valueOf_Int;
         private Symbols.TermSymbol StringContext_f;
         private Symbols.TermSymbol StringContext_s;
         private Symbols.TermSymbol StringContext_raw;
         private Symbols.TermSymbol StringContext_apply;
         private Symbols.ClassSymbol ArrowAssocClass;
         private Symbols.Symbol Boxes_isNumberOrBool;
         private Symbols.Symbol Boxes_isNumber;
         private Map boxMethod;
         private Map unboxMethod;
         private Set isUnbox;
         private Set isBox;
         private Symbols.TermSymbol Boolean_and;
         private Symbols.TermSymbol Boolean_or;
         private Symbols.TermSymbol Boolean_not;
         private Symbols.TermSymbol Option_apply;
         private Symbols.Symbol Option_isDefined;
         private Symbols.Symbol Option_get;
         private Symbols.TermSymbol List_apply;
         private Symbols.TermSymbol Seq_apply;
         private Map TagMaterializers;
         private Set TagSymbols;
         private Symbols.Symbol Predef_conforms;
         private Symbols.ModuleSymbol SubTypeModule;
         private Symbols.TermSymbol SubType_refl;
         private Symbols.TermSymbol Predef_classOf;
         private Symbols.TermSymbol Predef_double2Double;
         private Symbols.TermSymbol Predef_float2Float;
         private Symbols.TermSymbol Predef_byte2Byte;
         private Symbols.TermSymbol Predef_short2Short;
         private Symbols.TermSymbol Predef_char2Character;
         private Symbols.TermSymbol Predef_int2Integer;
         private Symbols.TermSymbol Predef_long2Long;
         private Symbols.TermSymbol Predef_boolean2Boolean;
         private Set PreDef_primitives2Primitives;
         private Symbols.TermSymbol Predef_implicitly;
         private Symbols.TermSymbol Predef_$qmark$qmark$qmark;
         private Symbols.Symbol Predef_any2stringaddMethod;
         private Symbols.TermSymbol arrayApplyMethod;
         private Symbols.TermSymbol arrayUpdateMethod;
         private Symbols.TermSymbol arrayLengthMethod;
         private Symbols.TermSymbol arrayCloneMethod;
         private Symbols.TermSymbol ensureAccessibleMethod;
         private Symbols.TermSymbol arrayClassMethod;
         private Symbols.TermSymbol wrapVarargsRefArrayMethod;
         private Symbols.TermSymbol genericWrapVarargsRefArrayMethod;
         private Seq primitiveWrapArrayMethod;
         private Symbols.TermSymbol RuntimeStatics_ioobe;
         private Symbols.ClassSymbol GroupOfSpecializable;
         private Symbols.Symbol WeakTypeTagClass;
         private Symbols.Symbol WeakTypeTagModule;
         private Symbols.Symbol TypeTagClass;
         private Symbols.Symbol TypeTagModule;
         private Symbols.Symbol MacroContextUniverse;
         private Symbols.TermSymbol materializeClassTag;
         private Symbols.Symbol materializeWeakTypeTag;
         private Symbols.Symbol materializeTypeTag;
         private Symbols.ModuleSymbol experimentalModule;
         private Symbols.Symbol MacrosFeature;
         private Symbols.Symbol DynamicsFeature;
         private Symbols.Symbol PostfixOpsFeature;
         private Symbols.Symbol ReflectiveCallsFeature;
         private Symbols.Symbol ImplicitConversionsFeature;
         /** @deprecated */
         private Symbols.Symbol HigherKindsFeature;
         private Symbols.Symbol ExistentialsFeature;
         private Symbols.Symbol ApiUniverseReify;
         private Symbols.Symbol ReflectRuntimeUniverse;
         private Symbols.Symbol ReflectRuntimeCurrentMirror;
         private Symbols.Symbol TreesTreeType;
         private volatile TreeType$ TreeType$module;
         private volatile SubtreeType$ SubtreeType$module;
         private volatile ExprClassOf$ ExprClassOf$module;
         private Symbols.TypeSymbol PartialManifestClass;
         private Set ManifestSymbols;
         private Symbols.Symbol Scala_Java8_CompatPackage;
         private Symbols.Symbol Future_unit;
         private Symbols.Symbol Future_onComplete;
         private Symbols.Symbol Future_value;
         private Symbols.Symbol Promise_complete;
         private volatile long bitmap$0;
         private volatile long bitmap$1;
         // $FF: synthetic field
         private final DefinitionsClass $outer;

         public TreeType$ TreeType() {
            if (this.TreeType$module == null) {
               this.TreeType$lzycompute$1();
            }

            return this.TreeType$module;
         }

         public SubtreeType$ SubtreeType() {
            if (this.SubtreeType$module == null) {
               this.SubtreeType$lzycompute$1();
            }

            return this.SubtreeType$module;
         }

         public ExprClassOf$ ExprClassOf() {
            if (this.ExprClassOf$module == null) {
               this.ExprClassOf$lzycompute$1();
            }

            return this.ExprClassOf$module;
         }

         public boolean isStringAddition(final Symbols.Symbol sym) {
            Symbols.MethodSymbol var2 = this.$outer.String_$plus();
            if (sym == null) {
               if (var2 == null) {
                  return true;
               }
            } else if (sym.equals(var2)) {
               return true;
            }

            return false;
         }

         private Symbols.Symbol String_valueOf_Int$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 1L) == 0L) {
                  this.String_valueOf_Int = this.$outer.getMemberMethod(this.$outer.StringClass().companionModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().valueOf()).suchThat((x) -> BoxesRunTime.boxToBoolean($anonfun$String_valueOf_Int$1(this, x)));
                  this.bitmap$0 |= 1L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.String_valueOf_Int;
         }

         public Symbols.Symbol String_valueOf_Int() {
            return (this.bitmap$0 & 1L) == 0L ? this.String_valueOf_Int$lzycompute() : this.String_valueOf_Int;
         }

         private Symbols.TermSymbol StringContext_f$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 2L) == 0L) {
                  this.StringContext_f = this.$outer.getMemberMethod(this.$outer.StringContextClass(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().f());
                  this.bitmap$0 |= 2L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.StringContext_f;
         }

         public Symbols.TermSymbol StringContext_f() {
            return (this.bitmap$0 & 2L) == 0L ? this.StringContext_f$lzycompute() : this.StringContext_f;
         }

         private Symbols.TermSymbol StringContext_s$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 4L) == 0L) {
                  this.StringContext_s = this.$outer.getMemberMethod(this.$outer.StringContextClass(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().s());
                  this.bitmap$0 |= 4L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.StringContext_s;
         }

         public Symbols.TermSymbol StringContext_s() {
            return (this.bitmap$0 & 4L) == 0L ? this.StringContext_s$lzycompute() : this.StringContext_s;
         }

         private Symbols.TermSymbol StringContext_raw$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 8L) == 0L) {
                  this.StringContext_raw = this.$outer.getMemberMethod(this.$outer.StringContextClass(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().raw_());
                  this.bitmap$0 |= 8L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.StringContext_raw;
         }

         public Symbols.TermSymbol StringContext_raw() {
            return (this.bitmap$0 & 8L) == 0L ? this.StringContext_raw$lzycompute() : this.StringContext_raw;
         }

         private Symbols.TermSymbol StringContext_apply$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 16L) == 0L) {
                  this.StringContext_apply = this.$outer.getMemberMethod(this.$outer.StringContextModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply());
                  this.bitmap$0 |= 16L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.StringContext_apply;
         }

         public Symbols.TermSymbol StringContext_apply() {
            return (this.bitmap$0 & 16L) == 0L ? this.StringContext_apply$lzycompute() : this.StringContext_apply;
         }

         private Symbols.ClassSymbol ArrowAssocClass$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 32L) == 0L) {
                  this.ArrowAssocClass = this.$outer.getMemberClass(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().TypeName().apply("ArrowAssoc"));
                  this.bitmap$0 |= 32L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.ArrowAssocClass;
         }

         public Symbols.ClassSymbol ArrowAssocClass() {
            return (this.bitmap$0 & 32L) == 0L ? this.ArrowAssocClass$lzycompute() : this.ArrowAssocClass;
         }

         public boolean isArrowAssoc(final Symbols.Symbol sym) {
            Symbols.Symbol var10000 = sym.owner();
            Symbols.ClassSymbol var2 = this.ArrowAssocClass();
            if (var10000 == null) {
               if (var2 == null) {
                  return true;
               }
            } else if (var10000.equals(var2)) {
               return true;
            }

            return false;
         }

         private Symbols.Symbol Boxes_isNumberOrBool$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 64L) == 0L) {
                  this.Boxes_isNumberOrBool = this.$outer.getDecl(this.$outer.BoxesRunTimeClass(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().isBoxedNumberOrBoolean());
                  this.bitmap$0 |= 64L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Boxes_isNumberOrBool;
         }

         public Symbols.Symbol Boxes_isNumberOrBool() {
            return (this.bitmap$0 & 64L) == 0L ? this.Boxes_isNumberOrBool$lzycompute() : this.Boxes_isNumberOrBool;
         }

         private Symbols.Symbol Boxes_isNumber$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 128L) == 0L) {
                  this.Boxes_isNumber = this.$outer.getDecl(this.$outer.BoxesRunTimeClass(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().isBoxedNumber());
                  this.bitmap$0 |= 128L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Boxes_isNumber;
         }

         public Symbols.Symbol Boxes_isNumber() {
            return (this.bitmap$0 & 128L) == 0L ? this.Boxes_isNumber$lzycompute() : this.Boxes_isNumber;
         }

         private Symbols.ModuleSymbol valueClassCompanion(final Names.TermName name) {
            Symbols.Symbol var2 = this.$outer.getMember(this.$outer.ScalaPackageClass(), name);
            if (var2 instanceof Symbols.ModuleSymbol) {
               return (Symbols.ModuleSymbol)var2;
            } else {
               throw this.$outer.scala$reflect$internal$Definitions$$catastrophicFailure();
            }
         }

         private Symbols.TermSymbol valueCompanionMember(final Names.Name className, final Names.TermName methodName) {
            return this.$outer.getMemberMethod(this.valueClassCompanion(className.toTermName()).moduleClass(), methodName);
         }

         private Map boxMethod$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 256L) == 0L) {
                  this.boxMethod = this.$outer.scala$reflect$internal$Definitions$$classesMap((x) -> this.valueCompanionMember(x, this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().box()));
                  this.bitmap$0 |= 256L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.boxMethod;
         }

         public Map boxMethod() {
            return (this.bitmap$0 & 256L) == 0L ? this.boxMethod$lzycompute() : this.boxMethod;
         }

         private Map unboxMethod$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 512L) == 0L) {
                  this.unboxMethod = this.$outer.scala$reflect$internal$Definitions$$classesMap((x) -> this.valueCompanionMember(x, this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().unbox()));
                  this.bitmap$0 |= 512L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.unboxMethod;
         }

         public Map unboxMethod() {
            return (this.bitmap$0 & 512L) == 0L ? this.unboxMethod$lzycompute() : this.unboxMethod;
         }

         private Set isUnbox$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 1024L) == 0L) {
                  this.isUnbox = this.unboxMethod().values().toSet();
                  this.bitmap$0 |= 1024L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.isUnbox;
         }

         public Set isUnbox() {
            return (this.bitmap$0 & 1024L) == 0L ? this.isUnbox$lzycompute() : this.isUnbox;
         }

         private Set isBox$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 2048L) == 0L) {
                  this.isBox = this.boxMethod().values().toSet();
                  this.bitmap$0 |= 2048L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.isBox;
         }

         public Set isBox() {
            return (this.bitmap$0 & 2048L) == 0L ? this.isBox$lzycompute() : this.isBox;
         }

         private Symbols.TermSymbol Boolean_and$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 4096L) == 0L) {
                  definitions$ var10001 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().definitions();
                  if (var10001 == null) {
                     throw null;
                  }

                  this.Boolean_and = var10001.Boolean_and();
                  this.bitmap$0 |= 4096L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Boolean_and;
         }

         public Symbols.TermSymbol Boolean_and() {
            return (this.bitmap$0 & 4096L) == 0L ? this.Boolean_and$lzycompute() : this.Boolean_and;
         }

         private Symbols.TermSymbol Boolean_or$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 8192L) == 0L) {
                  definitions$ var10001 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().definitions();
                  if (var10001 == null) {
                     throw null;
                  }

                  this.Boolean_or = var10001.Boolean_or();
                  this.bitmap$0 |= 8192L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Boolean_or;
         }

         public Symbols.TermSymbol Boolean_or() {
            return (this.bitmap$0 & 8192L) == 0L ? this.Boolean_or$lzycompute() : this.Boolean_or;
         }

         private Symbols.TermSymbol Boolean_not$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 16384L) == 0L) {
                  definitions$ var10001 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().definitions();
                  if (var10001 == null) {
                     throw null;
                  }

                  this.Boolean_not = var10001.Boolean_not();
                  this.bitmap$0 |= 16384L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Boolean_not;
         }

         public Symbols.TermSymbol Boolean_not() {
            return (this.bitmap$0 & 16384L) == 0L ? this.Boolean_not$lzycompute() : this.Boolean_not;
         }

         private Symbols.TermSymbol Option_apply$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 32768L) == 0L) {
                  this.Option_apply = this.$outer.getMemberMethod(this.$outer.OptionModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply());
                  this.bitmap$0 |= 32768L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Option_apply;
         }

         public Symbols.TermSymbol Option_apply() {
            return (this.bitmap$0 & 32768L) == 0L ? this.Option_apply$lzycompute() : this.Option_apply;
         }

         private Symbols.Symbol Option_isDefined$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 65536L) == 0L) {
                  this.Option_isDefined = this.$outer.getMemberMethod(this.$outer.OptionClass(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().TermName().apply("isDefined"));
                  this.bitmap$0 |= 65536L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Option_isDefined;
         }

         public Symbols.Symbol Option_isDefined() {
            return (this.bitmap$0 & 65536L) == 0L ? this.Option_isDefined$lzycompute() : this.Option_isDefined;
         }

         private Symbols.Symbol Option_get$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 131072L) == 0L) {
                  this.Option_get = this.$outer.getMemberMethod(this.$outer.OptionClass(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().TermName().apply("get"));
                  this.bitmap$0 |= 131072L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Option_get;
         }

         public Symbols.Symbol Option_get() {
            return (this.bitmap$0 & 131072L) == 0L ? this.Option_get$lzycompute() : this.Option_get;
         }

         private Symbols.TermSymbol List_apply$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 262144L) == 0L) {
                  this.List_apply = this.$outer.List_apply();
                  this.bitmap$0 |= 262144L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.List_apply;
         }

         private Symbols.TermSymbol List_apply() {
            return (this.bitmap$0 & 262144L) == 0L ? this.List_apply$lzycompute() : this.List_apply;
         }

         private Symbols.TermSymbol Seq_apply$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 524288L) == 0L) {
                  Symbols.TermSymbol result;
                  SymbolTable var10001;
                  boolean var10002;
                  label69: {
                     label68: {
                        result = this.$outer.getMemberMethod(this.$outer.SeqModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply());
                        var10001 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer();
                        Symbols.TermSymbol var2 = this.$outer.getMemberMethod(this.$outer.Collection_SeqModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply());
                        if (result == null) {
                           if (var2 == null) {
                              break label68;
                           }
                        } else if (result.equals(var2)) {
                           break label68;
                        }

                        var10002 = false;
                        break label69;
                     }

                     var10002 = true;
                  }

                  boolean assert_assertion = var10002;
                  if (var10001 == null) {
                     throw null;
                  }

                  SymbolTable assert_this = var10001;
                  if (!assert_assertion) {
                     throw assert_this.throwAssertionError("Expected collection.Seq and immutable.Seq to have the same apply member");
                  }

                  assert_this = null;
                  this.Seq_apply = result;
                  this.bitmap$0 |= 524288L;
               }
            } catch (Throwable var6) {
               throw var6;
            }

            return this.Seq_apply;
         }

         private Symbols.TermSymbol Seq_apply() {
            return (this.bitmap$0 & 524288L) == 0L ? this.Seq_apply$lzycompute() : this.Seq_apply;
         }

         public final boolean isListApply(final Trees.Tree tree) {
            if (tree.symbol().isInitialized() && this.$outer.ListModule().hasCompleteInfo()) {
               label26: {
                  Symbols.Symbol var10000 = tree.symbol();
                  Symbols.TermSymbol var2 = this.List_apply();
                  if (var10000 == null) {
                     if (var2 == null) {
                        break label26;
                     }
                  } else if (var10000.equals(var2)) {
                     break label26;
                  }

                  Names.Name var4 = tree.symbol().name();
                  Names.TermName var3 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().apply();
                  if (var4 == null) {
                     if (var3 != null) {
                        return false;
                     }
                  } else if (!var4.equals(var3)) {
                     return false;
                  }
               }

               if (scala.PartialFunction..MODULE$.cond(tree, new Serializable() {
                  private static final long serialVersionUID = 0L;
                  // $FF: synthetic field
                  private final RunDefinitions $outer;

                  public final Object applyOrElse(final Trees.Tree x1, final Function1 default) {
                     if (x1 != null) {
                        Some var3 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$RunDefinitions$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().treeInfo().Applied().unapply(x1);
                        if (!var3.isEmpty()) {
                           Trees.Tree var4 = (Trees.Tree)((Tuple3)var3.value())._1();
                           if (var4 instanceof Trees.Select) {
                              boolean var9;
                              label41: {
                                 Trees.Tree qual = ((Trees.Select)var4).qualifier();
                                 if (this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$RunDefinitions$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().treeInfo().isQualifierSafeToElide(qual)) {
                                    Symbols.Symbol var10000 = qual.symbol();
                                    Symbols.ModuleSymbol var6 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$RunDefinitions$$$outer().ListModule();
                                    if (var10000 == null) {
                                       if (var6 == null) {
                                          break label41;
                                       }
                                    } else if (var10000.equals(var6)) {
                                       break label41;
                                    }

                                    var10000 = qual.symbol();
                                    Symbols.TermSymbol var7 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$RunDefinitions$$$outer().ListModuleAlias();
                                    if (var10000 == null) {
                                       if (var7 == null) {
                                          break label41;
                                       }
                                    } else if (var10000.equals(var7)) {
                                       break label41;
                                    }
                                 }

                                 var9 = false;
                                 return var9;
                              }

                              var9 = true;
                              return var9;
                           }
                        }
                     }

                     return default.apply(x1);
                  }

                  public final boolean isDefinedAt(final Trees.Tree x1) {
                     if (x1 != null) {
                        Some var2 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$RunDefinitions$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().treeInfo().Applied().unapply(x1);
                        if (!var2.isEmpty() && (Trees.Tree)((Tuple3)var2.value())._1() instanceof Trees.Select) {
                           return true;
                        }
                     }

                     return false;
                  }

                  public {
                     if (RunDefinitions.this == null) {
                        throw null;
                     } else {
                        this.$outer = RunDefinitions.this;
                     }
                  }
               })) {
                  return true;
               }
            }

            return false;
         }

         public final boolean isSeqApply(final Trees.Tree tree) {
            if (!this.isListApply(tree)) {
               Symbols.Symbol var10000 = tree.symbol();
               Symbols.TermSymbol var2 = this.Seq_apply();
               if (var10000 == null) {
                  if (var2 != null) {
                     return false;
                  }
               } else if (!var10000.equals(var2)) {
                  return false;
               }

               label33: {
                  Some var3 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().treeInfo().Applied().unapply(tree);
                  if (!var3.isEmpty()) {
                     Trees.Tree core = (Trees.Tree)((Tuple3)var3.value())._1();
                     if (core instanceof Trees.Select) {
                        Trees.Tree qual = ((Trees.Select)core).qualifier();
                        var6 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().treeInfo().isQualifierSafeToElide(qual) && this.isSeqFactory$1(qual.symbol());
                        break label33;
                     }
                  }

                  var6 = false;
               }

               if (var6) {
                  return true;
               } else {
                  return false;
               }
            } else {
               return true;
            }
         }

         public final boolean isNil(final Symbols.Symbol sym) {
            Symbols.ModuleSymbol var2 = this.$outer.NilModule();
            if (sym == null) {
               if (var2 == null) {
                  return true;
               }
            } else if (sym.equals(var2)) {
               return true;
            }

            Symbols.TermSymbol var3 = this.$outer.NilModuleAlias();
            if (sym == null) {
               if (var3 == null) {
                  return true;
               }
            } else if (sym.equals(var3)) {
               return true;
            }

            return false;
         }

         public boolean isPredefClassOf(final Symbols.Symbol sym) {
            if (!this.$outer.PredefModule().hasCompleteInfo()) {
               return this.$outer.isPredefMemberNamed(sym, this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().classOf());
            } else {
               Symbols.TermSymbol var2 = this.Predef_classOf();
               if (sym == null) {
                  if (var2 == null) {
                     return true;
                  }
               } else if (sym.equals(var2)) {
                  return true;
               }

               return false;
            }
         }

         private Map TagMaterializers$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 1048576L) == 0L) {
                  Map var10001 = scala.Predef..MODULE$.Map();
                  ScalaRunTime var10002 = scala.runtime.ScalaRunTime..MODULE$;
                  Tuple2[] var10003 = new Tuple2[3];
                  Predef.ArrowAssoc var10006 = scala.Predef.ArrowAssoc..MODULE$;
                  Symbols.ClassSymbol var18 = this.$outer.ClassTagClass();
                  Symbols.TermSymbol $minus$greater$extension_y = this.materializeClassTag();
                  Object $minus$greater$extension_$this = var18;
                  Tuple2 var19 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_y);
                  $minus$greater$extension_$this = null;
                  $minus$greater$extension_y = null;
                  var10003[0] = var19;
                  Predef.ArrowAssoc var20 = scala.Predef.ArrowAssoc..MODULE$;
                  Symbols.Symbol var21 = this.WeakTypeTagClass();
                  Symbols.Symbol $minus$greater$extension_yx = this.materializeWeakTypeTag();
                  Object $minus$greater$extension_$this = var21;
                  Tuple2 var22 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yx);
                  $minus$greater$extension_$this = null;
                  $minus$greater$extension_yx = null;
                  var10003[1] = var22;
                  Predef.ArrowAssoc var23 = scala.Predef.ArrowAssoc..MODULE$;
                  Symbols.Symbol var24 = this.TypeTagClass();
                  Symbols.Symbol $minus$greater$extension_yxx = this.materializeTypeTag();
                  Object $minus$greater$extension_$this = var24;
                  Tuple2 var25 = new Tuple2($minus$greater$extension_$this, $minus$greater$extension_yxx);
                  $minus$greater$extension_$this = null;
                  $minus$greater$extension_yxx = null;
                  var10003[2] = var25;
                  ArraySeq apply_elems = var10002.wrapRefArray(var10003);
                  if (var10001 == null) {
                     throw null;
                  }

                  Object var17 = MapFactory.apply$(var10001, apply_elems);
                  Object var16 = null;
                  this.TagMaterializers = (Map)var17;
                  this.bitmap$0 |= 1048576L;
               }
            } catch (Throwable var9) {
               throw var9;
            }

            return this.TagMaterializers;
         }

         public Map TagMaterializers() {
            return (this.bitmap$0 & 1048576L) == 0L ? this.TagMaterializers$lzycompute() : this.TagMaterializers;
         }

         private Set TagSymbols$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 2097152L) == 0L) {
                  this.TagSymbols = this.TagMaterializers().keySet();
                  this.bitmap$0 |= 2097152L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.TagSymbols;
         }

         public Set TagSymbols() {
            return (this.bitmap$0 & 2097152L) == 0L ? this.TagSymbols$lzycompute() : this.TagSymbols;
         }

         private Symbols.Symbol Predef_conforms$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 4194304L) == 0L) {
                  this.Predef_conforms = this.$outer.getMemberIfDefined(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().conforms());
                  this.bitmap$0 |= 4194304L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_conforms;
         }

         public Symbols.Symbol Predef_conforms() {
            return (this.bitmap$0 & 4194304L) == 0L ? this.Predef_conforms$lzycompute() : this.Predef_conforms;
         }

         private Symbols.ModuleSymbol SubTypeModule$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 8388608L) == 0L) {
                  this.SubTypeModule = ((Mirrors.RootsBase)this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).requiredModule(scala.reflect.ClassTag..MODULE$.apply(scala..less.colon.less.class));
                  this.bitmap$0 |= 8388608L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.SubTypeModule;
         }

         public Symbols.ModuleSymbol SubTypeModule() {
            return (this.bitmap$0 & 8388608L) == 0L ? this.SubTypeModule$lzycompute() : this.SubTypeModule;
         }

         private Symbols.TermSymbol SubType_refl$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 16777216L) == 0L) {
                  this.SubType_refl = this.$outer.getMemberMethod(this.SubTypeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().refl());
                  this.bitmap$0 |= 16777216L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.SubType_refl;
         }

         public Symbols.TermSymbol SubType_refl() {
            return (this.bitmap$0 & 16777216L) == 0L ? this.SubType_refl$lzycompute() : this.SubType_refl;
         }

         private Symbols.TermSymbol Predef_classOf$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 33554432L) == 0L) {
                  this.Predef_classOf = this.$outer.getMemberMethod(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().classOf());
                  this.bitmap$0 |= 33554432L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_classOf;
         }

         public Symbols.TermSymbol Predef_classOf() {
            return (this.bitmap$0 & 33554432L) == 0L ? this.Predef_classOf$lzycompute() : this.Predef_classOf;
         }

         private Symbols.TermSymbol Predef_double2Double$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 67108864L) == 0L) {
                  this.Predef_double2Double = this.$outer.getMemberMethod(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().double2Double());
                  this.bitmap$0 |= 67108864L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_double2Double;
         }

         public Symbols.TermSymbol Predef_double2Double() {
            return (this.bitmap$0 & 67108864L) == 0L ? this.Predef_double2Double$lzycompute() : this.Predef_double2Double;
         }

         private Symbols.TermSymbol Predef_float2Float$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 134217728L) == 0L) {
                  this.Predef_float2Float = this.$outer.getMemberMethod(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().float2Float());
                  this.bitmap$0 |= 134217728L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_float2Float;
         }

         public Symbols.TermSymbol Predef_float2Float() {
            return (this.bitmap$0 & 134217728L) == 0L ? this.Predef_float2Float$lzycompute() : this.Predef_float2Float;
         }

         private Symbols.TermSymbol Predef_byte2Byte$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 268435456L) == 0L) {
                  this.Predef_byte2Byte = this.$outer.getMemberMethod(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().byte2Byte());
                  this.bitmap$0 |= 268435456L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_byte2Byte;
         }

         public Symbols.TermSymbol Predef_byte2Byte() {
            return (this.bitmap$0 & 268435456L) == 0L ? this.Predef_byte2Byte$lzycompute() : this.Predef_byte2Byte;
         }

         private Symbols.TermSymbol Predef_short2Short$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 536870912L) == 0L) {
                  this.Predef_short2Short = this.$outer.getMemberMethod(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().short2Short());
                  this.bitmap$0 |= 536870912L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_short2Short;
         }

         public Symbols.TermSymbol Predef_short2Short() {
            return (this.bitmap$0 & 536870912L) == 0L ? this.Predef_short2Short$lzycompute() : this.Predef_short2Short;
         }

         private Symbols.TermSymbol Predef_char2Character$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 1073741824L) == 0L) {
                  this.Predef_char2Character = this.$outer.getMemberMethod(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().char2Character());
                  this.bitmap$0 |= 1073741824L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_char2Character;
         }

         public Symbols.TermSymbol Predef_char2Character() {
            return (this.bitmap$0 & 1073741824L) == 0L ? this.Predef_char2Character$lzycompute() : this.Predef_char2Character;
         }

         private Symbols.TermSymbol Predef_int2Integer$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 2147483648L) == 0L) {
                  this.Predef_int2Integer = this.$outer.getMemberMethod(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().int2Integer());
                  this.bitmap$0 |= 2147483648L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_int2Integer;
         }

         public Symbols.TermSymbol Predef_int2Integer() {
            return (this.bitmap$0 & 2147483648L) == 0L ? this.Predef_int2Integer$lzycompute() : this.Predef_int2Integer;
         }

         private Symbols.TermSymbol Predef_long2Long$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 4294967296L) == 0L) {
                  this.Predef_long2Long = this.$outer.getMemberMethod(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().long2Long());
                  this.bitmap$0 |= 4294967296L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_long2Long;
         }

         public Symbols.TermSymbol Predef_long2Long() {
            return (this.bitmap$0 & 4294967296L) == 0L ? this.Predef_long2Long$lzycompute() : this.Predef_long2Long;
         }

         private Symbols.TermSymbol Predef_boolean2Boolean$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 8589934592L) == 0L) {
                  this.Predef_boolean2Boolean = this.$outer.getMemberMethod(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().boolean2Boolean());
                  this.bitmap$0 |= 8589934592L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_boolean2Boolean;
         }

         public Symbols.TermSymbol Predef_boolean2Boolean() {
            return (this.bitmap$0 & 8589934592L) == 0L ? this.Predef_boolean2Boolean$lzycompute() : this.Predef_boolean2Boolean;
         }

         private Set PreDef_primitives2Primitives$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 17179869184L) == 0L) {
                  Set var10001 = scala.Predef..MODULE$.Set();
                  ArraySeq apply_elems = scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.Symbol[]{this.Predef_double2Double(), this.Predef_float2Float(), this.Predef_byte2Byte(), this.Predef_short2Short(), this.Predef_char2Character(), this.Predef_int2Integer(), this.Predef_long2Long(), this.Predef_boolean2Boolean()});
                  if (var10001 == null) {
                     throw null;
                  }

                  Object var5 = IterableFactory.apply$(var10001, apply_elems);
                  Object var4 = null;
                  this.PreDef_primitives2Primitives = (Set)var5;
                  this.bitmap$0 |= 17179869184L;
               }
            } catch (Throwable var3) {
               throw var3;
            }

            return this.PreDef_primitives2Primitives;
         }

         public Set PreDef_primitives2Primitives() {
            return (this.bitmap$0 & 17179869184L) == 0L ? this.PreDef_primitives2Primitives$lzycompute() : this.PreDef_primitives2Primitives;
         }

         private Symbols.TermSymbol Predef_implicitly$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 34359738368L) == 0L) {
                  this.Predef_implicitly = this.$outer.getMemberMethod(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().implicitly());
                  this.bitmap$0 |= 34359738368L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_implicitly;
         }

         public Symbols.TermSymbol Predef_implicitly() {
            return (this.bitmap$0 & 34359738368L) == 0L ? this.Predef_implicitly$lzycompute() : this.Predef_implicitly;
         }

         private Symbols.TermSymbol Predef_$qmark$qmark$qmark$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 68719476736L) == 0L) {
                  this.Predef_$qmark$qmark$qmark = this.$outer.Predef_$qmark$qmark$qmark();
                  this.bitmap$0 |= 68719476736L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_$qmark$qmark$qmark;
         }

         public Symbols.TermSymbol Predef_$qmark$qmark$qmark() {
            return (this.bitmap$0 & 68719476736L) == 0L ? this.Predef_$qmark$qmark$qmark$lzycompute() : this.Predef_$qmark$qmark$qmark;
         }

         private Symbols.Symbol Predef_any2stringaddMethod$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 137438953472L) == 0L) {
                  this.Predef_any2stringaddMethod = this.$outer.getMemberMethod(this.$outer.PredefModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().any2stringadd()).suchThat((x$29) -> BoxesRunTime.boxToBoolean($anonfun$Predef_any2stringaddMethod$1(x$29)));
                  this.bitmap$0 |= 137438953472L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Predef_any2stringaddMethod;
         }

         public Symbols.Symbol Predef_any2stringaddMethod() {
            return (this.bitmap$0 & 137438953472L) == 0L ? this.Predef_any2stringaddMethod$lzycompute() : this.Predef_any2stringaddMethod;
         }

         private Symbols.TermSymbol arrayApplyMethod$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 274877906944L) == 0L) {
                  this.arrayApplyMethod = this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().array_apply());
                  this.bitmap$0 |= 274877906944L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.arrayApplyMethod;
         }

         public Symbols.TermSymbol arrayApplyMethod() {
            return (this.bitmap$0 & 274877906944L) == 0L ? this.arrayApplyMethod$lzycompute() : this.arrayApplyMethod;
         }

         private Symbols.TermSymbol arrayUpdateMethod$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 549755813888L) == 0L) {
                  this.arrayUpdateMethod = this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().array_update());
                  this.bitmap$0 |= 549755813888L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.arrayUpdateMethod;
         }

         public Symbols.TermSymbol arrayUpdateMethod() {
            return (this.bitmap$0 & 549755813888L) == 0L ? this.arrayUpdateMethod$lzycompute() : this.arrayUpdateMethod;
         }

         private Symbols.TermSymbol arrayLengthMethod$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 1099511627776L) == 0L) {
                  this.arrayLengthMethod = this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().array_length());
                  this.bitmap$0 |= 1099511627776L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.arrayLengthMethod;
         }

         public Symbols.TermSymbol arrayLengthMethod() {
            return (this.bitmap$0 & 1099511627776L) == 0L ? this.arrayLengthMethod$lzycompute() : this.arrayLengthMethod;
         }

         private Symbols.TermSymbol arrayCloneMethod$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 2199023255552L) == 0L) {
                  this.arrayCloneMethod = this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().array_clone());
                  this.bitmap$0 |= 2199023255552L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.arrayCloneMethod;
         }

         public Symbols.TermSymbol arrayCloneMethod() {
            return (this.bitmap$0 & 2199023255552L) == 0L ? this.arrayCloneMethod$lzycompute() : this.arrayCloneMethod;
         }

         private Symbols.TermSymbol ensureAccessibleMethod$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 4398046511104L) == 0L) {
                  this.ensureAccessibleMethod = this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().ensureAccessible());
                  this.bitmap$0 |= 4398046511104L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.ensureAccessibleMethod;
         }

         public Symbols.TermSymbol ensureAccessibleMethod() {
            return (this.bitmap$0 & 4398046511104L) == 0L ? this.ensureAccessibleMethod$lzycompute() : this.ensureAccessibleMethod;
         }

         private Symbols.TermSymbol arrayClassMethod$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 8796093022208L) == 0L) {
                  this.arrayClassMethod = this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().arrayClass());
                  this.bitmap$0 |= 8796093022208L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.arrayClassMethod;
         }

         public Symbols.TermSymbol arrayClassMethod() {
            return (this.bitmap$0 & 8796093022208L) == 0L ? this.arrayClassMethod$lzycompute() : this.arrayClassMethod;
         }

         private Symbols.TermSymbol wrapVarargsRefArrayMethod$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 17592186044416L) == 0L) {
                  this.wrapVarargsRefArrayMethod = this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapRefArray());
                  this.bitmap$0 |= 17592186044416L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.wrapVarargsRefArrayMethod;
         }

         public Symbols.TermSymbol wrapVarargsRefArrayMethod() {
            return (this.bitmap$0 & 17592186044416L) == 0L ? this.wrapVarargsRefArrayMethod$lzycompute() : this.wrapVarargsRefArrayMethod;
         }

         private Symbols.TermSymbol genericWrapVarargsRefArrayMethod$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 35184372088832L) == 0L) {
                  this.genericWrapVarargsRefArrayMethod = this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().genericWrapArray());
                  this.bitmap$0 |= 35184372088832L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.genericWrapVarargsRefArrayMethod;
         }

         public Symbols.TermSymbol genericWrapVarargsRefArrayMethod() {
            return (this.bitmap$0 & 35184372088832L) == 0L ? this.genericWrapVarargsRefArrayMethod$lzycompute() : this.genericWrapVarargsRefArrayMethod;
         }

         private Seq primitiveWrapArrayMethod$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 70368744177664L) == 0L) {
                  this.primitiveWrapArrayMethod = (Seq)scala.package..MODULE$.Seq().apply(scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.Symbol[]{this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapBooleanArray()), this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapByteArray()), this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapCharArray()), this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapIntArray()), this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapDoubleArray()), this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapFloatArray()), this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapLongArray()), this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapShortArray()), this.$outer.getMemberMethod(this.$outer.ScalaRunTimeModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().wrapUnitArray())}));
                  this.bitmap$0 |= 70368744177664L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.primitiveWrapArrayMethod;
         }

         public Seq primitiveWrapArrayMethod() {
            return (this.bitmap$0 & 70368744177664L) == 0L ? this.primitiveWrapArrayMethod$lzycompute() : this.primitiveWrapArrayMethod;
         }

         private Symbols.TermSymbol RuntimeStatics_ioobe$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 140737488355328L) == 0L) {
                  this.RuntimeStatics_ioobe = this.$outer.getMemberMethod(this.$outer.RuntimeStaticsModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().ioobe());
                  this.bitmap$0 |= 140737488355328L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.RuntimeStatics_ioobe;
         }

         public Symbols.TermSymbol RuntimeStatics_ioobe() {
            return (this.bitmap$0 & 140737488355328L) == 0L ? this.RuntimeStatics_ioobe$lzycompute() : this.RuntimeStatics_ioobe;
         }

         private Symbols.ClassSymbol GroupOfSpecializable$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 281474976710656L) == 0L) {
                  this.GroupOfSpecializable = this.$outer.getMemberClass(this.$outer.SpecializableModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Group());
                  this.bitmap$0 |= 281474976710656L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.GroupOfSpecializable;
         }

         public Symbols.ClassSymbol GroupOfSpecializable() {
            return (this.bitmap$0 & 281474976710656L) == 0L ? this.GroupOfSpecializable$lzycompute() : this.GroupOfSpecializable;
         }

         private Symbols.Symbol WeakTypeTagClass$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 562949953421312L) == 0L) {
                  Symbols.Symbol var10001 = this.$outer.TypeTagsClass();
                  if (var10001 == null) {
                     throw null;
                  }

                  Symbols.Symbol map_this = var10001;
                  var10001 = (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$WeakTypeTagClass$1(this, map_this));
                  map_this = null;
                  this.WeakTypeTagClass = var10001;
                  this.bitmap$0 |= 562949953421312L;
               }
            } catch (Throwable var3) {
               throw var3;
            }

            return this.WeakTypeTagClass;
         }

         public Symbols.Symbol WeakTypeTagClass() {
            return (this.bitmap$0 & 562949953421312L) == 0L ? this.WeakTypeTagClass$lzycompute() : this.WeakTypeTagClass;
         }

         private Symbols.Symbol WeakTypeTagModule$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 1125899906842624L) == 0L) {
                  Symbols.Symbol var10001 = this.$outer.TypeTagsClass();
                  if (var10001 == null) {
                     throw null;
                  }

                  Symbols.Symbol map_this = var10001;
                  var10001 = (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$WeakTypeTagModule$1(this, map_this));
                  map_this = null;
                  this.WeakTypeTagModule = var10001;
                  this.bitmap$0 |= 1125899906842624L;
               }
            } catch (Throwable var3) {
               throw var3;
            }

            return this.WeakTypeTagModule;
         }

         public Symbols.Symbol WeakTypeTagModule() {
            return (this.bitmap$0 & 1125899906842624L) == 0L ? this.WeakTypeTagModule$lzycompute() : this.WeakTypeTagModule;
         }

         private Symbols.Symbol TypeTagClass$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 2251799813685248L) == 0L) {
                  Symbols.Symbol var10001 = this.$outer.TypeTagsClass();
                  if (var10001 == null) {
                     throw null;
                  }

                  Symbols.Symbol map_this = var10001;
                  var10001 = (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$TypeTagClass$1(this, map_this));
                  map_this = null;
                  this.TypeTagClass = var10001;
                  this.bitmap$0 |= 2251799813685248L;
               }
            } catch (Throwable var3) {
               throw var3;
            }

            return this.TypeTagClass;
         }

         public Symbols.Symbol TypeTagClass() {
            return (this.bitmap$0 & 2251799813685248L) == 0L ? this.TypeTagClass$lzycompute() : this.TypeTagClass;
         }

         private Symbols.Symbol TypeTagModule$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 4503599627370496L) == 0L) {
                  Symbols.Symbol var10001 = this.$outer.TypeTagsClass();
                  if (var10001 == null) {
                     throw null;
                  }

                  Symbols.Symbol map_this = var10001;
                  var10001 = (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$TypeTagModule$1(this, map_this));
                  map_this = null;
                  this.TypeTagModule = var10001;
                  this.bitmap$0 |= 4503599627370496L;
               }
            } catch (Throwable var3) {
               throw var3;
            }

            return this.TypeTagModule;
         }

         public Symbols.Symbol TypeTagModule() {
            return (this.bitmap$0 & 4503599627370496L) == 0L ? this.TypeTagModule$lzycompute() : this.TypeTagModule;
         }

         private Symbols.Symbol MacroContextUniverse$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 9007199254740992L) == 0L) {
                  this.MacroContextUniverse = this.$outer.MacroContextUniverse();
                  this.bitmap$0 |= 9007199254740992L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.MacroContextUniverse;
         }

         public Symbols.Symbol MacroContextUniverse() {
            return (this.bitmap$0 & 9007199254740992L) == 0L ? this.MacroContextUniverse$lzycompute() : this.MacroContextUniverse;
         }

         private Symbols.TermSymbol materializeClassTag$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 18014398509481984L) == 0L) {
                  this.materializeClassTag = this.$outer.getMemberMethod(this.$outer.ReflectPackage(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().materializeClassTag());
                  this.bitmap$0 |= 18014398509481984L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.materializeClassTag;
         }

         public Symbols.TermSymbol materializeClassTag() {
            return (this.bitmap$0 & 18014398509481984L) == 0L ? this.materializeClassTag$lzycompute() : this.materializeClassTag;
         }

         private Symbols.Symbol materializeWeakTypeTag$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 36028797018963968L) == 0L) {
                  Symbols.Symbol var10001 = this.$outer.ReflectApiPackage();
                  if (var10001 == null) {
                     throw null;
                  }

                  Symbols.Symbol map_this = var10001;
                  var10001 = (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$materializeWeakTypeTag$1(this, map_this));
                  map_this = null;
                  this.materializeWeakTypeTag = var10001;
                  this.bitmap$0 |= 36028797018963968L;
               }
            } catch (Throwable var3) {
               throw var3;
            }

            return this.materializeWeakTypeTag;
         }

         public Symbols.Symbol materializeWeakTypeTag() {
            return (this.bitmap$0 & 36028797018963968L) == 0L ? this.materializeWeakTypeTag$lzycompute() : this.materializeWeakTypeTag;
         }

         private Symbols.Symbol materializeTypeTag$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 72057594037927936L) == 0L) {
                  Symbols.Symbol var10001 = this.$outer.ReflectApiPackage();
                  if (var10001 == null) {
                     throw null;
                  }

                  Symbols.Symbol map_this = var10001;
                  var10001 = (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$materializeTypeTag$1(this, map_this));
                  map_this = null;
                  this.materializeTypeTag = var10001;
                  this.bitmap$0 |= 72057594037927936L;
               }
            } catch (Throwable var3) {
               throw var3;
            }

            return this.materializeTypeTag;
         }

         public Symbols.Symbol materializeTypeTag() {
            return (this.bitmap$0 & 72057594037927936L) == 0L ? this.materializeTypeTag$lzycompute() : this.materializeTypeTag;
         }

         private Symbols.ModuleSymbol experimentalModule$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 144115188075855872L) == 0L) {
                  this.experimentalModule = this.$outer.getMemberModule(this.$outer.languageFeatureModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().experimental());
                  this.bitmap$0 |= 144115188075855872L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.experimentalModule;
         }

         public Symbols.ModuleSymbol experimentalModule() {
            return (this.bitmap$0 & 144115188075855872L) == 0L ? this.experimentalModule$lzycompute() : this.experimentalModule;
         }

         private Symbols.Symbol MacrosFeature$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 288230376151711744L) == 0L) {
                  this.MacrosFeature = this.$outer.getLanguageFeature("macros", this.experimentalModule());
                  this.bitmap$0 |= 288230376151711744L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.MacrosFeature;
         }

         public Symbols.Symbol MacrosFeature() {
            return (this.bitmap$0 & 288230376151711744L) == 0L ? this.MacrosFeature$lzycompute() : this.MacrosFeature;
         }

         private Symbols.Symbol DynamicsFeature$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 576460752303423488L) == 0L) {
                  this.DynamicsFeature = this.$outer.getLanguageFeature("dynamics", this.$outer.getLanguageFeature$default$2());
                  this.bitmap$0 |= 576460752303423488L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.DynamicsFeature;
         }

         public Symbols.Symbol DynamicsFeature() {
            return (this.bitmap$0 & 576460752303423488L) == 0L ? this.DynamicsFeature$lzycompute() : this.DynamicsFeature;
         }

         private Symbols.Symbol PostfixOpsFeature$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 1152921504606846976L) == 0L) {
                  this.PostfixOpsFeature = this.$outer.getLanguageFeature("postfixOps", this.$outer.getLanguageFeature$default$2());
                  this.bitmap$0 |= 1152921504606846976L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.PostfixOpsFeature;
         }

         public Symbols.Symbol PostfixOpsFeature() {
            return (this.bitmap$0 & 1152921504606846976L) == 0L ? this.PostfixOpsFeature$lzycompute() : this.PostfixOpsFeature;
         }

         private Symbols.Symbol ReflectiveCallsFeature$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 2305843009213693952L) == 0L) {
                  this.ReflectiveCallsFeature = this.$outer.getLanguageFeature("reflectiveCalls", this.$outer.getLanguageFeature$default$2());
                  this.bitmap$0 |= 2305843009213693952L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.ReflectiveCallsFeature;
         }

         public Symbols.Symbol ReflectiveCallsFeature() {
            return (this.bitmap$0 & 2305843009213693952L) == 0L ? this.ReflectiveCallsFeature$lzycompute() : this.ReflectiveCallsFeature;
         }

         private Symbols.Symbol ImplicitConversionsFeature$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & 4611686018427387904L) == 0L) {
                  this.ImplicitConversionsFeature = this.$outer.getLanguageFeature("implicitConversions", this.$outer.getLanguageFeature$default$2());
                  this.bitmap$0 |= 4611686018427387904L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.ImplicitConversionsFeature;
         }

         public Symbols.Symbol ImplicitConversionsFeature() {
            return (this.bitmap$0 & 4611686018427387904L) == 0L ? this.ImplicitConversionsFeature$lzycompute() : this.ImplicitConversionsFeature;
         }

         private Symbols.Symbol HigherKindsFeature$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$0 & Long.MIN_VALUE) == 0L) {
                  this.HigherKindsFeature = this.$outer.getLanguageFeature("higherKinds", this.$outer.getLanguageFeature$default$2());
                  this.bitmap$0 |= Long.MIN_VALUE;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.HigherKindsFeature;
         }

         /** @deprecated */
         public Symbols.Symbol HigherKindsFeature() {
            return (this.bitmap$0 & Long.MIN_VALUE) == 0L ? this.HigherKindsFeature$lzycompute() : this.HigherKindsFeature;
         }

         private Symbols.Symbol ExistentialsFeature$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$1 & 1L) == 0L) {
                  this.ExistentialsFeature = this.$outer.getLanguageFeature("existentials", this.$outer.getLanguageFeature$default$2());
                  this.bitmap$1 |= 1L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.ExistentialsFeature;
         }

         public Symbols.Symbol ExistentialsFeature() {
            return (this.bitmap$1 & 1L) == 0L ? this.ExistentialsFeature$lzycompute() : this.ExistentialsFeature;
         }

         private Symbols.Symbol ApiUniverseReify$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$1 & 2L) == 0L) {
                  Symbols.Symbol var10001 = this.$outer.ApiUniverseClass();
                  if (var10001 == null) {
                     throw null;
                  }

                  Symbols.Symbol map_this = var10001;
                  var10001 = map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$ApiUniverseReify$1(this, map_this);
                  map_this = null;
                  this.ApiUniverseReify = var10001;
                  this.bitmap$1 |= 2L;
               }
            } catch (Throwable var3) {
               throw var3;
            }

            return this.ApiUniverseReify;
         }

         public Symbols.Symbol ApiUniverseReify() {
            return (this.bitmap$1 & 2L) == 0L ? this.ApiUniverseReify$lzycompute() : this.ApiUniverseReify;
         }

         private Symbols.Symbol ReflectRuntimeUniverse$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$1 & 4L) == 0L) {
                  this.ReflectRuntimeUniverse = this.$outer.ReflectRuntimeUniverse();
                  this.bitmap$1 |= 4L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.ReflectRuntimeUniverse;
         }

         public Symbols.Symbol ReflectRuntimeUniverse() {
            return (this.bitmap$1 & 4L) == 0L ? this.ReflectRuntimeUniverse$lzycompute() : this.ReflectRuntimeUniverse;
         }

         private Symbols.Symbol ReflectRuntimeCurrentMirror$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$1 & 8L) == 0L) {
                  this.ReflectRuntimeCurrentMirror = this.$outer.ReflectRuntimeCurrentMirror();
                  this.bitmap$1 |= 8L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.ReflectRuntimeCurrentMirror;
         }

         public Symbols.Symbol ReflectRuntimeCurrentMirror() {
            return (this.bitmap$1 & 8L) == 0L ? this.ReflectRuntimeCurrentMirror$lzycompute() : this.ReflectRuntimeCurrentMirror;
         }

         private Symbols.Symbol TreesTreeType$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$1 & 16L) == 0L) {
                  Symbols.Symbol var10001 = this.$outer.TreesClass();
                  if (var10001 == null) {
                     throw null;
                  }

                  Symbols.Symbol map_this = var10001;
                  var10001 = (Symbols.Symbol)(map_this == map_this.scala$reflect$internal$Symbols$Symbol$$$outer().NoSymbol() ? map_this : $anonfun$TreesTreeType$1(this, map_this));
                  map_this = null;
                  this.TreesTreeType = var10001;
                  this.bitmap$1 |= 16L;
               }
            } catch (Throwable var3) {
               throw var3;
            }

            return this.TreesTreeType;
         }

         public Symbols.Symbol TreesTreeType() {
            return (this.bitmap$1 & 16L) == 0L ? this.TreesTreeType$lzycompute() : this.TreesTreeType;
         }

         private Symbols.TypeSymbol PartialManifestClass$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$1 & 32L) == 0L) {
                  this.PartialManifestClass = this.$outer.getTypeMember(this.$outer.ReflectPackage(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().ClassManifest());
                  this.bitmap$1 |= 32L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.PartialManifestClass;
         }

         public Symbols.TypeSymbol PartialManifestClass() {
            return (this.bitmap$1 & 32L) == 0L ? this.PartialManifestClass$lzycompute() : this.PartialManifestClass;
         }

         private Set ManifestSymbols$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$1 & 64L) == 0L) {
                  Set var10001 = scala.Predef..MODULE$.Set();
                  ArraySeq apply_elems = scala.runtime.ScalaRunTime..MODULE$.wrapRefArray(new Symbols.Symbol[]{this.PartialManifestClass(), this.$outer.FullManifestClass(), this.$outer.OptManifestClass()});
                  if (var10001 == null) {
                     throw null;
                  }

                  Object var5 = IterableFactory.apply$(var10001, apply_elems);
                  Object var4 = null;
                  this.ManifestSymbols = (Set)var5;
                  this.bitmap$1 |= 64L;
               }
            } catch (Throwable var3) {
               throw var3;
            }

            return this.ManifestSymbols;
         }

         public Set ManifestSymbols() {
            return (this.bitmap$1 & 64L) == 0L ? this.ManifestSymbols$lzycompute() : this.ManifestSymbols;
         }

         public boolean isPolymorphicSignature(final Symbols.Symbol sym) {
            if (sym != null && sym.isJavaDefined()) {
               label49: {
                  Symbols.Symbol owner = sym.safeOwner();
                  Symbols.Symbol var3 = this.$outer.MethodHandleClass();
                  if (owner == null) {
                     if (var3 == null) {
                        break label49;
                     }
                  } else if (owner.equals(var3)) {
                     break label49;
                  }

                  Symbols.Symbol var4 = this.$outer.VarHandleClass();
                  if (owner == null) {
                     if (var4 != null) {
                        return false;
                     }
                  } else if (!owner.equals(var4)) {
                     return false;
                  }
               }

               if (sym.hasAnnotation(this.$outer.NativeAttr())) {
                  boolean var29;
                  label38: {
                     List var5 = sym.paramss();
                     if (var5 != null) {
                        List var10000 = scala.package..MODULE$.List();
                        if (var10000 == null) {
                           throw null;
                        }

                        List unapplySeq_this = var10000;
                        SeqOps var18 = SeqFactory.unapplySeq$(unapplySeq_this, var5);
                        Object var16 = null;
                        SeqOps var6 = var18;
                        SeqFactory.UnapplySeqWrapper var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                        SeqFactory.UnapplySeqWrapper var10001 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                        new SeqFactory.UnapplySeqWrapper(var6);
                        var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                        var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                        int lengthCompare$extension_len = 1;
                        if (var6.lengthCompare(lengthCompare$extension_len) == 0) {
                           var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                           var19 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                           int apply$extension_i = 0;
                           List var7 = (List)var6.apply(apply$extension_i);
                           if (var7 != null) {
                              List var24 = scala.package..MODULE$.List();
                              if (var24 == null) {
                                 throw null;
                              }

                              List unapplySeq_this = var24;
                              SeqOps var25 = SeqFactory.unapplySeq$(unapplySeq_this, var7);
                              Object var17 = null;
                              SeqOps var8 = var25;
                              SeqFactory.UnapplySeqWrapper var26 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                              var10001 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                              new SeqFactory.UnapplySeqWrapper(var8);
                              var26 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                              var26 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                              int lengthCompare$extension_len = 1;
                              if (var8.lengthCompare(lengthCompare$extension_len) == 0) {
                                 var26 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                                 var26 = scala.collection.SeqFactory.UnapplySeqWrapper..MODULE$;
                                 int apply$extension_i = 0;
                                 Symbols.Symbol p = (Symbols.Symbol)var8.apply(apply$extension_i);
                                 var29 = this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().definitions().isJavaRepeatedParamType(p.info());
                                 break label38;
                              }
                           }
                        }
                     }

                     var29 = false;
                  }

                  if (var29) {
                     return true;
                  }
               }
            }

            return false;
         }

         private Symbols.Symbol Scala_Java8_CompatPackage$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$1 & 128L) == 0L) {
                  this.Scala_Java8_CompatPackage = ((Mirrors.RootsBase)this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().rootMirror()).getPackageIfDefined("scala.runtime.java8");
                  this.bitmap$1 |= 128L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Scala_Java8_CompatPackage;
         }

         public Symbols.Symbol Scala_Java8_CompatPackage() {
            return (this.bitmap$1 & 128L) == 0L ? this.Scala_Java8_CompatPackage$lzycompute() : this.Scala_Java8_CompatPackage;
         }

         private Symbols.Symbol Future_unit$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$1 & 256L) == 0L) {
                  this.Future_unit = this.$outer.getMemberMethod(this.$outer.FutureClass().companionModule(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().TermName().apply("unit"));
                  this.bitmap$1 |= 256L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Future_unit;
         }

         public Symbols.Symbol Future_unit() {
            return (this.bitmap$1 & 256L) == 0L ? this.Future_unit$lzycompute() : this.Future_unit;
         }

         private Symbols.Symbol Future_onComplete$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$1 & 512L) == 0L) {
                  this.Future_onComplete = this.$outer.getMemberMethod(this.$outer.FutureClass(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().TermName().apply("onComplete"));
                  this.bitmap$1 |= 512L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Future_onComplete;
         }

         public Symbols.Symbol Future_onComplete() {
            return (this.bitmap$1 & 512L) == 0L ? this.Future_onComplete$lzycompute() : this.Future_onComplete;
         }

         private Symbols.Symbol Future_value$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$1 & 1024L) == 0L) {
                  this.Future_value = this.$outer.getMemberMethod(this.$outer.FutureClass(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().TermName().apply("value"));
                  this.bitmap$1 |= 1024L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Future_value;
         }

         public Symbols.Symbol Future_value() {
            return (this.bitmap$1 & 1024L) == 0L ? this.Future_value$lzycompute() : this.Future_value;
         }

         private Symbols.Symbol Promise_complete$lzycompute() {
            synchronized(this){}

            try {
               if ((this.bitmap$1 & 2048L) == 0L) {
                  this.Promise_complete = this.$outer.getMemberMethod(this.$outer.PromiseClass(), this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().TermName().apply("complete"));
                  this.bitmap$1 |= 2048L;
               }
            } catch (Throwable var2) {
               throw var2;
            }

            return this.Promise_complete;
         }

         public Symbols.Symbol Promise_complete() {
            return (this.bitmap$1 & 2048L) == 0L ? this.Promise_complete$lzycompute() : this.Promise_complete;
         }

         // $FF: synthetic method
         public DefinitionsClass scala$reflect$internal$Definitions$DefinitionsClass$RunDefinitions$$$outer() {
            return this.$outer;
         }

         private final void TreeType$lzycompute$1() {
            synchronized(this){}

            try {
               if (this.TreeType$module == null) {
                  this.TreeType$module = new TreeType$();
               }
            } catch (Throwable var2) {
               throw var2;
            }

         }

         private final void SubtreeType$lzycompute$1() {
            synchronized(this){}

            try {
               if (this.SubtreeType$module == null) {
                  this.SubtreeType$module = new SubtreeType$();
               }
            } catch (Throwable var2) {
               throw var2;
            }

         }

         private final void ExprClassOf$lzycompute$1() {
            synchronized(this){}

            try {
               if (this.ExprClassOf$module == null) {
                  this.ExprClassOf$module = new ExprClassOf$();
               }
            } catch (Throwable var2) {
               throw var2;
            }

         }

         // $FF: synthetic method
         public static final boolean $anonfun$String_valueOf_Int$1(final RunDefinitions $this, final Symbols.Symbol x) {
            if (((List)x.paramss().head()).length() == 1) {
               Symbols.Symbol var10000 = x.firstParam().info().typeSymbol();
               Symbols.ClassSymbol var2 = $this.$outer.IntClass();
               if (var10000 == null) {
                  if (var2 == null) {
                     return true;
                  }
               } else if (var10000.equals(var2)) {
                  return true;
               }
            }

            return false;
         }

         // $FF: synthetic method
         public static final String $anonfun$Seq_apply$1() {
            return "Expected collection.Seq and immutable.Seq to have the same apply member";
         }

         private final boolean isSeqFactory$1(final Symbols.Symbol sym) {
            Symbols.ModuleSymbol var2 = this.$outer.SeqModule();
            if (sym == null) {
               if (var2 == null) {
                  return true;
               }
            } else if (sym.equals(var2)) {
               return true;
            }

            Symbols.TermSymbol var3 = this.$outer.SeqModuleAlias();
            if (sym == null) {
               if (var3 == null) {
                  return true;
               }
            } else if (sym.equals(var3)) {
               return true;
            }

            Symbols.ModuleSymbol var4 = this.$outer.Collection_SeqModule();
            if (sym == null) {
               if (var4 == null) {
                  return true;
               }
            } else if (sym.equals(var4)) {
               return true;
            }

            return false;
         }

         // $FF: synthetic method
         public static final boolean $anonfun$Predef_any2stringaddMethod$1(final Symbols.Symbol x$29) {
            return x$29.isMethod();
         }

         // $FF: synthetic method
         public static final Symbols.ClassSymbol $anonfun$WeakTypeTagClass$1(final RunDefinitions $this, final Symbols.Symbol sym) {
            return $this.$outer.getMemberClass(sym, $this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().WeakTypeTag());
         }

         // $FF: synthetic method
         public static final Symbols.ModuleSymbol $anonfun$WeakTypeTagModule$1(final RunDefinitions $this, final Symbols.Symbol sym) {
            return $this.$outer.getMemberModule(sym, $this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().WeakTypeTag());
         }

         // $FF: synthetic method
         public static final Symbols.ClassSymbol $anonfun$TypeTagClass$1(final RunDefinitions $this, final Symbols.Symbol sym) {
            return $this.$outer.getMemberClass(sym, $this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().TypeTag());
         }

         // $FF: synthetic method
         public static final Symbols.ModuleSymbol $anonfun$TypeTagModule$1(final RunDefinitions $this, final Symbols.Symbol sym) {
            return $this.$outer.getMemberModule(sym, $this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().TypeTag());
         }

         // $FF: synthetic method
         public static final Symbols.TermSymbol $anonfun$materializeWeakTypeTag$1(final RunDefinitions $this, final Symbols.Symbol sym) {
            return $this.$outer.getMemberMethod(sym, $this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().materializeWeakTypeTag());
         }

         // $FF: synthetic method
         public static final Symbols.TermSymbol $anonfun$materializeTypeTag$1(final RunDefinitions $this, final Symbols.Symbol sym) {
            return $this.$outer.getMemberMethod(sym, $this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().materializeTypeTag());
         }

         // $FF: synthetic method
         public static final Symbols.Symbol $anonfun$ApiUniverseReify$1(final RunDefinitions $this, final Symbols.Symbol sym) {
            return $this.$outer.getDeclIfDefined(sym, $this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().nme().reify());
         }

         // $FF: synthetic method
         public static final Symbols.TypeSymbol $anonfun$TreesTreeType$1(final RunDefinitions $this, final Symbols.Symbol sym) {
            return $this.$outer.getTypeMember(sym, $this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$$$outer().tpnme().Tree());
         }

         public RunDefinitions() {
            if (DefinitionsClass.this == null) {
               throw null;
            } else {
               this.$outer = DefinitionsClass.this;
               super();
            }
         }

         // $FF: synthetic method
         private static Object $deserializeLambda$(SerializedLambda var0) {
            return Class.lambdaDeserialize<invokedynamic>(var0);
         }

         public class TreeType$ {
            // $FF: synthetic field
            private final RunDefinitions $outer;

            public boolean unapply(final Types.Type tpe) {
               return tpe.typeSymbol().overrideChain().contains(this.$outer.TreesTreeType());
            }

            public TreeType$() {
               if (RunDefinitions.this == null) {
                  throw null;
               } else {
                  this.$outer = RunDefinitions.this;
                  super();
               }
            }
         }

         public class SubtreeType$ {
            // $FF: synthetic field
            private final RunDefinitions $outer;

            public boolean unapply(final Types.Type tpe) {
               List var10000 = tpe.typeSymbol().overrideChain();
               if (var10000 == null) {
                  throw null;
               } else {
                  for(List exists_these = var10000; !exists_these.isEmpty(); exists_these = (List)exists_these.tail()) {
                     Symbols.Symbol var3 = (Symbols.Symbol)exists_these.head();
                     if ($anonfun$unapply$1(this, var3)) {
                        return true;
                     }
                  }

                  return false;
               }
            }

            // $FF: synthetic method
            public static final boolean $anonfun$unapply$1(final SubtreeType$ $this, final Symbols.Symbol x$30) {
               if (x$30 == null) {
                  throw null;
               } else {
                  Types.Type var10000 = x$30.tpe_$times();
                  Symbols.Symbol var10001 = $this.$outer.TreesTreeType();
                  if (var10001 == null) {
                     throw null;
                  } else {
                     return var10000.$less$colon$less(var10001.tpe_$times());
                  }
               }
            }

            public SubtreeType$() {
               if (RunDefinitions.this == null) {
                  throw null;
               } else {
                  this.$outer = RunDefinitions.this;
                  super();
               }
            }

            // $FF: synthetic method
            public static final Object $anonfun$unapply$1$adapted(final SubtreeType$ $this, final Symbols.Symbol x$30) {
               return BoxesRunTime.boxToBoolean($anonfun$unapply$1($this, x$30));
            }
         }

         public class ExprClassOf$ {
            // $FF: synthetic field
            private final RunDefinitions $outer;

            public Option unapply(final Types.Type tp) {
               return this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$RunDefinitions$$$outer().scala$reflect$internal$Definitions$DefinitionsClass$$$outer().elementExtractOption(this.$outer.scala$reflect$internal$Definitions$DefinitionsClass$RunDefinitions$$$outer().ExprClass(), tp);
            }

            public ExprClassOf$() {
               if (RunDefinitions.this == null) {
                  throw null;
               } else {
                  this.$outer = RunDefinitions.this;
                  super();
               }
            }
         }
      }
   }
}
