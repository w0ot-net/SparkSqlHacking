package org.apache.spark.shuffle;

import java.io.IOException;
import scala.Option;
import scala.collection.Iterator;
import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u0005\u0005\u0005aAB\u0003\u0007\u0003\u0003Aa\u0002C\u0003\u0017\u0001\u0011\u0005\u0001\u0004C\u0003*\u0001\u0019\u0005!\u0006C\u0003i\u0001\u0019\u0005\u0011\u000eC\u0003y\u0001\u0019\u0005\u0011PA\u0007TQV4g\r\\3Xe&$XM\u001d\u0006\u0003\u000f!\tqa\u001d5vM\u001adWM\u0003\u0002\n\u0015\u0005)1\u000f]1sW*\u00111\u0002D\u0001\u0007CB\f7\r[3\u000b\u00035\t1a\u001c:h+\ryQdJ\n\u0003\u0001A\u0001\"!\u0005\u000b\u000e\u0003IQ\u0011aE\u0001\u0006g\u000e\fG.Y\u0005\u0003+I\u0011a!\u00118z%\u00164\u0017A\u0002\u001fj]&$hh\u0001\u0001\u0015\u0003e\u0001BA\u0007\u0001\u001cM5\ta\u0001\u0005\u0002\u001d;1\u0001A!\u0002\u0010\u0001\u0005\u0004y\"!A&\u0012\u0005\u0001\u001a\u0003CA\t\"\u0013\t\u0011#CA\u0004O_RD\u0017N\\4\u0011\u0005E!\u0013BA\u0013\u0013\u0005\r\te.\u001f\t\u00039\u001d\"Q\u0001\u000b\u0001C\u0002}\u0011\u0011AV\u0001\u0006oJLG/\u001a\u000b\u0003W9\u0002\"!\u0005\u0017\n\u00055\u0012\"\u0001B+oSRDQa\f\u0002A\u0002A\nqA]3d_J$7\u000fE\u00022sqr!AM\u001c\u000f\u0005M2T\"\u0001\u001b\u000b\u0005U:\u0012A\u0002\u001fs_>$h(C\u0001\u0014\u0013\tA$#A\u0004qC\u000e\\\u0017mZ3\n\u0005iZ$\u0001C%uKJ\fGo\u001c:\u000b\u0005a\u0012\u0002\u0003B\t>7\u0019J!A\u0010\n\u0003\u0011A\u0013x\u000eZ;diJB3A\u0001!L!\r\t\u0012iQ\u0005\u0003\u0005J\u0011a\u0001\u001e5s_^\u001c\bC\u0001#J\u001b\u0005)%B\u0001$H\u0003\tIwNC\u0001I\u0003\u0011Q\u0017M^1\n\u0005)+%aC%P\u000bb\u001cW\r\u001d;j_:\fDA\b'UOB\u0011Q*\u0015\b\u0003\u001d>\u0003\"a\r\n\n\u0005A\u0013\u0012A\u0002)sK\u0012,g-\u0003\u0002S'\n11\u000b\u001e:j]\u001eT!\u0001\u0015\n2\u000b\r*\u0016L\u0019.\u0016\u0005Y;V#\u0001'\u0005\u000ba;\"\u0019A/\u0003\u0003QK!AW.\u00027\u0011bWm]:j]&$He\u001a:fCR,'\u000f\n3fM\u0006,H\u000e\u001e\u00132\u0015\ta&#\u0001\u0004uQJ|wo]\t\u0003Ay\u0003\"a\u00181\u000f\u0005E9\u0014BA1<\u0005%!\u0006N]8xC\ndW-M\u0003$G\u0012,GL\u0004\u0002\u0012I&\u0011ALE\u0019\u0005EE\u0011bMA\u0003tG\u0006d\u0017-\r\u0002'\u0007\u0006!1\u000f^8q)\tQ7\u000fE\u0002\u0012W6L!\u0001\u001c\n\u0003\r=\u0003H/[8o!\tq\u0017/D\u0001p\u0015\t\u0001\b\"A\u0005tG\",G-\u001e7fe&\u0011!o\u001c\u0002\n\u001b\u0006\u00048\u000b^1ukNDQ\u0001^\u0002A\u0002U\fqa];dG\u0016\u001c8\u000f\u0005\u0002\u0012m&\u0011qO\u0005\u0002\b\u0005>|G.Z1o\u0003M9W\r\u001e)beRLG/[8o\u0019\u0016tw\r\u001e5t)\u0005Q\bcA\t|{&\u0011AP\u0005\u0002\u0006\u0003J\u0014\u0018-\u001f\t\u0003#yL!a \n\u0003\t1{gn\u001a"
)
public abstract class ShuffleWriter {
   public abstract void write(final Iterator records) throws IOException;

   public abstract Option stop(final boolean success);

   public abstract long[] getPartitionLengths();
}
