package org.apache.orc;

import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import org.apache.orc.protobuf.AbstractMessageLite;
import org.apache.orc.protobuf.AbstractParser;
import org.apache.orc.protobuf.ByteString;
import org.apache.orc.protobuf.CodedInputStream;
import org.apache.orc.protobuf.CodedOutputStream;
import org.apache.orc.protobuf.Descriptors;
import org.apache.orc.protobuf.ExtensionRegistry;
import org.apache.orc.protobuf.ExtensionRegistryLite;
import org.apache.orc.protobuf.GeneratedMessageV3;
import org.apache.orc.protobuf.Internal;
import org.apache.orc.protobuf.InvalidProtocolBufferException;
import org.apache.orc.protobuf.LazyStringArrayList;
import org.apache.orc.protobuf.LazyStringList;
import org.apache.orc.protobuf.Message;
import org.apache.orc.protobuf.MessageLite;
import org.apache.orc.protobuf.MessageOrBuilder;
import org.apache.orc.protobuf.Parser;
import org.apache.orc.protobuf.ProtocolMessageEnum;
import org.apache.orc.protobuf.ProtocolStringList;
import org.apache.orc.protobuf.RepeatedFieldBuilderV3;
import org.apache.orc.protobuf.SingleFieldBuilderV3;
import org.apache.orc.protobuf.UnknownFieldSet;

public final class OrcProto {
   private static final Descriptors.Descriptor internal_static_orc_proto_IntegerStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_IntegerStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_DoubleStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_DoubleStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_StringStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_StringStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_BucketStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_BucketStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_DecimalStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_DecimalStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_DateStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_DateStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_TimestampStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_TimestampStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_BinaryStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_BinaryStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_CollectionStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_CollectionStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_BoundingBox_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_BoundingBox_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_GeospatialStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_GeospatialStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_ColumnStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_ColumnStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_RowIndexEntry_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_RowIndexEntry_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_RowIndex_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_RowIndex_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_BloomFilter_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_BloomFilter_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_BloomFilterIndex_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_BloomFilterIndex_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_Stream_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_Stream_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_ColumnEncoding_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_ColumnEncoding_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_StripeEncryptionVariant_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_StripeEncryptionVariant_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_StripeFooter_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_StripeFooter_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_StringPair_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_StringPair_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_Type_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_Type_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_StripeInformation_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_StripeInformation_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_UserMetadataItem_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_UserMetadataItem_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_StripeStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_StripeStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_Metadata_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_Metadata_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_ColumnarStripeStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_ColumnarStripeStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_FileStatistics_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_FileStatistics_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_DataMask_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_DataMask_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_EncryptionKey_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_EncryptionKey_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_EncryptionVariant_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_EncryptionVariant_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_Encryption_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_Encryption_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_Footer_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_Footer_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_PostScript_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_PostScript_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_orc_proto_FileTail_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_orc_proto_FileTail_fieldAccessorTable;
   private static Descriptors.FileDescriptor descriptor;

   private OrcProto() {
   }

   public static void registerAllExtensions(ExtensionRegistryLite registry) {
   }

   public static void registerAllExtensions(ExtensionRegistry registry) {
      registerAllExtensions((ExtensionRegistryLite)registry);
   }

   public static Descriptors.FileDescriptor getDescriptor() {
      return descriptor;
   }

   static {
      String[] descriptorData = new String[]{"\n\u000forc_proto.proto\u0012\torc.proto\"B\n\u0011IntegerStatistics\u0012\u000f\n\u0007minimum\u0018\u0001 \u0001(\u0012\u0012\u000f\n\u0007maximum\u0018\u0002 \u0001(\u0012\u0012\u000b\n\u0003sum\u0018\u0003 \u0001(\u0012\"A\n\u0010DoubleStatistics\u0012\u000f\n\u0007minimum\u0018\u0001 \u0001(\u0001\u0012\u000f\n\u0007maximum\u0018\u0002 \u0001(\u0001\u0012\u000b\n\u0003sum\u0018\u0003 \u0001(\u0001\"k\n\u0010StringStatistics\u0012\u000f\n\u0007minimum\u0018\u0001 \u0001(\t\u0012\u000f\n\u0007maximum\u0018\u0002 \u0001(\t\u0012\u000b\n\u0003sum\u0018\u0003 \u0001(\u0012\u0012\u0013\n\u000blower_bound\u0018\u0004 \u0001(\t\u0012\u0013\n\u000bupper_bound\u0018\u0005 \u0001(\t\"%\n\u0010BucketStatistics\u0012\u0011\n\u0005count\u0018\u0001 \u0003(\u0004B\u0002\u0010\u0001\"B\n\u0011DecimalStatistics\u0012\u000f\n\u0007minimum\u0018\u0001 \u0001(\t\u0012\u000f\n\u0007maximum\u0018\u0002 \u0001(\t\u0012\u000b\n\u0003sum\u0018\u0003 \u0001(\t\"2\n\u000eDateStatistics\u0012\u000f\n\u0007minimum\u0018\u0001 \u0001(\u0011\u0012\u000f\n\u0007maximum\u0018\u0002 \u0001(\u0011\"\u008f\u0001\n\u0013TimestampStatistics\u0012\u000f\n\u0007minimum\u0018\u0001 \u0001(\u0012\u0012\u000f\n\u0007maximum\u0018\u0002 \u0001(\u0012\u0012\u0013\n\u000bminimum_utc\u0018\u0003 \u0001(\u0012\u0012\u0013\n\u000bmaximum_utc\u0018\u0004 \u0001(\u0012\u0012\u0015\n\rminimum_nanos\u0018\u0005 \u0001(\u0005\u0012\u0015\n\rmaximum_nanos\u0018\u0006 \u0001(\u0005\"\u001f\n\u0010BinaryStatistics\u0012\u000b\n\u0003sum\u0018\u0001 \u0001(\u0012\"Z\n\u0014CollectionStatistics\u0012\u0014\n\fmin_children\u0018\u0001 \u0001(\u0004\u0012\u0014\n\fmax_children\u0018\u0002 \u0001(\u0004\u0012\u0016\n\u000etotal_children\u0018\u0003 \u0001(\u0004\"}\n\u000bBoundingBox\u0012\f\n\u0004xmin\u0018\u0001 \u0001(\u0001\u0012\f\n\u0004xmax\u0018\u0002 \u0001(\u0001\u0012\f\n\u0004ymin\u0018\u0003 \u0001(\u0001\u0012\f\n\u0004ymax\u0018\u0004 \u0001(\u0001\u0012\f\n\u0004zmin\u0018\u0005 \u0001(\u0001\u0012\f\n\u0004zmax\u0018\u0006 \u0001(\u0001\u0012\f\n\u0004mmin\u0018\u0007 \u0001(\u0001\u0012\f\n\u0004mmax\u0018\b \u0001(\u0001\"V\n\u0014GeospatialStatistics\u0012$\n\u0004bbox\u0018\u0001 \u0001(\u000b2\u0016.orc.proto.BoundingBox\u0012\u0018\n\u0010geospatial_types\u0018\u0002 \u0003(\u0005\"\u0097\u0005\n\u0010ColumnStatistics\u0012\u0018\n\u0010number_of_values\u0018\u0001 \u0001(\u0004\u00124\n\u000eint_statistics\u0018\u0002 \u0001(\u000b2\u001c.orc.proto.IntegerStatistics\u00126\n\u0011double_statistics\u0018\u0003 \u0001(\u000b2\u001b.orc.proto.DoubleStatistics\u00126\n\u0011string_statistics\u0018\u0004 \u0001(\u000b2\u001b.orc.proto.StringStatistics\u00126\n\u0011bucket_statistics\u0018\u0005 \u0001(\u000b2\u001b.orc.proto.BucketStatistics\u00128\n\u0012decimal_statistics\u0018\u0006 \u0001(\u000b2\u001c.orc.proto.DecimalStatistics\u00122\n\u000fdate_statistics\u0018\u0007 \u0001(\u000b2\u0019.orc.proto.DateStatistics\u00126\n\u0011binary_statistics\u0018\b \u0001(\u000b2\u001b.orc.proto.BinaryStatistics\u0012<\n\u0014timestamp_statistics\u0018\t \u0001(\u000b2\u001e.orc.proto.TimestampStatistics\u0012\u0010\n\bhas_null\u0018\n \u0001(\b\u0012\u0015\n\rbytes_on_disk\u0018\u000b \u0001(\u0004\u0012>\n\u0015collection_statistics\u0018\f \u0001(\u000b2\u001f.orc.proto.CollectionStatistics\u0012>\n\u0015geospatial_statistics\u0018\r \u0001(\u000b2\u001f.orc.proto.GeospatialStatistics\"W\n\rRowIndexEntry\u0012\u0015\n\tpositions\u0018\u0001 \u0003(\u0004B\u0002\u0010\u0001\u0012/\n\nstatistics\u0018\u0002 \u0001(\u000b2\u001b.orc.proto.ColumnStatistics\"3\n\bRowIndex\u0012'\n\u0005entry\u0018\u0001 \u0003(\u000b2\u0018.orc.proto.RowIndexEntry\"M\n\u000bBloomFilter\u0012\u001a\n\u0012num_hash_functions\u0018\u0001 \u0001(\r\u0012\u000e\n\u0006bitset\u0018\u0002 \u0003(\u0006\u0012\u0012\n\nutf8bitset\u0018\u0003 \u0001(\f\"@\n\u0010BloomFilterIndex\u0012,\n\fbloom_filter\u0018\u0001 \u0003(\u000b2\u0016.orc.proto.BloomFilter\"Á\u0002\n\u0006Stream\u0012$\n\u0004kind\u0018\u0001 \u0001(\u000e2\u0016.orc.proto.Stream.Kind\u0012\u000e\n\u0006column\u0018\u0002 \u0001(\r\u0012\u000e\n\u0006length\u0018\u0003 \u0001(\u0004\"ð\u0001\n\u0004Kind\u0012\u000b\n\u0007PRESENT\u0010\u0000\u0012\b\n\u0004DATA\u0010\u0001\u0012\n\n\u0006LENGTH\u0010\u0002\u0012\u0013\n\u000fDICTIONARY_DATA\u0010\u0003\u0012\u0014\n\u0010DICTIONARY_COUNT\u0010\u0004\u0012\r\n\tSECONDARY\u0010\u0005\u0012\r\n\tROW_INDEX\u0010\u0006\u0012\u0010\n\fBLOOM_FILTER\u0010\u0007\u0012\u0015\n\u0011BLOOM_FILTER_UTF8\u0010\b\u0012\u0013\n\u000fENCRYPTED_INDEX\u0010\t\u0012\u0012\n\u000eENCRYPTED_DATA\u0010\n\u0012\u0015\n\u0011STRIPE_STATISTICS\u0010d\u0012\u0013\n\u000fFILE_STATISTICS\u0010e\"µ\u0001\n\u000eColumnEncoding\u0012,\n\u0004kind\u0018\u0001 \u0001(\u000e2\u001e.orc.proto.ColumnEncoding.Kind\u0012\u0017\n\u000fdictionary_size\u0018\u0002 \u0001(\r\u0012\u0016\n\u000ebloom_encoding\u0018\u0003 \u0001(\r\"D\n\u0004Kind\u0012\n\n\u0006DIRECT\u0010\u0000\u0012\u000e\n\nDICTIONARY\u0010\u0001\u0012\r\n\tDIRECT_V2\u0010\u0002\u0012\u0011\n\rDICTIONARY_V2\u0010\u0003\"j\n\u0017StripeEncryptionVariant\u0012\"\n\u0007streams\u0018\u0001 \u0003(\u000b2\u0011.orc.proto.Stream\u0012+\n\bencoding\u0018\u0002 \u0003(\u000b2\u0019.orc.proto.ColumnEncoding\"¯\u0001\n\fStripeFooter\u0012\"\n\u0007streams\u0018\u0001 \u0003(\u000b2\u0011.orc.proto.Stream\u0012*\n\u0007columns\u0018\u0002 \u0003(\u000b2\u0019.orc.proto.ColumnEncoding\u0012\u0017\n\u000fwriter_timezone\u0018\u0003 \u0001(\t\u00126\n\nencryption\u0018\u0004 \u0003(\u000b2\".orc.proto.StripeEncryptionVariant\"(\n\nStringPair\u0012\u000b\n\u0003key\u0018\u0001 \u0001(\t\u0012\r\n\u0005value\u0018\u0002 \u0001(\t\"î\u0004\n\u0004Type\u0012\"\n\u0004kind\u0018\u0001 \u0001(\u000e2\u0014.orc.proto.Type.Kind\u0012\u0014\n\bsubtypes\u0018\u0002 \u0003(\rB\u0002\u0010\u0001\u0012\u0013\n\u000bfield_names\u0018\u0003 \u0003(\t\u0012\u0016\n\u000emaximum_length\u0018\u0004 \u0001(\r\u0012\u0011\n\tprecision\u0018\u0005 \u0001(\r\u0012\r\n\u0005scale\u0018\u0006 \u0001(\r\u0012)\n\nattributes\u0018\u0007 \u0003(\u000b2\u0015.orc.proto.StringPair\u0012\u000b\n\u0003crs\u0018\b \u0001(\t\u0012=\n\talgorithm\u0018\t \u0001(\u000e2*.orc.proto.Type.EdgeInterpolationAlgorithm\"\u0085\u0002\n\u0004Kind\u0012\u000b\n\u0007BOOLEAN\u0010\u0000\u0012\b\n\u0004BYTE\u0010\u0001\u0012\t\n\u0005SHORT\u0010\u0002\u0012\u0007\n\u0003INT\u0010\u0003\u0012\b\n\u0004LONG\u0010\u0004\u0012\t\n\u0005FLOAT\u0010\u0005\u0012\n\n\u0006DOUBLE\u0010\u0006\u0012\n\n\u0006STRING\u0010\u0007\u0012\n\n\u0006BINARY\u0010\b\u0012\r\n\tTIMESTAMP\u0010\t\u0012\b\n\u0004LIST\u0010\n\u0012\u0007\n\u0003MAP\u0010\u000b\u0012\n\n\u0006STRUCT\u0010\f\u0012\t\n\u0005UNION\u0010\r\u0012\u000b\n\u0007DECIMAL\u0010\u000e\u0012\b\n\u0004DATE\u0010\u000f\u0012\u000b\n\u0007VARCHAR\u0010\u0010\u0012\b\n\u0004CHAR\u0010\u0011\u0012\u0015\n\u0011TIMESTAMP_INSTANT\u0010\u0012\u0012\f\n\bGEOMETRY\u0010\u0013\u0012\r\n\tGEOGRAPHY\u0010\u0014\"^\n\u001aEdgeInterpolationAlgorithm\u0012\r\n\tSPHERICAL\u0010\u0000\u0012\f\n\bVINCENTY\u0010\u0001\u0012\n\n\u0006THOMAS\u0010\u0002\u0012\u000b\n\u0007ANDOYER\u0010\u0003\u0012\n\n\u0006KARNEY\u0010\u0004\"¶\u0001\n\u0011StripeInformation\u0012\u000e\n\u0006offset\u0018\u0001 \u0001(\u0004\u0012\u0014\n\findex_length\u0018\u0002 \u0001(\u0004\u0012\u0013\n\u000bdata_length\u0018\u0003 \u0001(\u0004\u0012\u0015\n\rfooter_length\u0018\u0004 \u0001(\u0004\u0012\u0016\n\u000enumber_of_rows\u0018\u0005 \u0001(\u0004\u0012\u0019\n\u0011encrypt_stripe_id\u0018\u0006 \u0001(\u0004\u0012\u001c\n\u0014encrypted_local_keys\u0018\u0007 \u0003(\f\"/\n\u0010UserMetadataItem\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\r\n\u0005value\u0018\u0002 \u0001(\f\"B\n\u0010StripeStatistics\u0012.\n\tcol_stats\u0018\u0001 \u0003(\u000b2\u001b.orc.proto.ColumnStatistics\"=\n\bMetadata\u00121\n\fstripe_stats\u0018\u0001 \u0003(\u000b2\u001b.orc.proto.StripeStatistics\"J\n\u0018ColumnarStripeStatistics\u0012.\n\tcol_stats\u0018\u0001 \u0003(\u000b2\u001b.orc.proto.ColumnStatistics\"=\n\u000eFileStatistics\u0012+\n\u0006column\u0018\u0001 \u0003(\u000b2\u001b.orc.proto.ColumnStatistics\"F\n\bDataMask\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\u0017\n\u000fmask_parameters\u0018\u0002 \u0003(\t\u0012\u0013\n\u0007columns\u0018\u0003 \u0003(\rB\u0002\u0010\u0001\"i\n\rEncryptionKey\u0012\u0010\n\bkey_name\u0018\u0001 \u0001(\t\u0012\u0013\n\u000bkey_version\u0018\u0002 \u0001(\r\u00121\n\talgorithm\u0018\u0003 \u0001(\u000e2\u001e.orc.proto.EncryptionAlgorithm\"\u008c\u0001\n\u0011EncryptionVariant\u0012\f\n\u0004root\u0018\u0001 \u0001(\r\u0012\u000b\n\u0003key\u0018\u0002 \u0001(\r\u0012\u0015\n\rencrypted_key\u0018\u0003 \u0001(\f\u0012,\n\u0011stripe_statistics\u0018\u0004 \u0003(\u000b2\u0011.orc.proto.Stream\u0012\u0017\n\u000ffile_statistics\u0018\u0005 \u0001(\f\"¸\u0001\n\nEncryption\u0012!\n\u0004mask\u0018\u0001 \u0003(\u000b2\u0013.orc.proto.DataMask\u0012%\n\u0003key\u0018\u0002 \u0003(\u000b2\u0018.orc.proto.EncryptionKey\u0012.\n\bvariants\u0018\u0003 \u0003(\u000b2\u001c.orc.proto.EncryptionVariant\u00120\n\fkey_provider\u0018\u0004 \u0001(\u000e2\u001a.orc.proto.KeyProviderKind\"\u0098\u0003\n\u0006Footer\u0012\u0015\n\rheader_length\u0018\u0001 \u0001(\u0004\u0012\u0016\n\u000econtent_length\u0018\u0002 \u0001(\u0004\u0012-\n\u0007stripes\u0018\u0003 \u0003(\u000b2\u001c.orc.proto.StripeInformation\u0012\u001e\n\u0005types\u0018\u0004 \u0003(\u000b2\u000f.orc.proto.Type\u0012-\n\bmetadata\u0018\u0005 \u0003(\u000b2\u001b.orc.proto.UserMetadataItem\u0012\u0016\n\u000enumber_of_rows\u0018\u0006 \u0001(\u0004\u0012/\n\nstatistics\u0018\u0007 \u0003(\u000b2\u001b.orc.proto.ColumnStatistics\u0012\u0018\n\u0010row_index_stride\u0018\b \u0001(\r\u0012\u000e\n\u0006writer\u0018\t \u0001(\r\u0012)\n\nencryption\u0018\n \u0001(\u000b2\u0015.orc.proto.Encryption\u0012)\n\bcalendar\u0018\u000b \u0001(\u000e2\u0017.orc.proto.CalendarKind\u0012\u0018\n\u0010software_version\u0018\f \u0001(\t\"ì\u0001\n\nPostScript\u0012\u0015\n\rfooter_length\u0018\u0001 \u0001(\u0004\u0012/\n\u000bcompression\u0018\u0002 \u0001(\u000e2\u001a.orc.proto.CompressionKind\u0012\u001e\n\u0016compression_block_size\u0018\u0003 \u0001(\u0004\u0012\u0013\n\u0007version\u0018\u0004 \u0003(\rB\u0002\u0010\u0001\u0012\u0017\n\u000fmetadata_length\u0018\u0005 \u0001(\u0004\u0012\u0016\n\u000ewriter_version\u0018\u0006 \u0001(\r\u0012 \n\u0018stripe_statistics_length\u0018\u0007 \u0001(\u0004\u0012\u000e\n\u0005magic\u0018À> \u0001(\t\"\u0088\u0001\n\bFileTail\u0012)\n\npostscript\u0018\u0001 \u0001(\u000b2\u0015.orc.proto.PostScript\u0012!\n\u0006footer\u0018\u0002 \u0001(\u000b2\u0011.orc.proto.Footer\u0012\u0013\n\u000bfile_length\u0018\u0003 \u0001(\u0004\u0012\u0019\n\u0011postscript_length\u0018\u0004 \u0001(\u0004*O\n\u0013EncryptionAlgorithm\u0012\u0016\n\u0012UNKNOWN_ENCRYPTION\u0010\u0000\u0012\u000f\n\u000bAES_CTR_128\u0010\u0001\u0012\u000f\n\u000bAES_CTR_256\u0010\u0002*G\n\u000fKeyProviderKind\u0012\u000b\n\u0007UNKNOWN\u0010\u0000\u0012\n\n\u0006HADOOP\u0010\u0001\u0012\u0007\n\u0003AWS\u0010\u0002\u0012\u0007\n\u0003GCP\u0010\u0003\u0012\t\n\u0005AZURE\u0010\u0004*S\n\fCalendarKind\u0012\u0014\n\u0010UNKNOWN_CALENDAR\u0010\u0000\u0012\u0014\n\u0010JULIAN_GREGORIAN\u0010\u0001\u0012\u0017\n\u0013PROLEPTIC_GREGORIAN\u0010\u0002*Y\n\u000fCompressionKind\u0012\b\n\u0004NONE\u0010\u0000\u0012\b\n\u0004ZLIB\u0010\u0001\u0012\n\n\u0006SNAPPY\u0010\u0002\u0012\u0007\n\u0003LZO\u0010\u0003\u0012\u0007\n\u0003LZ4\u0010\u0004\u0012\b\n\u0004ZSTD\u0010\u0005\u0012\n\n\u0006BROTLI\u0010\u0006B\u0010\n\u000eorg.apache.orc"};
      descriptor = Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[0]);
      internal_static_orc_proto_IntegerStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(0);
      internal_static_orc_proto_IntegerStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_IntegerStatistics_descriptor, new String[]{"Minimum", "Maximum", "Sum"});
      internal_static_orc_proto_DoubleStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(1);
      internal_static_orc_proto_DoubleStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_DoubleStatistics_descriptor, new String[]{"Minimum", "Maximum", "Sum"});
      internal_static_orc_proto_StringStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(2);
      internal_static_orc_proto_StringStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_StringStatistics_descriptor, new String[]{"Minimum", "Maximum", "Sum", "LowerBound", "UpperBound"});
      internal_static_orc_proto_BucketStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(3);
      internal_static_orc_proto_BucketStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_BucketStatistics_descriptor, new String[]{"Count"});
      internal_static_orc_proto_DecimalStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(4);
      internal_static_orc_proto_DecimalStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_DecimalStatistics_descriptor, new String[]{"Minimum", "Maximum", "Sum"});
      internal_static_orc_proto_DateStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(5);
      internal_static_orc_proto_DateStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_DateStatistics_descriptor, new String[]{"Minimum", "Maximum"});
      internal_static_orc_proto_TimestampStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(6);
      internal_static_orc_proto_TimestampStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_TimestampStatistics_descriptor, new String[]{"Minimum", "Maximum", "MinimumUtc", "MaximumUtc", "MinimumNanos", "MaximumNanos"});
      internal_static_orc_proto_BinaryStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(7);
      internal_static_orc_proto_BinaryStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_BinaryStatistics_descriptor, new String[]{"Sum"});
      internal_static_orc_proto_CollectionStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(8);
      internal_static_orc_proto_CollectionStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_CollectionStatistics_descriptor, new String[]{"MinChildren", "MaxChildren", "TotalChildren"});
      internal_static_orc_proto_BoundingBox_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(9);
      internal_static_orc_proto_BoundingBox_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_BoundingBox_descriptor, new String[]{"Xmin", "Xmax", "Ymin", "Ymax", "Zmin", "Zmax", "Mmin", "Mmax"});
      internal_static_orc_proto_GeospatialStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(10);
      internal_static_orc_proto_GeospatialStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_GeospatialStatistics_descriptor, new String[]{"Bbox", "GeospatialTypes"});
      internal_static_orc_proto_ColumnStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(11);
      internal_static_orc_proto_ColumnStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_ColumnStatistics_descriptor, new String[]{"NumberOfValues", "IntStatistics", "DoubleStatistics", "StringStatistics", "BucketStatistics", "DecimalStatistics", "DateStatistics", "BinaryStatistics", "TimestampStatistics", "HasNull", "BytesOnDisk", "CollectionStatistics", "GeospatialStatistics"});
      internal_static_orc_proto_RowIndexEntry_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(12);
      internal_static_orc_proto_RowIndexEntry_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_RowIndexEntry_descriptor, new String[]{"Positions", "Statistics"});
      internal_static_orc_proto_RowIndex_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(13);
      internal_static_orc_proto_RowIndex_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_RowIndex_descriptor, new String[]{"Entry"});
      internal_static_orc_proto_BloomFilter_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(14);
      internal_static_orc_proto_BloomFilter_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_BloomFilter_descriptor, new String[]{"NumHashFunctions", "Bitset", "Utf8Bitset"});
      internal_static_orc_proto_BloomFilterIndex_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(15);
      internal_static_orc_proto_BloomFilterIndex_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_BloomFilterIndex_descriptor, new String[]{"BloomFilter"});
      internal_static_orc_proto_Stream_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(16);
      internal_static_orc_proto_Stream_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_Stream_descriptor, new String[]{"Kind", "Column", "Length"});
      internal_static_orc_proto_ColumnEncoding_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(17);
      internal_static_orc_proto_ColumnEncoding_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_ColumnEncoding_descriptor, new String[]{"Kind", "DictionarySize", "BloomEncoding"});
      internal_static_orc_proto_StripeEncryptionVariant_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(18);
      internal_static_orc_proto_StripeEncryptionVariant_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_StripeEncryptionVariant_descriptor, new String[]{"Streams", "Encoding"});
      internal_static_orc_proto_StripeFooter_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(19);
      internal_static_orc_proto_StripeFooter_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_StripeFooter_descriptor, new String[]{"Streams", "Columns", "WriterTimezone", "Encryption"});
      internal_static_orc_proto_StringPair_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(20);
      internal_static_orc_proto_StringPair_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_StringPair_descriptor, new String[]{"Key", "Value"});
      internal_static_orc_proto_Type_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(21);
      internal_static_orc_proto_Type_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_Type_descriptor, new String[]{"Kind", "Subtypes", "FieldNames", "MaximumLength", "Precision", "Scale", "Attributes", "Crs", "Algorithm"});
      internal_static_orc_proto_StripeInformation_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(22);
      internal_static_orc_proto_StripeInformation_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_StripeInformation_descriptor, new String[]{"Offset", "IndexLength", "DataLength", "FooterLength", "NumberOfRows", "EncryptStripeId", "EncryptedLocalKeys"});
      internal_static_orc_proto_UserMetadataItem_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(23);
      internal_static_orc_proto_UserMetadataItem_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_UserMetadataItem_descriptor, new String[]{"Name", "Value"});
      internal_static_orc_proto_StripeStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(24);
      internal_static_orc_proto_StripeStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_StripeStatistics_descriptor, new String[]{"ColStats"});
      internal_static_orc_proto_Metadata_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(25);
      internal_static_orc_proto_Metadata_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_Metadata_descriptor, new String[]{"StripeStats"});
      internal_static_orc_proto_ColumnarStripeStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(26);
      internal_static_orc_proto_ColumnarStripeStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_ColumnarStripeStatistics_descriptor, new String[]{"ColStats"});
      internal_static_orc_proto_FileStatistics_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(27);
      internal_static_orc_proto_FileStatistics_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_FileStatistics_descriptor, new String[]{"Column"});
      internal_static_orc_proto_DataMask_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(28);
      internal_static_orc_proto_DataMask_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_DataMask_descriptor, new String[]{"Name", "MaskParameters", "Columns"});
      internal_static_orc_proto_EncryptionKey_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(29);
      internal_static_orc_proto_EncryptionKey_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_EncryptionKey_descriptor, new String[]{"KeyName", "KeyVersion", "Algorithm"});
      internal_static_orc_proto_EncryptionVariant_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(30);
      internal_static_orc_proto_EncryptionVariant_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_EncryptionVariant_descriptor, new String[]{"Root", "Key", "EncryptedKey", "StripeStatistics", "FileStatistics"});
      internal_static_orc_proto_Encryption_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(31);
      internal_static_orc_proto_Encryption_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_Encryption_descriptor, new String[]{"Mask", "Key", "Variants", "KeyProvider"});
      internal_static_orc_proto_Footer_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(32);
      internal_static_orc_proto_Footer_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_Footer_descriptor, new String[]{"HeaderLength", "ContentLength", "Stripes", "Types", "Metadata", "NumberOfRows", "Statistics", "RowIndexStride", "Writer", "Encryption", "Calendar", "SoftwareVersion"});
      internal_static_orc_proto_PostScript_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(33);
      internal_static_orc_proto_PostScript_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_PostScript_descriptor, new String[]{"FooterLength", "Compression", "CompressionBlockSize", "Version", "MetadataLength", "WriterVersion", "StripeStatisticsLength", "Magic"});
      internal_static_orc_proto_FileTail_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(34);
      internal_static_orc_proto_FileTail_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_orc_proto_FileTail_descriptor, new String[]{"Postscript", "Footer", "FileLength", "PostscriptLength"});
   }

   public static enum EncryptionAlgorithm implements ProtocolMessageEnum {
      UNKNOWN_ENCRYPTION(0),
      AES_CTR_128(1),
      AES_CTR_256(2);

      public static final int UNKNOWN_ENCRYPTION_VALUE = 0;
      public static final int AES_CTR_128_VALUE = 1;
      public static final int AES_CTR_256_VALUE = 2;
      private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
         public EncryptionAlgorithm findValueByNumber(int number) {
            return OrcProto.EncryptionAlgorithm.forNumber(number);
         }
      };
      private static final EncryptionAlgorithm[] VALUES = values();
      private final int value;

      public final int getNumber() {
         return this.value;
      }

      /** @deprecated */
      @Deprecated
      public static EncryptionAlgorithm valueOf(int value) {
         return forNumber(value);
      }

      public static EncryptionAlgorithm forNumber(int value) {
         switch (value) {
            case 0 -> {
               return UNKNOWN_ENCRYPTION;
            }
            case 1 -> {
               return AES_CTR_128;
            }
            case 2 -> {
               return AES_CTR_256;
            }
            default -> {
               return null;
            }
         }
      }

      public static Internal.EnumLiteMap internalGetValueMap() {
         return internalValueMap;
      }

      public final Descriptors.EnumValueDescriptor getValueDescriptor() {
         return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
      }

      public final Descriptors.EnumDescriptor getDescriptorForType() {
         return getDescriptor();
      }

      public static final Descriptors.EnumDescriptor getDescriptor() {
         return (Descriptors.EnumDescriptor)OrcProto.getDescriptor().getEnumTypes().get(0);
      }

      public static EncryptionAlgorithm valueOf(Descriptors.EnumValueDescriptor desc) {
         if (desc.getType() != getDescriptor()) {
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
         } else {
            return VALUES[desc.getIndex()];
         }
      }

      private EncryptionAlgorithm(int value) {
         this.value = value;
      }

      // $FF: synthetic method
      private static EncryptionAlgorithm[] $values() {
         return new EncryptionAlgorithm[]{UNKNOWN_ENCRYPTION, AES_CTR_128, AES_CTR_256};
      }
   }

   public static enum KeyProviderKind implements ProtocolMessageEnum {
      UNKNOWN(0),
      HADOOP(1),
      AWS(2),
      GCP(3),
      AZURE(4);

      public static final int UNKNOWN_VALUE = 0;
      public static final int HADOOP_VALUE = 1;
      public static final int AWS_VALUE = 2;
      public static final int GCP_VALUE = 3;
      public static final int AZURE_VALUE = 4;
      private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
         public KeyProviderKind findValueByNumber(int number) {
            return OrcProto.KeyProviderKind.forNumber(number);
         }
      };
      private static final KeyProviderKind[] VALUES = values();
      private final int value;

      public final int getNumber() {
         return this.value;
      }

      /** @deprecated */
      @Deprecated
      public static KeyProviderKind valueOf(int value) {
         return forNumber(value);
      }

      public static KeyProviderKind forNumber(int value) {
         switch (value) {
            case 0 -> {
               return UNKNOWN;
            }
            case 1 -> {
               return HADOOP;
            }
            case 2 -> {
               return AWS;
            }
            case 3 -> {
               return GCP;
            }
            case 4 -> {
               return AZURE;
            }
            default -> {
               return null;
            }
         }
      }

      public static Internal.EnumLiteMap internalGetValueMap() {
         return internalValueMap;
      }

      public final Descriptors.EnumValueDescriptor getValueDescriptor() {
         return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
      }

      public final Descriptors.EnumDescriptor getDescriptorForType() {
         return getDescriptor();
      }

      public static final Descriptors.EnumDescriptor getDescriptor() {
         return (Descriptors.EnumDescriptor)OrcProto.getDescriptor().getEnumTypes().get(1);
      }

      public static KeyProviderKind valueOf(Descriptors.EnumValueDescriptor desc) {
         if (desc.getType() != getDescriptor()) {
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
         } else {
            return VALUES[desc.getIndex()];
         }
      }

      private KeyProviderKind(int value) {
         this.value = value;
      }

      // $FF: synthetic method
      private static KeyProviderKind[] $values() {
         return new KeyProviderKind[]{UNKNOWN, HADOOP, AWS, GCP, AZURE};
      }
   }

   public static enum CalendarKind implements ProtocolMessageEnum {
      UNKNOWN_CALENDAR(0),
      JULIAN_GREGORIAN(1),
      PROLEPTIC_GREGORIAN(2);

      public static final int UNKNOWN_CALENDAR_VALUE = 0;
      public static final int JULIAN_GREGORIAN_VALUE = 1;
      public static final int PROLEPTIC_GREGORIAN_VALUE = 2;
      private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
         public CalendarKind findValueByNumber(int number) {
            return OrcProto.CalendarKind.forNumber(number);
         }
      };
      private static final CalendarKind[] VALUES = values();
      private final int value;

      public final int getNumber() {
         return this.value;
      }

      /** @deprecated */
      @Deprecated
      public static CalendarKind valueOf(int value) {
         return forNumber(value);
      }

      public static CalendarKind forNumber(int value) {
         switch (value) {
            case 0 -> {
               return UNKNOWN_CALENDAR;
            }
            case 1 -> {
               return JULIAN_GREGORIAN;
            }
            case 2 -> {
               return PROLEPTIC_GREGORIAN;
            }
            default -> {
               return null;
            }
         }
      }

      public static Internal.EnumLiteMap internalGetValueMap() {
         return internalValueMap;
      }

      public final Descriptors.EnumValueDescriptor getValueDescriptor() {
         return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
      }

      public final Descriptors.EnumDescriptor getDescriptorForType() {
         return getDescriptor();
      }

      public static final Descriptors.EnumDescriptor getDescriptor() {
         return (Descriptors.EnumDescriptor)OrcProto.getDescriptor().getEnumTypes().get(2);
      }

      public static CalendarKind valueOf(Descriptors.EnumValueDescriptor desc) {
         if (desc.getType() != getDescriptor()) {
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
         } else {
            return VALUES[desc.getIndex()];
         }
      }

      private CalendarKind(int value) {
         this.value = value;
      }

      // $FF: synthetic method
      private static CalendarKind[] $values() {
         return new CalendarKind[]{UNKNOWN_CALENDAR, JULIAN_GREGORIAN, PROLEPTIC_GREGORIAN};
      }
   }

   public static enum CompressionKind implements ProtocolMessageEnum {
      NONE(0),
      ZLIB(1),
      SNAPPY(2),
      LZO(3),
      LZ4(4),
      ZSTD(5),
      BROTLI(6);

      public static final int NONE_VALUE = 0;
      public static final int ZLIB_VALUE = 1;
      public static final int SNAPPY_VALUE = 2;
      public static final int LZO_VALUE = 3;
      public static final int LZ4_VALUE = 4;
      public static final int ZSTD_VALUE = 5;
      public static final int BROTLI_VALUE = 6;
      private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
         public CompressionKind findValueByNumber(int number) {
            return OrcProto.CompressionKind.forNumber(number);
         }
      };
      private static final CompressionKind[] VALUES = values();
      private final int value;

      public final int getNumber() {
         return this.value;
      }

      /** @deprecated */
      @Deprecated
      public static CompressionKind valueOf(int value) {
         return forNumber(value);
      }

      public static CompressionKind forNumber(int value) {
         switch (value) {
            case 0 -> {
               return NONE;
            }
            case 1 -> {
               return ZLIB;
            }
            case 2 -> {
               return SNAPPY;
            }
            case 3 -> {
               return LZO;
            }
            case 4 -> {
               return LZ4;
            }
            case 5 -> {
               return ZSTD;
            }
            case 6 -> {
               return BROTLI;
            }
            default -> {
               return null;
            }
         }
      }

      public static Internal.EnumLiteMap internalGetValueMap() {
         return internalValueMap;
      }

      public final Descriptors.EnumValueDescriptor getValueDescriptor() {
         return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
      }

      public final Descriptors.EnumDescriptor getDescriptorForType() {
         return getDescriptor();
      }

      public static final Descriptors.EnumDescriptor getDescriptor() {
         return (Descriptors.EnumDescriptor)OrcProto.getDescriptor().getEnumTypes().get(3);
      }

      public static CompressionKind valueOf(Descriptors.EnumValueDescriptor desc) {
         if (desc.getType() != getDescriptor()) {
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
         } else {
            return VALUES[desc.getIndex()];
         }
      }

      private CompressionKind(int value) {
         this.value = value;
      }

      // $FF: synthetic method
      private static CompressionKind[] $values() {
         return new CompressionKind[]{NONE, ZLIB, SNAPPY, LZO, LZ4, ZSTD, BROTLI};
      }
   }

   public static final class IntegerStatistics extends GeneratedMessageV3 implements IntegerStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int MINIMUM_FIELD_NUMBER = 1;
      private long minimum_;
      public static final int MAXIMUM_FIELD_NUMBER = 2;
      private long maximum_;
      public static final int SUM_FIELD_NUMBER = 3;
      private long sum_;
      private byte memoizedIsInitialized;
      private static final IntegerStatistics DEFAULT_INSTANCE = new IntegerStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public IntegerStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new IntegerStatistics(input, extensionRegistry);
         }
      };

      private IntegerStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private IntegerStatistics() {
         this.memoizedIsInitialized = -1;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new IntegerStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private IntegerStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.minimum_ = input.readSInt64();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.maximum_ = input.readSInt64();
                        break;
                     case 24:
                        this.bitField0_ |= 4;
                        this.sum_ = input.readSInt64();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_IntegerStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_IntegerStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(IntegerStatistics.class, Builder.class);
      }

      public boolean hasMinimum() {
         return (this.bitField0_ & 1) != 0;
      }

      public long getMinimum() {
         return this.minimum_;
      }

      public boolean hasMaximum() {
         return (this.bitField0_ & 2) != 0;
      }

      public long getMaximum() {
         return this.maximum_;
      }

      public boolean hasSum() {
         return (this.bitField0_ & 4) != 0;
      }

      public long getSum() {
         return this.sum_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeSInt64(1, this.minimum_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeSInt64(2, this.maximum_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeSInt64(3, this.sum_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeSInt64Size(1, this.minimum_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeSInt64Size(2, this.maximum_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeSInt64Size(3, this.sum_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof IntegerStatistics)) {
            return super.equals(obj);
         } else {
            IntegerStatistics other = (IntegerStatistics)obj;
            if (this.hasMinimum() != other.hasMinimum()) {
               return false;
            } else if (this.hasMinimum() && this.getMinimum() != other.getMinimum()) {
               return false;
            } else if (this.hasMaximum() != other.hasMaximum()) {
               return false;
            } else if (this.hasMaximum() && this.getMaximum() != other.getMaximum()) {
               return false;
            } else if (this.hasSum() != other.hasSum()) {
               return false;
            } else if (this.hasSum() && this.getSum() != other.getSum()) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasMinimum()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + Internal.hashLong(this.getMinimum());
            }

            if (this.hasMaximum()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + Internal.hashLong(this.getMaximum());
            }

            if (this.hasSum()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashLong(this.getSum());
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static IntegerStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (IntegerStatistics)PARSER.parseFrom(data);
      }

      public static IntegerStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (IntegerStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static IntegerStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (IntegerStatistics)PARSER.parseFrom(data);
      }

      public static IntegerStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (IntegerStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static IntegerStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (IntegerStatistics)PARSER.parseFrom(data);
      }

      public static IntegerStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (IntegerStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static IntegerStatistics parseFrom(InputStream input) throws IOException {
         return (IntegerStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static IntegerStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (IntegerStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static IntegerStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (IntegerStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static IntegerStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (IntegerStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static IntegerStatistics parseFrom(CodedInputStream input) throws IOException {
         return (IntegerStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static IntegerStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (IntegerStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(IntegerStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static IntegerStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public IntegerStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements IntegerStatisticsOrBuilder {
         private int bitField0_;
         private long minimum_;
         private long maximum_;
         private long sum_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_IntegerStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_IntegerStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(IntegerStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.IntegerStatistics.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.minimum_ = 0L;
            this.bitField0_ &= -2;
            this.maximum_ = 0L;
            this.bitField0_ &= -3;
            this.sum_ = 0L;
            this.bitField0_ &= -5;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_IntegerStatistics_descriptor;
         }

         public IntegerStatistics getDefaultInstanceForType() {
            return OrcProto.IntegerStatistics.getDefaultInstance();
         }

         public IntegerStatistics build() {
            IntegerStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public IntegerStatistics buildPartial() {
            IntegerStatistics result = new IntegerStatistics(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.minimum_ = this.minimum_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               result.maximum_ = this.maximum_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               result.sum_ = this.sum_;
               to_bitField0_ |= 4;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof IntegerStatistics) {
               return this.mergeFrom((IntegerStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(IntegerStatistics other) {
            if (other == OrcProto.IntegerStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasMinimum()) {
                  this.setMinimum(other.getMinimum());
               }

               if (other.hasMaximum()) {
                  this.setMaximum(other.getMaximum());
               }

               if (other.hasSum()) {
                  this.setSum(other.getSum());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            IntegerStatistics parsedMessage = null;

            try {
               parsedMessage = (IntegerStatistics)OrcProto.IntegerStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (IntegerStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasMinimum() {
            return (this.bitField0_ & 1) != 0;
         }

         public long getMinimum() {
            return this.minimum_;
         }

         public Builder setMinimum(long value) {
            this.bitField0_ |= 1;
            this.minimum_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMinimum() {
            this.bitField0_ &= -2;
            this.minimum_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasMaximum() {
            return (this.bitField0_ & 2) != 0;
         }

         public long getMaximum() {
            return this.maximum_;
         }

         public Builder setMaximum(long value) {
            this.bitField0_ |= 2;
            this.maximum_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMaximum() {
            this.bitField0_ &= -3;
            this.maximum_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasSum() {
            return (this.bitField0_ & 4) != 0;
         }

         public long getSum() {
            return this.sum_;
         }

         public Builder setSum(long value) {
            this.bitField0_ |= 4;
            this.sum_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearSum() {
            this.bitField0_ &= -5;
            this.sum_ = 0L;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class DoubleStatistics extends GeneratedMessageV3 implements DoubleStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int MINIMUM_FIELD_NUMBER = 1;
      private double minimum_;
      public static final int MAXIMUM_FIELD_NUMBER = 2;
      private double maximum_;
      public static final int SUM_FIELD_NUMBER = 3;
      private double sum_;
      private byte memoizedIsInitialized;
      private static final DoubleStatistics DEFAULT_INSTANCE = new DoubleStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DoubleStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DoubleStatistics(input, extensionRegistry);
         }
      };

      private DoubleStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private DoubleStatistics() {
         this.memoizedIsInitialized = -1;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DoubleStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private DoubleStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 9:
                        this.bitField0_ |= 1;
                        this.minimum_ = input.readDouble();
                        break;
                     case 17:
                        this.bitField0_ |= 2;
                        this.maximum_ = input.readDouble();
                        break;
                     case 25:
                        this.bitField0_ |= 4;
                        this.sum_ = input.readDouble();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_DoubleStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_DoubleStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(DoubleStatistics.class, Builder.class);
      }

      public boolean hasMinimum() {
         return (this.bitField0_ & 1) != 0;
      }

      public double getMinimum() {
         return this.minimum_;
      }

      public boolean hasMaximum() {
         return (this.bitField0_ & 2) != 0;
      }

      public double getMaximum() {
         return this.maximum_;
      }

      public boolean hasSum() {
         return (this.bitField0_ & 4) != 0;
      }

      public double getSum() {
         return this.sum_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeDouble(1, this.minimum_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeDouble(2, this.maximum_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeDouble(3, this.sum_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeDoubleSize(1, this.minimum_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeDoubleSize(2, this.maximum_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeDoubleSize(3, this.sum_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DoubleStatistics)) {
            return super.equals(obj);
         } else {
            DoubleStatistics other = (DoubleStatistics)obj;
            if (this.hasMinimum() != other.hasMinimum()) {
               return false;
            } else if (this.hasMinimum() && Double.doubleToLongBits(this.getMinimum()) != Double.doubleToLongBits(other.getMinimum())) {
               return false;
            } else if (this.hasMaximum() != other.hasMaximum()) {
               return false;
            } else if (this.hasMaximum() && Double.doubleToLongBits(this.getMaximum()) != Double.doubleToLongBits(other.getMaximum())) {
               return false;
            } else if (this.hasSum() != other.hasSum()) {
               return false;
            } else if (this.hasSum() && Double.doubleToLongBits(this.getSum()) != Double.doubleToLongBits(other.getSum())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasMinimum()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + Internal.hashLong(Double.doubleToLongBits(this.getMinimum()));
            }

            if (this.hasMaximum()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + Internal.hashLong(Double.doubleToLongBits(this.getMaximum()));
            }

            if (this.hasSum()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashLong(Double.doubleToLongBits(this.getSum()));
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DoubleStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (DoubleStatistics)PARSER.parseFrom(data);
      }

      public static DoubleStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DoubleStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DoubleStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (DoubleStatistics)PARSER.parseFrom(data);
      }

      public static DoubleStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DoubleStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DoubleStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (DoubleStatistics)PARSER.parseFrom(data);
      }

      public static DoubleStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DoubleStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DoubleStatistics parseFrom(InputStream input) throws IOException {
         return (DoubleStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DoubleStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DoubleStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DoubleStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (DoubleStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DoubleStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DoubleStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DoubleStatistics parseFrom(CodedInputStream input) throws IOException {
         return (DoubleStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DoubleStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DoubleStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(DoubleStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static DoubleStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DoubleStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DoubleStatisticsOrBuilder {
         private int bitField0_;
         private double minimum_;
         private double maximum_;
         private double sum_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_DoubleStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_DoubleStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(DoubleStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.DoubleStatistics.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.minimum_ = (double)0.0F;
            this.bitField0_ &= -2;
            this.maximum_ = (double)0.0F;
            this.bitField0_ &= -3;
            this.sum_ = (double)0.0F;
            this.bitField0_ &= -5;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_DoubleStatistics_descriptor;
         }

         public DoubleStatistics getDefaultInstanceForType() {
            return OrcProto.DoubleStatistics.getDefaultInstance();
         }

         public DoubleStatistics build() {
            DoubleStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DoubleStatistics buildPartial() {
            DoubleStatistics result = new DoubleStatistics(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.minimum_ = this.minimum_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               result.maximum_ = this.maximum_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               result.sum_ = this.sum_;
               to_bitField0_ |= 4;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof DoubleStatistics) {
               return this.mergeFrom((DoubleStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(DoubleStatistics other) {
            if (other == OrcProto.DoubleStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasMinimum()) {
                  this.setMinimum(other.getMinimum());
               }

               if (other.hasMaximum()) {
                  this.setMaximum(other.getMaximum());
               }

               if (other.hasSum()) {
                  this.setSum(other.getSum());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DoubleStatistics parsedMessage = null;

            try {
               parsedMessage = (DoubleStatistics)OrcProto.DoubleStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (DoubleStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasMinimum() {
            return (this.bitField0_ & 1) != 0;
         }

         public double getMinimum() {
            return this.minimum_;
         }

         public Builder setMinimum(double value) {
            this.bitField0_ |= 1;
            this.minimum_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMinimum() {
            this.bitField0_ &= -2;
            this.minimum_ = (double)0.0F;
            this.onChanged();
            return this;
         }

         public boolean hasMaximum() {
            return (this.bitField0_ & 2) != 0;
         }

         public double getMaximum() {
            return this.maximum_;
         }

         public Builder setMaximum(double value) {
            this.bitField0_ |= 2;
            this.maximum_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMaximum() {
            this.bitField0_ &= -3;
            this.maximum_ = (double)0.0F;
            this.onChanged();
            return this;
         }

         public boolean hasSum() {
            return (this.bitField0_ & 4) != 0;
         }

         public double getSum() {
            return this.sum_;
         }

         public Builder setSum(double value) {
            this.bitField0_ |= 4;
            this.sum_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearSum() {
            this.bitField0_ &= -5;
            this.sum_ = (double)0.0F;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class StringStatistics extends GeneratedMessageV3 implements StringStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int MINIMUM_FIELD_NUMBER = 1;
      private volatile Object minimum_;
      public static final int MAXIMUM_FIELD_NUMBER = 2;
      private volatile Object maximum_;
      public static final int SUM_FIELD_NUMBER = 3;
      private long sum_;
      public static final int LOWER_BOUND_FIELD_NUMBER = 4;
      private volatile Object lowerBound_;
      public static final int UPPER_BOUND_FIELD_NUMBER = 5;
      private volatile Object upperBound_;
      private byte memoizedIsInitialized;
      private static final StringStatistics DEFAULT_INSTANCE = new StringStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public StringStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new StringStatistics(input, extensionRegistry);
         }
      };

      private StringStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private StringStatistics() {
         this.memoizedIsInitialized = -1;
         this.minimum_ = "";
         this.maximum_ = "";
         this.lowerBound_ = "";
         this.upperBound_ = "";
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new StringStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private StringStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.minimum_ = bs;
                        break;
                     case 18:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 2;
                        this.maximum_ = bs;
                        break;
                     case 24:
                        this.bitField0_ |= 4;
                        this.sum_ = input.readSInt64();
                        break;
                     case 34:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 8;
                        this.lowerBound_ = bs;
                        break;
                     case 42:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 16;
                        this.upperBound_ = bs;
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_StringStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_StringStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(StringStatistics.class, Builder.class);
      }

      public boolean hasMinimum() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getMinimum() {
         Object ref = this.minimum_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.minimum_ = s;
            }

            return s;
         }
      }

      public ByteString getMinimumBytes() {
         Object ref = this.minimum_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.minimum_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasMaximum() {
         return (this.bitField0_ & 2) != 0;
      }

      public String getMaximum() {
         Object ref = this.maximum_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.maximum_ = s;
            }

            return s;
         }
      }

      public ByteString getMaximumBytes() {
         Object ref = this.maximum_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.maximum_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasSum() {
         return (this.bitField0_ & 4) != 0;
      }

      public long getSum() {
         return this.sum_;
      }

      public boolean hasLowerBound() {
         return (this.bitField0_ & 8) != 0;
      }

      public String getLowerBound() {
         Object ref = this.lowerBound_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.lowerBound_ = s;
            }

            return s;
         }
      }

      public ByteString getLowerBoundBytes() {
         Object ref = this.lowerBound_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.lowerBound_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasUpperBound() {
         return (this.bitField0_ & 16) != 0;
      }

      public String getUpperBound() {
         Object ref = this.upperBound_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.upperBound_ = s;
            }

            return s;
         }
      }

      public ByteString getUpperBoundBytes() {
         Object ref = this.upperBound_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.upperBound_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.minimum_);
         }

         if ((this.bitField0_ & 2) != 0) {
            GeneratedMessageV3.writeString(output, 2, this.maximum_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeSInt64(3, this.sum_);
         }

         if ((this.bitField0_ & 8) != 0) {
            GeneratedMessageV3.writeString(output, 4, this.lowerBound_);
         }

         if ((this.bitField0_ & 16) != 0) {
            GeneratedMessageV3.writeString(output, 5, this.upperBound_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.minimum_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += GeneratedMessageV3.computeStringSize(2, this.maximum_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeSInt64Size(3, this.sum_);
            }

            if ((this.bitField0_ & 8) != 0) {
               size += GeneratedMessageV3.computeStringSize(4, this.lowerBound_);
            }

            if ((this.bitField0_ & 16) != 0) {
               size += GeneratedMessageV3.computeStringSize(5, this.upperBound_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof StringStatistics)) {
            return super.equals(obj);
         } else {
            StringStatistics other = (StringStatistics)obj;
            if (this.hasMinimum() != other.hasMinimum()) {
               return false;
            } else if (this.hasMinimum() && !this.getMinimum().equals(other.getMinimum())) {
               return false;
            } else if (this.hasMaximum() != other.hasMaximum()) {
               return false;
            } else if (this.hasMaximum() && !this.getMaximum().equals(other.getMaximum())) {
               return false;
            } else if (this.hasSum() != other.hasSum()) {
               return false;
            } else if (this.hasSum() && this.getSum() != other.getSum()) {
               return false;
            } else if (this.hasLowerBound() != other.hasLowerBound()) {
               return false;
            } else if (this.hasLowerBound() && !this.getLowerBound().equals(other.getLowerBound())) {
               return false;
            } else if (this.hasUpperBound() != other.hasUpperBound()) {
               return false;
            } else if (this.hasUpperBound() && !this.getUpperBound().equals(other.getUpperBound())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasMinimum()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getMinimum().hashCode();
            }

            if (this.hasMaximum()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getMaximum().hashCode();
            }

            if (this.hasSum()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashLong(this.getSum());
            }

            if (this.hasLowerBound()) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.getLowerBound().hashCode();
            }

            if (this.hasUpperBound()) {
               hash = 37 * hash + 5;
               hash = 53 * hash + this.getUpperBound().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static StringStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (StringStatistics)PARSER.parseFrom(data);
      }

      public static StringStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StringStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StringStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (StringStatistics)PARSER.parseFrom(data);
      }

      public static StringStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StringStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StringStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (StringStatistics)PARSER.parseFrom(data);
      }

      public static StringStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StringStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StringStatistics parseFrom(InputStream input) throws IOException {
         return (StringStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static StringStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StringStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static StringStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (StringStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static StringStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StringStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static StringStatistics parseFrom(CodedInputStream input) throws IOException {
         return (StringStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static StringStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StringStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(StringStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static StringStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public StringStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements StringStatisticsOrBuilder {
         private int bitField0_;
         private Object minimum_ = "";
         private Object maximum_ = "";
         private long sum_;
         private Object lowerBound_ = "";
         private Object upperBound_ = "";

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_StringStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_StringStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(StringStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.StringStatistics.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.minimum_ = "";
            this.bitField0_ &= -2;
            this.maximum_ = "";
            this.bitField0_ &= -3;
            this.sum_ = 0L;
            this.bitField0_ &= -5;
            this.lowerBound_ = "";
            this.bitField0_ &= -9;
            this.upperBound_ = "";
            this.bitField0_ &= -17;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_StringStatistics_descriptor;
         }

         public StringStatistics getDefaultInstanceForType() {
            return OrcProto.StringStatistics.getDefaultInstance();
         }

         public StringStatistics build() {
            StringStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public StringStatistics buildPartial() {
            StringStatistics result = new StringStatistics(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.minimum_ = this.minimum_;
            if ((from_bitField0_ & 2) != 0) {
               to_bitField0_ |= 2;
            }

            result.maximum_ = this.maximum_;
            if ((from_bitField0_ & 4) != 0) {
               result.sum_ = this.sum_;
               to_bitField0_ |= 4;
            }

            if ((from_bitField0_ & 8) != 0) {
               to_bitField0_ |= 8;
            }

            result.lowerBound_ = this.lowerBound_;
            if ((from_bitField0_ & 16) != 0) {
               to_bitField0_ |= 16;
            }

            result.upperBound_ = this.upperBound_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof StringStatistics) {
               return this.mergeFrom((StringStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(StringStatistics other) {
            if (other == OrcProto.StringStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasMinimum()) {
                  this.bitField0_ |= 1;
                  this.minimum_ = other.minimum_;
                  this.onChanged();
               }

               if (other.hasMaximum()) {
                  this.bitField0_ |= 2;
                  this.maximum_ = other.maximum_;
                  this.onChanged();
               }

               if (other.hasSum()) {
                  this.setSum(other.getSum());
               }

               if (other.hasLowerBound()) {
                  this.bitField0_ |= 8;
                  this.lowerBound_ = other.lowerBound_;
                  this.onChanged();
               }

               if (other.hasUpperBound()) {
                  this.bitField0_ |= 16;
                  this.upperBound_ = other.upperBound_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            StringStatistics parsedMessage = null;

            try {
               parsedMessage = (StringStatistics)OrcProto.StringStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (StringStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasMinimum() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getMinimum() {
            Object ref = this.minimum_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.minimum_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getMinimumBytes() {
            Object ref = this.minimum_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.minimum_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setMinimum(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.minimum_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearMinimum() {
            this.bitField0_ &= -2;
            this.minimum_ = OrcProto.StringStatistics.getDefaultInstance().getMinimum();
            this.onChanged();
            return this;
         }

         public Builder setMinimumBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.minimum_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasMaximum() {
            return (this.bitField0_ & 2) != 0;
         }

         public String getMaximum() {
            Object ref = this.maximum_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.maximum_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getMaximumBytes() {
            Object ref = this.maximum_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.maximum_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setMaximum(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.maximum_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearMaximum() {
            this.bitField0_ &= -3;
            this.maximum_ = OrcProto.StringStatistics.getDefaultInstance().getMaximum();
            this.onChanged();
            return this;
         }

         public Builder setMaximumBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.maximum_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasSum() {
            return (this.bitField0_ & 4) != 0;
         }

         public long getSum() {
            return this.sum_;
         }

         public Builder setSum(long value) {
            this.bitField0_ |= 4;
            this.sum_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearSum() {
            this.bitField0_ &= -5;
            this.sum_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasLowerBound() {
            return (this.bitField0_ & 8) != 0;
         }

         public String getLowerBound() {
            Object ref = this.lowerBound_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.lowerBound_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getLowerBoundBytes() {
            Object ref = this.lowerBound_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.lowerBound_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setLowerBound(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8;
               this.lowerBound_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearLowerBound() {
            this.bitField0_ &= -9;
            this.lowerBound_ = OrcProto.StringStatistics.getDefaultInstance().getLowerBound();
            this.onChanged();
            return this;
         }

         public Builder setLowerBoundBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8;
               this.lowerBound_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasUpperBound() {
            return (this.bitField0_ & 16) != 0;
         }

         public String getUpperBound() {
            Object ref = this.upperBound_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.upperBound_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getUpperBoundBytes() {
            Object ref = this.upperBound_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.upperBound_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setUpperBound(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.upperBound_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearUpperBound() {
            this.bitField0_ &= -17;
            this.upperBound_ = OrcProto.StringStatistics.getDefaultInstance().getUpperBound();
            this.onChanged();
            return this;
         }

         public Builder setUpperBoundBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.upperBound_ = value;
               this.onChanged();
               return this;
            }
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class BucketStatistics extends GeneratedMessageV3 implements BucketStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int COUNT_FIELD_NUMBER = 1;
      private Internal.LongList count_;
      private int countMemoizedSerializedSize;
      private byte memoizedIsInitialized;
      private static final BucketStatistics DEFAULT_INSTANCE = new BucketStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public BucketStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new BucketStatistics(input, extensionRegistry);
         }
      };

      private BucketStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.countMemoizedSerializedSize = -1;
         this.memoizedIsInitialized = -1;
      }

      private BucketStatistics() {
         this.countMemoizedSerializedSize = -1;
         this.memoizedIsInitialized = -1;
         this.count_ = emptyLongList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new BucketStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private BucketStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.count_ = newLongList();
                           mutable_bitField0_ |= 1;
                        }

                        this.count_.addLong(input.readUInt64());
                        break;
                     case 10:
                        int length = input.readRawVarint32();
                        int limit = input.pushLimit(length);
                        if ((mutable_bitField0_ & 1) == 0 && input.getBytesUntilLimit() > 0) {
                           this.count_ = newLongList();
                           mutable_bitField0_ |= 1;
                        }

                        while(input.getBytesUntilLimit() > 0) {
                           this.count_.addLong(input.readUInt64());
                        }

                        input.popLimit(limit);
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.count_.makeImmutable();
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_BucketStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_BucketStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(BucketStatistics.class, Builder.class);
      }

      public List getCountList() {
         return this.count_;
      }

      public int getCountCount() {
         return this.count_.size();
      }

      public long getCount(int index) {
         return this.count_.getLong(index);
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if (this.getCountList().size() > 0) {
            output.writeUInt32NoTag(10);
            output.writeUInt32NoTag(this.countMemoizedSerializedSize);
         }

         for(int i = 0; i < this.count_.size(); ++i) {
            output.writeUInt64NoTag(this.count_.getLong(i));
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            int dataSize = 0;

            for(int i = 0; i < this.count_.size(); ++i) {
               dataSize += CodedOutputStream.computeUInt64SizeNoTag(this.count_.getLong(i));
            }

            size += dataSize;
            if (!this.getCountList().isEmpty()) {
               ++size;
               size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
            }

            this.countMemoizedSerializedSize = dataSize;
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof BucketStatistics)) {
            return super.equals(obj);
         } else {
            BucketStatistics other = (BucketStatistics)obj;
            if (!this.getCountList().equals(other.getCountList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getCountCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getCountList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static BucketStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (BucketStatistics)PARSER.parseFrom(data);
      }

      public static BucketStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BucketStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BucketStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (BucketStatistics)PARSER.parseFrom(data);
      }

      public static BucketStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BucketStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BucketStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (BucketStatistics)PARSER.parseFrom(data);
      }

      public static BucketStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BucketStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BucketStatistics parseFrom(InputStream input) throws IOException {
         return (BucketStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static BucketStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BucketStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static BucketStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (BucketStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static BucketStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BucketStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static BucketStatistics parseFrom(CodedInputStream input) throws IOException {
         return (BucketStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static BucketStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BucketStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(BucketStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static BucketStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public BucketStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements BucketStatisticsOrBuilder {
         private int bitField0_;
         private Internal.LongList count_ = OrcProto.BucketStatistics.emptyLongList();

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_BucketStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_BucketStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(BucketStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.BucketStatistics.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.count_ = OrcProto.BucketStatistics.emptyLongList();
            this.bitField0_ &= -2;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_BucketStatistics_descriptor;
         }

         public BucketStatistics getDefaultInstanceForType() {
            return OrcProto.BucketStatistics.getDefaultInstance();
         }

         public BucketStatistics build() {
            BucketStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public BucketStatistics buildPartial() {
            BucketStatistics result = new BucketStatistics(this);
            int from_bitField0_ = this.bitField0_;
            if ((this.bitField0_ & 1) != 0) {
               this.count_.makeImmutable();
               this.bitField0_ &= -2;
            }

            result.count_ = this.count_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof BucketStatistics) {
               return this.mergeFrom((BucketStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(BucketStatistics other) {
            if (other == OrcProto.BucketStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (!other.count_.isEmpty()) {
                  if (this.count_.isEmpty()) {
                     this.count_ = other.count_;
                     this.bitField0_ &= -2;
                  } else {
                     this.ensureCountIsMutable();
                     this.count_.addAll(other.count_);
                  }

                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            BucketStatistics parsedMessage = null;

            try {
               parsedMessage = (BucketStatistics)OrcProto.BucketStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (BucketStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureCountIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.count_ = OrcProto.BucketStatistics.mutableCopy(this.count_);
               this.bitField0_ |= 1;
            }

         }

         public List getCountList() {
            return (List)((this.bitField0_ & 1) != 0 ? Collections.unmodifiableList(this.count_) : this.count_);
         }

         public int getCountCount() {
            return this.count_.size();
         }

         public long getCount(int index) {
            return this.count_.getLong(index);
         }

         public Builder setCount(int index, long value) {
            this.ensureCountIsMutable();
            this.count_.setLong(index, value);
            this.onChanged();
            return this;
         }

         public Builder addCount(long value) {
            this.ensureCountIsMutable();
            this.count_.addLong(value);
            this.onChanged();
            return this;
         }

         public Builder addAllCount(Iterable values) {
            this.ensureCountIsMutable();
            AbstractMessageLite.Builder.addAll(values, (List)this.count_);
            this.onChanged();
            return this;
         }

         public Builder clearCount() {
            this.count_ = OrcProto.BucketStatistics.emptyLongList();
            this.bitField0_ &= -2;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class DecimalStatistics extends GeneratedMessageV3 implements DecimalStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int MINIMUM_FIELD_NUMBER = 1;
      private volatile Object minimum_;
      public static final int MAXIMUM_FIELD_NUMBER = 2;
      private volatile Object maximum_;
      public static final int SUM_FIELD_NUMBER = 3;
      private volatile Object sum_;
      private byte memoizedIsInitialized;
      private static final DecimalStatistics DEFAULT_INSTANCE = new DecimalStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DecimalStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DecimalStatistics(input, extensionRegistry);
         }
      };

      private DecimalStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private DecimalStatistics() {
         this.memoizedIsInitialized = -1;
         this.minimum_ = "";
         this.maximum_ = "";
         this.sum_ = "";
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DecimalStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private DecimalStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.minimum_ = bs;
                        break;
                     case 18:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 2;
                        this.maximum_ = bs;
                        break;
                     case 26:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 4;
                        this.sum_ = bs;
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_DecimalStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_DecimalStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(DecimalStatistics.class, Builder.class);
      }

      public boolean hasMinimum() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getMinimum() {
         Object ref = this.minimum_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.minimum_ = s;
            }

            return s;
         }
      }

      public ByteString getMinimumBytes() {
         Object ref = this.minimum_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.minimum_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasMaximum() {
         return (this.bitField0_ & 2) != 0;
      }

      public String getMaximum() {
         Object ref = this.maximum_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.maximum_ = s;
            }

            return s;
         }
      }

      public ByteString getMaximumBytes() {
         Object ref = this.maximum_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.maximum_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasSum() {
         return (this.bitField0_ & 4) != 0;
      }

      public String getSum() {
         Object ref = this.sum_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.sum_ = s;
            }

            return s;
         }
      }

      public ByteString getSumBytes() {
         Object ref = this.sum_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.sum_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.minimum_);
         }

         if ((this.bitField0_ & 2) != 0) {
            GeneratedMessageV3.writeString(output, 2, this.maximum_);
         }

         if ((this.bitField0_ & 4) != 0) {
            GeneratedMessageV3.writeString(output, 3, this.sum_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.minimum_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += GeneratedMessageV3.computeStringSize(2, this.maximum_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += GeneratedMessageV3.computeStringSize(3, this.sum_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DecimalStatistics)) {
            return super.equals(obj);
         } else {
            DecimalStatistics other = (DecimalStatistics)obj;
            if (this.hasMinimum() != other.hasMinimum()) {
               return false;
            } else if (this.hasMinimum() && !this.getMinimum().equals(other.getMinimum())) {
               return false;
            } else if (this.hasMaximum() != other.hasMaximum()) {
               return false;
            } else if (this.hasMaximum() && !this.getMaximum().equals(other.getMaximum())) {
               return false;
            } else if (this.hasSum() != other.hasSum()) {
               return false;
            } else if (this.hasSum() && !this.getSum().equals(other.getSum())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasMinimum()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getMinimum().hashCode();
            }

            if (this.hasMaximum()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getMaximum().hashCode();
            }

            if (this.hasSum()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getSum().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DecimalStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (DecimalStatistics)PARSER.parseFrom(data);
      }

      public static DecimalStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DecimalStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DecimalStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (DecimalStatistics)PARSER.parseFrom(data);
      }

      public static DecimalStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DecimalStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DecimalStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (DecimalStatistics)PARSER.parseFrom(data);
      }

      public static DecimalStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DecimalStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DecimalStatistics parseFrom(InputStream input) throws IOException {
         return (DecimalStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DecimalStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DecimalStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DecimalStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (DecimalStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DecimalStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DecimalStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DecimalStatistics parseFrom(CodedInputStream input) throws IOException {
         return (DecimalStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DecimalStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DecimalStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(DecimalStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static DecimalStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DecimalStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DecimalStatisticsOrBuilder {
         private int bitField0_;
         private Object minimum_ = "";
         private Object maximum_ = "";
         private Object sum_ = "";

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_DecimalStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_DecimalStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(DecimalStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.DecimalStatistics.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.minimum_ = "";
            this.bitField0_ &= -2;
            this.maximum_ = "";
            this.bitField0_ &= -3;
            this.sum_ = "";
            this.bitField0_ &= -5;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_DecimalStatistics_descriptor;
         }

         public DecimalStatistics getDefaultInstanceForType() {
            return OrcProto.DecimalStatistics.getDefaultInstance();
         }

         public DecimalStatistics build() {
            DecimalStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DecimalStatistics buildPartial() {
            DecimalStatistics result = new DecimalStatistics(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.minimum_ = this.minimum_;
            if ((from_bitField0_ & 2) != 0) {
               to_bitField0_ |= 2;
            }

            result.maximum_ = this.maximum_;
            if ((from_bitField0_ & 4) != 0) {
               to_bitField0_ |= 4;
            }

            result.sum_ = this.sum_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof DecimalStatistics) {
               return this.mergeFrom((DecimalStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(DecimalStatistics other) {
            if (other == OrcProto.DecimalStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasMinimum()) {
                  this.bitField0_ |= 1;
                  this.minimum_ = other.minimum_;
                  this.onChanged();
               }

               if (other.hasMaximum()) {
                  this.bitField0_ |= 2;
                  this.maximum_ = other.maximum_;
                  this.onChanged();
               }

               if (other.hasSum()) {
                  this.bitField0_ |= 4;
                  this.sum_ = other.sum_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DecimalStatistics parsedMessage = null;

            try {
               parsedMessage = (DecimalStatistics)OrcProto.DecimalStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (DecimalStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasMinimum() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getMinimum() {
            Object ref = this.minimum_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.minimum_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getMinimumBytes() {
            Object ref = this.minimum_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.minimum_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setMinimum(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.minimum_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearMinimum() {
            this.bitField0_ &= -2;
            this.minimum_ = OrcProto.DecimalStatistics.getDefaultInstance().getMinimum();
            this.onChanged();
            return this;
         }

         public Builder setMinimumBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.minimum_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasMaximum() {
            return (this.bitField0_ & 2) != 0;
         }

         public String getMaximum() {
            Object ref = this.maximum_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.maximum_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getMaximumBytes() {
            Object ref = this.maximum_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.maximum_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setMaximum(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.maximum_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearMaximum() {
            this.bitField0_ &= -3;
            this.maximum_ = OrcProto.DecimalStatistics.getDefaultInstance().getMaximum();
            this.onChanged();
            return this;
         }

         public Builder setMaximumBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.maximum_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasSum() {
            return (this.bitField0_ & 4) != 0;
         }

         public String getSum() {
            Object ref = this.sum_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.sum_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getSumBytes() {
            Object ref = this.sum_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.sum_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setSum(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.sum_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearSum() {
            this.bitField0_ &= -5;
            this.sum_ = OrcProto.DecimalStatistics.getDefaultInstance().getSum();
            this.onChanged();
            return this;
         }

         public Builder setSumBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.sum_ = value;
               this.onChanged();
               return this;
            }
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class DateStatistics extends GeneratedMessageV3 implements DateStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int MINIMUM_FIELD_NUMBER = 1;
      private int minimum_;
      public static final int MAXIMUM_FIELD_NUMBER = 2;
      private int maximum_;
      private byte memoizedIsInitialized;
      private static final DateStatistics DEFAULT_INSTANCE = new DateStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DateStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DateStatistics(input, extensionRegistry);
         }
      };

      private DateStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private DateStatistics() {
         this.memoizedIsInitialized = -1;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DateStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private DateStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.minimum_ = input.readSInt32();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.maximum_ = input.readSInt32();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_DateStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_DateStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(DateStatistics.class, Builder.class);
      }

      public boolean hasMinimum() {
         return (this.bitField0_ & 1) != 0;
      }

      public int getMinimum() {
         return this.minimum_;
      }

      public boolean hasMaximum() {
         return (this.bitField0_ & 2) != 0;
      }

      public int getMaximum() {
         return this.maximum_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeSInt32(1, this.minimum_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeSInt32(2, this.maximum_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeSInt32Size(1, this.minimum_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeSInt32Size(2, this.maximum_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DateStatistics)) {
            return super.equals(obj);
         } else {
            DateStatistics other = (DateStatistics)obj;
            if (this.hasMinimum() != other.hasMinimum()) {
               return false;
            } else if (this.hasMinimum() && this.getMinimum() != other.getMinimum()) {
               return false;
            } else if (this.hasMaximum() != other.hasMaximum()) {
               return false;
            } else if (this.hasMaximum() && this.getMaximum() != other.getMaximum()) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasMinimum()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getMinimum();
            }

            if (this.hasMaximum()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getMaximum();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DateStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (DateStatistics)PARSER.parseFrom(data);
      }

      public static DateStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DateStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DateStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (DateStatistics)PARSER.parseFrom(data);
      }

      public static DateStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DateStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DateStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (DateStatistics)PARSER.parseFrom(data);
      }

      public static DateStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DateStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DateStatistics parseFrom(InputStream input) throws IOException {
         return (DateStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DateStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DateStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DateStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (DateStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DateStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DateStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DateStatistics parseFrom(CodedInputStream input) throws IOException {
         return (DateStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DateStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DateStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(DateStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static DateStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DateStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DateStatisticsOrBuilder {
         private int bitField0_;
         private int minimum_;
         private int maximum_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_DateStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_DateStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(DateStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.DateStatistics.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.minimum_ = 0;
            this.bitField0_ &= -2;
            this.maximum_ = 0;
            this.bitField0_ &= -3;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_DateStatistics_descriptor;
         }

         public DateStatistics getDefaultInstanceForType() {
            return OrcProto.DateStatistics.getDefaultInstance();
         }

         public DateStatistics build() {
            DateStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DateStatistics buildPartial() {
            DateStatistics result = new DateStatistics(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.minimum_ = this.minimum_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               result.maximum_ = this.maximum_;
               to_bitField0_ |= 2;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof DateStatistics) {
               return this.mergeFrom((DateStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(DateStatistics other) {
            if (other == OrcProto.DateStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasMinimum()) {
                  this.setMinimum(other.getMinimum());
               }

               if (other.hasMaximum()) {
                  this.setMaximum(other.getMaximum());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DateStatistics parsedMessage = null;

            try {
               parsedMessage = (DateStatistics)OrcProto.DateStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (DateStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasMinimum() {
            return (this.bitField0_ & 1) != 0;
         }

         public int getMinimum() {
            return this.minimum_;
         }

         public Builder setMinimum(int value) {
            this.bitField0_ |= 1;
            this.minimum_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMinimum() {
            this.bitField0_ &= -2;
            this.minimum_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasMaximum() {
            return (this.bitField0_ & 2) != 0;
         }

         public int getMaximum() {
            return this.maximum_;
         }

         public Builder setMaximum(int value) {
            this.bitField0_ |= 2;
            this.maximum_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMaximum() {
            this.bitField0_ &= -3;
            this.maximum_ = 0;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class TimestampStatistics extends GeneratedMessageV3 implements TimestampStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int MINIMUM_FIELD_NUMBER = 1;
      private long minimum_;
      public static final int MAXIMUM_FIELD_NUMBER = 2;
      private long maximum_;
      public static final int MINIMUM_UTC_FIELD_NUMBER = 3;
      private long minimumUtc_;
      public static final int MAXIMUM_UTC_FIELD_NUMBER = 4;
      private long maximumUtc_;
      public static final int MINIMUM_NANOS_FIELD_NUMBER = 5;
      private int minimumNanos_;
      public static final int MAXIMUM_NANOS_FIELD_NUMBER = 6;
      private int maximumNanos_;
      private byte memoizedIsInitialized;
      private static final TimestampStatistics DEFAULT_INSTANCE = new TimestampStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public TimestampStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new TimestampStatistics(input, extensionRegistry);
         }
      };

      private TimestampStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private TimestampStatistics() {
         this.memoizedIsInitialized = -1;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new TimestampStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private TimestampStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.minimum_ = input.readSInt64();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.maximum_ = input.readSInt64();
                        break;
                     case 24:
                        this.bitField0_ |= 4;
                        this.minimumUtc_ = input.readSInt64();
                        break;
                     case 32:
                        this.bitField0_ |= 8;
                        this.maximumUtc_ = input.readSInt64();
                        break;
                     case 40:
                        this.bitField0_ |= 16;
                        this.minimumNanos_ = input.readInt32();
                        break;
                     case 48:
                        this.bitField0_ |= 32;
                        this.maximumNanos_ = input.readInt32();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_TimestampStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_TimestampStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(TimestampStatistics.class, Builder.class);
      }

      public boolean hasMinimum() {
         return (this.bitField0_ & 1) != 0;
      }

      public long getMinimum() {
         return this.minimum_;
      }

      public boolean hasMaximum() {
         return (this.bitField0_ & 2) != 0;
      }

      public long getMaximum() {
         return this.maximum_;
      }

      public boolean hasMinimumUtc() {
         return (this.bitField0_ & 4) != 0;
      }

      public long getMinimumUtc() {
         return this.minimumUtc_;
      }

      public boolean hasMaximumUtc() {
         return (this.bitField0_ & 8) != 0;
      }

      public long getMaximumUtc() {
         return this.maximumUtc_;
      }

      public boolean hasMinimumNanos() {
         return (this.bitField0_ & 16) != 0;
      }

      public int getMinimumNanos() {
         return this.minimumNanos_;
      }

      public boolean hasMaximumNanos() {
         return (this.bitField0_ & 32) != 0;
      }

      public int getMaximumNanos() {
         return this.maximumNanos_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeSInt64(1, this.minimum_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeSInt64(2, this.maximum_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeSInt64(3, this.minimumUtc_);
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeSInt64(4, this.maximumUtc_);
         }

         if ((this.bitField0_ & 16) != 0) {
            output.writeInt32(5, this.minimumNanos_);
         }

         if ((this.bitField0_ & 32) != 0) {
            output.writeInt32(6, this.maximumNanos_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeSInt64Size(1, this.minimum_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeSInt64Size(2, this.maximum_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeSInt64Size(3, this.minimumUtc_);
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeSInt64Size(4, this.maximumUtc_);
            }

            if ((this.bitField0_ & 16) != 0) {
               size += CodedOutputStream.computeInt32Size(5, this.minimumNanos_);
            }

            if ((this.bitField0_ & 32) != 0) {
               size += CodedOutputStream.computeInt32Size(6, this.maximumNanos_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof TimestampStatistics)) {
            return super.equals(obj);
         } else {
            TimestampStatistics other = (TimestampStatistics)obj;
            if (this.hasMinimum() != other.hasMinimum()) {
               return false;
            } else if (this.hasMinimum() && this.getMinimum() != other.getMinimum()) {
               return false;
            } else if (this.hasMaximum() != other.hasMaximum()) {
               return false;
            } else if (this.hasMaximum() && this.getMaximum() != other.getMaximum()) {
               return false;
            } else if (this.hasMinimumUtc() != other.hasMinimumUtc()) {
               return false;
            } else if (this.hasMinimumUtc() && this.getMinimumUtc() != other.getMinimumUtc()) {
               return false;
            } else if (this.hasMaximumUtc() != other.hasMaximumUtc()) {
               return false;
            } else if (this.hasMaximumUtc() && this.getMaximumUtc() != other.getMaximumUtc()) {
               return false;
            } else if (this.hasMinimumNanos() != other.hasMinimumNanos()) {
               return false;
            } else if (this.hasMinimumNanos() && this.getMinimumNanos() != other.getMinimumNanos()) {
               return false;
            } else if (this.hasMaximumNanos() != other.hasMaximumNanos()) {
               return false;
            } else if (this.hasMaximumNanos() && this.getMaximumNanos() != other.getMaximumNanos()) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasMinimum()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + Internal.hashLong(this.getMinimum());
            }

            if (this.hasMaximum()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + Internal.hashLong(this.getMaximum());
            }

            if (this.hasMinimumUtc()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashLong(this.getMinimumUtc());
            }

            if (this.hasMaximumUtc()) {
               hash = 37 * hash + 4;
               hash = 53 * hash + Internal.hashLong(this.getMaximumUtc());
            }

            if (this.hasMinimumNanos()) {
               hash = 37 * hash + 5;
               hash = 53 * hash + this.getMinimumNanos();
            }

            if (this.hasMaximumNanos()) {
               hash = 37 * hash + 6;
               hash = 53 * hash + this.getMaximumNanos();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static TimestampStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (TimestampStatistics)PARSER.parseFrom(data);
      }

      public static TimestampStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (TimestampStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static TimestampStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (TimestampStatistics)PARSER.parseFrom(data);
      }

      public static TimestampStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (TimestampStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static TimestampStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (TimestampStatistics)PARSER.parseFrom(data);
      }

      public static TimestampStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (TimestampStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static TimestampStatistics parseFrom(InputStream input) throws IOException {
         return (TimestampStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static TimestampStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (TimestampStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static TimestampStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (TimestampStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static TimestampStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (TimestampStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static TimestampStatistics parseFrom(CodedInputStream input) throws IOException {
         return (TimestampStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static TimestampStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (TimestampStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(TimestampStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static TimestampStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public TimestampStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements TimestampStatisticsOrBuilder {
         private int bitField0_;
         private long minimum_;
         private long maximum_;
         private long minimumUtc_;
         private long maximumUtc_;
         private int minimumNanos_;
         private int maximumNanos_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_TimestampStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_TimestampStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(TimestampStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.TimestampStatistics.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.minimum_ = 0L;
            this.bitField0_ &= -2;
            this.maximum_ = 0L;
            this.bitField0_ &= -3;
            this.minimumUtc_ = 0L;
            this.bitField0_ &= -5;
            this.maximumUtc_ = 0L;
            this.bitField0_ &= -9;
            this.minimumNanos_ = 0;
            this.bitField0_ &= -17;
            this.maximumNanos_ = 0;
            this.bitField0_ &= -33;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_TimestampStatistics_descriptor;
         }

         public TimestampStatistics getDefaultInstanceForType() {
            return OrcProto.TimestampStatistics.getDefaultInstance();
         }

         public TimestampStatistics build() {
            TimestampStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public TimestampStatistics buildPartial() {
            TimestampStatistics result = new TimestampStatistics(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.minimum_ = this.minimum_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               result.maximum_ = this.maximum_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               result.minimumUtc_ = this.minimumUtc_;
               to_bitField0_ |= 4;
            }

            if ((from_bitField0_ & 8) != 0) {
               result.maximumUtc_ = this.maximumUtc_;
               to_bitField0_ |= 8;
            }

            if ((from_bitField0_ & 16) != 0) {
               result.minimumNanos_ = this.minimumNanos_;
               to_bitField0_ |= 16;
            }

            if ((from_bitField0_ & 32) != 0) {
               result.maximumNanos_ = this.maximumNanos_;
               to_bitField0_ |= 32;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof TimestampStatistics) {
               return this.mergeFrom((TimestampStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(TimestampStatistics other) {
            if (other == OrcProto.TimestampStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasMinimum()) {
                  this.setMinimum(other.getMinimum());
               }

               if (other.hasMaximum()) {
                  this.setMaximum(other.getMaximum());
               }

               if (other.hasMinimumUtc()) {
                  this.setMinimumUtc(other.getMinimumUtc());
               }

               if (other.hasMaximumUtc()) {
                  this.setMaximumUtc(other.getMaximumUtc());
               }

               if (other.hasMinimumNanos()) {
                  this.setMinimumNanos(other.getMinimumNanos());
               }

               if (other.hasMaximumNanos()) {
                  this.setMaximumNanos(other.getMaximumNanos());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            TimestampStatistics parsedMessage = null;

            try {
               parsedMessage = (TimestampStatistics)OrcProto.TimestampStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (TimestampStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasMinimum() {
            return (this.bitField0_ & 1) != 0;
         }

         public long getMinimum() {
            return this.minimum_;
         }

         public Builder setMinimum(long value) {
            this.bitField0_ |= 1;
            this.minimum_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMinimum() {
            this.bitField0_ &= -2;
            this.minimum_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasMaximum() {
            return (this.bitField0_ & 2) != 0;
         }

         public long getMaximum() {
            return this.maximum_;
         }

         public Builder setMaximum(long value) {
            this.bitField0_ |= 2;
            this.maximum_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMaximum() {
            this.bitField0_ &= -3;
            this.maximum_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasMinimumUtc() {
            return (this.bitField0_ & 4) != 0;
         }

         public long getMinimumUtc() {
            return this.minimumUtc_;
         }

         public Builder setMinimumUtc(long value) {
            this.bitField0_ |= 4;
            this.minimumUtc_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMinimumUtc() {
            this.bitField0_ &= -5;
            this.minimumUtc_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasMaximumUtc() {
            return (this.bitField0_ & 8) != 0;
         }

         public long getMaximumUtc() {
            return this.maximumUtc_;
         }

         public Builder setMaximumUtc(long value) {
            this.bitField0_ |= 8;
            this.maximumUtc_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMaximumUtc() {
            this.bitField0_ &= -9;
            this.maximumUtc_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasMinimumNanos() {
            return (this.bitField0_ & 16) != 0;
         }

         public int getMinimumNanos() {
            return this.minimumNanos_;
         }

         public Builder setMinimumNanos(int value) {
            this.bitField0_ |= 16;
            this.minimumNanos_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMinimumNanos() {
            this.bitField0_ &= -17;
            this.minimumNanos_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasMaximumNanos() {
            return (this.bitField0_ & 32) != 0;
         }

         public int getMaximumNanos() {
            return this.maximumNanos_;
         }

         public Builder setMaximumNanos(int value) {
            this.bitField0_ |= 32;
            this.maximumNanos_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMaximumNanos() {
            this.bitField0_ &= -33;
            this.maximumNanos_ = 0;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class BinaryStatistics extends GeneratedMessageV3 implements BinaryStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int SUM_FIELD_NUMBER = 1;
      private long sum_;
      private byte memoizedIsInitialized;
      private static final BinaryStatistics DEFAULT_INSTANCE = new BinaryStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public BinaryStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new BinaryStatistics(input, extensionRegistry);
         }
      };

      private BinaryStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private BinaryStatistics() {
         this.memoizedIsInitialized = -1;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new BinaryStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private BinaryStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.sum_ = input.readSInt64();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_BinaryStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_BinaryStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(BinaryStatistics.class, Builder.class);
      }

      public boolean hasSum() {
         return (this.bitField0_ & 1) != 0;
      }

      public long getSum() {
         return this.sum_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeSInt64(1, this.sum_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeSInt64Size(1, this.sum_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof BinaryStatistics)) {
            return super.equals(obj);
         } else {
            BinaryStatistics other = (BinaryStatistics)obj;
            if (this.hasSum() != other.hasSum()) {
               return false;
            } else if (this.hasSum() && this.getSum() != other.getSum()) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasSum()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + Internal.hashLong(this.getSum());
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static BinaryStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (BinaryStatistics)PARSER.parseFrom(data);
      }

      public static BinaryStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BinaryStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BinaryStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (BinaryStatistics)PARSER.parseFrom(data);
      }

      public static BinaryStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BinaryStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BinaryStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (BinaryStatistics)PARSER.parseFrom(data);
      }

      public static BinaryStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BinaryStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BinaryStatistics parseFrom(InputStream input) throws IOException {
         return (BinaryStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static BinaryStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BinaryStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static BinaryStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (BinaryStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static BinaryStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BinaryStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static BinaryStatistics parseFrom(CodedInputStream input) throws IOException {
         return (BinaryStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static BinaryStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BinaryStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(BinaryStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static BinaryStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public BinaryStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements BinaryStatisticsOrBuilder {
         private int bitField0_;
         private long sum_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_BinaryStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_BinaryStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(BinaryStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.BinaryStatistics.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.sum_ = 0L;
            this.bitField0_ &= -2;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_BinaryStatistics_descriptor;
         }

         public BinaryStatistics getDefaultInstanceForType() {
            return OrcProto.BinaryStatistics.getDefaultInstance();
         }

         public BinaryStatistics build() {
            BinaryStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public BinaryStatistics buildPartial() {
            BinaryStatistics result = new BinaryStatistics(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.sum_ = this.sum_;
               to_bitField0_ |= 1;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof BinaryStatistics) {
               return this.mergeFrom((BinaryStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(BinaryStatistics other) {
            if (other == OrcProto.BinaryStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasSum()) {
                  this.setSum(other.getSum());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            BinaryStatistics parsedMessage = null;

            try {
               parsedMessage = (BinaryStatistics)OrcProto.BinaryStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (BinaryStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasSum() {
            return (this.bitField0_ & 1) != 0;
         }

         public long getSum() {
            return this.sum_;
         }

         public Builder setSum(long value) {
            this.bitField0_ |= 1;
            this.sum_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearSum() {
            this.bitField0_ &= -2;
            this.sum_ = 0L;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class CollectionStatistics extends GeneratedMessageV3 implements CollectionStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int MIN_CHILDREN_FIELD_NUMBER = 1;
      private long minChildren_;
      public static final int MAX_CHILDREN_FIELD_NUMBER = 2;
      private long maxChildren_;
      public static final int TOTAL_CHILDREN_FIELD_NUMBER = 3;
      private long totalChildren_;
      private byte memoizedIsInitialized;
      private static final CollectionStatistics DEFAULT_INSTANCE = new CollectionStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public CollectionStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new CollectionStatistics(input, extensionRegistry);
         }
      };

      private CollectionStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private CollectionStatistics() {
         this.memoizedIsInitialized = -1;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new CollectionStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private CollectionStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.minChildren_ = input.readUInt64();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.maxChildren_ = input.readUInt64();
                        break;
                     case 24:
                        this.bitField0_ |= 4;
                        this.totalChildren_ = input.readUInt64();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_CollectionStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_CollectionStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(CollectionStatistics.class, Builder.class);
      }

      public boolean hasMinChildren() {
         return (this.bitField0_ & 1) != 0;
      }

      public long getMinChildren() {
         return this.minChildren_;
      }

      public boolean hasMaxChildren() {
         return (this.bitField0_ & 2) != 0;
      }

      public long getMaxChildren() {
         return this.maxChildren_;
      }

      public boolean hasTotalChildren() {
         return (this.bitField0_ & 4) != 0;
      }

      public long getTotalChildren() {
         return this.totalChildren_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeUInt64(1, this.minChildren_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeUInt64(2, this.maxChildren_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeUInt64(3, this.totalChildren_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeUInt64Size(1, this.minChildren_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeUInt64Size(2, this.maxChildren_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeUInt64Size(3, this.totalChildren_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof CollectionStatistics)) {
            return super.equals(obj);
         } else {
            CollectionStatistics other = (CollectionStatistics)obj;
            if (this.hasMinChildren() != other.hasMinChildren()) {
               return false;
            } else if (this.hasMinChildren() && this.getMinChildren() != other.getMinChildren()) {
               return false;
            } else if (this.hasMaxChildren() != other.hasMaxChildren()) {
               return false;
            } else if (this.hasMaxChildren() && this.getMaxChildren() != other.getMaxChildren()) {
               return false;
            } else if (this.hasTotalChildren() != other.hasTotalChildren()) {
               return false;
            } else if (this.hasTotalChildren() && this.getTotalChildren() != other.getTotalChildren()) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasMinChildren()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + Internal.hashLong(this.getMinChildren());
            }

            if (this.hasMaxChildren()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + Internal.hashLong(this.getMaxChildren());
            }

            if (this.hasTotalChildren()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashLong(this.getTotalChildren());
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static CollectionStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (CollectionStatistics)PARSER.parseFrom(data);
      }

      public static CollectionStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (CollectionStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static CollectionStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (CollectionStatistics)PARSER.parseFrom(data);
      }

      public static CollectionStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (CollectionStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static CollectionStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (CollectionStatistics)PARSER.parseFrom(data);
      }

      public static CollectionStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (CollectionStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static CollectionStatistics parseFrom(InputStream input) throws IOException {
         return (CollectionStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static CollectionStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (CollectionStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static CollectionStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (CollectionStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static CollectionStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (CollectionStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static CollectionStatistics parseFrom(CodedInputStream input) throws IOException {
         return (CollectionStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static CollectionStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (CollectionStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(CollectionStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static CollectionStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public CollectionStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements CollectionStatisticsOrBuilder {
         private int bitField0_;
         private long minChildren_;
         private long maxChildren_;
         private long totalChildren_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_CollectionStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_CollectionStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(CollectionStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.CollectionStatistics.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.minChildren_ = 0L;
            this.bitField0_ &= -2;
            this.maxChildren_ = 0L;
            this.bitField0_ &= -3;
            this.totalChildren_ = 0L;
            this.bitField0_ &= -5;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_CollectionStatistics_descriptor;
         }

         public CollectionStatistics getDefaultInstanceForType() {
            return OrcProto.CollectionStatistics.getDefaultInstance();
         }

         public CollectionStatistics build() {
            CollectionStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public CollectionStatistics buildPartial() {
            CollectionStatistics result = new CollectionStatistics(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.minChildren_ = this.minChildren_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               result.maxChildren_ = this.maxChildren_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               result.totalChildren_ = this.totalChildren_;
               to_bitField0_ |= 4;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof CollectionStatistics) {
               return this.mergeFrom((CollectionStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(CollectionStatistics other) {
            if (other == OrcProto.CollectionStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasMinChildren()) {
                  this.setMinChildren(other.getMinChildren());
               }

               if (other.hasMaxChildren()) {
                  this.setMaxChildren(other.getMaxChildren());
               }

               if (other.hasTotalChildren()) {
                  this.setTotalChildren(other.getTotalChildren());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            CollectionStatistics parsedMessage = null;

            try {
               parsedMessage = (CollectionStatistics)OrcProto.CollectionStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (CollectionStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasMinChildren() {
            return (this.bitField0_ & 1) != 0;
         }

         public long getMinChildren() {
            return this.minChildren_;
         }

         public Builder setMinChildren(long value) {
            this.bitField0_ |= 1;
            this.minChildren_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMinChildren() {
            this.bitField0_ &= -2;
            this.minChildren_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasMaxChildren() {
            return (this.bitField0_ & 2) != 0;
         }

         public long getMaxChildren() {
            return this.maxChildren_;
         }

         public Builder setMaxChildren(long value) {
            this.bitField0_ |= 2;
            this.maxChildren_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMaxChildren() {
            this.bitField0_ &= -3;
            this.maxChildren_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasTotalChildren() {
            return (this.bitField0_ & 4) != 0;
         }

         public long getTotalChildren() {
            return this.totalChildren_;
         }

         public Builder setTotalChildren(long value) {
            this.bitField0_ |= 4;
            this.totalChildren_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearTotalChildren() {
            this.bitField0_ &= -5;
            this.totalChildren_ = 0L;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class BoundingBox extends GeneratedMessageV3 implements BoundingBoxOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int XMIN_FIELD_NUMBER = 1;
      private double xmin_;
      public static final int XMAX_FIELD_NUMBER = 2;
      private double xmax_;
      public static final int YMIN_FIELD_NUMBER = 3;
      private double ymin_;
      public static final int YMAX_FIELD_NUMBER = 4;
      private double ymax_;
      public static final int ZMIN_FIELD_NUMBER = 5;
      private double zmin_;
      public static final int ZMAX_FIELD_NUMBER = 6;
      private double zmax_;
      public static final int MMIN_FIELD_NUMBER = 7;
      private double mmin_;
      public static final int MMAX_FIELD_NUMBER = 8;
      private double mmax_;
      private byte memoizedIsInitialized;
      private static final BoundingBox DEFAULT_INSTANCE = new BoundingBox();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public BoundingBox parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new BoundingBox(input, extensionRegistry);
         }
      };

      private BoundingBox(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private BoundingBox() {
         this.memoizedIsInitialized = -1;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new BoundingBox();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private BoundingBox(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 9:
                        this.bitField0_ |= 1;
                        this.xmin_ = input.readDouble();
                        break;
                     case 17:
                        this.bitField0_ |= 2;
                        this.xmax_ = input.readDouble();
                        break;
                     case 25:
                        this.bitField0_ |= 4;
                        this.ymin_ = input.readDouble();
                        break;
                     case 33:
                        this.bitField0_ |= 8;
                        this.ymax_ = input.readDouble();
                        break;
                     case 41:
                        this.bitField0_ |= 16;
                        this.zmin_ = input.readDouble();
                        break;
                     case 49:
                        this.bitField0_ |= 32;
                        this.zmax_ = input.readDouble();
                        break;
                     case 57:
                        this.bitField0_ |= 64;
                        this.mmin_ = input.readDouble();
                        break;
                     case 65:
                        this.bitField0_ |= 128;
                        this.mmax_ = input.readDouble();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_BoundingBox_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_BoundingBox_fieldAccessorTable.ensureFieldAccessorsInitialized(BoundingBox.class, Builder.class);
      }

      public boolean hasXmin() {
         return (this.bitField0_ & 1) != 0;
      }

      public double getXmin() {
         return this.xmin_;
      }

      public boolean hasXmax() {
         return (this.bitField0_ & 2) != 0;
      }

      public double getXmax() {
         return this.xmax_;
      }

      public boolean hasYmin() {
         return (this.bitField0_ & 4) != 0;
      }

      public double getYmin() {
         return this.ymin_;
      }

      public boolean hasYmax() {
         return (this.bitField0_ & 8) != 0;
      }

      public double getYmax() {
         return this.ymax_;
      }

      public boolean hasZmin() {
         return (this.bitField0_ & 16) != 0;
      }

      public double getZmin() {
         return this.zmin_;
      }

      public boolean hasZmax() {
         return (this.bitField0_ & 32) != 0;
      }

      public double getZmax() {
         return this.zmax_;
      }

      public boolean hasMmin() {
         return (this.bitField0_ & 64) != 0;
      }

      public double getMmin() {
         return this.mmin_;
      }

      public boolean hasMmax() {
         return (this.bitField0_ & 128) != 0;
      }

      public double getMmax() {
         return this.mmax_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeDouble(1, this.xmin_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeDouble(2, this.xmax_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeDouble(3, this.ymin_);
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeDouble(4, this.ymax_);
         }

         if ((this.bitField0_ & 16) != 0) {
            output.writeDouble(5, this.zmin_);
         }

         if ((this.bitField0_ & 32) != 0) {
            output.writeDouble(6, this.zmax_);
         }

         if ((this.bitField0_ & 64) != 0) {
            output.writeDouble(7, this.mmin_);
         }

         if ((this.bitField0_ & 128) != 0) {
            output.writeDouble(8, this.mmax_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeDoubleSize(1, this.xmin_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeDoubleSize(2, this.xmax_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeDoubleSize(3, this.ymin_);
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeDoubleSize(4, this.ymax_);
            }

            if ((this.bitField0_ & 16) != 0) {
               size += CodedOutputStream.computeDoubleSize(5, this.zmin_);
            }

            if ((this.bitField0_ & 32) != 0) {
               size += CodedOutputStream.computeDoubleSize(6, this.zmax_);
            }

            if ((this.bitField0_ & 64) != 0) {
               size += CodedOutputStream.computeDoubleSize(7, this.mmin_);
            }

            if ((this.bitField0_ & 128) != 0) {
               size += CodedOutputStream.computeDoubleSize(8, this.mmax_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof BoundingBox)) {
            return super.equals(obj);
         } else {
            BoundingBox other = (BoundingBox)obj;
            if (this.hasXmin() != other.hasXmin()) {
               return false;
            } else if (this.hasXmin() && Double.doubleToLongBits(this.getXmin()) != Double.doubleToLongBits(other.getXmin())) {
               return false;
            } else if (this.hasXmax() != other.hasXmax()) {
               return false;
            } else if (this.hasXmax() && Double.doubleToLongBits(this.getXmax()) != Double.doubleToLongBits(other.getXmax())) {
               return false;
            } else if (this.hasYmin() != other.hasYmin()) {
               return false;
            } else if (this.hasYmin() && Double.doubleToLongBits(this.getYmin()) != Double.doubleToLongBits(other.getYmin())) {
               return false;
            } else if (this.hasYmax() != other.hasYmax()) {
               return false;
            } else if (this.hasYmax() && Double.doubleToLongBits(this.getYmax()) != Double.doubleToLongBits(other.getYmax())) {
               return false;
            } else if (this.hasZmin() != other.hasZmin()) {
               return false;
            } else if (this.hasZmin() && Double.doubleToLongBits(this.getZmin()) != Double.doubleToLongBits(other.getZmin())) {
               return false;
            } else if (this.hasZmax() != other.hasZmax()) {
               return false;
            } else if (this.hasZmax() && Double.doubleToLongBits(this.getZmax()) != Double.doubleToLongBits(other.getZmax())) {
               return false;
            } else if (this.hasMmin() != other.hasMmin()) {
               return false;
            } else if (this.hasMmin() && Double.doubleToLongBits(this.getMmin()) != Double.doubleToLongBits(other.getMmin())) {
               return false;
            } else if (this.hasMmax() != other.hasMmax()) {
               return false;
            } else if (this.hasMmax() && Double.doubleToLongBits(this.getMmax()) != Double.doubleToLongBits(other.getMmax())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasXmin()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + Internal.hashLong(Double.doubleToLongBits(this.getXmin()));
            }

            if (this.hasXmax()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + Internal.hashLong(Double.doubleToLongBits(this.getXmax()));
            }

            if (this.hasYmin()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashLong(Double.doubleToLongBits(this.getYmin()));
            }

            if (this.hasYmax()) {
               hash = 37 * hash + 4;
               hash = 53 * hash + Internal.hashLong(Double.doubleToLongBits(this.getYmax()));
            }

            if (this.hasZmin()) {
               hash = 37 * hash + 5;
               hash = 53 * hash + Internal.hashLong(Double.doubleToLongBits(this.getZmin()));
            }

            if (this.hasZmax()) {
               hash = 37 * hash + 6;
               hash = 53 * hash + Internal.hashLong(Double.doubleToLongBits(this.getZmax()));
            }

            if (this.hasMmin()) {
               hash = 37 * hash + 7;
               hash = 53 * hash + Internal.hashLong(Double.doubleToLongBits(this.getMmin()));
            }

            if (this.hasMmax()) {
               hash = 37 * hash + 8;
               hash = 53 * hash + Internal.hashLong(Double.doubleToLongBits(this.getMmax()));
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static BoundingBox parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (BoundingBox)PARSER.parseFrom(data);
      }

      public static BoundingBox parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BoundingBox)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BoundingBox parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (BoundingBox)PARSER.parseFrom(data);
      }

      public static BoundingBox parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BoundingBox)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BoundingBox parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (BoundingBox)PARSER.parseFrom(data);
      }

      public static BoundingBox parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BoundingBox)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BoundingBox parseFrom(InputStream input) throws IOException {
         return (BoundingBox)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static BoundingBox parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BoundingBox)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static BoundingBox parseDelimitedFrom(InputStream input) throws IOException {
         return (BoundingBox)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static BoundingBox parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BoundingBox)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static BoundingBox parseFrom(CodedInputStream input) throws IOException {
         return (BoundingBox)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static BoundingBox parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BoundingBox)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(BoundingBox prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static BoundingBox getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public BoundingBox getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements BoundingBoxOrBuilder {
         private int bitField0_;
         private double xmin_;
         private double xmax_;
         private double ymin_;
         private double ymax_;
         private double zmin_;
         private double zmax_;
         private double mmin_;
         private double mmax_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_BoundingBox_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_BoundingBox_fieldAccessorTable.ensureFieldAccessorsInitialized(BoundingBox.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.BoundingBox.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.xmin_ = (double)0.0F;
            this.bitField0_ &= -2;
            this.xmax_ = (double)0.0F;
            this.bitField0_ &= -3;
            this.ymin_ = (double)0.0F;
            this.bitField0_ &= -5;
            this.ymax_ = (double)0.0F;
            this.bitField0_ &= -9;
            this.zmin_ = (double)0.0F;
            this.bitField0_ &= -17;
            this.zmax_ = (double)0.0F;
            this.bitField0_ &= -33;
            this.mmin_ = (double)0.0F;
            this.bitField0_ &= -65;
            this.mmax_ = (double)0.0F;
            this.bitField0_ &= -129;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_BoundingBox_descriptor;
         }

         public BoundingBox getDefaultInstanceForType() {
            return OrcProto.BoundingBox.getDefaultInstance();
         }

         public BoundingBox build() {
            BoundingBox result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public BoundingBox buildPartial() {
            BoundingBox result = new BoundingBox(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.xmin_ = this.xmin_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               result.xmax_ = this.xmax_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               result.ymin_ = this.ymin_;
               to_bitField0_ |= 4;
            }

            if ((from_bitField0_ & 8) != 0) {
               result.ymax_ = this.ymax_;
               to_bitField0_ |= 8;
            }

            if ((from_bitField0_ & 16) != 0) {
               result.zmin_ = this.zmin_;
               to_bitField0_ |= 16;
            }

            if ((from_bitField0_ & 32) != 0) {
               result.zmax_ = this.zmax_;
               to_bitField0_ |= 32;
            }

            if ((from_bitField0_ & 64) != 0) {
               result.mmin_ = this.mmin_;
               to_bitField0_ |= 64;
            }

            if ((from_bitField0_ & 128) != 0) {
               result.mmax_ = this.mmax_;
               to_bitField0_ |= 128;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof BoundingBox) {
               return this.mergeFrom((BoundingBox)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(BoundingBox other) {
            if (other == OrcProto.BoundingBox.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasXmin()) {
                  this.setXmin(other.getXmin());
               }

               if (other.hasXmax()) {
                  this.setXmax(other.getXmax());
               }

               if (other.hasYmin()) {
                  this.setYmin(other.getYmin());
               }

               if (other.hasYmax()) {
                  this.setYmax(other.getYmax());
               }

               if (other.hasZmin()) {
                  this.setZmin(other.getZmin());
               }

               if (other.hasZmax()) {
                  this.setZmax(other.getZmax());
               }

               if (other.hasMmin()) {
                  this.setMmin(other.getMmin());
               }

               if (other.hasMmax()) {
                  this.setMmax(other.getMmax());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            BoundingBox parsedMessage = null;

            try {
               parsedMessage = (BoundingBox)OrcProto.BoundingBox.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (BoundingBox)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasXmin() {
            return (this.bitField0_ & 1) != 0;
         }

         public double getXmin() {
            return this.xmin_;
         }

         public Builder setXmin(double value) {
            this.bitField0_ |= 1;
            this.xmin_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearXmin() {
            this.bitField0_ &= -2;
            this.xmin_ = (double)0.0F;
            this.onChanged();
            return this;
         }

         public boolean hasXmax() {
            return (this.bitField0_ & 2) != 0;
         }

         public double getXmax() {
            return this.xmax_;
         }

         public Builder setXmax(double value) {
            this.bitField0_ |= 2;
            this.xmax_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearXmax() {
            this.bitField0_ &= -3;
            this.xmax_ = (double)0.0F;
            this.onChanged();
            return this;
         }

         public boolean hasYmin() {
            return (this.bitField0_ & 4) != 0;
         }

         public double getYmin() {
            return this.ymin_;
         }

         public Builder setYmin(double value) {
            this.bitField0_ |= 4;
            this.ymin_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearYmin() {
            this.bitField0_ &= -5;
            this.ymin_ = (double)0.0F;
            this.onChanged();
            return this;
         }

         public boolean hasYmax() {
            return (this.bitField0_ & 8) != 0;
         }

         public double getYmax() {
            return this.ymax_;
         }

         public Builder setYmax(double value) {
            this.bitField0_ |= 8;
            this.ymax_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearYmax() {
            this.bitField0_ &= -9;
            this.ymax_ = (double)0.0F;
            this.onChanged();
            return this;
         }

         public boolean hasZmin() {
            return (this.bitField0_ & 16) != 0;
         }

         public double getZmin() {
            return this.zmin_;
         }

         public Builder setZmin(double value) {
            this.bitField0_ |= 16;
            this.zmin_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearZmin() {
            this.bitField0_ &= -17;
            this.zmin_ = (double)0.0F;
            this.onChanged();
            return this;
         }

         public boolean hasZmax() {
            return (this.bitField0_ & 32) != 0;
         }

         public double getZmax() {
            return this.zmax_;
         }

         public Builder setZmax(double value) {
            this.bitField0_ |= 32;
            this.zmax_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearZmax() {
            this.bitField0_ &= -33;
            this.zmax_ = (double)0.0F;
            this.onChanged();
            return this;
         }

         public boolean hasMmin() {
            return (this.bitField0_ & 64) != 0;
         }

         public double getMmin() {
            return this.mmin_;
         }

         public Builder setMmin(double value) {
            this.bitField0_ |= 64;
            this.mmin_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMmin() {
            this.bitField0_ &= -65;
            this.mmin_ = (double)0.0F;
            this.onChanged();
            return this;
         }

         public boolean hasMmax() {
            return (this.bitField0_ & 128) != 0;
         }

         public double getMmax() {
            return this.mmax_;
         }

         public Builder setMmax(double value) {
            this.bitField0_ |= 128;
            this.mmax_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMmax() {
            this.bitField0_ &= -129;
            this.mmax_ = (double)0.0F;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class GeospatialStatistics extends GeneratedMessageV3 implements GeospatialStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int BBOX_FIELD_NUMBER = 1;
      private BoundingBox bbox_;
      public static final int GEOSPATIAL_TYPES_FIELD_NUMBER = 2;
      private Internal.IntList geospatialTypes_;
      private byte memoizedIsInitialized;
      private static final GeospatialStatistics DEFAULT_INSTANCE = new GeospatialStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public GeospatialStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new GeospatialStatistics(input, extensionRegistry);
         }
      };

      private GeospatialStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private GeospatialStatistics() {
         this.memoizedIsInitialized = -1;
         this.geospatialTypes_ = emptyIntList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new GeospatialStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private GeospatialStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        BoundingBox.Builder subBuilder = null;
                        if ((this.bitField0_ & 1) != 0) {
                           subBuilder = this.bbox_.toBuilder();
                        }

                        this.bbox_ = (BoundingBox)input.readMessage(OrcProto.BoundingBox.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.bbox_);
                           this.bbox_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 1;
                        break;
                     case 16:
                        if ((mutable_bitField0_ & 2) == 0) {
                           this.geospatialTypes_ = newIntList();
                           mutable_bitField0_ |= 2;
                        }

                        this.geospatialTypes_.addInt(input.readInt32());
                        break;
                     case 18:
                        int length = input.readRawVarint32();
                        int limit = input.pushLimit(length);
                        if ((mutable_bitField0_ & 2) == 0 && input.getBytesUntilLimit() > 0) {
                           this.geospatialTypes_ = newIntList();
                           mutable_bitField0_ |= 2;
                        }

                        while(input.getBytesUntilLimit() > 0) {
                           this.geospatialTypes_.addInt(input.readInt32());
                        }

                        input.popLimit(limit);
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 2) != 0) {
                  this.geospatialTypes_.makeImmutable();
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_GeospatialStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_GeospatialStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(GeospatialStatistics.class, Builder.class);
      }

      public boolean hasBbox() {
         return (this.bitField0_ & 1) != 0;
      }

      public BoundingBox getBbox() {
         return this.bbox_ == null ? OrcProto.BoundingBox.getDefaultInstance() : this.bbox_;
      }

      public BoundingBoxOrBuilder getBboxOrBuilder() {
         return this.bbox_ == null ? OrcProto.BoundingBox.getDefaultInstance() : this.bbox_;
      }

      public List getGeospatialTypesList() {
         return this.geospatialTypes_;
      }

      public int getGeospatialTypesCount() {
         return this.geospatialTypes_.size();
      }

      public int getGeospatialTypes(int index) {
         return this.geospatialTypes_.getInt(index);
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeMessage(1, this.getBbox());
         }

         for(int i = 0; i < this.geospatialTypes_.size(); ++i) {
            output.writeInt32(2, this.geospatialTypes_.getInt(i));
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeMessageSize(1, this.getBbox());
            }

            int dataSize = 0;

            for(int i = 0; i < this.geospatialTypes_.size(); ++i) {
               dataSize += CodedOutputStream.computeInt32SizeNoTag(this.geospatialTypes_.getInt(i));
            }

            size += dataSize;
            size += 1 * this.getGeospatialTypesList().size();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof GeospatialStatistics)) {
            return super.equals(obj);
         } else {
            GeospatialStatistics other = (GeospatialStatistics)obj;
            if (this.hasBbox() != other.hasBbox()) {
               return false;
            } else if (this.hasBbox() && !this.getBbox().equals(other.getBbox())) {
               return false;
            } else if (!this.getGeospatialTypesList().equals(other.getGeospatialTypesList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasBbox()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getBbox().hashCode();
            }

            if (this.getGeospatialTypesCount() > 0) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getGeospatialTypesList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static GeospatialStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (GeospatialStatistics)PARSER.parseFrom(data);
      }

      public static GeospatialStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (GeospatialStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static GeospatialStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (GeospatialStatistics)PARSER.parseFrom(data);
      }

      public static GeospatialStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (GeospatialStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static GeospatialStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (GeospatialStatistics)PARSER.parseFrom(data);
      }

      public static GeospatialStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (GeospatialStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static GeospatialStatistics parseFrom(InputStream input) throws IOException {
         return (GeospatialStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static GeospatialStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (GeospatialStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static GeospatialStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (GeospatialStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static GeospatialStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (GeospatialStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static GeospatialStatistics parseFrom(CodedInputStream input) throws IOException {
         return (GeospatialStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static GeospatialStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (GeospatialStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(GeospatialStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static GeospatialStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public GeospatialStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements GeospatialStatisticsOrBuilder {
         private int bitField0_;
         private BoundingBox bbox_;
         private SingleFieldBuilderV3 bboxBuilder_;
         private Internal.IntList geospatialTypes_ = OrcProto.GeospatialStatistics.emptyIntList();

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_GeospatialStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_GeospatialStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(GeospatialStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.GeospatialStatistics.alwaysUseFieldBuilders) {
               this.getBboxFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            if (this.bboxBuilder_ == null) {
               this.bbox_ = null;
            } else {
               this.bboxBuilder_.clear();
            }

            this.bitField0_ &= -2;
            this.geospatialTypes_ = OrcProto.GeospatialStatistics.emptyIntList();
            this.bitField0_ &= -3;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_GeospatialStatistics_descriptor;
         }

         public GeospatialStatistics getDefaultInstanceForType() {
            return OrcProto.GeospatialStatistics.getDefaultInstance();
         }

         public GeospatialStatistics build() {
            GeospatialStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public GeospatialStatistics buildPartial() {
            GeospatialStatistics result = new GeospatialStatistics(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               if (this.bboxBuilder_ == null) {
                  result.bbox_ = this.bbox_;
               } else {
                  result.bbox_ = (BoundingBox)this.bboxBuilder_.build();
               }

               to_bitField0_ |= 1;
            }

            if ((this.bitField0_ & 2) != 0) {
               this.geospatialTypes_.makeImmutable();
               this.bitField0_ &= -3;
            }

            result.geospatialTypes_ = this.geospatialTypes_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof GeospatialStatistics) {
               return this.mergeFrom((GeospatialStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(GeospatialStatistics other) {
            if (other == OrcProto.GeospatialStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasBbox()) {
                  this.mergeBbox(other.getBbox());
               }

               if (!other.geospatialTypes_.isEmpty()) {
                  if (this.geospatialTypes_.isEmpty()) {
                     this.geospatialTypes_ = other.geospatialTypes_;
                     this.bitField0_ &= -3;
                  } else {
                     this.ensureGeospatialTypesIsMutable();
                     this.geospatialTypes_.addAll(other.geospatialTypes_);
                  }

                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            GeospatialStatistics parsedMessage = null;

            try {
               parsedMessage = (GeospatialStatistics)OrcProto.GeospatialStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (GeospatialStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasBbox() {
            return (this.bitField0_ & 1) != 0;
         }

         public BoundingBox getBbox() {
            if (this.bboxBuilder_ == null) {
               return this.bbox_ == null ? OrcProto.BoundingBox.getDefaultInstance() : this.bbox_;
            } else {
               return (BoundingBox)this.bboxBuilder_.getMessage();
            }
         }

         public Builder setBbox(BoundingBox value) {
            if (this.bboxBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.bbox_ = value;
               this.onChanged();
            } else {
               this.bboxBuilder_.setMessage(value);
            }

            this.bitField0_ |= 1;
            return this;
         }

         public Builder setBbox(BoundingBox.Builder builderForValue) {
            if (this.bboxBuilder_ == null) {
               this.bbox_ = builderForValue.build();
               this.onChanged();
            } else {
               this.bboxBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 1;
            return this;
         }

         public Builder mergeBbox(BoundingBox value) {
            if (this.bboxBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0 && this.bbox_ != null && this.bbox_ != OrcProto.BoundingBox.getDefaultInstance()) {
                  this.bbox_ = OrcProto.BoundingBox.newBuilder(this.bbox_).mergeFrom(value).buildPartial();
               } else {
                  this.bbox_ = value;
               }

               this.onChanged();
            } else {
               this.bboxBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 1;
            return this;
         }

         public Builder clearBbox() {
            if (this.bboxBuilder_ == null) {
               this.bbox_ = null;
               this.onChanged();
            } else {
               this.bboxBuilder_.clear();
            }

            this.bitField0_ &= -2;
            return this;
         }

         public BoundingBox.Builder getBboxBuilder() {
            this.bitField0_ |= 1;
            this.onChanged();
            return (BoundingBox.Builder)this.getBboxFieldBuilder().getBuilder();
         }

         public BoundingBoxOrBuilder getBboxOrBuilder() {
            if (this.bboxBuilder_ != null) {
               return (BoundingBoxOrBuilder)this.bboxBuilder_.getMessageOrBuilder();
            } else {
               return this.bbox_ == null ? OrcProto.BoundingBox.getDefaultInstance() : this.bbox_;
            }
         }

         private SingleFieldBuilderV3 getBboxFieldBuilder() {
            if (this.bboxBuilder_ == null) {
               this.bboxBuilder_ = new SingleFieldBuilderV3(this.getBbox(), this.getParentForChildren(), this.isClean());
               this.bbox_ = null;
            }

            return this.bboxBuilder_;
         }

         private void ensureGeospatialTypesIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.geospatialTypes_ = OrcProto.GeospatialStatistics.mutableCopy(this.geospatialTypes_);
               this.bitField0_ |= 2;
            }

         }

         public List getGeospatialTypesList() {
            return (List)((this.bitField0_ & 2) != 0 ? Collections.unmodifiableList(this.geospatialTypes_) : this.geospatialTypes_);
         }

         public int getGeospatialTypesCount() {
            return this.geospatialTypes_.size();
         }

         public int getGeospatialTypes(int index) {
            return this.geospatialTypes_.getInt(index);
         }

         public Builder setGeospatialTypes(int index, int value) {
            this.ensureGeospatialTypesIsMutable();
            this.geospatialTypes_.setInt(index, value);
            this.onChanged();
            return this;
         }

         public Builder addGeospatialTypes(int value) {
            this.ensureGeospatialTypesIsMutable();
            this.geospatialTypes_.addInt(value);
            this.onChanged();
            return this;
         }

         public Builder addAllGeospatialTypes(Iterable values) {
            this.ensureGeospatialTypesIsMutable();
            AbstractMessageLite.Builder.addAll(values, (List)this.geospatialTypes_);
            this.onChanged();
            return this;
         }

         public Builder clearGeospatialTypes() {
            this.geospatialTypes_ = OrcProto.GeospatialStatistics.emptyIntList();
            this.bitField0_ &= -3;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class ColumnStatistics extends GeneratedMessageV3 implements ColumnStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NUMBER_OF_VALUES_FIELD_NUMBER = 1;
      private long numberOfValues_;
      public static final int INT_STATISTICS_FIELD_NUMBER = 2;
      private IntegerStatistics intStatistics_;
      public static final int DOUBLE_STATISTICS_FIELD_NUMBER = 3;
      private DoubleStatistics doubleStatistics_;
      public static final int STRING_STATISTICS_FIELD_NUMBER = 4;
      private StringStatistics stringStatistics_;
      public static final int BUCKET_STATISTICS_FIELD_NUMBER = 5;
      private BucketStatistics bucketStatistics_;
      public static final int DECIMAL_STATISTICS_FIELD_NUMBER = 6;
      private DecimalStatistics decimalStatistics_;
      public static final int DATE_STATISTICS_FIELD_NUMBER = 7;
      private DateStatistics dateStatistics_;
      public static final int BINARY_STATISTICS_FIELD_NUMBER = 8;
      private BinaryStatistics binaryStatistics_;
      public static final int TIMESTAMP_STATISTICS_FIELD_NUMBER = 9;
      private TimestampStatistics timestampStatistics_;
      public static final int HAS_NULL_FIELD_NUMBER = 10;
      private boolean hasNull_;
      public static final int BYTES_ON_DISK_FIELD_NUMBER = 11;
      private long bytesOnDisk_;
      public static final int COLLECTION_STATISTICS_FIELD_NUMBER = 12;
      private CollectionStatistics collectionStatistics_;
      public static final int GEOSPATIAL_STATISTICS_FIELD_NUMBER = 13;
      private GeospatialStatistics geospatialStatistics_;
      private byte memoizedIsInitialized;
      private static final ColumnStatistics DEFAULT_INSTANCE = new ColumnStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public ColumnStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new ColumnStatistics(input, extensionRegistry);
         }
      };

      private ColumnStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private ColumnStatistics() {
         this.memoizedIsInitialized = -1;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new ColumnStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private ColumnStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.numberOfValues_ = input.readUInt64();
                        break;
                     case 18:
                        IntegerStatistics.Builder subBuilder = null;
                        if ((this.bitField0_ & 2) != 0) {
                           subBuilder = this.intStatistics_.toBuilder();
                        }

                        this.intStatistics_ = (IntegerStatistics)input.readMessage(OrcProto.IntegerStatistics.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.intStatistics_);
                           this.intStatistics_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 2;
                        break;
                     case 26:
                        DoubleStatistics.Builder subBuilder = null;
                        if ((this.bitField0_ & 4) != 0) {
                           subBuilder = this.doubleStatistics_.toBuilder();
                        }

                        this.doubleStatistics_ = (DoubleStatistics)input.readMessage(OrcProto.DoubleStatistics.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.doubleStatistics_);
                           this.doubleStatistics_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 4;
                        break;
                     case 34:
                        StringStatistics.Builder subBuilder = null;
                        if ((this.bitField0_ & 8) != 0) {
                           subBuilder = this.stringStatistics_.toBuilder();
                        }

                        this.stringStatistics_ = (StringStatistics)input.readMessage(OrcProto.StringStatistics.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.stringStatistics_);
                           this.stringStatistics_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 8;
                        break;
                     case 42:
                        BucketStatistics.Builder subBuilder = null;
                        if ((this.bitField0_ & 16) != 0) {
                           subBuilder = this.bucketStatistics_.toBuilder();
                        }

                        this.bucketStatistics_ = (BucketStatistics)input.readMessage(OrcProto.BucketStatistics.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.bucketStatistics_);
                           this.bucketStatistics_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 16;
                        break;
                     case 50:
                        DecimalStatistics.Builder subBuilder = null;
                        if ((this.bitField0_ & 32) != 0) {
                           subBuilder = this.decimalStatistics_.toBuilder();
                        }

                        this.decimalStatistics_ = (DecimalStatistics)input.readMessage(OrcProto.DecimalStatistics.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.decimalStatistics_);
                           this.decimalStatistics_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 32;
                        break;
                     case 58:
                        DateStatistics.Builder subBuilder = null;
                        if ((this.bitField0_ & 64) != 0) {
                           subBuilder = this.dateStatistics_.toBuilder();
                        }

                        this.dateStatistics_ = (DateStatistics)input.readMessage(OrcProto.DateStatistics.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.dateStatistics_);
                           this.dateStatistics_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 64;
                        break;
                     case 66:
                        BinaryStatistics.Builder subBuilder = null;
                        if ((this.bitField0_ & 128) != 0) {
                           subBuilder = this.binaryStatistics_.toBuilder();
                        }

                        this.binaryStatistics_ = (BinaryStatistics)input.readMessage(OrcProto.BinaryStatistics.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.binaryStatistics_);
                           this.binaryStatistics_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 128;
                        break;
                     case 74:
                        TimestampStatistics.Builder subBuilder = null;
                        if ((this.bitField0_ & 256) != 0) {
                           subBuilder = this.timestampStatistics_.toBuilder();
                        }

                        this.timestampStatistics_ = (TimestampStatistics)input.readMessage(OrcProto.TimestampStatistics.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.timestampStatistics_);
                           this.timestampStatistics_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 256;
                        break;
                     case 80:
                        this.bitField0_ |= 512;
                        this.hasNull_ = input.readBool();
                        break;
                     case 88:
                        this.bitField0_ |= 1024;
                        this.bytesOnDisk_ = input.readUInt64();
                        break;
                     case 98:
                        CollectionStatistics.Builder subBuilder = null;
                        if ((this.bitField0_ & 2048) != 0) {
                           subBuilder = this.collectionStatistics_.toBuilder();
                        }

                        this.collectionStatistics_ = (CollectionStatistics)input.readMessage(OrcProto.CollectionStatistics.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.collectionStatistics_);
                           this.collectionStatistics_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 2048;
                        break;
                     case 106:
                        GeospatialStatistics.Builder subBuilder = null;
                        if ((this.bitField0_ & 4096) != 0) {
                           subBuilder = this.geospatialStatistics_.toBuilder();
                        }

                        this.geospatialStatistics_ = (GeospatialStatistics)input.readMessage(OrcProto.GeospatialStatistics.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.geospatialStatistics_);
                           this.geospatialStatistics_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 4096;
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_ColumnStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_ColumnStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(ColumnStatistics.class, Builder.class);
      }

      public boolean hasNumberOfValues() {
         return (this.bitField0_ & 1) != 0;
      }

      public long getNumberOfValues() {
         return this.numberOfValues_;
      }

      public boolean hasIntStatistics() {
         return (this.bitField0_ & 2) != 0;
      }

      public IntegerStatistics getIntStatistics() {
         return this.intStatistics_ == null ? OrcProto.IntegerStatistics.getDefaultInstance() : this.intStatistics_;
      }

      public IntegerStatisticsOrBuilder getIntStatisticsOrBuilder() {
         return this.intStatistics_ == null ? OrcProto.IntegerStatistics.getDefaultInstance() : this.intStatistics_;
      }

      public boolean hasDoubleStatistics() {
         return (this.bitField0_ & 4) != 0;
      }

      public DoubleStatistics getDoubleStatistics() {
         return this.doubleStatistics_ == null ? OrcProto.DoubleStatistics.getDefaultInstance() : this.doubleStatistics_;
      }

      public DoubleStatisticsOrBuilder getDoubleStatisticsOrBuilder() {
         return this.doubleStatistics_ == null ? OrcProto.DoubleStatistics.getDefaultInstance() : this.doubleStatistics_;
      }

      public boolean hasStringStatistics() {
         return (this.bitField0_ & 8) != 0;
      }

      public StringStatistics getStringStatistics() {
         return this.stringStatistics_ == null ? OrcProto.StringStatistics.getDefaultInstance() : this.stringStatistics_;
      }

      public StringStatisticsOrBuilder getStringStatisticsOrBuilder() {
         return this.stringStatistics_ == null ? OrcProto.StringStatistics.getDefaultInstance() : this.stringStatistics_;
      }

      public boolean hasBucketStatistics() {
         return (this.bitField0_ & 16) != 0;
      }

      public BucketStatistics getBucketStatistics() {
         return this.bucketStatistics_ == null ? OrcProto.BucketStatistics.getDefaultInstance() : this.bucketStatistics_;
      }

      public BucketStatisticsOrBuilder getBucketStatisticsOrBuilder() {
         return this.bucketStatistics_ == null ? OrcProto.BucketStatistics.getDefaultInstance() : this.bucketStatistics_;
      }

      public boolean hasDecimalStatistics() {
         return (this.bitField0_ & 32) != 0;
      }

      public DecimalStatistics getDecimalStatistics() {
         return this.decimalStatistics_ == null ? OrcProto.DecimalStatistics.getDefaultInstance() : this.decimalStatistics_;
      }

      public DecimalStatisticsOrBuilder getDecimalStatisticsOrBuilder() {
         return this.decimalStatistics_ == null ? OrcProto.DecimalStatistics.getDefaultInstance() : this.decimalStatistics_;
      }

      public boolean hasDateStatistics() {
         return (this.bitField0_ & 64) != 0;
      }

      public DateStatistics getDateStatistics() {
         return this.dateStatistics_ == null ? OrcProto.DateStatistics.getDefaultInstance() : this.dateStatistics_;
      }

      public DateStatisticsOrBuilder getDateStatisticsOrBuilder() {
         return this.dateStatistics_ == null ? OrcProto.DateStatistics.getDefaultInstance() : this.dateStatistics_;
      }

      public boolean hasBinaryStatistics() {
         return (this.bitField0_ & 128) != 0;
      }

      public BinaryStatistics getBinaryStatistics() {
         return this.binaryStatistics_ == null ? OrcProto.BinaryStatistics.getDefaultInstance() : this.binaryStatistics_;
      }

      public BinaryStatisticsOrBuilder getBinaryStatisticsOrBuilder() {
         return this.binaryStatistics_ == null ? OrcProto.BinaryStatistics.getDefaultInstance() : this.binaryStatistics_;
      }

      public boolean hasTimestampStatistics() {
         return (this.bitField0_ & 256) != 0;
      }

      public TimestampStatistics getTimestampStatistics() {
         return this.timestampStatistics_ == null ? OrcProto.TimestampStatistics.getDefaultInstance() : this.timestampStatistics_;
      }

      public TimestampStatisticsOrBuilder getTimestampStatisticsOrBuilder() {
         return this.timestampStatistics_ == null ? OrcProto.TimestampStatistics.getDefaultInstance() : this.timestampStatistics_;
      }

      public boolean hasHasNull() {
         return (this.bitField0_ & 512) != 0;
      }

      public boolean getHasNull() {
         return this.hasNull_;
      }

      public boolean hasBytesOnDisk() {
         return (this.bitField0_ & 1024) != 0;
      }

      public long getBytesOnDisk() {
         return this.bytesOnDisk_;
      }

      public boolean hasCollectionStatistics() {
         return (this.bitField0_ & 2048) != 0;
      }

      public CollectionStatistics getCollectionStatistics() {
         return this.collectionStatistics_ == null ? OrcProto.CollectionStatistics.getDefaultInstance() : this.collectionStatistics_;
      }

      public CollectionStatisticsOrBuilder getCollectionStatisticsOrBuilder() {
         return this.collectionStatistics_ == null ? OrcProto.CollectionStatistics.getDefaultInstance() : this.collectionStatistics_;
      }

      public boolean hasGeospatialStatistics() {
         return (this.bitField0_ & 4096) != 0;
      }

      public GeospatialStatistics getGeospatialStatistics() {
         return this.geospatialStatistics_ == null ? OrcProto.GeospatialStatistics.getDefaultInstance() : this.geospatialStatistics_;
      }

      public GeospatialStatisticsOrBuilder getGeospatialStatisticsOrBuilder() {
         return this.geospatialStatistics_ == null ? OrcProto.GeospatialStatistics.getDefaultInstance() : this.geospatialStatistics_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeUInt64(1, this.numberOfValues_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeMessage(2, this.getIntStatistics());
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeMessage(3, this.getDoubleStatistics());
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeMessage(4, this.getStringStatistics());
         }

         if ((this.bitField0_ & 16) != 0) {
            output.writeMessage(5, this.getBucketStatistics());
         }

         if ((this.bitField0_ & 32) != 0) {
            output.writeMessage(6, this.getDecimalStatistics());
         }

         if ((this.bitField0_ & 64) != 0) {
            output.writeMessage(7, this.getDateStatistics());
         }

         if ((this.bitField0_ & 128) != 0) {
            output.writeMessage(8, this.getBinaryStatistics());
         }

         if ((this.bitField0_ & 256) != 0) {
            output.writeMessage(9, this.getTimestampStatistics());
         }

         if ((this.bitField0_ & 512) != 0) {
            output.writeBool(10, this.hasNull_);
         }

         if ((this.bitField0_ & 1024) != 0) {
            output.writeUInt64(11, this.bytesOnDisk_);
         }

         if ((this.bitField0_ & 2048) != 0) {
            output.writeMessage(12, this.getCollectionStatistics());
         }

         if ((this.bitField0_ & 4096) != 0) {
            output.writeMessage(13, this.getGeospatialStatistics());
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeUInt64Size(1, this.numberOfValues_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeMessageSize(2, this.getIntStatistics());
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeMessageSize(3, this.getDoubleStatistics());
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeMessageSize(4, this.getStringStatistics());
            }

            if ((this.bitField0_ & 16) != 0) {
               size += CodedOutputStream.computeMessageSize(5, this.getBucketStatistics());
            }

            if ((this.bitField0_ & 32) != 0) {
               size += CodedOutputStream.computeMessageSize(6, this.getDecimalStatistics());
            }

            if ((this.bitField0_ & 64) != 0) {
               size += CodedOutputStream.computeMessageSize(7, this.getDateStatistics());
            }

            if ((this.bitField0_ & 128) != 0) {
               size += CodedOutputStream.computeMessageSize(8, this.getBinaryStatistics());
            }

            if ((this.bitField0_ & 256) != 0) {
               size += CodedOutputStream.computeMessageSize(9, this.getTimestampStatistics());
            }

            if ((this.bitField0_ & 512) != 0) {
               size += CodedOutputStream.computeBoolSize(10, this.hasNull_);
            }

            if ((this.bitField0_ & 1024) != 0) {
               size += CodedOutputStream.computeUInt64Size(11, this.bytesOnDisk_);
            }

            if ((this.bitField0_ & 2048) != 0) {
               size += CodedOutputStream.computeMessageSize(12, this.getCollectionStatistics());
            }

            if ((this.bitField0_ & 4096) != 0) {
               size += CodedOutputStream.computeMessageSize(13, this.getGeospatialStatistics());
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof ColumnStatistics)) {
            return super.equals(obj);
         } else {
            ColumnStatistics other = (ColumnStatistics)obj;
            if (this.hasNumberOfValues() != other.hasNumberOfValues()) {
               return false;
            } else if (this.hasNumberOfValues() && this.getNumberOfValues() != other.getNumberOfValues()) {
               return false;
            } else if (this.hasIntStatistics() != other.hasIntStatistics()) {
               return false;
            } else if (this.hasIntStatistics() && !this.getIntStatistics().equals(other.getIntStatistics())) {
               return false;
            } else if (this.hasDoubleStatistics() != other.hasDoubleStatistics()) {
               return false;
            } else if (this.hasDoubleStatistics() && !this.getDoubleStatistics().equals(other.getDoubleStatistics())) {
               return false;
            } else if (this.hasStringStatistics() != other.hasStringStatistics()) {
               return false;
            } else if (this.hasStringStatistics() && !this.getStringStatistics().equals(other.getStringStatistics())) {
               return false;
            } else if (this.hasBucketStatistics() != other.hasBucketStatistics()) {
               return false;
            } else if (this.hasBucketStatistics() && !this.getBucketStatistics().equals(other.getBucketStatistics())) {
               return false;
            } else if (this.hasDecimalStatistics() != other.hasDecimalStatistics()) {
               return false;
            } else if (this.hasDecimalStatistics() && !this.getDecimalStatistics().equals(other.getDecimalStatistics())) {
               return false;
            } else if (this.hasDateStatistics() != other.hasDateStatistics()) {
               return false;
            } else if (this.hasDateStatistics() && !this.getDateStatistics().equals(other.getDateStatistics())) {
               return false;
            } else if (this.hasBinaryStatistics() != other.hasBinaryStatistics()) {
               return false;
            } else if (this.hasBinaryStatistics() && !this.getBinaryStatistics().equals(other.getBinaryStatistics())) {
               return false;
            } else if (this.hasTimestampStatistics() != other.hasTimestampStatistics()) {
               return false;
            } else if (this.hasTimestampStatistics() && !this.getTimestampStatistics().equals(other.getTimestampStatistics())) {
               return false;
            } else if (this.hasHasNull() != other.hasHasNull()) {
               return false;
            } else if (this.hasHasNull() && this.getHasNull() != other.getHasNull()) {
               return false;
            } else if (this.hasBytesOnDisk() != other.hasBytesOnDisk()) {
               return false;
            } else if (this.hasBytesOnDisk() && this.getBytesOnDisk() != other.getBytesOnDisk()) {
               return false;
            } else if (this.hasCollectionStatistics() != other.hasCollectionStatistics()) {
               return false;
            } else if (this.hasCollectionStatistics() && !this.getCollectionStatistics().equals(other.getCollectionStatistics())) {
               return false;
            } else if (this.hasGeospatialStatistics() != other.hasGeospatialStatistics()) {
               return false;
            } else if (this.hasGeospatialStatistics() && !this.getGeospatialStatistics().equals(other.getGeospatialStatistics())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasNumberOfValues()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + Internal.hashLong(this.getNumberOfValues());
            }

            if (this.hasIntStatistics()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getIntStatistics().hashCode();
            }

            if (this.hasDoubleStatistics()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getDoubleStatistics().hashCode();
            }

            if (this.hasStringStatistics()) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.getStringStatistics().hashCode();
            }

            if (this.hasBucketStatistics()) {
               hash = 37 * hash + 5;
               hash = 53 * hash + this.getBucketStatistics().hashCode();
            }

            if (this.hasDecimalStatistics()) {
               hash = 37 * hash + 6;
               hash = 53 * hash + this.getDecimalStatistics().hashCode();
            }

            if (this.hasDateStatistics()) {
               hash = 37 * hash + 7;
               hash = 53 * hash + this.getDateStatistics().hashCode();
            }

            if (this.hasBinaryStatistics()) {
               hash = 37 * hash + 8;
               hash = 53 * hash + this.getBinaryStatistics().hashCode();
            }

            if (this.hasTimestampStatistics()) {
               hash = 37 * hash + 9;
               hash = 53 * hash + this.getTimestampStatistics().hashCode();
            }

            if (this.hasHasNull()) {
               hash = 37 * hash + 10;
               hash = 53 * hash + Internal.hashBoolean(this.getHasNull());
            }

            if (this.hasBytesOnDisk()) {
               hash = 37 * hash + 11;
               hash = 53 * hash + Internal.hashLong(this.getBytesOnDisk());
            }

            if (this.hasCollectionStatistics()) {
               hash = 37 * hash + 12;
               hash = 53 * hash + this.getCollectionStatistics().hashCode();
            }

            if (this.hasGeospatialStatistics()) {
               hash = 37 * hash + 13;
               hash = 53 * hash + this.getGeospatialStatistics().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static ColumnStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (ColumnStatistics)PARSER.parseFrom(data);
      }

      public static ColumnStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ColumnStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ColumnStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (ColumnStatistics)PARSER.parseFrom(data);
      }

      public static ColumnStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ColumnStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ColumnStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (ColumnStatistics)PARSER.parseFrom(data);
      }

      public static ColumnStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ColumnStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ColumnStatistics parseFrom(InputStream input) throws IOException {
         return (ColumnStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static ColumnStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ColumnStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static ColumnStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (ColumnStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static ColumnStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ColumnStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static ColumnStatistics parseFrom(CodedInputStream input) throws IOException {
         return (ColumnStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static ColumnStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ColumnStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(ColumnStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static ColumnStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public ColumnStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements ColumnStatisticsOrBuilder {
         private int bitField0_;
         private long numberOfValues_;
         private IntegerStatistics intStatistics_;
         private SingleFieldBuilderV3 intStatisticsBuilder_;
         private DoubleStatistics doubleStatistics_;
         private SingleFieldBuilderV3 doubleStatisticsBuilder_;
         private StringStatistics stringStatistics_;
         private SingleFieldBuilderV3 stringStatisticsBuilder_;
         private BucketStatistics bucketStatistics_;
         private SingleFieldBuilderV3 bucketStatisticsBuilder_;
         private DecimalStatistics decimalStatistics_;
         private SingleFieldBuilderV3 decimalStatisticsBuilder_;
         private DateStatistics dateStatistics_;
         private SingleFieldBuilderV3 dateStatisticsBuilder_;
         private BinaryStatistics binaryStatistics_;
         private SingleFieldBuilderV3 binaryStatisticsBuilder_;
         private TimestampStatistics timestampStatistics_;
         private SingleFieldBuilderV3 timestampStatisticsBuilder_;
         private boolean hasNull_;
         private long bytesOnDisk_;
         private CollectionStatistics collectionStatistics_;
         private SingleFieldBuilderV3 collectionStatisticsBuilder_;
         private GeospatialStatistics geospatialStatistics_;
         private SingleFieldBuilderV3 geospatialStatisticsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_ColumnStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_ColumnStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(ColumnStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.ColumnStatistics.alwaysUseFieldBuilders) {
               this.getIntStatisticsFieldBuilder();
               this.getDoubleStatisticsFieldBuilder();
               this.getStringStatisticsFieldBuilder();
               this.getBucketStatisticsFieldBuilder();
               this.getDecimalStatisticsFieldBuilder();
               this.getDateStatisticsFieldBuilder();
               this.getBinaryStatisticsFieldBuilder();
               this.getTimestampStatisticsFieldBuilder();
               this.getCollectionStatisticsFieldBuilder();
               this.getGeospatialStatisticsFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            this.numberOfValues_ = 0L;
            this.bitField0_ &= -2;
            if (this.intStatisticsBuilder_ == null) {
               this.intStatistics_ = null;
            } else {
               this.intStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -3;
            if (this.doubleStatisticsBuilder_ == null) {
               this.doubleStatistics_ = null;
            } else {
               this.doubleStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            if (this.stringStatisticsBuilder_ == null) {
               this.stringStatistics_ = null;
            } else {
               this.stringStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -9;
            if (this.bucketStatisticsBuilder_ == null) {
               this.bucketStatistics_ = null;
            } else {
               this.bucketStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -17;
            if (this.decimalStatisticsBuilder_ == null) {
               this.decimalStatistics_ = null;
            } else {
               this.decimalStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -33;
            if (this.dateStatisticsBuilder_ == null) {
               this.dateStatistics_ = null;
            } else {
               this.dateStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -65;
            if (this.binaryStatisticsBuilder_ == null) {
               this.binaryStatistics_ = null;
            } else {
               this.binaryStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -129;
            if (this.timestampStatisticsBuilder_ == null) {
               this.timestampStatistics_ = null;
            } else {
               this.timestampStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -257;
            this.hasNull_ = false;
            this.bitField0_ &= -513;
            this.bytesOnDisk_ = 0L;
            this.bitField0_ &= -1025;
            if (this.collectionStatisticsBuilder_ == null) {
               this.collectionStatistics_ = null;
            } else {
               this.collectionStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -2049;
            if (this.geospatialStatisticsBuilder_ == null) {
               this.geospatialStatistics_ = null;
            } else {
               this.geospatialStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -4097;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_ColumnStatistics_descriptor;
         }

         public ColumnStatistics getDefaultInstanceForType() {
            return OrcProto.ColumnStatistics.getDefaultInstance();
         }

         public ColumnStatistics build() {
            ColumnStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public ColumnStatistics buildPartial() {
            ColumnStatistics result = new ColumnStatistics(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.numberOfValues_ = this.numberOfValues_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               if (this.intStatisticsBuilder_ == null) {
                  result.intStatistics_ = this.intStatistics_;
               } else {
                  result.intStatistics_ = (IntegerStatistics)this.intStatisticsBuilder_.build();
               }

               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               if (this.doubleStatisticsBuilder_ == null) {
                  result.doubleStatistics_ = this.doubleStatistics_;
               } else {
                  result.doubleStatistics_ = (DoubleStatistics)this.doubleStatisticsBuilder_.build();
               }

               to_bitField0_ |= 4;
            }

            if ((from_bitField0_ & 8) != 0) {
               if (this.stringStatisticsBuilder_ == null) {
                  result.stringStatistics_ = this.stringStatistics_;
               } else {
                  result.stringStatistics_ = (StringStatistics)this.stringStatisticsBuilder_.build();
               }

               to_bitField0_ |= 8;
            }

            if ((from_bitField0_ & 16) != 0) {
               if (this.bucketStatisticsBuilder_ == null) {
                  result.bucketStatistics_ = this.bucketStatistics_;
               } else {
                  result.bucketStatistics_ = (BucketStatistics)this.bucketStatisticsBuilder_.build();
               }

               to_bitField0_ |= 16;
            }

            if ((from_bitField0_ & 32) != 0) {
               if (this.decimalStatisticsBuilder_ == null) {
                  result.decimalStatistics_ = this.decimalStatistics_;
               } else {
                  result.decimalStatistics_ = (DecimalStatistics)this.decimalStatisticsBuilder_.build();
               }

               to_bitField0_ |= 32;
            }

            if ((from_bitField0_ & 64) != 0) {
               if (this.dateStatisticsBuilder_ == null) {
                  result.dateStatistics_ = this.dateStatistics_;
               } else {
                  result.dateStatistics_ = (DateStatistics)this.dateStatisticsBuilder_.build();
               }

               to_bitField0_ |= 64;
            }

            if ((from_bitField0_ & 128) != 0) {
               if (this.binaryStatisticsBuilder_ == null) {
                  result.binaryStatistics_ = this.binaryStatistics_;
               } else {
                  result.binaryStatistics_ = (BinaryStatistics)this.binaryStatisticsBuilder_.build();
               }

               to_bitField0_ |= 128;
            }

            if ((from_bitField0_ & 256) != 0) {
               if (this.timestampStatisticsBuilder_ == null) {
                  result.timestampStatistics_ = this.timestampStatistics_;
               } else {
                  result.timestampStatistics_ = (TimestampStatistics)this.timestampStatisticsBuilder_.build();
               }

               to_bitField0_ |= 256;
            }

            if ((from_bitField0_ & 512) != 0) {
               result.hasNull_ = this.hasNull_;
               to_bitField0_ |= 512;
            }

            if ((from_bitField0_ & 1024) != 0) {
               result.bytesOnDisk_ = this.bytesOnDisk_;
               to_bitField0_ |= 1024;
            }

            if ((from_bitField0_ & 2048) != 0) {
               if (this.collectionStatisticsBuilder_ == null) {
                  result.collectionStatistics_ = this.collectionStatistics_;
               } else {
                  result.collectionStatistics_ = (CollectionStatistics)this.collectionStatisticsBuilder_.build();
               }

               to_bitField0_ |= 2048;
            }

            if ((from_bitField0_ & 4096) != 0) {
               if (this.geospatialStatisticsBuilder_ == null) {
                  result.geospatialStatistics_ = this.geospatialStatistics_;
               } else {
                  result.geospatialStatistics_ = (GeospatialStatistics)this.geospatialStatisticsBuilder_.build();
               }

               to_bitField0_ |= 4096;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof ColumnStatistics) {
               return this.mergeFrom((ColumnStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(ColumnStatistics other) {
            if (other == OrcProto.ColumnStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasNumberOfValues()) {
                  this.setNumberOfValues(other.getNumberOfValues());
               }

               if (other.hasIntStatistics()) {
                  this.mergeIntStatistics(other.getIntStatistics());
               }

               if (other.hasDoubleStatistics()) {
                  this.mergeDoubleStatistics(other.getDoubleStatistics());
               }

               if (other.hasStringStatistics()) {
                  this.mergeStringStatistics(other.getStringStatistics());
               }

               if (other.hasBucketStatistics()) {
                  this.mergeBucketStatistics(other.getBucketStatistics());
               }

               if (other.hasDecimalStatistics()) {
                  this.mergeDecimalStatistics(other.getDecimalStatistics());
               }

               if (other.hasDateStatistics()) {
                  this.mergeDateStatistics(other.getDateStatistics());
               }

               if (other.hasBinaryStatistics()) {
                  this.mergeBinaryStatistics(other.getBinaryStatistics());
               }

               if (other.hasTimestampStatistics()) {
                  this.mergeTimestampStatistics(other.getTimestampStatistics());
               }

               if (other.hasHasNull()) {
                  this.setHasNull(other.getHasNull());
               }

               if (other.hasBytesOnDisk()) {
                  this.setBytesOnDisk(other.getBytesOnDisk());
               }

               if (other.hasCollectionStatistics()) {
                  this.mergeCollectionStatistics(other.getCollectionStatistics());
               }

               if (other.hasGeospatialStatistics()) {
                  this.mergeGeospatialStatistics(other.getGeospatialStatistics());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            ColumnStatistics parsedMessage = null;

            try {
               parsedMessage = (ColumnStatistics)OrcProto.ColumnStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (ColumnStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasNumberOfValues() {
            return (this.bitField0_ & 1) != 0;
         }

         public long getNumberOfValues() {
            return this.numberOfValues_;
         }

         public Builder setNumberOfValues(long value) {
            this.bitField0_ |= 1;
            this.numberOfValues_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearNumberOfValues() {
            this.bitField0_ &= -2;
            this.numberOfValues_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasIntStatistics() {
            return (this.bitField0_ & 2) != 0;
         }

         public IntegerStatistics getIntStatistics() {
            if (this.intStatisticsBuilder_ == null) {
               return this.intStatistics_ == null ? OrcProto.IntegerStatistics.getDefaultInstance() : this.intStatistics_;
            } else {
               return (IntegerStatistics)this.intStatisticsBuilder_.getMessage();
            }
         }

         public Builder setIntStatistics(IntegerStatistics value) {
            if (this.intStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.intStatistics_ = value;
               this.onChanged();
            } else {
               this.intStatisticsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 2;
            return this;
         }

         public Builder setIntStatistics(IntegerStatistics.Builder builderForValue) {
            if (this.intStatisticsBuilder_ == null) {
               this.intStatistics_ = builderForValue.build();
               this.onChanged();
            } else {
               this.intStatisticsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 2;
            return this;
         }

         public Builder mergeIntStatistics(IntegerStatistics value) {
            if (this.intStatisticsBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0 && this.intStatistics_ != null && this.intStatistics_ != OrcProto.IntegerStatistics.getDefaultInstance()) {
                  this.intStatistics_ = OrcProto.IntegerStatistics.newBuilder(this.intStatistics_).mergeFrom(value).buildPartial();
               } else {
                  this.intStatistics_ = value;
               }

               this.onChanged();
            } else {
               this.intStatisticsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 2;
            return this;
         }

         public Builder clearIntStatistics() {
            if (this.intStatisticsBuilder_ == null) {
               this.intStatistics_ = null;
               this.onChanged();
            } else {
               this.intStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -3;
            return this;
         }

         public IntegerStatistics.Builder getIntStatisticsBuilder() {
            this.bitField0_ |= 2;
            this.onChanged();
            return (IntegerStatistics.Builder)this.getIntStatisticsFieldBuilder().getBuilder();
         }

         public IntegerStatisticsOrBuilder getIntStatisticsOrBuilder() {
            if (this.intStatisticsBuilder_ != null) {
               return (IntegerStatisticsOrBuilder)this.intStatisticsBuilder_.getMessageOrBuilder();
            } else {
               return this.intStatistics_ == null ? OrcProto.IntegerStatistics.getDefaultInstance() : this.intStatistics_;
            }
         }

         private SingleFieldBuilderV3 getIntStatisticsFieldBuilder() {
            if (this.intStatisticsBuilder_ == null) {
               this.intStatisticsBuilder_ = new SingleFieldBuilderV3(this.getIntStatistics(), this.getParentForChildren(), this.isClean());
               this.intStatistics_ = null;
            }

            return this.intStatisticsBuilder_;
         }

         public boolean hasDoubleStatistics() {
            return (this.bitField0_ & 4) != 0;
         }

         public DoubleStatistics getDoubleStatistics() {
            if (this.doubleStatisticsBuilder_ == null) {
               return this.doubleStatistics_ == null ? OrcProto.DoubleStatistics.getDefaultInstance() : this.doubleStatistics_;
            } else {
               return (DoubleStatistics)this.doubleStatisticsBuilder_.getMessage();
            }
         }

         public Builder setDoubleStatistics(DoubleStatistics value) {
            if (this.doubleStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.doubleStatistics_ = value;
               this.onChanged();
            } else {
               this.doubleStatisticsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public Builder setDoubleStatistics(DoubleStatistics.Builder builderForValue) {
            if (this.doubleStatisticsBuilder_ == null) {
               this.doubleStatistics_ = builderForValue.build();
               this.onChanged();
            } else {
               this.doubleStatisticsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 4;
            return this;
         }

         public Builder mergeDoubleStatistics(DoubleStatistics value) {
            if (this.doubleStatisticsBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0 && this.doubleStatistics_ != null && this.doubleStatistics_ != OrcProto.DoubleStatistics.getDefaultInstance()) {
                  this.doubleStatistics_ = OrcProto.DoubleStatistics.newBuilder(this.doubleStatistics_).mergeFrom(value).buildPartial();
               } else {
                  this.doubleStatistics_ = value;
               }

               this.onChanged();
            } else {
               this.doubleStatisticsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public Builder clearDoubleStatistics() {
            if (this.doubleStatisticsBuilder_ == null) {
               this.doubleStatistics_ = null;
               this.onChanged();
            } else {
               this.doubleStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         public DoubleStatistics.Builder getDoubleStatisticsBuilder() {
            this.bitField0_ |= 4;
            this.onChanged();
            return (DoubleStatistics.Builder)this.getDoubleStatisticsFieldBuilder().getBuilder();
         }

         public DoubleStatisticsOrBuilder getDoubleStatisticsOrBuilder() {
            if (this.doubleStatisticsBuilder_ != null) {
               return (DoubleStatisticsOrBuilder)this.doubleStatisticsBuilder_.getMessageOrBuilder();
            } else {
               return this.doubleStatistics_ == null ? OrcProto.DoubleStatistics.getDefaultInstance() : this.doubleStatistics_;
            }
         }

         private SingleFieldBuilderV3 getDoubleStatisticsFieldBuilder() {
            if (this.doubleStatisticsBuilder_ == null) {
               this.doubleStatisticsBuilder_ = new SingleFieldBuilderV3(this.getDoubleStatistics(), this.getParentForChildren(), this.isClean());
               this.doubleStatistics_ = null;
            }

            return this.doubleStatisticsBuilder_;
         }

         public boolean hasStringStatistics() {
            return (this.bitField0_ & 8) != 0;
         }

         public StringStatistics getStringStatistics() {
            if (this.stringStatisticsBuilder_ == null) {
               return this.stringStatistics_ == null ? OrcProto.StringStatistics.getDefaultInstance() : this.stringStatistics_;
            } else {
               return (StringStatistics)this.stringStatisticsBuilder_.getMessage();
            }
         }

         public Builder setStringStatistics(StringStatistics value) {
            if (this.stringStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.stringStatistics_ = value;
               this.onChanged();
            } else {
               this.stringStatisticsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 8;
            return this;
         }

         public Builder setStringStatistics(StringStatistics.Builder builderForValue) {
            if (this.stringStatisticsBuilder_ == null) {
               this.stringStatistics_ = builderForValue.build();
               this.onChanged();
            } else {
               this.stringStatisticsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 8;
            return this;
         }

         public Builder mergeStringStatistics(StringStatistics value) {
            if (this.stringStatisticsBuilder_ == null) {
               if ((this.bitField0_ & 8) != 0 && this.stringStatistics_ != null && this.stringStatistics_ != OrcProto.StringStatistics.getDefaultInstance()) {
                  this.stringStatistics_ = OrcProto.StringStatistics.newBuilder(this.stringStatistics_).mergeFrom(value).buildPartial();
               } else {
                  this.stringStatistics_ = value;
               }

               this.onChanged();
            } else {
               this.stringStatisticsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 8;
            return this;
         }

         public Builder clearStringStatistics() {
            if (this.stringStatisticsBuilder_ == null) {
               this.stringStatistics_ = null;
               this.onChanged();
            } else {
               this.stringStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -9;
            return this;
         }

         public StringStatistics.Builder getStringStatisticsBuilder() {
            this.bitField0_ |= 8;
            this.onChanged();
            return (StringStatistics.Builder)this.getStringStatisticsFieldBuilder().getBuilder();
         }

         public StringStatisticsOrBuilder getStringStatisticsOrBuilder() {
            if (this.stringStatisticsBuilder_ != null) {
               return (StringStatisticsOrBuilder)this.stringStatisticsBuilder_.getMessageOrBuilder();
            } else {
               return this.stringStatistics_ == null ? OrcProto.StringStatistics.getDefaultInstance() : this.stringStatistics_;
            }
         }

         private SingleFieldBuilderV3 getStringStatisticsFieldBuilder() {
            if (this.stringStatisticsBuilder_ == null) {
               this.stringStatisticsBuilder_ = new SingleFieldBuilderV3(this.getStringStatistics(), this.getParentForChildren(), this.isClean());
               this.stringStatistics_ = null;
            }

            return this.stringStatisticsBuilder_;
         }

         public boolean hasBucketStatistics() {
            return (this.bitField0_ & 16) != 0;
         }

         public BucketStatistics getBucketStatistics() {
            if (this.bucketStatisticsBuilder_ == null) {
               return this.bucketStatistics_ == null ? OrcProto.BucketStatistics.getDefaultInstance() : this.bucketStatistics_;
            } else {
               return (BucketStatistics)this.bucketStatisticsBuilder_.getMessage();
            }
         }

         public Builder setBucketStatistics(BucketStatistics value) {
            if (this.bucketStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.bucketStatistics_ = value;
               this.onChanged();
            } else {
               this.bucketStatisticsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 16;
            return this;
         }

         public Builder setBucketStatistics(BucketStatistics.Builder builderForValue) {
            if (this.bucketStatisticsBuilder_ == null) {
               this.bucketStatistics_ = builderForValue.build();
               this.onChanged();
            } else {
               this.bucketStatisticsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 16;
            return this;
         }

         public Builder mergeBucketStatistics(BucketStatistics value) {
            if (this.bucketStatisticsBuilder_ == null) {
               if ((this.bitField0_ & 16) != 0 && this.bucketStatistics_ != null && this.bucketStatistics_ != OrcProto.BucketStatistics.getDefaultInstance()) {
                  this.bucketStatistics_ = OrcProto.BucketStatistics.newBuilder(this.bucketStatistics_).mergeFrom(value).buildPartial();
               } else {
                  this.bucketStatistics_ = value;
               }

               this.onChanged();
            } else {
               this.bucketStatisticsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 16;
            return this;
         }

         public Builder clearBucketStatistics() {
            if (this.bucketStatisticsBuilder_ == null) {
               this.bucketStatistics_ = null;
               this.onChanged();
            } else {
               this.bucketStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -17;
            return this;
         }

         public BucketStatistics.Builder getBucketStatisticsBuilder() {
            this.bitField0_ |= 16;
            this.onChanged();
            return (BucketStatistics.Builder)this.getBucketStatisticsFieldBuilder().getBuilder();
         }

         public BucketStatisticsOrBuilder getBucketStatisticsOrBuilder() {
            if (this.bucketStatisticsBuilder_ != null) {
               return (BucketStatisticsOrBuilder)this.bucketStatisticsBuilder_.getMessageOrBuilder();
            } else {
               return this.bucketStatistics_ == null ? OrcProto.BucketStatistics.getDefaultInstance() : this.bucketStatistics_;
            }
         }

         private SingleFieldBuilderV3 getBucketStatisticsFieldBuilder() {
            if (this.bucketStatisticsBuilder_ == null) {
               this.bucketStatisticsBuilder_ = new SingleFieldBuilderV3(this.getBucketStatistics(), this.getParentForChildren(), this.isClean());
               this.bucketStatistics_ = null;
            }

            return this.bucketStatisticsBuilder_;
         }

         public boolean hasDecimalStatistics() {
            return (this.bitField0_ & 32) != 0;
         }

         public DecimalStatistics getDecimalStatistics() {
            if (this.decimalStatisticsBuilder_ == null) {
               return this.decimalStatistics_ == null ? OrcProto.DecimalStatistics.getDefaultInstance() : this.decimalStatistics_;
            } else {
               return (DecimalStatistics)this.decimalStatisticsBuilder_.getMessage();
            }
         }

         public Builder setDecimalStatistics(DecimalStatistics value) {
            if (this.decimalStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.decimalStatistics_ = value;
               this.onChanged();
            } else {
               this.decimalStatisticsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder setDecimalStatistics(DecimalStatistics.Builder builderForValue) {
            if (this.decimalStatisticsBuilder_ == null) {
               this.decimalStatistics_ = builderForValue.build();
               this.onChanged();
            } else {
               this.decimalStatisticsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder mergeDecimalStatistics(DecimalStatistics value) {
            if (this.decimalStatisticsBuilder_ == null) {
               if ((this.bitField0_ & 32) != 0 && this.decimalStatistics_ != null && this.decimalStatistics_ != OrcProto.DecimalStatistics.getDefaultInstance()) {
                  this.decimalStatistics_ = OrcProto.DecimalStatistics.newBuilder(this.decimalStatistics_).mergeFrom(value).buildPartial();
               } else {
                  this.decimalStatistics_ = value;
               }

               this.onChanged();
            } else {
               this.decimalStatisticsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder clearDecimalStatistics() {
            if (this.decimalStatisticsBuilder_ == null) {
               this.decimalStatistics_ = null;
               this.onChanged();
            } else {
               this.decimalStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -33;
            return this;
         }

         public DecimalStatistics.Builder getDecimalStatisticsBuilder() {
            this.bitField0_ |= 32;
            this.onChanged();
            return (DecimalStatistics.Builder)this.getDecimalStatisticsFieldBuilder().getBuilder();
         }

         public DecimalStatisticsOrBuilder getDecimalStatisticsOrBuilder() {
            if (this.decimalStatisticsBuilder_ != null) {
               return (DecimalStatisticsOrBuilder)this.decimalStatisticsBuilder_.getMessageOrBuilder();
            } else {
               return this.decimalStatistics_ == null ? OrcProto.DecimalStatistics.getDefaultInstance() : this.decimalStatistics_;
            }
         }

         private SingleFieldBuilderV3 getDecimalStatisticsFieldBuilder() {
            if (this.decimalStatisticsBuilder_ == null) {
               this.decimalStatisticsBuilder_ = new SingleFieldBuilderV3(this.getDecimalStatistics(), this.getParentForChildren(), this.isClean());
               this.decimalStatistics_ = null;
            }

            return this.decimalStatisticsBuilder_;
         }

         public boolean hasDateStatistics() {
            return (this.bitField0_ & 64) != 0;
         }

         public DateStatistics getDateStatistics() {
            if (this.dateStatisticsBuilder_ == null) {
               return this.dateStatistics_ == null ? OrcProto.DateStatistics.getDefaultInstance() : this.dateStatistics_;
            } else {
               return (DateStatistics)this.dateStatisticsBuilder_.getMessage();
            }
         }

         public Builder setDateStatistics(DateStatistics value) {
            if (this.dateStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.dateStatistics_ = value;
               this.onChanged();
            } else {
               this.dateStatisticsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 64;
            return this;
         }

         public Builder setDateStatistics(DateStatistics.Builder builderForValue) {
            if (this.dateStatisticsBuilder_ == null) {
               this.dateStatistics_ = builderForValue.build();
               this.onChanged();
            } else {
               this.dateStatisticsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 64;
            return this;
         }

         public Builder mergeDateStatistics(DateStatistics value) {
            if (this.dateStatisticsBuilder_ == null) {
               if ((this.bitField0_ & 64) != 0 && this.dateStatistics_ != null && this.dateStatistics_ != OrcProto.DateStatistics.getDefaultInstance()) {
                  this.dateStatistics_ = OrcProto.DateStatistics.newBuilder(this.dateStatistics_).mergeFrom(value).buildPartial();
               } else {
                  this.dateStatistics_ = value;
               }

               this.onChanged();
            } else {
               this.dateStatisticsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 64;
            return this;
         }

         public Builder clearDateStatistics() {
            if (this.dateStatisticsBuilder_ == null) {
               this.dateStatistics_ = null;
               this.onChanged();
            } else {
               this.dateStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -65;
            return this;
         }

         public DateStatistics.Builder getDateStatisticsBuilder() {
            this.bitField0_ |= 64;
            this.onChanged();
            return (DateStatistics.Builder)this.getDateStatisticsFieldBuilder().getBuilder();
         }

         public DateStatisticsOrBuilder getDateStatisticsOrBuilder() {
            if (this.dateStatisticsBuilder_ != null) {
               return (DateStatisticsOrBuilder)this.dateStatisticsBuilder_.getMessageOrBuilder();
            } else {
               return this.dateStatistics_ == null ? OrcProto.DateStatistics.getDefaultInstance() : this.dateStatistics_;
            }
         }

         private SingleFieldBuilderV3 getDateStatisticsFieldBuilder() {
            if (this.dateStatisticsBuilder_ == null) {
               this.dateStatisticsBuilder_ = new SingleFieldBuilderV3(this.getDateStatistics(), this.getParentForChildren(), this.isClean());
               this.dateStatistics_ = null;
            }

            return this.dateStatisticsBuilder_;
         }

         public boolean hasBinaryStatistics() {
            return (this.bitField0_ & 128) != 0;
         }

         public BinaryStatistics getBinaryStatistics() {
            if (this.binaryStatisticsBuilder_ == null) {
               return this.binaryStatistics_ == null ? OrcProto.BinaryStatistics.getDefaultInstance() : this.binaryStatistics_;
            } else {
               return (BinaryStatistics)this.binaryStatisticsBuilder_.getMessage();
            }
         }

         public Builder setBinaryStatistics(BinaryStatistics value) {
            if (this.binaryStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.binaryStatistics_ = value;
               this.onChanged();
            } else {
               this.binaryStatisticsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 128;
            return this;
         }

         public Builder setBinaryStatistics(BinaryStatistics.Builder builderForValue) {
            if (this.binaryStatisticsBuilder_ == null) {
               this.binaryStatistics_ = builderForValue.build();
               this.onChanged();
            } else {
               this.binaryStatisticsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 128;
            return this;
         }

         public Builder mergeBinaryStatistics(BinaryStatistics value) {
            if (this.binaryStatisticsBuilder_ == null) {
               if ((this.bitField0_ & 128) != 0 && this.binaryStatistics_ != null && this.binaryStatistics_ != OrcProto.BinaryStatistics.getDefaultInstance()) {
                  this.binaryStatistics_ = OrcProto.BinaryStatistics.newBuilder(this.binaryStatistics_).mergeFrom(value).buildPartial();
               } else {
                  this.binaryStatistics_ = value;
               }

               this.onChanged();
            } else {
               this.binaryStatisticsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 128;
            return this;
         }

         public Builder clearBinaryStatistics() {
            if (this.binaryStatisticsBuilder_ == null) {
               this.binaryStatistics_ = null;
               this.onChanged();
            } else {
               this.binaryStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -129;
            return this;
         }

         public BinaryStatistics.Builder getBinaryStatisticsBuilder() {
            this.bitField0_ |= 128;
            this.onChanged();
            return (BinaryStatistics.Builder)this.getBinaryStatisticsFieldBuilder().getBuilder();
         }

         public BinaryStatisticsOrBuilder getBinaryStatisticsOrBuilder() {
            if (this.binaryStatisticsBuilder_ != null) {
               return (BinaryStatisticsOrBuilder)this.binaryStatisticsBuilder_.getMessageOrBuilder();
            } else {
               return this.binaryStatistics_ == null ? OrcProto.BinaryStatistics.getDefaultInstance() : this.binaryStatistics_;
            }
         }

         private SingleFieldBuilderV3 getBinaryStatisticsFieldBuilder() {
            if (this.binaryStatisticsBuilder_ == null) {
               this.binaryStatisticsBuilder_ = new SingleFieldBuilderV3(this.getBinaryStatistics(), this.getParentForChildren(), this.isClean());
               this.binaryStatistics_ = null;
            }

            return this.binaryStatisticsBuilder_;
         }

         public boolean hasTimestampStatistics() {
            return (this.bitField0_ & 256) != 0;
         }

         public TimestampStatistics getTimestampStatistics() {
            if (this.timestampStatisticsBuilder_ == null) {
               return this.timestampStatistics_ == null ? OrcProto.TimestampStatistics.getDefaultInstance() : this.timestampStatistics_;
            } else {
               return (TimestampStatistics)this.timestampStatisticsBuilder_.getMessage();
            }
         }

         public Builder setTimestampStatistics(TimestampStatistics value) {
            if (this.timestampStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.timestampStatistics_ = value;
               this.onChanged();
            } else {
               this.timestampStatisticsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 256;
            return this;
         }

         public Builder setTimestampStatistics(TimestampStatistics.Builder builderForValue) {
            if (this.timestampStatisticsBuilder_ == null) {
               this.timestampStatistics_ = builderForValue.build();
               this.onChanged();
            } else {
               this.timestampStatisticsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 256;
            return this;
         }

         public Builder mergeTimestampStatistics(TimestampStatistics value) {
            if (this.timestampStatisticsBuilder_ == null) {
               if ((this.bitField0_ & 256) != 0 && this.timestampStatistics_ != null && this.timestampStatistics_ != OrcProto.TimestampStatistics.getDefaultInstance()) {
                  this.timestampStatistics_ = OrcProto.TimestampStatistics.newBuilder(this.timestampStatistics_).mergeFrom(value).buildPartial();
               } else {
                  this.timestampStatistics_ = value;
               }

               this.onChanged();
            } else {
               this.timestampStatisticsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 256;
            return this;
         }

         public Builder clearTimestampStatistics() {
            if (this.timestampStatisticsBuilder_ == null) {
               this.timestampStatistics_ = null;
               this.onChanged();
            } else {
               this.timestampStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -257;
            return this;
         }

         public TimestampStatistics.Builder getTimestampStatisticsBuilder() {
            this.bitField0_ |= 256;
            this.onChanged();
            return (TimestampStatistics.Builder)this.getTimestampStatisticsFieldBuilder().getBuilder();
         }

         public TimestampStatisticsOrBuilder getTimestampStatisticsOrBuilder() {
            if (this.timestampStatisticsBuilder_ != null) {
               return (TimestampStatisticsOrBuilder)this.timestampStatisticsBuilder_.getMessageOrBuilder();
            } else {
               return this.timestampStatistics_ == null ? OrcProto.TimestampStatistics.getDefaultInstance() : this.timestampStatistics_;
            }
         }

         private SingleFieldBuilderV3 getTimestampStatisticsFieldBuilder() {
            if (this.timestampStatisticsBuilder_ == null) {
               this.timestampStatisticsBuilder_ = new SingleFieldBuilderV3(this.getTimestampStatistics(), this.getParentForChildren(), this.isClean());
               this.timestampStatistics_ = null;
            }

            return this.timestampStatisticsBuilder_;
         }

         public boolean hasHasNull() {
            return (this.bitField0_ & 512) != 0;
         }

         public boolean getHasNull() {
            return this.hasNull_;
         }

         public Builder setHasNull(boolean value) {
            this.bitField0_ |= 512;
            this.hasNull_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearHasNull() {
            this.bitField0_ &= -513;
            this.hasNull_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasBytesOnDisk() {
            return (this.bitField0_ & 1024) != 0;
         }

         public long getBytesOnDisk() {
            return this.bytesOnDisk_;
         }

         public Builder setBytesOnDisk(long value) {
            this.bitField0_ |= 1024;
            this.bytesOnDisk_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearBytesOnDisk() {
            this.bitField0_ &= -1025;
            this.bytesOnDisk_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasCollectionStatistics() {
            return (this.bitField0_ & 2048) != 0;
         }

         public CollectionStatistics getCollectionStatistics() {
            if (this.collectionStatisticsBuilder_ == null) {
               return this.collectionStatistics_ == null ? OrcProto.CollectionStatistics.getDefaultInstance() : this.collectionStatistics_;
            } else {
               return (CollectionStatistics)this.collectionStatisticsBuilder_.getMessage();
            }
         }

         public Builder setCollectionStatistics(CollectionStatistics value) {
            if (this.collectionStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.collectionStatistics_ = value;
               this.onChanged();
            } else {
               this.collectionStatisticsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 2048;
            return this;
         }

         public Builder setCollectionStatistics(CollectionStatistics.Builder builderForValue) {
            if (this.collectionStatisticsBuilder_ == null) {
               this.collectionStatistics_ = builderForValue.build();
               this.onChanged();
            } else {
               this.collectionStatisticsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 2048;
            return this;
         }

         public Builder mergeCollectionStatistics(CollectionStatistics value) {
            if (this.collectionStatisticsBuilder_ == null) {
               if ((this.bitField0_ & 2048) != 0 && this.collectionStatistics_ != null && this.collectionStatistics_ != OrcProto.CollectionStatistics.getDefaultInstance()) {
                  this.collectionStatistics_ = OrcProto.CollectionStatistics.newBuilder(this.collectionStatistics_).mergeFrom(value).buildPartial();
               } else {
                  this.collectionStatistics_ = value;
               }

               this.onChanged();
            } else {
               this.collectionStatisticsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 2048;
            return this;
         }

         public Builder clearCollectionStatistics() {
            if (this.collectionStatisticsBuilder_ == null) {
               this.collectionStatistics_ = null;
               this.onChanged();
            } else {
               this.collectionStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -2049;
            return this;
         }

         public CollectionStatistics.Builder getCollectionStatisticsBuilder() {
            this.bitField0_ |= 2048;
            this.onChanged();
            return (CollectionStatistics.Builder)this.getCollectionStatisticsFieldBuilder().getBuilder();
         }

         public CollectionStatisticsOrBuilder getCollectionStatisticsOrBuilder() {
            if (this.collectionStatisticsBuilder_ != null) {
               return (CollectionStatisticsOrBuilder)this.collectionStatisticsBuilder_.getMessageOrBuilder();
            } else {
               return this.collectionStatistics_ == null ? OrcProto.CollectionStatistics.getDefaultInstance() : this.collectionStatistics_;
            }
         }

         private SingleFieldBuilderV3 getCollectionStatisticsFieldBuilder() {
            if (this.collectionStatisticsBuilder_ == null) {
               this.collectionStatisticsBuilder_ = new SingleFieldBuilderV3(this.getCollectionStatistics(), this.getParentForChildren(), this.isClean());
               this.collectionStatistics_ = null;
            }

            return this.collectionStatisticsBuilder_;
         }

         public boolean hasGeospatialStatistics() {
            return (this.bitField0_ & 4096) != 0;
         }

         public GeospatialStatistics getGeospatialStatistics() {
            if (this.geospatialStatisticsBuilder_ == null) {
               return this.geospatialStatistics_ == null ? OrcProto.GeospatialStatistics.getDefaultInstance() : this.geospatialStatistics_;
            } else {
               return (GeospatialStatistics)this.geospatialStatisticsBuilder_.getMessage();
            }
         }

         public Builder setGeospatialStatistics(GeospatialStatistics value) {
            if (this.geospatialStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.geospatialStatistics_ = value;
               this.onChanged();
            } else {
               this.geospatialStatisticsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 4096;
            return this;
         }

         public Builder setGeospatialStatistics(GeospatialStatistics.Builder builderForValue) {
            if (this.geospatialStatisticsBuilder_ == null) {
               this.geospatialStatistics_ = builderForValue.build();
               this.onChanged();
            } else {
               this.geospatialStatisticsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 4096;
            return this;
         }

         public Builder mergeGeospatialStatistics(GeospatialStatistics value) {
            if (this.geospatialStatisticsBuilder_ == null) {
               if ((this.bitField0_ & 4096) != 0 && this.geospatialStatistics_ != null && this.geospatialStatistics_ != OrcProto.GeospatialStatistics.getDefaultInstance()) {
                  this.geospatialStatistics_ = OrcProto.GeospatialStatistics.newBuilder(this.geospatialStatistics_).mergeFrom(value).buildPartial();
               } else {
                  this.geospatialStatistics_ = value;
               }

               this.onChanged();
            } else {
               this.geospatialStatisticsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 4096;
            return this;
         }

         public Builder clearGeospatialStatistics() {
            if (this.geospatialStatisticsBuilder_ == null) {
               this.geospatialStatistics_ = null;
               this.onChanged();
            } else {
               this.geospatialStatisticsBuilder_.clear();
            }

            this.bitField0_ &= -4097;
            return this;
         }

         public GeospatialStatistics.Builder getGeospatialStatisticsBuilder() {
            this.bitField0_ |= 4096;
            this.onChanged();
            return (GeospatialStatistics.Builder)this.getGeospatialStatisticsFieldBuilder().getBuilder();
         }

         public GeospatialStatisticsOrBuilder getGeospatialStatisticsOrBuilder() {
            if (this.geospatialStatisticsBuilder_ != null) {
               return (GeospatialStatisticsOrBuilder)this.geospatialStatisticsBuilder_.getMessageOrBuilder();
            } else {
               return this.geospatialStatistics_ == null ? OrcProto.GeospatialStatistics.getDefaultInstance() : this.geospatialStatistics_;
            }
         }

         private SingleFieldBuilderV3 getGeospatialStatisticsFieldBuilder() {
            if (this.geospatialStatisticsBuilder_ == null) {
               this.geospatialStatisticsBuilder_ = new SingleFieldBuilderV3(this.getGeospatialStatistics(), this.getParentForChildren(), this.isClean());
               this.geospatialStatistics_ = null;
            }

            return this.geospatialStatisticsBuilder_;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class RowIndexEntry extends GeneratedMessageV3 implements RowIndexEntryOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int POSITIONS_FIELD_NUMBER = 1;
      private Internal.LongList positions_;
      private int positionsMemoizedSerializedSize;
      public static final int STATISTICS_FIELD_NUMBER = 2;
      private ColumnStatistics statistics_;
      private byte memoizedIsInitialized;
      private static final RowIndexEntry DEFAULT_INSTANCE = new RowIndexEntry();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public RowIndexEntry parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new RowIndexEntry(input, extensionRegistry);
         }
      };

      private RowIndexEntry(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.positionsMemoizedSerializedSize = -1;
         this.memoizedIsInitialized = -1;
      }

      private RowIndexEntry() {
         this.positionsMemoizedSerializedSize = -1;
         this.memoizedIsInitialized = -1;
         this.positions_ = emptyLongList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new RowIndexEntry();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private RowIndexEntry(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  int limit;
                  switch (tag) {
                     case 0:
                        done = true;
                        continue;
                     case 8:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.positions_ = newLongList();
                           mutable_bitField0_ |= 1;
                        }

                        this.positions_.addLong(input.readUInt64());
                        continue;
                     case 10:
                        int length = input.readRawVarint32();
                        limit = input.pushLimit(length);
                        if ((mutable_bitField0_ & 1) == 0 && input.getBytesUntilLimit() > 0) {
                           this.positions_ = newLongList();
                           mutable_bitField0_ |= 1;
                        }
                        break;
                     case 18:
                        ColumnStatistics.Builder subBuilder = null;
                        if ((this.bitField0_ & 1) != 0) {
                           subBuilder = this.statistics_.toBuilder();
                        }

                        this.statistics_ = (ColumnStatistics)input.readMessage(OrcProto.ColumnStatistics.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.statistics_);
                           this.statistics_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 1;
                        continue;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                        continue;
                  }

                  while(input.getBytesUntilLimit() > 0) {
                     this.positions_.addLong(input.readUInt64());
                  }

                  input.popLimit(limit);
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.positions_.makeImmutable();
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_RowIndexEntry_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_RowIndexEntry_fieldAccessorTable.ensureFieldAccessorsInitialized(RowIndexEntry.class, Builder.class);
      }

      public List getPositionsList() {
         return this.positions_;
      }

      public int getPositionsCount() {
         return this.positions_.size();
      }

      public long getPositions(int index) {
         return this.positions_.getLong(index);
      }

      public boolean hasStatistics() {
         return (this.bitField0_ & 1) != 0;
      }

      public ColumnStatistics getStatistics() {
         return this.statistics_ == null ? OrcProto.ColumnStatistics.getDefaultInstance() : this.statistics_;
      }

      public ColumnStatisticsOrBuilder getStatisticsOrBuilder() {
         return this.statistics_ == null ? OrcProto.ColumnStatistics.getDefaultInstance() : this.statistics_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if (this.getPositionsList().size() > 0) {
            output.writeUInt32NoTag(10);
            output.writeUInt32NoTag(this.positionsMemoizedSerializedSize);
         }

         for(int i = 0; i < this.positions_.size(); ++i) {
            output.writeUInt64NoTag(this.positions_.getLong(i));
         }

         if ((this.bitField0_ & 1) != 0) {
            output.writeMessage(2, this.getStatistics());
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            int dataSize = 0;

            for(int i = 0; i < this.positions_.size(); ++i) {
               dataSize += CodedOutputStream.computeUInt64SizeNoTag(this.positions_.getLong(i));
            }

            size += dataSize;
            if (!this.getPositionsList().isEmpty()) {
               ++size;
               size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
            }

            this.positionsMemoizedSerializedSize = dataSize;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeMessageSize(2, this.getStatistics());
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof RowIndexEntry)) {
            return super.equals(obj);
         } else {
            RowIndexEntry other = (RowIndexEntry)obj;
            if (!this.getPositionsList().equals(other.getPositionsList())) {
               return false;
            } else if (this.hasStatistics() != other.hasStatistics()) {
               return false;
            } else if (this.hasStatistics() && !this.getStatistics().equals(other.getStatistics())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getPositionsCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getPositionsList().hashCode();
            }

            if (this.hasStatistics()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getStatistics().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static RowIndexEntry parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (RowIndexEntry)PARSER.parseFrom(data);
      }

      public static RowIndexEntry parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (RowIndexEntry)PARSER.parseFrom(data, extensionRegistry);
      }

      public static RowIndexEntry parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (RowIndexEntry)PARSER.parseFrom(data);
      }

      public static RowIndexEntry parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (RowIndexEntry)PARSER.parseFrom(data, extensionRegistry);
      }

      public static RowIndexEntry parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (RowIndexEntry)PARSER.parseFrom(data);
      }

      public static RowIndexEntry parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (RowIndexEntry)PARSER.parseFrom(data, extensionRegistry);
      }

      public static RowIndexEntry parseFrom(InputStream input) throws IOException {
         return (RowIndexEntry)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static RowIndexEntry parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RowIndexEntry)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static RowIndexEntry parseDelimitedFrom(InputStream input) throws IOException {
         return (RowIndexEntry)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static RowIndexEntry parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RowIndexEntry)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static RowIndexEntry parseFrom(CodedInputStream input) throws IOException {
         return (RowIndexEntry)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static RowIndexEntry parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RowIndexEntry)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(RowIndexEntry prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static RowIndexEntry getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public RowIndexEntry getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements RowIndexEntryOrBuilder {
         private int bitField0_;
         private Internal.LongList positions_ = OrcProto.RowIndexEntry.emptyLongList();
         private ColumnStatistics statistics_;
         private SingleFieldBuilderV3 statisticsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_RowIndexEntry_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_RowIndexEntry_fieldAccessorTable.ensureFieldAccessorsInitialized(RowIndexEntry.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.RowIndexEntry.alwaysUseFieldBuilders) {
               this.getStatisticsFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            this.positions_ = OrcProto.RowIndexEntry.emptyLongList();
            this.bitField0_ &= -2;
            if (this.statisticsBuilder_ == null) {
               this.statistics_ = null;
            } else {
               this.statisticsBuilder_.clear();
            }

            this.bitField0_ &= -3;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_RowIndexEntry_descriptor;
         }

         public RowIndexEntry getDefaultInstanceForType() {
            return OrcProto.RowIndexEntry.getDefaultInstance();
         }

         public RowIndexEntry build() {
            RowIndexEntry result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public RowIndexEntry buildPartial() {
            RowIndexEntry result = new RowIndexEntry(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((this.bitField0_ & 1) != 0) {
               this.positions_.makeImmutable();
               this.bitField0_ &= -2;
            }

            result.positions_ = this.positions_;
            if ((from_bitField0_ & 2) != 0) {
               if (this.statisticsBuilder_ == null) {
                  result.statistics_ = this.statistics_;
               } else {
                  result.statistics_ = (ColumnStatistics)this.statisticsBuilder_.build();
               }

               to_bitField0_ |= 1;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof RowIndexEntry) {
               return this.mergeFrom((RowIndexEntry)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(RowIndexEntry other) {
            if (other == OrcProto.RowIndexEntry.getDefaultInstance()) {
               return this;
            } else {
               if (!other.positions_.isEmpty()) {
                  if (this.positions_.isEmpty()) {
                     this.positions_ = other.positions_;
                     this.bitField0_ &= -2;
                  } else {
                     this.ensurePositionsIsMutable();
                     this.positions_.addAll(other.positions_);
                  }

                  this.onChanged();
               }

               if (other.hasStatistics()) {
                  this.mergeStatistics(other.getStatistics());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            RowIndexEntry parsedMessage = null;

            try {
               parsedMessage = (RowIndexEntry)OrcProto.RowIndexEntry.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (RowIndexEntry)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensurePositionsIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.positions_ = OrcProto.RowIndexEntry.mutableCopy(this.positions_);
               this.bitField0_ |= 1;
            }

         }

         public List getPositionsList() {
            return (List)((this.bitField0_ & 1) != 0 ? Collections.unmodifiableList(this.positions_) : this.positions_);
         }

         public int getPositionsCount() {
            return this.positions_.size();
         }

         public long getPositions(int index) {
            return this.positions_.getLong(index);
         }

         public Builder setPositions(int index, long value) {
            this.ensurePositionsIsMutable();
            this.positions_.setLong(index, value);
            this.onChanged();
            return this;
         }

         public Builder addPositions(long value) {
            this.ensurePositionsIsMutable();
            this.positions_.addLong(value);
            this.onChanged();
            return this;
         }

         public Builder addAllPositions(Iterable values) {
            this.ensurePositionsIsMutable();
            AbstractMessageLite.Builder.addAll(values, (List)this.positions_);
            this.onChanged();
            return this;
         }

         public Builder clearPositions() {
            this.positions_ = OrcProto.RowIndexEntry.emptyLongList();
            this.bitField0_ &= -2;
            this.onChanged();
            return this;
         }

         public boolean hasStatistics() {
            return (this.bitField0_ & 2) != 0;
         }

         public ColumnStatistics getStatistics() {
            if (this.statisticsBuilder_ == null) {
               return this.statistics_ == null ? OrcProto.ColumnStatistics.getDefaultInstance() : this.statistics_;
            } else {
               return (ColumnStatistics)this.statisticsBuilder_.getMessage();
            }
         }

         public Builder setStatistics(ColumnStatistics value) {
            if (this.statisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.statistics_ = value;
               this.onChanged();
            } else {
               this.statisticsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 2;
            return this;
         }

         public Builder setStatistics(ColumnStatistics.Builder builderForValue) {
            if (this.statisticsBuilder_ == null) {
               this.statistics_ = builderForValue.build();
               this.onChanged();
            } else {
               this.statisticsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 2;
            return this;
         }

         public Builder mergeStatistics(ColumnStatistics value) {
            if (this.statisticsBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0 && this.statistics_ != null && this.statistics_ != OrcProto.ColumnStatistics.getDefaultInstance()) {
                  this.statistics_ = OrcProto.ColumnStatistics.newBuilder(this.statistics_).mergeFrom(value).buildPartial();
               } else {
                  this.statistics_ = value;
               }

               this.onChanged();
            } else {
               this.statisticsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 2;
            return this;
         }

         public Builder clearStatistics() {
            if (this.statisticsBuilder_ == null) {
               this.statistics_ = null;
               this.onChanged();
            } else {
               this.statisticsBuilder_.clear();
            }

            this.bitField0_ &= -3;
            return this;
         }

         public ColumnStatistics.Builder getStatisticsBuilder() {
            this.bitField0_ |= 2;
            this.onChanged();
            return (ColumnStatistics.Builder)this.getStatisticsFieldBuilder().getBuilder();
         }

         public ColumnStatisticsOrBuilder getStatisticsOrBuilder() {
            if (this.statisticsBuilder_ != null) {
               return (ColumnStatisticsOrBuilder)this.statisticsBuilder_.getMessageOrBuilder();
            } else {
               return this.statistics_ == null ? OrcProto.ColumnStatistics.getDefaultInstance() : this.statistics_;
            }
         }

         private SingleFieldBuilderV3 getStatisticsFieldBuilder() {
            if (this.statisticsBuilder_ == null) {
               this.statisticsBuilder_ = new SingleFieldBuilderV3(this.getStatistics(), this.getParentForChildren(), this.isClean());
               this.statistics_ = null;
            }

            return this.statisticsBuilder_;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class RowIndex extends GeneratedMessageV3 implements RowIndexOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int ENTRY_FIELD_NUMBER = 1;
      private List entry_;
      private byte memoizedIsInitialized;
      private static final RowIndex DEFAULT_INSTANCE = new RowIndex();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public RowIndex parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new RowIndex(input, extensionRegistry);
         }
      };

      private RowIndex(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private RowIndex() {
         this.memoizedIsInitialized = -1;
         this.entry_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new RowIndex();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private RowIndex(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.entry_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.entry_.add((RowIndexEntry)input.readMessage(OrcProto.RowIndexEntry.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.entry_ = Collections.unmodifiableList(this.entry_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_RowIndex_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_RowIndex_fieldAccessorTable.ensureFieldAccessorsInitialized(RowIndex.class, Builder.class);
      }

      public List getEntryList() {
         return this.entry_;
      }

      public List getEntryOrBuilderList() {
         return this.entry_;
      }

      public int getEntryCount() {
         return this.entry_.size();
      }

      public RowIndexEntry getEntry(int index) {
         return (RowIndexEntry)this.entry_.get(index);
      }

      public RowIndexEntryOrBuilder getEntryOrBuilder(int index) {
         return (RowIndexEntryOrBuilder)this.entry_.get(index);
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.entry_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.entry_.get(i));
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.entry_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.entry_.get(i));
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof RowIndex)) {
            return super.equals(obj);
         } else {
            RowIndex other = (RowIndex)obj;
            if (!this.getEntryList().equals(other.getEntryList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getEntryCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getEntryList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static RowIndex parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (RowIndex)PARSER.parseFrom(data);
      }

      public static RowIndex parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (RowIndex)PARSER.parseFrom(data, extensionRegistry);
      }

      public static RowIndex parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (RowIndex)PARSER.parseFrom(data);
      }

      public static RowIndex parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (RowIndex)PARSER.parseFrom(data, extensionRegistry);
      }

      public static RowIndex parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (RowIndex)PARSER.parseFrom(data);
      }

      public static RowIndex parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (RowIndex)PARSER.parseFrom(data, extensionRegistry);
      }

      public static RowIndex parseFrom(InputStream input) throws IOException {
         return (RowIndex)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static RowIndex parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RowIndex)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static RowIndex parseDelimitedFrom(InputStream input) throws IOException {
         return (RowIndex)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static RowIndex parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RowIndex)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static RowIndex parseFrom(CodedInputStream input) throws IOException {
         return (RowIndex)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static RowIndex parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RowIndex)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(RowIndex prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static RowIndex getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public RowIndex getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements RowIndexOrBuilder {
         private int bitField0_;
         private List entry_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 entryBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_RowIndex_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_RowIndex_fieldAccessorTable.ensureFieldAccessorsInitialized(RowIndex.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.RowIndex.alwaysUseFieldBuilders) {
               this.getEntryFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            if (this.entryBuilder_ == null) {
               this.entry_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.entryBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_RowIndex_descriptor;
         }

         public RowIndex getDefaultInstanceForType() {
            return OrcProto.RowIndex.getDefaultInstance();
         }

         public RowIndex build() {
            RowIndex result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public RowIndex buildPartial() {
            RowIndex result = new RowIndex(this);
            int from_bitField0_ = this.bitField0_;
            if (this.entryBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.entry_ = Collections.unmodifiableList(this.entry_);
                  this.bitField0_ &= -2;
               }

               result.entry_ = this.entry_;
            } else {
               result.entry_ = this.entryBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof RowIndex) {
               return this.mergeFrom((RowIndex)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(RowIndex other) {
            if (other == OrcProto.RowIndex.getDefaultInstance()) {
               return this;
            } else {
               if (this.entryBuilder_ == null) {
                  if (!other.entry_.isEmpty()) {
                     if (this.entry_.isEmpty()) {
                        this.entry_ = other.entry_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureEntryIsMutable();
                        this.entry_.addAll(other.entry_);
                     }

                     this.onChanged();
                  }
               } else if (!other.entry_.isEmpty()) {
                  if (this.entryBuilder_.isEmpty()) {
                     this.entryBuilder_.dispose();
                     this.entryBuilder_ = null;
                     this.entry_ = other.entry_;
                     this.bitField0_ &= -2;
                     this.entryBuilder_ = OrcProto.RowIndex.alwaysUseFieldBuilders ? this.getEntryFieldBuilder() : null;
                  } else {
                     this.entryBuilder_.addAllMessages(other.entry_);
                  }
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            RowIndex parsedMessage = null;

            try {
               parsedMessage = (RowIndex)OrcProto.RowIndex.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (RowIndex)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureEntryIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.entry_ = new ArrayList(this.entry_);
               this.bitField0_ |= 1;
            }

         }

         public List getEntryList() {
            return this.entryBuilder_ == null ? Collections.unmodifiableList(this.entry_) : this.entryBuilder_.getMessageList();
         }

         public int getEntryCount() {
            return this.entryBuilder_ == null ? this.entry_.size() : this.entryBuilder_.getCount();
         }

         public RowIndexEntry getEntry(int index) {
            return this.entryBuilder_ == null ? (RowIndexEntry)this.entry_.get(index) : (RowIndexEntry)this.entryBuilder_.getMessage(index);
         }

         public Builder setEntry(int index, RowIndexEntry value) {
            if (this.entryBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEntryIsMutable();
               this.entry_.set(index, value);
               this.onChanged();
            } else {
               this.entryBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setEntry(int index, RowIndexEntry.Builder builderForValue) {
            if (this.entryBuilder_ == null) {
               this.ensureEntryIsMutable();
               this.entry_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.entryBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addEntry(RowIndexEntry value) {
            if (this.entryBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEntryIsMutable();
               this.entry_.add(value);
               this.onChanged();
            } else {
               this.entryBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addEntry(int index, RowIndexEntry value) {
            if (this.entryBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEntryIsMutable();
               this.entry_.add(index, value);
               this.onChanged();
            } else {
               this.entryBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addEntry(RowIndexEntry.Builder builderForValue) {
            if (this.entryBuilder_ == null) {
               this.ensureEntryIsMutable();
               this.entry_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.entryBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addEntry(int index, RowIndexEntry.Builder builderForValue) {
            if (this.entryBuilder_ == null) {
               this.ensureEntryIsMutable();
               this.entry_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.entryBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllEntry(Iterable values) {
            if (this.entryBuilder_ == null) {
               this.ensureEntryIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.entry_);
               this.onChanged();
            } else {
               this.entryBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearEntry() {
            if (this.entryBuilder_ == null) {
               this.entry_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.entryBuilder_.clear();
            }

            return this;
         }

         public Builder removeEntry(int index) {
            if (this.entryBuilder_ == null) {
               this.ensureEntryIsMutable();
               this.entry_.remove(index);
               this.onChanged();
            } else {
               this.entryBuilder_.remove(index);
            }

            return this;
         }

         public RowIndexEntry.Builder getEntryBuilder(int index) {
            return (RowIndexEntry.Builder)this.getEntryFieldBuilder().getBuilder(index);
         }

         public RowIndexEntryOrBuilder getEntryOrBuilder(int index) {
            return this.entryBuilder_ == null ? (RowIndexEntryOrBuilder)this.entry_.get(index) : (RowIndexEntryOrBuilder)this.entryBuilder_.getMessageOrBuilder(index);
         }

         public List getEntryOrBuilderList() {
            return this.entryBuilder_ != null ? this.entryBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.entry_);
         }

         public RowIndexEntry.Builder addEntryBuilder() {
            return (RowIndexEntry.Builder)this.getEntryFieldBuilder().addBuilder(OrcProto.RowIndexEntry.getDefaultInstance());
         }

         public RowIndexEntry.Builder addEntryBuilder(int index) {
            return (RowIndexEntry.Builder)this.getEntryFieldBuilder().addBuilder(index, OrcProto.RowIndexEntry.getDefaultInstance());
         }

         public List getEntryBuilderList() {
            return this.getEntryFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getEntryFieldBuilder() {
            if (this.entryBuilder_ == null) {
               this.entryBuilder_ = new RepeatedFieldBuilderV3(this.entry_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.entry_ = null;
            }

            return this.entryBuilder_;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class BloomFilter extends GeneratedMessageV3 implements BloomFilterOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NUM_HASH_FUNCTIONS_FIELD_NUMBER = 1;
      private int numHashFunctions_;
      public static final int BITSET_FIELD_NUMBER = 2;
      private Internal.LongList bitset_;
      public static final int UTF8BITSET_FIELD_NUMBER = 3;
      private ByteString utf8Bitset_;
      private byte memoizedIsInitialized;
      private static final BloomFilter DEFAULT_INSTANCE = new BloomFilter();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public BloomFilter parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new BloomFilter(input, extensionRegistry);
         }
      };

      private BloomFilter(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private BloomFilter() {
         this.memoizedIsInitialized = -1;
         this.bitset_ = emptyLongList();
         this.utf8Bitset_ = ByteString.EMPTY;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new BloomFilter();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private BloomFilter(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  int limit;
                  switch (tag) {
                     case 0:
                        done = true;
                        continue;
                     case 8:
                        this.bitField0_ |= 1;
                        this.numHashFunctions_ = input.readUInt32();
                        continue;
                     case 17:
                        if ((mutable_bitField0_ & 2) == 0) {
                           this.bitset_ = newLongList();
                           mutable_bitField0_ |= 2;
                        }

                        this.bitset_.addLong(input.readFixed64());
                        continue;
                     case 18:
                        int length = input.readRawVarint32();
                        limit = input.pushLimit(length);
                        if ((mutable_bitField0_ & 2) == 0 && input.getBytesUntilLimit() > 0) {
                           this.bitset_ = newLongList();
                           mutable_bitField0_ |= 2;
                        }
                        break;
                     case 26:
                        this.bitField0_ |= 2;
                        this.utf8Bitset_ = input.readBytes();
                        continue;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                        continue;
                  }

                  while(input.getBytesUntilLimit() > 0) {
                     this.bitset_.addLong(input.readFixed64());
                  }

                  input.popLimit(limit);
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 2) != 0) {
                  this.bitset_.makeImmutable();
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_BloomFilter_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_BloomFilter_fieldAccessorTable.ensureFieldAccessorsInitialized(BloomFilter.class, Builder.class);
      }

      public boolean hasNumHashFunctions() {
         return (this.bitField0_ & 1) != 0;
      }

      public int getNumHashFunctions() {
         return this.numHashFunctions_;
      }

      public List getBitsetList() {
         return this.bitset_;
      }

      public int getBitsetCount() {
         return this.bitset_.size();
      }

      public long getBitset(int index) {
         return this.bitset_.getLong(index);
      }

      public boolean hasUtf8Bitset() {
         return (this.bitField0_ & 2) != 0;
      }

      public ByteString getUtf8Bitset() {
         return this.utf8Bitset_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeUInt32(1, this.numHashFunctions_);
         }

         for(int i = 0; i < this.bitset_.size(); ++i) {
            output.writeFixed64(2, this.bitset_.getLong(i));
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeBytes(3, this.utf8Bitset_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeUInt32Size(1, this.numHashFunctions_);
            }

            int dataSize = 0;
            dataSize = 8 * this.getBitsetList().size();
            size += dataSize;
            size += 1 * this.getBitsetList().size();
            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeBytesSize(3, this.utf8Bitset_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof BloomFilter)) {
            return super.equals(obj);
         } else {
            BloomFilter other = (BloomFilter)obj;
            if (this.hasNumHashFunctions() != other.hasNumHashFunctions()) {
               return false;
            } else if (this.hasNumHashFunctions() && this.getNumHashFunctions() != other.getNumHashFunctions()) {
               return false;
            } else if (!this.getBitsetList().equals(other.getBitsetList())) {
               return false;
            } else if (this.hasUtf8Bitset() != other.hasUtf8Bitset()) {
               return false;
            } else if (this.hasUtf8Bitset() && !this.getUtf8Bitset().equals(other.getUtf8Bitset())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasNumHashFunctions()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getNumHashFunctions();
            }

            if (this.getBitsetCount() > 0) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getBitsetList().hashCode();
            }

            if (this.hasUtf8Bitset()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getUtf8Bitset().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static BloomFilter parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (BloomFilter)PARSER.parseFrom(data);
      }

      public static BloomFilter parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BloomFilter)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BloomFilter parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (BloomFilter)PARSER.parseFrom(data);
      }

      public static BloomFilter parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BloomFilter)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BloomFilter parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (BloomFilter)PARSER.parseFrom(data);
      }

      public static BloomFilter parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BloomFilter)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BloomFilter parseFrom(InputStream input) throws IOException {
         return (BloomFilter)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static BloomFilter parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BloomFilter)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static BloomFilter parseDelimitedFrom(InputStream input) throws IOException {
         return (BloomFilter)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static BloomFilter parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BloomFilter)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static BloomFilter parseFrom(CodedInputStream input) throws IOException {
         return (BloomFilter)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static BloomFilter parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BloomFilter)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(BloomFilter prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static BloomFilter getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public BloomFilter getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements BloomFilterOrBuilder {
         private int bitField0_;
         private int numHashFunctions_;
         private Internal.LongList bitset_ = OrcProto.BloomFilter.emptyLongList();
         private ByteString utf8Bitset_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_BloomFilter_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_BloomFilter_fieldAccessorTable.ensureFieldAccessorsInitialized(BloomFilter.class, Builder.class);
         }

         private Builder() {
            this.utf8Bitset_ = ByteString.EMPTY;
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.utf8Bitset_ = ByteString.EMPTY;
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.BloomFilter.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.numHashFunctions_ = 0;
            this.bitField0_ &= -2;
            this.bitset_ = OrcProto.BloomFilter.emptyLongList();
            this.bitField0_ &= -3;
            this.utf8Bitset_ = ByteString.EMPTY;
            this.bitField0_ &= -5;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_BloomFilter_descriptor;
         }

         public BloomFilter getDefaultInstanceForType() {
            return OrcProto.BloomFilter.getDefaultInstance();
         }

         public BloomFilter build() {
            BloomFilter result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public BloomFilter buildPartial() {
            BloomFilter result = new BloomFilter(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.numHashFunctions_ = this.numHashFunctions_;
               to_bitField0_ |= 1;
            }

            if ((this.bitField0_ & 2) != 0) {
               this.bitset_.makeImmutable();
               this.bitField0_ &= -3;
            }

            result.bitset_ = this.bitset_;
            if ((from_bitField0_ & 4) != 0) {
               to_bitField0_ |= 2;
            }

            result.utf8Bitset_ = this.utf8Bitset_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof BloomFilter) {
               return this.mergeFrom((BloomFilter)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(BloomFilter other) {
            if (other == OrcProto.BloomFilter.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasNumHashFunctions()) {
                  this.setNumHashFunctions(other.getNumHashFunctions());
               }

               if (!other.bitset_.isEmpty()) {
                  if (this.bitset_.isEmpty()) {
                     this.bitset_ = other.bitset_;
                     this.bitField0_ &= -3;
                  } else {
                     this.ensureBitsetIsMutable();
                     this.bitset_.addAll(other.bitset_);
                  }

                  this.onChanged();
               }

               if (other.hasUtf8Bitset()) {
                  this.setUtf8Bitset(other.getUtf8Bitset());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            BloomFilter parsedMessage = null;

            try {
               parsedMessage = (BloomFilter)OrcProto.BloomFilter.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (BloomFilter)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasNumHashFunctions() {
            return (this.bitField0_ & 1) != 0;
         }

         public int getNumHashFunctions() {
            return this.numHashFunctions_;
         }

         public Builder setNumHashFunctions(int value) {
            this.bitField0_ |= 1;
            this.numHashFunctions_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearNumHashFunctions() {
            this.bitField0_ &= -2;
            this.numHashFunctions_ = 0;
            this.onChanged();
            return this;
         }

         private void ensureBitsetIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.bitset_ = OrcProto.BloomFilter.mutableCopy(this.bitset_);
               this.bitField0_ |= 2;
            }

         }

         public List getBitsetList() {
            return (List)((this.bitField0_ & 2) != 0 ? Collections.unmodifiableList(this.bitset_) : this.bitset_);
         }

         public int getBitsetCount() {
            return this.bitset_.size();
         }

         public long getBitset(int index) {
            return this.bitset_.getLong(index);
         }

         public Builder setBitset(int index, long value) {
            this.ensureBitsetIsMutable();
            this.bitset_.setLong(index, value);
            this.onChanged();
            return this;
         }

         public Builder addBitset(long value) {
            this.ensureBitsetIsMutable();
            this.bitset_.addLong(value);
            this.onChanged();
            return this;
         }

         public Builder addAllBitset(Iterable values) {
            this.ensureBitsetIsMutable();
            AbstractMessageLite.Builder.addAll(values, (List)this.bitset_);
            this.onChanged();
            return this;
         }

         public Builder clearBitset() {
            this.bitset_ = OrcProto.BloomFilter.emptyLongList();
            this.bitField0_ &= -3;
            this.onChanged();
            return this;
         }

         public boolean hasUtf8Bitset() {
            return (this.bitField0_ & 4) != 0;
         }

         public ByteString getUtf8Bitset() {
            return this.utf8Bitset_;
         }

         public Builder setUtf8Bitset(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.utf8Bitset_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearUtf8Bitset() {
            this.bitField0_ &= -5;
            this.utf8Bitset_ = OrcProto.BloomFilter.getDefaultInstance().getUtf8Bitset();
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class BloomFilterIndex extends GeneratedMessageV3 implements BloomFilterIndexOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int BLOOM_FILTER_FIELD_NUMBER = 1;
      private List bloomFilter_;
      private byte memoizedIsInitialized;
      private static final BloomFilterIndex DEFAULT_INSTANCE = new BloomFilterIndex();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public BloomFilterIndex parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new BloomFilterIndex(input, extensionRegistry);
         }
      };

      private BloomFilterIndex(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private BloomFilterIndex() {
         this.memoizedIsInitialized = -1;
         this.bloomFilter_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new BloomFilterIndex();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private BloomFilterIndex(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.bloomFilter_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.bloomFilter_.add((BloomFilter)input.readMessage(OrcProto.BloomFilter.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.bloomFilter_ = Collections.unmodifiableList(this.bloomFilter_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_BloomFilterIndex_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_BloomFilterIndex_fieldAccessorTable.ensureFieldAccessorsInitialized(BloomFilterIndex.class, Builder.class);
      }

      public List getBloomFilterList() {
         return this.bloomFilter_;
      }

      public List getBloomFilterOrBuilderList() {
         return this.bloomFilter_;
      }

      public int getBloomFilterCount() {
         return this.bloomFilter_.size();
      }

      public BloomFilter getBloomFilter(int index) {
         return (BloomFilter)this.bloomFilter_.get(index);
      }

      public BloomFilterOrBuilder getBloomFilterOrBuilder(int index) {
         return (BloomFilterOrBuilder)this.bloomFilter_.get(index);
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.bloomFilter_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.bloomFilter_.get(i));
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.bloomFilter_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.bloomFilter_.get(i));
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof BloomFilterIndex)) {
            return super.equals(obj);
         } else {
            BloomFilterIndex other = (BloomFilterIndex)obj;
            if (!this.getBloomFilterList().equals(other.getBloomFilterList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getBloomFilterCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getBloomFilterList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static BloomFilterIndex parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (BloomFilterIndex)PARSER.parseFrom(data);
      }

      public static BloomFilterIndex parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BloomFilterIndex)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BloomFilterIndex parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (BloomFilterIndex)PARSER.parseFrom(data);
      }

      public static BloomFilterIndex parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BloomFilterIndex)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BloomFilterIndex parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (BloomFilterIndex)PARSER.parseFrom(data);
      }

      public static BloomFilterIndex parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (BloomFilterIndex)PARSER.parseFrom(data, extensionRegistry);
      }

      public static BloomFilterIndex parseFrom(InputStream input) throws IOException {
         return (BloomFilterIndex)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static BloomFilterIndex parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BloomFilterIndex)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static BloomFilterIndex parseDelimitedFrom(InputStream input) throws IOException {
         return (BloomFilterIndex)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static BloomFilterIndex parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BloomFilterIndex)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static BloomFilterIndex parseFrom(CodedInputStream input) throws IOException {
         return (BloomFilterIndex)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static BloomFilterIndex parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (BloomFilterIndex)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(BloomFilterIndex prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static BloomFilterIndex getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public BloomFilterIndex getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements BloomFilterIndexOrBuilder {
         private int bitField0_;
         private List bloomFilter_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 bloomFilterBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_BloomFilterIndex_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_BloomFilterIndex_fieldAccessorTable.ensureFieldAccessorsInitialized(BloomFilterIndex.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.BloomFilterIndex.alwaysUseFieldBuilders) {
               this.getBloomFilterFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            if (this.bloomFilterBuilder_ == null) {
               this.bloomFilter_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.bloomFilterBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_BloomFilterIndex_descriptor;
         }

         public BloomFilterIndex getDefaultInstanceForType() {
            return OrcProto.BloomFilterIndex.getDefaultInstance();
         }

         public BloomFilterIndex build() {
            BloomFilterIndex result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public BloomFilterIndex buildPartial() {
            BloomFilterIndex result = new BloomFilterIndex(this);
            int from_bitField0_ = this.bitField0_;
            if (this.bloomFilterBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.bloomFilter_ = Collections.unmodifiableList(this.bloomFilter_);
                  this.bitField0_ &= -2;
               }

               result.bloomFilter_ = this.bloomFilter_;
            } else {
               result.bloomFilter_ = this.bloomFilterBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof BloomFilterIndex) {
               return this.mergeFrom((BloomFilterIndex)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(BloomFilterIndex other) {
            if (other == OrcProto.BloomFilterIndex.getDefaultInstance()) {
               return this;
            } else {
               if (this.bloomFilterBuilder_ == null) {
                  if (!other.bloomFilter_.isEmpty()) {
                     if (this.bloomFilter_.isEmpty()) {
                        this.bloomFilter_ = other.bloomFilter_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureBloomFilterIsMutable();
                        this.bloomFilter_.addAll(other.bloomFilter_);
                     }

                     this.onChanged();
                  }
               } else if (!other.bloomFilter_.isEmpty()) {
                  if (this.bloomFilterBuilder_.isEmpty()) {
                     this.bloomFilterBuilder_.dispose();
                     this.bloomFilterBuilder_ = null;
                     this.bloomFilter_ = other.bloomFilter_;
                     this.bitField0_ &= -2;
                     this.bloomFilterBuilder_ = OrcProto.BloomFilterIndex.alwaysUseFieldBuilders ? this.getBloomFilterFieldBuilder() : null;
                  } else {
                     this.bloomFilterBuilder_.addAllMessages(other.bloomFilter_);
                  }
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            BloomFilterIndex parsedMessage = null;

            try {
               parsedMessage = (BloomFilterIndex)OrcProto.BloomFilterIndex.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (BloomFilterIndex)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureBloomFilterIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.bloomFilter_ = new ArrayList(this.bloomFilter_);
               this.bitField0_ |= 1;
            }

         }

         public List getBloomFilterList() {
            return this.bloomFilterBuilder_ == null ? Collections.unmodifiableList(this.bloomFilter_) : this.bloomFilterBuilder_.getMessageList();
         }

         public int getBloomFilterCount() {
            return this.bloomFilterBuilder_ == null ? this.bloomFilter_.size() : this.bloomFilterBuilder_.getCount();
         }

         public BloomFilter getBloomFilter(int index) {
            return this.bloomFilterBuilder_ == null ? (BloomFilter)this.bloomFilter_.get(index) : (BloomFilter)this.bloomFilterBuilder_.getMessage(index);
         }

         public Builder setBloomFilter(int index, BloomFilter value) {
            if (this.bloomFilterBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureBloomFilterIsMutable();
               this.bloomFilter_.set(index, value);
               this.onChanged();
            } else {
               this.bloomFilterBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setBloomFilter(int index, BloomFilter.Builder builderForValue) {
            if (this.bloomFilterBuilder_ == null) {
               this.ensureBloomFilterIsMutable();
               this.bloomFilter_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.bloomFilterBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addBloomFilter(BloomFilter value) {
            if (this.bloomFilterBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureBloomFilterIsMutable();
               this.bloomFilter_.add(value);
               this.onChanged();
            } else {
               this.bloomFilterBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addBloomFilter(int index, BloomFilter value) {
            if (this.bloomFilterBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureBloomFilterIsMutable();
               this.bloomFilter_.add(index, value);
               this.onChanged();
            } else {
               this.bloomFilterBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addBloomFilter(BloomFilter.Builder builderForValue) {
            if (this.bloomFilterBuilder_ == null) {
               this.ensureBloomFilterIsMutable();
               this.bloomFilter_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.bloomFilterBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addBloomFilter(int index, BloomFilter.Builder builderForValue) {
            if (this.bloomFilterBuilder_ == null) {
               this.ensureBloomFilterIsMutable();
               this.bloomFilter_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.bloomFilterBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllBloomFilter(Iterable values) {
            if (this.bloomFilterBuilder_ == null) {
               this.ensureBloomFilterIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.bloomFilter_);
               this.onChanged();
            } else {
               this.bloomFilterBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearBloomFilter() {
            if (this.bloomFilterBuilder_ == null) {
               this.bloomFilter_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.bloomFilterBuilder_.clear();
            }

            return this;
         }

         public Builder removeBloomFilter(int index) {
            if (this.bloomFilterBuilder_ == null) {
               this.ensureBloomFilterIsMutable();
               this.bloomFilter_.remove(index);
               this.onChanged();
            } else {
               this.bloomFilterBuilder_.remove(index);
            }

            return this;
         }

         public BloomFilter.Builder getBloomFilterBuilder(int index) {
            return (BloomFilter.Builder)this.getBloomFilterFieldBuilder().getBuilder(index);
         }

         public BloomFilterOrBuilder getBloomFilterOrBuilder(int index) {
            return this.bloomFilterBuilder_ == null ? (BloomFilterOrBuilder)this.bloomFilter_.get(index) : (BloomFilterOrBuilder)this.bloomFilterBuilder_.getMessageOrBuilder(index);
         }

         public List getBloomFilterOrBuilderList() {
            return this.bloomFilterBuilder_ != null ? this.bloomFilterBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.bloomFilter_);
         }

         public BloomFilter.Builder addBloomFilterBuilder() {
            return (BloomFilter.Builder)this.getBloomFilterFieldBuilder().addBuilder(OrcProto.BloomFilter.getDefaultInstance());
         }

         public BloomFilter.Builder addBloomFilterBuilder(int index) {
            return (BloomFilter.Builder)this.getBloomFilterFieldBuilder().addBuilder(index, OrcProto.BloomFilter.getDefaultInstance());
         }

         public List getBloomFilterBuilderList() {
            return this.getBloomFilterFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getBloomFilterFieldBuilder() {
            if (this.bloomFilterBuilder_ == null) {
               this.bloomFilterBuilder_ = new RepeatedFieldBuilderV3(this.bloomFilter_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.bloomFilter_ = null;
            }

            return this.bloomFilterBuilder_;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class Stream extends GeneratedMessageV3 implements StreamOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int KIND_FIELD_NUMBER = 1;
      private int kind_;
      public static final int COLUMN_FIELD_NUMBER = 2;
      private int column_;
      public static final int LENGTH_FIELD_NUMBER = 3;
      private long length_;
      private byte memoizedIsInitialized;
      private static final Stream DEFAULT_INSTANCE = new Stream();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public Stream parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new Stream(input, extensionRegistry);
         }
      };

      private Stream(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private Stream() {
         this.memoizedIsInitialized = -1;
         this.kind_ = 0;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new Stream();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private Stream(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        int rawValue = input.readEnum();
                        Kind value = OrcProto.Stream.Kind.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(1, rawValue);
                        } else {
                           this.bitField0_ |= 1;
                           this.kind_ = rawValue;
                        }
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.column_ = input.readUInt32();
                        break;
                     case 24:
                        this.bitField0_ |= 4;
                        this.length_ = input.readUInt64();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_Stream_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_Stream_fieldAccessorTable.ensureFieldAccessorsInitialized(Stream.class, Builder.class);
      }

      public boolean hasKind() {
         return (this.bitField0_ & 1) != 0;
      }

      public Kind getKind() {
         Kind result = OrcProto.Stream.Kind.valueOf(this.kind_);
         return result == null ? OrcProto.Stream.Kind.PRESENT : result;
      }

      public boolean hasColumn() {
         return (this.bitField0_ & 2) != 0;
      }

      public int getColumn() {
         return this.column_;
      }

      public boolean hasLength() {
         return (this.bitField0_ & 4) != 0;
      }

      public long getLength() {
         return this.length_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeEnum(1, this.kind_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeUInt32(2, this.column_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeUInt64(3, this.length_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeEnumSize(1, this.kind_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeUInt32Size(2, this.column_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeUInt64Size(3, this.length_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof Stream)) {
            return super.equals(obj);
         } else {
            Stream other = (Stream)obj;
            if (this.hasKind() != other.hasKind()) {
               return false;
            } else if (this.hasKind() && this.kind_ != other.kind_) {
               return false;
            } else if (this.hasColumn() != other.hasColumn()) {
               return false;
            } else if (this.hasColumn() && this.getColumn() != other.getColumn()) {
               return false;
            } else if (this.hasLength() != other.hasLength()) {
               return false;
            } else if (this.hasLength() && this.getLength() != other.getLength()) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasKind()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.kind_;
            }

            if (this.hasColumn()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getColumn();
            }

            if (this.hasLength()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashLong(this.getLength());
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static Stream parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (Stream)PARSER.parseFrom(data);
      }

      public static Stream parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Stream)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Stream parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (Stream)PARSER.parseFrom(data);
      }

      public static Stream parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Stream)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Stream parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (Stream)PARSER.parseFrom(data);
      }

      public static Stream parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Stream)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Stream parseFrom(InputStream input) throws IOException {
         return (Stream)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static Stream parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Stream)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static Stream parseDelimitedFrom(InputStream input) throws IOException {
         return (Stream)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static Stream parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Stream)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static Stream parseFrom(CodedInputStream input) throws IOException {
         return (Stream)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static Stream parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Stream)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(Stream prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static Stream getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public Stream getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static enum Kind implements ProtocolMessageEnum {
         PRESENT(0),
         DATA(1),
         LENGTH(2),
         DICTIONARY_DATA(3),
         DICTIONARY_COUNT(4),
         SECONDARY(5),
         ROW_INDEX(6),
         BLOOM_FILTER(7),
         BLOOM_FILTER_UTF8(8),
         ENCRYPTED_INDEX(9),
         ENCRYPTED_DATA(10),
         STRIPE_STATISTICS(100),
         FILE_STATISTICS(101);

         public static final int PRESENT_VALUE = 0;
         public static final int DATA_VALUE = 1;
         public static final int LENGTH_VALUE = 2;
         public static final int DICTIONARY_DATA_VALUE = 3;
         public static final int DICTIONARY_COUNT_VALUE = 4;
         public static final int SECONDARY_VALUE = 5;
         public static final int ROW_INDEX_VALUE = 6;
         public static final int BLOOM_FILTER_VALUE = 7;
         public static final int BLOOM_FILTER_UTF8_VALUE = 8;
         public static final int ENCRYPTED_INDEX_VALUE = 9;
         public static final int ENCRYPTED_DATA_VALUE = 10;
         public static final int STRIPE_STATISTICS_VALUE = 100;
         public static final int FILE_STATISTICS_VALUE = 101;
         private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
            public Kind findValueByNumber(int number) {
               return OrcProto.Stream.Kind.forNumber(number);
            }
         };
         private static final Kind[] VALUES = values();
         private final int value;

         public final int getNumber() {
            return this.value;
         }

         /** @deprecated */
         @Deprecated
         public static Kind valueOf(int value) {
            return forNumber(value);
         }

         public static Kind forNumber(int value) {
            switch (value) {
               case 0 -> {
                  return PRESENT;
               }
               case 1 -> {
                  return DATA;
               }
               case 2 -> {
                  return LENGTH;
               }
               case 3 -> {
                  return DICTIONARY_DATA;
               }
               case 4 -> {
                  return DICTIONARY_COUNT;
               }
               case 5 -> {
                  return SECONDARY;
               }
               case 6 -> {
                  return ROW_INDEX;
               }
               case 7 -> {
                  return BLOOM_FILTER;
               }
               case 8 -> {
                  return BLOOM_FILTER_UTF8;
               }
               case 9 -> {
                  return ENCRYPTED_INDEX;
               }
               case 10 -> {
                  return ENCRYPTED_DATA;
               }
               case 100 -> {
                  return STRIPE_STATISTICS;
               }
               case 101 -> {
                  return FILE_STATISTICS;
               }
               default -> {
                  return null;
               }
            }
         }

         public static Internal.EnumLiteMap internalGetValueMap() {
            return internalValueMap;
         }

         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)OrcProto.Stream.getDescriptor().getEnumTypes().get(0);
         }

         public static Kind valueOf(Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[desc.getIndex()];
            }
         }

         private Kind(int value) {
            this.value = value;
         }

         // $FF: synthetic method
         private static Kind[] $values() {
            return new Kind[]{PRESENT, DATA, LENGTH, DICTIONARY_DATA, DICTIONARY_COUNT, SECONDARY, ROW_INDEX, BLOOM_FILTER, BLOOM_FILTER_UTF8, ENCRYPTED_INDEX, ENCRYPTED_DATA, STRIPE_STATISTICS, FILE_STATISTICS};
         }
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements StreamOrBuilder {
         private int bitField0_;
         private int kind_ = 0;
         private int column_;
         private long length_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_Stream_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_Stream_fieldAccessorTable.ensureFieldAccessorsInitialized(Stream.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.Stream.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.kind_ = 0;
            this.bitField0_ &= -2;
            this.column_ = 0;
            this.bitField0_ &= -3;
            this.length_ = 0L;
            this.bitField0_ &= -5;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_Stream_descriptor;
         }

         public Stream getDefaultInstanceForType() {
            return OrcProto.Stream.getDefaultInstance();
         }

         public Stream build() {
            Stream result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public Stream buildPartial() {
            Stream result = new Stream(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.kind_ = this.kind_;
            if ((from_bitField0_ & 2) != 0) {
               result.column_ = this.column_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               result.length_ = this.length_;
               to_bitField0_ |= 4;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof Stream) {
               return this.mergeFrom((Stream)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(Stream other) {
            if (other == OrcProto.Stream.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasKind()) {
                  this.setKind(other.getKind());
               }

               if (other.hasColumn()) {
                  this.setColumn(other.getColumn());
               }

               if (other.hasLength()) {
                  this.setLength(other.getLength());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            Stream parsedMessage = null;

            try {
               parsedMessage = (Stream)OrcProto.Stream.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (Stream)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasKind() {
            return (this.bitField0_ & 1) != 0;
         }

         public Kind getKind() {
            Kind result = OrcProto.Stream.Kind.valueOf(this.kind_);
            return result == null ? OrcProto.Stream.Kind.PRESENT : result;
         }

         public Builder setKind(Kind value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.kind_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public Builder clearKind() {
            this.bitField0_ &= -2;
            this.kind_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasColumn() {
            return (this.bitField0_ & 2) != 0;
         }

         public int getColumn() {
            return this.column_;
         }

         public Builder setColumn(int value) {
            this.bitField0_ |= 2;
            this.column_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearColumn() {
            this.bitField0_ &= -3;
            this.column_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasLength() {
            return (this.bitField0_ & 4) != 0;
         }

         public long getLength() {
            return this.length_;
         }

         public Builder setLength(long value) {
            this.bitField0_ |= 4;
            this.length_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearLength() {
            this.bitField0_ &= -5;
            this.length_ = 0L;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class ColumnEncoding extends GeneratedMessageV3 implements ColumnEncodingOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int KIND_FIELD_NUMBER = 1;
      private int kind_;
      public static final int DICTIONARY_SIZE_FIELD_NUMBER = 2;
      private int dictionarySize_;
      public static final int BLOOM_ENCODING_FIELD_NUMBER = 3;
      private int bloomEncoding_;
      private byte memoizedIsInitialized;
      private static final ColumnEncoding DEFAULT_INSTANCE = new ColumnEncoding();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public ColumnEncoding parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new ColumnEncoding(input, extensionRegistry);
         }
      };

      private ColumnEncoding(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private ColumnEncoding() {
         this.memoizedIsInitialized = -1;
         this.kind_ = 0;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new ColumnEncoding();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private ColumnEncoding(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        int rawValue = input.readEnum();
                        Kind value = OrcProto.ColumnEncoding.Kind.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(1, rawValue);
                        } else {
                           this.bitField0_ |= 1;
                           this.kind_ = rawValue;
                        }
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.dictionarySize_ = input.readUInt32();
                        break;
                     case 24:
                        this.bitField0_ |= 4;
                        this.bloomEncoding_ = input.readUInt32();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_ColumnEncoding_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_ColumnEncoding_fieldAccessorTable.ensureFieldAccessorsInitialized(ColumnEncoding.class, Builder.class);
      }

      public boolean hasKind() {
         return (this.bitField0_ & 1) != 0;
      }

      public Kind getKind() {
         Kind result = OrcProto.ColumnEncoding.Kind.valueOf(this.kind_);
         return result == null ? OrcProto.ColumnEncoding.Kind.DIRECT : result;
      }

      public boolean hasDictionarySize() {
         return (this.bitField0_ & 2) != 0;
      }

      public int getDictionarySize() {
         return this.dictionarySize_;
      }

      public boolean hasBloomEncoding() {
         return (this.bitField0_ & 4) != 0;
      }

      public int getBloomEncoding() {
         return this.bloomEncoding_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeEnum(1, this.kind_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeUInt32(2, this.dictionarySize_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeUInt32(3, this.bloomEncoding_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeEnumSize(1, this.kind_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeUInt32Size(2, this.dictionarySize_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeUInt32Size(3, this.bloomEncoding_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof ColumnEncoding)) {
            return super.equals(obj);
         } else {
            ColumnEncoding other = (ColumnEncoding)obj;
            if (this.hasKind() != other.hasKind()) {
               return false;
            } else if (this.hasKind() && this.kind_ != other.kind_) {
               return false;
            } else if (this.hasDictionarySize() != other.hasDictionarySize()) {
               return false;
            } else if (this.hasDictionarySize() && this.getDictionarySize() != other.getDictionarySize()) {
               return false;
            } else if (this.hasBloomEncoding() != other.hasBloomEncoding()) {
               return false;
            } else if (this.hasBloomEncoding() && this.getBloomEncoding() != other.getBloomEncoding()) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasKind()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.kind_;
            }

            if (this.hasDictionarySize()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getDictionarySize();
            }

            if (this.hasBloomEncoding()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getBloomEncoding();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static ColumnEncoding parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (ColumnEncoding)PARSER.parseFrom(data);
      }

      public static ColumnEncoding parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ColumnEncoding)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ColumnEncoding parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (ColumnEncoding)PARSER.parseFrom(data);
      }

      public static ColumnEncoding parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ColumnEncoding)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ColumnEncoding parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (ColumnEncoding)PARSER.parseFrom(data);
      }

      public static ColumnEncoding parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ColumnEncoding)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ColumnEncoding parseFrom(InputStream input) throws IOException {
         return (ColumnEncoding)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static ColumnEncoding parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ColumnEncoding)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static ColumnEncoding parseDelimitedFrom(InputStream input) throws IOException {
         return (ColumnEncoding)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static ColumnEncoding parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ColumnEncoding)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static ColumnEncoding parseFrom(CodedInputStream input) throws IOException {
         return (ColumnEncoding)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static ColumnEncoding parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ColumnEncoding)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(ColumnEncoding prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static ColumnEncoding getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public ColumnEncoding getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static enum Kind implements ProtocolMessageEnum {
         DIRECT(0),
         DICTIONARY(1),
         DIRECT_V2(2),
         DICTIONARY_V2(3);

         public static final int DIRECT_VALUE = 0;
         public static final int DICTIONARY_VALUE = 1;
         public static final int DIRECT_V2_VALUE = 2;
         public static final int DICTIONARY_V2_VALUE = 3;
         private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
            public Kind findValueByNumber(int number) {
               return OrcProto.ColumnEncoding.Kind.forNumber(number);
            }
         };
         private static final Kind[] VALUES = values();
         private final int value;

         public final int getNumber() {
            return this.value;
         }

         /** @deprecated */
         @Deprecated
         public static Kind valueOf(int value) {
            return forNumber(value);
         }

         public static Kind forNumber(int value) {
            switch (value) {
               case 0 -> {
                  return DIRECT;
               }
               case 1 -> {
                  return DICTIONARY;
               }
               case 2 -> {
                  return DIRECT_V2;
               }
               case 3 -> {
                  return DICTIONARY_V2;
               }
               default -> {
                  return null;
               }
            }
         }

         public static Internal.EnumLiteMap internalGetValueMap() {
            return internalValueMap;
         }

         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)OrcProto.ColumnEncoding.getDescriptor().getEnumTypes().get(0);
         }

         public static Kind valueOf(Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[desc.getIndex()];
            }
         }

         private Kind(int value) {
            this.value = value;
         }

         // $FF: synthetic method
         private static Kind[] $values() {
            return new Kind[]{DIRECT, DICTIONARY, DIRECT_V2, DICTIONARY_V2};
         }
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements ColumnEncodingOrBuilder {
         private int bitField0_;
         private int kind_ = 0;
         private int dictionarySize_;
         private int bloomEncoding_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_ColumnEncoding_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_ColumnEncoding_fieldAccessorTable.ensureFieldAccessorsInitialized(ColumnEncoding.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.ColumnEncoding.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.kind_ = 0;
            this.bitField0_ &= -2;
            this.dictionarySize_ = 0;
            this.bitField0_ &= -3;
            this.bloomEncoding_ = 0;
            this.bitField0_ &= -5;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_ColumnEncoding_descriptor;
         }

         public ColumnEncoding getDefaultInstanceForType() {
            return OrcProto.ColumnEncoding.getDefaultInstance();
         }

         public ColumnEncoding build() {
            ColumnEncoding result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public ColumnEncoding buildPartial() {
            ColumnEncoding result = new ColumnEncoding(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.kind_ = this.kind_;
            if ((from_bitField0_ & 2) != 0) {
               result.dictionarySize_ = this.dictionarySize_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               result.bloomEncoding_ = this.bloomEncoding_;
               to_bitField0_ |= 4;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof ColumnEncoding) {
               return this.mergeFrom((ColumnEncoding)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(ColumnEncoding other) {
            if (other == OrcProto.ColumnEncoding.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasKind()) {
                  this.setKind(other.getKind());
               }

               if (other.hasDictionarySize()) {
                  this.setDictionarySize(other.getDictionarySize());
               }

               if (other.hasBloomEncoding()) {
                  this.setBloomEncoding(other.getBloomEncoding());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            ColumnEncoding parsedMessage = null;

            try {
               parsedMessage = (ColumnEncoding)OrcProto.ColumnEncoding.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (ColumnEncoding)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasKind() {
            return (this.bitField0_ & 1) != 0;
         }

         public Kind getKind() {
            Kind result = OrcProto.ColumnEncoding.Kind.valueOf(this.kind_);
            return result == null ? OrcProto.ColumnEncoding.Kind.DIRECT : result;
         }

         public Builder setKind(Kind value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.kind_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public Builder clearKind() {
            this.bitField0_ &= -2;
            this.kind_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasDictionarySize() {
            return (this.bitField0_ & 2) != 0;
         }

         public int getDictionarySize() {
            return this.dictionarySize_;
         }

         public Builder setDictionarySize(int value) {
            this.bitField0_ |= 2;
            this.dictionarySize_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearDictionarySize() {
            this.bitField0_ &= -3;
            this.dictionarySize_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasBloomEncoding() {
            return (this.bitField0_ & 4) != 0;
         }

         public int getBloomEncoding() {
            return this.bloomEncoding_;
         }

         public Builder setBloomEncoding(int value) {
            this.bitField0_ |= 4;
            this.bloomEncoding_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearBloomEncoding() {
            this.bitField0_ &= -5;
            this.bloomEncoding_ = 0;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class StripeEncryptionVariant extends GeneratedMessageV3 implements StripeEncryptionVariantOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int STREAMS_FIELD_NUMBER = 1;
      private List streams_;
      public static final int ENCODING_FIELD_NUMBER = 2;
      private List encoding_;
      private byte memoizedIsInitialized;
      private static final StripeEncryptionVariant DEFAULT_INSTANCE = new StripeEncryptionVariant();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public StripeEncryptionVariant parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new StripeEncryptionVariant(input, extensionRegistry);
         }
      };

      private StripeEncryptionVariant(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private StripeEncryptionVariant() {
         this.memoizedIsInitialized = -1;
         this.streams_ = Collections.emptyList();
         this.encoding_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new StripeEncryptionVariant();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private StripeEncryptionVariant(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.streams_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.streams_.add((Stream)input.readMessage(OrcProto.Stream.PARSER, extensionRegistry));
                        break;
                     case 18:
                        if ((mutable_bitField0_ & 2) == 0) {
                           this.encoding_ = new ArrayList();
                           mutable_bitField0_ |= 2;
                        }

                        this.encoding_.add((ColumnEncoding)input.readMessage(OrcProto.ColumnEncoding.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.streams_ = Collections.unmodifiableList(this.streams_);
               }

               if ((mutable_bitField0_ & 2) != 0) {
                  this.encoding_ = Collections.unmodifiableList(this.encoding_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_StripeEncryptionVariant_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_StripeEncryptionVariant_fieldAccessorTable.ensureFieldAccessorsInitialized(StripeEncryptionVariant.class, Builder.class);
      }

      public List getStreamsList() {
         return this.streams_;
      }

      public List getStreamsOrBuilderList() {
         return this.streams_;
      }

      public int getStreamsCount() {
         return this.streams_.size();
      }

      public Stream getStreams(int index) {
         return (Stream)this.streams_.get(index);
      }

      public StreamOrBuilder getStreamsOrBuilder(int index) {
         return (StreamOrBuilder)this.streams_.get(index);
      }

      public List getEncodingList() {
         return this.encoding_;
      }

      public List getEncodingOrBuilderList() {
         return this.encoding_;
      }

      public int getEncodingCount() {
         return this.encoding_.size();
      }

      public ColumnEncoding getEncoding(int index) {
         return (ColumnEncoding)this.encoding_.get(index);
      }

      public ColumnEncodingOrBuilder getEncodingOrBuilder(int index) {
         return (ColumnEncodingOrBuilder)this.encoding_.get(index);
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.streams_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.streams_.get(i));
         }

         for(int i = 0; i < this.encoding_.size(); ++i) {
            output.writeMessage(2, (MessageLite)this.encoding_.get(i));
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.streams_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.streams_.get(i));
            }

            for(int i = 0; i < this.encoding_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.encoding_.get(i));
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof StripeEncryptionVariant)) {
            return super.equals(obj);
         } else {
            StripeEncryptionVariant other = (StripeEncryptionVariant)obj;
            if (!this.getStreamsList().equals(other.getStreamsList())) {
               return false;
            } else if (!this.getEncodingList().equals(other.getEncodingList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getStreamsCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getStreamsList().hashCode();
            }

            if (this.getEncodingCount() > 0) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getEncodingList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static StripeEncryptionVariant parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (StripeEncryptionVariant)PARSER.parseFrom(data);
      }

      public static StripeEncryptionVariant parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StripeEncryptionVariant)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StripeEncryptionVariant parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (StripeEncryptionVariant)PARSER.parseFrom(data);
      }

      public static StripeEncryptionVariant parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StripeEncryptionVariant)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StripeEncryptionVariant parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (StripeEncryptionVariant)PARSER.parseFrom(data);
      }

      public static StripeEncryptionVariant parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StripeEncryptionVariant)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StripeEncryptionVariant parseFrom(InputStream input) throws IOException {
         return (StripeEncryptionVariant)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static StripeEncryptionVariant parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StripeEncryptionVariant)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static StripeEncryptionVariant parseDelimitedFrom(InputStream input) throws IOException {
         return (StripeEncryptionVariant)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static StripeEncryptionVariant parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StripeEncryptionVariant)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static StripeEncryptionVariant parseFrom(CodedInputStream input) throws IOException {
         return (StripeEncryptionVariant)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static StripeEncryptionVariant parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StripeEncryptionVariant)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(StripeEncryptionVariant prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static StripeEncryptionVariant getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public StripeEncryptionVariant getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements StripeEncryptionVariantOrBuilder {
         private int bitField0_;
         private List streams_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 streamsBuilder_;
         private List encoding_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 encodingBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_StripeEncryptionVariant_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_StripeEncryptionVariant_fieldAccessorTable.ensureFieldAccessorsInitialized(StripeEncryptionVariant.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.StripeEncryptionVariant.alwaysUseFieldBuilders) {
               this.getStreamsFieldBuilder();
               this.getEncodingFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            if (this.streamsBuilder_ == null) {
               this.streams_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.streamsBuilder_.clear();
            }

            if (this.encodingBuilder_ == null) {
               this.encoding_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.encodingBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_StripeEncryptionVariant_descriptor;
         }

         public StripeEncryptionVariant getDefaultInstanceForType() {
            return OrcProto.StripeEncryptionVariant.getDefaultInstance();
         }

         public StripeEncryptionVariant build() {
            StripeEncryptionVariant result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public StripeEncryptionVariant buildPartial() {
            StripeEncryptionVariant result = new StripeEncryptionVariant(this);
            int from_bitField0_ = this.bitField0_;
            if (this.streamsBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.streams_ = Collections.unmodifiableList(this.streams_);
                  this.bitField0_ &= -2;
               }

               result.streams_ = this.streams_;
            } else {
               result.streams_ = this.streamsBuilder_.build();
            }

            if (this.encodingBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.encoding_ = Collections.unmodifiableList(this.encoding_);
                  this.bitField0_ &= -3;
               }

               result.encoding_ = this.encoding_;
            } else {
               result.encoding_ = this.encodingBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof StripeEncryptionVariant) {
               return this.mergeFrom((StripeEncryptionVariant)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(StripeEncryptionVariant other) {
            if (other == OrcProto.StripeEncryptionVariant.getDefaultInstance()) {
               return this;
            } else {
               if (this.streamsBuilder_ == null) {
                  if (!other.streams_.isEmpty()) {
                     if (this.streams_.isEmpty()) {
                        this.streams_ = other.streams_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureStreamsIsMutable();
                        this.streams_.addAll(other.streams_);
                     }

                     this.onChanged();
                  }
               } else if (!other.streams_.isEmpty()) {
                  if (this.streamsBuilder_.isEmpty()) {
                     this.streamsBuilder_.dispose();
                     this.streamsBuilder_ = null;
                     this.streams_ = other.streams_;
                     this.bitField0_ &= -2;
                     this.streamsBuilder_ = OrcProto.StripeEncryptionVariant.alwaysUseFieldBuilders ? this.getStreamsFieldBuilder() : null;
                  } else {
                     this.streamsBuilder_.addAllMessages(other.streams_);
                  }
               }

               if (this.encodingBuilder_ == null) {
                  if (!other.encoding_.isEmpty()) {
                     if (this.encoding_.isEmpty()) {
                        this.encoding_ = other.encoding_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureEncodingIsMutable();
                        this.encoding_.addAll(other.encoding_);
                     }

                     this.onChanged();
                  }
               } else if (!other.encoding_.isEmpty()) {
                  if (this.encodingBuilder_.isEmpty()) {
                     this.encodingBuilder_.dispose();
                     this.encodingBuilder_ = null;
                     this.encoding_ = other.encoding_;
                     this.bitField0_ &= -3;
                     this.encodingBuilder_ = OrcProto.StripeEncryptionVariant.alwaysUseFieldBuilders ? this.getEncodingFieldBuilder() : null;
                  } else {
                     this.encodingBuilder_.addAllMessages(other.encoding_);
                  }
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            StripeEncryptionVariant parsedMessage = null;

            try {
               parsedMessage = (StripeEncryptionVariant)OrcProto.StripeEncryptionVariant.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (StripeEncryptionVariant)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureStreamsIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.streams_ = new ArrayList(this.streams_);
               this.bitField0_ |= 1;
            }

         }

         public List getStreamsList() {
            return this.streamsBuilder_ == null ? Collections.unmodifiableList(this.streams_) : this.streamsBuilder_.getMessageList();
         }

         public int getStreamsCount() {
            return this.streamsBuilder_ == null ? this.streams_.size() : this.streamsBuilder_.getCount();
         }

         public Stream getStreams(int index) {
            return this.streamsBuilder_ == null ? (Stream)this.streams_.get(index) : (Stream)this.streamsBuilder_.getMessage(index);
         }

         public Builder setStreams(int index, Stream value) {
            if (this.streamsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStreamsIsMutable();
               this.streams_.set(index, value);
               this.onChanged();
            } else {
               this.streamsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setStreams(int index, Stream.Builder builderForValue) {
            if (this.streamsBuilder_ == null) {
               this.ensureStreamsIsMutable();
               this.streams_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.streamsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addStreams(Stream value) {
            if (this.streamsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStreamsIsMutable();
               this.streams_.add(value);
               this.onChanged();
            } else {
               this.streamsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addStreams(int index, Stream value) {
            if (this.streamsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStreamsIsMutable();
               this.streams_.add(index, value);
               this.onChanged();
            } else {
               this.streamsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addStreams(Stream.Builder builderForValue) {
            if (this.streamsBuilder_ == null) {
               this.ensureStreamsIsMutable();
               this.streams_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.streamsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addStreams(int index, Stream.Builder builderForValue) {
            if (this.streamsBuilder_ == null) {
               this.ensureStreamsIsMutable();
               this.streams_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.streamsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllStreams(Iterable values) {
            if (this.streamsBuilder_ == null) {
               this.ensureStreamsIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.streams_);
               this.onChanged();
            } else {
               this.streamsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearStreams() {
            if (this.streamsBuilder_ == null) {
               this.streams_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.streamsBuilder_.clear();
            }

            return this;
         }

         public Builder removeStreams(int index) {
            if (this.streamsBuilder_ == null) {
               this.ensureStreamsIsMutable();
               this.streams_.remove(index);
               this.onChanged();
            } else {
               this.streamsBuilder_.remove(index);
            }

            return this;
         }

         public Stream.Builder getStreamsBuilder(int index) {
            return (Stream.Builder)this.getStreamsFieldBuilder().getBuilder(index);
         }

         public StreamOrBuilder getStreamsOrBuilder(int index) {
            return this.streamsBuilder_ == null ? (StreamOrBuilder)this.streams_.get(index) : (StreamOrBuilder)this.streamsBuilder_.getMessageOrBuilder(index);
         }

         public List getStreamsOrBuilderList() {
            return this.streamsBuilder_ != null ? this.streamsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.streams_);
         }

         public Stream.Builder addStreamsBuilder() {
            return (Stream.Builder)this.getStreamsFieldBuilder().addBuilder(OrcProto.Stream.getDefaultInstance());
         }

         public Stream.Builder addStreamsBuilder(int index) {
            return (Stream.Builder)this.getStreamsFieldBuilder().addBuilder(index, OrcProto.Stream.getDefaultInstance());
         }

         public List getStreamsBuilderList() {
            return this.getStreamsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getStreamsFieldBuilder() {
            if (this.streamsBuilder_ == null) {
               this.streamsBuilder_ = new RepeatedFieldBuilderV3(this.streams_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.streams_ = null;
            }

            return this.streamsBuilder_;
         }

         private void ensureEncodingIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.encoding_ = new ArrayList(this.encoding_);
               this.bitField0_ |= 2;
            }

         }

         public List getEncodingList() {
            return this.encodingBuilder_ == null ? Collections.unmodifiableList(this.encoding_) : this.encodingBuilder_.getMessageList();
         }

         public int getEncodingCount() {
            return this.encodingBuilder_ == null ? this.encoding_.size() : this.encodingBuilder_.getCount();
         }

         public ColumnEncoding getEncoding(int index) {
            return this.encodingBuilder_ == null ? (ColumnEncoding)this.encoding_.get(index) : (ColumnEncoding)this.encodingBuilder_.getMessage(index);
         }

         public Builder setEncoding(int index, ColumnEncoding value) {
            if (this.encodingBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEncodingIsMutable();
               this.encoding_.set(index, value);
               this.onChanged();
            } else {
               this.encodingBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setEncoding(int index, ColumnEncoding.Builder builderForValue) {
            if (this.encodingBuilder_ == null) {
               this.ensureEncodingIsMutable();
               this.encoding_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.encodingBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addEncoding(ColumnEncoding value) {
            if (this.encodingBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEncodingIsMutable();
               this.encoding_.add(value);
               this.onChanged();
            } else {
               this.encodingBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addEncoding(int index, ColumnEncoding value) {
            if (this.encodingBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEncodingIsMutable();
               this.encoding_.add(index, value);
               this.onChanged();
            } else {
               this.encodingBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addEncoding(ColumnEncoding.Builder builderForValue) {
            if (this.encodingBuilder_ == null) {
               this.ensureEncodingIsMutable();
               this.encoding_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.encodingBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addEncoding(int index, ColumnEncoding.Builder builderForValue) {
            if (this.encodingBuilder_ == null) {
               this.ensureEncodingIsMutable();
               this.encoding_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.encodingBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllEncoding(Iterable values) {
            if (this.encodingBuilder_ == null) {
               this.ensureEncodingIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.encoding_);
               this.onChanged();
            } else {
               this.encodingBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearEncoding() {
            if (this.encodingBuilder_ == null) {
               this.encoding_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.encodingBuilder_.clear();
            }

            return this;
         }

         public Builder removeEncoding(int index) {
            if (this.encodingBuilder_ == null) {
               this.ensureEncodingIsMutable();
               this.encoding_.remove(index);
               this.onChanged();
            } else {
               this.encodingBuilder_.remove(index);
            }

            return this;
         }

         public ColumnEncoding.Builder getEncodingBuilder(int index) {
            return (ColumnEncoding.Builder)this.getEncodingFieldBuilder().getBuilder(index);
         }

         public ColumnEncodingOrBuilder getEncodingOrBuilder(int index) {
            return this.encodingBuilder_ == null ? (ColumnEncodingOrBuilder)this.encoding_.get(index) : (ColumnEncodingOrBuilder)this.encodingBuilder_.getMessageOrBuilder(index);
         }

         public List getEncodingOrBuilderList() {
            return this.encodingBuilder_ != null ? this.encodingBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.encoding_);
         }

         public ColumnEncoding.Builder addEncodingBuilder() {
            return (ColumnEncoding.Builder)this.getEncodingFieldBuilder().addBuilder(OrcProto.ColumnEncoding.getDefaultInstance());
         }

         public ColumnEncoding.Builder addEncodingBuilder(int index) {
            return (ColumnEncoding.Builder)this.getEncodingFieldBuilder().addBuilder(index, OrcProto.ColumnEncoding.getDefaultInstance());
         }

         public List getEncodingBuilderList() {
            return this.getEncodingFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getEncodingFieldBuilder() {
            if (this.encodingBuilder_ == null) {
               this.encodingBuilder_ = new RepeatedFieldBuilderV3(this.encoding_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean());
               this.encoding_ = null;
            }

            return this.encodingBuilder_;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class StripeFooter extends GeneratedMessageV3 implements StripeFooterOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int STREAMS_FIELD_NUMBER = 1;
      private List streams_;
      public static final int COLUMNS_FIELD_NUMBER = 2;
      private List columns_;
      public static final int WRITER_TIMEZONE_FIELD_NUMBER = 3;
      private volatile Object writerTimezone_;
      public static final int ENCRYPTION_FIELD_NUMBER = 4;
      private List encryption_;
      private byte memoizedIsInitialized;
      private static final StripeFooter DEFAULT_INSTANCE = new StripeFooter();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public StripeFooter parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new StripeFooter(input, extensionRegistry);
         }
      };

      private StripeFooter(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private StripeFooter() {
         this.memoizedIsInitialized = -1;
         this.streams_ = Collections.emptyList();
         this.columns_ = Collections.emptyList();
         this.writerTimezone_ = "";
         this.encryption_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new StripeFooter();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private StripeFooter(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.streams_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.streams_.add((Stream)input.readMessage(OrcProto.Stream.PARSER, extensionRegistry));
                        break;
                     case 18:
                        if ((mutable_bitField0_ & 2) == 0) {
                           this.columns_ = new ArrayList();
                           mutable_bitField0_ |= 2;
                        }

                        this.columns_.add((ColumnEncoding)input.readMessage(OrcProto.ColumnEncoding.PARSER, extensionRegistry));
                        break;
                     case 26:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.writerTimezone_ = bs;
                        break;
                     case 34:
                        if ((mutable_bitField0_ & 8) == 0) {
                           this.encryption_ = new ArrayList();
                           mutable_bitField0_ |= 8;
                        }

                        this.encryption_.add((StripeEncryptionVariant)input.readMessage(OrcProto.StripeEncryptionVariant.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.streams_ = Collections.unmodifiableList(this.streams_);
               }

               if ((mutable_bitField0_ & 2) != 0) {
                  this.columns_ = Collections.unmodifiableList(this.columns_);
               }

               if ((mutable_bitField0_ & 8) != 0) {
                  this.encryption_ = Collections.unmodifiableList(this.encryption_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_StripeFooter_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_StripeFooter_fieldAccessorTable.ensureFieldAccessorsInitialized(StripeFooter.class, Builder.class);
      }

      public List getStreamsList() {
         return this.streams_;
      }

      public List getStreamsOrBuilderList() {
         return this.streams_;
      }

      public int getStreamsCount() {
         return this.streams_.size();
      }

      public Stream getStreams(int index) {
         return (Stream)this.streams_.get(index);
      }

      public StreamOrBuilder getStreamsOrBuilder(int index) {
         return (StreamOrBuilder)this.streams_.get(index);
      }

      public List getColumnsList() {
         return this.columns_;
      }

      public List getColumnsOrBuilderList() {
         return this.columns_;
      }

      public int getColumnsCount() {
         return this.columns_.size();
      }

      public ColumnEncoding getColumns(int index) {
         return (ColumnEncoding)this.columns_.get(index);
      }

      public ColumnEncodingOrBuilder getColumnsOrBuilder(int index) {
         return (ColumnEncodingOrBuilder)this.columns_.get(index);
      }

      public boolean hasWriterTimezone() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getWriterTimezone() {
         Object ref = this.writerTimezone_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.writerTimezone_ = s;
            }

            return s;
         }
      }

      public ByteString getWriterTimezoneBytes() {
         Object ref = this.writerTimezone_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.writerTimezone_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public List getEncryptionList() {
         return this.encryption_;
      }

      public List getEncryptionOrBuilderList() {
         return this.encryption_;
      }

      public int getEncryptionCount() {
         return this.encryption_.size();
      }

      public StripeEncryptionVariant getEncryption(int index) {
         return (StripeEncryptionVariant)this.encryption_.get(index);
      }

      public StripeEncryptionVariantOrBuilder getEncryptionOrBuilder(int index) {
         return (StripeEncryptionVariantOrBuilder)this.encryption_.get(index);
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.streams_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.streams_.get(i));
         }

         for(int i = 0; i < this.columns_.size(); ++i) {
            output.writeMessage(2, (MessageLite)this.columns_.get(i));
         }

         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 3, this.writerTimezone_);
         }

         for(int i = 0; i < this.encryption_.size(); ++i) {
            output.writeMessage(4, (MessageLite)this.encryption_.get(i));
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.streams_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.streams_.get(i));
            }

            for(int i = 0; i < this.columns_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.columns_.get(i));
            }

            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(3, this.writerTimezone_);
            }

            for(int i = 0; i < this.encryption_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.encryption_.get(i));
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof StripeFooter)) {
            return super.equals(obj);
         } else {
            StripeFooter other = (StripeFooter)obj;
            if (!this.getStreamsList().equals(other.getStreamsList())) {
               return false;
            } else if (!this.getColumnsList().equals(other.getColumnsList())) {
               return false;
            } else if (this.hasWriterTimezone() != other.hasWriterTimezone()) {
               return false;
            } else if (this.hasWriterTimezone() && !this.getWriterTimezone().equals(other.getWriterTimezone())) {
               return false;
            } else if (!this.getEncryptionList().equals(other.getEncryptionList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getStreamsCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getStreamsList().hashCode();
            }

            if (this.getColumnsCount() > 0) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getColumnsList().hashCode();
            }

            if (this.hasWriterTimezone()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getWriterTimezone().hashCode();
            }

            if (this.getEncryptionCount() > 0) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.getEncryptionList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static StripeFooter parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (StripeFooter)PARSER.parseFrom(data);
      }

      public static StripeFooter parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StripeFooter)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StripeFooter parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (StripeFooter)PARSER.parseFrom(data);
      }

      public static StripeFooter parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StripeFooter)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StripeFooter parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (StripeFooter)PARSER.parseFrom(data);
      }

      public static StripeFooter parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StripeFooter)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StripeFooter parseFrom(InputStream input) throws IOException {
         return (StripeFooter)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static StripeFooter parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StripeFooter)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static StripeFooter parseDelimitedFrom(InputStream input) throws IOException {
         return (StripeFooter)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static StripeFooter parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StripeFooter)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static StripeFooter parseFrom(CodedInputStream input) throws IOException {
         return (StripeFooter)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static StripeFooter parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StripeFooter)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(StripeFooter prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static StripeFooter getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public StripeFooter getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements StripeFooterOrBuilder {
         private int bitField0_;
         private List streams_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 streamsBuilder_;
         private List columns_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 columnsBuilder_;
         private Object writerTimezone_ = "";
         private List encryption_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 encryptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_StripeFooter_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_StripeFooter_fieldAccessorTable.ensureFieldAccessorsInitialized(StripeFooter.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.StripeFooter.alwaysUseFieldBuilders) {
               this.getStreamsFieldBuilder();
               this.getColumnsFieldBuilder();
               this.getEncryptionFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            if (this.streamsBuilder_ == null) {
               this.streams_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.streamsBuilder_.clear();
            }

            if (this.columnsBuilder_ == null) {
               this.columns_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.columnsBuilder_.clear();
            }

            this.writerTimezone_ = "";
            this.bitField0_ &= -5;
            if (this.encryptionBuilder_ == null) {
               this.encryption_ = Collections.emptyList();
               this.bitField0_ &= -9;
            } else {
               this.encryptionBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_StripeFooter_descriptor;
         }

         public StripeFooter getDefaultInstanceForType() {
            return OrcProto.StripeFooter.getDefaultInstance();
         }

         public StripeFooter build() {
            StripeFooter result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public StripeFooter buildPartial() {
            StripeFooter result = new StripeFooter(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if (this.streamsBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.streams_ = Collections.unmodifiableList(this.streams_);
                  this.bitField0_ &= -2;
               }

               result.streams_ = this.streams_;
            } else {
               result.streams_ = this.streamsBuilder_.build();
            }

            if (this.columnsBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.columns_ = Collections.unmodifiableList(this.columns_);
                  this.bitField0_ &= -3;
               }

               result.columns_ = this.columns_;
            } else {
               result.columns_ = this.columnsBuilder_.build();
            }

            if ((from_bitField0_ & 4) != 0) {
               to_bitField0_ |= 1;
            }

            result.writerTimezone_ = this.writerTimezone_;
            if (this.encryptionBuilder_ == null) {
               if ((this.bitField0_ & 8) != 0) {
                  this.encryption_ = Collections.unmodifiableList(this.encryption_);
                  this.bitField0_ &= -9;
               }

               result.encryption_ = this.encryption_;
            } else {
               result.encryption_ = this.encryptionBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof StripeFooter) {
               return this.mergeFrom((StripeFooter)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(StripeFooter other) {
            if (other == OrcProto.StripeFooter.getDefaultInstance()) {
               return this;
            } else {
               if (this.streamsBuilder_ == null) {
                  if (!other.streams_.isEmpty()) {
                     if (this.streams_.isEmpty()) {
                        this.streams_ = other.streams_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureStreamsIsMutable();
                        this.streams_.addAll(other.streams_);
                     }

                     this.onChanged();
                  }
               } else if (!other.streams_.isEmpty()) {
                  if (this.streamsBuilder_.isEmpty()) {
                     this.streamsBuilder_.dispose();
                     this.streamsBuilder_ = null;
                     this.streams_ = other.streams_;
                     this.bitField0_ &= -2;
                     this.streamsBuilder_ = OrcProto.StripeFooter.alwaysUseFieldBuilders ? this.getStreamsFieldBuilder() : null;
                  } else {
                     this.streamsBuilder_.addAllMessages(other.streams_);
                  }
               }

               if (this.columnsBuilder_ == null) {
                  if (!other.columns_.isEmpty()) {
                     if (this.columns_.isEmpty()) {
                        this.columns_ = other.columns_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureColumnsIsMutable();
                        this.columns_.addAll(other.columns_);
                     }

                     this.onChanged();
                  }
               } else if (!other.columns_.isEmpty()) {
                  if (this.columnsBuilder_.isEmpty()) {
                     this.columnsBuilder_.dispose();
                     this.columnsBuilder_ = null;
                     this.columns_ = other.columns_;
                     this.bitField0_ &= -3;
                     this.columnsBuilder_ = OrcProto.StripeFooter.alwaysUseFieldBuilders ? this.getColumnsFieldBuilder() : null;
                  } else {
                     this.columnsBuilder_.addAllMessages(other.columns_);
                  }
               }

               if (other.hasWriterTimezone()) {
                  this.bitField0_ |= 4;
                  this.writerTimezone_ = other.writerTimezone_;
                  this.onChanged();
               }

               if (this.encryptionBuilder_ == null) {
                  if (!other.encryption_.isEmpty()) {
                     if (this.encryption_.isEmpty()) {
                        this.encryption_ = other.encryption_;
                        this.bitField0_ &= -9;
                     } else {
                        this.ensureEncryptionIsMutable();
                        this.encryption_.addAll(other.encryption_);
                     }

                     this.onChanged();
                  }
               } else if (!other.encryption_.isEmpty()) {
                  if (this.encryptionBuilder_.isEmpty()) {
                     this.encryptionBuilder_.dispose();
                     this.encryptionBuilder_ = null;
                     this.encryption_ = other.encryption_;
                     this.bitField0_ &= -9;
                     this.encryptionBuilder_ = OrcProto.StripeFooter.alwaysUseFieldBuilders ? this.getEncryptionFieldBuilder() : null;
                  } else {
                     this.encryptionBuilder_.addAllMessages(other.encryption_);
                  }
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            StripeFooter parsedMessage = null;

            try {
               parsedMessage = (StripeFooter)OrcProto.StripeFooter.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (StripeFooter)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureStreamsIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.streams_ = new ArrayList(this.streams_);
               this.bitField0_ |= 1;
            }

         }

         public List getStreamsList() {
            return this.streamsBuilder_ == null ? Collections.unmodifiableList(this.streams_) : this.streamsBuilder_.getMessageList();
         }

         public int getStreamsCount() {
            return this.streamsBuilder_ == null ? this.streams_.size() : this.streamsBuilder_.getCount();
         }

         public Stream getStreams(int index) {
            return this.streamsBuilder_ == null ? (Stream)this.streams_.get(index) : (Stream)this.streamsBuilder_.getMessage(index);
         }

         public Builder setStreams(int index, Stream value) {
            if (this.streamsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStreamsIsMutable();
               this.streams_.set(index, value);
               this.onChanged();
            } else {
               this.streamsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setStreams(int index, Stream.Builder builderForValue) {
            if (this.streamsBuilder_ == null) {
               this.ensureStreamsIsMutable();
               this.streams_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.streamsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addStreams(Stream value) {
            if (this.streamsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStreamsIsMutable();
               this.streams_.add(value);
               this.onChanged();
            } else {
               this.streamsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addStreams(int index, Stream value) {
            if (this.streamsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStreamsIsMutable();
               this.streams_.add(index, value);
               this.onChanged();
            } else {
               this.streamsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addStreams(Stream.Builder builderForValue) {
            if (this.streamsBuilder_ == null) {
               this.ensureStreamsIsMutable();
               this.streams_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.streamsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addStreams(int index, Stream.Builder builderForValue) {
            if (this.streamsBuilder_ == null) {
               this.ensureStreamsIsMutable();
               this.streams_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.streamsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllStreams(Iterable values) {
            if (this.streamsBuilder_ == null) {
               this.ensureStreamsIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.streams_);
               this.onChanged();
            } else {
               this.streamsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearStreams() {
            if (this.streamsBuilder_ == null) {
               this.streams_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.streamsBuilder_.clear();
            }

            return this;
         }

         public Builder removeStreams(int index) {
            if (this.streamsBuilder_ == null) {
               this.ensureStreamsIsMutable();
               this.streams_.remove(index);
               this.onChanged();
            } else {
               this.streamsBuilder_.remove(index);
            }

            return this;
         }

         public Stream.Builder getStreamsBuilder(int index) {
            return (Stream.Builder)this.getStreamsFieldBuilder().getBuilder(index);
         }

         public StreamOrBuilder getStreamsOrBuilder(int index) {
            return this.streamsBuilder_ == null ? (StreamOrBuilder)this.streams_.get(index) : (StreamOrBuilder)this.streamsBuilder_.getMessageOrBuilder(index);
         }

         public List getStreamsOrBuilderList() {
            return this.streamsBuilder_ != null ? this.streamsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.streams_);
         }

         public Stream.Builder addStreamsBuilder() {
            return (Stream.Builder)this.getStreamsFieldBuilder().addBuilder(OrcProto.Stream.getDefaultInstance());
         }

         public Stream.Builder addStreamsBuilder(int index) {
            return (Stream.Builder)this.getStreamsFieldBuilder().addBuilder(index, OrcProto.Stream.getDefaultInstance());
         }

         public List getStreamsBuilderList() {
            return this.getStreamsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getStreamsFieldBuilder() {
            if (this.streamsBuilder_ == null) {
               this.streamsBuilder_ = new RepeatedFieldBuilderV3(this.streams_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.streams_ = null;
            }

            return this.streamsBuilder_;
         }

         private void ensureColumnsIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.columns_ = new ArrayList(this.columns_);
               this.bitField0_ |= 2;
            }

         }

         public List getColumnsList() {
            return this.columnsBuilder_ == null ? Collections.unmodifiableList(this.columns_) : this.columnsBuilder_.getMessageList();
         }

         public int getColumnsCount() {
            return this.columnsBuilder_ == null ? this.columns_.size() : this.columnsBuilder_.getCount();
         }

         public ColumnEncoding getColumns(int index) {
            return this.columnsBuilder_ == null ? (ColumnEncoding)this.columns_.get(index) : (ColumnEncoding)this.columnsBuilder_.getMessage(index);
         }

         public Builder setColumns(int index, ColumnEncoding value) {
            if (this.columnsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColumnsIsMutable();
               this.columns_.set(index, value);
               this.onChanged();
            } else {
               this.columnsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setColumns(int index, ColumnEncoding.Builder builderForValue) {
            if (this.columnsBuilder_ == null) {
               this.ensureColumnsIsMutable();
               this.columns_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.columnsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addColumns(ColumnEncoding value) {
            if (this.columnsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColumnsIsMutable();
               this.columns_.add(value);
               this.onChanged();
            } else {
               this.columnsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addColumns(int index, ColumnEncoding value) {
            if (this.columnsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColumnsIsMutable();
               this.columns_.add(index, value);
               this.onChanged();
            } else {
               this.columnsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addColumns(ColumnEncoding.Builder builderForValue) {
            if (this.columnsBuilder_ == null) {
               this.ensureColumnsIsMutable();
               this.columns_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.columnsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addColumns(int index, ColumnEncoding.Builder builderForValue) {
            if (this.columnsBuilder_ == null) {
               this.ensureColumnsIsMutable();
               this.columns_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.columnsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllColumns(Iterable values) {
            if (this.columnsBuilder_ == null) {
               this.ensureColumnsIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.columns_);
               this.onChanged();
            } else {
               this.columnsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearColumns() {
            if (this.columnsBuilder_ == null) {
               this.columns_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.columnsBuilder_.clear();
            }

            return this;
         }

         public Builder removeColumns(int index) {
            if (this.columnsBuilder_ == null) {
               this.ensureColumnsIsMutable();
               this.columns_.remove(index);
               this.onChanged();
            } else {
               this.columnsBuilder_.remove(index);
            }

            return this;
         }

         public ColumnEncoding.Builder getColumnsBuilder(int index) {
            return (ColumnEncoding.Builder)this.getColumnsFieldBuilder().getBuilder(index);
         }

         public ColumnEncodingOrBuilder getColumnsOrBuilder(int index) {
            return this.columnsBuilder_ == null ? (ColumnEncodingOrBuilder)this.columns_.get(index) : (ColumnEncodingOrBuilder)this.columnsBuilder_.getMessageOrBuilder(index);
         }

         public List getColumnsOrBuilderList() {
            return this.columnsBuilder_ != null ? this.columnsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.columns_);
         }

         public ColumnEncoding.Builder addColumnsBuilder() {
            return (ColumnEncoding.Builder)this.getColumnsFieldBuilder().addBuilder(OrcProto.ColumnEncoding.getDefaultInstance());
         }

         public ColumnEncoding.Builder addColumnsBuilder(int index) {
            return (ColumnEncoding.Builder)this.getColumnsFieldBuilder().addBuilder(index, OrcProto.ColumnEncoding.getDefaultInstance());
         }

         public List getColumnsBuilderList() {
            return this.getColumnsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getColumnsFieldBuilder() {
            if (this.columnsBuilder_ == null) {
               this.columnsBuilder_ = new RepeatedFieldBuilderV3(this.columns_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean());
               this.columns_ = null;
            }

            return this.columnsBuilder_;
         }

         public boolean hasWriterTimezone() {
            return (this.bitField0_ & 4) != 0;
         }

         public String getWriterTimezone() {
            Object ref = this.writerTimezone_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.writerTimezone_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getWriterTimezoneBytes() {
            Object ref = this.writerTimezone_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.writerTimezone_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setWriterTimezone(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.writerTimezone_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearWriterTimezone() {
            this.bitField0_ &= -5;
            this.writerTimezone_ = OrcProto.StripeFooter.getDefaultInstance().getWriterTimezone();
            this.onChanged();
            return this;
         }

         public Builder setWriterTimezoneBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.writerTimezone_ = value;
               this.onChanged();
               return this;
            }
         }

         private void ensureEncryptionIsMutable() {
            if ((this.bitField0_ & 8) == 0) {
               this.encryption_ = new ArrayList(this.encryption_);
               this.bitField0_ |= 8;
            }

         }

         public List getEncryptionList() {
            return this.encryptionBuilder_ == null ? Collections.unmodifiableList(this.encryption_) : this.encryptionBuilder_.getMessageList();
         }

         public int getEncryptionCount() {
            return this.encryptionBuilder_ == null ? this.encryption_.size() : this.encryptionBuilder_.getCount();
         }

         public StripeEncryptionVariant getEncryption(int index) {
            return this.encryptionBuilder_ == null ? (StripeEncryptionVariant)this.encryption_.get(index) : (StripeEncryptionVariant)this.encryptionBuilder_.getMessage(index);
         }

         public Builder setEncryption(int index, StripeEncryptionVariant value) {
            if (this.encryptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEncryptionIsMutable();
               this.encryption_.set(index, value);
               this.onChanged();
            } else {
               this.encryptionBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setEncryption(int index, StripeEncryptionVariant.Builder builderForValue) {
            if (this.encryptionBuilder_ == null) {
               this.ensureEncryptionIsMutable();
               this.encryption_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.encryptionBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addEncryption(StripeEncryptionVariant value) {
            if (this.encryptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEncryptionIsMutable();
               this.encryption_.add(value);
               this.onChanged();
            } else {
               this.encryptionBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addEncryption(int index, StripeEncryptionVariant value) {
            if (this.encryptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureEncryptionIsMutable();
               this.encryption_.add(index, value);
               this.onChanged();
            } else {
               this.encryptionBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addEncryption(StripeEncryptionVariant.Builder builderForValue) {
            if (this.encryptionBuilder_ == null) {
               this.ensureEncryptionIsMutable();
               this.encryption_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.encryptionBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addEncryption(int index, StripeEncryptionVariant.Builder builderForValue) {
            if (this.encryptionBuilder_ == null) {
               this.ensureEncryptionIsMutable();
               this.encryption_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.encryptionBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllEncryption(Iterable values) {
            if (this.encryptionBuilder_ == null) {
               this.ensureEncryptionIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.encryption_);
               this.onChanged();
            } else {
               this.encryptionBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearEncryption() {
            if (this.encryptionBuilder_ == null) {
               this.encryption_ = Collections.emptyList();
               this.bitField0_ &= -9;
               this.onChanged();
            } else {
               this.encryptionBuilder_.clear();
            }

            return this;
         }

         public Builder removeEncryption(int index) {
            if (this.encryptionBuilder_ == null) {
               this.ensureEncryptionIsMutable();
               this.encryption_.remove(index);
               this.onChanged();
            } else {
               this.encryptionBuilder_.remove(index);
            }

            return this;
         }

         public StripeEncryptionVariant.Builder getEncryptionBuilder(int index) {
            return (StripeEncryptionVariant.Builder)this.getEncryptionFieldBuilder().getBuilder(index);
         }

         public StripeEncryptionVariantOrBuilder getEncryptionOrBuilder(int index) {
            return this.encryptionBuilder_ == null ? (StripeEncryptionVariantOrBuilder)this.encryption_.get(index) : (StripeEncryptionVariantOrBuilder)this.encryptionBuilder_.getMessageOrBuilder(index);
         }

         public List getEncryptionOrBuilderList() {
            return this.encryptionBuilder_ != null ? this.encryptionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.encryption_);
         }

         public StripeEncryptionVariant.Builder addEncryptionBuilder() {
            return (StripeEncryptionVariant.Builder)this.getEncryptionFieldBuilder().addBuilder(OrcProto.StripeEncryptionVariant.getDefaultInstance());
         }

         public StripeEncryptionVariant.Builder addEncryptionBuilder(int index) {
            return (StripeEncryptionVariant.Builder)this.getEncryptionFieldBuilder().addBuilder(index, OrcProto.StripeEncryptionVariant.getDefaultInstance());
         }

         public List getEncryptionBuilderList() {
            return this.getEncryptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getEncryptionFieldBuilder() {
            if (this.encryptionBuilder_ == null) {
               this.encryptionBuilder_ = new RepeatedFieldBuilderV3(this.encryption_, (this.bitField0_ & 8) != 0, this.getParentForChildren(), this.isClean());
               this.encryption_ = null;
            }

            return this.encryptionBuilder_;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class StringPair extends GeneratedMessageV3 implements StringPairOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int KEY_FIELD_NUMBER = 1;
      private volatile Object key_;
      public static final int VALUE_FIELD_NUMBER = 2;
      private volatile Object value_;
      private byte memoizedIsInitialized;
      private static final StringPair DEFAULT_INSTANCE = new StringPair();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public StringPair parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new StringPair(input, extensionRegistry);
         }
      };

      private StringPair(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private StringPair() {
         this.memoizedIsInitialized = -1;
         this.key_ = "";
         this.value_ = "";
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new StringPair();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private StringPair(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.key_ = bs;
                        break;
                     case 18:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 2;
                        this.value_ = bs;
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_StringPair_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_StringPair_fieldAccessorTable.ensureFieldAccessorsInitialized(StringPair.class, Builder.class);
      }

      public boolean hasKey() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getKey() {
         Object ref = this.key_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.key_ = s;
            }

            return s;
         }
      }

      public ByteString getKeyBytes() {
         Object ref = this.key_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.key_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasValue() {
         return (this.bitField0_ & 2) != 0;
      }

      public String getValue() {
         Object ref = this.value_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.value_ = s;
            }

            return s;
         }
      }

      public ByteString getValueBytes() {
         Object ref = this.value_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.value_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.key_);
         }

         if ((this.bitField0_ & 2) != 0) {
            GeneratedMessageV3.writeString(output, 2, this.value_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.key_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += GeneratedMessageV3.computeStringSize(2, this.value_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof StringPair)) {
            return super.equals(obj);
         } else {
            StringPair other = (StringPair)obj;
            if (this.hasKey() != other.hasKey()) {
               return false;
            } else if (this.hasKey() && !this.getKey().equals(other.getKey())) {
               return false;
            } else if (this.hasValue() != other.hasValue()) {
               return false;
            } else if (this.hasValue() && !this.getValue().equals(other.getValue())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasKey()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getKey().hashCode();
            }

            if (this.hasValue()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getValue().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static StringPair parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (StringPair)PARSER.parseFrom(data);
      }

      public static StringPair parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StringPair)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StringPair parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (StringPair)PARSER.parseFrom(data);
      }

      public static StringPair parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StringPair)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StringPair parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (StringPair)PARSER.parseFrom(data);
      }

      public static StringPair parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StringPair)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StringPair parseFrom(InputStream input) throws IOException {
         return (StringPair)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static StringPair parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StringPair)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static StringPair parseDelimitedFrom(InputStream input) throws IOException {
         return (StringPair)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static StringPair parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StringPair)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static StringPair parseFrom(CodedInputStream input) throws IOException {
         return (StringPair)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static StringPair parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StringPair)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(StringPair prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static StringPair getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public StringPair getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements StringPairOrBuilder {
         private int bitField0_;
         private Object key_ = "";
         private Object value_ = "";

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_StringPair_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_StringPair_fieldAccessorTable.ensureFieldAccessorsInitialized(StringPair.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.StringPair.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.key_ = "";
            this.bitField0_ &= -2;
            this.value_ = "";
            this.bitField0_ &= -3;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_StringPair_descriptor;
         }

         public StringPair getDefaultInstanceForType() {
            return OrcProto.StringPair.getDefaultInstance();
         }

         public StringPair build() {
            StringPair result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public StringPair buildPartial() {
            StringPair result = new StringPair(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.key_ = this.key_;
            if ((from_bitField0_ & 2) != 0) {
               to_bitField0_ |= 2;
            }

            result.value_ = this.value_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof StringPair) {
               return this.mergeFrom((StringPair)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(StringPair other) {
            if (other == OrcProto.StringPair.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasKey()) {
                  this.bitField0_ |= 1;
                  this.key_ = other.key_;
                  this.onChanged();
               }

               if (other.hasValue()) {
                  this.bitField0_ |= 2;
                  this.value_ = other.value_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            StringPair parsedMessage = null;

            try {
               parsedMessage = (StringPair)OrcProto.StringPair.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (StringPair)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasKey() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getKey() {
            Object ref = this.key_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.key_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getKeyBytes() {
            Object ref = this.key_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.key_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setKey(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.key_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearKey() {
            this.bitField0_ &= -2;
            this.key_ = OrcProto.StringPair.getDefaultInstance().getKey();
            this.onChanged();
            return this;
         }

         public Builder setKeyBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.key_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasValue() {
            return (this.bitField0_ & 2) != 0;
         }

         public String getValue() {
            Object ref = this.value_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.value_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getValueBytes() {
            Object ref = this.value_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.value_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setValue(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.value_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearValue() {
            this.bitField0_ &= -3;
            this.value_ = OrcProto.StringPair.getDefaultInstance().getValue();
            this.onChanged();
            return this;
         }

         public Builder setValueBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.value_ = value;
               this.onChanged();
               return this;
            }
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class Type extends GeneratedMessageV3 implements TypeOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int KIND_FIELD_NUMBER = 1;
      private int kind_;
      public static final int SUBTYPES_FIELD_NUMBER = 2;
      private Internal.IntList subtypes_;
      private int subtypesMemoizedSerializedSize;
      public static final int FIELD_NAMES_FIELD_NUMBER = 3;
      private LazyStringList fieldNames_;
      public static final int MAXIMUM_LENGTH_FIELD_NUMBER = 4;
      private int maximumLength_;
      public static final int PRECISION_FIELD_NUMBER = 5;
      private int precision_;
      public static final int SCALE_FIELD_NUMBER = 6;
      private int scale_;
      public static final int ATTRIBUTES_FIELD_NUMBER = 7;
      private List attributes_;
      public static final int CRS_FIELD_NUMBER = 8;
      private volatile Object crs_;
      public static final int ALGORITHM_FIELD_NUMBER = 9;
      private int algorithm_;
      private byte memoizedIsInitialized;
      private static final Type DEFAULT_INSTANCE = new Type();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public Type parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new Type(input, extensionRegistry);
         }
      };

      private Type(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.subtypesMemoizedSerializedSize = -1;
         this.memoizedIsInitialized = -1;
      }

      private Type() {
         this.subtypesMemoizedSerializedSize = -1;
         this.memoizedIsInitialized = -1;
         this.kind_ = 0;
         this.subtypes_ = emptyIntList();
         this.fieldNames_ = LazyStringArrayList.EMPTY;
         this.attributes_ = Collections.emptyList();
         this.crs_ = "";
         this.algorithm_ = 0;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new Type();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private Type(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  int limit;
                  switch (tag) {
                     case 0:
                        done = true;
                        continue;
                     case 8:
                        int rawValue = input.readEnum();
                        Kind value = OrcProto.Type.Kind.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(1, rawValue);
                        } else {
                           this.bitField0_ |= 1;
                           this.kind_ = rawValue;
                        }
                        continue;
                     case 16:
                        if ((mutable_bitField0_ & 2) == 0) {
                           this.subtypes_ = newIntList();
                           mutable_bitField0_ |= 2;
                        }

                        this.subtypes_.addInt(input.readUInt32());
                        continue;
                     case 18:
                        int length = input.readRawVarint32();
                        limit = input.pushLimit(length);
                        if ((mutable_bitField0_ & 2) == 0 && input.getBytesUntilLimit() > 0) {
                           this.subtypes_ = newIntList();
                           mutable_bitField0_ |= 2;
                        }
                        break;
                     case 26:
                        ByteString bs = input.readBytes();
                        if ((mutable_bitField0_ & 4) == 0) {
                           this.fieldNames_ = new LazyStringArrayList();
                           mutable_bitField0_ |= 4;
                        }

                        this.fieldNames_.add(bs);
                        continue;
                     case 32:
                        this.bitField0_ |= 2;
                        this.maximumLength_ = input.readUInt32();
                        continue;
                     case 40:
                        this.bitField0_ |= 4;
                        this.precision_ = input.readUInt32();
                        continue;
                     case 48:
                        this.bitField0_ |= 8;
                        this.scale_ = input.readUInt32();
                        continue;
                     case 58:
                        if ((mutable_bitField0_ & 64) == 0) {
                           this.attributes_ = new ArrayList();
                           mutable_bitField0_ |= 64;
                        }

                        this.attributes_.add((StringPair)input.readMessage(OrcProto.StringPair.PARSER, extensionRegistry));
                        continue;
                     case 66:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 16;
                        this.crs_ = bs;
                        continue;
                     case 72:
                        int rawValue = input.readEnum();
                        EdgeInterpolationAlgorithm value = OrcProto.Type.EdgeInterpolationAlgorithm.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(9, rawValue);
                        } else {
                           this.bitField0_ |= 32;
                           this.algorithm_ = rawValue;
                        }
                        continue;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                        continue;
                  }

                  while(input.getBytesUntilLimit() > 0) {
                     this.subtypes_.addInt(input.readUInt32());
                  }

                  input.popLimit(limit);
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 2) != 0) {
                  this.subtypes_.makeImmutable();
               }

               if ((mutable_bitField0_ & 4) != 0) {
                  this.fieldNames_ = this.fieldNames_.getUnmodifiableView();
               }

               if ((mutable_bitField0_ & 64) != 0) {
                  this.attributes_ = Collections.unmodifiableList(this.attributes_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_Type_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_Type_fieldAccessorTable.ensureFieldAccessorsInitialized(Type.class, Builder.class);
      }

      public boolean hasKind() {
         return (this.bitField0_ & 1) != 0;
      }

      public Kind getKind() {
         Kind result = OrcProto.Type.Kind.valueOf(this.kind_);
         return result == null ? OrcProto.Type.Kind.BOOLEAN : result;
      }

      public List getSubtypesList() {
         return this.subtypes_;
      }

      public int getSubtypesCount() {
         return this.subtypes_.size();
      }

      public int getSubtypes(int index) {
         return this.subtypes_.getInt(index);
      }

      public ProtocolStringList getFieldNamesList() {
         return this.fieldNames_;
      }

      public int getFieldNamesCount() {
         return this.fieldNames_.size();
      }

      public String getFieldNames(int index) {
         return (String)this.fieldNames_.get(index);
      }

      public ByteString getFieldNamesBytes(int index) {
         return this.fieldNames_.getByteString(index);
      }

      public boolean hasMaximumLength() {
         return (this.bitField0_ & 2) != 0;
      }

      public int getMaximumLength() {
         return this.maximumLength_;
      }

      public boolean hasPrecision() {
         return (this.bitField0_ & 4) != 0;
      }

      public int getPrecision() {
         return this.precision_;
      }

      public boolean hasScale() {
         return (this.bitField0_ & 8) != 0;
      }

      public int getScale() {
         return this.scale_;
      }

      public List getAttributesList() {
         return this.attributes_;
      }

      public List getAttributesOrBuilderList() {
         return this.attributes_;
      }

      public int getAttributesCount() {
         return this.attributes_.size();
      }

      public StringPair getAttributes(int index) {
         return (StringPair)this.attributes_.get(index);
      }

      public StringPairOrBuilder getAttributesOrBuilder(int index) {
         return (StringPairOrBuilder)this.attributes_.get(index);
      }

      public boolean hasCrs() {
         return (this.bitField0_ & 16) != 0;
      }

      public String getCrs() {
         Object ref = this.crs_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.crs_ = s;
            }

            return s;
         }
      }

      public ByteString getCrsBytes() {
         Object ref = this.crs_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.crs_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasAlgorithm() {
         return (this.bitField0_ & 32) != 0;
      }

      public EdgeInterpolationAlgorithm getAlgorithm() {
         EdgeInterpolationAlgorithm result = OrcProto.Type.EdgeInterpolationAlgorithm.valueOf(this.algorithm_);
         return result == null ? OrcProto.Type.EdgeInterpolationAlgorithm.SPHERICAL : result;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) != 0) {
            output.writeEnum(1, this.kind_);
         }

         if (this.getSubtypesList().size() > 0) {
            output.writeUInt32NoTag(18);
            output.writeUInt32NoTag(this.subtypesMemoizedSerializedSize);
         }

         for(int i = 0; i < this.subtypes_.size(); ++i) {
            output.writeUInt32NoTag(this.subtypes_.getInt(i));
         }

         for(int i = 0; i < this.fieldNames_.size(); ++i) {
            GeneratedMessageV3.writeString(output, 3, this.fieldNames_.getRaw(i));
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeUInt32(4, this.maximumLength_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeUInt32(5, this.precision_);
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeUInt32(6, this.scale_);
         }

         for(int i = 0; i < this.attributes_.size(); ++i) {
            output.writeMessage(7, (MessageLite)this.attributes_.get(i));
         }

         if ((this.bitField0_ & 16) != 0) {
            GeneratedMessageV3.writeString(output, 8, this.crs_);
         }

         if ((this.bitField0_ & 32) != 0) {
            output.writeEnum(9, this.algorithm_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeEnumSize(1, this.kind_);
            }

            int dataSize = 0;

            for(int i = 0; i < this.subtypes_.size(); ++i) {
               dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.subtypes_.getInt(i));
            }

            size += dataSize;
            if (!this.getSubtypesList().isEmpty()) {
               ++size;
               size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
            }

            this.subtypesMemoizedSerializedSize = dataSize;
            dataSize = 0;

            for(int i = 0; i < this.fieldNames_.size(); ++i) {
               dataSize += computeStringSizeNoTag(this.fieldNames_.getRaw(i));
            }

            size += dataSize;
            size += 1 * this.getFieldNamesList().size();
            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeUInt32Size(4, this.maximumLength_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeUInt32Size(5, this.precision_);
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeUInt32Size(6, this.scale_);
            }

            for(int i = 0; i < this.attributes_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(7, (MessageLite)this.attributes_.get(i));
            }

            if ((this.bitField0_ & 16) != 0) {
               size += GeneratedMessageV3.computeStringSize(8, this.crs_);
            }

            if ((this.bitField0_ & 32) != 0) {
               size += CodedOutputStream.computeEnumSize(9, this.algorithm_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof Type)) {
            return super.equals(obj);
         } else {
            Type other = (Type)obj;
            if (this.hasKind() != other.hasKind()) {
               return false;
            } else if (this.hasKind() && this.kind_ != other.kind_) {
               return false;
            } else if (!this.getSubtypesList().equals(other.getSubtypesList())) {
               return false;
            } else if (!this.getFieldNamesList().equals(other.getFieldNamesList())) {
               return false;
            } else if (this.hasMaximumLength() != other.hasMaximumLength()) {
               return false;
            } else if (this.hasMaximumLength() && this.getMaximumLength() != other.getMaximumLength()) {
               return false;
            } else if (this.hasPrecision() != other.hasPrecision()) {
               return false;
            } else if (this.hasPrecision() && this.getPrecision() != other.getPrecision()) {
               return false;
            } else if (this.hasScale() != other.hasScale()) {
               return false;
            } else if (this.hasScale() && this.getScale() != other.getScale()) {
               return false;
            } else if (!this.getAttributesList().equals(other.getAttributesList())) {
               return false;
            } else if (this.hasCrs() != other.hasCrs()) {
               return false;
            } else if (this.hasCrs() && !this.getCrs().equals(other.getCrs())) {
               return false;
            } else if (this.hasAlgorithm() != other.hasAlgorithm()) {
               return false;
            } else if (this.hasAlgorithm() && this.algorithm_ != other.algorithm_) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasKind()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.kind_;
            }

            if (this.getSubtypesCount() > 0) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getSubtypesList().hashCode();
            }

            if (this.getFieldNamesCount() > 0) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getFieldNamesList().hashCode();
            }

            if (this.hasMaximumLength()) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.getMaximumLength();
            }

            if (this.hasPrecision()) {
               hash = 37 * hash + 5;
               hash = 53 * hash + this.getPrecision();
            }

            if (this.hasScale()) {
               hash = 37 * hash + 6;
               hash = 53 * hash + this.getScale();
            }

            if (this.getAttributesCount() > 0) {
               hash = 37 * hash + 7;
               hash = 53 * hash + this.getAttributesList().hashCode();
            }

            if (this.hasCrs()) {
               hash = 37 * hash + 8;
               hash = 53 * hash + this.getCrs().hashCode();
            }

            if (this.hasAlgorithm()) {
               hash = 37 * hash + 9;
               hash = 53 * hash + this.algorithm_;
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static Type parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (Type)PARSER.parseFrom(data);
      }

      public static Type parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Type)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Type parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (Type)PARSER.parseFrom(data);
      }

      public static Type parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Type)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Type parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (Type)PARSER.parseFrom(data);
      }

      public static Type parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Type)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Type parseFrom(InputStream input) throws IOException {
         return (Type)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static Type parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Type)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static Type parseDelimitedFrom(InputStream input) throws IOException {
         return (Type)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static Type parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Type)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static Type parseFrom(CodedInputStream input) throws IOException {
         return (Type)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static Type parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Type)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(Type prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static Type getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public Type getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static enum Kind implements ProtocolMessageEnum {
         BOOLEAN(0),
         BYTE(1),
         SHORT(2),
         INT(3),
         LONG(4),
         FLOAT(5),
         DOUBLE(6),
         STRING(7),
         BINARY(8),
         TIMESTAMP(9),
         LIST(10),
         MAP(11),
         STRUCT(12),
         UNION(13),
         DECIMAL(14),
         DATE(15),
         VARCHAR(16),
         CHAR(17),
         TIMESTAMP_INSTANT(18),
         GEOMETRY(19),
         GEOGRAPHY(20);

         public static final int BOOLEAN_VALUE = 0;
         public static final int BYTE_VALUE = 1;
         public static final int SHORT_VALUE = 2;
         public static final int INT_VALUE = 3;
         public static final int LONG_VALUE = 4;
         public static final int FLOAT_VALUE = 5;
         public static final int DOUBLE_VALUE = 6;
         public static final int STRING_VALUE = 7;
         public static final int BINARY_VALUE = 8;
         public static final int TIMESTAMP_VALUE = 9;
         public static final int LIST_VALUE = 10;
         public static final int MAP_VALUE = 11;
         public static final int STRUCT_VALUE = 12;
         public static final int UNION_VALUE = 13;
         public static final int DECIMAL_VALUE = 14;
         public static final int DATE_VALUE = 15;
         public static final int VARCHAR_VALUE = 16;
         public static final int CHAR_VALUE = 17;
         public static final int TIMESTAMP_INSTANT_VALUE = 18;
         public static final int GEOMETRY_VALUE = 19;
         public static final int GEOGRAPHY_VALUE = 20;
         private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
            public Kind findValueByNumber(int number) {
               return OrcProto.Type.Kind.forNumber(number);
            }
         };
         private static final Kind[] VALUES = values();
         private final int value;

         public final int getNumber() {
            return this.value;
         }

         /** @deprecated */
         @Deprecated
         public static Kind valueOf(int value) {
            return forNumber(value);
         }

         public static Kind forNumber(int value) {
            switch (value) {
               case 0 -> {
                  return BOOLEAN;
               }
               case 1 -> {
                  return BYTE;
               }
               case 2 -> {
                  return SHORT;
               }
               case 3 -> {
                  return INT;
               }
               case 4 -> {
                  return LONG;
               }
               case 5 -> {
                  return FLOAT;
               }
               case 6 -> {
                  return DOUBLE;
               }
               case 7 -> {
                  return STRING;
               }
               case 8 -> {
                  return BINARY;
               }
               case 9 -> {
                  return TIMESTAMP;
               }
               case 10 -> {
                  return LIST;
               }
               case 11 -> {
                  return MAP;
               }
               case 12 -> {
                  return STRUCT;
               }
               case 13 -> {
                  return UNION;
               }
               case 14 -> {
                  return DECIMAL;
               }
               case 15 -> {
                  return DATE;
               }
               case 16 -> {
                  return VARCHAR;
               }
               case 17 -> {
                  return CHAR;
               }
               case 18 -> {
                  return TIMESTAMP_INSTANT;
               }
               case 19 -> {
                  return GEOMETRY;
               }
               case 20 -> {
                  return GEOGRAPHY;
               }
               default -> {
                  return null;
               }
            }
         }

         public static Internal.EnumLiteMap internalGetValueMap() {
            return internalValueMap;
         }

         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)OrcProto.Type.getDescriptor().getEnumTypes().get(0);
         }

         public static Kind valueOf(Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[desc.getIndex()];
            }
         }

         private Kind(int value) {
            this.value = value;
         }

         // $FF: synthetic method
         private static Kind[] $values() {
            return new Kind[]{BOOLEAN, BYTE, SHORT, INT, LONG, FLOAT, DOUBLE, STRING, BINARY, TIMESTAMP, LIST, MAP, STRUCT, UNION, DECIMAL, DATE, VARCHAR, CHAR, TIMESTAMP_INSTANT, GEOMETRY, GEOGRAPHY};
         }
      }

      public static enum EdgeInterpolationAlgorithm implements ProtocolMessageEnum {
         SPHERICAL(0),
         VINCENTY(1),
         THOMAS(2),
         ANDOYER(3),
         KARNEY(4);

         public static final int SPHERICAL_VALUE = 0;
         public static final int VINCENTY_VALUE = 1;
         public static final int THOMAS_VALUE = 2;
         public static final int ANDOYER_VALUE = 3;
         public static final int KARNEY_VALUE = 4;
         private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
            public EdgeInterpolationAlgorithm findValueByNumber(int number) {
               return OrcProto.Type.EdgeInterpolationAlgorithm.forNumber(number);
            }
         };
         private static final EdgeInterpolationAlgorithm[] VALUES = values();
         private final int value;

         public final int getNumber() {
            return this.value;
         }

         /** @deprecated */
         @Deprecated
         public static EdgeInterpolationAlgorithm valueOf(int value) {
            return forNumber(value);
         }

         public static EdgeInterpolationAlgorithm forNumber(int value) {
            switch (value) {
               case 0 -> {
                  return SPHERICAL;
               }
               case 1 -> {
                  return VINCENTY;
               }
               case 2 -> {
                  return THOMAS;
               }
               case 3 -> {
                  return ANDOYER;
               }
               case 4 -> {
                  return KARNEY;
               }
               default -> {
                  return null;
               }
            }
         }

         public static Internal.EnumLiteMap internalGetValueMap() {
            return internalValueMap;
         }

         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)OrcProto.Type.getDescriptor().getEnumTypes().get(1);
         }

         public static EdgeInterpolationAlgorithm valueOf(Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[desc.getIndex()];
            }
         }

         private EdgeInterpolationAlgorithm(int value) {
            this.value = value;
         }

         // $FF: synthetic method
         private static EdgeInterpolationAlgorithm[] $values() {
            return new EdgeInterpolationAlgorithm[]{SPHERICAL, VINCENTY, THOMAS, ANDOYER, KARNEY};
         }
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements TypeOrBuilder {
         private int bitField0_;
         private int kind_ = 0;
         private Internal.IntList subtypes_ = OrcProto.Type.emptyIntList();
         private LazyStringList fieldNames_;
         private int maximumLength_;
         private int precision_;
         private int scale_;
         private List attributes_;
         private RepeatedFieldBuilderV3 attributesBuilder_;
         private Object crs_;
         private int algorithm_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_Type_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_Type_fieldAccessorTable.ensureFieldAccessorsInitialized(Type.class, Builder.class);
         }

         private Builder() {
            this.fieldNames_ = LazyStringArrayList.EMPTY;
            this.attributes_ = Collections.emptyList();
            this.crs_ = "";
            this.algorithm_ = 0;
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.fieldNames_ = LazyStringArrayList.EMPTY;
            this.attributes_ = Collections.emptyList();
            this.crs_ = "";
            this.algorithm_ = 0;
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.Type.alwaysUseFieldBuilders) {
               this.getAttributesFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            this.kind_ = 0;
            this.bitField0_ &= -2;
            this.subtypes_ = OrcProto.Type.emptyIntList();
            this.bitField0_ &= -3;
            this.fieldNames_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -5;
            this.maximumLength_ = 0;
            this.bitField0_ &= -9;
            this.precision_ = 0;
            this.bitField0_ &= -17;
            this.scale_ = 0;
            this.bitField0_ &= -33;
            if (this.attributesBuilder_ == null) {
               this.attributes_ = Collections.emptyList();
               this.bitField0_ &= -65;
            } else {
               this.attributesBuilder_.clear();
            }

            this.crs_ = "";
            this.bitField0_ &= -129;
            this.algorithm_ = 0;
            this.bitField0_ &= -257;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_Type_descriptor;
         }

         public Type getDefaultInstanceForType() {
            return OrcProto.Type.getDefaultInstance();
         }

         public Type build() {
            Type result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public Type buildPartial() {
            Type result = new Type(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.kind_ = this.kind_;
            if ((this.bitField0_ & 2) != 0) {
               this.subtypes_.makeImmutable();
               this.bitField0_ &= -3;
            }

            result.subtypes_ = this.subtypes_;
            if ((this.bitField0_ & 4) != 0) {
               this.fieldNames_ = this.fieldNames_.getUnmodifiableView();
               this.bitField0_ &= -5;
            }

            result.fieldNames_ = this.fieldNames_;
            if ((from_bitField0_ & 8) != 0) {
               result.maximumLength_ = this.maximumLength_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 16) != 0) {
               result.precision_ = this.precision_;
               to_bitField0_ |= 4;
            }

            if ((from_bitField0_ & 32) != 0) {
               result.scale_ = this.scale_;
               to_bitField0_ |= 8;
            }

            if (this.attributesBuilder_ == null) {
               if ((this.bitField0_ & 64) != 0) {
                  this.attributes_ = Collections.unmodifiableList(this.attributes_);
                  this.bitField0_ &= -65;
               }

               result.attributes_ = this.attributes_;
            } else {
               result.attributes_ = this.attributesBuilder_.build();
            }

            if ((from_bitField0_ & 128) != 0) {
               to_bitField0_ |= 16;
            }

            result.crs_ = this.crs_;
            if ((from_bitField0_ & 256) != 0) {
               to_bitField0_ |= 32;
            }

            result.algorithm_ = this.algorithm_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof Type) {
               return this.mergeFrom((Type)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(Type other) {
            if (other == OrcProto.Type.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasKind()) {
                  this.setKind(other.getKind());
               }

               if (!other.subtypes_.isEmpty()) {
                  if (this.subtypes_.isEmpty()) {
                     this.subtypes_ = other.subtypes_;
                     this.bitField0_ &= -3;
                  } else {
                     this.ensureSubtypesIsMutable();
                     this.subtypes_.addAll(other.subtypes_);
                  }

                  this.onChanged();
               }

               if (!other.fieldNames_.isEmpty()) {
                  if (this.fieldNames_.isEmpty()) {
                     this.fieldNames_ = other.fieldNames_;
                     this.bitField0_ &= -5;
                  } else {
                     this.ensureFieldNamesIsMutable();
                     this.fieldNames_.addAll(other.fieldNames_);
                  }

                  this.onChanged();
               }

               if (other.hasMaximumLength()) {
                  this.setMaximumLength(other.getMaximumLength());
               }

               if (other.hasPrecision()) {
                  this.setPrecision(other.getPrecision());
               }

               if (other.hasScale()) {
                  this.setScale(other.getScale());
               }

               if (this.attributesBuilder_ == null) {
                  if (!other.attributes_.isEmpty()) {
                     if (this.attributes_.isEmpty()) {
                        this.attributes_ = other.attributes_;
                        this.bitField0_ &= -65;
                     } else {
                        this.ensureAttributesIsMutable();
                        this.attributes_.addAll(other.attributes_);
                     }

                     this.onChanged();
                  }
               } else if (!other.attributes_.isEmpty()) {
                  if (this.attributesBuilder_.isEmpty()) {
                     this.attributesBuilder_.dispose();
                     this.attributesBuilder_ = null;
                     this.attributes_ = other.attributes_;
                     this.bitField0_ &= -65;
                     this.attributesBuilder_ = OrcProto.Type.alwaysUseFieldBuilders ? this.getAttributesFieldBuilder() : null;
                  } else {
                     this.attributesBuilder_.addAllMessages(other.attributes_);
                  }
               }

               if (other.hasCrs()) {
                  this.bitField0_ |= 128;
                  this.crs_ = other.crs_;
                  this.onChanged();
               }

               if (other.hasAlgorithm()) {
                  this.setAlgorithm(other.getAlgorithm());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            Type parsedMessage = null;

            try {
               parsedMessage = (Type)OrcProto.Type.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (Type)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasKind() {
            return (this.bitField0_ & 1) != 0;
         }

         public Kind getKind() {
            Kind result = OrcProto.Type.Kind.valueOf(this.kind_);
            return result == null ? OrcProto.Type.Kind.BOOLEAN : result;
         }

         public Builder setKind(Kind value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.kind_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public Builder clearKind() {
            this.bitField0_ &= -2;
            this.kind_ = 0;
            this.onChanged();
            return this;
         }

         private void ensureSubtypesIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.subtypes_ = OrcProto.Type.mutableCopy(this.subtypes_);
               this.bitField0_ |= 2;
            }

         }

         public List getSubtypesList() {
            return (List)((this.bitField0_ & 2) != 0 ? Collections.unmodifiableList(this.subtypes_) : this.subtypes_);
         }

         public int getSubtypesCount() {
            return this.subtypes_.size();
         }

         public int getSubtypes(int index) {
            return this.subtypes_.getInt(index);
         }

         public Builder setSubtypes(int index, int value) {
            this.ensureSubtypesIsMutable();
            this.subtypes_.setInt(index, value);
            this.onChanged();
            return this;
         }

         public Builder addSubtypes(int value) {
            this.ensureSubtypesIsMutable();
            this.subtypes_.addInt(value);
            this.onChanged();
            return this;
         }

         public Builder addAllSubtypes(Iterable values) {
            this.ensureSubtypesIsMutable();
            AbstractMessageLite.Builder.addAll(values, (List)this.subtypes_);
            this.onChanged();
            return this;
         }

         public Builder clearSubtypes() {
            this.subtypes_ = OrcProto.Type.emptyIntList();
            this.bitField0_ &= -3;
            this.onChanged();
            return this;
         }

         private void ensureFieldNamesIsMutable() {
            if ((this.bitField0_ & 4) == 0) {
               this.fieldNames_ = new LazyStringArrayList(this.fieldNames_);
               this.bitField0_ |= 4;
            }

         }

         public ProtocolStringList getFieldNamesList() {
            return this.fieldNames_.getUnmodifiableView();
         }

         public int getFieldNamesCount() {
            return this.fieldNames_.size();
         }

         public String getFieldNames(int index) {
            return (String)this.fieldNames_.get(index);
         }

         public ByteString getFieldNamesBytes(int index) {
            return this.fieldNames_.getByteString(index);
         }

         public Builder setFieldNames(int index, String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureFieldNamesIsMutable();
               this.fieldNames_.set(index, (Object)value);
               this.onChanged();
               return this;
            }
         }

         public Builder addFieldNames(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureFieldNamesIsMutable();
               this.fieldNames_.add((Object)value);
               this.onChanged();
               return this;
            }
         }

         public Builder addAllFieldNames(Iterable values) {
            this.ensureFieldNamesIsMutable();
            AbstractMessageLite.Builder.addAll(values, (List)this.fieldNames_);
            this.onChanged();
            return this;
         }

         public Builder clearFieldNames() {
            this.fieldNames_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -5;
            this.onChanged();
            return this;
         }

         public Builder addFieldNamesBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureFieldNamesIsMutable();
               this.fieldNames_.add(value);
               this.onChanged();
               return this;
            }
         }

         public boolean hasMaximumLength() {
            return (this.bitField0_ & 8) != 0;
         }

         public int getMaximumLength() {
            return this.maximumLength_;
         }

         public Builder setMaximumLength(int value) {
            this.bitField0_ |= 8;
            this.maximumLength_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMaximumLength() {
            this.bitField0_ &= -9;
            this.maximumLength_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasPrecision() {
            return (this.bitField0_ & 16) != 0;
         }

         public int getPrecision() {
            return this.precision_;
         }

         public Builder setPrecision(int value) {
            this.bitField0_ |= 16;
            this.precision_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearPrecision() {
            this.bitField0_ &= -17;
            this.precision_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasScale() {
            return (this.bitField0_ & 32) != 0;
         }

         public int getScale() {
            return this.scale_;
         }

         public Builder setScale(int value) {
            this.bitField0_ |= 32;
            this.scale_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearScale() {
            this.bitField0_ &= -33;
            this.scale_ = 0;
            this.onChanged();
            return this;
         }

         private void ensureAttributesIsMutable() {
            if ((this.bitField0_ & 64) == 0) {
               this.attributes_ = new ArrayList(this.attributes_);
               this.bitField0_ |= 64;
            }

         }

         public List getAttributesList() {
            return this.attributesBuilder_ == null ? Collections.unmodifiableList(this.attributes_) : this.attributesBuilder_.getMessageList();
         }

         public int getAttributesCount() {
            return this.attributesBuilder_ == null ? this.attributes_.size() : this.attributesBuilder_.getCount();
         }

         public StringPair getAttributes(int index) {
            return this.attributesBuilder_ == null ? (StringPair)this.attributes_.get(index) : (StringPair)this.attributesBuilder_.getMessage(index);
         }

         public Builder setAttributes(int index, StringPair value) {
            if (this.attributesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureAttributesIsMutable();
               this.attributes_.set(index, value);
               this.onChanged();
            } else {
               this.attributesBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setAttributes(int index, StringPair.Builder builderForValue) {
            if (this.attributesBuilder_ == null) {
               this.ensureAttributesIsMutable();
               this.attributes_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.attributesBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAttributes(StringPair value) {
            if (this.attributesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureAttributesIsMutable();
               this.attributes_.add(value);
               this.onChanged();
            } else {
               this.attributesBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addAttributes(int index, StringPair value) {
            if (this.attributesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureAttributesIsMutable();
               this.attributes_.add(index, value);
               this.onChanged();
            } else {
               this.attributesBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addAttributes(StringPair.Builder builderForValue) {
            if (this.attributesBuilder_ == null) {
               this.ensureAttributesIsMutable();
               this.attributes_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.attributesBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addAttributes(int index, StringPair.Builder builderForValue) {
            if (this.attributesBuilder_ == null) {
               this.ensureAttributesIsMutable();
               this.attributes_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.attributesBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllAttributes(Iterable values) {
            if (this.attributesBuilder_ == null) {
               this.ensureAttributesIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.attributes_);
               this.onChanged();
            } else {
               this.attributesBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearAttributes() {
            if (this.attributesBuilder_ == null) {
               this.attributes_ = Collections.emptyList();
               this.bitField0_ &= -65;
               this.onChanged();
            } else {
               this.attributesBuilder_.clear();
            }

            return this;
         }

         public Builder removeAttributes(int index) {
            if (this.attributesBuilder_ == null) {
               this.ensureAttributesIsMutable();
               this.attributes_.remove(index);
               this.onChanged();
            } else {
               this.attributesBuilder_.remove(index);
            }

            return this;
         }

         public StringPair.Builder getAttributesBuilder(int index) {
            return (StringPair.Builder)this.getAttributesFieldBuilder().getBuilder(index);
         }

         public StringPairOrBuilder getAttributesOrBuilder(int index) {
            return this.attributesBuilder_ == null ? (StringPairOrBuilder)this.attributes_.get(index) : (StringPairOrBuilder)this.attributesBuilder_.getMessageOrBuilder(index);
         }

         public List getAttributesOrBuilderList() {
            return this.attributesBuilder_ != null ? this.attributesBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.attributes_);
         }

         public StringPair.Builder addAttributesBuilder() {
            return (StringPair.Builder)this.getAttributesFieldBuilder().addBuilder(OrcProto.StringPair.getDefaultInstance());
         }

         public StringPair.Builder addAttributesBuilder(int index) {
            return (StringPair.Builder)this.getAttributesFieldBuilder().addBuilder(index, OrcProto.StringPair.getDefaultInstance());
         }

         public List getAttributesBuilderList() {
            return this.getAttributesFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getAttributesFieldBuilder() {
            if (this.attributesBuilder_ == null) {
               this.attributesBuilder_ = new RepeatedFieldBuilderV3(this.attributes_, (this.bitField0_ & 64) != 0, this.getParentForChildren(), this.isClean());
               this.attributes_ = null;
            }

            return this.attributesBuilder_;
         }

         public boolean hasCrs() {
            return (this.bitField0_ & 128) != 0;
         }

         public String getCrs() {
            Object ref = this.crs_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.crs_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getCrsBytes() {
            Object ref = this.crs_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.crs_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setCrs(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 128;
               this.crs_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearCrs() {
            this.bitField0_ &= -129;
            this.crs_ = OrcProto.Type.getDefaultInstance().getCrs();
            this.onChanged();
            return this;
         }

         public Builder setCrsBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 128;
               this.crs_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasAlgorithm() {
            return (this.bitField0_ & 256) != 0;
         }

         public EdgeInterpolationAlgorithm getAlgorithm() {
            EdgeInterpolationAlgorithm result = OrcProto.Type.EdgeInterpolationAlgorithm.valueOf(this.algorithm_);
            return result == null ? OrcProto.Type.EdgeInterpolationAlgorithm.SPHERICAL : result;
         }

         public Builder setAlgorithm(EdgeInterpolationAlgorithm value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 256;
               this.algorithm_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public Builder clearAlgorithm() {
            this.bitField0_ &= -257;
            this.algorithm_ = 0;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class StripeInformation extends GeneratedMessageV3 implements StripeInformationOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int OFFSET_FIELD_NUMBER = 1;
      private long offset_;
      public static final int INDEX_LENGTH_FIELD_NUMBER = 2;
      private long indexLength_;
      public static final int DATA_LENGTH_FIELD_NUMBER = 3;
      private long dataLength_;
      public static final int FOOTER_LENGTH_FIELD_NUMBER = 4;
      private long footerLength_;
      public static final int NUMBER_OF_ROWS_FIELD_NUMBER = 5;
      private long numberOfRows_;
      public static final int ENCRYPT_STRIPE_ID_FIELD_NUMBER = 6;
      private long encryptStripeId_;
      public static final int ENCRYPTED_LOCAL_KEYS_FIELD_NUMBER = 7;
      private List encryptedLocalKeys_;
      private byte memoizedIsInitialized;
      private static final StripeInformation DEFAULT_INSTANCE = new StripeInformation();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public StripeInformation parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new StripeInformation(input, extensionRegistry);
         }
      };

      private StripeInformation(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private StripeInformation() {
         this.memoizedIsInitialized = -1;
         this.encryptedLocalKeys_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new StripeInformation();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private StripeInformation(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.offset_ = input.readUInt64();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.indexLength_ = input.readUInt64();
                        break;
                     case 24:
                        this.bitField0_ |= 4;
                        this.dataLength_ = input.readUInt64();
                        break;
                     case 32:
                        this.bitField0_ |= 8;
                        this.footerLength_ = input.readUInt64();
                        break;
                     case 40:
                        this.bitField0_ |= 16;
                        this.numberOfRows_ = input.readUInt64();
                        break;
                     case 48:
                        this.bitField0_ |= 32;
                        this.encryptStripeId_ = input.readUInt64();
                        break;
                     case 58:
                        if ((mutable_bitField0_ & 64) == 0) {
                           this.encryptedLocalKeys_ = new ArrayList();
                           mutable_bitField0_ |= 64;
                        }

                        this.encryptedLocalKeys_.add(input.readBytes());
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 64) != 0) {
                  this.encryptedLocalKeys_ = Collections.unmodifiableList(this.encryptedLocalKeys_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_StripeInformation_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_StripeInformation_fieldAccessorTable.ensureFieldAccessorsInitialized(StripeInformation.class, Builder.class);
      }

      public boolean hasOffset() {
         return (this.bitField0_ & 1) != 0;
      }

      public long getOffset() {
         return this.offset_;
      }

      public boolean hasIndexLength() {
         return (this.bitField0_ & 2) != 0;
      }

      public long getIndexLength() {
         return this.indexLength_;
      }

      public boolean hasDataLength() {
         return (this.bitField0_ & 4) != 0;
      }

      public long getDataLength() {
         return this.dataLength_;
      }

      public boolean hasFooterLength() {
         return (this.bitField0_ & 8) != 0;
      }

      public long getFooterLength() {
         return this.footerLength_;
      }

      public boolean hasNumberOfRows() {
         return (this.bitField0_ & 16) != 0;
      }

      public long getNumberOfRows() {
         return this.numberOfRows_;
      }

      public boolean hasEncryptStripeId() {
         return (this.bitField0_ & 32) != 0;
      }

      public long getEncryptStripeId() {
         return this.encryptStripeId_;
      }

      public List getEncryptedLocalKeysList() {
         return this.encryptedLocalKeys_;
      }

      public int getEncryptedLocalKeysCount() {
         return this.encryptedLocalKeys_.size();
      }

      public ByteString getEncryptedLocalKeys(int index) {
         return (ByteString)this.encryptedLocalKeys_.get(index);
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeUInt64(1, this.offset_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeUInt64(2, this.indexLength_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeUInt64(3, this.dataLength_);
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeUInt64(4, this.footerLength_);
         }

         if ((this.bitField0_ & 16) != 0) {
            output.writeUInt64(5, this.numberOfRows_);
         }

         if ((this.bitField0_ & 32) != 0) {
            output.writeUInt64(6, this.encryptStripeId_);
         }

         for(int i = 0; i < this.encryptedLocalKeys_.size(); ++i) {
            output.writeBytes(7, (ByteString)this.encryptedLocalKeys_.get(i));
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeUInt64Size(1, this.offset_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeUInt64Size(2, this.indexLength_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeUInt64Size(3, this.dataLength_);
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeUInt64Size(4, this.footerLength_);
            }

            if ((this.bitField0_ & 16) != 0) {
               size += CodedOutputStream.computeUInt64Size(5, this.numberOfRows_);
            }

            if ((this.bitField0_ & 32) != 0) {
               size += CodedOutputStream.computeUInt64Size(6, this.encryptStripeId_);
            }

            int dataSize = 0;

            for(int i = 0; i < this.encryptedLocalKeys_.size(); ++i) {
               dataSize += CodedOutputStream.computeBytesSizeNoTag((ByteString)this.encryptedLocalKeys_.get(i));
            }

            size += dataSize;
            size += 1 * this.getEncryptedLocalKeysList().size();
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof StripeInformation)) {
            return super.equals(obj);
         } else {
            StripeInformation other = (StripeInformation)obj;
            if (this.hasOffset() != other.hasOffset()) {
               return false;
            } else if (this.hasOffset() && this.getOffset() != other.getOffset()) {
               return false;
            } else if (this.hasIndexLength() != other.hasIndexLength()) {
               return false;
            } else if (this.hasIndexLength() && this.getIndexLength() != other.getIndexLength()) {
               return false;
            } else if (this.hasDataLength() != other.hasDataLength()) {
               return false;
            } else if (this.hasDataLength() && this.getDataLength() != other.getDataLength()) {
               return false;
            } else if (this.hasFooterLength() != other.hasFooterLength()) {
               return false;
            } else if (this.hasFooterLength() && this.getFooterLength() != other.getFooterLength()) {
               return false;
            } else if (this.hasNumberOfRows() != other.hasNumberOfRows()) {
               return false;
            } else if (this.hasNumberOfRows() && this.getNumberOfRows() != other.getNumberOfRows()) {
               return false;
            } else if (this.hasEncryptStripeId() != other.hasEncryptStripeId()) {
               return false;
            } else if (this.hasEncryptStripeId() && this.getEncryptStripeId() != other.getEncryptStripeId()) {
               return false;
            } else if (!this.getEncryptedLocalKeysList().equals(other.getEncryptedLocalKeysList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasOffset()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + Internal.hashLong(this.getOffset());
            }

            if (this.hasIndexLength()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + Internal.hashLong(this.getIndexLength());
            }

            if (this.hasDataLength()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashLong(this.getDataLength());
            }

            if (this.hasFooterLength()) {
               hash = 37 * hash + 4;
               hash = 53 * hash + Internal.hashLong(this.getFooterLength());
            }

            if (this.hasNumberOfRows()) {
               hash = 37 * hash + 5;
               hash = 53 * hash + Internal.hashLong(this.getNumberOfRows());
            }

            if (this.hasEncryptStripeId()) {
               hash = 37 * hash + 6;
               hash = 53 * hash + Internal.hashLong(this.getEncryptStripeId());
            }

            if (this.getEncryptedLocalKeysCount() > 0) {
               hash = 37 * hash + 7;
               hash = 53 * hash + this.getEncryptedLocalKeysList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static StripeInformation parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (StripeInformation)PARSER.parseFrom(data);
      }

      public static StripeInformation parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StripeInformation)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StripeInformation parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (StripeInformation)PARSER.parseFrom(data);
      }

      public static StripeInformation parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StripeInformation)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StripeInformation parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (StripeInformation)PARSER.parseFrom(data);
      }

      public static StripeInformation parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StripeInformation)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StripeInformation parseFrom(InputStream input) throws IOException {
         return (StripeInformation)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static StripeInformation parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StripeInformation)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static StripeInformation parseDelimitedFrom(InputStream input) throws IOException {
         return (StripeInformation)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static StripeInformation parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StripeInformation)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static StripeInformation parseFrom(CodedInputStream input) throws IOException {
         return (StripeInformation)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static StripeInformation parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StripeInformation)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(StripeInformation prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static StripeInformation getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public StripeInformation getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements StripeInformationOrBuilder {
         private int bitField0_;
         private long offset_;
         private long indexLength_;
         private long dataLength_;
         private long footerLength_;
         private long numberOfRows_;
         private long encryptStripeId_;
         private List encryptedLocalKeys_ = Collections.emptyList();

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_StripeInformation_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_StripeInformation_fieldAccessorTable.ensureFieldAccessorsInitialized(StripeInformation.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.StripeInformation.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.offset_ = 0L;
            this.bitField0_ &= -2;
            this.indexLength_ = 0L;
            this.bitField0_ &= -3;
            this.dataLength_ = 0L;
            this.bitField0_ &= -5;
            this.footerLength_ = 0L;
            this.bitField0_ &= -9;
            this.numberOfRows_ = 0L;
            this.bitField0_ &= -17;
            this.encryptStripeId_ = 0L;
            this.bitField0_ &= -33;
            this.encryptedLocalKeys_ = Collections.emptyList();
            this.bitField0_ &= -65;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_StripeInformation_descriptor;
         }

         public StripeInformation getDefaultInstanceForType() {
            return OrcProto.StripeInformation.getDefaultInstance();
         }

         public StripeInformation build() {
            StripeInformation result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public StripeInformation buildPartial() {
            StripeInformation result = new StripeInformation(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.offset_ = this.offset_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               result.indexLength_ = this.indexLength_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               result.dataLength_ = this.dataLength_;
               to_bitField0_ |= 4;
            }

            if ((from_bitField0_ & 8) != 0) {
               result.footerLength_ = this.footerLength_;
               to_bitField0_ |= 8;
            }

            if ((from_bitField0_ & 16) != 0) {
               result.numberOfRows_ = this.numberOfRows_;
               to_bitField0_ |= 16;
            }

            if ((from_bitField0_ & 32) != 0) {
               result.encryptStripeId_ = this.encryptStripeId_;
               to_bitField0_ |= 32;
            }

            if ((this.bitField0_ & 64) != 0) {
               this.encryptedLocalKeys_ = Collections.unmodifiableList(this.encryptedLocalKeys_);
               this.bitField0_ &= -65;
            }

            result.encryptedLocalKeys_ = this.encryptedLocalKeys_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof StripeInformation) {
               return this.mergeFrom((StripeInformation)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(StripeInformation other) {
            if (other == OrcProto.StripeInformation.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasOffset()) {
                  this.setOffset(other.getOffset());
               }

               if (other.hasIndexLength()) {
                  this.setIndexLength(other.getIndexLength());
               }

               if (other.hasDataLength()) {
                  this.setDataLength(other.getDataLength());
               }

               if (other.hasFooterLength()) {
                  this.setFooterLength(other.getFooterLength());
               }

               if (other.hasNumberOfRows()) {
                  this.setNumberOfRows(other.getNumberOfRows());
               }

               if (other.hasEncryptStripeId()) {
                  this.setEncryptStripeId(other.getEncryptStripeId());
               }

               if (!other.encryptedLocalKeys_.isEmpty()) {
                  if (this.encryptedLocalKeys_.isEmpty()) {
                     this.encryptedLocalKeys_ = other.encryptedLocalKeys_;
                     this.bitField0_ &= -65;
                  } else {
                     this.ensureEncryptedLocalKeysIsMutable();
                     this.encryptedLocalKeys_.addAll(other.encryptedLocalKeys_);
                  }

                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            StripeInformation parsedMessage = null;

            try {
               parsedMessage = (StripeInformation)OrcProto.StripeInformation.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (StripeInformation)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasOffset() {
            return (this.bitField0_ & 1) != 0;
         }

         public long getOffset() {
            return this.offset_;
         }

         public Builder setOffset(long value) {
            this.bitField0_ |= 1;
            this.offset_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearOffset() {
            this.bitField0_ &= -2;
            this.offset_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasIndexLength() {
            return (this.bitField0_ & 2) != 0;
         }

         public long getIndexLength() {
            return this.indexLength_;
         }

         public Builder setIndexLength(long value) {
            this.bitField0_ |= 2;
            this.indexLength_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearIndexLength() {
            this.bitField0_ &= -3;
            this.indexLength_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasDataLength() {
            return (this.bitField0_ & 4) != 0;
         }

         public long getDataLength() {
            return this.dataLength_;
         }

         public Builder setDataLength(long value) {
            this.bitField0_ |= 4;
            this.dataLength_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearDataLength() {
            this.bitField0_ &= -5;
            this.dataLength_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasFooterLength() {
            return (this.bitField0_ & 8) != 0;
         }

         public long getFooterLength() {
            return this.footerLength_;
         }

         public Builder setFooterLength(long value) {
            this.bitField0_ |= 8;
            this.footerLength_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearFooterLength() {
            this.bitField0_ &= -9;
            this.footerLength_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasNumberOfRows() {
            return (this.bitField0_ & 16) != 0;
         }

         public long getNumberOfRows() {
            return this.numberOfRows_;
         }

         public Builder setNumberOfRows(long value) {
            this.bitField0_ |= 16;
            this.numberOfRows_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearNumberOfRows() {
            this.bitField0_ &= -17;
            this.numberOfRows_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasEncryptStripeId() {
            return (this.bitField0_ & 32) != 0;
         }

         public long getEncryptStripeId() {
            return this.encryptStripeId_;
         }

         public Builder setEncryptStripeId(long value) {
            this.bitField0_ |= 32;
            this.encryptStripeId_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearEncryptStripeId() {
            this.bitField0_ &= -33;
            this.encryptStripeId_ = 0L;
            this.onChanged();
            return this;
         }

         private void ensureEncryptedLocalKeysIsMutable() {
            if ((this.bitField0_ & 64) == 0) {
               this.encryptedLocalKeys_ = new ArrayList(this.encryptedLocalKeys_);
               this.bitField0_ |= 64;
            }

         }

         public List getEncryptedLocalKeysList() {
            return (this.bitField0_ & 64) != 0 ? Collections.unmodifiableList(this.encryptedLocalKeys_) : this.encryptedLocalKeys_;
         }

         public int getEncryptedLocalKeysCount() {
            return this.encryptedLocalKeys_.size();
         }

         public ByteString getEncryptedLocalKeys(int index) {
            return (ByteString)this.encryptedLocalKeys_.get(index);
         }

         public Builder setEncryptedLocalKeys(int index, ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureEncryptedLocalKeysIsMutable();
               this.encryptedLocalKeys_.set(index, value);
               this.onChanged();
               return this;
            }
         }

         public Builder addEncryptedLocalKeys(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureEncryptedLocalKeysIsMutable();
               this.encryptedLocalKeys_.add(value);
               this.onChanged();
               return this;
            }
         }

         public Builder addAllEncryptedLocalKeys(Iterable values) {
            this.ensureEncryptedLocalKeysIsMutable();
            AbstractMessageLite.Builder.addAll(values, this.encryptedLocalKeys_);
            this.onChanged();
            return this;
         }

         public Builder clearEncryptedLocalKeys() {
            this.encryptedLocalKeys_ = Collections.emptyList();
            this.bitField0_ &= -65;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class UserMetadataItem extends GeneratedMessageV3 implements UserMetadataItemOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int VALUE_FIELD_NUMBER = 2;
      private ByteString value_;
      private byte memoizedIsInitialized;
      private static final UserMetadataItem DEFAULT_INSTANCE = new UserMetadataItem();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public UserMetadataItem parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new UserMetadataItem(input, extensionRegistry);
         }
      };

      private UserMetadataItem(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private UserMetadataItem() {
         this.memoizedIsInitialized = -1;
         this.name_ = "";
         this.value_ = ByteString.EMPTY;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new UserMetadataItem();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private UserMetadataItem(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.name_ = bs;
                        break;
                     case 18:
                        this.bitField0_ |= 2;
                        this.value_ = input.readBytes();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_UserMetadataItem_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_UserMetadataItem_fieldAccessorTable.ensureFieldAccessorsInitialized(UserMetadataItem.class, Builder.class);
      }

      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getName() {
         Object ref = this.name_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.name_ = s;
            }

            return s;
         }
      }

      public ByteString getNameBytes() {
         Object ref = this.name_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.name_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasValue() {
         return (this.bitField0_ & 2) != 0;
      }

      public ByteString getValue() {
         return this.value_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.name_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeBytes(2, this.value_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeBytesSize(2, this.value_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof UserMetadataItem)) {
            return super.equals(obj);
         } else {
            UserMetadataItem other = (UserMetadataItem)obj;
            if (this.hasName() != other.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(other.getName())) {
               return false;
            } else if (this.hasValue() != other.hasValue()) {
               return false;
            } else if (this.hasValue() && !this.getValue().equals(other.getValue())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasName()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getName().hashCode();
            }

            if (this.hasValue()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getValue().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static UserMetadataItem parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (UserMetadataItem)PARSER.parseFrom(data);
      }

      public static UserMetadataItem parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (UserMetadataItem)PARSER.parseFrom(data, extensionRegistry);
      }

      public static UserMetadataItem parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (UserMetadataItem)PARSER.parseFrom(data);
      }

      public static UserMetadataItem parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (UserMetadataItem)PARSER.parseFrom(data, extensionRegistry);
      }

      public static UserMetadataItem parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (UserMetadataItem)PARSER.parseFrom(data);
      }

      public static UserMetadataItem parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (UserMetadataItem)PARSER.parseFrom(data, extensionRegistry);
      }

      public static UserMetadataItem parseFrom(InputStream input) throws IOException {
         return (UserMetadataItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static UserMetadataItem parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (UserMetadataItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static UserMetadataItem parseDelimitedFrom(InputStream input) throws IOException {
         return (UserMetadataItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static UserMetadataItem parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (UserMetadataItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static UserMetadataItem parseFrom(CodedInputStream input) throws IOException {
         return (UserMetadataItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static UserMetadataItem parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (UserMetadataItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(UserMetadataItem prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static UserMetadataItem getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public UserMetadataItem getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements UserMetadataItemOrBuilder {
         private int bitField0_;
         private Object name_ = "";
         private ByteString value_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_UserMetadataItem_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_UserMetadataItem_fieldAccessorTable.ensureFieldAccessorsInitialized(UserMetadataItem.class, Builder.class);
         }

         private Builder() {
            this.value_ = ByteString.EMPTY;
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.value_ = ByteString.EMPTY;
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.UserMetadataItem.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            this.value_ = ByteString.EMPTY;
            this.bitField0_ &= -3;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_UserMetadataItem_descriptor;
         }

         public UserMetadataItem getDefaultInstanceForType() {
            return OrcProto.UserMetadataItem.getDefaultInstance();
         }

         public UserMetadataItem build() {
            UserMetadataItem result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public UserMetadataItem buildPartial() {
            UserMetadataItem result = new UserMetadataItem(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.name_ = this.name_;
            if ((from_bitField0_ & 2) != 0) {
               to_bitField0_ |= 2;
            }

            result.value_ = this.value_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof UserMetadataItem) {
               return this.mergeFrom((UserMetadataItem)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(UserMetadataItem other) {
            if (other == OrcProto.UserMetadataItem.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = other.name_;
                  this.onChanged();
               }

               if (other.hasValue()) {
                  this.setValue(other.getValue());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            UserMetadataItem parsedMessage = null;

            try {
               parsedMessage = (UserMetadataItem)OrcProto.UserMetadataItem.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (UserMetadataItem)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getName() {
            Object ref = this.name_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.name_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.name_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = OrcProto.UserMetadataItem.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public Builder setNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasValue() {
            return (this.bitField0_ & 2) != 0;
         }

         public ByteString getValue() {
            return this.value_;
         }

         public Builder setValue(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.value_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearValue() {
            this.bitField0_ &= -3;
            this.value_ = OrcProto.UserMetadataItem.getDefaultInstance().getValue();
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class StripeStatistics extends GeneratedMessageV3 implements StripeStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int COL_STATS_FIELD_NUMBER = 1;
      private List colStats_;
      private byte memoizedIsInitialized;
      private static final StripeStatistics DEFAULT_INSTANCE = new StripeStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public StripeStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new StripeStatistics(input, extensionRegistry);
         }
      };

      private StripeStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private StripeStatistics() {
         this.memoizedIsInitialized = -1;
         this.colStats_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new StripeStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private StripeStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.colStats_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.colStats_.add((ColumnStatistics)input.readMessage(OrcProto.ColumnStatistics.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.colStats_ = Collections.unmodifiableList(this.colStats_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_StripeStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_StripeStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(StripeStatistics.class, Builder.class);
      }

      public List getColStatsList() {
         return this.colStats_;
      }

      public List getColStatsOrBuilderList() {
         return this.colStats_;
      }

      public int getColStatsCount() {
         return this.colStats_.size();
      }

      public ColumnStatistics getColStats(int index) {
         return (ColumnStatistics)this.colStats_.get(index);
      }

      public ColumnStatisticsOrBuilder getColStatsOrBuilder(int index) {
         return (ColumnStatisticsOrBuilder)this.colStats_.get(index);
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.colStats_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.colStats_.get(i));
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.colStats_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.colStats_.get(i));
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof StripeStatistics)) {
            return super.equals(obj);
         } else {
            StripeStatistics other = (StripeStatistics)obj;
            if (!this.getColStatsList().equals(other.getColStatsList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getColStatsCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getColStatsList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static StripeStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (StripeStatistics)PARSER.parseFrom(data);
      }

      public static StripeStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StripeStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StripeStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (StripeStatistics)PARSER.parseFrom(data);
      }

      public static StripeStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StripeStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StripeStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (StripeStatistics)PARSER.parseFrom(data);
      }

      public static StripeStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StripeStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StripeStatistics parseFrom(InputStream input) throws IOException {
         return (StripeStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static StripeStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StripeStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static StripeStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (StripeStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static StripeStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StripeStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static StripeStatistics parseFrom(CodedInputStream input) throws IOException {
         return (StripeStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static StripeStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StripeStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(StripeStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static StripeStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public StripeStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements StripeStatisticsOrBuilder {
         private int bitField0_;
         private List colStats_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 colStatsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_StripeStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_StripeStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(StripeStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.StripeStatistics.alwaysUseFieldBuilders) {
               this.getColStatsFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            if (this.colStatsBuilder_ == null) {
               this.colStats_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.colStatsBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_StripeStatistics_descriptor;
         }

         public StripeStatistics getDefaultInstanceForType() {
            return OrcProto.StripeStatistics.getDefaultInstance();
         }

         public StripeStatistics build() {
            StripeStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public StripeStatistics buildPartial() {
            StripeStatistics result = new StripeStatistics(this);
            int from_bitField0_ = this.bitField0_;
            if (this.colStatsBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.colStats_ = Collections.unmodifiableList(this.colStats_);
                  this.bitField0_ &= -2;
               }

               result.colStats_ = this.colStats_;
            } else {
               result.colStats_ = this.colStatsBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof StripeStatistics) {
               return this.mergeFrom((StripeStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(StripeStatistics other) {
            if (other == OrcProto.StripeStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (this.colStatsBuilder_ == null) {
                  if (!other.colStats_.isEmpty()) {
                     if (this.colStats_.isEmpty()) {
                        this.colStats_ = other.colStats_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureColStatsIsMutable();
                        this.colStats_.addAll(other.colStats_);
                     }

                     this.onChanged();
                  }
               } else if (!other.colStats_.isEmpty()) {
                  if (this.colStatsBuilder_.isEmpty()) {
                     this.colStatsBuilder_.dispose();
                     this.colStatsBuilder_ = null;
                     this.colStats_ = other.colStats_;
                     this.bitField0_ &= -2;
                     this.colStatsBuilder_ = OrcProto.StripeStatistics.alwaysUseFieldBuilders ? this.getColStatsFieldBuilder() : null;
                  } else {
                     this.colStatsBuilder_.addAllMessages(other.colStats_);
                  }
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            StripeStatistics parsedMessage = null;

            try {
               parsedMessage = (StripeStatistics)OrcProto.StripeStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (StripeStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureColStatsIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.colStats_ = new ArrayList(this.colStats_);
               this.bitField0_ |= 1;
            }

         }

         public List getColStatsList() {
            return this.colStatsBuilder_ == null ? Collections.unmodifiableList(this.colStats_) : this.colStatsBuilder_.getMessageList();
         }

         public int getColStatsCount() {
            return this.colStatsBuilder_ == null ? this.colStats_.size() : this.colStatsBuilder_.getCount();
         }

         public ColumnStatistics getColStats(int index) {
            return this.colStatsBuilder_ == null ? (ColumnStatistics)this.colStats_.get(index) : (ColumnStatistics)this.colStatsBuilder_.getMessage(index);
         }

         public Builder setColStats(int index, ColumnStatistics value) {
            if (this.colStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColStatsIsMutable();
               this.colStats_.set(index, value);
               this.onChanged();
            } else {
               this.colStatsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setColStats(int index, ColumnStatistics.Builder builderForValue) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               this.colStats_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.colStatsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addColStats(ColumnStatistics value) {
            if (this.colStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColStatsIsMutable();
               this.colStats_.add(value);
               this.onChanged();
            } else {
               this.colStatsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addColStats(int index, ColumnStatistics value) {
            if (this.colStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColStatsIsMutable();
               this.colStats_.add(index, value);
               this.onChanged();
            } else {
               this.colStatsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addColStats(ColumnStatistics.Builder builderForValue) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               this.colStats_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.colStatsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addColStats(int index, ColumnStatistics.Builder builderForValue) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               this.colStats_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.colStatsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllColStats(Iterable values) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.colStats_);
               this.onChanged();
            } else {
               this.colStatsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearColStats() {
            if (this.colStatsBuilder_ == null) {
               this.colStats_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.colStatsBuilder_.clear();
            }

            return this;
         }

         public Builder removeColStats(int index) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               this.colStats_.remove(index);
               this.onChanged();
            } else {
               this.colStatsBuilder_.remove(index);
            }

            return this;
         }

         public ColumnStatistics.Builder getColStatsBuilder(int index) {
            return (ColumnStatistics.Builder)this.getColStatsFieldBuilder().getBuilder(index);
         }

         public ColumnStatisticsOrBuilder getColStatsOrBuilder(int index) {
            return this.colStatsBuilder_ == null ? (ColumnStatisticsOrBuilder)this.colStats_.get(index) : (ColumnStatisticsOrBuilder)this.colStatsBuilder_.getMessageOrBuilder(index);
         }

         public List getColStatsOrBuilderList() {
            return this.colStatsBuilder_ != null ? this.colStatsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.colStats_);
         }

         public ColumnStatistics.Builder addColStatsBuilder() {
            return (ColumnStatistics.Builder)this.getColStatsFieldBuilder().addBuilder(OrcProto.ColumnStatistics.getDefaultInstance());
         }

         public ColumnStatistics.Builder addColStatsBuilder(int index) {
            return (ColumnStatistics.Builder)this.getColStatsFieldBuilder().addBuilder(index, OrcProto.ColumnStatistics.getDefaultInstance());
         }

         public List getColStatsBuilderList() {
            return this.getColStatsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getColStatsFieldBuilder() {
            if (this.colStatsBuilder_ == null) {
               this.colStatsBuilder_ = new RepeatedFieldBuilderV3(this.colStats_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.colStats_ = null;
            }

            return this.colStatsBuilder_;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class Metadata extends GeneratedMessageV3 implements MetadataOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int STRIPE_STATS_FIELD_NUMBER = 1;
      private List stripeStats_;
      private byte memoizedIsInitialized;
      private static final Metadata DEFAULT_INSTANCE = new Metadata();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public Metadata parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new Metadata(input, extensionRegistry);
         }
      };

      private Metadata(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private Metadata() {
         this.memoizedIsInitialized = -1;
         this.stripeStats_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new Metadata();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private Metadata(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.stripeStats_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.stripeStats_.add((StripeStatistics)input.readMessage(OrcProto.StripeStatistics.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.stripeStats_ = Collections.unmodifiableList(this.stripeStats_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_Metadata_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_Metadata_fieldAccessorTable.ensureFieldAccessorsInitialized(Metadata.class, Builder.class);
      }

      public List getStripeStatsList() {
         return this.stripeStats_;
      }

      public List getStripeStatsOrBuilderList() {
         return this.stripeStats_;
      }

      public int getStripeStatsCount() {
         return this.stripeStats_.size();
      }

      public StripeStatistics getStripeStats(int index) {
         return (StripeStatistics)this.stripeStats_.get(index);
      }

      public StripeStatisticsOrBuilder getStripeStatsOrBuilder(int index) {
         return (StripeStatisticsOrBuilder)this.stripeStats_.get(index);
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.stripeStats_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.stripeStats_.get(i));
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.stripeStats_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.stripeStats_.get(i));
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof Metadata)) {
            return super.equals(obj);
         } else {
            Metadata other = (Metadata)obj;
            if (!this.getStripeStatsList().equals(other.getStripeStatsList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getStripeStatsCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getStripeStatsList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static Metadata parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (Metadata)PARSER.parseFrom(data);
      }

      public static Metadata parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Metadata)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Metadata parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (Metadata)PARSER.parseFrom(data);
      }

      public static Metadata parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Metadata)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Metadata parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (Metadata)PARSER.parseFrom(data);
      }

      public static Metadata parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Metadata)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Metadata parseFrom(InputStream input) throws IOException {
         return (Metadata)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static Metadata parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Metadata)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static Metadata parseDelimitedFrom(InputStream input) throws IOException {
         return (Metadata)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static Metadata parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Metadata)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static Metadata parseFrom(CodedInputStream input) throws IOException {
         return (Metadata)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static Metadata parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Metadata)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(Metadata prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static Metadata getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public Metadata getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements MetadataOrBuilder {
         private int bitField0_;
         private List stripeStats_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 stripeStatsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_Metadata_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_Metadata_fieldAccessorTable.ensureFieldAccessorsInitialized(Metadata.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.Metadata.alwaysUseFieldBuilders) {
               this.getStripeStatsFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            if (this.stripeStatsBuilder_ == null) {
               this.stripeStats_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.stripeStatsBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_Metadata_descriptor;
         }

         public Metadata getDefaultInstanceForType() {
            return OrcProto.Metadata.getDefaultInstance();
         }

         public Metadata build() {
            Metadata result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public Metadata buildPartial() {
            Metadata result = new Metadata(this);
            int from_bitField0_ = this.bitField0_;
            if (this.stripeStatsBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.stripeStats_ = Collections.unmodifiableList(this.stripeStats_);
                  this.bitField0_ &= -2;
               }

               result.stripeStats_ = this.stripeStats_;
            } else {
               result.stripeStats_ = this.stripeStatsBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof Metadata) {
               return this.mergeFrom((Metadata)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(Metadata other) {
            if (other == OrcProto.Metadata.getDefaultInstance()) {
               return this;
            } else {
               if (this.stripeStatsBuilder_ == null) {
                  if (!other.stripeStats_.isEmpty()) {
                     if (this.stripeStats_.isEmpty()) {
                        this.stripeStats_ = other.stripeStats_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureStripeStatsIsMutable();
                        this.stripeStats_.addAll(other.stripeStats_);
                     }

                     this.onChanged();
                  }
               } else if (!other.stripeStats_.isEmpty()) {
                  if (this.stripeStatsBuilder_.isEmpty()) {
                     this.stripeStatsBuilder_.dispose();
                     this.stripeStatsBuilder_ = null;
                     this.stripeStats_ = other.stripeStats_;
                     this.bitField0_ &= -2;
                     this.stripeStatsBuilder_ = OrcProto.Metadata.alwaysUseFieldBuilders ? this.getStripeStatsFieldBuilder() : null;
                  } else {
                     this.stripeStatsBuilder_.addAllMessages(other.stripeStats_);
                  }
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            Metadata parsedMessage = null;

            try {
               parsedMessage = (Metadata)OrcProto.Metadata.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (Metadata)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureStripeStatsIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.stripeStats_ = new ArrayList(this.stripeStats_);
               this.bitField0_ |= 1;
            }

         }

         public List getStripeStatsList() {
            return this.stripeStatsBuilder_ == null ? Collections.unmodifiableList(this.stripeStats_) : this.stripeStatsBuilder_.getMessageList();
         }

         public int getStripeStatsCount() {
            return this.stripeStatsBuilder_ == null ? this.stripeStats_.size() : this.stripeStatsBuilder_.getCount();
         }

         public StripeStatistics getStripeStats(int index) {
            return this.stripeStatsBuilder_ == null ? (StripeStatistics)this.stripeStats_.get(index) : (StripeStatistics)this.stripeStatsBuilder_.getMessage(index);
         }

         public Builder setStripeStats(int index, StripeStatistics value) {
            if (this.stripeStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStripeStatsIsMutable();
               this.stripeStats_.set(index, value);
               this.onChanged();
            } else {
               this.stripeStatsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setStripeStats(int index, StripeStatistics.Builder builderForValue) {
            if (this.stripeStatsBuilder_ == null) {
               this.ensureStripeStatsIsMutable();
               this.stripeStats_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.stripeStatsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addStripeStats(StripeStatistics value) {
            if (this.stripeStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStripeStatsIsMutable();
               this.stripeStats_.add(value);
               this.onChanged();
            } else {
               this.stripeStatsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addStripeStats(int index, StripeStatistics value) {
            if (this.stripeStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStripeStatsIsMutable();
               this.stripeStats_.add(index, value);
               this.onChanged();
            } else {
               this.stripeStatsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addStripeStats(StripeStatistics.Builder builderForValue) {
            if (this.stripeStatsBuilder_ == null) {
               this.ensureStripeStatsIsMutable();
               this.stripeStats_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.stripeStatsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addStripeStats(int index, StripeStatistics.Builder builderForValue) {
            if (this.stripeStatsBuilder_ == null) {
               this.ensureStripeStatsIsMutable();
               this.stripeStats_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.stripeStatsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllStripeStats(Iterable values) {
            if (this.stripeStatsBuilder_ == null) {
               this.ensureStripeStatsIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.stripeStats_);
               this.onChanged();
            } else {
               this.stripeStatsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearStripeStats() {
            if (this.stripeStatsBuilder_ == null) {
               this.stripeStats_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.stripeStatsBuilder_.clear();
            }

            return this;
         }

         public Builder removeStripeStats(int index) {
            if (this.stripeStatsBuilder_ == null) {
               this.ensureStripeStatsIsMutable();
               this.stripeStats_.remove(index);
               this.onChanged();
            } else {
               this.stripeStatsBuilder_.remove(index);
            }

            return this;
         }

         public StripeStatistics.Builder getStripeStatsBuilder(int index) {
            return (StripeStatistics.Builder)this.getStripeStatsFieldBuilder().getBuilder(index);
         }

         public StripeStatisticsOrBuilder getStripeStatsOrBuilder(int index) {
            return this.stripeStatsBuilder_ == null ? (StripeStatisticsOrBuilder)this.stripeStats_.get(index) : (StripeStatisticsOrBuilder)this.stripeStatsBuilder_.getMessageOrBuilder(index);
         }

         public List getStripeStatsOrBuilderList() {
            return this.stripeStatsBuilder_ != null ? this.stripeStatsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.stripeStats_);
         }

         public StripeStatistics.Builder addStripeStatsBuilder() {
            return (StripeStatistics.Builder)this.getStripeStatsFieldBuilder().addBuilder(OrcProto.StripeStatistics.getDefaultInstance());
         }

         public StripeStatistics.Builder addStripeStatsBuilder(int index) {
            return (StripeStatistics.Builder)this.getStripeStatsFieldBuilder().addBuilder(index, OrcProto.StripeStatistics.getDefaultInstance());
         }

         public List getStripeStatsBuilderList() {
            return this.getStripeStatsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getStripeStatsFieldBuilder() {
            if (this.stripeStatsBuilder_ == null) {
               this.stripeStatsBuilder_ = new RepeatedFieldBuilderV3(this.stripeStats_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.stripeStats_ = null;
            }

            return this.stripeStatsBuilder_;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class ColumnarStripeStatistics extends GeneratedMessageV3 implements ColumnarStripeStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int COL_STATS_FIELD_NUMBER = 1;
      private List colStats_;
      private byte memoizedIsInitialized;
      private static final ColumnarStripeStatistics DEFAULT_INSTANCE = new ColumnarStripeStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public ColumnarStripeStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new ColumnarStripeStatistics(input, extensionRegistry);
         }
      };

      private ColumnarStripeStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private ColumnarStripeStatistics() {
         this.memoizedIsInitialized = -1;
         this.colStats_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new ColumnarStripeStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private ColumnarStripeStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.colStats_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.colStats_.add((ColumnStatistics)input.readMessage(OrcProto.ColumnStatistics.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.colStats_ = Collections.unmodifiableList(this.colStats_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_ColumnarStripeStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_ColumnarStripeStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(ColumnarStripeStatistics.class, Builder.class);
      }

      public List getColStatsList() {
         return this.colStats_;
      }

      public List getColStatsOrBuilderList() {
         return this.colStats_;
      }

      public int getColStatsCount() {
         return this.colStats_.size();
      }

      public ColumnStatistics getColStats(int index) {
         return (ColumnStatistics)this.colStats_.get(index);
      }

      public ColumnStatisticsOrBuilder getColStatsOrBuilder(int index) {
         return (ColumnStatisticsOrBuilder)this.colStats_.get(index);
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.colStats_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.colStats_.get(i));
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.colStats_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.colStats_.get(i));
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof ColumnarStripeStatistics)) {
            return super.equals(obj);
         } else {
            ColumnarStripeStatistics other = (ColumnarStripeStatistics)obj;
            if (!this.getColStatsList().equals(other.getColStatsList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getColStatsCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getColStatsList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static ColumnarStripeStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (ColumnarStripeStatistics)PARSER.parseFrom(data);
      }

      public static ColumnarStripeStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ColumnarStripeStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ColumnarStripeStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (ColumnarStripeStatistics)PARSER.parseFrom(data);
      }

      public static ColumnarStripeStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ColumnarStripeStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ColumnarStripeStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (ColumnarStripeStatistics)PARSER.parseFrom(data);
      }

      public static ColumnarStripeStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ColumnarStripeStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ColumnarStripeStatistics parseFrom(InputStream input) throws IOException {
         return (ColumnarStripeStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static ColumnarStripeStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ColumnarStripeStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static ColumnarStripeStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (ColumnarStripeStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static ColumnarStripeStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ColumnarStripeStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static ColumnarStripeStatistics parseFrom(CodedInputStream input) throws IOException {
         return (ColumnarStripeStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static ColumnarStripeStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ColumnarStripeStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(ColumnarStripeStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static ColumnarStripeStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public ColumnarStripeStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements ColumnarStripeStatisticsOrBuilder {
         private int bitField0_;
         private List colStats_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 colStatsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_ColumnarStripeStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_ColumnarStripeStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(ColumnarStripeStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.ColumnarStripeStatistics.alwaysUseFieldBuilders) {
               this.getColStatsFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            if (this.colStatsBuilder_ == null) {
               this.colStats_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.colStatsBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_ColumnarStripeStatistics_descriptor;
         }

         public ColumnarStripeStatistics getDefaultInstanceForType() {
            return OrcProto.ColumnarStripeStatistics.getDefaultInstance();
         }

         public ColumnarStripeStatistics build() {
            ColumnarStripeStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public ColumnarStripeStatistics buildPartial() {
            ColumnarStripeStatistics result = new ColumnarStripeStatistics(this);
            int from_bitField0_ = this.bitField0_;
            if (this.colStatsBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.colStats_ = Collections.unmodifiableList(this.colStats_);
                  this.bitField0_ &= -2;
               }

               result.colStats_ = this.colStats_;
            } else {
               result.colStats_ = this.colStatsBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof ColumnarStripeStatistics) {
               return this.mergeFrom((ColumnarStripeStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(ColumnarStripeStatistics other) {
            if (other == OrcProto.ColumnarStripeStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (this.colStatsBuilder_ == null) {
                  if (!other.colStats_.isEmpty()) {
                     if (this.colStats_.isEmpty()) {
                        this.colStats_ = other.colStats_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureColStatsIsMutable();
                        this.colStats_.addAll(other.colStats_);
                     }

                     this.onChanged();
                  }
               } else if (!other.colStats_.isEmpty()) {
                  if (this.colStatsBuilder_.isEmpty()) {
                     this.colStatsBuilder_.dispose();
                     this.colStatsBuilder_ = null;
                     this.colStats_ = other.colStats_;
                     this.bitField0_ &= -2;
                     this.colStatsBuilder_ = OrcProto.ColumnarStripeStatistics.alwaysUseFieldBuilders ? this.getColStatsFieldBuilder() : null;
                  } else {
                     this.colStatsBuilder_.addAllMessages(other.colStats_);
                  }
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            ColumnarStripeStatistics parsedMessage = null;

            try {
               parsedMessage = (ColumnarStripeStatistics)OrcProto.ColumnarStripeStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (ColumnarStripeStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureColStatsIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.colStats_ = new ArrayList(this.colStats_);
               this.bitField0_ |= 1;
            }

         }

         public List getColStatsList() {
            return this.colStatsBuilder_ == null ? Collections.unmodifiableList(this.colStats_) : this.colStatsBuilder_.getMessageList();
         }

         public int getColStatsCount() {
            return this.colStatsBuilder_ == null ? this.colStats_.size() : this.colStatsBuilder_.getCount();
         }

         public ColumnStatistics getColStats(int index) {
            return this.colStatsBuilder_ == null ? (ColumnStatistics)this.colStats_.get(index) : (ColumnStatistics)this.colStatsBuilder_.getMessage(index);
         }

         public Builder setColStats(int index, ColumnStatistics value) {
            if (this.colStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColStatsIsMutable();
               this.colStats_.set(index, value);
               this.onChanged();
            } else {
               this.colStatsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setColStats(int index, ColumnStatistics.Builder builderForValue) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               this.colStats_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.colStatsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addColStats(ColumnStatistics value) {
            if (this.colStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColStatsIsMutable();
               this.colStats_.add(value);
               this.onChanged();
            } else {
               this.colStatsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addColStats(int index, ColumnStatistics value) {
            if (this.colStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColStatsIsMutable();
               this.colStats_.add(index, value);
               this.onChanged();
            } else {
               this.colStatsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addColStats(ColumnStatistics.Builder builderForValue) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               this.colStats_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.colStatsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addColStats(int index, ColumnStatistics.Builder builderForValue) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               this.colStats_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.colStatsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllColStats(Iterable values) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.colStats_);
               this.onChanged();
            } else {
               this.colStatsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearColStats() {
            if (this.colStatsBuilder_ == null) {
               this.colStats_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.colStatsBuilder_.clear();
            }

            return this;
         }

         public Builder removeColStats(int index) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               this.colStats_.remove(index);
               this.onChanged();
            } else {
               this.colStatsBuilder_.remove(index);
            }

            return this;
         }

         public ColumnStatistics.Builder getColStatsBuilder(int index) {
            return (ColumnStatistics.Builder)this.getColStatsFieldBuilder().getBuilder(index);
         }

         public ColumnStatisticsOrBuilder getColStatsOrBuilder(int index) {
            return this.colStatsBuilder_ == null ? (ColumnStatisticsOrBuilder)this.colStats_.get(index) : (ColumnStatisticsOrBuilder)this.colStatsBuilder_.getMessageOrBuilder(index);
         }

         public List getColStatsOrBuilderList() {
            return this.colStatsBuilder_ != null ? this.colStatsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.colStats_);
         }

         public ColumnStatistics.Builder addColStatsBuilder() {
            return (ColumnStatistics.Builder)this.getColStatsFieldBuilder().addBuilder(OrcProto.ColumnStatistics.getDefaultInstance());
         }

         public ColumnStatistics.Builder addColStatsBuilder(int index) {
            return (ColumnStatistics.Builder)this.getColStatsFieldBuilder().addBuilder(index, OrcProto.ColumnStatistics.getDefaultInstance());
         }

         public List getColStatsBuilderList() {
            return this.getColStatsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getColStatsFieldBuilder() {
            if (this.colStatsBuilder_ == null) {
               this.colStatsBuilder_ = new RepeatedFieldBuilderV3(this.colStats_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.colStats_ = null;
            }

            return this.colStatsBuilder_;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class FileStatistics extends GeneratedMessageV3 implements FileStatisticsOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int COLUMN_FIELD_NUMBER = 1;
      private List column_;
      private byte memoizedIsInitialized;
      private static final FileStatistics DEFAULT_INSTANCE = new FileStatistics();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public FileStatistics parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new FileStatistics(input, extensionRegistry);
         }
      };

      private FileStatistics(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private FileStatistics() {
         this.memoizedIsInitialized = -1;
         this.column_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new FileStatistics();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FileStatistics(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.column_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.column_.add((ColumnStatistics)input.readMessage(OrcProto.ColumnStatistics.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.column_ = Collections.unmodifiableList(this.column_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_FileStatistics_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_FileStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(FileStatistics.class, Builder.class);
      }

      public List getColumnList() {
         return this.column_;
      }

      public List getColumnOrBuilderList() {
         return this.column_;
      }

      public int getColumnCount() {
         return this.column_.size();
      }

      public ColumnStatistics getColumn(int index) {
         return (ColumnStatistics)this.column_.get(index);
      }

      public ColumnStatisticsOrBuilder getColumnOrBuilder(int index) {
         return (ColumnStatisticsOrBuilder)this.column_.get(index);
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.column_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.column_.get(i));
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.column_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.column_.get(i));
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof FileStatistics)) {
            return super.equals(obj);
         } else {
            FileStatistics other = (FileStatistics)obj;
            if (!this.getColumnList().equals(other.getColumnList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getColumnCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getColumnList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static FileStatistics parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (FileStatistics)PARSER.parseFrom(data);
      }

      public static FileStatistics parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (FileStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static FileStatistics parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (FileStatistics)PARSER.parseFrom(data);
      }

      public static FileStatistics parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (FileStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static FileStatistics parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (FileStatistics)PARSER.parseFrom(data);
      }

      public static FileStatistics parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (FileStatistics)PARSER.parseFrom(data, extensionRegistry);
      }

      public static FileStatistics parseFrom(InputStream input) throws IOException {
         return (FileStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static FileStatistics parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (FileStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static FileStatistics parseDelimitedFrom(InputStream input) throws IOException {
         return (FileStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static FileStatistics parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (FileStatistics)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static FileStatistics parseFrom(CodedInputStream input) throws IOException {
         return (FileStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static FileStatistics parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (FileStatistics)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(FileStatistics prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static FileStatistics getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public FileStatistics getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements FileStatisticsOrBuilder {
         private int bitField0_;
         private List column_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 columnBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_FileStatistics_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_FileStatistics_fieldAccessorTable.ensureFieldAccessorsInitialized(FileStatistics.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.FileStatistics.alwaysUseFieldBuilders) {
               this.getColumnFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            if (this.columnBuilder_ == null) {
               this.column_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.columnBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_FileStatistics_descriptor;
         }

         public FileStatistics getDefaultInstanceForType() {
            return OrcProto.FileStatistics.getDefaultInstance();
         }

         public FileStatistics build() {
            FileStatistics result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public FileStatistics buildPartial() {
            FileStatistics result = new FileStatistics(this);
            int from_bitField0_ = this.bitField0_;
            if (this.columnBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.column_ = Collections.unmodifiableList(this.column_);
                  this.bitField0_ &= -2;
               }

               result.column_ = this.column_;
            } else {
               result.column_ = this.columnBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof FileStatistics) {
               return this.mergeFrom((FileStatistics)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(FileStatistics other) {
            if (other == OrcProto.FileStatistics.getDefaultInstance()) {
               return this;
            } else {
               if (this.columnBuilder_ == null) {
                  if (!other.column_.isEmpty()) {
                     if (this.column_.isEmpty()) {
                        this.column_ = other.column_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureColumnIsMutable();
                        this.column_.addAll(other.column_);
                     }

                     this.onChanged();
                  }
               } else if (!other.column_.isEmpty()) {
                  if (this.columnBuilder_.isEmpty()) {
                     this.columnBuilder_.dispose();
                     this.columnBuilder_ = null;
                     this.column_ = other.column_;
                     this.bitField0_ &= -2;
                     this.columnBuilder_ = OrcProto.FileStatistics.alwaysUseFieldBuilders ? this.getColumnFieldBuilder() : null;
                  } else {
                     this.columnBuilder_.addAllMessages(other.column_);
                  }
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            FileStatistics parsedMessage = null;

            try {
               parsedMessage = (FileStatistics)OrcProto.FileStatistics.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (FileStatistics)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureColumnIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.column_ = new ArrayList(this.column_);
               this.bitField0_ |= 1;
            }

         }

         public List getColumnList() {
            return this.columnBuilder_ == null ? Collections.unmodifiableList(this.column_) : this.columnBuilder_.getMessageList();
         }

         public int getColumnCount() {
            return this.columnBuilder_ == null ? this.column_.size() : this.columnBuilder_.getCount();
         }

         public ColumnStatistics getColumn(int index) {
            return this.columnBuilder_ == null ? (ColumnStatistics)this.column_.get(index) : (ColumnStatistics)this.columnBuilder_.getMessage(index);
         }

         public Builder setColumn(int index, ColumnStatistics value) {
            if (this.columnBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColumnIsMutable();
               this.column_.set(index, value);
               this.onChanged();
            } else {
               this.columnBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setColumn(int index, ColumnStatistics.Builder builderForValue) {
            if (this.columnBuilder_ == null) {
               this.ensureColumnIsMutable();
               this.column_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.columnBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addColumn(ColumnStatistics value) {
            if (this.columnBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColumnIsMutable();
               this.column_.add(value);
               this.onChanged();
            } else {
               this.columnBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addColumn(int index, ColumnStatistics value) {
            if (this.columnBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColumnIsMutable();
               this.column_.add(index, value);
               this.onChanged();
            } else {
               this.columnBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addColumn(ColumnStatistics.Builder builderForValue) {
            if (this.columnBuilder_ == null) {
               this.ensureColumnIsMutable();
               this.column_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.columnBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addColumn(int index, ColumnStatistics.Builder builderForValue) {
            if (this.columnBuilder_ == null) {
               this.ensureColumnIsMutable();
               this.column_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.columnBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllColumn(Iterable values) {
            if (this.columnBuilder_ == null) {
               this.ensureColumnIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.column_);
               this.onChanged();
            } else {
               this.columnBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearColumn() {
            if (this.columnBuilder_ == null) {
               this.column_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.columnBuilder_.clear();
            }

            return this;
         }

         public Builder removeColumn(int index) {
            if (this.columnBuilder_ == null) {
               this.ensureColumnIsMutable();
               this.column_.remove(index);
               this.onChanged();
            } else {
               this.columnBuilder_.remove(index);
            }

            return this;
         }

         public ColumnStatistics.Builder getColumnBuilder(int index) {
            return (ColumnStatistics.Builder)this.getColumnFieldBuilder().getBuilder(index);
         }

         public ColumnStatisticsOrBuilder getColumnOrBuilder(int index) {
            return this.columnBuilder_ == null ? (ColumnStatisticsOrBuilder)this.column_.get(index) : (ColumnStatisticsOrBuilder)this.columnBuilder_.getMessageOrBuilder(index);
         }

         public List getColumnOrBuilderList() {
            return this.columnBuilder_ != null ? this.columnBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.column_);
         }

         public ColumnStatistics.Builder addColumnBuilder() {
            return (ColumnStatistics.Builder)this.getColumnFieldBuilder().addBuilder(OrcProto.ColumnStatistics.getDefaultInstance());
         }

         public ColumnStatistics.Builder addColumnBuilder(int index) {
            return (ColumnStatistics.Builder)this.getColumnFieldBuilder().addBuilder(index, OrcProto.ColumnStatistics.getDefaultInstance());
         }

         public List getColumnBuilderList() {
            return this.getColumnFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getColumnFieldBuilder() {
            if (this.columnBuilder_ == null) {
               this.columnBuilder_ = new RepeatedFieldBuilderV3(this.column_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.column_ = null;
            }

            return this.columnBuilder_;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class DataMask extends GeneratedMessageV3 implements DataMaskOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int MASK_PARAMETERS_FIELD_NUMBER = 2;
      private LazyStringList maskParameters_;
      public static final int COLUMNS_FIELD_NUMBER = 3;
      private Internal.IntList columns_;
      private int columnsMemoizedSerializedSize;
      private byte memoizedIsInitialized;
      private static final DataMask DEFAULT_INSTANCE = new DataMask();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DataMask parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DataMask(input, extensionRegistry);
         }
      };

      private DataMask(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.columnsMemoizedSerializedSize = -1;
         this.memoizedIsInitialized = -1;
      }

      private DataMask() {
         this.columnsMemoizedSerializedSize = -1;
         this.memoizedIsInitialized = -1;
         this.name_ = "";
         this.maskParameters_ = LazyStringArrayList.EMPTY;
         this.columns_ = emptyIntList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new DataMask();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private DataMask(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.name_ = bs;
                        break;
                     case 18:
                        ByteString bs = input.readBytes();
                        if ((mutable_bitField0_ & 2) == 0) {
                           this.maskParameters_ = new LazyStringArrayList();
                           mutable_bitField0_ |= 2;
                        }

                        this.maskParameters_.add(bs);
                        break;
                     case 24:
                        if ((mutable_bitField0_ & 4) == 0) {
                           this.columns_ = newIntList();
                           mutable_bitField0_ |= 4;
                        }

                        this.columns_.addInt(input.readUInt32());
                        break;
                     case 26:
                        int length = input.readRawVarint32();
                        int limit = input.pushLimit(length);
                        if ((mutable_bitField0_ & 4) == 0 && input.getBytesUntilLimit() > 0) {
                           this.columns_ = newIntList();
                           mutable_bitField0_ |= 4;
                        }

                        while(input.getBytesUntilLimit() > 0) {
                           this.columns_.addInt(input.readUInt32());
                        }

                        input.popLimit(limit);
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 2) != 0) {
                  this.maskParameters_ = this.maskParameters_.getUnmodifiableView();
               }

               if ((mutable_bitField0_ & 4) != 0) {
                  this.columns_.makeImmutable();
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_DataMask_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_DataMask_fieldAccessorTable.ensureFieldAccessorsInitialized(DataMask.class, Builder.class);
      }

      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getName() {
         Object ref = this.name_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.name_ = s;
            }

            return s;
         }
      }

      public ByteString getNameBytes() {
         Object ref = this.name_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.name_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public ProtocolStringList getMaskParametersList() {
         return this.maskParameters_;
      }

      public int getMaskParametersCount() {
         return this.maskParameters_.size();
      }

      public String getMaskParameters(int index) {
         return (String)this.maskParameters_.get(index);
      }

      public ByteString getMaskParametersBytes(int index) {
         return this.maskParameters_.getByteString(index);
      }

      public List getColumnsList() {
         return this.columns_;
      }

      public int getColumnsCount() {
         return this.columns_.size();
      }

      public int getColumns(int index) {
         return this.columns_.getInt(index);
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.name_);
         }

         for(int i = 0; i < this.maskParameters_.size(); ++i) {
            GeneratedMessageV3.writeString(output, 2, this.maskParameters_.getRaw(i));
         }

         if (this.getColumnsList().size() > 0) {
            output.writeUInt32NoTag(26);
            output.writeUInt32NoTag(this.columnsMemoizedSerializedSize);
         }

         for(int i = 0; i < this.columns_.size(); ++i) {
            output.writeUInt32NoTag(this.columns_.getInt(i));
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            int dataSize = 0;

            for(int i = 0; i < this.maskParameters_.size(); ++i) {
               dataSize += computeStringSizeNoTag(this.maskParameters_.getRaw(i));
            }

            size += dataSize;
            size += 1 * this.getMaskParametersList().size();
            dataSize = 0;

            for(int i = 0; i < this.columns_.size(); ++i) {
               dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.columns_.getInt(i));
            }

            size += dataSize;
            if (!this.getColumnsList().isEmpty()) {
               ++size;
               size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
            }

            this.columnsMemoizedSerializedSize = dataSize;
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof DataMask)) {
            return super.equals(obj);
         } else {
            DataMask other = (DataMask)obj;
            if (this.hasName() != other.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(other.getName())) {
               return false;
            } else if (!this.getMaskParametersList().equals(other.getMaskParametersList())) {
               return false;
            } else if (!this.getColumnsList().equals(other.getColumnsList())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasName()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getName().hashCode();
            }

            if (this.getMaskParametersCount() > 0) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getMaskParametersList().hashCode();
            }

            if (this.getColumnsCount() > 0) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getColumnsList().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static DataMask parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (DataMask)PARSER.parseFrom(data);
      }

      public static DataMask parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DataMask)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DataMask parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (DataMask)PARSER.parseFrom(data);
      }

      public static DataMask parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DataMask)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DataMask parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (DataMask)PARSER.parseFrom(data);
      }

      public static DataMask parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DataMask)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DataMask parseFrom(InputStream input) throws IOException {
         return (DataMask)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DataMask parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DataMask)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static DataMask parseDelimitedFrom(InputStream input) throws IOException {
         return (DataMask)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static DataMask parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DataMask)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static DataMask parseFrom(CodedInputStream input) throws IOException {
         return (DataMask)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static DataMask parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DataMask)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(DataMask prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static DataMask getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DataMask getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DataMaskOrBuilder {
         private int bitField0_;
         private Object name_ = "";
         private LazyStringList maskParameters_;
         private Internal.IntList columns_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_DataMask_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_DataMask_fieldAccessorTable.ensureFieldAccessorsInitialized(DataMask.class, Builder.class);
         }

         private Builder() {
            this.maskParameters_ = LazyStringArrayList.EMPTY;
            this.columns_ = OrcProto.DataMask.emptyIntList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maskParameters_ = LazyStringArrayList.EMPTY;
            this.columns_ = OrcProto.DataMask.emptyIntList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.DataMask.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            this.maskParameters_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -3;
            this.columns_ = OrcProto.DataMask.emptyIntList();
            this.bitField0_ &= -5;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_DataMask_descriptor;
         }

         public DataMask getDefaultInstanceForType() {
            return OrcProto.DataMask.getDefaultInstance();
         }

         public DataMask build() {
            DataMask result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DataMask buildPartial() {
            DataMask result = new DataMask(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.name_ = this.name_;
            if ((this.bitField0_ & 2) != 0) {
               this.maskParameters_ = this.maskParameters_.getUnmodifiableView();
               this.bitField0_ &= -3;
            }

            result.maskParameters_ = this.maskParameters_;
            if ((this.bitField0_ & 4) != 0) {
               this.columns_.makeImmutable();
               this.bitField0_ &= -5;
            }

            result.columns_ = this.columns_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof DataMask) {
               return this.mergeFrom((DataMask)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(DataMask other) {
            if (other == OrcProto.DataMask.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = other.name_;
                  this.onChanged();
               }

               if (!other.maskParameters_.isEmpty()) {
                  if (this.maskParameters_.isEmpty()) {
                     this.maskParameters_ = other.maskParameters_;
                     this.bitField0_ &= -3;
                  } else {
                     this.ensureMaskParametersIsMutable();
                     this.maskParameters_.addAll(other.maskParameters_);
                  }

                  this.onChanged();
               }

               if (!other.columns_.isEmpty()) {
                  if (this.columns_.isEmpty()) {
                     this.columns_ = other.columns_;
                     this.bitField0_ &= -5;
                  } else {
                     this.ensureColumnsIsMutable();
                     this.columns_.addAll(other.columns_);
                  }

                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DataMask parsedMessage = null;

            try {
               parsedMessage = (DataMask)OrcProto.DataMask.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (DataMask)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getName() {
            Object ref = this.name_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.name_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.name_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = OrcProto.DataMask.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public Builder setNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         private void ensureMaskParametersIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.maskParameters_ = new LazyStringArrayList(this.maskParameters_);
               this.bitField0_ |= 2;
            }

         }

         public ProtocolStringList getMaskParametersList() {
            return this.maskParameters_.getUnmodifiableView();
         }

         public int getMaskParametersCount() {
            return this.maskParameters_.size();
         }

         public String getMaskParameters(int index) {
            return (String)this.maskParameters_.get(index);
         }

         public ByteString getMaskParametersBytes(int index) {
            return this.maskParameters_.getByteString(index);
         }

         public Builder setMaskParameters(int index, String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureMaskParametersIsMutable();
               this.maskParameters_.set(index, (Object)value);
               this.onChanged();
               return this;
            }
         }

         public Builder addMaskParameters(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureMaskParametersIsMutable();
               this.maskParameters_.add((Object)value);
               this.onChanged();
               return this;
            }
         }

         public Builder addAllMaskParameters(Iterable values) {
            this.ensureMaskParametersIsMutable();
            AbstractMessageLite.Builder.addAll(values, (List)this.maskParameters_);
            this.onChanged();
            return this;
         }

         public Builder clearMaskParameters() {
            this.maskParameters_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -3;
            this.onChanged();
            return this;
         }

         public Builder addMaskParametersBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureMaskParametersIsMutable();
               this.maskParameters_.add(value);
               this.onChanged();
               return this;
            }
         }

         private void ensureColumnsIsMutable() {
            if ((this.bitField0_ & 4) == 0) {
               this.columns_ = OrcProto.DataMask.mutableCopy(this.columns_);
               this.bitField0_ |= 4;
            }

         }

         public List getColumnsList() {
            return (List)((this.bitField0_ & 4) != 0 ? Collections.unmodifiableList(this.columns_) : this.columns_);
         }

         public int getColumnsCount() {
            return this.columns_.size();
         }

         public int getColumns(int index) {
            return this.columns_.getInt(index);
         }

         public Builder setColumns(int index, int value) {
            this.ensureColumnsIsMutable();
            this.columns_.setInt(index, value);
            this.onChanged();
            return this;
         }

         public Builder addColumns(int value) {
            this.ensureColumnsIsMutable();
            this.columns_.addInt(value);
            this.onChanged();
            return this;
         }

         public Builder addAllColumns(Iterable values) {
            this.ensureColumnsIsMutable();
            AbstractMessageLite.Builder.addAll(values, (List)this.columns_);
            this.onChanged();
            return this;
         }

         public Builder clearColumns() {
            this.columns_ = OrcProto.DataMask.emptyIntList();
            this.bitField0_ &= -5;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class EncryptionKey extends GeneratedMessageV3 implements EncryptionKeyOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int KEY_NAME_FIELD_NUMBER = 1;
      private volatile Object keyName_;
      public static final int KEY_VERSION_FIELD_NUMBER = 2;
      private int keyVersion_;
      public static final int ALGORITHM_FIELD_NUMBER = 3;
      private int algorithm_;
      private byte memoizedIsInitialized;
      private static final EncryptionKey DEFAULT_INSTANCE = new EncryptionKey();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public EncryptionKey parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new EncryptionKey(input, extensionRegistry);
         }
      };

      private EncryptionKey(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private EncryptionKey() {
         this.memoizedIsInitialized = -1;
         this.keyName_ = "";
         this.algorithm_ = 0;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new EncryptionKey();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private EncryptionKey(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 1;
                        this.keyName_ = bs;
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.keyVersion_ = input.readUInt32();
                        break;
                     case 24:
                        int rawValue = input.readEnum();
                        EncryptionAlgorithm value = OrcProto.EncryptionAlgorithm.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(3, rawValue);
                        } else {
                           this.bitField0_ |= 4;
                           this.algorithm_ = rawValue;
                        }
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_EncryptionKey_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_EncryptionKey_fieldAccessorTable.ensureFieldAccessorsInitialized(EncryptionKey.class, Builder.class);
      }

      public boolean hasKeyName() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getKeyName() {
         Object ref = this.keyName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.keyName_ = s;
            }

            return s;
         }
      }

      public ByteString getKeyNameBytes() {
         Object ref = this.keyName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.keyName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasKeyVersion() {
         return (this.bitField0_ & 2) != 0;
      }

      public int getKeyVersion() {
         return this.keyVersion_;
      }

      public boolean hasAlgorithm() {
         return (this.bitField0_ & 4) != 0;
      }

      public EncryptionAlgorithm getAlgorithm() {
         EncryptionAlgorithm result = OrcProto.EncryptionAlgorithm.valueOf(this.algorithm_);
         return result == null ? OrcProto.EncryptionAlgorithm.UNKNOWN_ENCRYPTION : result;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(output, 1, this.keyName_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeUInt32(2, this.keyVersion_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeEnum(3, this.algorithm_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += GeneratedMessageV3.computeStringSize(1, this.keyName_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeUInt32Size(2, this.keyVersion_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeEnumSize(3, this.algorithm_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof EncryptionKey)) {
            return super.equals(obj);
         } else {
            EncryptionKey other = (EncryptionKey)obj;
            if (this.hasKeyName() != other.hasKeyName()) {
               return false;
            } else if (this.hasKeyName() && !this.getKeyName().equals(other.getKeyName())) {
               return false;
            } else if (this.hasKeyVersion() != other.hasKeyVersion()) {
               return false;
            } else if (this.hasKeyVersion() && this.getKeyVersion() != other.getKeyVersion()) {
               return false;
            } else if (this.hasAlgorithm() != other.hasAlgorithm()) {
               return false;
            } else if (this.hasAlgorithm() && this.algorithm_ != other.algorithm_) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasKeyName()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getKeyName().hashCode();
            }

            if (this.hasKeyVersion()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getKeyVersion();
            }

            if (this.hasAlgorithm()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.algorithm_;
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static EncryptionKey parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (EncryptionKey)PARSER.parseFrom(data);
      }

      public static EncryptionKey parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (EncryptionKey)PARSER.parseFrom(data, extensionRegistry);
      }

      public static EncryptionKey parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (EncryptionKey)PARSER.parseFrom(data);
      }

      public static EncryptionKey parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (EncryptionKey)PARSER.parseFrom(data, extensionRegistry);
      }

      public static EncryptionKey parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (EncryptionKey)PARSER.parseFrom(data);
      }

      public static EncryptionKey parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (EncryptionKey)PARSER.parseFrom(data, extensionRegistry);
      }

      public static EncryptionKey parseFrom(InputStream input) throws IOException {
         return (EncryptionKey)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static EncryptionKey parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (EncryptionKey)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static EncryptionKey parseDelimitedFrom(InputStream input) throws IOException {
         return (EncryptionKey)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static EncryptionKey parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (EncryptionKey)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static EncryptionKey parseFrom(CodedInputStream input) throws IOException {
         return (EncryptionKey)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static EncryptionKey parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (EncryptionKey)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(EncryptionKey prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static EncryptionKey getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public EncryptionKey getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements EncryptionKeyOrBuilder {
         private int bitField0_;
         private Object keyName_ = "";
         private int keyVersion_;
         private int algorithm_ = 0;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_EncryptionKey_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_EncryptionKey_fieldAccessorTable.ensureFieldAccessorsInitialized(EncryptionKey.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.EncryptionKey.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.keyName_ = "";
            this.bitField0_ &= -2;
            this.keyVersion_ = 0;
            this.bitField0_ &= -3;
            this.algorithm_ = 0;
            this.bitField0_ &= -5;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_EncryptionKey_descriptor;
         }

         public EncryptionKey getDefaultInstanceForType() {
            return OrcProto.EncryptionKey.getDefaultInstance();
         }

         public EncryptionKey build() {
            EncryptionKey result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public EncryptionKey buildPartial() {
            EncryptionKey result = new EncryptionKey(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               to_bitField0_ |= 1;
            }

            result.keyName_ = this.keyName_;
            if ((from_bitField0_ & 2) != 0) {
               result.keyVersion_ = this.keyVersion_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               to_bitField0_ |= 4;
            }

            result.algorithm_ = this.algorithm_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof EncryptionKey) {
               return this.mergeFrom((EncryptionKey)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(EncryptionKey other) {
            if (other == OrcProto.EncryptionKey.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasKeyName()) {
                  this.bitField0_ |= 1;
                  this.keyName_ = other.keyName_;
                  this.onChanged();
               }

               if (other.hasKeyVersion()) {
                  this.setKeyVersion(other.getKeyVersion());
               }

               if (other.hasAlgorithm()) {
                  this.setAlgorithm(other.getAlgorithm());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            EncryptionKey parsedMessage = null;

            try {
               parsedMessage = (EncryptionKey)OrcProto.EncryptionKey.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (EncryptionKey)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasKeyName() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getKeyName() {
            Object ref = this.keyName_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.keyName_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getKeyNameBytes() {
            Object ref = this.keyName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.keyName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setKeyName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.keyName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearKeyName() {
            this.bitField0_ &= -2;
            this.keyName_ = OrcProto.EncryptionKey.getDefaultInstance().getKeyName();
            this.onChanged();
            return this;
         }

         public Builder setKeyNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.keyName_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasKeyVersion() {
            return (this.bitField0_ & 2) != 0;
         }

         public int getKeyVersion() {
            return this.keyVersion_;
         }

         public Builder setKeyVersion(int value) {
            this.bitField0_ |= 2;
            this.keyVersion_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearKeyVersion() {
            this.bitField0_ &= -3;
            this.keyVersion_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasAlgorithm() {
            return (this.bitField0_ & 4) != 0;
         }

         public EncryptionAlgorithm getAlgorithm() {
            EncryptionAlgorithm result = OrcProto.EncryptionAlgorithm.valueOf(this.algorithm_);
            return result == null ? OrcProto.EncryptionAlgorithm.UNKNOWN_ENCRYPTION : result;
         }

         public Builder setAlgorithm(EncryptionAlgorithm value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.algorithm_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public Builder clearAlgorithm() {
            this.bitField0_ &= -5;
            this.algorithm_ = 0;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class EncryptionVariant extends GeneratedMessageV3 implements EncryptionVariantOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int ROOT_FIELD_NUMBER = 1;
      private int root_;
      public static final int KEY_FIELD_NUMBER = 2;
      private int key_;
      public static final int ENCRYPTED_KEY_FIELD_NUMBER = 3;
      private ByteString encryptedKey_;
      public static final int STRIPE_STATISTICS_FIELD_NUMBER = 4;
      private List stripeStatistics_;
      public static final int FILE_STATISTICS_FIELD_NUMBER = 5;
      private ByteString fileStatistics_;
      private byte memoizedIsInitialized;
      private static final EncryptionVariant DEFAULT_INSTANCE = new EncryptionVariant();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public EncryptionVariant parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new EncryptionVariant(input, extensionRegistry);
         }
      };

      private EncryptionVariant(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private EncryptionVariant() {
         this.memoizedIsInitialized = -1;
         this.encryptedKey_ = ByteString.EMPTY;
         this.stripeStatistics_ = Collections.emptyList();
         this.fileStatistics_ = ByteString.EMPTY;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new EncryptionVariant();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private EncryptionVariant(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.root_ = input.readUInt32();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.key_ = input.readUInt32();
                        break;
                     case 26:
                        this.bitField0_ |= 4;
                        this.encryptedKey_ = input.readBytes();
                        break;
                     case 34:
                        if ((mutable_bitField0_ & 8) == 0) {
                           this.stripeStatistics_ = new ArrayList();
                           mutable_bitField0_ |= 8;
                        }

                        this.stripeStatistics_.add((Stream)input.readMessage(OrcProto.Stream.PARSER, extensionRegistry));
                        break;
                     case 42:
                        this.bitField0_ |= 8;
                        this.fileStatistics_ = input.readBytes();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 8) != 0) {
                  this.stripeStatistics_ = Collections.unmodifiableList(this.stripeStatistics_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_EncryptionVariant_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_EncryptionVariant_fieldAccessorTable.ensureFieldAccessorsInitialized(EncryptionVariant.class, Builder.class);
      }

      public boolean hasRoot() {
         return (this.bitField0_ & 1) != 0;
      }

      public int getRoot() {
         return this.root_;
      }

      public boolean hasKey() {
         return (this.bitField0_ & 2) != 0;
      }

      public int getKey() {
         return this.key_;
      }

      public boolean hasEncryptedKey() {
         return (this.bitField0_ & 4) != 0;
      }

      public ByteString getEncryptedKey() {
         return this.encryptedKey_;
      }

      public List getStripeStatisticsList() {
         return this.stripeStatistics_;
      }

      public List getStripeStatisticsOrBuilderList() {
         return this.stripeStatistics_;
      }

      public int getStripeStatisticsCount() {
         return this.stripeStatistics_.size();
      }

      public Stream getStripeStatistics(int index) {
         return (Stream)this.stripeStatistics_.get(index);
      }

      public StreamOrBuilder getStripeStatisticsOrBuilder(int index) {
         return (StreamOrBuilder)this.stripeStatistics_.get(index);
      }

      public boolean hasFileStatistics() {
         return (this.bitField0_ & 8) != 0;
      }

      public ByteString getFileStatistics() {
         return this.fileStatistics_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeUInt32(1, this.root_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeUInt32(2, this.key_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeBytes(3, this.encryptedKey_);
         }

         for(int i = 0; i < this.stripeStatistics_.size(); ++i) {
            output.writeMessage(4, (MessageLite)this.stripeStatistics_.get(i));
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeBytes(5, this.fileStatistics_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeUInt32Size(1, this.root_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeUInt32Size(2, this.key_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeBytesSize(3, this.encryptedKey_);
            }

            for(int i = 0; i < this.stripeStatistics_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.stripeStatistics_.get(i));
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeBytesSize(5, this.fileStatistics_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof EncryptionVariant)) {
            return super.equals(obj);
         } else {
            EncryptionVariant other = (EncryptionVariant)obj;
            if (this.hasRoot() != other.hasRoot()) {
               return false;
            } else if (this.hasRoot() && this.getRoot() != other.getRoot()) {
               return false;
            } else if (this.hasKey() != other.hasKey()) {
               return false;
            } else if (this.hasKey() && this.getKey() != other.getKey()) {
               return false;
            } else if (this.hasEncryptedKey() != other.hasEncryptedKey()) {
               return false;
            } else if (this.hasEncryptedKey() && !this.getEncryptedKey().equals(other.getEncryptedKey())) {
               return false;
            } else if (!this.getStripeStatisticsList().equals(other.getStripeStatisticsList())) {
               return false;
            } else if (this.hasFileStatistics() != other.hasFileStatistics()) {
               return false;
            } else if (this.hasFileStatistics() && !this.getFileStatistics().equals(other.getFileStatistics())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasRoot()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getRoot();
            }

            if (this.hasKey()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getKey();
            }

            if (this.hasEncryptedKey()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getEncryptedKey().hashCode();
            }

            if (this.getStripeStatisticsCount() > 0) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.getStripeStatisticsList().hashCode();
            }

            if (this.hasFileStatistics()) {
               hash = 37 * hash + 5;
               hash = 53 * hash + this.getFileStatistics().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static EncryptionVariant parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (EncryptionVariant)PARSER.parseFrom(data);
      }

      public static EncryptionVariant parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (EncryptionVariant)PARSER.parseFrom(data, extensionRegistry);
      }

      public static EncryptionVariant parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (EncryptionVariant)PARSER.parseFrom(data);
      }

      public static EncryptionVariant parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (EncryptionVariant)PARSER.parseFrom(data, extensionRegistry);
      }

      public static EncryptionVariant parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (EncryptionVariant)PARSER.parseFrom(data);
      }

      public static EncryptionVariant parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (EncryptionVariant)PARSER.parseFrom(data, extensionRegistry);
      }

      public static EncryptionVariant parseFrom(InputStream input) throws IOException {
         return (EncryptionVariant)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static EncryptionVariant parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (EncryptionVariant)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static EncryptionVariant parseDelimitedFrom(InputStream input) throws IOException {
         return (EncryptionVariant)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static EncryptionVariant parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (EncryptionVariant)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static EncryptionVariant parseFrom(CodedInputStream input) throws IOException {
         return (EncryptionVariant)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static EncryptionVariant parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (EncryptionVariant)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(EncryptionVariant prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static EncryptionVariant getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public EncryptionVariant getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements EncryptionVariantOrBuilder {
         private int bitField0_;
         private int root_;
         private int key_;
         private ByteString encryptedKey_;
         private List stripeStatistics_;
         private RepeatedFieldBuilderV3 stripeStatisticsBuilder_;
         private ByteString fileStatistics_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_EncryptionVariant_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_EncryptionVariant_fieldAccessorTable.ensureFieldAccessorsInitialized(EncryptionVariant.class, Builder.class);
         }

         private Builder() {
            this.encryptedKey_ = ByteString.EMPTY;
            this.stripeStatistics_ = Collections.emptyList();
            this.fileStatistics_ = ByteString.EMPTY;
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.encryptedKey_ = ByteString.EMPTY;
            this.stripeStatistics_ = Collections.emptyList();
            this.fileStatistics_ = ByteString.EMPTY;
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.EncryptionVariant.alwaysUseFieldBuilders) {
               this.getStripeStatisticsFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            this.root_ = 0;
            this.bitField0_ &= -2;
            this.key_ = 0;
            this.bitField0_ &= -3;
            this.encryptedKey_ = ByteString.EMPTY;
            this.bitField0_ &= -5;
            if (this.stripeStatisticsBuilder_ == null) {
               this.stripeStatistics_ = Collections.emptyList();
               this.bitField0_ &= -9;
            } else {
               this.stripeStatisticsBuilder_.clear();
            }

            this.fileStatistics_ = ByteString.EMPTY;
            this.bitField0_ &= -17;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_EncryptionVariant_descriptor;
         }

         public EncryptionVariant getDefaultInstanceForType() {
            return OrcProto.EncryptionVariant.getDefaultInstance();
         }

         public EncryptionVariant build() {
            EncryptionVariant result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public EncryptionVariant buildPartial() {
            EncryptionVariant result = new EncryptionVariant(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.root_ = this.root_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               result.key_ = this.key_;
               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               to_bitField0_ |= 4;
            }

            result.encryptedKey_ = this.encryptedKey_;
            if (this.stripeStatisticsBuilder_ == null) {
               if ((this.bitField0_ & 8) != 0) {
                  this.stripeStatistics_ = Collections.unmodifiableList(this.stripeStatistics_);
                  this.bitField0_ &= -9;
               }

               result.stripeStatistics_ = this.stripeStatistics_;
            } else {
               result.stripeStatistics_ = this.stripeStatisticsBuilder_.build();
            }

            if ((from_bitField0_ & 16) != 0) {
               to_bitField0_ |= 8;
            }

            result.fileStatistics_ = this.fileStatistics_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof EncryptionVariant) {
               return this.mergeFrom((EncryptionVariant)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(EncryptionVariant other) {
            if (other == OrcProto.EncryptionVariant.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasRoot()) {
                  this.setRoot(other.getRoot());
               }

               if (other.hasKey()) {
                  this.setKey(other.getKey());
               }

               if (other.hasEncryptedKey()) {
                  this.setEncryptedKey(other.getEncryptedKey());
               }

               if (this.stripeStatisticsBuilder_ == null) {
                  if (!other.stripeStatistics_.isEmpty()) {
                     if (this.stripeStatistics_.isEmpty()) {
                        this.stripeStatistics_ = other.stripeStatistics_;
                        this.bitField0_ &= -9;
                     } else {
                        this.ensureStripeStatisticsIsMutable();
                        this.stripeStatistics_.addAll(other.stripeStatistics_);
                     }

                     this.onChanged();
                  }
               } else if (!other.stripeStatistics_.isEmpty()) {
                  if (this.stripeStatisticsBuilder_.isEmpty()) {
                     this.stripeStatisticsBuilder_.dispose();
                     this.stripeStatisticsBuilder_ = null;
                     this.stripeStatistics_ = other.stripeStatistics_;
                     this.bitField0_ &= -9;
                     this.stripeStatisticsBuilder_ = OrcProto.EncryptionVariant.alwaysUseFieldBuilders ? this.getStripeStatisticsFieldBuilder() : null;
                  } else {
                     this.stripeStatisticsBuilder_.addAllMessages(other.stripeStatistics_);
                  }
               }

               if (other.hasFileStatistics()) {
                  this.setFileStatistics(other.getFileStatistics());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            EncryptionVariant parsedMessage = null;

            try {
               parsedMessage = (EncryptionVariant)OrcProto.EncryptionVariant.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (EncryptionVariant)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasRoot() {
            return (this.bitField0_ & 1) != 0;
         }

         public int getRoot() {
            return this.root_;
         }

         public Builder setRoot(int value) {
            this.bitField0_ |= 1;
            this.root_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearRoot() {
            this.bitField0_ &= -2;
            this.root_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasKey() {
            return (this.bitField0_ & 2) != 0;
         }

         public int getKey() {
            return this.key_;
         }

         public Builder setKey(int value) {
            this.bitField0_ |= 2;
            this.key_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearKey() {
            this.bitField0_ &= -3;
            this.key_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasEncryptedKey() {
            return (this.bitField0_ & 4) != 0;
         }

         public ByteString getEncryptedKey() {
            return this.encryptedKey_;
         }

         public Builder setEncryptedKey(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.encryptedKey_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearEncryptedKey() {
            this.bitField0_ &= -5;
            this.encryptedKey_ = OrcProto.EncryptionVariant.getDefaultInstance().getEncryptedKey();
            this.onChanged();
            return this;
         }

         private void ensureStripeStatisticsIsMutable() {
            if ((this.bitField0_ & 8) == 0) {
               this.stripeStatistics_ = new ArrayList(this.stripeStatistics_);
               this.bitField0_ |= 8;
            }

         }

         public List getStripeStatisticsList() {
            return this.stripeStatisticsBuilder_ == null ? Collections.unmodifiableList(this.stripeStatistics_) : this.stripeStatisticsBuilder_.getMessageList();
         }

         public int getStripeStatisticsCount() {
            return this.stripeStatisticsBuilder_ == null ? this.stripeStatistics_.size() : this.stripeStatisticsBuilder_.getCount();
         }

         public Stream getStripeStatistics(int index) {
            return this.stripeStatisticsBuilder_ == null ? (Stream)this.stripeStatistics_.get(index) : (Stream)this.stripeStatisticsBuilder_.getMessage(index);
         }

         public Builder setStripeStatistics(int index, Stream value) {
            if (this.stripeStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStripeStatisticsIsMutable();
               this.stripeStatistics_.set(index, value);
               this.onChanged();
            } else {
               this.stripeStatisticsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setStripeStatistics(int index, Stream.Builder builderForValue) {
            if (this.stripeStatisticsBuilder_ == null) {
               this.ensureStripeStatisticsIsMutable();
               this.stripeStatistics_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.stripeStatisticsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addStripeStatistics(Stream value) {
            if (this.stripeStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStripeStatisticsIsMutable();
               this.stripeStatistics_.add(value);
               this.onChanged();
            } else {
               this.stripeStatisticsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addStripeStatistics(int index, Stream value) {
            if (this.stripeStatisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStripeStatisticsIsMutable();
               this.stripeStatistics_.add(index, value);
               this.onChanged();
            } else {
               this.stripeStatisticsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addStripeStatistics(Stream.Builder builderForValue) {
            if (this.stripeStatisticsBuilder_ == null) {
               this.ensureStripeStatisticsIsMutable();
               this.stripeStatistics_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.stripeStatisticsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addStripeStatistics(int index, Stream.Builder builderForValue) {
            if (this.stripeStatisticsBuilder_ == null) {
               this.ensureStripeStatisticsIsMutable();
               this.stripeStatistics_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.stripeStatisticsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllStripeStatistics(Iterable values) {
            if (this.stripeStatisticsBuilder_ == null) {
               this.ensureStripeStatisticsIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.stripeStatistics_);
               this.onChanged();
            } else {
               this.stripeStatisticsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearStripeStatistics() {
            if (this.stripeStatisticsBuilder_ == null) {
               this.stripeStatistics_ = Collections.emptyList();
               this.bitField0_ &= -9;
               this.onChanged();
            } else {
               this.stripeStatisticsBuilder_.clear();
            }

            return this;
         }

         public Builder removeStripeStatistics(int index) {
            if (this.stripeStatisticsBuilder_ == null) {
               this.ensureStripeStatisticsIsMutable();
               this.stripeStatistics_.remove(index);
               this.onChanged();
            } else {
               this.stripeStatisticsBuilder_.remove(index);
            }

            return this;
         }

         public Stream.Builder getStripeStatisticsBuilder(int index) {
            return (Stream.Builder)this.getStripeStatisticsFieldBuilder().getBuilder(index);
         }

         public StreamOrBuilder getStripeStatisticsOrBuilder(int index) {
            return this.stripeStatisticsBuilder_ == null ? (StreamOrBuilder)this.stripeStatistics_.get(index) : (StreamOrBuilder)this.stripeStatisticsBuilder_.getMessageOrBuilder(index);
         }

         public List getStripeStatisticsOrBuilderList() {
            return this.stripeStatisticsBuilder_ != null ? this.stripeStatisticsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.stripeStatistics_);
         }

         public Stream.Builder addStripeStatisticsBuilder() {
            return (Stream.Builder)this.getStripeStatisticsFieldBuilder().addBuilder(OrcProto.Stream.getDefaultInstance());
         }

         public Stream.Builder addStripeStatisticsBuilder(int index) {
            return (Stream.Builder)this.getStripeStatisticsFieldBuilder().addBuilder(index, OrcProto.Stream.getDefaultInstance());
         }

         public List getStripeStatisticsBuilderList() {
            return this.getStripeStatisticsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getStripeStatisticsFieldBuilder() {
            if (this.stripeStatisticsBuilder_ == null) {
               this.stripeStatisticsBuilder_ = new RepeatedFieldBuilderV3(this.stripeStatistics_, (this.bitField0_ & 8) != 0, this.getParentForChildren(), this.isClean());
               this.stripeStatistics_ = null;
            }

            return this.stripeStatisticsBuilder_;
         }

         public boolean hasFileStatistics() {
            return (this.bitField0_ & 16) != 0;
         }

         public ByteString getFileStatistics() {
            return this.fileStatistics_;
         }

         public Builder setFileStatistics(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.fileStatistics_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearFileStatistics() {
            this.bitField0_ &= -17;
            this.fileStatistics_ = OrcProto.EncryptionVariant.getDefaultInstance().getFileStatistics();
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class Encryption extends GeneratedMessageV3 implements EncryptionOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int MASK_FIELD_NUMBER = 1;
      private List mask_;
      public static final int KEY_FIELD_NUMBER = 2;
      private List key_;
      public static final int VARIANTS_FIELD_NUMBER = 3;
      private List variants_;
      public static final int KEY_PROVIDER_FIELD_NUMBER = 4;
      private int keyProvider_;
      private byte memoizedIsInitialized;
      private static final Encryption DEFAULT_INSTANCE = new Encryption();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public Encryption parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new Encryption(input, extensionRegistry);
         }
      };

      private Encryption(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private Encryption() {
         this.memoizedIsInitialized = -1;
         this.mask_ = Collections.emptyList();
         this.key_ = Collections.emptyList();
         this.variants_ = Collections.emptyList();
         this.keyProvider_ = 0;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new Encryption();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private Encryption(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) == 0) {
                           this.mask_ = new ArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.mask_.add((DataMask)input.readMessage(OrcProto.DataMask.PARSER, extensionRegistry));
                        break;
                     case 18:
                        if ((mutable_bitField0_ & 2) == 0) {
                           this.key_ = new ArrayList();
                           mutable_bitField0_ |= 2;
                        }

                        this.key_.add((EncryptionKey)input.readMessage(OrcProto.EncryptionKey.PARSER, extensionRegistry));
                        break;
                     case 26:
                        if ((mutable_bitField0_ & 4) == 0) {
                           this.variants_ = new ArrayList();
                           mutable_bitField0_ |= 4;
                        }

                        this.variants_.add((EncryptionVariant)input.readMessage(OrcProto.EncryptionVariant.PARSER, extensionRegistry));
                        break;
                     case 32:
                        int rawValue = input.readEnum();
                        KeyProviderKind value = OrcProto.KeyProviderKind.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(4, rawValue);
                        } else {
                           this.bitField0_ |= 1;
                           this.keyProvider_ = rawValue;
                        }
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) != 0) {
                  this.mask_ = Collections.unmodifiableList(this.mask_);
               }

               if ((mutable_bitField0_ & 2) != 0) {
                  this.key_ = Collections.unmodifiableList(this.key_);
               }

               if ((mutable_bitField0_ & 4) != 0) {
                  this.variants_ = Collections.unmodifiableList(this.variants_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_Encryption_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_Encryption_fieldAccessorTable.ensureFieldAccessorsInitialized(Encryption.class, Builder.class);
      }

      public List getMaskList() {
         return this.mask_;
      }

      public List getMaskOrBuilderList() {
         return this.mask_;
      }

      public int getMaskCount() {
         return this.mask_.size();
      }

      public DataMask getMask(int index) {
         return (DataMask)this.mask_.get(index);
      }

      public DataMaskOrBuilder getMaskOrBuilder(int index) {
         return (DataMaskOrBuilder)this.mask_.get(index);
      }

      public List getKeyList() {
         return this.key_;
      }

      public List getKeyOrBuilderList() {
         return this.key_;
      }

      public int getKeyCount() {
         return this.key_.size();
      }

      public EncryptionKey getKey(int index) {
         return (EncryptionKey)this.key_.get(index);
      }

      public EncryptionKeyOrBuilder getKeyOrBuilder(int index) {
         return (EncryptionKeyOrBuilder)this.key_.get(index);
      }

      public List getVariantsList() {
         return this.variants_;
      }

      public List getVariantsOrBuilderList() {
         return this.variants_;
      }

      public int getVariantsCount() {
         return this.variants_.size();
      }

      public EncryptionVariant getVariants(int index) {
         return (EncryptionVariant)this.variants_.get(index);
      }

      public EncryptionVariantOrBuilder getVariantsOrBuilder(int index) {
         return (EncryptionVariantOrBuilder)this.variants_.get(index);
      }

      public boolean hasKeyProvider() {
         return (this.bitField0_ & 1) != 0;
      }

      public KeyProviderKind getKeyProvider() {
         KeyProviderKind result = OrcProto.KeyProviderKind.valueOf(this.keyProvider_);
         return result == null ? OrcProto.KeyProviderKind.UNKNOWN : result;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         for(int i = 0; i < this.mask_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.mask_.get(i));
         }

         for(int i = 0; i < this.key_.size(); ++i) {
            output.writeMessage(2, (MessageLite)this.key_.get(i));
         }

         for(int i = 0; i < this.variants_.size(); ++i) {
            output.writeMessage(3, (MessageLite)this.variants_.get(i));
         }

         if ((this.bitField0_ & 1) != 0) {
            output.writeEnum(4, this.keyProvider_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.mask_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.mask_.get(i));
            }

            for(int i = 0; i < this.key_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.key_.get(i));
            }

            for(int i = 0; i < this.variants_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.variants_.get(i));
            }

            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeEnumSize(4, this.keyProvider_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof Encryption)) {
            return super.equals(obj);
         } else {
            Encryption other = (Encryption)obj;
            if (!this.getMaskList().equals(other.getMaskList())) {
               return false;
            } else if (!this.getKeyList().equals(other.getKeyList())) {
               return false;
            } else if (!this.getVariantsList().equals(other.getVariantsList())) {
               return false;
            } else if (this.hasKeyProvider() != other.hasKeyProvider()) {
               return false;
            } else if (this.hasKeyProvider() && this.keyProvider_ != other.keyProvider_) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.getMaskCount() > 0) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getMaskList().hashCode();
            }

            if (this.getKeyCount() > 0) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getKeyList().hashCode();
            }

            if (this.getVariantsCount() > 0) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getVariantsList().hashCode();
            }

            if (this.hasKeyProvider()) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.keyProvider_;
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static Encryption parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (Encryption)PARSER.parseFrom(data);
      }

      public static Encryption parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Encryption)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Encryption parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (Encryption)PARSER.parseFrom(data);
      }

      public static Encryption parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Encryption)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Encryption parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (Encryption)PARSER.parseFrom(data);
      }

      public static Encryption parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Encryption)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Encryption parseFrom(InputStream input) throws IOException {
         return (Encryption)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static Encryption parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Encryption)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static Encryption parseDelimitedFrom(InputStream input) throws IOException {
         return (Encryption)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static Encryption parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Encryption)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static Encryption parseFrom(CodedInputStream input) throws IOException {
         return (Encryption)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static Encryption parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Encryption)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(Encryption prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static Encryption getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public Encryption getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements EncryptionOrBuilder {
         private int bitField0_;
         private List mask_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 maskBuilder_;
         private List key_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 keyBuilder_;
         private List variants_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 variantsBuilder_;
         private int keyProvider_ = 0;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_Encryption_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_Encryption_fieldAccessorTable.ensureFieldAccessorsInitialized(Encryption.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.Encryption.alwaysUseFieldBuilders) {
               this.getMaskFieldBuilder();
               this.getKeyFieldBuilder();
               this.getVariantsFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            if (this.maskBuilder_ == null) {
               this.mask_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.maskBuilder_.clear();
            }

            if (this.keyBuilder_ == null) {
               this.key_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.keyBuilder_.clear();
            }

            if (this.variantsBuilder_ == null) {
               this.variants_ = Collections.emptyList();
               this.bitField0_ &= -5;
            } else {
               this.variantsBuilder_.clear();
            }

            this.keyProvider_ = 0;
            this.bitField0_ &= -9;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_Encryption_descriptor;
         }

         public Encryption getDefaultInstanceForType() {
            return OrcProto.Encryption.getDefaultInstance();
         }

         public Encryption build() {
            Encryption result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public Encryption buildPartial() {
            Encryption result = new Encryption(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if (this.maskBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.mask_ = Collections.unmodifiableList(this.mask_);
                  this.bitField0_ &= -2;
               }

               result.mask_ = this.mask_;
            } else {
               result.mask_ = this.maskBuilder_.build();
            }

            if (this.keyBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.key_ = Collections.unmodifiableList(this.key_);
                  this.bitField0_ &= -3;
               }

               result.key_ = this.key_;
            } else {
               result.key_ = this.keyBuilder_.build();
            }

            if (this.variantsBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0) {
                  this.variants_ = Collections.unmodifiableList(this.variants_);
                  this.bitField0_ &= -5;
               }

               result.variants_ = this.variants_;
            } else {
               result.variants_ = this.variantsBuilder_.build();
            }

            if ((from_bitField0_ & 8) != 0) {
               to_bitField0_ |= 1;
            }

            result.keyProvider_ = this.keyProvider_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof Encryption) {
               return this.mergeFrom((Encryption)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(Encryption other) {
            if (other == OrcProto.Encryption.getDefaultInstance()) {
               return this;
            } else {
               if (this.maskBuilder_ == null) {
                  if (!other.mask_.isEmpty()) {
                     if (this.mask_.isEmpty()) {
                        this.mask_ = other.mask_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureMaskIsMutable();
                        this.mask_.addAll(other.mask_);
                     }

                     this.onChanged();
                  }
               } else if (!other.mask_.isEmpty()) {
                  if (this.maskBuilder_.isEmpty()) {
                     this.maskBuilder_.dispose();
                     this.maskBuilder_ = null;
                     this.mask_ = other.mask_;
                     this.bitField0_ &= -2;
                     this.maskBuilder_ = OrcProto.Encryption.alwaysUseFieldBuilders ? this.getMaskFieldBuilder() : null;
                  } else {
                     this.maskBuilder_.addAllMessages(other.mask_);
                  }
               }

               if (this.keyBuilder_ == null) {
                  if (!other.key_.isEmpty()) {
                     if (this.key_.isEmpty()) {
                        this.key_ = other.key_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureKeyIsMutable();
                        this.key_.addAll(other.key_);
                     }

                     this.onChanged();
                  }
               } else if (!other.key_.isEmpty()) {
                  if (this.keyBuilder_.isEmpty()) {
                     this.keyBuilder_.dispose();
                     this.keyBuilder_ = null;
                     this.key_ = other.key_;
                     this.bitField0_ &= -3;
                     this.keyBuilder_ = OrcProto.Encryption.alwaysUseFieldBuilders ? this.getKeyFieldBuilder() : null;
                  } else {
                     this.keyBuilder_.addAllMessages(other.key_);
                  }
               }

               if (this.variantsBuilder_ == null) {
                  if (!other.variants_.isEmpty()) {
                     if (this.variants_.isEmpty()) {
                        this.variants_ = other.variants_;
                        this.bitField0_ &= -5;
                     } else {
                        this.ensureVariantsIsMutable();
                        this.variants_.addAll(other.variants_);
                     }

                     this.onChanged();
                  }
               } else if (!other.variants_.isEmpty()) {
                  if (this.variantsBuilder_.isEmpty()) {
                     this.variantsBuilder_.dispose();
                     this.variantsBuilder_ = null;
                     this.variants_ = other.variants_;
                     this.bitField0_ &= -5;
                     this.variantsBuilder_ = OrcProto.Encryption.alwaysUseFieldBuilders ? this.getVariantsFieldBuilder() : null;
                  } else {
                     this.variantsBuilder_.addAllMessages(other.variants_);
                  }
               }

               if (other.hasKeyProvider()) {
                  this.setKeyProvider(other.getKeyProvider());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            Encryption parsedMessage = null;

            try {
               parsedMessage = (Encryption)OrcProto.Encryption.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (Encryption)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureMaskIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.mask_ = new ArrayList(this.mask_);
               this.bitField0_ |= 1;
            }

         }

         public List getMaskList() {
            return this.maskBuilder_ == null ? Collections.unmodifiableList(this.mask_) : this.maskBuilder_.getMessageList();
         }

         public int getMaskCount() {
            return this.maskBuilder_ == null ? this.mask_.size() : this.maskBuilder_.getCount();
         }

         public DataMask getMask(int index) {
            return this.maskBuilder_ == null ? (DataMask)this.mask_.get(index) : (DataMask)this.maskBuilder_.getMessage(index);
         }

         public Builder setMask(int index, DataMask value) {
            if (this.maskBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureMaskIsMutable();
               this.mask_.set(index, value);
               this.onChanged();
            } else {
               this.maskBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setMask(int index, DataMask.Builder builderForValue) {
            if (this.maskBuilder_ == null) {
               this.ensureMaskIsMutable();
               this.mask_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.maskBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addMask(DataMask value) {
            if (this.maskBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureMaskIsMutable();
               this.mask_.add(value);
               this.onChanged();
            } else {
               this.maskBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addMask(int index, DataMask value) {
            if (this.maskBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureMaskIsMutable();
               this.mask_.add(index, value);
               this.onChanged();
            } else {
               this.maskBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addMask(DataMask.Builder builderForValue) {
            if (this.maskBuilder_ == null) {
               this.ensureMaskIsMutable();
               this.mask_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.maskBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addMask(int index, DataMask.Builder builderForValue) {
            if (this.maskBuilder_ == null) {
               this.ensureMaskIsMutable();
               this.mask_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.maskBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllMask(Iterable values) {
            if (this.maskBuilder_ == null) {
               this.ensureMaskIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.mask_);
               this.onChanged();
            } else {
               this.maskBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearMask() {
            if (this.maskBuilder_ == null) {
               this.mask_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.maskBuilder_.clear();
            }

            return this;
         }

         public Builder removeMask(int index) {
            if (this.maskBuilder_ == null) {
               this.ensureMaskIsMutable();
               this.mask_.remove(index);
               this.onChanged();
            } else {
               this.maskBuilder_.remove(index);
            }

            return this;
         }

         public DataMask.Builder getMaskBuilder(int index) {
            return (DataMask.Builder)this.getMaskFieldBuilder().getBuilder(index);
         }

         public DataMaskOrBuilder getMaskOrBuilder(int index) {
            return this.maskBuilder_ == null ? (DataMaskOrBuilder)this.mask_.get(index) : (DataMaskOrBuilder)this.maskBuilder_.getMessageOrBuilder(index);
         }

         public List getMaskOrBuilderList() {
            return this.maskBuilder_ != null ? this.maskBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.mask_);
         }

         public DataMask.Builder addMaskBuilder() {
            return (DataMask.Builder)this.getMaskFieldBuilder().addBuilder(OrcProto.DataMask.getDefaultInstance());
         }

         public DataMask.Builder addMaskBuilder(int index) {
            return (DataMask.Builder)this.getMaskFieldBuilder().addBuilder(index, OrcProto.DataMask.getDefaultInstance());
         }

         public List getMaskBuilderList() {
            return this.getMaskFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getMaskFieldBuilder() {
            if (this.maskBuilder_ == null) {
               this.maskBuilder_ = new RepeatedFieldBuilderV3(this.mask_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.mask_ = null;
            }

            return this.maskBuilder_;
         }

         private void ensureKeyIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.key_ = new ArrayList(this.key_);
               this.bitField0_ |= 2;
            }

         }

         public List getKeyList() {
            return this.keyBuilder_ == null ? Collections.unmodifiableList(this.key_) : this.keyBuilder_.getMessageList();
         }

         public int getKeyCount() {
            return this.keyBuilder_ == null ? this.key_.size() : this.keyBuilder_.getCount();
         }

         public EncryptionKey getKey(int index) {
            return this.keyBuilder_ == null ? (EncryptionKey)this.key_.get(index) : (EncryptionKey)this.keyBuilder_.getMessage(index);
         }

         public Builder setKey(int index, EncryptionKey value) {
            if (this.keyBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureKeyIsMutable();
               this.key_.set(index, value);
               this.onChanged();
            } else {
               this.keyBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setKey(int index, EncryptionKey.Builder builderForValue) {
            if (this.keyBuilder_ == null) {
               this.ensureKeyIsMutable();
               this.key_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.keyBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addKey(EncryptionKey value) {
            if (this.keyBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureKeyIsMutable();
               this.key_.add(value);
               this.onChanged();
            } else {
               this.keyBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addKey(int index, EncryptionKey value) {
            if (this.keyBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureKeyIsMutable();
               this.key_.add(index, value);
               this.onChanged();
            } else {
               this.keyBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addKey(EncryptionKey.Builder builderForValue) {
            if (this.keyBuilder_ == null) {
               this.ensureKeyIsMutable();
               this.key_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.keyBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addKey(int index, EncryptionKey.Builder builderForValue) {
            if (this.keyBuilder_ == null) {
               this.ensureKeyIsMutable();
               this.key_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.keyBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllKey(Iterable values) {
            if (this.keyBuilder_ == null) {
               this.ensureKeyIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.key_);
               this.onChanged();
            } else {
               this.keyBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearKey() {
            if (this.keyBuilder_ == null) {
               this.key_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.keyBuilder_.clear();
            }

            return this;
         }

         public Builder removeKey(int index) {
            if (this.keyBuilder_ == null) {
               this.ensureKeyIsMutable();
               this.key_.remove(index);
               this.onChanged();
            } else {
               this.keyBuilder_.remove(index);
            }

            return this;
         }

         public EncryptionKey.Builder getKeyBuilder(int index) {
            return (EncryptionKey.Builder)this.getKeyFieldBuilder().getBuilder(index);
         }

         public EncryptionKeyOrBuilder getKeyOrBuilder(int index) {
            return this.keyBuilder_ == null ? (EncryptionKeyOrBuilder)this.key_.get(index) : (EncryptionKeyOrBuilder)this.keyBuilder_.getMessageOrBuilder(index);
         }

         public List getKeyOrBuilderList() {
            return this.keyBuilder_ != null ? this.keyBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.key_);
         }

         public EncryptionKey.Builder addKeyBuilder() {
            return (EncryptionKey.Builder)this.getKeyFieldBuilder().addBuilder(OrcProto.EncryptionKey.getDefaultInstance());
         }

         public EncryptionKey.Builder addKeyBuilder(int index) {
            return (EncryptionKey.Builder)this.getKeyFieldBuilder().addBuilder(index, OrcProto.EncryptionKey.getDefaultInstance());
         }

         public List getKeyBuilderList() {
            return this.getKeyFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getKeyFieldBuilder() {
            if (this.keyBuilder_ == null) {
               this.keyBuilder_ = new RepeatedFieldBuilderV3(this.key_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean());
               this.key_ = null;
            }

            return this.keyBuilder_;
         }

         private void ensureVariantsIsMutable() {
            if ((this.bitField0_ & 4) == 0) {
               this.variants_ = new ArrayList(this.variants_);
               this.bitField0_ |= 4;
            }

         }

         public List getVariantsList() {
            return this.variantsBuilder_ == null ? Collections.unmodifiableList(this.variants_) : this.variantsBuilder_.getMessageList();
         }

         public int getVariantsCount() {
            return this.variantsBuilder_ == null ? this.variants_.size() : this.variantsBuilder_.getCount();
         }

         public EncryptionVariant getVariants(int index) {
            return this.variantsBuilder_ == null ? (EncryptionVariant)this.variants_.get(index) : (EncryptionVariant)this.variantsBuilder_.getMessage(index);
         }

         public Builder setVariants(int index, EncryptionVariant value) {
            if (this.variantsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureVariantsIsMutable();
               this.variants_.set(index, value);
               this.onChanged();
            } else {
               this.variantsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setVariants(int index, EncryptionVariant.Builder builderForValue) {
            if (this.variantsBuilder_ == null) {
               this.ensureVariantsIsMutable();
               this.variants_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.variantsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addVariants(EncryptionVariant value) {
            if (this.variantsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureVariantsIsMutable();
               this.variants_.add(value);
               this.onChanged();
            } else {
               this.variantsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addVariants(int index, EncryptionVariant value) {
            if (this.variantsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureVariantsIsMutable();
               this.variants_.add(index, value);
               this.onChanged();
            } else {
               this.variantsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addVariants(EncryptionVariant.Builder builderForValue) {
            if (this.variantsBuilder_ == null) {
               this.ensureVariantsIsMutable();
               this.variants_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.variantsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addVariants(int index, EncryptionVariant.Builder builderForValue) {
            if (this.variantsBuilder_ == null) {
               this.ensureVariantsIsMutable();
               this.variants_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.variantsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllVariants(Iterable values) {
            if (this.variantsBuilder_ == null) {
               this.ensureVariantsIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.variants_);
               this.onChanged();
            } else {
               this.variantsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearVariants() {
            if (this.variantsBuilder_ == null) {
               this.variants_ = Collections.emptyList();
               this.bitField0_ &= -5;
               this.onChanged();
            } else {
               this.variantsBuilder_.clear();
            }

            return this;
         }

         public Builder removeVariants(int index) {
            if (this.variantsBuilder_ == null) {
               this.ensureVariantsIsMutable();
               this.variants_.remove(index);
               this.onChanged();
            } else {
               this.variantsBuilder_.remove(index);
            }

            return this;
         }

         public EncryptionVariant.Builder getVariantsBuilder(int index) {
            return (EncryptionVariant.Builder)this.getVariantsFieldBuilder().getBuilder(index);
         }

         public EncryptionVariantOrBuilder getVariantsOrBuilder(int index) {
            return this.variantsBuilder_ == null ? (EncryptionVariantOrBuilder)this.variants_.get(index) : (EncryptionVariantOrBuilder)this.variantsBuilder_.getMessageOrBuilder(index);
         }

         public List getVariantsOrBuilderList() {
            return this.variantsBuilder_ != null ? this.variantsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.variants_);
         }

         public EncryptionVariant.Builder addVariantsBuilder() {
            return (EncryptionVariant.Builder)this.getVariantsFieldBuilder().addBuilder(OrcProto.EncryptionVariant.getDefaultInstance());
         }

         public EncryptionVariant.Builder addVariantsBuilder(int index) {
            return (EncryptionVariant.Builder)this.getVariantsFieldBuilder().addBuilder(index, OrcProto.EncryptionVariant.getDefaultInstance());
         }

         public List getVariantsBuilderList() {
            return this.getVariantsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getVariantsFieldBuilder() {
            if (this.variantsBuilder_ == null) {
               this.variantsBuilder_ = new RepeatedFieldBuilderV3(this.variants_, (this.bitField0_ & 4) != 0, this.getParentForChildren(), this.isClean());
               this.variants_ = null;
            }

            return this.variantsBuilder_;
         }

         public boolean hasKeyProvider() {
            return (this.bitField0_ & 8) != 0;
         }

         public KeyProviderKind getKeyProvider() {
            KeyProviderKind result = OrcProto.KeyProviderKind.valueOf(this.keyProvider_);
            return result == null ? OrcProto.KeyProviderKind.UNKNOWN : result;
         }

         public Builder setKeyProvider(KeyProviderKind value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8;
               this.keyProvider_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public Builder clearKeyProvider() {
            this.bitField0_ &= -9;
            this.keyProvider_ = 0;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class Footer extends GeneratedMessageV3 implements FooterOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int HEADER_LENGTH_FIELD_NUMBER = 1;
      private long headerLength_;
      public static final int CONTENT_LENGTH_FIELD_NUMBER = 2;
      private long contentLength_;
      public static final int STRIPES_FIELD_NUMBER = 3;
      private List stripes_;
      public static final int TYPES_FIELD_NUMBER = 4;
      private List types_;
      public static final int METADATA_FIELD_NUMBER = 5;
      private List metadata_;
      public static final int NUMBER_OF_ROWS_FIELD_NUMBER = 6;
      private long numberOfRows_;
      public static final int STATISTICS_FIELD_NUMBER = 7;
      private List statistics_;
      public static final int ROW_INDEX_STRIDE_FIELD_NUMBER = 8;
      private int rowIndexStride_;
      public static final int WRITER_FIELD_NUMBER = 9;
      private int writer_;
      public static final int ENCRYPTION_FIELD_NUMBER = 10;
      private Encryption encryption_;
      public static final int CALENDAR_FIELD_NUMBER = 11;
      private int calendar_;
      public static final int SOFTWARE_VERSION_FIELD_NUMBER = 12;
      private volatile Object softwareVersion_;
      private byte memoizedIsInitialized;
      private static final Footer DEFAULT_INSTANCE = new Footer();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public Footer parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new Footer(input, extensionRegistry);
         }
      };

      private Footer(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private Footer() {
         this.memoizedIsInitialized = -1;
         this.stripes_ = Collections.emptyList();
         this.types_ = Collections.emptyList();
         this.metadata_ = Collections.emptyList();
         this.statistics_ = Collections.emptyList();
         this.calendar_ = 0;
         this.softwareVersion_ = "";
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new Footer();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private Footer(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.headerLength_ = input.readUInt64();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.contentLength_ = input.readUInt64();
                        break;
                     case 26:
                        if ((mutable_bitField0_ & 4) == 0) {
                           this.stripes_ = new ArrayList();
                           mutable_bitField0_ |= 4;
                        }

                        this.stripes_.add((StripeInformation)input.readMessage(OrcProto.StripeInformation.PARSER, extensionRegistry));
                        break;
                     case 34:
                        if ((mutable_bitField0_ & 8) == 0) {
                           this.types_ = new ArrayList();
                           mutable_bitField0_ |= 8;
                        }

                        this.types_.add((Type)input.readMessage(OrcProto.Type.PARSER, extensionRegistry));
                        break;
                     case 42:
                        if ((mutable_bitField0_ & 16) == 0) {
                           this.metadata_ = new ArrayList();
                           mutable_bitField0_ |= 16;
                        }

                        this.metadata_.add((UserMetadataItem)input.readMessage(OrcProto.UserMetadataItem.PARSER, extensionRegistry));
                        break;
                     case 48:
                        this.bitField0_ |= 4;
                        this.numberOfRows_ = input.readUInt64();
                        break;
                     case 58:
                        if ((mutable_bitField0_ & 64) == 0) {
                           this.statistics_ = new ArrayList();
                           mutable_bitField0_ |= 64;
                        }

                        this.statistics_.add((ColumnStatistics)input.readMessage(OrcProto.ColumnStatistics.PARSER, extensionRegistry));
                        break;
                     case 64:
                        this.bitField0_ |= 8;
                        this.rowIndexStride_ = input.readUInt32();
                        break;
                     case 72:
                        this.bitField0_ |= 16;
                        this.writer_ = input.readUInt32();
                        break;
                     case 82:
                        Encryption.Builder subBuilder = null;
                        if ((this.bitField0_ & 32) != 0) {
                           subBuilder = this.encryption_.toBuilder();
                        }

                        this.encryption_ = (Encryption)input.readMessage(OrcProto.Encryption.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.encryption_);
                           this.encryption_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 32;
                        break;
                     case 88:
                        int rawValue = input.readEnum();
                        CalendarKind value = OrcProto.CalendarKind.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(11, rawValue);
                        } else {
                           this.bitField0_ |= 64;
                           this.calendar_ = rawValue;
                        }
                        break;
                     case 98:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 128;
                        this.softwareVersion_ = bs;
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 4) != 0) {
                  this.stripes_ = Collections.unmodifiableList(this.stripes_);
               }

               if ((mutable_bitField0_ & 8) != 0) {
                  this.types_ = Collections.unmodifiableList(this.types_);
               }

               if ((mutable_bitField0_ & 16) != 0) {
                  this.metadata_ = Collections.unmodifiableList(this.metadata_);
               }

               if ((mutable_bitField0_ & 64) != 0) {
                  this.statistics_ = Collections.unmodifiableList(this.statistics_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_Footer_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_Footer_fieldAccessorTable.ensureFieldAccessorsInitialized(Footer.class, Builder.class);
      }

      public boolean hasHeaderLength() {
         return (this.bitField0_ & 1) != 0;
      }

      public long getHeaderLength() {
         return this.headerLength_;
      }

      public boolean hasContentLength() {
         return (this.bitField0_ & 2) != 0;
      }

      public long getContentLength() {
         return this.contentLength_;
      }

      public List getStripesList() {
         return this.stripes_;
      }

      public List getStripesOrBuilderList() {
         return this.stripes_;
      }

      public int getStripesCount() {
         return this.stripes_.size();
      }

      public StripeInformation getStripes(int index) {
         return (StripeInformation)this.stripes_.get(index);
      }

      public StripeInformationOrBuilder getStripesOrBuilder(int index) {
         return (StripeInformationOrBuilder)this.stripes_.get(index);
      }

      public List getTypesList() {
         return this.types_;
      }

      public List getTypesOrBuilderList() {
         return this.types_;
      }

      public int getTypesCount() {
         return this.types_.size();
      }

      public Type getTypes(int index) {
         return (Type)this.types_.get(index);
      }

      public TypeOrBuilder getTypesOrBuilder(int index) {
         return (TypeOrBuilder)this.types_.get(index);
      }

      public List getMetadataList() {
         return this.metadata_;
      }

      public List getMetadataOrBuilderList() {
         return this.metadata_;
      }

      public int getMetadataCount() {
         return this.metadata_.size();
      }

      public UserMetadataItem getMetadata(int index) {
         return (UserMetadataItem)this.metadata_.get(index);
      }

      public UserMetadataItemOrBuilder getMetadataOrBuilder(int index) {
         return (UserMetadataItemOrBuilder)this.metadata_.get(index);
      }

      public boolean hasNumberOfRows() {
         return (this.bitField0_ & 4) != 0;
      }

      public long getNumberOfRows() {
         return this.numberOfRows_;
      }

      public List getStatisticsList() {
         return this.statistics_;
      }

      public List getStatisticsOrBuilderList() {
         return this.statistics_;
      }

      public int getStatisticsCount() {
         return this.statistics_.size();
      }

      public ColumnStatistics getStatistics(int index) {
         return (ColumnStatistics)this.statistics_.get(index);
      }

      public ColumnStatisticsOrBuilder getStatisticsOrBuilder(int index) {
         return (ColumnStatisticsOrBuilder)this.statistics_.get(index);
      }

      public boolean hasRowIndexStride() {
         return (this.bitField0_ & 8) != 0;
      }

      public int getRowIndexStride() {
         return this.rowIndexStride_;
      }

      public boolean hasWriter() {
         return (this.bitField0_ & 16) != 0;
      }

      public int getWriter() {
         return this.writer_;
      }

      public boolean hasEncryption() {
         return (this.bitField0_ & 32) != 0;
      }

      public Encryption getEncryption() {
         return this.encryption_ == null ? OrcProto.Encryption.getDefaultInstance() : this.encryption_;
      }

      public EncryptionOrBuilder getEncryptionOrBuilder() {
         return this.encryption_ == null ? OrcProto.Encryption.getDefaultInstance() : this.encryption_;
      }

      public boolean hasCalendar() {
         return (this.bitField0_ & 64) != 0;
      }

      public CalendarKind getCalendar() {
         CalendarKind result = OrcProto.CalendarKind.valueOf(this.calendar_);
         return result == null ? OrcProto.CalendarKind.UNKNOWN_CALENDAR : result;
      }

      public boolean hasSoftwareVersion() {
         return (this.bitField0_ & 128) != 0;
      }

      public String getSoftwareVersion() {
         Object ref = this.softwareVersion_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.softwareVersion_ = s;
            }

            return s;
         }
      }

      public ByteString getSoftwareVersionBytes() {
         Object ref = this.softwareVersion_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.softwareVersion_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeUInt64(1, this.headerLength_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeUInt64(2, this.contentLength_);
         }

         for(int i = 0; i < this.stripes_.size(); ++i) {
            output.writeMessage(3, (MessageLite)this.stripes_.get(i));
         }

         for(int i = 0; i < this.types_.size(); ++i) {
            output.writeMessage(4, (MessageLite)this.types_.get(i));
         }

         for(int i = 0; i < this.metadata_.size(); ++i) {
            output.writeMessage(5, (MessageLite)this.metadata_.get(i));
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeUInt64(6, this.numberOfRows_);
         }

         for(int i = 0; i < this.statistics_.size(); ++i) {
            output.writeMessage(7, (MessageLite)this.statistics_.get(i));
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeUInt32(8, this.rowIndexStride_);
         }

         if ((this.bitField0_ & 16) != 0) {
            output.writeUInt32(9, this.writer_);
         }

         if ((this.bitField0_ & 32) != 0) {
            output.writeMessage(10, this.getEncryption());
         }

         if ((this.bitField0_ & 64) != 0) {
            output.writeEnum(11, this.calendar_);
         }

         if ((this.bitField0_ & 128) != 0) {
            GeneratedMessageV3.writeString(output, 12, this.softwareVersion_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeUInt64Size(1, this.headerLength_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeUInt64Size(2, this.contentLength_);
            }

            for(int i = 0; i < this.stripes_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.stripes_.get(i));
            }

            for(int i = 0; i < this.types_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.types_.get(i));
            }

            for(int i = 0; i < this.metadata_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(5, (MessageLite)this.metadata_.get(i));
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeUInt64Size(6, this.numberOfRows_);
            }

            for(int i = 0; i < this.statistics_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(7, (MessageLite)this.statistics_.get(i));
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeUInt32Size(8, this.rowIndexStride_);
            }

            if ((this.bitField0_ & 16) != 0) {
               size += CodedOutputStream.computeUInt32Size(9, this.writer_);
            }

            if ((this.bitField0_ & 32) != 0) {
               size += CodedOutputStream.computeMessageSize(10, this.getEncryption());
            }

            if ((this.bitField0_ & 64) != 0) {
               size += CodedOutputStream.computeEnumSize(11, this.calendar_);
            }

            if ((this.bitField0_ & 128) != 0) {
               size += GeneratedMessageV3.computeStringSize(12, this.softwareVersion_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof Footer)) {
            return super.equals(obj);
         } else {
            Footer other = (Footer)obj;
            if (this.hasHeaderLength() != other.hasHeaderLength()) {
               return false;
            } else if (this.hasHeaderLength() && this.getHeaderLength() != other.getHeaderLength()) {
               return false;
            } else if (this.hasContentLength() != other.hasContentLength()) {
               return false;
            } else if (this.hasContentLength() && this.getContentLength() != other.getContentLength()) {
               return false;
            } else if (!this.getStripesList().equals(other.getStripesList())) {
               return false;
            } else if (!this.getTypesList().equals(other.getTypesList())) {
               return false;
            } else if (!this.getMetadataList().equals(other.getMetadataList())) {
               return false;
            } else if (this.hasNumberOfRows() != other.hasNumberOfRows()) {
               return false;
            } else if (this.hasNumberOfRows() && this.getNumberOfRows() != other.getNumberOfRows()) {
               return false;
            } else if (!this.getStatisticsList().equals(other.getStatisticsList())) {
               return false;
            } else if (this.hasRowIndexStride() != other.hasRowIndexStride()) {
               return false;
            } else if (this.hasRowIndexStride() && this.getRowIndexStride() != other.getRowIndexStride()) {
               return false;
            } else if (this.hasWriter() != other.hasWriter()) {
               return false;
            } else if (this.hasWriter() && this.getWriter() != other.getWriter()) {
               return false;
            } else if (this.hasEncryption() != other.hasEncryption()) {
               return false;
            } else if (this.hasEncryption() && !this.getEncryption().equals(other.getEncryption())) {
               return false;
            } else if (this.hasCalendar() != other.hasCalendar()) {
               return false;
            } else if (this.hasCalendar() && this.calendar_ != other.calendar_) {
               return false;
            } else if (this.hasSoftwareVersion() != other.hasSoftwareVersion()) {
               return false;
            } else if (this.hasSoftwareVersion() && !this.getSoftwareVersion().equals(other.getSoftwareVersion())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasHeaderLength()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + Internal.hashLong(this.getHeaderLength());
            }

            if (this.hasContentLength()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + Internal.hashLong(this.getContentLength());
            }

            if (this.getStripesCount() > 0) {
               hash = 37 * hash + 3;
               hash = 53 * hash + this.getStripesList().hashCode();
            }

            if (this.getTypesCount() > 0) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.getTypesList().hashCode();
            }

            if (this.getMetadataCount() > 0) {
               hash = 37 * hash + 5;
               hash = 53 * hash + this.getMetadataList().hashCode();
            }

            if (this.hasNumberOfRows()) {
               hash = 37 * hash + 6;
               hash = 53 * hash + Internal.hashLong(this.getNumberOfRows());
            }

            if (this.getStatisticsCount() > 0) {
               hash = 37 * hash + 7;
               hash = 53 * hash + this.getStatisticsList().hashCode();
            }

            if (this.hasRowIndexStride()) {
               hash = 37 * hash + 8;
               hash = 53 * hash + this.getRowIndexStride();
            }

            if (this.hasWriter()) {
               hash = 37 * hash + 9;
               hash = 53 * hash + this.getWriter();
            }

            if (this.hasEncryption()) {
               hash = 37 * hash + 10;
               hash = 53 * hash + this.getEncryption().hashCode();
            }

            if (this.hasCalendar()) {
               hash = 37 * hash + 11;
               hash = 53 * hash + this.calendar_;
            }

            if (this.hasSoftwareVersion()) {
               hash = 37 * hash + 12;
               hash = 53 * hash + this.getSoftwareVersion().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static Footer parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (Footer)PARSER.parseFrom(data);
      }

      public static Footer parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Footer)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Footer parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (Footer)PARSER.parseFrom(data);
      }

      public static Footer parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Footer)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Footer parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (Footer)PARSER.parseFrom(data);
      }

      public static Footer parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Footer)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Footer parseFrom(InputStream input) throws IOException {
         return (Footer)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static Footer parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Footer)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static Footer parseDelimitedFrom(InputStream input) throws IOException {
         return (Footer)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static Footer parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Footer)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static Footer parseFrom(CodedInputStream input) throws IOException {
         return (Footer)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static Footer parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Footer)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(Footer prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static Footer getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public Footer getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements FooterOrBuilder {
         private int bitField0_;
         private long headerLength_;
         private long contentLength_;
         private List stripes_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 stripesBuilder_;
         private List types_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 typesBuilder_;
         private List metadata_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 metadataBuilder_;
         private long numberOfRows_;
         private List statistics_ = Collections.emptyList();
         private RepeatedFieldBuilderV3 statisticsBuilder_;
         private int rowIndexStride_;
         private int writer_;
         private Encryption encryption_;
         private SingleFieldBuilderV3 encryptionBuilder_;
         private int calendar_ = 0;
         private Object softwareVersion_ = "";

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_Footer_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_Footer_fieldAccessorTable.ensureFieldAccessorsInitialized(Footer.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.Footer.alwaysUseFieldBuilders) {
               this.getStripesFieldBuilder();
               this.getTypesFieldBuilder();
               this.getMetadataFieldBuilder();
               this.getStatisticsFieldBuilder();
               this.getEncryptionFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            this.headerLength_ = 0L;
            this.bitField0_ &= -2;
            this.contentLength_ = 0L;
            this.bitField0_ &= -3;
            if (this.stripesBuilder_ == null) {
               this.stripes_ = Collections.emptyList();
               this.bitField0_ &= -5;
            } else {
               this.stripesBuilder_.clear();
            }

            if (this.typesBuilder_ == null) {
               this.types_ = Collections.emptyList();
               this.bitField0_ &= -9;
            } else {
               this.typesBuilder_.clear();
            }

            if (this.metadataBuilder_ == null) {
               this.metadata_ = Collections.emptyList();
               this.bitField0_ &= -17;
            } else {
               this.metadataBuilder_.clear();
            }

            this.numberOfRows_ = 0L;
            this.bitField0_ &= -33;
            if (this.statisticsBuilder_ == null) {
               this.statistics_ = Collections.emptyList();
               this.bitField0_ &= -65;
            } else {
               this.statisticsBuilder_.clear();
            }

            this.rowIndexStride_ = 0;
            this.bitField0_ &= -129;
            this.writer_ = 0;
            this.bitField0_ &= -257;
            if (this.encryptionBuilder_ == null) {
               this.encryption_ = null;
            } else {
               this.encryptionBuilder_.clear();
            }

            this.bitField0_ &= -513;
            this.calendar_ = 0;
            this.bitField0_ &= -1025;
            this.softwareVersion_ = "";
            this.bitField0_ &= -2049;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_Footer_descriptor;
         }

         public Footer getDefaultInstanceForType() {
            return OrcProto.Footer.getDefaultInstance();
         }

         public Footer build() {
            Footer result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public Footer buildPartial() {
            Footer result = new Footer(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.headerLength_ = this.headerLength_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               result.contentLength_ = this.contentLength_;
               to_bitField0_ |= 2;
            }

            if (this.stripesBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0) {
                  this.stripes_ = Collections.unmodifiableList(this.stripes_);
                  this.bitField0_ &= -5;
               }

               result.stripes_ = this.stripes_;
            } else {
               result.stripes_ = this.stripesBuilder_.build();
            }

            if (this.typesBuilder_ == null) {
               if ((this.bitField0_ & 8) != 0) {
                  this.types_ = Collections.unmodifiableList(this.types_);
                  this.bitField0_ &= -9;
               }

               result.types_ = this.types_;
            } else {
               result.types_ = this.typesBuilder_.build();
            }

            if (this.metadataBuilder_ == null) {
               if ((this.bitField0_ & 16) != 0) {
                  this.metadata_ = Collections.unmodifiableList(this.metadata_);
                  this.bitField0_ &= -17;
               }

               result.metadata_ = this.metadata_;
            } else {
               result.metadata_ = this.metadataBuilder_.build();
            }

            if ((from_bitField0_ & 32) != 0) {
               result.numberOfRows_ = this.numberOfRows_;
               to_bitField0_ |= 4;
            }

            if (this.statisticsBuilder_ == null) {
               if ((this.bitField0_ & 64) != 0) {
                  this.statistics_ = Collections.unmodifiableList(this.statistics_);
                  this.bitField0_ &= -65;
               }

               result.statistics_ = this.statistics_;
            } else {
               result.statistics_ = this.statisticsBuilder_.build();
            }

            if ((from_bitField0_ & 128) != 0) {
               result.rowIndexStride_ = this.rowIndexStride_;
               to_bitField0_ |= 8;
            }

            if ((from_bitField0_ & 256) != 0) {
               result.writer_ = this.writer_;
               to_bitField0_ |= 16;
            }

            if ((from_bitField0_ & 512) != 0) {
               if (this.encryptionBuilder_ == null) {
                  result.encryption_ = this.encryption_;
               } else {
                  result.encryption_ = (Encryption)this.encryptionBuilder_.build();
               }

               to_bitField0_ |= 32;
            }

            if ((from_bitField0_ & 1024) != 0) {
               to_bitField0_ |= 64;
            }

            result.calendar_ = this.calendar_;
            if ((from_bitField0_ & 2048) != 0) {
               to_bitField0_ |= 128;
            }

            result.softwareVersion_ = this.softwareVersion_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof Footer) {
               return this.mergeFrom((Footer)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(Footer other) {
            if (other == OrcProto.Footer.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasHeaderLength()) {
                  this.setHeaderLength(other.getHeaderLength());
               }

               if (other.hasContentLength()) {
                  this.setContentLength(other.getContentLength());
               }

               if (this.stripesBuilder_ == null) {
                  if (!other.stripes_.isEmpty()) {
                     if (this.stripes_.isEmpty()) {
                        this.stripes_ = other.stripes_;
                        this.bitField0_ &= -5;
                     } else {
                        this.ensureStripesIsMutable();
                        this.stripes_.addAll(other.stripes_);
                     }

                     this.onChanged();
                  }
               } else if (!other.stripes_.isEmpty()) {
                  if (this.stripesBuilder_.isEmpty()) {
                     this.stripesBuilder_.dispose();
                     this.stripesBuilder_ = null;
                     this.stripes_ = other.stripes_;
                     this.bitField0_ &= -5;
                     this.stripesBuilder_ = OrcProto.Footer.alwaysUseFieldBuilders ? this.getStripesFieldBuilder() : null;
                  } else {
                     this.stripesBuilder_.addAllMessages(other.stripes_);
                  }
               }

               if (this.typesBuilder_ == null) {
                  if (!other.types_.isEmpty()) {
                     if (this.types_.isEmpty()) {
                        this.types_ = other.types_;
                        this.bitField0_ &= -9;
                     } else {
                        this.ensureTypesIsMutable();
                        this.types_.addAll(other.types_);
                     }

                     this.onChanged();
                  }
               } else if (!other.types_.isEmpty()) {
                  if (this.typesBuilder_.isEmpty()) {
                     this.typesBuilder_.dispose();
                     this.typesBuilder_ = null;
                     this.types_ = other.types_;
                     this.bitField0_ &= -9;
                     this.typesBuilder_ = OrcProto.Footer.alwaysUseFieldBuilders ? this.getTypesFieldBuilder() : null;
                  } else {
                     this.typesBuilder_.addAllMessages(other.types_);
                  }
               }

               if (this.metadataBuilder_ == null) {
                  if (!other.metadata_.isEmpty()) {
                     if (this.metadata_.isEmpty()) {
                        this.metadata_ = other.metadata_;
                        this.bitField0_ &= -17;
                     } else {
                        this.ensureMetadataIsMutable();
                        this.metadata_.addAll(other.metadata_);
                     }

                     this.onChanged();
                  }
               } else if (!other.metadata_.isEmpty()) {
                  if (this.metadataBuilder_.isEmpty()) {
                     this.metadataBuilder_.dispose();
                     this.metadataBuilder_ = null;
                     this.metadata_ = other.metadata_;
                     this.bitField0_ &= -17;
                     this.metadataBuilder_ = OrcProto.Footer.alwaysUseFieldBuilders ? this.getMetadataFieldBuilder() : null;
                  } else {
                     this.metadataBuilder_.addAllMessages(other.metadata_);
                  }
               }

               if (other.hasNumberOfRows()) {
                  this.setNumberOfRows(other.getNumberOfRows());
               }

               if (this.statisticsBuilder_ == null) {
                  if (!other.statistics_.isEmpty()) {
                     if (this.statistics_.isEmpty()) {
                        this.statistics_ = other.statistics_;
                        this.bitField0_ &= -65;
                     } else {
                        this.ensureStatisticsIsMutable();
                        this.statistics_.addAll(other.statistics_);
                     }

                     this.onChanged();
                  }
               } else if (!other.statistics_.isEmpty()) {
                  if (this.statisticsBuilder_.isEmpty()) {
                     this.statisticsBuilder_.dispose();
                     this.statisticsBuilder_ = null;
                     this.statistics_ = other.statistics_;
                     this.bitField0_ &= -65;
                     this.statisticsBuilder_ = OrcProto.Footer.alwaysUseFieldBuilders ? this.getStatisticsFieldBuilder() : null;
                  } else {
                     this.statisticsBuilder_.addAllMessages(other.statistics_);
                  }
               }

               if (other.hasRowIndexStride()) {
                  this.setRowIndexStride(other.getRowIndexStride());
               }

               if (other.hasWriter()) {
                  this.setWriter(other.getWriter());
               }

               if (other.hasEncryption()) {
                  this.mergeEncryption(other.getEncryption());
               }

               if (other.hasCalendar()) {
                  this.setCalendar(other.getCalendar());
               }

               if (other.hasSoftwareVersion()) {
                  this.bitField0_ |= 2048;
                  this.softwareVersion_ = other.softwareVersion_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            Footer parsedMessage = null;

            try {
               parsedMessage = (Footer)OrcProto.Footer.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (Footer)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasHeaderLength() {
            return (this.bitField0_ & 1) != 0;
         }

         public long getHeaderLength() {
            return this.headerLength_;
         }

         public Builder setHeaderLength(long value) {
            this.bitField0_ |= 1;
            this.headerLength_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearHeaderLength() {
            this.bitField0_ &= -2;
            this.headerLength_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasContentLength() {
            return (this.bitField0_ & 2) != 0;
         }

         public long getContentLength() {
            return this.contentLength_;
         }

         public Builder setContentLength(long value) {
            this.bitField0_ |= 2;
            this.contentLength_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearContentLength() {
            this.bitField0_ &= -3;
            this.contentLength_ = 0L;
            this.onChanged();
            return this;
         }

         private void ensureStripesIsMutable() {
            if ((this.bitField0_ & 4) == 0) {
               this.stripes_ = new ArrayList(this.stripes_);
               this.bitField0_ |= 4;
            }

         }

         public List getStripesList() {
            return this.stripesBuilder_ == null ? Collections.unmodifiableList(this.stripes_) : this.stripesBuilder_.getMessageList();
         }

         public int getStripesCount() {
            return this.stripesBuilder_ == null ? this.stripes_.size() : this.stripesBuilder_.getCount();
         }

         public StripeInformation getStripes(int index) {
            return this.stripesBuilder_ == null ? (StripeInformation)this.stripes_.get(index) : (StripeInformation)this.stripesBuilder_.getMessage(index);
         }

         public Builder setStripes(int index, StripeInformation value) {
            if (this.stripesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStripesIsMutable();
               this.stripes_.set(index, value);
               this.onChanged();
            } else {
               this.stripesBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setStripes(int index, StripeInformation.Builder builderForValue) {
            if (this.stripesBuilder_ == null) {
               this.ensureStripesIsMutable();
               this.stripes_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.stripesBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addStripes(StripeInformation value) {
            if (this.stripesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStripesIsMutable();
               this.stripes_.add(value);
               this.onChanged();
            } else {
               this.stripesBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addStripes(int index, StripeInformation value) {
            if (this.stripesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStripesIsMutable();
               this.stripes_.add(index, value);
               this.onChanged();
            } else {
               this.stripesBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addStripes(StripeInformation.Builder builderForValue) {
            if (this.stripesBuilder_ == null) {
               this.ensureStripesIsMutable();
               this.stripes_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.stripesBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addStripes(int index, StripeInformation.Builder builderForValue) {
            if (this.stripesBuilder_ == null) {
               this.ensureStripesIsMutable();
               this.stripes_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.stripesBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllStripes(Iterable values) {
            if (this.stripesBuilder_ == null) {
               this.ensureStripesIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.stripes_);
               this.onChanged();
            } else {
               this.stripesBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearStripes() {
            if (this.stripesBuilder_ == null) {
               this.stripes_ = Collections.emptyList();
               this.bitField0_ &= -5;
               this.onChanged();
            } else {
               this.stripesBuilder_.clear();
            }

            return this;
         }

         public Builder removeStripes(int index) {
            if (this.stripesBuilder_ == null) {
               this.ensureStripesIsMutable();
               this.stripes_.remove(index);
               this.onChanged();
            } else {
               this.stripesBuilder_.remove(index);
            }

            return this;
         }

         public StripeInformation.Builder getStripesBuilder(int index) {
            return (StripeInformation.Builder)this.getStripesFieldBuilder().getBuilder(index);
         }

         public StripeInformationOrBuilder getStripesOrBuilder(int index) {
            return this.stripesBuilder_ == null ? (StripeInformationOrBuilder)this.stripes_.get(index) : (StripeInformationOrBuilder)this.stripesBuilder_.getMessageOrBuilder(index);
         }

         public List getStripesOrBuilderList() {
            return this.stripesBuilder_ != null ? this.stripesBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.stripes_);
         }

         public StripeInformation.Builder addStripesBuilder() {
            return (StripeInformation.Builder)this.getStripesFieldBuilder().addBuilder(OrcProto.StripeInformation.getDefaultInstance());
         }

         public StripeInformation.Builder addStripesBuilder(int index) {
            return (StripeInformation.Builder)this.getStripesFieldBuilder().addBuilder(index, OrcProto.StripeInformation.getDefaultInstance());
         }

         public List getStripesBuilderList() {
            return this.getStripesFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getStripesFieldBuilder() {
            if (this.stripesBuilder_ == null) {
               this.stripesBuilder_ = new RepeatedFieldBuilderV3(this.stripes_, (this.bitField0_ & 4) != 0, this.getParentForChildren(), this.isClean());
               this.stripes_ = null;
            }

            return this.stripesBuilder_;
         }

         private void ensureTypesIsMutable() {
            if ((this.bitField0_ & 8) == 0) {
               this.types_ = new ArrayList(this.types_);
               this.bitField0_ |= 8;
            }

         }

         public List getTypesList() {
            return this.typesBuilder_ == null ? Collections.unmodifiableList(this.types_) : this.typesBuilder_.getMessageList();
         }

         public int getTypesCount() {
            return this.typesBuilder_ == null ? this.types_.size() : this.typesBuilder_.getCount();
         }

         public Type getTypes(int index) {
            return this.typesBuilder_ == null ? (Type)this.types_.get(index) : (Type)this.typesBuilder_.getMessage(index);
         }

         public Builder setTypes(int index, Type value) {
            if (this.typesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureTypesIsMutable();
               this.types_.set(index, value);
               this.onChanged();
            } else {
               this.typesBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setTypes(int index, Type.Builder builderForValue) {
            if (this.typesBuilder_ == null) {
               this.ensureTypesIsMutable();
               this.types_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.typesBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addTypes(Type value) {
            if (this.typesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureTypesIsMutable();
               this.types_.add(value);
               this.onChanged();
            } else {
               this.typesBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addTypes(int index, Type value) {
            if (this.typesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureTypesIsMutable();
               this.types_.add(index, value);
               this.onChanged();
            } else {
               this.typesBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addTypes(Type.Builder builderForValue) {
            if (this.typesBuilder_ == null) {
               this.ensureTypesIsMutable();
               this.types_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.typesBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addTypes(int index, Type.Builder builderForValue) {
            if (this.typesBuilder_ == null) {
               this.ensureTypesIsMutable();
               this.types_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.typesBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllTypes(Iterable values) {
            if (this.typesBuilder_ == null) {
               this.ensureTypesIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.types_);
               this.onChanged();
            } else {
               this.typesBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearTypes() {
            if (this.typesBuilder_ == null) {
               this.types_ = Collections.emptyList();
               this.bitField0_ &= -9;
               this.onChanged();
            } else {
               this.typesBuilder_.clear();
            }

            return this;
         }

         public Builder removeTypes(int index) {
            if (this.typesBuilder_ == null) {
               this.ensureTypesIsMutable();
               this.types_.remove(index);
               this.onChanged();
            } else {
               this.typesBuilder_.remove(index);
            }

            return this;
         }

         public Type.Builder getTypesBuilder(int index) {
            return (Type.Builder)this.getTypesFieldBuilder().getBuilder(index);
         }

         public TypeOrBuilder getTypesOrBuilder(int index) {
            return this.typesBuilder_ == null ? (TypeOrBuilder)this.types_.get(index) : (TypeOrBuilder)this.typesBuilder_.getMessageOrBuilder(index);
         }

         public List getTypesOrBuilderList() {
            return this.typesBuilder_ != null ? this.typesBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.types_);
         }

         public Type.Builder addTypesBuilder() {
            return (Type.Builder)this.getTypesFieldBuilder().addBuilder(OrcProto.Type.getDefaultInstance());
         }

         public Type.Builder addTypesBuilder(int index) {
            return (Type.Builder)this.getTypesFieldBuilder().addBuilder(index, OrcProto.Type.getDefaultInstance());
         }

         public List getTypesBuilderList() {
            return this.getTypesFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getTypesFieldBuilder() {
            if (this.typesBuilder_ == null) {
               this.typesBuilder_ = new RepeatedFieldBuilderV3(this.types_, (this.bitField0_ & 8) != 0, this.getParentForChildren(), this.isClean());
               this.types_ = null;
            }

            return this.typesBuilder_;
         }

         private void ensureMetadataIsMutable() {
            if ((this.bitField0_ & 16) == 0) {
               this.metadata_ = new ArrayList(this.metadata_);
               this.bitField0_ |= 16;
            }

         }

         public List getMetadataList() {
            return this.metadataBuilder_ == null ? Collections.unmodifiableList(this.metadata_) : this.metadataBuilder_.getMessageList();
         }

         public int getMetadataCount() {
            return this.metadataBuilder_ == null ? this.metadata_.size() : this.metadataBuilder_.getCount();
         }

         public UserMetadataItem getMetadata(int index) {
            return this.metadataBuilder_ == null ? (UserMetadataItem)this.metadata_.get(index) : (UserMetadataItem)this.metadataBuilder_.getMessage(index);
         }

         public Builder setMetadata(int index, UserMetadataItem value) {
            if (this.metadataBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureMetadataIsMutable();
               this.metadata_.set(index, value);
               this.onChanged();
            } else {
               this.metadataBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setMetadata(int index, UserMetadataItem.Builder builderForValue) {
            if (this.metadataBuilder_ == null) {
               this.ensureMetadataIsMutable();
               this.metadata_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.metadataBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addMetadata(UserMetadataItem value) {
            if (this.metadataBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureMetadataIsMutable();
               this.metadata_.add(value);
               this.onChanged();
            } else {
               this.metadataBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addMetadata(int index, UserMetadataItem value) {
            if (this.metadataBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureMetadataIsMutable();
               this.metadata_.add(index, value);
               this.onChanged();
            } else {
               this.metadataBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addMetadata(UserMetadataItem.Builder builderForValue) {
            if (this.metadataBuilder_ == null) {
               this.ensureMetadataIsMutable();
               this.metadata_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.metadataBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addMetadata(int index, UserMetadataItem.Builder builderForValue) {
            if (this.metadataBuilder_ == null) {
               this.ensureMetadataIsMutable();
               this.metadata_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.metadataBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllMetadata(Iterable values) {
            if (this.metadataBuilder_ == null) {
               this.ensureMetadataIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.metadata_);
               this.onChanged();
            } else {
               this.metadataBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearMetadata() {
            if (this.metadataBuilder_ == null) {
               this.metadata_ = Collections.emptyList();
               this.bitField0_ &= -17;
               this.onChanged();
            } else {
               this.metadataBuilder_.clear();
            }

            return this;
         }

         public Builder removeMetadata(int index) {
            if (this.metadataBuilder_ == null) {
               this.ensureMetadataIsMutable();
               this.metadata_.remove(index);
               this.onChanged();
            } else {
               this.metadataBuilder_.remove(index);
            }

            return this;
         }

         public UserMetadataItem.Builder getMetadataBuilder(int index) {
            return (UserMetadataItem.Builder)this.getMetadataFieldBuilder().getBuilder(index);
         }

         public UserMetadataItemOrBuilder getMetadataOrBuilder(int index) {
            return this.metadataBuilder_ == null ? (UserMetadataItemOrBuilder)this.metadata_.get(index) : (UserMetadataItemOrBuilder)this.metadataBuilder_.getMessageOrBuilder(index);
         }

         public List getMetadataOrBuilderList() {
            return this.metadataBuilder_ != null ? this.metadataBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.metadata_);
         }

         public UserMetadataItem.Builder addMetadataBuilder() {
            return (UserMetadataItem.Builder)this.getMetadataFieldBuilder().addBuilder(OrcProto.UserMetadataItem.getDefaultInstance());
         }

         public UserMetadataItem.Builder addMetadataBuilder(int index) {
            return (UserMetadataItem.Builder)this.getMetadataFieldBuilder().addBuilder(index, OrcProto.UserMetadataItem.getDefaultInstance());
         }

         public List getMetadataBuilderList() {
            return this.getMetadataFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getMetadataFieldBuilder() {
            if (this.metadataBuilder_ == null) {
               this.metadataBuilder_ = new RepeatedFieldBuilderV3(this.metadata_, (this.bitField0_ & 16) != 0, this.getParentForChildren(), this.isClean());
               this.metadata_ = null;
            }

            return this.metadataBuilder_;
         }

         public boolean hasNumberOfRows() {
            return (this.bitField0_ & 32) != 0;
         }

         public long getNumberOfRows() {
            return this.numberOfRows_;
         }

         public Builder setNumberOfRows(long value) {
            this.bitField0_ |= 32;
            this.numberOfRows_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearNumberOfRows() {
            this.bitField0_ &= -33;
            this.numberOfRows_ = 0L;
            this.onChanged();
            return this;
         }

         private void ensureStatisticsIsMutable() {
            if ((this.bitField0_ & 64) == 0) {
               this.statistics_ = new ArrayList(this.statistics_);
               this.bitField0_ |= 64;
            }

         }

         public List getStatisticsList() {
            return this.statisticsBuilder_ == null ? Collections.unmodifiableList(this.statistics_) : this.statisticsBuilder_.getMessageList();
         }

         public int getStatisticsCount() {
            return this.statisticsBuilder_ == null ? this.statistics_.size() : this.statisticsBuilder_.getCount();
         }

         public ColumnStatistics getStatistics(int index) {
            return this.statisticsBuilder_ == null ? (ColumnStatistics)this.statistics_.get(index) : (ColumnStatistics)this.statisticsBuilder_.getMessage(index);
         }

         public Builder setStatistics(int index, ColumnStatistics value) {
            if (this.statisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStatisticsIsMutable();
               this.statistics_.set(index, value);
               this.onChanged();
            } else {
               this.statisticsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setStatistics(int index, ColumnStatistics.Builder builderForValue) {
            if (this.statisticsBuilder_ == null) {
               this.ensureStatisticsIsMutable();
               this.statistics_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.statisticsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addStatistics(ColumnStatistics value) {
            if (this.statisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStatisticsIsMutable();
               this.statistics_.add(value);
               this.onChanged();
            } else {
               this.statisticsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addStatistics(int index, ColumnStatistics value) {
            if (this.statisticsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureStatisticsIsMutable();
               this.statistics_.add(index, value);
               this.onChanged();
            } else {
               this.statisticsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addStatistics(ColumnStatistics.Builder builderForValue) {
            if (this.statisticsBuilder_ == null) {
               this.ensureStatisticsIsMutable();
               this.statistics_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.statisticsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addStatistics(int index, ColumnStatistics.Builder builderForValue) {
            if (this.statisticsBuilder_ == null) {
               this.ensureStatisticsIsMutable();
               this.statistics_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.statisticsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllStatistics(Iterable values) {
            if (this.statisticsBuilder_ == null) {
               this.ensureStatisticsIsMutable();
               AbstractMessageLite.Builder.addAll(values, this.statistics_);
               this.onChanged();
            } else {
               this.statisticsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearStatistics() {
            if (this.statisticsBuilder_ == null) {
               this.statistics_ = Collections.emptyList();
               this.bitField0_ &= -65;
               this.onChanged();
            } else {
               this.statisticsBuilder_.clear();
            }

            return this;
         }

         public Builder removeStatistics(int index) {
            if (this.statisticsBuilder_ == null) {
               this.ensureStatisticsIsMutable();
               this.statistics_.remove(index);
               this.onChanged();
            } else {
               this.statisticsBuilder_.remove(index);
            }

            return this;
         }

         public ColumnStatistics.Builder getStatisticsBuilder(int index) {
            return (ColumnStatistics.Builder)this.getStatisticsFieldBuilder().getBuilder(index);
         }

         public ColumnStatisticsOrBuilder getStatisticsOrBuilder(int index) {
            return this.statisticsBuilder_ == null ? (ColumnStatisticsOrBuilder)this.statistics_.get(index) : (ColumnStatisticsOrBuilder)this.statisticsBuilder_.getMessageOrBuilder(index);
         }

         public List getStatisticsOrBuilderList() {
            return this.statisticsBuilder_ != null ? this.statisticsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.statistics_);
         }

         public ColumnStatistics.Builder addStatisticsBuilder() {
            return (ColumnStatistics.Builder)this.getStatisticsFieldBuilder().addBuilder(OrcProto.ColumnStatistics.getDefaultInstance());
         }

         public ColumnStatistics.Builder addStatisticsBuilder(int index) {
            return (ColumnStatistics.Builder)this.getStatisticsFieldBuilder().addBuilder(index, OrcProto.ColumnStatistics.getDefaultInstance());
         }

         public List getStatisticsBuilderList() {
            return this.getStatisticsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getStatisticsFieldBuilder() {
            if (this.statisticsBuilder_ == null) {
               this.statisticsBuilder_ = new RepeatedFieldBuilderV3(this.statistics_, (this.bitField0_ & 64) != 0, this.getParentForChildren(), this.isClean());
               this.statistics_ = null;
            }

            return this.statisticsBuilder_;
         }

         public boolean hasRowIndexStride() {
            return (this.bitField0_ & 128) != 0;
         }

         public int getRowIndexStride() {
            return this.rowIndexStride_;
         }

         public Builder setRowIndexStride(int value) {
            this.bitField0_ |= 128;
            this.rowIndexStride_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearRowIndexStride() {
            this.bitField0_ &= -129;
            this.rowIndexStride_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasWriter() {
            return (this.bitField0_ & 256) != 0;
         }

         public int getWriter() {
            return this.writer_;
         }

         public Builder setWriter(int value) {
            this.bitField0_ |= 256;
            this.writer_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearWriter() {
            this.bitField0_ &= -257;
            this.writer_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasEncryption() {
            return (this.bitField0_ & 512) != 0;
         }

         public Encryption getEncryption() {
            if (this.encryptionBuilder_ == null) {
               return this.encryption_ == null ? OrcProto.Encryption.getDefaultInstance() : this.encryption_;
            } else {
               return (Encryption)this.encryptionBuilder_.getMessage();
            }
         }

         public Builder setEncryption(Encryption value) {
            if (this.encryptionBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.encryption_ = value;
               this.onChanged();
            } else {
               this.encryptionBuilder_.setMessage(value);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public Builder setEncryption(Encryption.Builder builderForValue) {
            if (this.encryptionBuilder_ == null) {
               this.encryption_ = builderForValue.build();
               this.onChanged();
            } else {
               this.encryptionBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 512;
            return this;
         }

         public Builder mergeEncryption(Encryption value) {
            if (this.encryptionBuilder_ == null) {
               if ((this.bitField0_ & 512) != 0 && this.encryption_ != null && this.encryption_ != OrcProto.Encryption.getDefaultInstance()) {
                  this.encryption_ = OrcProto.Encryption.newBuilder(this.encryption_).mergeFrom(value).buildPartial();
               } else {
                  this.encryption_ = value;
               }

               this.onChanged();
            } else {
               this.encryptionBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public Builder clearEncryption() {
            if (this.encryptionBuilder_ == null) {
               this.encryption_ = null;
               this.onChanged();
            } else {
               this.encryptionBuilder_.clear();
            }

            this.bitField0_ &= -513;
            return this;
         }

         public Encryption.Builder getEncryptionBuilder() {
            this.bitField0_ |= 512;
            this.onChanged();
            return (Encryption.Builder)this.getEncryptionFieldBuilder().getBuilder();
         }

         public EncryptionOrBuilder getEncryptionOrBuilder() {
            if (this.encryptionBuilder_ != null) {
               return (EncryptionOrBuilder)this.encryptionBuilder_.getMessageOrBuilder();
            } else {
               return this.encryption_ == null ? OrcProto.Encryption.getDefaultInstance() : this.encryption_;
            }
         }

         private SingleFieldBuilderV3 getEncryptionFieldBuilder() {
            if (this.encryptionBuilder_ == null) {
               this.encryptionBuilder_ = new SingleFieldBuilderV3(this.getEncryption(), this.getParentForChildren(), this.isClean());
               this.encryption_ = null;
            }

            return this.encryptionBuilder_;
         }

         public boolean hasCalendar() {
            return (this.bitField0_ & 1024) != 0;
         }

         public CalendarKind getCalendar() {
            CalendarKind result = OrcProto.CalendarKind.valueOf(this.calendar_);
            return result == null ? OrcProto.CalendarKind.UNKNOWN_CALENDAR : result;
         }

         public Builder setCalendar(CalendarKind value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1024;
               this.calendar_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public Builder clearCalendar() {
            this.bitField0_ &= -1025;
            this.calendar_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasSoftwareVersion() {
            return (this.bitField0_ & 2048) != 0;
         }

         public String getSoftwareVersion() {
            Object ref = this.softwareVersion_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.softwareVersion_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getSoftwareVersionBytes() {
            Object ref = this.softwareVersion_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.softwareVersion_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setSoftwareVersion(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2048;
               this.softwareVersion_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearSoftwareVersion() {
            this.bitField0_ &= -2049;
            this.softwareVersion_ = OrcProto.Footer.getDefaultInstance().getSoftwareVersion();
            this.onChanged();
            return this;
         }

         public Builder setSoftwareVersionBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2048;
               this.softwareVersion_ = value;
               this.onChanged();
               return this;
            }
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class PostScript extends GeneratedMessageV3 implements PostScriptOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int FOOTER_LENGTH_FIELD_NUMBER = 1;
      private long footerLength_;
      public static final int COMPRESSION_FIELD_NUMBER = 2;
      private int compression_;
      public static final int COMPRESSION_BLOCK_SIZE_FIELD_NUMBER = 3;
      private long compressionBlockSize_;
      public static final int VERSION_FIELD_NUMBER = 4;
      private Internal.IntList version_;
      private int versionMemoizedSerializedSize;
      public static final int METADATA_LENGTH_FIELD_NUMBER = 5;
      private long metadataLength_;
      public static final int WRITER_VERSION_FIELD_NUMBER = 6;
      private int writerVersion_;
      public static final int STRIPE_STATISTICS_LENGTH_FIELD_NUMBER = 7;
      private long stripeStatisticsLength_;
      public static final int MAGIC_FIELD_NUMBER = 8000;
      private volatile Object magic_;
      private byte memoizedIsInitialized;
      private static final PostScript DEFAULT_INSTANCE = new PostScript();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public PostScript parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new PostScript(input, extensionRegistry);
         }
      };

      private PostScript(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.versionMemoizedSerializedSize = -1;
         this.memoizedIsInitialized = -1;
      }

      private PostScript() {
         this.versionMemoizedSerializedSize = -1;
         this.memoizedIsInitialized = -1;
         this.compression_ = 0;
         this.version_ = emptyIntList();
         this.magic_ = "";
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new PostScript();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private PostScript(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  int limit;
                  switch (tag) {
                     case 0:
                        done = true;
                        continue;
                     case 8:
                        this.bitField0_ |= 1;
                        this.footerLength_ = input.readUInt64();
                        continue;
                     case 16:
                        int rawValue = input.readEnum();
                        CompressionKind value = OrcProto.CompressionKind.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(2, rawValue);
                        } else {
                           this.bitField0_ |= 2;
                           this.compression_ = rawValue;
                        }
                        continue;
                     case 24:
                        this.bitField0_ |= 4;
                        this.compressionBlockSize_ = input.readUInt64();
                        continue;
                     case 32:
                        if ((mutable_bitField0_ & 8) == 0) {
                           this.version_ = newIntList();
                           mutable_bitField0_ |= 8;
                        }

                        this.version_.addInt(input.readUInt32());
                        continue;
                     case 34:
                        int length = input.readRawVarint32();
                        limit = input.pushLimit(length);
                        if ((mutable_bitField0_ & 8) == 0 && input.getBytesUntilLimit() > 0) {
                           this.version_ = newIntList();
                           mutable_bitField0_ |= 8;
                        }
                        break;
                     case 40:
                        this.bitField0_ |= 8;
                        this.metadataLength_ = input.readUInt64();
                        continue;
                     case 48:
                        this.bitField0_ |= 16;
                        this.writerVersion_ = input.readUInt32();
                        continue;
                     case 56:
                        this.bitField0_ |= 32;
                        this.stripeStatisticsLength_ = input.readUInt64();
                        continue;
                     case 64002:
                        ByteString bs = input.readBytes();
                        this.bitField0_ |= 64;
                        this.magic_ = bs;
                        continue;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                        continue;
                  }

                  while(input.getBytesUntilLimit() > 0) {
                     this.version_.addInt(input.readUInt32());
                  }

                  input.popLimit(limit);
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 8) != 0) {
                  this.version_.makeImmutable();
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_PostScript_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_PostScript_fieldAccessorTable.ensureFieldAccessorsInitialized(PostScript.class, Builder.class);
      }

      public boolean hasFooterLength() {
         return (this.bitField0_ & 1) != 0;
      }

      public long getFooterLength() {
         return this.footerLength_;
      }

      public boolean hasCompression() {
         return (this.bitField0_ & 2) != 0;
      }

      public CompressionKind getCompression() {
         CompressionKind result = OrcProto.CompressionKind.valueOf(this.compression_);
         return result == null ? OrcProto.CompressionKind.NONE : result;
      }

      public boolean hasCompressionBlockSize() {
         return (this.bitField0_ & 4) != 0;
      }

      public long getCompressionBlockSize() {
         return this.compressionBlockSize_;
      }

      public List getVersionList() {
         return this.version_;
      }

      public int getVersionCount() {
         return this.version_.size();
      }

      public int getVersion(int index) {
         return this.version_.getInt(index);
      }

      public boolean hasMetadataLength() {
         return (this.bitField0_ & 8) != 0;
      }

      public long getMetadataLength() {
         return this.metadataLength_;
      }

      public boolean hasWriterVersion() {
         return (this.bitField0_ & 16) != 0;
      }

      public int getWriterVersion() {
         return this.writerVersion_;
      }

      public boolean hasStripeStatisticsLength() {
         return (this.bitField0_ & 32) != 0;
      }

      public long getStripeStatisticsLength() {
         return this.stripeStatisticsLength_;
      }

      public boolean hasMagic() {
         return (this.bitField0_ & 64) != 0;
      }

      public String getMagic() {
         Object ref = this.magic_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.magic_ = s;
            }

            return s;
         }
      }

      public ByteString getMagicBytes() {
         Object ref = this.magic_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.magic_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) != 0) {
            output.writeUInt64(1, this.footerLength_);
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeEnum(2, this.compression_);
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeUInt64(3, this.compressionBlockSize_);
         }

         if (this.getVersionList().size() > 0) {
            output.writeUInt32NoTag(34);
            output.writeUInt32NoTag(this.versionMemoizedSerializedSize);
         }

         for(int i = 0; i < this.version_.size(); ++i) {
            output.writeUInt32NoTag(this.version_.getInt(i));
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeUInt64(5, this.metadataLength_);
         }

         if ((this.bitField0_ & 16) != 0) {
            output.writeUInt32(6, this.writerVersion_);
         }

         if ((this.bitField0_ & 32) != 0) {
            output.writeUInt64(7, this.stripeStatisticsLength_);
         }

         if ((this.bitField0_ & 64) != 0) {
            GeneratedMessageV3.writeString(output, 8000, this.magic_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeUInt64Size(1, this.footerLength_);
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeEnumSize(2, this.compression_);
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeUInt64Size(3, this.compressionBlockSize_);
            }

            int dataSize = 0;

            for(int i = 0; i < this.version_.size(); ++i) {
               dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.version_.getInt(i));
            }

            size += dataSize;
            if (!this.getVersionList().isEmpty()) {
               ++size;
               size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
            }

            this.versionMemoizedSerializedSize = dataSize;
            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeUInt64Size(5, this.metadataLength_);
            }

            if ((this.bitField0_ & 16) != 0) {
               size += CodedOutputStream.computeUInt32Size(6, this.writerVersion_);
            }

            if ((this.bitField0_ & 32) != 0) {
               size += CodedOutputStream.computeUInt64Size(7, this.stripeStatisticsLength_);
            }

            if ((this.bitField0_ & 64) != 0) {
               size += GeneratedMessageV3.computeStringSize(8000, this.magic_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof PostScript)) {
            return super.equals(obj);
         } else {
            PostScript other = (PostScript)obj;
            if (this.hasFooterLength() != other.hasFooterLength()) {
               return false;
            } else if (this.hasFooterLength() && this.getFooterLength() != other.getFooterLength()) {
               return false;
            } else if (this.hasCompression() != other.hasCompression()) {
               return false;
            } else if (this.hasCompression() && this.compression_ != other.compression_) {
               return false;
            } else if (this.hasCompressionBlockSize() != other.hasCompressionBlockSize()) {
               return false;
            } else if (this.hasCompressionBlockSize() && this.getCompressionBlockSize() != other.getCompressionBlockSize()) {
               return false;
            } else if (!this.getVersionList().equals(other.getVersionList())) {
               return false;
            } else if (this.hasMetadataLength() != other.hasMetadataLength()) {
               return false;
            } else if (this.hasMetadataLength() && this.getMetadataLength() != other.getMetadataLength()) {
               return false;
            } else if (this.hasWriterVersion() != other.hasWriterVersion()) {
               return false;
            } else if (this.hasWriterVersion() && this.getWriterVersion() != other.getWriterVersion()) {
               return false;
            } else if (this.hasStripeStatisticsLength() != other.hasStripeStatisticsLength()) {
               return false;
            } else if (this.hasStripeStatisticsLength() && this.getStripeStatisticsLength() != other.getStripeStatisticsLength()) {
               return false;
            } else if (this.hasMagic() != other.hasMagic()) {
               return false;
            } else if (this.hasMagic() && !this.getMagic().equals(other.getMagic())) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasFooterLength()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + Internal.hashLong(this.getFooterLength());
            }

            if (this.hasCompression()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.compression_;
            }

            if (this.hasCompressionBlockSize()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashLong(this.getCompressionBlockSize());
            }

            if (this.getVersionCount() > 0) {
               hash = 37 * hash + 4;
               hash = 53 * hash + this.getVersionList().hashCode();
            }

            if (this.hasMetadataLength()) {
               hash = 37 * hash + 5;
               hash = 53 * hash + Internal.hashLong(this.getMetadataLength());
            }

            if (this.hasWriterVersion()) {
               hash = 37 * hash + 6;
               hash = 53 * hash + this.getWriterVersion();
            }

            if (this.hasStripeStatisticsLength()) {
               hash = 37 * hash + 7;
               hash = 53 * hash + Internal.hashLong(this.getStripeStatisticsLength());
            }

            if (this.hasMagic()) {
               hash = 37 * hash + 8000;
               hash = 53 * hash + this.getMagic().hashCode();
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static PostScript parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (PostScript)PARSER.parseFrom(data);
      }

      public static PostScript parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PostScript)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PostScript parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (PostScript)PARSER.parseFrom(data);
      }

      public static PostScript parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PostScript)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PostScript parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (PostScript)PARSER.parseFrom(data);
      }

      public static PostScript parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PostScript)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PostScript parseFrom(InputStream input) throws IOException {
         return (PostScript)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static PostScript parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PostScript)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static PostScript parseDelimitedFrom(InputStream input) throws IOException {
         return (PostScript)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static PostScript parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PostScript)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static PostScript parseFrom(CodedInputStream input) throws IOException {
         return (PostScript)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static PostScript parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PostScript)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(PostScript prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static PostScript getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public PostScript getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements PostScriptOrBuilder {
         private int bitField0_;
         private long footerLength_;
         private int compression_ = 0;
         private long compressionBlockSize_;
         private Internal.IntList version_ = OrcProto.PostScript.emptyIntList();
         private long metadataLength_;
         private int writerVersion_;
         private long stripeStatisticsLength_;
         private Object magic_ = "";

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_PostScript_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_PostScript_fieldAccessorTable.ensureFieldAccessorsInitialized(PostScript.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.PostScript.alwaysUseFieldBuilders) {
            }

         }

         public Builder clear() {
            super.clear();
            this.footerLength_ = 0L;
            this.bitField0_ &= -2;
            this.compression_ = 0;
            this.bitField0_ &= -3;
            this.compressionBlockSize_ = 0L;
            this.bitField0_ &= -5;
            this.version_ = OrcProto.PostScript.emptyIntList();
            this.bitField0_ &= -9;
            this.metadataLength_ = 0L;
            this.bitField0_ &= -17;
            this.writerVersion_ = 0;
            this.bitField0_ &= -33;
            this.stripeStatisticsLength_ = 0L;
            this.bitField0_ &= -65;
            this.magic_ = "";
            this.bitField0_ &= -129;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_PostScript_descriptor;
         }

         public PostScript getDefaultInstanceForType() {
            return OrcProto.PostScript.getDefaultInstance();
         }

         public PostScript build() {
            PostScript result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public PostScript buildPartial() {
            PostScript result = new PostScript(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               result.footerLength_ = this.footerLength_;
               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               to_bitField0_ |= 2;
            }

            result.compression_ = this.compression_;
            if ((from_bitField0_ & 4) != 0) {
               result.compressionBlockSize_ = this.compressionBlockSize_;
               to_bitField0_ |= 4;
            }

            if ((this.bitField0_ & 8) != 0) {
               this.version_.makeImmutable();
               this.bitField0_ &= -9;
            }

            result.version_ = this.version_;
            if ((from_bitField0_ & 16) != 0) {
               result.metadataLength_ = this.metadataLength_;
               to_bitField0_ |= 8;
            }

            if ((from_bitField0_ & 32) != 0) {
               result.writerVersion_ = this.writerVersion_;
               to_bitField0_ |= 16;
            }

            if ((from_bitField0_ & 64) != 0) {
               result.stripeStatisticsLength_ = this.stripeStatisticsLength_;
               to_bitField0_ |= 32;
            }

            if ((from_bitField0_ & 128) != 0) {
               to_bitField0_ |= 64;
            }

            result.magic_ = this.magic_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof PostScript) {
               return this.mergeFrom((PostScript)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(PostScript other) {
            if (other == OrcProto.PostScript.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasFooterLength()) {
                  this.setFooterLength(other.getFooterLength());
               }

               if (other.hasCompression()) {
                  this.setCompression(other.getCompression());
               }

               if (other.hasCompressionBlockSize()) {
                  this.setCompressionBlockSize(other.getCompressionBlockSize());
               }

               if (!other.version_.isEmpty()) {
                  if (this.version_.isEmpty()) {
                     this.version_ = other.version_;
                     this.bitField0_ &= -9;
                  } else {
                     this.ensureVersionIsMutable();
                     this.version_.addAll(other.version_);
                  }

                  this.onChanged();
               }

               if (other.hasMetadataLength()) {
                  this.setMetadataLength(other.getMetadataLength());
               }

               if (other.hasWriterVersion()) {
                  this.setWriterVersion(other.getWriterVersion());
               }

               if (other.hasStripeStatisticsLength()) {
                  this.setStripeStatisticsLength(other.getStripeStatisticsLength());
               }

               if (other.hasMagic()) {
                  this.bitField0_ |= 128;
                  this.magic_ = other.magic_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            PostScript parsedMessage = null;

            try {
               parsedMessage = (PostScript)OrcProto.PostScript.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (PostScript)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasFooterLength() {
            return (this.bitField0_ & 1) != 0;
         }

         public long getFooterLength() {
            return this.footerLength_;
         }

         public Builder setFooterLength(long value) {
            this.bitField0_ |= 1;
            this.footerLength_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearFooterLength() {
            this.bitField0_ &= -2;
            this.footerLength_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasCompression() {
            return (this.bitField0_ & 2) != 0;
         }

         public CompressionKind getCompression() {
            CompressionKind result = OrcProto.CompressionKind.valueOf(this.compression_);
            return result == null ? OrcProto.CompressionKind.NONE : result;
         }

         public Builder setCompression(CompressionKind value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.compression_ = value.getNumber();
               this.onChanged();
               return this;
            }
         }

         public Builder clearCompression() {
            this.bitField0_ &= -3;
            this.compression_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasCompressionBlockSize() {
            return (this.bitField0_ & 4) != 0;
         }

         public long getCompressionBlockSize() {
            return this.compressionBlockSize_;
         }

         public Builder setCompressionBlockSize(long value) {
            this.bitField0_ |= 4;
            this.compressionBlockSize_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearCompressionBlockSize() {
            this.bitField0_ &= -5;
            this.compressionBlockSize_ = 0L;
            this.onChanged();
            return this;
         }

         private void ensureVersionIsMutable() {
            if ((this.bitField0_ & 8) == 0) {
               this.version_ = OrcProto.PostScript.mutableCopy(this.version_);
               this.bitField0_ |= 8;
            }

         }

         public List getVersionList() {
            return (List)((this.bitField0_ & 8) != 0 ? Collections.unmodifiableList(this.version_) : this.version_);
         }

         public int getVersionCount() {
            return this.version_.size();
         }

         public int getVersion(int index) {
            return this.version_.getInt(index);
         }

         public Builder setVersion(int index, int value) {
            this.ensureVersionIsMutable();
            this.version_.setInt(index, value);
            this.onChanged();
            return this;
         }

         public Builder addVersion(int value) {
            this.ensureVersionIsMutable();
            this.version_.addInt(value);
            this.onChanged();
            return this;
         }

         public Builder addAllVersion(Iterable values) {
            this.ensureVersionIsMutable();
            AbstractMessageLite.Builder.addAll(values, (List)this.version_);
            this.onChanged();
            return this;
         }

         public Builder clearVersion() {
            this.version_ = OrcProto.PostScript.emptyIntList();
            this.bitField0_ &= -9;
            this.onChanged();
            return this;
         }

         public boolean hasMetadataLength() {
            return (this.bitField0_ & 16) != 0;
         }

         public long getMetadataLength() {
            return this.metadataLength_;
         }

         public Builder setMetadataLength(long value) {
            this.bitField0_ |= 16;
            this.metadataLength_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMetadataLength() {
            this.bitField0_ &= -17;
            this.metadataLength_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasWriterVersion() {
            return (this.bitField0_ & 32) != 0;
         }

         public int getWriterVersion() {
            return this.writerVersion_;
         }

         public Builder setWriterVersion(int value) {
            this.bitField0_ |= 32;
            this.writerVersion_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearWriterVersion() {
            this.bitField0_ &= -33;
            this.writerVersion_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasStripeStatisticsLength() {
            return (this.bitField0_ & 64) != 0;
         }

         public long getStripeStatisticsLength() {
            return this.stripeStatisticsLength_;
         }

         public Builder setStripeStatisticsLength(long value) {
            this.bitField0_ |= 64;
            this.stripeStatisticsLength_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearStripeStatisticsLength() {
            this.bitField0_ &= -65;
            this.stripeStatisticsLength_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasMagic() {
            return (this.bitField0_ & 128) != 0;
         }

         public String getMagic() {
            Object ref = this.magic_;
            if (!(ref instanceof String)) {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.magic_ = s;
               }

               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getMagicBytes() {
            Object ref = this.magic_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.magic_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setMagic(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 128;
               this.magic_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearMagic() {
            this.bitField0_ &= -129;
            this.magic_ = OrcProto.PostScript.getDefaultInstance().getMagic();
            this.onChanged();
            return this;
         }

         public Builder setMagicBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 128;
               this.magic_ = value;
               this.onChanged();
               return this;
            }
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public static final class FileTail extends GeneratedMessageV3 implements FileTailOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int POSTSCRIPT_FIELD_NUMBER = 1;
      private PostScript postscript_;
      public static final int FOOTER_FIELD_NUMBER = 2;
      private Footer footer_;
      public static final int FILE_LENGTH_FIELD_NUMBER = 3;
      private long fileLength_;
      public static final int POSTSCRIPT_LENGTH_FIELD_NUMBER = 4;
      private long postscriptLength_;
      private byte memoizedIsInitialized;
      private static final FileTail DEFAULT_INSTANCE = new FileTail();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public FileTail parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new FileTail(input, extensionRegistry);
         }
      };

      private FileTail(GeneratedMessageV3.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
      }

      private FileTail() {
         this.memoizedIsInitialized = -1;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
         return new FileTail();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FileTail(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this();
         if (extensionRegistry == null) {
            throw new NullPointerException();
         } else {
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        PostScript.Builder subBuilder = null;
                        if ((this.bitField0_ & 1) != 0) {
                           subBuilder = this.postscript_.toBuilder();
                        }

                        this.postscript_ = (PostScript)input.readMessage(OrcProto.PostScript.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.postscript_);
                           this.postscript_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 1;
                        break;
                     case 18:
                        Footer.Builder subBuilder = null;
                        if ((this.bitField0_ & 2) != 0) {
                           subBuilder = this.footer_.toBuilder();
                        }

                        this.footer_ = (Footer)input.readMessage(OrcProto.Footer.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.footer_);
                           this.footer_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 2;
                        break;
                     case 24:
                        this.bitField0_ |= 4;
                        this.fileLength_ = input.readUInt64();
                        break;
                     case 32:
                        this.bitField0_ |= 8;
                        this.postscriptLength_ = input.readUInt64();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return OrcProto.internal_static_orc_proto_FileTail_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return OrcProto.internal_static_orc_proto_FileTail_fieldAccessorTable.ensureFieldAccessorsInitialized(FileTail.class, Builder.class);
      }

      public boolean hasPostscript() {
         return (this.bitField0_ & 1) != 0;
      }

      public PostScript getPostscript() {
         return this.postscript_ == null ? OrcProto.PostScript.getDefaultInstance() : this.postscript_;
      }

      public PostScriptOrBuilder getPostscriptOrBuilder() {
         return this.postscript_ == null ? OrcProto.PostScript.getDefaultInstance() : this.postscript_;
      }

      public boolean hasFooter() {
         return (this.bitField0_ & 2) != 0;
      }

      public Footer getFooter() {
         return this.footer_ == null ? OrcProto.Footer.getDefaultInstance() : this.footer_;
      }

      public FooterOrBuilder getFooterOrBuilder() {
         return this.footer_ == null ? OrcProto.Footer.getDefaultInstance() : this.footer_;
      }

      public boolean hasFileLength() {
         return (this.bitField0_ & 4) != 0;
      }

      public long getFileLength() {
         return this.fileLength_;
      }

      public boolean hasPostscriptLength() {
         return (this.bitField0_ & 8) != 0;
      }

      public long getPostscriptLength() {
         return this.postscriptLength_;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized == 1) {
            return true;
         } else if (isInitialized == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            output.writeMessage(1, this.getPostscript());
         }

         if ((this.bitField0_ & 2) != 0) {
            output.writeMessage(2, this.getFooter());
         }

         if ((this.bitField0_ & 4) != 0) {
            output.writeUInt64(3, this.fileLength_);
         }

         if ((this.bitField0_ & 8) != 0) {
            output.writeUInt64(4, this.postscriptLength_);
         }

         this.unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) != 0) {
               size += CodedOutputStream.computeMessageSize(1, this.getPostscript());
            }

            if ((this.bitField0_ & 2) != 0) {
               size += CodedOutputStream.computeMessageSize(2, this.getFooter());
            }

            if ((this.bitField0_ & 4) != 0) {
               size += CodedOutputStream.computeUInt64Size(3, this.fileLength_);
            }

            if ((this.bitField0_ & 8) != 0) {
               size += CodedOutputStream.computeUInt64Size(4, this.postscriptLength_);
            }

            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
         }
      }

      public boolean equals(Object obj) {
         if (obj == this) {
            return true;
         } else if (!(obj instanceof FileTail)) {
            return super.equals(obj);
         } else {
            FileTail other = (FileTail)obj;
            if (this.hasPostscript() != other.hasPostscript()) {
               return false;
            } else if (this.hasPostscript() && !this.getPostscript().equals(other.getPostscript())) {
               return false;
            } else if (this.hasFooter() != other.hasFooter()) {
               return false;
            } else if (this.hasFooter() && !this.getFooter().equals(other.getFooter())) {
               return false;
            } else if (this.hasFileLength() != other.hasFileLength()) {
               return false;
            } else if (this.hasFileLength() && this.getFileLength() != other.getFileLength()) {
               return false;
            } else if (this.hasPostscriptLength() != other.hasPostscriptLength()) {
               return false;
            } else if (this.hasPostscriptLength() && this.getPostscriptLength() != other.getPostscriptLength()) {
               return false;
            } else {
               return this.unknownFields.equals(other.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (this.hasPostscript()) {
               hash = 37 * hash + 1;
               hash = 53 * hash + this.getPostscript().hashCode();
            }

            if (this.hasFooter()) {
               hash = 37 * hash + 2;
               hash = 53 * hash + this.getFooter().hashCode();
            }

            if (this.hasFileLength()) {
               hash = 37 * hash + 3;
               hash = 53 * hash + Internal.hashLong(this.getFileLength());
            }

            if (this.hasPostscriptLength()) {
               hash = 37 * hash + 4;
               hash = 53 * hash + Internal.hashLong(this.getPostscriptLength());
            }

            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
         }
      }

      public static FileTail parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
         return (FileTail)PARSER.parseFrom(data);
      }

      public static FileTail parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (FileTail)PARSER.parseFrom(data, extensionRegistry);
      }

      public static FileTail parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (FileTail)PARSER.parseFrom(data);
      }

      public static FileTail parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (FileTail)PARSER.parseFrom(data, extensionRegistry);
      }

      public static FileTail parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (FileTail)PARSER.parseFrom(data);
      }

      public static FileTail parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (FileTail)PARSER.parseFrom(data, extensionRegistry);
      }

      public static FileTail parseFrom(InputStream input) throws IOException {
         return (FileTail)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static FileTail parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (FileTail)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static FileTail parseDelimitedFrom(InputStream input) throws IOException {
         return (FileTail)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static FileTail parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (FileTail)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static FileTail parseFrom(CodedInputStream input) throws IOException {
         return (FileTail)GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static FileTail parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (FileTail)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(FileTail prototype) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new Builder() : (new Builder()).mergeFrom(this);
      }

      protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      public static FileTail getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public FileTail getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements FileTailOrBuilder {
         private int bitField0_;
         private PostScript postscript_;
         private SingleFieldBuilderV3 postscriptBuilder_;
         private Footer footer_;
         private SingleFieldBuilderV3 footerBuilder_;
         private long fileLength_;
         private long postscriptLength_;

         public static final Descriptors.Descriptor getDescriptor() {
            return OrcProto.internal_static_orc_proto_FileTail_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OrcProto.internal_static_orc_proto_FileTail_fieldAccessorTable.ensureFieldAccessorsInitialized(FileTail.class, Builder.class);
         }

         private Builder() {
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (OrcProto.FileTail.alwaysUseFieldBuilders) {
               this.getPostscriptFieldBuilder();
               this.getFooterFieldBuilder();
            }

         }

         public Builder clear() {
            super.clear();
            if (this.postscriptBuilder_ == null) {
               this.postscript_ = null;
            } else {
               this.postscriptBuilder_.clear();
            }

            this.bitField0_ &= -2;
            if (this.footerBuilder_ == null) {
               this.footer_ = null;
            } else {
               this.footerBuilder_.clear();
            }

            this.bitField0_ &= -3;
            this.fileLength_ = 0L;
            this.bitField0_ &= -5;
            this.postscriptLength_ = 0L;
            this.bitField0_ &= -9;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return OrcProto.internal_static_orc_proto_FileTail_descriptor;
         }

         public FileTail getDefaultInstanceForType() {
            return OrcProto.FileTail.getDefaultInstance();
         }

         public FileTail build() {
            FileTail result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public FileTail buildPartial() {
            FileTail result = new FileTail(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) != 0) {
               if (this.postscriptBuilder_ == null) {
                  result.postscript_ = this.postscript_;
               } else {
                  result.postscript_ = (PostScript)this.postscriptBuilder_.build();
               }

               to_bitField0_ |= 1;
            }

            if ((from_bitField0_ & 2) != 0) {
               if (this.footerBuilder_ == null) {
                  result.footer_ = this.footer_;
               } else {
                  result.footer_ = (Footer)this.footerBuilder_.build();
               }

               to_bitField0_ |= 2;
            }

            if ((from_bitField0_ & 4) != 0) {
               result.fileLength_ = this.fileLength_;
               to_bitField0_ |= 4;
            }

            if ((from_bitField0_ & 8) != 0) {
               result.postscriptLength_ = this.postscriptLength_;
               to_bitField0_ |= 8;
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder clone() {
            return (Builder)super.clone();
         }

         public Builder setField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.setField(field, value);
         }

         public Builder clearField(Descriptors.FieldDescriptor field) {
            return (Builder)super.clearField(field);
         }

         public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
            return (Builder)super.clearOneof(oneof);
         }

         public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
            return (Builder)super.setRepeatedField(field, index, value);
         }

         public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
            return (Builder)super.addRepeatedField(field, value);
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof FileTail) {
               return this.mergeFrom((FileTail)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(FileTail other) {
            if (other == OrcProto.FileTail.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasPostscript()) {
                  this.mergePostscript(other.getPostscript());
               }

               if (other.hasFooter()) {
                  this.mergeFooter(other.getFooter());
               }

               if (other.hasFileLength()) {
                  this.setFileLength(other.getFileLength());
               }

               if (other.hasPostscriptLength()) {
                  this.setPostscriptLength(other.getPostscriptLength());
               }

               this.mergeUnknownFields(other.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            FileTail parsedMessage = null;

            try {
               parsedMessage = (FileTail)OrcProto.FileTail.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (FileTail)e.getUnfinishedMessage();
               throw e.unwrapIOException();
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasPostscript() {
            return (this.bitField0_ & 1) != 0;
         }

         public PostScript getPostscript() {
            if (this.postscriptBuilder_ == null) {
               return this.postscript_ == null ? OrcProto.PostScript.getDefaultInstance() : this.postscript_;
            } else {
               return (PostScript)this.postscriptBuilder_.getMessage();
            }
         }

         public Builder setPostscript(PostScript value) {
            if (this.postscriptBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.postscript_ = value;
               this.onChanged();
            } else {
               this.postscriptBuilder_.setMessage(value);
            }

            this.bitField0_ |= 1;
            return this;
         }

         public Builder setPostscript(PostScript.Builder builderForValue) {
            if (this.postscriptBuilder_ == null) {
               this.postscript_ = builderForValue.build();
               this.onChanged();
            } else {
               this.postscriptBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 1;
            return this;
         }

         public Builder mergePostscript(PostScript value) {
            if (this.postscriptBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0 && this.postscript_ != null && this.postscript_ != OrcProto.PostScript.getDefaultInstance()) {
                  this.postscript_ = OrcProto.PostScript.newBuilder(this.postscript_).mergeFrom(value).buildPartial();
               } else {
                  this.postscript_ = value;
               }

               this.onChanged();
            } else {
               this.postscriptBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 1;
            return this;
         }

         public Builder clearPostscript() {
            if (this.postscriptBuilder_ == null) {
               this.postscript_ = null;
               this.onChanged();
            } else {
               this.postscriptBuilder_.clear();
            }

            this.bitField0_ &= -2;
            return this;
         }

         public PostScript.Builder getPostscriptBuilder() {
            this.bitField0_ |= 1;
            this.onChanged();
            return (PostScript.Builder)this.getPostscriptFieldBuilder().getBuilder();
         }

         public PostScriptOrBuilder getPostscriptOrBuilder() {
            if (this.postscriptBuilder_ != null) {
               return (PostScriptOrBuilder)this.postscriptBuilder_.getMessageOrBuilder();
            } else {
               return this.postscript_ == null ? OrcProto.PostScript.getDefaultInstance() : this.postscript_;
            }
         }

         private SingleFieldBuilderV3 getPostscriptFieldBuilder() {
            if (this.postscriptBuilder_ == null) {
               this.postscriptBuilder_ = new SingleFieldBuilderV3(this.getPostscript(), this.getParentForChildren(), this.isClean());
               this.postscript_ = null;
            }

            return this.postscriptBuilder_;
         }

         public boolean hasFooter() {
            return (this.bitField0_ & 2) != 0;
         }

         public Footer getFooter() {
            if (this.footerBuilder_ == null) {
               return this.footer_ == null ? OrcProto.Footer.getDefaultInstance() : this.footer_;
            } else {
               return (Footer)this.footerBuilder_.getMessage();
            }
         }

         public Builder setFooter(Footer value) {
            if (this.footerBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.footer_ = value;
               this.onChanged();
            } else {
               this.footerBuilder_.setMessage(value);
            }

            this.bitField0_ |= 2;
            return this;
         }

         public Builder setFooter(Footer.Builder builderForValue) {
            if (this.footerBuilder_ == null) {
               this.footer_ = builderForValue.build();
               this.onChanged();
            } else {
               this.footerBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 2;
            return this;
         }

         public Builder mergeFooter(Footer value) {
            if (this.footerBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0 && this.footer_ != null && this.footer_ != OrcProto.Footer.getDefaultInstance()) {
                  this.footer_ = OrcProto.Footer.newBuilder(this.footer_).mergeFrom(value).buildPartial();
               } else {
                  this.footer_ = value;
               }

               this.onChanged();
            } else {
               this.footerBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 2;
            return this;
         }

         public Builder clearFooter() {
            if (this.footerBuilder_ == null) {
               this.footer_ = null;
               this.onChanged();
            } else {
               this.footerBuilder_.clear();
            }

            this.bitField0_ &= -3;
            return this;
         }

         public Footer.Builder getFooterBuilder() {
            this.bitField0_ |= 2;
            this.onChanged();
            return (Footer.Builder)this.getFooterFieldBuilder().getBuilder();
         }

         public FooterOrBuilder getFooterOrBuilder() {
            if (this.footerBuilder_ != null) {
               return (FooterOrBuilder)this.footerBuilder_.getMessageOrBuilder();
            } else {
               return this.footer_ == null ? OrcProto.Footer.getDefaultInstance() : this.footer_;
            }
         }

         private SingleFieldBuilderV3 getFooterFieldBuilder() {
            if (this.footerBuilder_ == null) {
               this.footerBuilder_ = new SingleFieldBuilderV3(this.getFooter(), this.getParentForChildren(), this.isClean());
               this.footer_ = null;
            }

            return this.footerBuilder_;
         }

         public boolean hasFileLength() {
            return (this.bitField0_ & 4) != 0;
         }

         public long getFileLength() {
            return this.fileLength_;
         }

         public Builder setFileLength(long value) {
            this.bitField0_ |= 4;
            this.fileLength_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearFileLength() {
            this.bitField0_ &= -5;
            this.fileLength_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasPostscriptLength() {
            return (this.bitField0_ & 8) != 0;
         }

         public long getPostscriptLength() {
            return this.postscriptLength_;
         }

         public Builder setPostscriptLength(long value) {
            this.bitField0_ |= 8;
            this.postscriptLength_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearPostscriptLength() {
            this.bitField0_ &= -9;
            this.postscriptLength_ = 0L;
            this.onChanged();
            return this;
         }

         public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.setUnknownFields(unknownFields);
         }

         public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
            return (Builder)super.mergeUnknownFields(unknownFields);
         }
      }
   }

   public interface BinaryStatisticsOrBuilder extends MessageOrBuilder {
      boolean hasSum();

      long getSum();
   }

   public interface BloomFilterIndexOrBuilder extends MessageOrBuilder {
      List getBloomFilterList();

      BloomFilter getBloomFilter(int var1);

      int getBloomFilterCount();

      List getBloomFilterOrBuilderList();

      BloomFilterOrBuilder getBloomFilterOrBuilder(int var1);
   }

   public interface BloomFilterOrBuilder extends MessageOrBuilder {
      boolean hasNumHashFunctions();

      int getNumHashFunctions();

      List getBitsetList();

      int getBitsetCount();

      long getBitset(int var1);

      boolean hasUtf8Bitset();

      ByteString getUtf8Bitset();
   }

   public interface BoundingBoxOrBuilder extends MessageOrBuilder {
      boolean hasXmin();

      double getXmin();

      boolean hasXmax();

      double getXmax();

      boolean hasYmin();

      double getYmin();

      boolean hasYmax();

      double getYmax();

      boolean hasZmin();

      double getZmin();

      boolean hasZmax();

      double getZmax();

      boolean hasMmin();

      double getMmin();

      boolean hasMmax();

      double getMmax();
   }

   public interface BucketStatisticsOrBuilder extends MessageOrBuilder {
      List getCountList();

      int getCountCount();

      long getCount(int var1);
   }

   public interface CollectionStatisticsOrBuilder extends MessageOrBuilder {
      boolean hasMinChildren();

      long getMinChildren();

      boolean hasMaxChildren();

      long getMaxChildren();

      boolean hasTotalChildren();

      long getTotalChildren();
   }

   public interface ColumnEncodingOrBuilder extends MessageOrBuilder {
      boolean hasKind();

      ColumnEncoding.Kind getKind();

      boolean hasDictionarySize();

      int getDictionarySize();

      boolean hasBloomEncoding();

      int getBloomEncoding();
   }

   public interface ColumnStatisticsOrBuilder extends MessageOrBuilder {
      boolean hasNumberOfValues();

      long getNumberOfValues();

      boolean hasIntStatistics();

      IntegerStatistics getIntStatistics();

      IntegerStatisticsOrBuilder getIntStatisticsOrBuilder();

      boolean hasDoubleStatistics();

      DoubleStatistics getDoubleStatistics();

      DoubleStatisticsOrBuilder getDoubleStatisticsOrBuilder();

      boolean hasStringStatistics();

      StringStatistics getStringStatistics();

      StringStatisticsOrBuilder getStringStatisticsOrBuilder();

      boolean hasBucketStatistics();

      BucketStatistics getBucketStatistics();

      BucketStatisticsOrBuilder getBucketStatisticsOrBuilder();

      boolean hasDecimalStatistics();

      DecimalStatistics getDecimalStatistics();

      DecimalStatisticsOrBuilder getDecimalStatisticsOrBuilder();

      boolean hasDateStatistics();

      DateStatistics getDateStatistics();

      DateStatisticsOrBuilder getDateStatisticsOrBuilder();

      boolean hasBinaryStatistics();

      BinaryStatistics getBinaryStatistics();

      BinaryStatisticsOrBuilder getBinaryStatisticsOrBuilder();

      boolean hasTimestampStatistics();

      TimestampStatistics getTimestampStatistics();

      TimestampStatisticsOrBuilder getTimestampStatisticsOrBuilder();

      boolean hasHasNull();

      boolean getHasNull();

      boolean hasBytesOnDisk();

      long getBytesOnDisk();

      boolean hasCollectionStatistics();

      CollectionStatistics getCollectionStatistics();

      CollectionStatisticsOrBuilder getCollectionStatisticsOrBuilder();

      boolean hasGeospatialStatistics();

      GeospatialStatistics getGeospatialStatistics();

      GeospatialStatisticsOrBuilder getGeospatialStatisticsOrBuilder();
   }

   public interface ColumnarStripeStatisticsOrBuilder extends MessageOrBuilder {
      List getColStatsList();

      ColumnStatistics getColStats(int var1);

      int getColStatsCount();

      List getColStatsOrBuilderList();

      ColumnStatisticsOrBuilder getColStatsOrBuilder(int var1);
   }

   public interface DataMaskOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      List getMaskParametersList();

      int getMaskParametersCount();

      String getMaskParameters(int var1);

      ByteString getMaskParametersBytes(int var1);

      List getColumnsList();

      int getColumnsCount();

      int getColumns(int var1);
   }

   public interface DateStatisticsOrBuilder extends MessageOrBuilder {
      boolean hasMinimum();

      int getMinimum();

      boolean hasMaximum();

      int getMaximum();
   }

   public interface DecimalStatisticsOrBuilder extends MessageOrBuilder {
      boolean hasMinimum();

      String getMinimum();

      ByteString getMinimumBytes();

      boolean hasMaximum();

      String getMaximum();

      ByteString getMaximumBytes();

      boolean hasSum();

      String getSum();

      ByteString getSumBytes();
   }

   public interface DoubleStatisticsOrBuilder extends MessageOrBuilder {
      boolean hasMinimum();

      double getMinimum();

      boolean hasMaximum();

      double getMaximum();

      boolean hasSum();

      double getSum();
   }

   public interface EncryptionKeyOrBuilder extends MessageOrBuilder {
      boolean hasKeyName();

      String getKeyName();

      ByteString getKeyNameBytes();

      boolean hasKeyVersion();

      int getKeyVersion();

      boolean hasAlgorithm();

      EncryptionAlgorithm getAlgorithm();
   }

   public interface EncryptionOrBuilder extends MessageOrBuilder {
      List getMaskList();

      DataMask getMask(int var1);

      int getMaskCount();

      List getMaskOrBuilderList();

      DataMaskOrBuilder getMaskOrBuilder(int var1);

      List getKeyList();

      EncryptionKey getKey(int var1);

      int getKeyCount();

      List getKeyOrBuilderList();

      EncryptionKeyOrBuilder getKeyOrBuilder(int var1);

      List getVariantsList();

      EncryptionVariant getVariants(int var1);

      int getVariantsCount();

      List getVariantsOrBuilderList();

      EncryptionVariantOrBuilder getVariantsOrBuilder(int var1);

      boolean hasKeyProvider();

      KeyProviderKind getKeyProvider();
   }

   public interface EncryptionVariantOrBuilder extends MessageOrBuilder {
      boolean hasRoot();

      int getRoot();

      boolean hasKey();

      int getKey();

      boolean hasEncryptedKey();

      ByteString getEncryptedKey();

      List getStripeStatisticsList();

      Stream getStripeStatistics(int var1);

      int getStripeStatisticsCount();

      List getStripeStatisticsOrBuilderList();

      StreamOrBuilder getStripeStatisticsOrBuilder(int var1);

      boolean hasFileStatistics();

      ByteString getFileStatistics();
   }

   public interface FileStatisticsOrBuilder extends MessageOrBuilder {
      List getColumnList();

      ColumnStatistics getColumn(int var1);

      int getColumnCount();

      List getColumnOrBuilderList();

      ColumnStatisticsOrBuilder getColumnOrBuilder(int var1);
   }

   public interface FileTailOrBuilder extends MessageOrBuilder {
      boolean hasPostscript();

      PostScript getPostscript();

      PostScriptOrBuilder getPostscriptOrBuilder();

      boolean hasFooter();

      Footer getFooter();

      FooterOrBuilder getFooterOrBuilder();

      boolean hasFileLength();

      long getFileLength();

      boolean hasPostscriptLength();

      long getPostscriptLength();
   }

   public interface FooterOrBuilder extends MessageOrBuilder {
      boolean hasHeaderLength();

      long getHeaderLength();

      boolean hasContentLength();

      long getContentLength();

      List getStripesList();

      StripeInformation getStripes(int var1);

      int getStripesCount();

      List getStripesOrBuilderList();

      StripeInformationOrBuilder getStripesOrBuilder(int var1);

      List getTypesList();

      Type getTypes(int var1);

      int getTypesCount();

      List getTypesOrBuilderList();

      TypeOrBuilder getTypesOrBuilder(int var1);

      List getMetadataList();

      UserMetadataItem getMetadata(int var1);

      int getMetadataCount();

      List getMetadataOrBuilderList();

      UserMetadataItemOrBuilder getMetadataOrBuilder(int var1);

      boolean hasNumberOfRows();

      long getNumberOfRows();

      List getStatisticsList();

      ColumnStatistics getStatistics(int var1);

      int getStatisticsCount();

      List getStatisticsOrBuilderList();

      ColumnStatisticsOrBuilder getStatisticsOrBuilder(int var1);

      boolean hasRowIndexStride();

      int getRowIndexStride();

      boolean hasWriter();

      int getWriter();

      boolean hasEncryption();

      Encryption getEncryption();

      EncryptionOrBuilder getEncryptionOrBuilder();

      boolean hasCalendar();

      CalendarKind getCalendar();

      boolean hasSoftwareVersion();

      String getSoftwareVersion();

      ByteString getSoftwareVersionBytes();
   }

   public interface GeospatialStatisticsOrBuilder extends MessageOrBuilder {
      boolean hasBbox();

      BoundingBox getBbox();

      BoundingBoxOrBuilder getBboxOrBuilder();

      List getGeospatialTypesList();

      int getGeospatialTypesCount();

      int getGeospatialTypes(int var1);
   }

   public interface IntegerStatisticsOrBuilder extends MessageOrBuilder {
      boolean hasMinimum();

      long getMinimum();

      boolean hasMaximum();

      long getMaximum();

      boolean hasSum();

      long getSum();
   }

   public interface MetadataOrBuilder extends MessageOrBuilder {
      List getStripeStatsList();

      StripeStatistics getStripeStats(int var1);

      int getStripeStatsCount();

      List getStripeStatsOrBuilderList();

      StripeStatisticsOrBuilder getStripeStatsOrBuilder(int var1);
   }

   public interface PostScriptOrBuilder extends MessageOrBuilder {
      boolean hasFooterLength();

      long getFooterLength();

      boolean hasCompression();

      CompressionKind getCompression();

      boolean hasCompressionBlockSize();

      long getCompressionBlockSize();

      List getVersionList();

      int getVersionCount();

      int getVersion(int var1);

      boolean hasMetadataLength();

      long getMetadataLength();

      boolean hasWriterVersion();

      int getWriterVersion();

      boolean hasStripeStatisticsLength();

      long getStripeStatisticsLength();

      boolean hasMagic();

      String getMagic();

      ByteString getMagicBytes();
   }

   public interface RowIndexEntryOrBuilder extends MessageOrBuilder {
      List getPositionsList();

      int getPositionsCount();

      long getPositions(int var1);

      boolean hasStatistics();

      ColumnStatistics getStatistics();

      ColumnStatisticsOrBuilder getStatisticsOrBuilder();
   }

   public interface RowIndexOrBuilder extends MessageOrBuilder {
      List getEntryList();

      RowIndexEntry getEntry(int var1);

      int getEntryCount();

      List getEntryOrBuilderList();

      RowIndexEntryOrBuilder getEntryOrBuilder(int var1);
   }

   public interface StreamOrBuilder extends MessageOrBuilder {
      boolean hasKind();

      Stream.Kind getKind();

      boolean hasColumn();

      int getColumn();

      boolean hasLength();

      long getLength();
   }

   public interface StringPairOrBuilder extends MessageOrBuilder {
      boolean hasKey();

      String getKey();

      ByteString getKeyBytes();

      boolean hasValue();

      String getValue();

      ByteString getValueBytes();
   }

   public interface StringStatisticsOrBuilder extends MessageOrBuilder {
      boolean hasMinimum();

      String getMinimum();

      ByteString getMinimumBytes();

      boolean hasMaximum();

      String getMaximum();

      ByteString getMaximumBytes();

      boolean hasSum();

      long getSum();

      boolean hasLowerBound();

      String getLowerBound();

      ByteString getLowerBoundBytes();

      boolean hasUpperBound();

      String getUpperBound();

      ByteString getUpperBoundBytes();
   }

   public interface StripeEncryptionVariantOrBuilder extends MessageOrBuilder {
      List getStreamsList();

      Stream getStreams(int var1);

      int getStreamsCount();

      List getStreamsOrBuilderList();

      StreamOrBuilder getStreamsOrBuilder(int var1);

      List getEncodingList();

      ColumnEncoding getEncoding(int var1);

      int getEncodingCount();

      List getEncodingOrBuilderList();

      ColumnEncodingOrBuilder getEncodingOrBuilder(int var1);
   }

   public interface StripeFooterOrBuilder extends MessageOrBuilder {
      List getStreamsList();

      Stream getStreams(int var1);

      int getStreamsCount();

      List getStreamsOrBuilderList();

      StreamOrBuilder getStreamsOrBuilder(int var1);

      List getColumnsList();

      ColumnEncoding getColumns(int var1);

      int getColumnsCount();

      List getColumnsOrBuilderList();

      ColumnEncodingOrBuilder getColumnsOrBuilder(int var1);

      boolean hasWriterTimezone();

      String getWriterTimezone();

      ByteString getWriterTimezoneBytes();

      List getEncryptionList();

      StripeEncryptionVariant getEncryption(int var1);

      int getEncryptionCount();

      List getEncryptionOrBuilderList();

      StripeEncryptionVariantOrBuilder getEncryptionOrBuilder(int var1);
   }

   public interface StripeInformationOrBuilder extends MessageOrBuilder {
      boolean hasOffset();

      long getOffset();

      boolean hasIndexLength();

      long getIndexLength();

      boolean hasDataLength();

      long getDataLength();

      boolean hasFooterLength();

      long getFooterLength();

      boolean hasNumberOfRows();

      long getNumberOfRows();

      boolean hasEncryptStripeId();

      long getEncryptStripeId();

      List getEncryptedLocalKeysList();

      int getEncryptedLocalKeysCount();

      ByteString getEncryptedLocalKeys(int var1);
   }

   public interface StripeStatisticsOrBuilder extends MessageOrBuilder {
      List getColStatsList();

      ColumnStatistics getColStats(int var1);

      int getColStatsCount();

      List getColStatsOrBuilderList();

      ColumnStatisticsOrBuilder getColStatsOrBuilder(int var1);
   }

   public interface TimestampStatisticsOrBuilder extends MessageOrBuilder {
      boolean hasMinimum();

      long getMinimum();

      boolean hasMaximum();

      long getMaximum();

      boolean hasMinimumUtc();

      long getMinimumUtc();

      boolean hasMaximumUtc();

      long getMaximumUtc();

      boolean hasMinimumNanos();

      int getMinimumNanos();

      boolean hasMaximumNanos();

      int getMaximumNanos();
   }

   public interface TypeOrBuilder extends MessageOrBuilder {
      boolean hasKind();

      Type.Kind getKind();

      List getSubtypesList();

      int getSubtypesCount();

      int getSubtypes(int var1);

      List getFieldNamesList();

      int getFieldNamesCount();

      String getFieldNames(int var1);

      ByteString getFieldNamesBytes(int var1);

      boolean hasMaximumLength();

      int getMaximumLength();

      boolean hasPrecision();

      int getPrecision();

      boolean hasScale();

      int getScale();

      List getAttributesList();

      StringPair getAttributes(int var1);

      int getAttributesCount();

      List getAttributesOrBuilderList();

      StringPairOrBuilder getAttributesOrBuilder(int var1);

      boolean hasCrs();

      String getCrs();

      ByteString getCrsBytes();

      boolean hasAlgorithm();

      Type.EdgeInterpolationAlgorithm getAlgorithm();
   }

   public interface UserMetadataItemOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      boolean hasValue();

      ByteString getValue();
   }
}
